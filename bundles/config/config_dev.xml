<?xml version="1.0" encoding="UTF-8" ?>
<eef>
  <config Schema="2.0" EnterpriseVersion="'7.6.50'">
      <collections Count="19">
          <collection Name="courses">
              <bad_urls><![CDATA[
contains:SQ_PAINT_LAYOUT_NAME=structure
contains:sq_content_src
              ]]></bad_urls>
              <good_urls><![CDATA[
http://courses.scu.edu.au/
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="default_collection">
              <bad_urls><![CDATA[
http://staff.scu.edu.au/
http://study.scu.edu.au/
              ]]></bad_urls>
              <good_urls><![CDATA[
/
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="library">
              <bad_urls><![CDATA[

              ]]></bad_urls>
              <good_urls><![CDATA[
http://libguides.scu.edu.au/
http://uat.scu.edu.au/library
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="manager_discovery">
              <bad_urls><![CDATA[

              ]]></bad_urls>
              <good_urls><![CDATA[
http://discover.scu.edu.au/
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="myscu">
              <bad_urls><![CDATA[

              ]]></bad_urls>
              <good_urls><![CDATA[
https://learn-stage.scu.edu.au/
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="policies">
              <bad_urls><![CDATA[

              ]]></bad_urls>
              <good_urls><![CDATA[
http://policies.scu.edu.au/
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="rss">
              <bad_urls><![CDATA[

              ]]></bad_urls>
              <good_urls><![CDATA[
^http://www.scu.edu.au/news/media.rss$
http://study.scu.edu.au/classifieds/studyclassifieds.rss
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="scu">
              <bad_urls><![CDATA[
http://uat.scu.edu.au/news/media.rss
#http://staff.scu.edu.au/
#http://study.scu.edu.au/
contains:sq_content_src
              ]]></bad_urls>
              <good_urls><![CDATA[
http://uat.scu.edu.au/
http://staff.uat.scu.edu.au/
http://study.uat.scu.edu.au/
http://discover.scu.edu.au/
http://epubs.scu.edu.au/
http://libguides.scu.edu.au/
http://policies.scu.edu.au/
http://scucollege.scu.edu.au/
http://dev.courses.scu.edu.au/
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="scu_test">
              <bad_urls><![CDATA[

              ]]></bad_urls>
              <good_urls><![CDATA[
http://scu.edu.au/
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="service-desk">
              <bad_urls><![CDATA[
regexp:/hc/en-us/requests/new
              ]]></bad_urls>
              <good_urls><![CDATA[
https://servicedesk.scu.edu.au/hc/en-us/
http://uat.scu.edu.au/it/
https://learn.scu.edu.au/webapps/portal/execute/tabs/tabAction?tabId=_46449_1&tab_tab_group_id=_398_1
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="squiz-courses">
              <bad_urls><![CDATA[
contains:SQ_PAINT_LAYOUT_NAME=structure
contains:sq_content_src
              ]]></bad_urls>
              <good_urls><![CDATA[
http://dev.courses.scu.edu.au/courses
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="squiz-courses-dev">
              <bad_urls><![CDATA[
#any units ending in an alpha or a number with length <=3
regexp:([aA-zZ]|[0-9]{1,3})$
contains:SQ_PAINT_LAYOUT_NAME=structure
contains:sq_content_src
              ]]></bad_urls>
              <good_urls><![CDATA[
http://dev.courses.scu.edu.au/courses
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="squiz-units">
              <bad_urls><![CDATA[
contains:sq_content_src
              ]]></bad_urls>
              <good_urls><![CDATA[
http://dev.courses.scu.edu.au/units
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="squiz-units-dev">
              <bad_urls><![CDATA[
#any units ending in an alpha or a number with length <=3
regexp:([aA-zZ]|[0-9]{1,3})$
contains:sq_content_src
              ]]></bad_urls>
              <good_urls><![CDATA[
http://dev.courses.scu.edu.au/units
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="staff">
              <bad_urls><![CDATA[
#http://scu.edu.au/
              ]]></bad_urls>
              <good_urls><![CDATA[
http://staff.uat.scu.edu.au/
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="staff_directory">
              <bad_urls><![CDATA[

              ]]></bad_urls>
              <good_urls><![CDATA[
http://uat.scu.edu.au/staffdirectory/
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="student">
              <bad_urls><![CDATA[

              ]]></bad_urls>
              <good_urls><![CDATA[
http://study.uat.scu.edu.au/
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="teaching-exemplars">
              <bad_urls><![CDATA[
#need to block drafts???
              ]]></bad_urls>
              <good_urls><![CDATA[
http://www.scu.edu.au/DEVsites/teachinglearning/tlc/exemplars
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
          <collection Name="test-secure">
              <bad_urls><![CDATA[

              ]]></bad_urls>
              <good_urls><![CDATA[
http://www.scu.edu.au/GSA-test-secure.html
              ]]></good_urls>
              <prerequisite_results><![CDATA[
20
              ]]></prerequisite_results>
              <testwords><![CDATA[

              ]]></testwords>
          </collection>
      </collections>
      <frontends Count="12">
          <frontend Name="course_search">
              <default_language><![CDATA[
'en'
              ]]></default_language>
              <profile_sheet><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '0', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet>
              <profile_sheet.en><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '0', 'show_bottom_search_box': '1', 'show_category': '1', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet.en>
              <access_control_allow_origin><![CDATA[


              ]]></access_control_allow_origin>
              <badurls_noreturn><![CDATA[
contains:www.scu.edu.au/services/studentservices/sou/sched
contains:SQ_PAINT_LAYOUT_NAME=structure
contains:utm_source=Alumni
regexp:[aA-zZ]$
              ]]></badurls_noreturn>
              <content_type><![CDATA[
text/html
              ]]></content_type>
              <domain_filter><![CDATA[

              ]]></domain_filter>
              <filetype_filter><![CDATA[

              ]]></filetype_filter>
              <good_ips><![CDATA[
0.0.0.0/0

              ]]></good_ips>
              <googlematch><![CDATA[
engineering,KeywordMatch,http://courses.scu.edu.au/courses/bachelor-of-forest-science-and-management/2016,Engineering!

              ]]></googlematch>
              <lang_filter><![CDATA[

              ]]></lang_filter>
              <metatag_filter><![CDATA[

              ]]></metatag_filter>
              <query_expansion_filter><![CDATA[
QE_FULL

              ]]></query_expansion_filter>
              <query_expansion_meta_filter><![CDATA[
QE_META_NONE

              ]]></query_expansion_meta_filter>
              <scoring_policy_filter><![CDATA[

              ]]></scoring_policy_filter>
              <star_wildcard_default_filter><![CDATA[
1

              ]]></star_wildcard_default_filter>
              <stylesheet><![CDATA[
<!-- *** START OF STYLESHEET *** -->

<!-- **********************************************************************
 XSL to format the search output for Google Search Appliance
 XHTML/XHTML-MP Version (15 September 2006)
     ********************************************************************** -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">

<!-- **********************************************************************
 Include customer-onebox.xsl, which is auto-generated from the customer's
 set of OneBox Module definitions, and in turn invokes either the default
 OneBox template, or the customer's:
     ********************************************************************** -->
<xsl:include href="customer-onebox.xsl"/>

<!-- **********************************************************************
 Choose output media: handheld (default is blank). Use handheld only for
 dedicated handheld media - css/markup will be minimized. Always adjust the
 xsl:output selection (below) when changing this.
     ********************************************************************** -->
<xsl:variable name="media"></xsl:variable>

<!-- **********************************************************************
 Switch to XHTML Mobile if setting variable media to handheld.
 This can be configured automatically once XSLT 2.0 is supported.
     ********************************************************************** -->
<xsl:output method="xml" omit-xml-declaration="yes" indent="yes" media-type="text/html" />
<!--
<xsl:output method="xml" omit-xml-declaration="yes" indent="no" media-type="text/html" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN"/>
<xsl:output method="xml" omit-xml-declaration="no" indent="no" doctype-system="http://www.wapforum.org/DTD/xhtml-mobile10.dtd" doctype-public="-//WAPFORUM//DTD XHTML Mobile 1.0//EN"/>
-->

<!-- **********************************************************************
 Logo setup (can be customized)
     - whether to show logo: 0 for FALSE, 1 (or non-zero) for TRUE
     - use CSS values for height and width properties
     ********************************************************************** -->
<xsl:variable name="show_logo">0</xsl:variable>
<xsl:variable name="logo_url">images/Title_Left.gif</xsl:variable>
<xsl:variable name="logo_width">200px</xsl:variable>
<xsl:variable name="logo_height">78px</xsl:variable>
<xsl:variable name="logo_url_sm">http://www.google.com/xhtml/images/google.gif</xsl:variable>
<xsl:variable name="logo_width_sm">85px</xsl:variable>
<xsl:variable name="logo_height_sm">35px</xsl:variable>
<xsl:variable name="logo_title">Go to Google Home</xsl:variable>
<xsl:variable name="logo_alt">Google</xsl:variable>

<!-- **********************************************************************
 Global Style variables (can be customized): '' for using browser's default
     - use CSS values for background, color, font-family, and
       text-size properties
     ********************************************************************** -->
<xsl:variable name="global_font">Arial,sans-serif</xsl:variable>
<xsl:variable name="global_font_size">1em</xsl:variable>
<xsl:variable name="global_bg_color">#fff</xsl:variable>
<xsl:variable name="global_text_color">#000</xsl:variable>
<xsl:variable name="global_link_color">#00c</xsl:variable>
<xsl:variable name="global_vlink_color">#551a8b</xsl:variable>
<xsl:variable name="global_alink_color">#f00</xsl:variable>
<xsl:variable name="global_co_color">#2f2f2f</xsl:variable>

<!-- **********************************************************************
 Include CSS vs. embedding (default is 0 - embed)
     - Can enable/disable without unsetting include prefix.
     - Prefix points to location of search.css, advanced.css, handheld.css
       (Example: http://www.google.com/style/)
     ********************************************************************** -->
<xsl:variable name="style_include">0</xsl:variable>
<xsl:variable name="style_include_prefix"></xsl:variable>

<!-- **********************************************************************
 Result page components (can be customized)
     - whether to show a component: 0 for FALSE, non-zero (e.g., 1) for TRUE
     - use CSS values for background, color and text-size properties
     ********************************************************************** -->

<!-- *** choose result page header: '', 'provided', 'mine', or 'both' *** -->
<xsl:variable name="choose_result_page_header">both</xsl:variable>

<!-- *** customize provided result page header *** -->
<xsl:variable name="show_swr_link">1</xsl:variable>
<xsl:variable name="swr_search_anchor_text">Search Within Results</xsl:variable>
<xsl:variable name="show_result_page_adv_link">1</xsl:variable>
<xsl:variable name="adv_search_anchor_text">Advanced Search</xsl:variable>
<xsl:variable name="show_result_page_help_link">1</xsl:variable>
<xsl:variable name="search_help_anchor_text">Search Tips</xsl:variable>
<xsl:variable name="show_alerts_link">0</xsl:variable>
<xsl:variable name="alerts_anchor_text">Alerts</xsl:variable>

<!-- *** search boxes (size in # of characters) *** -->
<xsl:variable name="show_top_search_box">0</xsl:variable>
<xsl:variable name="show_bottom_search_box">0</xsl:variable>
<xsl:variable name="search_box_size">32</xsl:variable>

<!-- *** choose search button type: 'text' or 'image' *** -->
<xsl:variable name="choose_search_button">text</xsl:variable>
<xsl:variable name="search_button_text">
  <xsl:choose>
    <xsl:when test="$media = 'handheld'">Search</xsl:when>
    <xsl:otherwise>Search</xsl:otherwise>
  </xsl:choose>
</xsl:variable>
<xsl:variable name="search_button_image_url"></xsl:variable>
<xsl:variable name="search_collections_xslt"></xsl:variable>

<!-- *** search info bars *** -->
<xsl:variable name="show_search_info">1</xsl:variable>

<!-- *** choose separation bar: 'ltblue', 'blue', 'line', 'nothing' *** -->
<xsl:variable name="choose_sep_bar">ltblue</xsl:variable>
<xsl:variable name="sep_bar_std_text">Search</xsl:variable>
<xsl:variable name="sep_bar_adv_text">Advanced Search</xsl:variable>
<xsl:variable name="sep_bar_error_text">Error</xsl:variable>

<!-- *** navigation bars: '', 'google', 'link', or 'simple'*** -->
<xsl:variable name="show_top_navigation">1</xsl:variable>
<xsl:variable name="choose_bottom_navigation">link</xsl:variable>

<!-- *** sort by date/relevance *** -->
<xsl:variable name="show_sort_by">1</xsl:variable>

<!-- *** spelling suggestions *** -->
<xsl:variable name="show_spelling">1</xsl:variable>
<xsl:variable name="spelling_text">Did you mean:</xsl:variable>
<xsl:variable name="spelling_text_color">#c00</xsl:variable>

<!-- *** synonyms suggestions *** -->
<xsl:variable name="show_synonyms">1</xsl:variable>
<xsl:variable name="synonyms_text">You could also try:</xsl:variable>
<xsl:variable name="synonyms_text_color">#c00</xsl:variable>

<!-- *** keymatch suggestions *** -->
<xsl:variable name="show_keymatch">1</xsl:variable>
<xsl:variable name="keymatch_text">KeyMatch</xsl:variable>
<xsl:variable name="keymatch_text_color">#25a</xsl:variable>
<xsl:variable name="keymatch_bg_color">#e8e8ff</xsl:variable>
<xsl:variable name="trim_keymatch_link">
  <xsl:choose>
    <xsl:when test="$media = 'handheld'">1</xsl:when>
    <xsl:otherwise>0</xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- *** Google Desktop integration *** -->
<xsl:variable name="egds_show_search_tabs">
  <xsl:choose>
    <xsl:when test="$media = 'handheld'">0</xsl:when>
    <xsl:otherwise>1</xsl:otherwise>
  </xsl:choose>
</xsl:variable>
<xsl:variable name="egds_appliance_tab_label">Appliance</xsl:variable>
<xsl:variable name="egds_show_desktop_results">0</xsl:variable>

<!--*** onebox information *** -->
<xsl:variable name="show_onebox">1</xsl:variable>

<!-- *** ASR enabling *** -->
<xsl:variable name="show_asr">0</xsl:variable>

<!-- **********************************************************************
 Result elements (can be customized)
     - whether to show an element ('1' for yes, '0' for no)
     - use CSS values for color, font-family and text-size properties
     ********************************************************************** -->

<!-- *** result title and snippet *** -->
<xsl:variable name="show_res_title">1</xsl:variable>
<xsl:variable name="res_title_color">#00c</xsl:variable>
<xsl:variable name="res_title_size">1.35em</xsl:variable>
<xsl:variable name="res_type_size">.85em</xsl:variable>
<xsl:variable name="show_res_snippet">1</xsl:variable>
<xsl:variable name="res_snippet_size">1.05em</xsl:variable>

<!-- *** keyword match (in title or snippet) *** -->
<xsl:variable name="res_keyword_color"></xsl:variable>
<xsl:variable name="res_keyword_size"></xsl:variable>
<xsl:variable name="res_keyword_format">strong</xsl:variable>

<!-- *** link URL *** -->
<xsl:variable name="show_res_url">1</xsl:variable>
<xsl:variable name="res_url_color">#008000</xsl:variable>
<xsl:variable name="res_url_size">1.05em</xsl:variable>
<xsl:variable name="truncate_result_urls">1</xsl:variable>
<xsl:variable name="truncate_result_url_length">100</xsl:variable>

<!-- *** misc elements *** -->
<xsl:variable name="show_meta_tags">0</xsl:variable>
<xsl:variable name="show_res_size">
  <xsl:choose>
    <xsl:when test="$media = 'handheld'">0</xsl:when>
    <xsl:otherwise>1</xsl:otherwise>
  </xsl:choose>
</xsl:variable>
<xsl:variable name="show_res_date">
  <xsl:choose>
    <xsl:when test="$media = 'handheld'">0</xsl:when>
    <xsl:otherwise>1</xsl:otherwise>
  </xsl:choose>
</xsl:variable>
<xsl:variable name="show_res_cache">0</xsl:variable>

<!-- *** used in result cache link, similar pages link, and description *** -->
<xsl:variable name="faint_color">#77c</xsl:variable>

<!-- *** show secure results radio button *** -->
<xsl:variable name="show_secure_radio">0</xsl:variable>

<!-- *** show suggestions (remote aut-completions) *** -->
<xsl:variable name="show_suggest">0</xsl:variable>

<!-- **********************************************************************
 Other variables (can be customized)
     ********************************************************************** -->

<!-- *** show favicon *** -->
<xsl:variable name="show_favicon">1</xsl:variable>
<xsl:variable name="favicon">http://www.google.com/favicon.ico</xsl:variable>

<!-- *** use accesskeys *** -->
<xsl:variable name="use_accesskeys">1</xsl:variable>

<!-- *** show skip links *** -->
<xsl:variable name="show_skip_links">1</xsl:variable>

<!-- *** page title *** -->
<xsl:variable name="home_page_title">Search Home</xsl:variable>
<xsl:variable name="result_page_title">Search Results</xsl:variable>
<xsl:variable name="adv_page_title">Advanced Search</xsl:variable>
<xsl:variable name="error_page_title">Error</xsl:variable>
<xsl:variable name="swr_page_title">Search Within Results</xsl:variable>

<!-- *** choose adv_search page header: '', 'provided', 'mine', or 'both' *** -->
<xsl:variable name="choose_adv_search_page_header">both</xsl:variable>

<!-- *** cached page header text *** -->
<xsl:variable name="cached_page_header_text">This is the cached copy of</xsl:variable>

<!-- *** error message text *** -->
<xsl:variable name="server_error_msg_text">A server error has occurred.</xsl:variable>
<xsl:variable name="server_error_des_text">Check server response code in details.</xsl:variable>
<xsl:variable name="xml_error_msg_text">Unknown XML result type.</xsl:variable>
<xsl:variable name="xml_error_des_text">View page source to see the offending XML.</xsl:variable>

<!-- *** advanced search page panel background color *** -->
<xsl:variable name="adv_search_panel_bgcolor">#cbdced</xsl:variable>

<!-- *** dynamic result cluster options *** -->
<xsl:variable name="show_res_clusters">0</xsl:variable>
<xsl:variable name="res_cluster_position">right</xsl:variable>

<!-- *** javascript files to output - dynamically collected. *** -->
<xsl:variable name="js_files">
  <xsl:if test="$show_res_clusters!='0'">|common|xmlhttp|uri|cluster|</xsl:if>
  <xsl:if test="$show_suggest!='0'">|suggest_js|</xsl:if>
  <xsl:if test="$show_asr!='0'">|clicklog_compiled|</xsl:if>
</xsl:variable>

<!-- SCU Variables -->
<!-- get the environment variables for this front end -->
<xsl:variable name="hideYear" select="'2018'"/>
<xsl:include href="env_variables" />

<!-- **********************************************************************
 My global page header/footer (can be customized)
     ********************************************************************** -->
<xsl:template name="my_page_header">
  <!-- *** add your xhtml here - suggest styling via #ph (header) or .phf (header/footer) -->
</xsl:template>

<xsl:template name="my_page_footer">
  <!-- *** add your xhtml here - suggest styling via #pf (footer) or .phf (header/footer) -->
</xsl:template>

<!-- **********************************************************************
 Logo template (can be customized)
     ********************************************************************** -->
<xsl:template name="logo">
  <h1>
    <xsl:if test="$media != 'handheld'"><xsl:attribute name="id">lg</xsl:attribute></xsl:if>
    <xsl:choose>
      <xsl:when test="$media = 'handheld'">
        <img src="{$logo_url_sm}" width="{$logo_width_sm}" height="{$logo_height_sm}" title="{$logo_alt}"/>
      </xsl:when>
      <xsl:when test="/GSP/CUSTOM/HOME">
        <span title="{$logo_alt}"><xsl:value-of select="$logo_alt"/></span>
      </xsl:when>
      <xsl:otherwise>
        <a href="{$home_url}" title="{$logo_title}"><xsl:value-of select="$logo_alt"/></a>
      </xsl:otherwise>
    </xsl:choose>
  </h1>
</xsl:template>

<!-- **********************************************************************
 Skip links (can be customized)
     ********************************************************************** -->
<xsl:template name="skip_links">
  <xsl:variable name="form_id">
    <xsl:choose>
      <xsl:when test="$show_top_search_box != '0'">sf</xsl:when>
      <xsl:when test="$show_bottom_search_box != '0'">sb</xsl:when>
      <xsl:otherwise></xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <xsl:if test="$form_id != '' or count(RES/R)>0">
    <xsl:variable name="skip_sep">
      <xsl:if test="$form_id != '' and count(RES/R)>0"><xsl:text>, </xsl:text></xsl:if>
    </xsl:variable>
    <p id="sk">
      <xsl:text>Skip to: </xsl:text>
      <xsl:if test="$form_id != ''"><a href="#{$form_id}">Query</a></xsl:if>
      <xsl:value-of select="$skip_sep"/>
      <xsl:if test="count(RES/R)>0"><a href="#re">Results</a></xsl:if>
      <xsl:text>.</xsl:text>
    </p>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Search result page header (can be customized): logo and search box
     ********************************************************************** -->
<xsl:template name="result_page_header">
  <xsl:if test="$show_logo != '0'">
    <xsl:call-template name="logo"/>
  </xsl:if>
  <xsl:if test="$media != 'handheld'">
    <xsl:if test="$show_skip_links != '0'">
      <xsl:call-template name="skip_links"/>
    </xsl:if>
    <xsl:if test="$show_top_search_box != '0'">
      <xsl:call-template name="search_box">
        <xsl:with-param name="type" select="'std_top'"/>
      </xsl:call-template>
    </xsl:if>
  </xsl:if>
  <xsl:if test="/GSP/CT">
    <p id="sw"><xsl:call-template name="stopwords"/></p>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Home search page header (can be customized): logo and search box
     ********************************************************************** -->
<xsl:template name="home_page_header">
  <xsl:param name="type" select="'home'"/>
  <xsl:if test="$show_logo != '0'">
    <xsl:call-template name="logo"/>
  </xsl:if>
  <xsl:if test="$show_top_search_box != '0'">
    <xsl:call-template name="search_box">
      <xsl:with-param name="type" select="$type"/>
    </xsl:call-template>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Separation bar variables (used in advanced search header and result page)
     - use CSS values for background and color properties
     ********************************************************************** -->
<xsl:variable name="sep_bar_border_color">
  <xsl:choose>
    <xsl:when test="$choose_sep_bar = 'ltblue'">#36c</xsl:when>
    <xsl:when test="$choose_sep_bar = 'blue'">#36c</xsl:when>
    <xsl:otherwise><xsl:value-of select="$global_bg_color"/></xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="sep_bar_bg_color">
  <xsl:choose>
    <xsl:when test="$choose_sep_bar = 'ltblue'">#e5ecf9</xsl:when>
    <xsl:when test="$choose_sep_bar = 'blue'">#36c</xsl:when>
    <xsl:otherwise><xsl:value-of select="$global_bg_color"/></xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="sep_bar_text_color">
  <xsl:choose>
    <xsl:when test="$choose_sep_bar = 'ltblue'">#000</xsl:when>
    <xsl:when test="$choose_sep_bar = 'blue'">#fff</xsl:when>
    <xsl:otherwise><xsl:value-of select="$global_text_color"/></xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- **********************************************************************
 Advanced search page header HTML (can be customized)
     ********************************************************************** -->
<xsl:template name="advanced_search_header">
  <xsl:if test="$show_logo != '0'"><xsl:call-template name="logo"/></xsl:if>
</xsl:template>

<!-- **********************************************************************
 Cached page header (can be customized)
     ********************************************************************** -->
<xsl:template name="cached_page_header">
  <xsl:param name="cached_page_url"/>
  <xsl:variable name="stripped_url" select="substring-after($cached_page_url,'://')"/>

  <!-- Leave style embedded. Do not factor out. -->
  <div style="border:1px solid black;margin:auto;padding:6px;">
    <div style="border:2px solid black;padding:8px;margin:auto;background:{$global_bg_color};color:{$global_text_color};">
      <div style="color:#000;">
        <xsl:value-of select="$cached_page_header_text"/>
        <xsl:text> </xsl:text>
        <xsl:choose>
          <xsl:when test="starts-with($cached_page_url, $db_url_protocol)">
            <a href="{concat('/db/',$stripped_url)}">
            <xsl:value-of select="$cached_page_url"/></a>.
          </xsl:when>
          <xsl:when test="starts-with($cached_page_url, $nfs_url_protocol)">
            <a href="{concat('/nfs/',$stripped_url)}">
            <xsl:value-of select="$cached_page_url"/></a>.
          </xsl:when>
          <xsl:when test="starts-with($cached_page_url, $smb_url_protocol)">
            <a href="{concat('/smb/',$stripped_url)}">
            <xsl:value-of select="$cached_page_url"/></a>.
          </xsl:when>
          <xsl:otherwise>
            <a href="{$cached_page_url}">
            <xsl:value-of select="$cached_page_url"/></a>.
          </xsl:otherwise>
        </xsl:choose>
      </div>
    </div>
  </div>
  <hr/>
</xsl:template>

<!-- **********************************************************************
 Suggest service javascript (do not customize)
     ********************************************************************** -->
<xsl:template name="gsa_suggest">
  <xsl:if test="$show_suggest != '0'">
<!-- 
    <script language='javascript' src='suggest_js.js'>//foo</script>
    <script language='javascript'>
    sgst('q');
    sgst('as_q');
    </script>
-->
  </xsl:if>
</xsl:template>


<!-- **********************************************************************
 "Front door" search input page (can be customized)
     ********************************************************************** -->
<xsl:template name="front_door">
  <xsl:param name="type" select="'home'"/>
  <head>
    <xsl:call-template name="head_elements"/>
    <title>
      <xsl:choose>
        <xsl:when test="$type = 'swr'"><xsl:value-of select="$swr_page_title"/></xsl:when>
        <xsl:otherwise><xsl:value-of select="$home_page_title"/></xsl:otherwise>
      </xsl:choose>
    </title>
    <xsl:call-template name="style">
      <xsl:with-param name="mode" select="$type"/>
    </xsl:call-template>
  </head>
  <body dir="ltr">
    <xsl:call-template name="my_page_header"/>
    <xsl:call-template name="home_page_header">
      <xsl:with-param name="type" select="$type"/>
    </xsl:call-template>
    <xsl:if test="$media != 'handheld'"><hr/></xsl:if>
    <xsl:call-template name="copyright"/>
    <xsl:call-template name="my_page_footer"/>
  </body>
</xsl:template>

<!-- **********************************************************************
 Empty result set (can be customized)
     ********************************************************************** -->
<xsl:template name="no_RES">
  <xsl:param name="query"/>

  <!-- *** Output Google Desktop results (if enabled and any available) *** -->
  <xsl:if test="$egds_show_desktop_results != '0'">
    <xsl:call-template name="desktop_results"/>
  </xsl:if>

  <div id="su"><p><span class="page-count">
                <span class="page-count-lbl">Results per page:</span>
                <select id="num" name="num">
                  <xsl:call-template name="select_option">
                    <xsl:with-param name="name" select="'num'"/>
                    <xsl:with-param name="value" select="'10,20,30,50,100,'"/>
                    <xsl:with-param name="desc" select="'10,20,30,50,100,'"/>
                  </xsl:call-template>
                </select>
              </span></p></div>
  <div id="er">
    <p>
      <xsl:text>Your search - </xsl:text>
      <strong>"<xsl:value-of select="$query"/>"</strong>
      <xsl:text> - did not match any documents.</xsl:text>
      <xsl:if test="$media != 'handheld'">
        <xsl:text> </xsl:text>
        <span>
          <xsl:text>No pages were found containing </xsl:text>
          <strong>"<xsl:value-of select="$query"/>"</strong>
          <xsl:text>.</xsl:text>
        </span>
      </xsl:if>
    </p>
    <xsl:if test="$media != 'handheld'">
      <p>Suggestions:</p>
      <ul>
        <li>Make sure all words are spelled correctly.</li>
        <li>You might need to deselect some search options.</li>
        <li>Try different keywords.</li>
        <xsl:if test="/GSP/PARAM[(@name='access') and(@value='a')]">
          <li>Make sure your security credentials are correct.</li>
        </xsl:if>
        <li>Try more general keywords.</li>
      </ul>
    </xsl:if>
  </div>

  <xsl:if test="$media = 'handheld' and $show_bottom_search_box != '0'">
    <xsl:call-template name="bottom_search_box"/>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Empty result set - WITH FILTER OPTIONS SELECTED and no query (can be customized)
     ********************************************************************** -->
<xsl:template name="no_RES_F">
  <xsl:param name="query"/>

  <!-- *** Output Google Desktop results (if enabled and any available) *** -->
  <xsl:if test="$egds_show_desktop_results != '0'">
    <xsl:call-template name="desktop_results"/>
  </xsl:if>

  <div id="er">
    <p>
      <xsl:text>Your search did not match any documents.</xsl:text>
    </p>
    <xsl:if test="$media != 'handheld'">
      <p>Suggestions:</p>
      <ul>
        <li>You might need to deselect some search options.</li>
        <xsl:if test="/GSP/PARAM[(@name='access') and(@value='a')]">
          <li>Make sure your security credentials are correct.</li>
        </xsl:if>
      </ul>
    </xsl:if>
  </div>

  <xsl:if test="$media = 'handheld' and $show_bottom_search_box != '0'">
    <xsl:call-template name="bottom_search_box"/>
  </xsl:if>
</xsl:template>

<!-- ######################################################################
 We do not recommend changes to the following code.  Google Technical
 Support Personnel currently do not support customization of XSLT under
 these Technical Support Services Guidelines.  Such services may be
 provided on a consulting basis, at Google's then-current consulting
 services rates under a separate agreement, if Google personnel are
 available.  Please ask your Google Account Manager for more details if
 you are interested in purchasing consulting services.
     ###################################################################### -->

<!-- **********************************************************************
 Global Style (do not customize)
 default presentation using CSS (Cascading Style Sheets)
     ********************************************************************** -->
<xsl:template name="style">
<xsl:param name="mode"/>
<style type="text/css" media="screen,print">
<xsl:comment>
<xsl:if test="$show_res_clusters = '1'">
  <xsl:choose>
    <xsl:when test="$res_cluster_position = 'top'">
div#clustering {font-size: 84%; line-height: 140%; min-height: 4.6em; _height: 4.6em; margin-top: 1em;}
div#clustering h3 {font-size: 100%; font-weight: bold; margin: 0; padding: 0;}
div#clustering table {margin-left: 2em; font-size: 100%;} 
div#clustering table a {white-space: nowrap;}
div#clustering table td {padding-right: 1em;}
div#clustering #cluster_status {color: #666666; margin-left: 2em;}
</xsl:when>
    <xsl:when test="$res_cluster_position = 'right'">
div#clustering {clear:both;font-size: 84%; line-height: 140%; float: right; width: 15em; margin: 4em 0 0 1em; padding: 0 5px 0 0; }
div#clustering h3 {font-size: 115%; font-weight: bold; margin: 0 0 0.6em 0; padding: 0; color: #444; }
div#clustering ul {list-style: none; margin: 0; padding: 0;}
div#clustering li {margin-left: 2em; text-indent: -2em;}
div#clustering #cluster_status {color: #666666;}
</xsl:when>
  </xsl:choose>
</xsl:if>
<xsl:if test="$show_suggest != '0'">
.ac-renderer {
position : absolute;
width : 300px;
background-color : #FFF;
border : 1px solid #999;
z-index : 10000;
}
.ac-row {
position : relative;
background-color : <xsl:value-of select="$global_bg_color"/>;
margin : 1px;
padding : 1px 4px;
cursor : pointer;
}
.ac-highlighted {
color : #111;
}
.ac-active {
background-color : #BAC9E0;
color : #111;
font-weight : bold;
}
</xsl:if>
</xsl:comment>
</style>
  <xsl:choose>
    <xsl:when test="$style_include != '0'">
      <xsl:choose>
        <xsl:when test="$mode = 'advanced'">
          <link href="{$style_include_prefix}advanced.css" rel="stylesheet" type="text/css" media="screen,print"/>
          <link href="{$style_include_prefix}advanced-print.css" rel="stylesheet" type="text/css" media="print"/>
          <xsl:text disable-output-escaping="yes">&lt;!--[if lte IE 7]&gt;</xsl:text>
          <link href="{$style_include_prefix}advanced-print-ie.css" rel="stylesheet" type="text/css" media="print"/>
          <xsl:text disable-output-escaping="yes">&lt;![endif]--&gt;</xsl:text>
        </xsl:when>
        <xsl:when test="$media = 'handheld'">
          <link href="{$style_include_prefix}search-handheld.css" rel="stylesheet" type="text/css"/>
        </xsl:when>
        <xsl:otherwise>
          <link href="{$style_include_prefix}search.css" rel="stylesheet" type="text/css" media="screen,print"/>
          <link href="{$style_include_prefix}search-print.css" rel="stylesheet" type="text/css" media="print"/>
          <link href="{$style_include_prefix}search-handheld.css" rel="stylesheet" type="text/css" media="handheld"/>
          <xsl:text disable-output-escaping="yes">&lt;!--[if lte IE 7]&gt;</xsl:text>
          <link href="{$style_include_prefix}search-ie.css" rel="stylesheet" type="text/css" media="screen,print"/>
          <link href="{$style_include_prefix}search-print-ie.css" rel="stylesheet" type="text/css" media="print"/>
          <xsl:text disable-output-escaping="yes">&lt;![endif]--&gt;</xsl:text>
          <xsl:text disable-output-escaping="yes">&lt;!--[if IE 7]&gt;</xsl:text>
          <link href="{$style_include_prefix}search-ie7.css" rel="stylesheet" type="text/css" media="screen,print"/>
          <xsl:text disable-output-escaping="yes">&lt;![endif]--&gt;</xsl:text>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:when>
    <xsl:otherwise>
      <xsl:choose>
        <xsl:when test="$mode = 'advanced'">
<style type="text/css" media="screen,print">
<xsl:comment>
/* &lt;![CDATA[ */
html{font-size:76%}
html,body{color:<xsl:value-of select="$global_text_color"/>;background:<xsl:value-of select="$global_bg_color"/>}
img,fieldset{border:0}
form,fieldset,dl,dt,dd,h1,h2,h3{margin:0;padding:0}
body{margin:8px}
body,div{font-family:<xsl:value-of select="$global_font"/>;font-size:<xsl:value-of select="$global_font_size"/>}
h2,h3,.param,.pair .name{clear:left}
.value,.name,.param,.pair,#lg a,#lg span{float:left}
h2{color:<xsl:value-of select="$global_text_color"/>;background:<xsl:value-of select="$sep_bar_bg_color"/>;border-top:1px solid <xsl:value-of select="$sep_bar_border_color"/>;padding:1px 4px;font-size:1.5em}
h3{font-size:1.3em}
fieldset,dl{height:1%;overflow:auto}
fieldset{border:3px solid #cbdced;margin-bottom:1.5em}
dl{line-height:1.75em;font-size:1.1em}
dt label{margin-left:2px;font-weight:bold}
.first{color:<xsl:value-of select="$global_text_color"/>;background:#cbdced}
.value{width:47%}
.name{width:38%}
.param{width:15%}
.pair{width:85%}
.pair .name{width:29%}
.pair .value{width:66%}
#lg a,#lg span{margin-right:11px;text-indent:-9999px;background:url("<xsl:value-of select="$logo_url"/>") no-repeat;height:<xsl:value-of select="$logo_height"/>;width:<xsl:value-of select="$logo_width"/>;overflow:hidden}
#co{clear:both;padding:3em 0 1em 0;text-align:center;font-size:1.1em;color:<xsl:value-of select="$global_co_color"/>;background:<xsl:value-of select="$global_bg_color"/>}
/* ]]&gt; */
</xsl:comment>
</style>

<style type="text/css" media="print">
<xsl:comment>
/* &lt;![CDATA[ */
fieldset{border:0 solid <xsl:value-of select="$global_bg_color"/>}
.first{background:<xsl:value-of select="$global_bg_color"/>}
.value,.name,.param,.pair{float:none;width:auto}
dt label{margin-left:0}
dd{margin-left:20px}
.pair .name,.pair .value{display:inline;width:auto}
.gs,#lg a,#lg span{display:none}
#lg:before{content:url("<xsl:value-of select="$logo_url"/>")}
/* ]]&gt; */
</xsl:comment>
</style>

<xsl:text disable-output-escaping="yes">
&lt;!--[if lte IE 7]&gt;&lt;style type="text/css" media="print"&gt;
#lg{display:list-item;margin:0;padding:0;list-style-image:url("</xsl:text><xsl:value-of select="$logo_url"/><xsl:text disable-output-escaping="yes">");list-style-position:inside;overflow:auto;height:1%}
fieldset,dl{height:auto}
&lt;/style&gt;&lt;![endif]--&gt;
</xsl:text>
        </xsl:when>

        <xsl:otherwise>
          <xsl:if test="$media != 'handheld'">
<style type="text/css" media="screen,print">
<xsl:comment>
/* &lt;![CDATA[ */<!--
*** Common ***
-->
html{font-size:76%}
h1,h2,h3,h4,h5,h6,form,fieldset,#nd,.sa,.sn,#su p,.s,.st,.fm,#sr,#km ul{margin:0;padding:0}
img,fieldset{border:0}
body,div{font-family:<xsl:value-of select="$global_font"/>;font-size:<xsl:value-of select="$global_font_size"/>;color:<xsl:value-of select="$global_text_color"/>}
/*body,.a,a:link,.f,.f:link,.f a:link,a:visited,.f a:visited,a:active,.f a:active{background:<xsl:value-of select="$global_bg_color"/>}*/
#re a:link{color:<xsl:value-of select="$global_link_color"/>}
#re a:visited,.f a:visited{color:<xsl:value-of select="$global_link_color"/>}
#re a:active,.f a:active{color:<xsl:value-of select="$global_alink_color"/>}
#co{clear:both;padding:3em 0 1em 0;text-align:center;font-size:1.1em;color:<xsl:value-of select="$global_co_color"/>}
.bt{vertical-align:bottom}
.z,#sk,#ns span.sp,#n span.sp,#sf h2,#sb h2,#re h3,.rn,#nd span,.sn span{display:none}
hr{clear:both;width:100%;height:1%;overflow:auto;margin-top:1em}
#re{clear:none}
<!--*** Logo ***-->
<xsl:if test="$show_logo != '0'">
#lg a,#lg span{float:left;margin-right:11px;text-indent:-9999px;overflow:hidden;height:<xsl:value-of select="$logo_height"/>;width:<xsl:value-of select="$logo_width"/>;background:url("<xsl:value-of select="$logo_url"/>") no-repeat}</xsl:if><!--

*** Search Within Results ***
--><xsl:if test="$mode = 'swr'">
#sr{font-size:1.3em}
#sr span{display:block}</xsl:if><!--

*** Desktop Nav ***
--><xsl:if test="$egds_show_search_tabs != '0'">
#nd{padding:4px 0 6px 0;font-size:1.1em}
#nd a{display:inline;list-style-type:none;margin-right:.75em}
#nd a:visited,#nd a:link,#nd a:active{color:#00c}</xsl:if><!--

*** Search Box (Header) ***
--><xsl:if test="$show_top_search_box = '1'">
#sf{float:left;font-size:1.1em;padding-bottom:.5em;margin-bottom:11px}
#sf form div{float:left;padding-right:6px}
.sa{font-size:1em}
.sn{float:left;list-style:none}
.sn a{display:block;font-size:.75em;padding:0;margin:0;line-height:1.1}</xsl:if><!--

*** Top Separation Bar ***
--><xsl:if test="$mode = 'advanced' or $mode = 'error' or (/GSP/RES/M>0)">
#su{clear:both;height:1%;overflow:auto;margin-bottom:4px;padding:1px 0;background:<xsl:value-of select="$sep_bar_bg_color"/>;border-top:1px solid <xsl:value-of select="$sep_bar_border_color"/>}
#su h2{float:left;font-size:1.5em;padding:0 2px}</xsl:if>
<!--

*** Stopwords ***
--><xsl:if test="/GSP/CT">
#sw{color:gray;background:<xsl:value-of select="$global_bg_color"/>}</xsl:if><!--

*** Spelling and Synonyms ***
--><xsl:if test="/GSP/Spelling/Suggestion or /GSP/Synonyms/OneSynonym">
#sy,#ss{font-size:1.3em;margin:1em 0;background:<xsl:value-of select="$global_bg_color"/>}
#sy{color:<xsl:value-of select="$synonyms_text_color"/>}
#ss{color:<xsl:value-of select="$spelling_text_color"/>}</xsl:if><!--

*** OneBox ***
--><xsl:if test="$show_onebox != '0' and /GSP/ENTOBRESULTS">
div.oneboxResults{max-height:150px;overflow:hidden;font-size:1.35em}</xsl:if><!--

*** No Results ***
--><xsl:if test="not(RES or GM or Spelling or Synonyms or CT or /GSP/ENTOBRESULTS)">
#er{font-size:1.3em}
#er p span{display:block}</xsl:if><!--

*** Result Page Navigation and Sort By (Header) ***
--><xsl:if test="($show_top_navigation != '0' or $show_sort_by != '0') and count(RES/R) > 0">
#ns{height:1%;overflow:auto;width:100%;clear:both}
#nt,#so{font-size:1.1em;padding:0 2px;margin:1px 0;display:inline}</xsl:if><!--

*** Result Page Navigation ***
--><xsl:if test="$show_top_navigation = '1' and (RES/NB/PU or RES/NB/NU)">
#nt{float:left}
#nt a{margin-right:.75em}</xsl:if><!--

*** Sort By ***
--><xsl:if test="$show_sort_by != '0' and count(RES/R) > 0">
#so{float:right}
#so strong{font-weight:normal}
#so a,#so strong{margin-left:.75em}</xsl:if><!--

*** Keymatch ***
--><xsl:if test="$show_keymatch != '0' and count(/GSP/GM) > 0">
#km{margin:1em 0;clear:both;position:relative}
#km h3{float:right;background:transparent;font-size:1.1em;position:absolute;right:4px;top:4px;color:<xsl:value-of select="$keymatch_text_color"/>}
#km ul{list-style:none}
#km li{padding:4px;margin-bottom:.5em}
#km li,#km .l a, #km .a{background:<xsl:value-of select="$keymatch_bg_color"/>}
#km span{display:none}
#km .l{font-size:1.35em;display:inline}
#km .a{display:block;color:#008000;margin:0;padding:0;font-size:1.1em}</xsl:if><!--

*** Results ***
--><xsl:if test="count(RES/R) > 0">
#re{clear:none}
#re dt,#re dd{margin-left:0}
#re dd{margin-bottom:1em}
#re dt.l2,#re dd.l2{margin-left:40px}
#re .st,#re .a,#re .a:link{color:<xsl:value-of select="$res_url_color"/>}
#re .st,#re .fm{font-size:<xsl:value-of select="$res_url_size"/>}
#re .ft{font-size:<xsl:value-of select="$res_type_size"/>}
#re .f,#re .f:link,#re .f a:link{color:<xsl:value-of select="$faint_color"/>}
#re .l{font-size:<xsl:value-of select="$res_title_size"/>;color:<xsl:value-of select="$res_title_color"/>}
#re .s{font-size:<xsl:value-of select="$res_snippet_size"/>}
#re .s2,#re .fm{display:block}
#om{font-size:1.1em;width:90%;color:#555;}</xsl:if><!--

*** Result Page Navigation (Footer) ***
--><xsl:if test="RES/NB/PU or RES/NB/NU">
#n h3,#n p,#n span,#n span a{margin:0 1px;padding:0}
#n h3{font-size:.95em;font-weight:normal;padding-right:.5em;vertical-align:bottom;white-space:nowrap}
#n h3,#n span,#n span a,#n span strong{display:inline}
#n span a{color:<xsl:value-of select="$global_text_color"/>}
#n span.np a,#n span.pp a{color:#00c}
#n span.cp strong{color:#a90a08}
.b,.b a{color:#00c;font-weight:bold}
#n .go h3,#n .go span a,#n .go span strong{width:16px}
#n .go span.fp strong{width:18px}
#n .go span.pp a{width:68px}
#n .go span.np a,#n .go span.lp strong{width:100px}
#n .go span a{background:url("nav_page.gif") no-repeat}
#n .go span.cp strong{background:url("nav_current.gif") no-repeat}
#n .go span.fp strong{background:url("nav_first.gif") no-repeat}
#n .go span.lp strong{background:url("nav_last.gif") no-repeat}
#n .go span.pp a{background:url("nav_previous.gif") no-repeat}
#n .go span.np a{background:url("nav_next.gif") no-repeat}
#n .go h3,#n .go span a,#n .go span strong{padding-top:26px}</xsl:if><!--

*** Search Box (Footer) ***
--><xsl:if test="$show_bottom_search_box = '1' and (RES or GM or Spelling or Synonyms or CT or /GSP/ENTOBRESULTS)">
#sb{clear:both;font-size:1.1em;margin:20px 0;padding:25px 6px 35px 6px;text-align:center;background:<xsl:value-of select="$sep_bar_bg_color"/>;border-top:1px solid <xsl:value-of select="$sep_bar_border_color"/>;border-bottom:1px solid <xsl:value-of select="$sep_bar_border_color"/>}
#sb .sn a{background:transparent}
#sb fieldset{text-align:left;margin-left:auto;margin-right:auto;display:inline}
#sb form div{float:left;padding-right:6px}</xsl:if>
/* ]]&gt; */
</xsl:comment>
</style>

<xsl:text>
</xsl:text>

<style type="text/css" media="print">
<xsl:comment>
/* &lt;![CDATA[ */
#sf,#sb,#n,#ns,#sy,p.fm,.st .rc,#om span,#sr span,#lg a,#lg span,#su .st,#nd{display:none}
#re dt+dd{page-break-inside:avoid}
a{text-decoration:none}
a:link,a:visited{color:<xsl:value-of select="$global_link_color"/>}
#lg:before{content:url("<xsl:value-of select="$logo_url"/>")}<!--

*** Keymatch ***
--><xsl:if test="$show_keymatch != '0' and count(/GSP/GM)>0">
#km h3{background:#e8e8ff}</xsl:if>
/* ]]&gt; */
</xsl:comment>
</style>

<xsl:text disable-output-escaping="yes">
&lt;!--[if lte IE 7]&gt;&lt;style type="text/css" media="screen,print"&gt;
/*#n h3,#n span a,#n span strong{float:left}
div#n{position:relative;right:50%;float:right}
div.co{position:relative;left:50%;float:left}
#n span.sp{display:none}*/
&lt;/style&gt;&lt;style type="text/css" media="print"&gt;
#lg{display:list-item;margin:0;padding:0;list-style-image:url("</xsl:text><xsl:value-of select="$logo_url"/><xsl:text disable-output-escaping="yes">");list-style-position:inside;overflow:auto;height:1%}
#su{height:auto;overflow:visible}
&lt;/style&gt;&lt;![endif]--&gt;
&lt;!--[if IE 7]&gt;&lt;style type="text/css" media="screen,print"&gt;
#n .ln h3,#n .go h3{width:100%}
&lt;/style&gt;&lt;![endif]--&gt;
</xsl:text>
          </xsl:if>

<style type="text/css">
          <xsl:if test="$media != 'handheld'">
            <xsl:attribute name="media">handheld</xsl:attribute>
          </xsl:if>
<xsl:comment>
/* &lt;![CDATA[ */
<!--
body,.a,#sy,#ss,#sw,a:link,.f,.f:link,.f a:link,a:visited,.f a:visited,a:active,.f a:active{background:<xsl:value-of select="$global_bg_color"/>}
body{color:<xsl:value-of select="$global_text_color"/>}
.a{color:#008000}
#sy{color:<xsl:value-of select="$synonyms_text_color"/>}
#ss{color:<xsl:value-of select="$spelling_text_color"/>}
#sw{color:gray}
a:link{color:<xsl:value-of select="$global_link_color"/>}
.f,.f:link,.f a:link{color:<xsl:value-of select="$faint_color"/>}
a:visited,.f a:visited{color:<xsl:value-of select="$global_vlink_color"/>}
a:active,.f a:active{color:<xsl:value-of select="$global_alink_color"/>}
img,fieldset{border:0}
#lg a,#lg span{float:left;text-indent:-9999px;overflow:hidden;background:url("<xsl:value-of select="$logo_url_sm"/>") no-repeat;height:<xsl:value-of select="$logo_height_sm"/>;width:<xsl:value-of select="$logo_width_sm"/>}
#su h2:after,#km h3:after{content:":"}
#n .pp:after{content:", "}
dd .s:after{content:" - "}
#su,#om,#sr,#sf{clear:both}
.sa,p.fm{margin:0}
dd{margin-left:0;margin-bottom:1em}
h1{margin:0}
#su h2,#km h3,#km ul,#su p,.sn a,#co,fieldset{margin:0;padding:0}
#sf,#sf h2,#sb h2,#re h3,.sn span,#ns span,#sk,.s2,.sn .as,#nd,#su .st,#so strong,#n h3,#n span,.sa span{display:none}
#home #sf,#nt #so,#gs,#gs_f,dt,dd p.fm,#su h2,.sn a,.sa span.ac{display:block}
#n .pp,#n .np,dd p{display:inline}
.sn a{display:list-item}
#su h2,#km h3{font-size:1em}
#ns #so strong,dd strong,#su strong,dt .ft{font-weight:normal}
dt .rn{font-weight:bold}
.sn,#km ul{list-style:none}
.sa label{text-transform:capitalize}
#q, #q_f{width:10em}
/* ]]&gt; */
-->
</xsl:comment>
</style>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
 URL variables (do not customize)
     ********************************************************************** -->
<!-- *** if this is a test search (help variable)-->
<xsl:variable name="is_test_search" select="/GSP/PARAM[@name='testSearch']/@value"/>

<!-- *** if this is a search within results search *** -->
<xsl:variable name="swrnum">
  <xsl:choose>
    <xsl:when test="/GSP/PARAM[(@name='swrnum') and (@value!='')]">
      <xsl:value-of select="/GSP/PARAM[@name='swrnum']/@value"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="0"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- *** help_url: search tip URL (html file) *** -->
<xsl:variable name="help_url">/user_help.html</xsl:variable>

<!-- *** alerts_url: Alerts URL (html file) *** -->
<xsl:variable name="alerts_url">/alerts</xsl:variable>

<!-- *** base_url: collection info *** -->
<xsl:variable name="base_url">
  <xsl:for-each
    select="/GSP/PARAM[@name = 'client' or
                       @name = 'site' or
                       @name = 'num' or
                       @name = 'output' or
                       @name = 'proxystylesheet' or
                       @name = 'access' or
                       @name = 'lr' or
                       @name = 'ie' or
                       @name = 'GSA-skin' or
                       @name = 'partialfields']">
    <xsl:value-of select="@name"/>=<xsl:value-of select="@original_value"/>
    <xsl:if test="position() != last()">&amp;</xsl:if>
  </xsl:for-each>
</xsl:variable>

<!-- *** home_url: ? + collection info + &proxycustom=<HOME/> *** -->
<xsl:variable name="home_url">?<xsl:value-of select="$base_url"
  />&amp;proxycustom=%3CHOME%2F%3E</xsl:variable>

<!-- *** synonym_url: does not include q, as_q, and start elements *** -->
<xsl:variable name="synonym_url"><xsl:for-each
  select="/GSP/PARAM[(@name != 'q') and
                     (@name != 'as_q') and
                     (@name != 'swrnum') and
                     (@name != 'ie') and
                     (@name != 'start') and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
    <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
    <xsl:value-of select="@original_value"/>
    <xsl:if test="position() != last()">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
  </xsl:for-each>
</xsl:variable>

<!-- *** search_url *** -->
<xsl:variable name="search_url">

 <!-- <xsl:for-each select="/GSP/PARAM[(@name != 'start') and
                                   (@name != 'swrnum') and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
-->
 
 <xsl:for-each select="/GSP/PARAM[(@name='q') or (@name='GSA-skin') or (@name='num') or (@name='site') or (@name='proxycustom') or (@name='c') or (@name='partialfields') or (@name='getfields') or starts-with(@name,'as_') and (@name != 'epoch' or $is_test_search != '')]"> 
    <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
    <xsl:value-of select="@original_value"/>
    <xsl:if test="position() != last()">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
  </xsl:for-each>
</xsl:variable>

 <!-- *** search_url_escaped: safe for inclusion in javascript *** -->
<xsl:variable name="search_url_escaped">
    <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select='"&apos;"'/>
    <xsl:with-param name="replace" select='"%27"'/>
    <xsl:with-param name="string" select="$search_url"/>
    </xsl:call-template>
  </xsl:variable>
 
<!-- *** filter_url: everything except resetting "filter=" *** -->
<xsl:variable name="filter_url">?<xsl:for-each
  select="/GSP/PARAM[(@name != 'filter') and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
    <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
    <xsl:value-of select="@original_value"/>
    <xsl:if test="position() != last()">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
  </xsl:for-each>
  <xsl:text disable-output-escaping='yes'>&amp;filter=</xsl:text>
</xsl:variable>

<!-- *** adv_search_url: ? + $search_url + as_q=$q *** -->
<xsl:variable name="adv_search_url">?<xsl:value-of
  select="$search_url"/>&amp;proxycustom=%3CADVANCED%2F%3E</xsl:variable>

<!-- *** db_url_protocol: googledb:// *** -->
<xsl:variable name="db_url_protocol">googledb://</xsl:variable>

<!-- *** nfs_url_protocol: nfs:// *** -->
<xsl:variable name="nfs_url_protocol">nfs://</xsl:variable>

<!-- *** smb_url_protocol: smb:// *** -->
<xsl:variable name="smb_url_protocol">smb://</xsl:variable>

<!-- *** swr_search_url: ? + $search_url + as_q=$q *** -->
<xsl:variable name="swr_search_url">?<xsl:value-of
  select="$search_url"/>&amp;swrnum=<xsl:value-of select="/GSP/RES/M"/></xsl:variable>

<!-- **********************************************************************
 Search Parameters (do not customize)
     ********************************************************************** -->

<!-- *** num_results: actual num_results per page *** -->
<xsl:variable name="num_results">
  <xsl:choose>
    <xsl:when test="/GSP/PARAM[(@name='num') and (@value!='')]">
      <xsl:value-of select="/GSP/PARAM[@name='num']/@value"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="10"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- *** form_params: parameters carried by the search input form *** -->
<xsl:template name="form_params">
  <xsl:for-each
    select="PARAM[@name != 'q' and
                  @name != 'ie' and
                  not(contains(@name, 'as_')) and
                  @name != 'btnG' and
                  @name != 'btnI' and
                  @name != 'site' and
                  @name != 'filter' and
                  @name != 'swrnum' and
                  @name != 'start' and
                  @name != 'access' and
                  @name != 'ip' and
                  (@name != 'epoch' or $is_test_search != '') and
                  not(starts-with(@name ,'metabased_'))]">
    <input type="hidden" name="{@name}" value="{@value}" />
    <xsl:if test="@name = 'oe'">
      <input type="hidden" name="ie" value="{@value}" />
    </xsl:if>
  </xsl:for-each>
  <xsl:if test="$search_collections_xslt = '' and PARAM[@name='site']">
    <input type="hidden" name="site" value="{PARAM[@name='site']/@value}"/>
  </xsl:if>
</xsl:template>

<!-- *** space_normalized_query: q = /GSP/Q *** -->
<xsl:variable name="qval">
  <xsl:value-of select="/GSP/Q"/>
</xsl:variable>

<xsl:variable name="qval_uri">
  <xsl:call-template name="uriencode">
    <xsl:with-param name="text" select="$qval"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="space_normalized_query">
  <xsl:value-of select="normalize-space($qval)" disable-output-escaping="yes"/>
</xsl:variable>

<!-- *** stripped_search_query: q, as_q, ... for cache highlight *** -->
<xsl:variable name="stripped_search_query"><xsl:for-each
  select="/GSP/PARAM[(@name = 'q') or
                     (@name = 'as_q') or
                     (@name = 'as_oq') or
                     (@name = 'as_epq')]"><xsl:value-of select="@original_value"
  /><xsl:if test="position() != last()"
  ><xsl:text disable-output-escaping="yes">+</xsl:text
  ></xsl:if></xsl:for-each>
</xsl:variable>

<xsl:variable name="access">
  <xsl:choose>
    <xsl:when test="/GSP/PARAM[(@name='access') and ((@value='s') or (@value='a'))]">
      <xsl:value-of select="/GSP/PARAM[@name='access']/@original_value"/>
    </xsl:when>
    <xsl:otherwise>p</xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- **********************************************************************
 Figure out what kind of page this is (do not customize)
     ********************************************************************** -->
<xsl:template match="GSP">
  <xsl:choose>
    <xsl:when test="Q or /GSP/RES/M>0">
      <xsl:choose>
        <xsl:when test="$swrnum != 0">
          <!-- <xsl:attribute name="id">swr</xsl:attribute> -->
          <xsl:call-template name="front_door">
            <xsl:with-param name="type" select="'swr'"/>
          </xsl:call-template>
        </xsl:when>
        <xsl:otherwise>
          <!-- <xsl:attribute name="id">results</xsl:attribute> -->
          <xsl:call-template name="search_results"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:when>
    <xsl:when test="CACHE">
      <!-- <xsl:attribute name="id">cache</xsl:attribute> -->
      <xsl:call-template name="cached_page"/>
    </xsl:when>
    <xsl:when test="CUSTOM/HOME">
      <!-- <xsl:attribute name="id">home</xsl:attribute> -->
      <xsl:call-template name="front_door"/>
    </xsl:when>
    <xsl:when test="CUSTOM/ADVANCED">
      <!-- <xsl:attribute name="id">advanced</xsl:attribute> -->
      <xsl:call-template name="advanced_search"/>
    </xsl:when>
    <xsl:when test="ERROR">
      <!-- <xsl:attribute name="id">error</xsl:attribute> -->
      <xsl:call-template name="error_page">
        <xsl:with-param name="errorMessage" select="$server_error_msg_text"/>
        <xsl:with-param name="errorDescription" select="$server_error_des_text"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <!-- <xsl:attribute name="id">error</xsl:attribute> -->
      <xsl:call-template name="error_page">
        <xsl:with-param name="errorMessage" select="$xml_error_msg_text"/>
        <xsl:with-param name="errorDescription" select="$xml_error_des_text"/>
      </xsl:call-template>
    </xsl:otherwise>
  </xsl:choose>
        <script type="text/javascript">
        function resetForms() {
      //    for (var i = 0; i != document.forms.length; i++ ) {
      //        document.forms[i].reset();
      //    }
            var el = document.getElementById('collectionsForm');
            if (el) { el.reset(); }
        }
        </script>
  <!--<script type="text/javascript" src="common.js">//foo</script>
  <script type="text/javascript" src="xmlhttp.js">//foo</script>
  <script type="text/javascript" src="uri.js">//foo</script>
  <script type="text/javascript" src="cluster.js">//foo</script>
  <script type="text/javascript" src="suggest_js.js">//foo</script>-->
  <!--<script id="js_files" type="text/javascript" src="?js={$js_files}">//foo</script>-->
  <xsl:if test="$show_suggest!='0'">
    <script type="text/javascript">
    window.setTimeout
    (
      function()
      {
        sgst('q');
        sgst('as_q');
      },
      1000
    )
    </script>
  </xsl:if>
  <xsl:choose>
    <xsl:when test="$show_res_clusters='1'">
      <script type="text/javascript">
          window.setTimeout
          (
            function()
            {
              var page_query = &quot;<xsl:value-of select="$stripped_search_query"/>&quot;,
                page_start = &quot;<xsl:value-of select="/GSP/PARAM[@name='start']/@value"/>&quot;,
              page_site = &quot;<xsl:value-of select="/GSP/PARAM[@name='site']/@value"/>&quot;
              resetForms();
              //cl_clk(null,page_query,"load",null,null,page_start,page_site,null);
              cs_loadClusters('<xsl:value-of select="$search_url_escaped"/>'.replace(/amp;/g, ''), cs_drawClusters);
            },
            1000
          );
      </script>
    </xsl:when>
    <xsl:otherwise>
      <script type="text/javascript">
        window.setTimeout(resetForms,1000);
      </script>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
 Cached page (do not customize)
     ********************************************************************** -->
<xsl:template name="cached_page">
  <xsl:variable name="cached_page_url" select="CACHE/CACHE_URL"/>
  <xsl:variable name="cached_page_html" select="CACHE/CACHE_HTML"/>

  <!-- *** decide whether to load html page or pdf file *** -->
  <xsl:if test="'.pdf' != substring($cached_page_url,
                1 + string-length($cached_page_url) - string-length('.pdf')) and
                not(starts-with($cached_page_url, $db_url_protocol)) and
                not(starts-with($cached_page_url, $smb_url_protocol)) and
                not(starts-with($cached_page_url, $nfs_url_protocol))">
    <base href="{$cached_page_url}"/>
  </xsl:if>

  <!-- *** display cache page header *** -->
  <xsl:call-template name="cached_page_header">
    <xsl:with-param name="cached_page_url" select="$cached_page_url"/>
  </xsl:call-template>

  <!-- *** display cached contents *** -->
  <xsl:value-of select="$cached_page_html" disable-output-escaping="yes"/>
</xsl:template>

<xsl:template name="escape_quot">
  <xsl:param name="string"/>
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="'&quot;'"/>
    <xsl:with-param name="replace" select="'&amp;quot;'"/>
    <xsl:with-param name="string" select="$string"/>
  </xsl:call-template>
</xsl:template>

<!-- **********************************************************************
 Advanced search page (do not customize)
     ********************************************************************** -->
<xsl:template name="advanced_search">

  <xsl:variable name="html_escaped_as_q">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='q']/@value"/>
    </xsl:call-template>
    <xsl:if test="/GSP/PARAM[@name='as_q']/@value != ''">
      <xsl:value-of select="' '"/>
      <xsl:call-template name="escape_quot">
        <xsl:with-param name="string" select="/GSP/PARAM[@name='as_q']/@value"/>
      </xsl:call-template>
    </xsl:if>
  </xsl:variable>

  <xsl:variable name="html_escaped_as_epq">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_epq']/@value"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="html_escaped_as_oq">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_oq']/@value"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="html_escaped_as_eq">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_eq']/@value"/>
    </xsl:call-template>
  </xsl:variable>

<!--  <head>-->
<!--  <xsl:call-template name="head_elements"/>-->
<!--  <title><xsl:value-of select="$adv_page_title"/></title>-->
<!--  <xsl:call-template name="style">-->
<!--    <xsl:with-param name="mode" select="'advanced'"/>-->
<!--  </xsl:call-template>-->
<!---->
<!--  <script type="text/javascript">-->
<!--<xsl:text disable-output-escaping="yes">-->
<!--//&lt;![CDATA[-->
<!--function setFocus(){if(document.getElementById){document.getElementById('as_q').focus();}}-->
<!--//]]&gt;-->
<!--</xsl:text>-->
<!--  </script>-->
<!---->
<!--  </head>-->

<!--  <body onload="setFocus()" dir="ltr">-->
  <xsl:call-template name="style">
    <xsl:with-param name="mode" select="'advanced'"/>
    
  </xsl:call-template>
  <!-- *** Customer's own advanced search page header *** -->
  <xsl:if test="$choose_adv_search_page_header = 'mine' or
                $choose_adv_search_page_header = 'both'">
    <xsl:call-template name="my_page_header"/>
  </xsl:if>

  <!--====Advanced Search Header======-->
  <xsl:if test="$choose_adv_search_page_header = 'provided' or
                $choose_adv_search_page_header = 'both'">
    <xsl:call-template name="advanced_search_header"/>
  </xsl:if>

  <xsl:call-template name="top_sep_bar">
    <xsl:with-param name="text" select="$sep_bar_adv_text"/>
    <xsl:with-param name="show_info" select="0"/>
    <xsl:with-param name="time" select="0"/>
  </xsl:call-template>

  <!--====Carry over Search Parameters======-->
  <a href="?{$search_url}" class="as bsback"><span class="link">Back to Basic Search</span></a>
  <h2 class="as-hdr">Advanced Search</h2>
  <form method="get" action="" id="as"><fieldset>
<!--    <xsl:if test="PARAM[@name='client']">-->
<!--      <input type="hidden" name="client" value="{PARAM[@name='client']/@value}" />-->
<!--    </xsl:if>-->

    <!--==== site is carried over in the drop down if the menu is used =====-->   
    <xsl:if test="$search_collections_xslt = '' and PARAM[@name='site']">
      <input type="hidden" name="site" value="{PARAM[@name='site']/@value}"/>
    </xsl:if>
<!--    <xsl:call-template name="hidden_field">-->
<!--      <xsl:with-param name="name" select="''"/>-->
<!--    </xsl:call-template>-->

    <!--====Advanced Search Options======-->
    <dl class="first">
      <dt class="param">
        <label for="as_q">Find Results</label>
      </dt>
      <dd>
        <div class="pair">
          <span class="name">
            <label for="as_q">with <strong>all</strong> of the words</label>
          </span>
          <xsl:text> </xsl:text>
          <span class="value">
            <input id="as_q" type="text" name="as_q" size="25">
              <xsl:attribute name="value">
                <xsl:value-of select="$html_escaped_as_q"/>
              </xsl:attribute>
            </input>
            <xsl:text> </xsl:text>
            <select id="num" name="num">
              <xsl:call-template name="select_option">
                <xsl:with-param name="name" select="'num'"/>
                <xsl:with-param name="value" select="'10,20,30,50,100,'"/>
                <xsl:with-param name="desc" select="'10 results,20 results,30 results,50 results,100 results,'"/>
              </xsl:call-template>
            </select>
            <xsl:text> </xsl:text>
            <xsl:call-template name="collection_menu"/>
            <xsl:text> </xsl:text>
            <input type="submit" name="btnG" class="gs" value="{$search_button_text}" />
          </span>
          <br />
          <span class="name">
            <label for="as_epq">with the <strong>exact phrase</strong></label>
          </span>
          <xsl:text> </xsl:text>
          <span class="value">
            <input id="as_epq" type="text" name="as_epq" size="25">
              <xsl:attribute name="value">
                <xsl:value-of select="$html_escaped_as_epq"/>
              </xsl:attribute>
            </input>
          </span>
          <br />
          <span class="name">
            <label for="as_oq">with <strong>at least one</strong> of the words</label>
          </span>
          <xsl:text> </xsl:text>
          <span class="value">
            <input id="as_oq" type="text" name="as_oq" size="25">
              <xsl:attribute name="value">
                <xsl:value-of select="$html_escaped_as_oq"/>
              </xsl:attribute>
            </input>
          </span>
          <br />
          <span class="name">
            <label for="as_eq"><strong>without</strong> the words</label>
          </span>
          <xsl:text> </xsl:text>
          <span class="value">
            <input id="as_eq" type="text" name="as_eq" size="25">
              <xsl:attribute name="value">
                <xsl:value-of select="$html_escaped_as_eq"/>
              </xsl:attribute>
            </input>
          </span>
        </div>
      </dd>
    </dl>
    <dl>
      <!--<dt class="param"><label for="lr">Language</label></dt>
      <dd>
        <span class="name">
          <label for="lr">Return pages written in</label>
        </span>
        <xsl:text> </xsl:text>
        <span class="value">
          <select name="lr" id="lr">
            <xsl:call-template name="select_option">
              <xsl:with-param name="name" select="'lr'"/>
              <xsl:with-param name="value" select="',lang_ar,lang_zh-CN,lang_zh-TW,lang_cs,lang_da,lang_nl,lang_en,lang_et,lang_fi,lang_fr,lang_de,lang_el,lang_iw,lang_hu,lang_is,lang_it,lang_ja,lang_ko,lang_lv,lang_lt,lang_no,lang_pl,lang_pt,lang_ro,lang_ru,lang_es,lang_sv,'"/>
              <xsl:with-param name="desc" select="'any language,Arabic,Chinese (Simplified),Chinese (Traditional),Czech,Danish,Dutch,English,Estonian,Finnish,French,German,Greek,Hebrew,Hungarian,Icelandic,Italian,Japanese,Korean,Latvian,Lithuanian,Norwegian,Polish,Portuguese,Romanian,Russian,Spanish,Swedish,'"/>
            </xsl:call-template>
          </select>
        </span>
      </dd>-->
      <dt class="param"><label for="as_filetype">File Format</label></dt>
      <dd>
        <span class="name">
          <select name="as_ft" id="as_ft">
            <xsl:call-template name="select_option">
              <xsl:with-param name="name" select="'as_ft'"/>
              <xsl:with-param name="value" select="'i,e,'"/>
              <xsl:with-param name="desc" select="concat('Only,Don',$apos,'t,')"/>
            </xsl:call-template>
          </select>
          <xsl:text> </xsl:text>
          <label for="as_filetype">return results of the file format</label>
        </span>
        <xsl:text> </xsl:text>
        <span class="value">
          <select name="as_filetype" id="as_filetype">
            <xsl:call-template name="select_option">
              <xsl:with-param name="name" select="'as_filetype'"/>
              <xsl:with-param name="value" select="',pdf,ps,doc,xls,ppt,rtf,'"/>
              <xsl:with-param name="desc" select="'any format,Adobe Acrobat PDF (.pdf),Adobe Postscript (.ps),Microsoft Word (.doc),Microsoft Excel (.xls),Microsoft Powerpoint (.ppt),Rich Text Format (.rtf),'"/>
            </xsl:call-template>
          </select>
        </span>
      </dd>
      <dt class="param"><label for="as_occt">Occurrences</label></dt>
      <dd>
        <span class="name"><label for="as_occt">Return results where my terms occur</label></span>
        <xsl:text> </xsl:text>
        <span class="value">
          <select name="as_occt" id="as_occt">
            <xsl:call-template name="select_option">
              <xsl:with-param name="name" select="'as_occt'"/>
              <xsl:with-param name="value" select="'any,title,url,'"/>
              <xsl:with-param name="desc" select="'anywhere in the page,in the title of the page,in the URL of the page,'"/>
            </xsl:call-template>
          </select>
        </span>
      </dd>
      <dt class="param"><label for="as_sitesearch">Domain</label></dt>
      <dd>
        <span class="name">
          <select name="as_dt" id="as_dt">
            <xsl:call-template name="select_option">
              <xsl:with-param name="name" select="'as_dt'"/>
              <xsl:with-param name="value" select="'i,e,'"/>
              <xsl:with-param name="desc" select="concat('Only,Don',$apos,'t,')"/>
            </xsl:call-template>
          </select>
          <xsl:text> </xsl:text>
          <label for="as_sitesearch">return results from the site or domain</label>
        </span>
        <xsl:text> </xsl:text>
        <span class="value">
          <input type="text" size="25" name="as_sitesearch" id="as_sitesearch">
            <xsl:attribute name="value">
              <xsl:if test="PARAM[@name='as_sitesearch']">
                <xsl:value-of select="PARAM[@name='as_sitesearch']/@value"/>
              </xsl:if>
            </xsl:attribute>
          </input><br /><em>e.g. www.scu.edu.au/howtoapply</em>
        </span>
      </dd>

      <!-- Sort by Date feature -->
      <dt class="param"><label for="sort">Sort</label></dt>
      <dd>
        <div class="pair">
          <select name="sort" id="sort">
            <xsl:call-template name="select_option">
              <xsl:with-param name="name" select="'sort'"/>
              <xsl:with-param name="value" select="',date:D:S:d1,'"/>
              <xsl:with-param name="desc" select="'Sort by relevance,Sort by date,'"/>
            </xsl:call-template>
          </select>
        </div>
      </dd>

      <!-- Secure Search feature -->
      <xsl:if test="$show_secure_radio != '0'">
        <dt class="param"><label for="as_access_p">Security</label></dt>
        <dd>
          <div class="pair">
            <input type="radio" name="access" id="as_access_p" value="p">
              <xsl:if test="$access='p'">
                <xsl:attribute name="checked">checked</xsl:attribute>
              </xsl:if>
            </input>
            <label for="as_access_p">Search public content only</label>
            <xsl:text> </xsl:text>
            <input type="radio" name="access" id="as_access_a" value="a">
              <xsl:if test="$access='a'">
                <xsl:attribute name="checked">checked</xsl:attribute>
              </xsl:if>
            </input>
            <label for="as_access_a">Search public and secure content (login required)</label>
          </div>
        </dd>
      </xsl:if>
    </dl>
  </fieldset></form>
  <script type="text/javascript">document.getElementById('as_q').focus();</script>

  <!--====Page-Specific Search======-->
  <h2>Page-Specific Search</h2>
  <form method="get" action="" id="h"><fieldset>
    <dl>
      <dt class="param"><label for="as_lq">Links</label></dt>
      <dd>
        <span class="name"><label for="as_lq">Find pages that link to the page</label></span>
        <xsl:text> </xsl:text>
        <span class="value">
          <input type="text" size="30" name="as_lq" id="as_lq">
            <xsl:attribute name="value">
              <xsl:if test="PARAM[@name='as_lq']">
                <xsl:value-of select="PARAM[@name='as_lq']/@value"/>
              </xsl:if>
            </xsl:attribute>
          </input>
          <xsl:text> </xsl:text>
          <input type="submit" name="btnG" class="gs" value="{$search_button_text}" />
        </span>
      </dd>
    </dl>
  </fieldset></form>

  <xsl:call-template name="copyright"/>

  <!-- *** Customer's own advanced search page footer *** -->
  <xsl:call-template name="my_page_footer"/>

<!--  </body>-->
</xsl:template>


<!-- **********************************************************************
 Search results (do not customize)
     ********************************************************************** -->
<xsl:template name="search_results">

  <xsl:choose>
    <xsl:when test="$show_res_clusters = '1'">
      <xsl:call-template name="style">
        <xsl:with-param name="mode" select="'results'"/>
      </xsl:call-template>
        <xsl:call-template name="search_results_body"/>
    </xsl:when>
    <xsl:otherwise>
        <!-- SWEBB: we still need styles even if not clustering? -->
      <xsl:call-template name="style">
        <xsl:with-param name="mode" select="'results'"/>
  </xsl:call-template>
        <!-- END SWEBB -->
       <xsl:call-template name="search_results_body"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<xsl:template name="search_results_body">
<!--
  <xsl:call-template name="personalization"/>
  <xsl:call-template name="analytics"/>
-->
  <!-- *** Customer's own result page header *** -->
  <xsl:if test="$choose_result_page_header = 'mine' or
                $choose_result_page_header = 'both'">
    <xsl:call-template name="my_page_header"/>
  </xsl:if>

  <!-- *** Result page header *** -->
  <xsl:if test="$choose_result_page_header = 'provided' or
                $choose_result_page_header = 'both'">
    <xsl:call-template name="result_page_header" />
  </xsl:if>

  <!-- *** Top separation bar *** -->
    <xsl:if test="/GSP/RES/M>0">
      <xsl:call-template name="top_sep_bar">
        <xsl:with-param name="text" select="$sep_bar_std_text"/>
          <xsl:with-param name="show_info" select="$show_search_info"/>
        <xsl:with-param name="time" select="TM"/>
      </xsl:call-template>
    </xsl:if>

    <!-- *** Handle results (if any) *** -->
    <xsl:choose>
      <xsl:when test="RES or GM or Spelling or Synonyms or CT or /GSP/ENTOBRESULTS">
        <xsl:call-template name="results">
          <xsl:with-param name="query" select="Q"/>
          <xsl:with-param name="time" select="TM"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:when test="Q='' and /GSP/RES/M=0">
        <xsl:call-template name="no_RES_F">
          <xsl:with-param name="query" select="Q"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="no_RES">
          <xsl:with-param name="query" select="Q"/>
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>

    <!-- *** Google footer *** -->
    <xsl:call-template name="copyright"/>

    <!-- *** Customer's own result page footer *** -->
    <xsl:call-template name="my_page_footer"/>

    <xsl:if test="$show_asr != '0'">
    <!--
  <script language='javascript' src='clicklog_compiled.js'>//foo</script>
  -->
    </xsl:if>

    <!-- *** HTML footer *** -->
</xsl:template>

<!-- **********************************************************************
  Collection menu beside the search box
     ********************************************************************** -->
<xsl:template name="collection_menu">
  <xsl:if test="$search_collections_xslt != ''">
    <select name="site">
      <xsl:call-template name="select_option">
        <xsl:with-param name="name" select="'site'"/>
        <xsl:with-param name="value" select="'scu,courses,staff_directory,student,'"/>
        <xsl:with-param name="desc" select="'All SCU,Courses,Staff Directory,Students,'"/>
      </xsl:call-template>
    </select>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
  Search box input form (Types: std_top, std_bottom, home, swr)
     ********************************************************************** -->
<xsl:template name="search_box">
  <xsl:param name="type"/>

  <xsl:variable name="swr_directions">
    <xsl:choose>
      <xsl:when test="$media = 'handheld'">Search within these results.</xsl:when>
      <xsl:otherwise>Use the search box below to search within these results.</xsl:otherwise>
    </xsl:choose>
  </xsl:variable>
  <xsl:variable name="id_suffix"><xsl:if test="$type='std_bottom'">_f</xsl:if></xsl:variable>

  <xsl:if test="($egds_show_search_tabs != '0') and (($type = 'home') or ($type = 'std_top'))">
    <xsl:call-template name="desktop_tab"/>
  </xsl:if>
  <xsl:if test="($type = 'swr')">
    <p id="sr">
      <xsl:text>There were about </xsl:text>
      <strong><xsl:value-of select="RES/M"/></strong>
      <xsl:text> results for </xsl:text>
      <strong><xsl:value-of select="$space_normalized_query"/></strong>
      <xsl:text>. </xsl:text>
      <span><xsl:value-of select="$swr_directions" /></span>
    </p>
  </xsl:if>

  <div>

  <xsl:attribute name="id">
    <xsl:choose>
      <xsl:when test="$type='std_bottom'">sb</xsl:when>
      <xsl:otherwise>sf</xsl:otherwise>
    </xsl:choose>
  </xsl:attribute>

  <form method="get" action=""><h2><label for="q{$id_suffix}">Query</label></h2><fieldset>
    <div>
    <input type="text" id="q{$id_suffix}" size="{$search_box_size}" maxlength="256" value="" alt="Query" title="Enter search query">
      <xsl:choose>
        <xsl:when test="($type = 'swr')">
          <xsl:attribute name="name">as_q</xsl:attribute>
        </xsl:when>
        <xsl:otherwise>
          <xsl:attribute name="name">q</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:value-of select="$space_normalized_query"/>
          </xsl:attribute>
        </xsl:otherwise>
      </xsl:choose>
    </input>
    <xsl:if test="($type = 'swr')"><input type="hidden" name="q" value="{$qval}"/></xsl:if>

    <xsl:text> </xsl:text>
    <xsl:call-template name="collection_menu"/>
    <xsl:text> </xsl:text>

    <input name="btnG" id="gs{$id_suffix}" value="{$search_button_text}">
      <xsl:choose>
        <xsl:when test="$choose_search_button = 'image'">
          <xsl:attribute name="type">image</xsl:attribute>
          <xsl:attribute name="class">bt</xsl:attribute>
          <xsl:attribute name="src">
            <xsl:value-of select="$search_button_image_url"/>
          </xsl:attribute>
        </xsl:when>
        <xsl:otherwise>
          <xsl:attribute name="type">submit</xsl:attribute>
        </xsl:otherwise>
      </xsl:choose>
    </input>
    <xsl:call-template name="form_params"/>
    <xsl:if test="$show_secure_radio != '0'">
      <p class="sa">
        <span>Search: </span>
        <span class="ac"><input type="radio" name="access" id="access_p{$id_suffix}" value="p">
          <xsl:if test="$access='p'">
            <xsl:attribute name="checked">checked</xsl:attribute>
          </xsl:if>
        </input>
        <label for="access_p">public content</label></span>
        <xsl:text> </xsl:text>
        <span class="ac"><input type="radio" name="access" id="access_a{$id_suffix}" value="a">
          <xsl:if test="$access='a'">
            <xsl:attribute name="checked">checked</xsl:attribute>
          </xsl:if>
        </input>
        <label for="access_a">public and secure content</label></span>
      </p>
    </xsl:if>
    </div>

    <xsl:if test="((/GSP/RES/M>0) and ($show_swr_link!='0') and ($type='std_bottom')) or ($show_result_page_adv_link != '0') or ($show_alerts_link != '0') or ($show_result_page_help_link != '0')">
      <p class="sn">
        <xsl:if test="$media = 'handheld' and not(/GSP/CUSTOM/HOME)">
          <a href="{$home_url}">Appliance</a><span>, </span>
        </xsl:if>
        <xsl:if test="(/GSP/RES/M>0) and ($show_swr_link!='0') and ($type='std_bottom')">
          <a href="{$swr_search_url}">
            <xsl:value-of select="$swr_search_anchor_text"/>
          </a><span>, </span>
        </xsl:if>
        <xsl:if test="$show_result_page_adv_link != '0'">
          <a class="as" href="{$adv_search_url}">
            <xsl:value-of select="$adv_search_anchor_text"/>
          </a><span class="as">, </span>
        </xsl:if>
        <xsl:if test="$show_alerts_link != '0'">
          <a href="{$alerts_url}">
            <xsl:value-of select="$alerts_anchor_text"/>
          </a><span>, </span>
        </xsl:if>
        <xsl:if test="$show_result_page_help_link != '0'">
          <a href="{$help_url}">
            <xsl:value-of select="$search_help_anchor_text"/>
          </a>
        </xsl:if>
        <span>.</span>
      </p>
    </xsl:if>
  </fieldset></form>
 <xsl:call-template name="gsa_suggest" />
  </div>
</xsl:template>

<!-- **********************************************************************
  Bottom search box (do not customized)
     ********************************************************************** -->
<xsl:template name="bottom_search_box">
  <xsl:call-template name="search_box">
    <xsl:with-param name="type" select="'std_bottom'"/>
  </xsl:call-template>
</xsl:template>

<!-- **********************************************************************
 Sort-by criteria: sort by date/relevance
     ********************************************************************** -->
<xsl:template name="sort_by">
  <xsl:variable name="sort_by_url"><xsl:for-each
    select="/GSP/PARAM[(@name != 'sort') and
                       (@name != 'start') and
                       (@name != 'epoch' or $is_test_search != '') and
                       not(starts-with(@name, 'metabased_'))]">
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
      <xsl:if test="position() != last()">
        <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
      </xsl:if>
    </xsl:for-each>
  </xsl:variable>

  <xsl:variable name="sort_by_relevance_url">
    <xsl:value-of select="$sort_by_url"
      />&amp;sort=date%3AD%3AL%3Ad1</xsl:variable>

  <xsl:variable name="sort_by_date_url">
    <xsl:value-of select="$sort_by_url"
      />&amp;sort=date%3AD%3AS%3Ad1</xsl:variable>

  <xsl:text> </xsl:text>
  <p id="so">
    <xsl:choose>
      <xsl:when test="/GSP/PARAM[@name = 'sort' and (starts-with(@value,'date:D:S') or starts-with(@value,'date:A:S'))]">
        <strong>Sort by date</strong><span class="sp">,</span><xsl:text> </xsl:text>
        <a href="?{$sort_by_relevance_url}">Sort by relevance</a>
      </xsl:when>
      <xsl:otherwise>
        <a href="?{$sort_by_date_url}">Sort by date</a><span class="sp">,</span><xsl:text> </xsl:text>
        <strong>Sort by relevance</strong>
      </xsl:otherwise>
    </xsl:choose>
    <span class="sp">.</span>
  </p>

</xsl:template>

<!-- **********************************************************************
 Output all results
     ********************************************************************** -->
<xsl:template name="results">
  <xsl:param name="query"/>
  <xsl:param name="time"/>

  <!-- *** Add top navigation/sort-by bar *** -->
  <xsl:if test="($show_top_navigation != '0' or $show_sort_by != '0') and count(RES/R)>0">
    <div id="ns">
      <xsl:if test="$show_top_navigation != '0'">
        <xsl:call-template name="google_navigation">
          <xsl:with-param name="prev" select="RES/NB/PU"/>
          <xsl:with-param name="next" select="RES/NB/NU"/>
          <xsl:with-param name="view_begin" select="RES/@SN"/>
          <xsl:with-param name="view_end" select="RES/@EN"/>
          <xsl:with-param name="guess" select="RES/M"/>
          <xsl:with-param name="navigation_style" select="'top'"/>
        </xsl:call-template>
      </xsl:if>
      <xsl:if test="$show_sort_by != '0'">
        <xsl:call-template name="sort_by"/>
      </xsl:if>
    </div>
  </xsl:if>

  <!-- *** Handle OneBox results, if any ***-->
  <xsl:if test="$show_onebox != '0'">
    <xsl:if test="/GSP/ENTOBRESULTS">
      <xsl:call-template name="onebox"/>
    </xsl:if>
  </xsl:if>

  <!-- *** Output Google Desktop results (if enabled and any available) *** -->
  <xsl:if test="$egds_show_desktop_results != '0'">
    <xsl:call-template name="desktop_results"/>
  </xsl:if>

  <!-- *** Output results details *** -->

  <xsl:if test="$show_res_clusters = '1'">
      <div id='clustering'>
        <h3>Narrow your search</h3>

        <span id='cluster_status'>
          <span id='cluster_message' style="display:none">Loading...</span>
          <noscript>
            Javascript must be enabled for narrowing.
          </noscript>
        </span>
             <ul>
              <li id='cluster_label0'></li>
              <li id='cluster_label1'></li>
              <li id='cluster_label2'></li>
              <li id='cluster_label3'></li>
              <li id='cluster_label4'></li>
              <li id='cluster_label5'></li>
              <li id='cluster_label6'></li>
              <li id='cluster_label7'></li>
              <li id='cluster_label8'></li>
              <li id='cluster_label9'></li>
            </ul>
       
      </div>
    </xsl:if>

  <!-- *** Handle spelling suggestions, if any *** -->
  <xsl:if test="$show_spelling != '0'">
    <xsl:call-template name="spelling"/>
  </xsl:if>

  <!-- *** Handle synonyms, if any *** -->
  <xsl:if test="$show_synonyms != '0'">
    <xsl:call-template name="synonyms"/>
  </xsl:if>

  <!-- for keymatch results -->
  <xsl:if test="$show_keymatch != '0' and count(/GSP/GM)>0">
    <div id="km">
      <h3><xsl:value-of select="$keymatch_text"/></h3>
      <ul>
        <xsl:apply-templates select="/GSP/GM"/>
      </ul>
    </div>
  </xsl:if>

  <!-- for real results -->
  <xsl:if test="count(RES/R)>0">
    <div id="re">
      <h3>Results</h3>
      <dl>
        <xsl:apply-templates select="RES/R">
          <xsl:with-param name="query" select="$query"/>
        </xsl:apply-templates>
      </dl>

      <!-- *** Filter note (if needed) *** -->
      <xsl:if test="(RES/FI) and (not(RES/NB/NU))">
        <p id="om"><em>In order to show you the most relevant results, we have omitted some entries very similar to the <xsl:value-of select="RES/@EN"/> already displayed. <span>If you like, you can <a href="{$filter_url}0">repeat the search with the omitted results included</a>.</span></em></p>
      </xsl:if>
    </div>

    <!-- *** Add bottom navigation *** -->
    <xsl:variable name="nav_style">
      <xsl:choose>
        <xsl:when test="($access='s') or ($access='a')">simple</xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="$choose_bottom_navigation"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>

    <xsl:call-template name="google_navigation">
      <xsl:with-param name="prev" select="RES/NB/PU"/>
      <xsl:with-param name="next" select="RES/NB/NU"/>
      <xsl:with-param name="view_begin" select="RES/@SN"/>
      <xsl:with-param name="view_end" select="RES/@EN"/>
      <xsl:with-param name="guess" select="RES/M"/>
      <xsl:with-param name="navigation_style" select="$nav_style"/>
    </xsl:call-template>
  </xsl:if>

  <xsl:if test="$media = 'handheld' and count(/GSP/RES/R)>0"><hr/></xsl:if>

  <!-- *** Bottom search box *** -->
  <xsl:if test="$show_bottom_search_box != '0'">
    <xsl:call-template name="bottom_search_box"/>
  </xsl:if>

</xsl:template>

<!-- **********************************************************************
 Stopwords suggestions in result page (do not customize)
     ********************************************************************** -->
<xsl:template name="stopwords">
  <xsl:variable name="stopwords_suggestions1">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="'/help/basics.html#stopwords'"/>
      <xsl:with-param name="replace" select="'user_help.html#stop'"/>
      <xsl:with-param name="string" select="/GSP/CT"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="stopwords_suggestions2">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="'/help/basics.html'"/>
      <xsl:with-param name="replace" select="'user_help.html'"/>
      <xsl:with-param name="string" select="$stopwords_suggestions1"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="stopwords_suggestions3">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="'A HREF'"/>
      <xsl:with-param name="replace" select="'a href'"/>
      <xsl:with-param name="string" select="$stopwords_suggestions2"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="stopwords_suggestions">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="'&lt;/A&gt;]&lt;br&gt;'"/>
      <xsl:with-param name="replace" select="'&lt;/a&gt;]&lt;br /&gt;'"/>
      <xsl:with-param name="string" select="$stopwords_suggestions3"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:if test="/GSP/CT">
    <xsl:value-of disable-output-escaping="yes"
      select="$stopwords_suggestions"/>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 HIDE ALL REFERENCES TO psu.edu.au and csu.edu.au
     ********************************************************************** -->
<xsl:template name="notus">
  <xsl:param name="dirty_string"/>

  <xsl:variable name="clean_string1">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select='"psu"'/>
      <xsl:with-param name="replace" select='"scu"'/>
      <xsl:with-param name="string" select="$dirty_string"/>
    </xsl:call-template>
  </xsl:variable>
  <xsl:variable name="clean_string2">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select='"csu"'/>
      <xsl:with-param name="replace" select='"scu"'/>
      <xsl:with-param name="string" select="$clean_string1"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:value-of select="$clean_string2"/>
</xsl:template>

<!-- **********************************************************************
 Spelling suggestions in result page (do not customize)
     ********************************************************************** -->
<xsl:template name="spelling">
  <xsl:if test="/GSP/Spelling/Suggestion">
    <xsl:variable name="suggest_clean">
      <xsl:choose>
        <xsl:when test="contains(/GSP/Spelling/Suggestion[1]/@q, 'csu.edu.au') or contains(/GSP/Spelling/Suggestion[1]/@q, 'psu.edu.au')">
          <xsl:call-template name="notus">
            <xsl:with-param name="dirty_string" select="/GSP/Spelling/Suggestion[1]"/>
          </xsl:call-template>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="/GSP/Spelling/Suggestion[1]"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="suggest_q_clean">
      <xsl:choose>
        <xsl:when test="contains(/GSP/Spelling/Suggestion[1]/@q, 'csu.edu.au') or contains(/GSP/Spelling/Suggestion[1]/@q, 'psu.edu.au')">
          <xsl:call-template name="notus">
            <xsl:with-param name="dirty_string" select="/GSP/Spelling/Suggestion[1]/@q"/>
          </xsl:call-template>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="/GSP/Spelling/Suggestion[1]/@q"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="suggest_qe_clean">
      <xsl:choose>
        <xsl:when test="contains(/GSP/Spelling/Suggestion[1]/@q, 'csu.edu.au') or contains(/GSP/Spelling/Suggestion[1]/@q, 'psu.edu.au')">
          <xsl:call-template name="notus">
            <xsl:with-param name="dirty_string" select="/GSP/Spelling/Suggestion[1]/@qe"/>
          </xsl:call-template>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="/GSP/Spelling/Suggestion[1]/@qe"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>

    <xsl:variable name="suggestion">
      <xsl:call-template name="reformat_semantic">
        <xsl:with-param name="markup" select="$suggest_clean"/>
      </xsl:call-template>
    </xsl:variable>

    <xsl:if test="$suggest_q_clean != $space_normalized_query">
      <p id="ss">
        <xsl:value-of select="$spelling_text"/><xsl:text> </xsl:text>
        <a href="?q={$suggest_qe_clean}&amp;spell=1&amp;{$base_url}">
          <xsl:value-of disable-output-escaping="yes" select="$suggestion"/>
        </a>
        <br />
        <xsl:choose>
          <xsl:when test="RES/M > 0">
            <span class="ssbelow">Below are the <xsl:value-of select="RES/M"/> results for: <strong><xsl:value-of select="$space_normalized_query"/></strong></span>
          </xsl:when>
          <xsl:otherwise>
            <!-- empty spans are trouble Mr Google.<span class="ssbelow"></span> -->
          </xsl:otherwise>
        </xsl:choose>
      </p>
    </xsl:if>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Synonym suggestions in result page (do not customize)
     ********************************************************************** -->
<xsl:template name="synonyms">
  <xsl:if test="/GSP/Synonyms/OneSynonym">
  <p id="sy">
    <xsl:value-of select="$synonyms_text"/><xsl:text> </xsl:text>
    <xsl:for-each select="/GSP/Synonyms/OneSynonym">
      <a href="?q={@q}&amp;{$synonym_url}">
        <xsl:value-of disable-output-escaping="yes" select="."/>
      </a>
      <xsl:text> </xsl:text>
    </xsl:for-each>
  </p>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Truncation functions (do not customize)
     ********************************************************************** -->
<xsl:template name="truncate_url">
  <xsl:param name="t_url"/>
  <xsl:choose>
    <xsl:when test="string-length($t_url) &lt; $truncate_result_url_length">
      <xsl:value-of select="$t_url"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:variable name="first" select="substring-before($t_url, '/')"/>
      <xsl:variable name="last">
        <xsl:call-template name="truncate_find_last_token">
          <xsl:with-param name="t_url" select="$t_url"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="path_limit" select="$truncate_result_url_length - (string-length($first) + string-length($last) + 1)"/>
      <xsl:choose>
        <xsl:when test="$path_limit &lt;= 0">
          <xsl:value-of select="concat(substring($t_url, 1, $truncate_result_url_length), '...')"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:variable name="chopped_path">
            <xsl:call-template name="truncate_chop_path">
              <xsl:with-param name="path" select="substring($t_url, string-length($first) + 2, string-length($t_url) - (string-length($first) + string-length($last) + 1))"/>
              <xsl:with-param name="path_limit" select="$path_limit"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:value-of select="concat($first, '/.../', $chopped_path, $last)"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<xsl:template name="truncate_find_last_token">
  <xsl:param name="t_url"/>
  <xsl:choose>
    <xsl:when test="contains($t_url, '/')">
      <xsl:call-template name="truncate_find_last_token">
        <xsl:with-param name="t_url" select="substring-after($t_url, '/')"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$t_url"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<xsl:template name="truncate_chop_path">
  <xsl:param name="path"/>
  <xsl:param name="path_limit"/>
  <xsl:choose>
    <xsl:when test="string-length($path) &lt;= $path_limit">
      <xsl:value-of select="$path"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:call-template name="truncate_chop_path">
        <xsl:with-param name="path" select="substring-after($path, '/')"/>
        <xsl:with-param name="path_limit" select="$path_limit"/>
      </xsl:call-template>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
  A single result (do not customize)
     ********************************************************************** -->
<xsl:template match="R">
  <xsl:param name="query"/>
  <xsl:variable name="display_url_tmp" select="substring-after(UD, '://')"/>
  <xsl:variable name="display_url">
    <xsl:choose>
      <xsl:when test="$display_url_tmp">
        <xsl:value-of select="$display_url_tmp"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="substring-after(U, '://')"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>
  <xsl:variable name="escaped_url" select="substring-after(UE, '://')"/>
  <xsl:variable name="protocol" select="substring-before(U, '://')"/>
  <xsl:variable name="full_url" select="UE"/>
  <xsl:variable name="crowded_url" select="HN/@U"/>
  <xsl:variable name="crowded_display_url" select="HN"/>
  <xsl:variable name="lower" select="'abcdefghijklmnopqrstuvwxyz'"/>
  <xsl:variable name="upper" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>

  <xsl:variable name="temp_url" select="substring-after(U, '://')"/>
  <xsl:variable name="url_indexed" select="not(starts-with($temp_url, 'noindex!/'))"/>
  <xsl:variable name="stripped_url">
    <xsl:choose>
      <xsl:when test="$truncate_result_urls != '0'">
        <xsl:call-template name="truncate_url">
          <xsl:with-param name="t_url" select="$display_url"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$display_url"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>
  <xsl:variable name="result_num" select="(@N)-(/GSP/RES/@SN)+1"/>
  <xsl:variable name="result_mod_class" select="concat('res-dt', ($result_num mod 2))"/>

  <!-- *** Indent as required (only supports 2 levels) *** -->
  <xsl:variable name="level"><xsl:if test="@L='2'">l2</xsl:if></xsl:variable>

  <!-- *** Result Header *** -->
  <dt class="{$result_mod_class}">
    <xsl:if test="$level != ''">
      <xsl:attribute name="class"><xsl:value-of select="$level"/></xsl:attribute>
    </xsl:if>
    <span class="rn"><xsl:value-of select="$result_num"/>.</span>
    <xsl:text> </xsl:text>

    <!-- *** Result Title (including PDF tag and hyperlink) *** -->
    <xsl:if test="$show_res_title != '0'">
      <xsl:variable name="res_type">
        <xsl:choose>
          <xsl:when test="@MIME='text/html' or @MIME='' or not(@MIME)"></xsl:when>
          <xsl:when test="@MIME='text/plain'">[TEXT]</xsl:when>
          <xsl:when test="@MIME='application/rtf'">[RTF]</xsl:when>
          <xsl:when test="@MIME='application/pdf'">[PDF]</xsl:when>
          <xsl:when test="@MIME='application/postscript'">[PS]</xsl:when>
          <xsl:when test="@MIME='application/vnd.ms-powerpoint'">[MS POWERPOINT]</xsl:when>
          <xsl:when test="@MIME='application/vnd.ms-excel'">[MS EXCEL]</xsl:when>
          <xsl:when test="@MIME='application/msword'">[MS WORD]</xsl:when>
          <xsl:otherwise>
            <xsl:variable name="extension">
              <xsl:call-template name="last_substring_after">
                <xsl:with-param name="string" select="substring-after(
                                                      substring-after(U,'://'),
                                                      '/')"/>
                <xsl:with-param name="separator" select="'.'"/>
                <xsl:with-param name="fallback" select="'UNKNOWN'"/>
              </xsl:call-template>
            </xsl:variable>
            [<xsl:value-of select="translate($extension,$lower,$upper)"/>]
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:if test="$res_type != ''">
        <strong class="ft"><xsl:value-of select="$res_type"/></strong>
        <xsl:text> </xsl:text>
      </xsl:if>

      <xsl:variable name="url_cdata">
        <xsl:choose>
          <xsl:when test="T">
            <xsl:call-template name="reformat_keyword">
              <xsl:with-param name="orig_string" select="T"/>
            </xsl:call-template>
          </xsl:when>
          <xsl:otherwise><xsl:value-of select="$stripped_url"/></xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="extension2">
        <xsl:call-template name="last_substring_after">
          <xsl:with-param name="string" select="substring-after(
                                                      substring-after(U,'://'),
                                                      '/')"/>
          <xsl:with-param name="separator" select="'.'"/>
          <xsl:with-param name="fallback" select="'UNKNOWN'"/>
        </xsl:call-template>
      </xsl:variable>

      <xsl:choose>
        <xsl:when test="$url_indexed">
          <a class="l">
            <xsl:attribute name="href">
              <xsl:choose>
                <!-- *** URI for smb/NFS must be escaped - it appears in the URI query *** -->
                <xsl:when test="$protocol='smb' or $protocol='nfs'">
                  <xsl:value-of disable-output-escaping='yes'
                                select="concat($protocol,'/', substring-after(U,'://'))"/>
                </xsl:when>
                <xsl:when test="$extension2='flv'">
                  <xsl:value-of select="U" disable-output-escaping="yes"/>
                </xsl:when>
                <xsl:when test="starts-with(U, $db_url_protocol)">
                  <xsl:value-of disable-output-escaping='yes'
                                select="concat('db/', substring-after(U,'://'))"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of disable-output-escaping='yes' select="U"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:attribute>
            <!-- *** Accesskeys run from 1-9, then 0 for result 10. No more than that. *** -->
            <xsl:if test="$use_accesskeys != '0' and $result_num &lt;= 10">
              <xsl:attribute name="accesskey">
                <xsl:value-of select="$result_num mod $num_results"/>
              </xsl:attribute>
            </xsl:if>
            <xsl:choose>
              <xsl:when test="$extension2='flv'">
                <xsl:value-of select="U" disable-output-escaping="yes"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="MT[@N = 'courses.name']/@V" disable-output-escaping="yes"/><xsl:text> </xsl:text><span class="course-title-qual"><xsl:value-of select="MT[@N = 'courses.name-qualifier']/@V" disable-output-escaping="yes"/><xsl:text> </xsl:text></span>
              </xsl:otherwise>
            </xsl:choose>
          </a>
        </xsl:when>
        <xsl:otherwise><xsl:value-of select="$url_cdata" disable-output-escaping="yes"/></xsl:otherwise>
      </xsl:choose>
    </xsl:if>
  </dt>

  <dd class="{$result_mod_class}">
    <xsl:if test="$level != ''">
      <xsl:attribute name="class"><xsl:value-of select="$level"/></xsl:attribute>
    </xsl:if>

    <!-- *** Snippet Box *** -->
    <xsl:if test="$show_res_snippet != '0'">
      <xsl:call-template name="reformat_keyword">
        <xsl:with-param name="orig_string" select="S"/>
        <xsl:with-param name="type" select="'snippet'"/>
      </xsl:call-template>
    </xsl:if>

    <!-- *** Meta tags *** -->
    <xsl:if test="$show_meta_tags != '0' and count(MT)>0">
      <ul class="mt">
        <xsl:apply-templates select="MT"/>
      </ul>
    </xsl:if>

    <p class="st">

      <!-- *** URL *** -->
      <span class="a">
        <xsl:choose>
          <xsl:when test="not($url_indexed)">
            <xsl:if test="($show_res_size!='0') or ($show_res_date!='0') or ($show_res_cache!='0')">
              <xsl:text>Not Indexed:</xsl:text>
              <xsl:value-of select="$stripped_url"/>
            </xsl:if>
          </xsl:when>
          <xsl:otherwise>
            <xsl:if test="$show_res_url != '0'">
              <xsl:value-of select="$stripped_url"/>
            </xsl:if>
          </xsl:otherwise>
        </xsl:choose>
      </span>

      <!-- *** Miscellaneous (- size - date - cache) *** -->
      <xsl:if test="$url_indexed">
        <xsl:apply-templates select="HAS/C">
          <xsl:with-param name="stripped_url" select="$stripped_url"/>
          <xsl:with-param name="escaped_url" select="$escaped_url"/>
          <xsl:with-param name="query" select="$query"/>
          <xsl:with-param name="mime" select="@MIME"/>
          <xsl:with-param name="date" select="FS[@NAME='date']/@VALUE"/>
        </xsl:apply-templates>
      </xsl:if>

    </p>

    <!-- *** Link to more links from this site *** -->
    <!-- *** Link to aggregated results from database source *** -->
    <xsl:if test="HN">
      <p class="fm">[ <a class="f" href="?{$search_url}&amp;as_sitesearch={$crowded_url}">More results from <xsl:value-of select="$crowded_display_url"/></a> ] <xsl:if test="starts-with($crowded_url, $db_url_protocol)">[ <a class="f" href="dbaggr?sitesearch={$crowded_url}&amp;{$search_url}">View all data</a> ]</xsl:if></p>
    </xsl:if>

    <!-- *** Result Footer *** -->
  </dd>
</xsl:template>

<!-- **********************************************************************
  Meta tag values within a result (do not customize)
     ********************************************************************** -->
<xsl:template match="MT">
  <li><span class="f"><xsl:value-of select="@N"/>: </span><xsl:value-of select="@V"/></li>
</xsl:template>

<!-- **********************************************************************
  A single keymatch result (do not customize)
     ********************************************************************** -->
<xsl:template match="GM">
  <li>
    <span class="l"><a href="{GL}"><xsl:value-of select="GD"/></a></span>
    <span> - </span>
    <span class="a">
      <xsl:choose>
        <xsl:when test="$trim_keymatch_link = '0'">
          <xsl:value-of select="GL"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:call-template name="replace_string">
            <xsl:with-param name="find" select="'http://'"/>
            <xsl:with-param name="replace" select="''"/>
            <xsl:with-param name="string" select="GL"/>
          </xsl:call-template>
        </xsl:otherwise>
      </xsl:choose>
    </span>
  </li>
</xsl:template>

<!-- **********************************************************************
  Variables for reformatting keyword-match display (do not customize)
     ********************************************************************** -->
<xsl:variable name="keyword_orig_start" select="'&lt;b&gt;'"/>
<xsl:variable name="keyword_orig_end" select="'&lt;/b&gt;'"/>

<xsl:variable name="keyword_reformat_start">
  <xsl:if test="$res_keyword_format">
    <xsl:text>&lt;</xsl:text>
    <xsl:value-of select="$res_keyword_format"/>
    <xsl:text>&gt;</xsl:text>
  </xsl:if>
  <xsl:if test="($res_keyword_size) or ($res_keyword_color)">
    <xsl:text>&lt;span style="</xsl:text>
    <xsl:if test="$res_keyword_size">
      <xsl:text>text-size:</xsl:text>
      <xsl:value-of select="$res_keyword_size"/>
      <xsl:text>;</xsl:text>
    </xsl:if>
    <xsl:if test="$res_keyword_color">
      <xsl:text>color:</xsl:text>
      <xsl:value-of select="$res_keyword_color"/>
      <xsl:text>;</xsl:text>
    </xsl:if>
    <xsl:text>"&gt;</xsl:text>
  </xsl:if>
</xsl:variable>

<xsl:variable name="keyword_reformat_end">
  <xsl:if test="($res_keyword_size) or ($res_keyword_color)">
    <xsl:text>&lt;/span&gt;</xsl:text>
  </xsl:if>
  <xsl:if test="$res_keyword_format">
    <xsl:text>&lt;/</xsl:text>
    <xsl:value-of select="$res_keyword_format"/>
    <xsl:text>&gt;</xsl:text>
  </xsl:if>
</xsl:variable>

<!-- **********************************************************************
  Reformat the keyword match display in a title/snippet string
     (do not customize)
     ********************************************************************** -->
<xsl:template name="reformat_keyword">
  <xsl:param name="orig_string"/>
  <xsl:param name="type"/>

  <xsl:variable name="reformatted_1">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="$keyword_orig_start"/>
      <xsl:with-param name="replace" select="$keyword_reformat_start"/>
      <xsl:with-param name="string" select="$orig_string"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="reformatted_2">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="$keyword_orig_end"/>
      <xsl:with-param name="replace" select="$keyword_reformat_end"/>
      <xsl:with-param name="string" select="$reformatted_1"/>
    </xsl:call-template>
  </xsl:variable>

  <!-- Swap out presentation-related elements with semantic equivalents -->
  <xsl:variable name="reformatted_3">
    <xsl:call-template name="reformat_semantic">
      <xsl:with-param name="markup" select="$reformatted_2"/>
    </xsl:call-template>
  </xsl:variable>

  <!-- Swap out presentation-related br in second half of snippets with a span -->
  <xsl:choose>
    <xsl:when test="$type = 'snippet'">
      <p class="s">
        <xsl:variable name="br_html">&lt;br&gt;</xsl:variable>
   <!--<div style="background: #adadad;">    
        <xsl:choose>
          <!- - Presuming one (and only one) br exists ... - ->
          <xsl:when test="contains($reformatted_3, $br_html)">
            <xsl:value-of disable-output-escaping='yes' select="substring-before($reformatted_3, $br_html)"/>
            <span class="s2">
              <xsl:value-of disable-output-escaping='yes' select="substring-after($reformatted_3, $br_html)"/>
            </span>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of disable-output-escaping='yes' select="$reformatted_3"/>
          </xsl:otherwise>
        </xsl:choose>
</div> -->

        <xsl:choose>
          <xsl:when test="/GSP/PARAM[(@name='site') and(@value='squiz-courses')]">
            <xsl:call-template name="htmltotrimmedtext">
              <xsl:with-param name="html" select="MT[@N = 'courses.about']/@V"/>
              <xsl:with-param name="len" select="310"/>
            </xsl:call-template>
          </xsl:when>
          <xsl:otherwise>
            <xsl:call-template name="htmltotrimmedtext">
              <xsl:with-param name="html" select="MT[@N = 'units.aim']/@V"/>
              <xsl:with-param name="len" select="310"/>
            </xsl:call-template>
          </xsl:otherwise>
        </xsl:choose>
       </p>

       <xsl:variable name="domAvails" select="MT[@N = 'courses.avail-combo']/@V"/>
       <xsl:variable name="intAvails" select="MT[@N = 'courses.int-avail-combo']/@V"/>

       <div class="avails" data-int-avails="{$intAvails}" data-dom-avails="{$domAvails}">
        <div class="dom-avails avail-table">
          <!--RAW-DOM:<xsl:value-of select="MT[@N = 'courses.avail-combo']/@V"/>-->
          <xsl:choose>
            <xsl:when test="/GSP/PARAM[(@name='site') and(@value='squiz-courses')]">
              <xsl:call-template name="transformAvailCombo">
               <xsl:with-param name="availCombo" select="MT[@N = 'courses.avail-combo']/@V" />
               <xsl:with-param name="webYear" select="MT[@N = 'courses.year']/@V"/>
               <xsl:with-param name="spkCode" select="MT[@N = 'courses.spk-code']/@V"/>
               <xsl:with-param name="headTitle" select="'Domestic intakes'"/>
              </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
               <xsl:call-template name="transformAvailCombo">
                <xsl:with-param name="availCombo" select="MT[@N = 'courses.avail-combo']/@V" />
                <xsl:with-param name="webYear" select="MT[@N = 'courses.year']/@V"/>
                <xsl:with-param name="spkCode" select="MT[@N = 'courses.spk-code']/@V"/>
                <xsl:with-param name="headTitle" select="'Domestic intakes'"/>
              </xsl:call-template>
            </xsl:otherwise>
          </xsl:choose>
        </div>
        <div class="int-avails avail-table">
          <!--RAW-INT:<xsl:value-of select="MT[@N = 'courses.int-avail-combo']/@V"/>-->
          <xsl:call-template name="transformAvailCombo">
         <xsl:with-param name="availCombo" select="MT[@N = 'courses.int-avail-combo']/@V" />
         <xsl:with-param name="webYear" select="MT[@N = 'courses.year']/@V"/>
         <xsl:with-param name="spkCode" select="MT[@N = 'courses.spk-code']/@V"/>
         <xsl:with-param name="headTitle" select="'International intakes'"/>
        </xsl:call-template>
        </div>
      </div>
      <!--</p>-->
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of disable-output-escaping='yes' select="$reformatted_3"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
  Helper templates for converting standard-issue HTML elements
     to more semantic variants (do not customize)
     ********************************************************************** -->
<xsl:template name="reformat_semantic">
  <xsl:param name="markup"/>

  <!-- List of elements we'll be replacing (keep space at the end) -->
  <xsl:param name="from" select="'b i '"/>
  <xsl:param name="to" select="'strong em '"/>

  <!-- Get the next pair of search/replace candidates -->
  <xsl:variable name="find" select="substring-before($from, ' ')"/>
  <xsl:variable name="replace" select="substring-before($to, ' ')"/>

  <xsl:choose>
    <xsl:when test="$find">
      <xsl:variable name="markup-new-2">
        <xsl:call-template name="replace_string">
          <xsl:with-param name="find" select="concat('&lt;',$find,'&gt;')"/>
          <xsl:with-param name="replace" select="concat('&lt;',$replace,'&gt;')"/>
          <xsl:with-param name="string" select="$markup"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="markup-new">
        <xsl:call-template name="replace_string">
          <xsl:with-param name="find" select="concat('&lt;/',$find,'&gt;')"/>
          <xsl:with-param name="replace" select="concat('&lt;/',$replace,'&gt;')"/>
          <xsl:with-param name="string" select="$markup-new-2"/>
        </xsl:call-template>
      </xsl:variable>
      <!-- Recursion: It's fun for the whole family! -->
      <xsl:call-template name="reformat_semantic">
        <xsl:with-param name="markup" select="$markup-new"/>
        <xsl:with-param name="from" select="substring-after($from, ' ')"/>
        <xsl:with-param name="to" select="substring-after($to, ' ')"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$markup"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
  Helper templates for generating a result item (do not customize)
     ********************************************************************** -->

<!-- *** Miscellaneous: - size - date - cache *** -->
<xsl:template match="C">
  <xsl:param name="stripped_url"/>
  <xsl:param name="escaped_url"/>
  <xsl:param name="query"/>
  <xsl:param name="mime"/>
  <xsl:param name="date"/>

  <xsl:variable name="docid"><xsl:value-of select="@CID"/></xsl:variable>

  <xsl:if test="$show_res_size != '0'">
    <xsl:if test="not(@SZ='')">
      <xsl:text> - </xsl:text>
      <xsl:value-of select="@SZ"/>
    </xsl:if>
  </xsl:if>

  <xsl:if test="$show_res_date != '0'">
    <xsl:if test="($date != '')">
      <xsl:text> - </xsl:text>
      <xsl:value-of select="$date"/>
    </xsl:if>
  </xsl:if>

  <xsl:if test="$show_res_cache != '0'">
    <span class="rc">
      <xsl:text> - </xsl:text>
      <xsl:variable name="cache_encoding">
        <xsl:choose>
          <xsl:when test="'' != @ENC"><xsl:value-of select="@ENC"/></xsl:when>
          <xsl:otherwise>UTF-8</xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <!-- <a class="f" href="?q=cache:{$docid}:{$escaped_url}+{
                         $stripped_search_query}&amp;{$base_url}&amp;oe={
                         $cache_encoding}"> -->
      <a class="f" href="?q=cache:{$docid}:{$escaped_url}">
        <xsl:choose>
          <xsl:when test="not($mime)">Cached</xsl:when>
          <xsl:when test="$mime='text/html'">Cached</xsl:when>
          <xsl:when test="$mime='text/plain'">Cached</xsl:when>
          <xsl:otherwise>Text Version</xsl:otherwise>
        </xsl:choose>
      </a>
    </span>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Google navigation directional endpoints: first/prev/next/last (do not customize)
     ********************************************************************** -->
<xsl:template name="nav_dir">
  <xsl:param name="style"/>
  <xsl:param name="type"/>
  <xsl:param name="nav"/>
  <xsl:param name="view_begin"/>

  <xsl:variable name="fontclass">
    <xsl:if test="$style != 'top'"><xsl:text> </xsl:text>b</xsl:if>
  </xsl:variable>

  <xsl:choose>
    <xsl:when test="$type = 'prev'">
      <xsl:choose>
        <xsl:when test="$nav">
          <span class="pp{$fontclass}"><a href="?{$search_url}&amp;start={$view_begin - $num_results - 1}" title="Go to previous page">Previous</a></span>
        </xsl:when>
        <xsl:otherwise>
          <xsl:if test="$style != 'top'">
            <span class="fp" title="First Page"><strong><xsl:call-template name="nbsp"/></strong></span>
          </xsl:if>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:when>
    <xsl:otherwise>
      <xsl:choose>
        <xsl:when test="$nav">
          <span class="np{$fontclass}"><a href="?{$search_url}&amp;start={$view_begin + $num_results - 1}" title="Go to next page">Next</a></span>
        </xsl:when>
        <xsl:otherwise>
          <xsl:if test="$style != 'top'">
            <span class="lp" title="Last Page"><strong><xsl:call-template name="nbsp"/></strong></span>
          </xsl:if>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
 Google navigation bar in result page (do not customize)
     ********************************************************************** -->
<xsl:template name="google_navigation">
  <xsl:param name="prev"/>
  <xsl:param name="next"/>
  <xsl:param name="view_begin"/>
  <xsl:param name="view_end"/>
  <xsl:param name="guess"/>
  <xsl:param name="navigation_style"/>

  <!-- *** Should we even show navigation? *** -->
  <xsl:if test="$prev or $next">

  <xsl:if test="$navigation_style = 'top'">
    <p id="nt">
      <!-- *** Get previous navigation, if available *** -->
      <xsl:call-template name="nav_dir">
        <xsl:with-param name="style" select="$navigation_style"/>
        <xsl:with-param name="type" select="'prev'"/>
        <xsl:with-param name="nav" select="$prev"/>
        <xsl:with-param name="view_begin" select="$view_begin"/>
      </xsl:call-template>

      <xsl:if test="$prev and $next">
        <span class="sp">,</span><xsl:text> </xsl:text>
      </xsl:if>

      <!-- *** Get next navigation, if available *** -->
      <xsl:call-template name="nav_dir">
        <xsl:with-param name="style" select="$navigation_style"/>
        <xsl:with-param name="type" select="'next'"/>
        <xsl:with-param name="nav" select="$next"/>
        <xsl:with-param name="view_begin" select="$view_begin"/>
      </xsl:call-template>

      <span class="sp">.</span>
    </p>
  </xsl:if>

  <xsl:if test="$navigation_style != 'top'">
    <div id="n"><div>
      <xsl:attribute name="class">
        <xsl:text>co</xsl:text>
        <xsl:if test="$navigation_style = 'google'"> go</xsl:if>
        <xsl:if test="$navigation_style != 'google'"> ln</xsl:if>
      </xsl:attribute>

      <h3>Result Page</h3>
      <p>
        <strong><xsl:value-of select="RES/M"/> results<xsl:if test="$media != 'handheld' and Q != ''"><span id="ofwhatsearch"> for '<xsl:value-of select="$space_normalized_query"/>'</span></xsl:if></strong>
        <span class="nav-control">
        <xsl:text>Pages:</xsl:text>
        <!-- *** Show previous navigation, if available *** -->
        <xsl:call-template name="nav_dir">
          <xsl:with-param name="style" select="$navigation_style"/>
          <xsl:with-param name="type" select="'prev'"/>
          <xsl:with-param name="nav" select="$prev"/>
          <xsl:with-param name="view_begin" select="$view_begin"/>
        </xsl:call-template>
        <xsl:if test="$prev">
          <span class="sp">,</span><xsl:text> </xsl:text>
        </xsl:if>

        <xsl:if test="($navigation_style = 'google') or ($navigation_style = 'link')">
          <!-- *** Google result set navigation *** -->
          <xsl:variable name="mod_end">
            <xsl:choose>
              <xsl:when test="$next"><xsl:value-of select="$guess"/></xsl:when>
              <xsl:otherwise><xsl:value-of select="$view_end"/></xsl:otherwise>
            </xsl:choose>
          </xsl:variable>

          <xsl:call-template name="result_nav">
            <xsl:with-param name="start" select="0"/>
            <xsl:with-param name="end" select="$mod_end"/>
            <xsl:with-param name="current_view" select="($view_begin)-1"/>
            <xsl:with-param name="navigation_style" select="$navigation_style"/>
          </xsl:call-template>
        </xsl:if>

        <!-- *** Show next navigation, if available *** -->
        <xsl:call-template name="nav_dir">
          <xsl:with-param name="style" select="$navigation_style"/>
          <xsl:with-param name="type" select="'next'"/>
          <xsl:with-param name="nav" select="$next"/>
          <xsl:with-param name="view_begin" select="$view_begin"/>
        </xsl:call-template><span class="sp">.</span>
        </span>
      </p>
    </div></div>
  </xsl:if>

  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Helper templates for generating Google result navigation (do not customize)
   only shows 10 sets up or down from current view
     ********************************************************************** -->
<xsl:template name="result_nav">
  <xsl:param name="start" select="'0'"/>
  <xsl:param name="end"/>
  <xsl:param name="current_view"/>
  <xsl:param name="navigation_style"/>

  <!-- *** Choose how to show this result set *** -->
  <xsl:choose>
    <xsl:when test="($start)&lt;(($current_view)-(10*($num_results)))">
    </xsl:when>
    <xsl:when test="(($current_view)&gt;=($start)) and
                    (($current_view)&lt;(($start)+($num_results)))">
      <span class="cp" title="Current page"><strong><xsl:value-of select="(($start)div($num_results))+1"/></strong></span><span class="sp">,</span>
    </xsl:when>
    <xsl:otherwise>
      <xsl:variable name="page_num">
        <xsl:value-of select="(($start)div($num_results))+1"/>
      </xsl:variable>
      <span><a href="?{$search_url}&amp;start={$start}" title="Go to page {$page_num}"><xsl:value-of select="$page_num"/></a></span><span class="sp">,</span>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:text> </xsl:text>

  <!-- *** Recursively iterate through result sets to display *** -->
  <xsl:if test="((($start)+($num_results))&lt;($end)) and
                ((($start)+($num_results))&lt;(($current_view)+
                (10*($num_results))))">
    <xsl:call-template name="result_nav">
      <xsl:with-param name="start" select="$start+$num_results"/>
      <xsl:with-param name="end" select="$end"/>
      <xsl:with-param name="current_view" select="$current_view"/>
      <xsl:with-param name="navigation_style" select="$navigation_style"/>
    </xsl:call-template>
  </xsl:if>

</xsl:template>

<!-- **********************************************************************
 Top separation bar (do not customize)
     ********************************************************************** -->
<xsl:template name="top_sep_bar">
  <xsl:param name="text"/>
  <xsl:param name="show_info"/>
  <xsl:param name="time"/>

  <div id="su">
    <xsl:if test="$media != 'handheld' or count(/GSP/RES/R)>0">
      <h2><xsl:value-of select="$text"/></h2>
    </xsl:if>
    <xsl:if test="$show_info != '0'">
      <p>
        <xsl:if test="count(/GSP/RES/R)>0">
          <xsl:if test="$media = 'handheld'">'<xsl:value-of select="$space_normalized_query"/>'<br /></xsl:if>
          <xsl:choose>
            <xsl:when test="$access = 's' or $access = 'a'">Results <strong><xsl:value-of select="RES/@SN"/></strong> - <strong><xsl:value-of select="RES/@EN"/></strong><xsl:if test="$media != 'handheld'"> for <strong><xsl:value-of select="$space_normalized_query"/></strong></xsl:if>.</xsl:when>
            <xsl:otherwise>
              <!--Results <strong><xsl:value-of select="RES/@SN"/></strong> - <strong><xsl:value-of select="RES/@EN"/></strong> of about -->
              <strong><xsl:value-of select="RES/M"/> results<xsl:if test="$media != 'handheld' and Q != ''"><span id="ofwhatsearch"> for '<xsl:value-of select="$space_normalized_query"/>'</span></xsl:if></strong>
              <span class="page-count">
                <span class="page-count-lbl">Results per page:</span>
                <select id="num" name="num">
                  <xsl:call-template name="select_option">
                    <xsl:with-param name="name" select="'num'"/>
                    <xsl:with-param name="value" select="'10,20,30,50,100,'"/>
                    <xsl:with-param name="desc" select="'10,20,30,50,100,'"/>
                  </xsl:call-template>
                </select>
              </span>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:if>
        <xsl:if test="$media != 'handheld'">
          <xsl:text> </xsl:text>
          <span class="st">Search took <strong><xsl:value-of select="round($time * 100.0) div 100.0"/></strong> seconds.</span>
        </xsl:if>
      </p>
    </xsl:if>
  </div>

  <xsl:if test="$choose_sep_bar = 'line'"><hr/></xsl:if>
</xsl:template>

<!-- **********************************************************************
 Utility function for constructing copyright text (do not customize)
     ********************************************************************** -->
<xsl:template name="copyright">
</xsl:template>

<!-- **********************************************************************
 Utility functions for generating html entities
     ********************************************************************** -->
<xsl:template name="nbsp">
  <xsl:text disable-output-escaping="yes">&amp;nbsp;</xsl:text>
</xsl:template>
<xsl:template name="nbsp3">
  <xsl:call-template name="nbsp"/>
  <xsl:call-template name="nbsp"/>
  <xsl:call-template name="nbsp"/>
</xsl:template>
<xsl:template name="nbsp4">
  <xsl:call-template name="nbsp3"/>
  <xsl:call-template name="nbsp"/>
</xsl:template>
<xsl:template name="quot">
  <xsl:text disable-output-escaping="yes">&amp;quot;</xsl:text>
</xsl:template>
<xsl:template name="copy">
  <xsl:text disable-output-escaping="yes">&amp;copy;</xsl:text>
</xsl:template>
<xsl:variable name="apos">'</xsl:variable>

<!-- **********************************************************************
 Hidden field helper template (do not customize)
     ********************************************************************** -->
<xsl:template name="hidden_field">
  <xsl:param name="name"/>
  <xsl:variable name="n" select="substring-before($name, ',')"/>
  <xsl:if test="$name">
    <xsl:if test="PARAM[@name=$n]">
      <input type="hidden" name="{$n}" value="{PARAM[@name=$n]/@value}" />
    </xsl:if>
    <xsl:call-template name="hidden_field">
      <xsl:with-param name="name" select="substring-after($name, ',')"/>
    </xsl:call-template>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Select option helper template (do not customize)
     ********************************************************************** -->
<xsl:template name="select_option">
  <xsl:param name="name"/>
  <xsl:param name="value"/>
  <xsl:param name="desc"/>
  <xsl:variable name="v" select="substring-before($value, ',')"/>
  <xsl:variable name="d" select="substring-before($desc, ',')"/>
  <xsl:choose>
    <xsl:when test="$value">
      <option value="{$v}">
        <xsl:if test="PARAM[(@name=$name) and (@value=$v)]">
          <xsl:attribute name="selected">selected</xsl:attribute>
        </xsl:if>
        <xsl:value-of select="$d"/>
      </option>
      <xsl:call-template name="select_option">
        <xsl:with-param name="name" select="$name"/>
        <xsl:with-param name="value" select="substring-after($value, ',')"/>
        <xsl:with-param name="desc" select="substring-after($desc, ',')"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise></xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
 Content-type helper template (do not customize)
     ********************************************************************** -->
<xsl:template name="content_type">
  <xsl:param name="name"/>
  <xsl:param name="value"/>
  <xsl:param name="charset"/>
  <xsl:param name="default" select="''"/>
  <xsl:variable name="v" select="substring-before($value, ',')"/>
  <xsl:variable name="c" select="substring-before($charset, ',')"/>
  <xsl:choose>
    <xsl:when test="$value">
      <xsl:choose>
        <xsl:when test="PARAM[(@name=$name) and (@value=$v)]">
          <meta http-equiv="content-type" content="application/xhtml+xml; charset={$c}"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:call-template name="content_type">
            <xsl:with-param name="name" select="$name"/>
            <xsl:with-param name="value" select="substring-after($value, ',')"/>
            <xsl:with-param name="charset" select="substring-after($charset, ',')"/>
            <xsl:with-param name="default" select="$default"/>
          </xsl:call-template>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:when>
    <xsl:otherwise>
      <meta http-equiv="content-type" content="application/xhtml+xml; charset={$default}"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
 Utility functions for generating head elements with a meta tag to the output
 specifying the character set as requested
     ********************************************************************** -->
<xsl:template name="head_elements">
  <xsl:if test="$show_favicon != '0'">
    <link rel="shortcut icon" href="{$favicon}" />
  </xsl:if>
  <meta name="robots" content="noindex,nofollow"/>
  <xsl:choose>
    <xsl:when test="PARAM[(@name='oe') and (@value!='')]">
      <xsl:call-template name="content_type">
        <xsl:with-param name="name" select="'oe'"/>
        <xsl:with-param name="value" select="'utf8,'"/>
        <xsl:with-param name="charset" select="'UTF-8,'"/>
        <xsl:with-param name="default" select="PARAM[@name='oe']/@value"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:call-template name="content_type">
        <xsl:with-param name="name" select="'lr'"/>
        <xsl:with-param name="value" select="'lang_zh-CN,lang_zh-TW,lang_cs,lang_da,lang_nl,lang_en,lang_et,lang_fi,lang_fr,lang_de,lang_el,lang_iw,lang_hu,lang_is,lang_it,lang_ja,lang_ko,lang_lv,lang_lt,lang_no,lang_pl,lang_pt,lang_ro,lang_ru,lang_es,lang_sv,'"/>
        <xsl:with-param name="charset" select="'GB2312,Big5,ISO-8859-2,ISO-8859-1,ISO-8859-1,ISO-8859-1,ISO-8859-1,ISO-8859-1,ISO-8859-1,ISO-8859-1,ISO-8859-7,ISO-8859-8-I,ISO-8859-2,ISO-8859-1,ISO-8859-1,Shift_JIS,EUC-KR,ISO-8859-1,ISO-8859-1,ISO-8859-1,ISO-8859-2,ISO-8859-1,ISO-8859-2,windows-1251,ISO-8859-1,ISO-8859-1,'"/>
      </xsl:call-template>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
 Utility functions (do not customize)
     ********************************************************************** -->

<!-- *** Find the substring after the last occurence of a separator *** -->
<xsl:template name="last_substring_after">
  <xsl:param name="string"/>
  <xsl:param name="separator"/>
  <xsl:param name="fallback"/>
  <xsl:variable name="newString" select="substring-after($string, $separator)"/>
  <xsl:choose>
    <xsl:when test="$newString!=''">
      <xsl:call-template name="last_substring_after">
        <xsl:with-param name="string" select="$newString"/>
        <xsl:with-param name="separator" select="$separator"/>
        <xsl:with-param name="fallback" select="$newString"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$fallback"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- *** Find and replace *** -->
<xsl:template name="replace_string">
  <xsl:param name="find"/>
  <xsl:param name="replace"/>
  <xsl:param name="string"/>
  <xsl:choose>
    <xsl:when test="contains($string, $find)">
      <xsl:value-of select="substring-before($string, $find)"/>
      <xsl:value-of select="$replace"/>
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select="$find"/>
        <xsl:with-param name="replace" select="$replace"/>
        <xsl:with-param name="string" select="substring-after($string, $find)"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$string"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- *** URI Encode *** -->
<xsl:template name="uriencode">
  <xsl:param name="text"/>

  <xsl:param name="from" select="'% $ &amp; + , / : ; = ? @ '"/>
  <xsl:param name="to" select="'25 24 26 2B 2C 2F 3A 3B 3D 3F 40 '"/>
  <xsl:variable name="find" select="substring-before($from, ' ')"/>
  <xsl:variable name="replace" select="substring-before($to, ' ')"/>

  <xsl:choose>
    <xsl:when test="$find">
      <xsl:variable name="replaced">
        <xsl:call-template name="replace_string">
          <xsl:with-param name="find" select="$find"/>
          <xsl:with-param name="replace" select="concat('%', $replace)"/>
          <xsl:with-param name="string" select="$text"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:call-template name="uriencode">
        <xsl:with-param name="text" select="$replaced"/>
        <xsl:with-param name="from" select="substring-after($from, ' ')"/>
        <xsl:with-param name="to" select="substring-after($to, ' ')"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="translate($text, ' ', '+')"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
 Display error messages
     ********************************************************************** -->
<xsl:template name="error_page">
  <xsl:param name="errorMessage"/>
  <xsl:param name="errorDescription"/>

  <head><meta name="robots" content="noindex,nofollow"/><title><xsl:value-of select="$error_page_title"/></title>
  <xsl:call-template name="style">
    <xsl:with-param name="mode" select="'error'"/>
  </xsl:call-template>
  </head><body>
  <xsl:call-template name="my_page_header"/>

  <xsl:if test="$show_logo != '0'">
    <xsl:call-template name="logo"/>
  </xsl:if>

  <xsl:call-template name="top_sep_bar">
    <xsl:with-param name="text" select="$sep_bar_error_text"/>
    <xsl:with-param name="show_info" select="0"/>
    <xsl:with-param name="time" select="0"/>
  </xsl:call-template>

  <dl>
    <dt>Message:</dt>
    <dd><xsl:value-of select="$errorMessage"/></dd>
    <dt>Description:</dt>
    <dd><xsl:value-of select="$errorDescription"/></dd>
    <dt>Details:</dt>
    <dd><xsl:copy-of select="/"/></dd>
  </dl>

  <hr/>
  <xsl:call-template name="copyright"/>
  <xsl:call-template name="my_page_footer"/>
  </body>

</xsl:template>

<!-- **********************************************************************
 Google Desktop for Enterprise integration templates
     ********************************************************************** -->
<xsl:template name="desktop_tab">
  <xsl:variable name="qs">
    <xsl:if test="$qval_uri != ''">
      <xsl:value-of select="concat('?q=',$qval_uri)"/>
    </xsl:if>
  </xsl:variable>

  <!-- *** Show the Google tabs *** -->
  <p id="nd">
    <a onclick="return window.qs?qs(this):1" href="http://www.google.com/search{$qs}" title="Search the Web">Web</a><span>,</span><xsl:text> </xsl:text>
    <a onclick="return window.qs?qs(this):1" href="http://images.google.com/images{$qs}" title="Search Images">Images</a><span>,</span><xsl:text> </xsl:text>
    <a onclick="return window.qs?qs(this):1" href="http://groups.google.com/groups{$qs}" title="Search Groups">Groups</a><span>,</span><xsl:text> </xsl:text>
    <a onclick="return window.qs?qs(this):1" href="http://news.google.com/news{$qs}" title="Search News">News</a><span>,</span><xsl:text> </xsl:text>
    <a onclick="return window.qs?qs(this):1" href="http://froogle.google.com/froogle{$qs}" title="Search Froogle">Froogle</a><span>,</span><xsl:text> </xsl:text>
    <a onclick="return window.qs?qs(this):1" href="http://local.google.com/local{$qs}" title="Search Local">Local</a><span>,</span><xsl:text> </xsl:text>

    <!-- *** Show the desktop and web tabs *** -->
    <!-- *** NOTE: Currently unsupported *** -->
    <!--
    <xsl:if test="CUSTOM/HOME">
      <xsl:comment>trh2</xsl:comment>
    </xsl:if>
    <xsl:if test="Q">
      <xsl:comment>trl2</xsl:comment>
    </xsl:if>
    -->

    <!-- *** Show the appliance tab *** -->
    <strong><xsl:value-of select="$egds_appliance_tab_label"/></strong><span>.</span>
  </p>
</xsl:template>

<xsl:template name="desktop_results">
  <!-- *** NOTE: Currently unsupported *** -->
  <!-- <xsl:comment>tro2</xsl:comment> -->
</xsl:template>

<!-- **********************************************************************
  OneBox results (if any)
     ********************************************************************** -->
<xsl:template name="onebox">
  <xsl:for-each select="/GSP/ENTOBRESULTS">
    <xsl:apply-templates/>
  </xsl:for-each>
</xsl:template>

<!-- **********************************************************************
 Swallow unmatched elements
     ********************************************************************** -->
<xsl:template match="@*|node()"/>

<!-- **********************************************************************
 SCU Templates
     ********************************************************************** -->

<xsl:template name="getAvailabilities">
      <xsl:param name="regex" />
      <xsl:param name="tar" />
      <availabilities>
         <xsl:analyze-string select="$tar" regex="{$regex}">
            <xsl:matching-substring>
               <loc>
                  <xsl:value-of select="$global_location_cds/locations/location[@cd = regex-group(1)]/desc" />
               </loc>
               <availability>
                  <xsl:value-of select="regex-group(2)" />
               </availability>
            </xsl:matching-substring>
         </xsl:analyze-string>
      </availabilities>
 </xsl:template>

 <xsl:template name="renderOnlineAvails">
      <xsl:param name="avails" />
      <td colspan="6">
         <xsl:for-each select="$avails/availability">
           <xsl:value-of select="replace(text(), '^2', '')" />
           <xsl:if test="not(position() = last())">
            <xsl:text>,</xsl:text>
           </xsl:if>
         </xsl:for-each>
      </td>
 </xsl:template>

 <xsl:template name="renderAvails">
      <xsl:param name="avails" />
      <xsl:param name="distincts" />
      <xsl:param name="online" />
      <tbody>
         <xsl:for-each select="$distincts">
            <xsl:sort select="."/>
            <xsl:variable name="loc" select="." />
            <xsl:variable name="availChild">
               <xsl:copy-of select="$avails/loc[text() = $loc]/following-sibling::availability[1]" />
            </xsl:variable>
            <tr>
               <xsl:attribute name="class" select="$global_location_cds/locations/location/desc[text() = $loc]/following-sibling::class/text()" />
               <td>
                  <strong>
                     <xsl:value-of select="$loc"/>
                  </strong>
               </td>
               <xsl:if test="$availChild">
                  <xsl:choose>
                    <xsl:when test="$online = 'Y'">
                      <xsl:call-template name="renderOnlineAvails">
                        <xsl:with-param name="avails" select="$availChild" />
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                       <xsl:for-each select="$availChild/availability">
                     <!-- array variables -->
                     <xsl:variable name="secondaryVals" select="('12','R3','R4')" />
                     <xsl:variable name="tertiaryVals" select="('13')" />
                     <xsl:variable name="followedVals" select="('11', '12', 'R1', 'R2')" />
                     <xsl:variable name="followerVals" select="('12', '13', 'R3', 'R4')" />
                     <!-- omnipotent values -->
                     <xsl:variable name="omniVals" select="('YL', 'YL2')" />
                     <!-- logical variables -->
                     <xsl:variable name="isSecondaryVal" select="boolean(text() = $secondaryVals)" />
                     <xsl:variable name="hasImmediateFollower" select="boolean(following-sibling::availability/text() = $followerVals)" />
                     <xsl:variable name="hasPrecSecondaryVal" select="boolean(preceding-sibling::availability/text() = $secondaryVals)" />
                     <xsl:variable name="isTertiaryVal" select="boolean(text() = $tertiaryVals)" />
                     <xsl:variable name="isOmniVal" select="boolean(text() = $omniVals)" />
                     <xsl:variable name="isLast" select="boolean(position() = last())" />

                     
                      <xsl:choose>
                         <xsl:when test="($isSecondaryVal and position() = 1) or ($isTertiaryVal and position() = 2 and not($hasPrecSecondaryVal))">
                            <td>&#160;</td>
                         </xsl:when>
                         <xsl:when test="($isTertiaryVal and position() = 1)">
                            <td>&#160;</td>
                            <td>&#160;</td>
                         </xsl:when>
                      </xsl:choose>
                     
                     <td>
                        <xsl:choose>
                           <xsl:when test="$isOmniVal">
                              <xsl:text>&#42;</xsl:text>
                           </xsl:when>
                           <xsl:otherwise>
                              <xsl:text>&#10003;</xsl:text>
                           </xsl:otherwise>
                        </xsl:choose>
                     </td>
                     <xsl:choose>
                      <xsl:when test="text() = ('11') and $isLast">
                        <td>&#160;</td>
                        <td>&#160;</td>
                      </xsl:when>
                      <xsl:when test="(text() = $followedVals and not($hasImmediateFollower))">
                        <td>&#160;</td>
                      </xsl:when>
                     </xsl:choose>
                  </xsl:for-each>
                    </xsl:otherwise>
                  </xsl:choose>
                  <!--<xsl:copy-of select="$avails/loc[text() = $loc]/following-sibling::availability[1]"/>-->
               </xsl:if>
            </tr>
         </xsl:for-each>
      </tbody>
   </xsl:template>

 <xsl:template name="isHideYear">
      <xsl:param name="webYear" />
      <xsl:param name="spkCode" />
      <xsl:choose>
        <xsl:when test="$webYear = $hideYear and not(contains('0123456789', substring($spkCode,1,1)))">
          <xsl:value-of select="true()"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="false()"/>
        </xsl:otherwise>
      </xsl:choose>
 </xsl:template>

 <xsl:template name="transformAvailCombo">
      <xsl:param name="availCombo" />
      <xsl:param name="headTitle" />
      <xsl:param name="webYear" />
      <xsl:param name="spkCode" />

      <xsl:variable name="resSemTypeOne" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(R[1|3]+)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctRSLoc" select="distinct-values($resSemTypeOne[1]/loc)" />
      <xsl:variable name="resSemTypeTwo" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(R[2|4]+)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctRSLocTwo" select="distinct-values($resSemTypeTwo[1]/loc)" />
      <xsl:variable name="sesTypes" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(1\d+)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctSesLoc" select="distinct-values($sesTypes[1]/loc)" />
      <xsl:variable name="stPrdTypes" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(2\d+)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctStPrdLoc" select="distinct-values($stPrdTypes[1]/loc)" />
      <xsl:variable name="ylType" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(YL)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctYlLoc" select="distinct-values($ylType[1]/loc)" />
<!--       <xsl:value-of select="$resSemTypeOne" />
      <br />
      <xsl:value-of select="$resSemTypeTwo" />
      <br />
      <xsl:value-of select="$sesTypes" />
      <br />
      <xsl:value-of select="$ylType" />
      <br /> -->


      <xsl:variable name="hideMe">
        <xsl:call-template name="isHideYear">
            <xsl:with-param name="webYear" select="$webYear" />
            <xsl:with-param name="spkCode" select="$spkCode" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:if test="$hideMe = 'false'">

        <xsl:if test="$resSemTypeOne/availability">
           <table cellspacing="0">
              <thead>
                 <tr>
                    <td>
                       <xsl:value-of select="$headTitle" />
                    </td>
                    <td>
                       <strong>Research Semester 1</strong>
                    </td>
                    <td>
                       <strong>Research Semester 2</strong>
                    </td>
                 </tr>
              </thead>
              <xsl:call-template name="renderAvails">
                 <xsl:with-param name="distincts" select="$distinctRSLoc" />
                 <xsl:with-param name="avails" select="$resSemTypeOne" />
              </xsl:call-template>
           </table>
        </xsl:if>
        <xsl:if test="$resSemTypeTwo/availability">
           <table cellspacing="0">
              <thead>
                 <tr>
                    <td>
                       <xsl:value-of select="$headTitle" />
                    </td>
                    <td>
                       <strong>Research Semester 3</strong>
                    </td>
                    <td>
                       <strong>Research Semester 4</strong>
                    </td>
                 </tr>
              </thead>
              <xsl:call-template name="renderAvails">
                 <xsl:with-param name="distincts" select="$distinctRSLocTwo" />
                 <xsl:with-param name="avails" select="$resSemTypeTwo" />
              </xsl:call-template>
           </table>
        </xsl:if>
        <xsl:if test="$sesTypes/availability">
           <table cellspacing="0">
              <thead>
                 <tr>
                    <td>
                       <xsl:value-of select="$headTitle" />
                    </td>
                    <td>
                       <strong>Session 1</strong>
                    </td>
                    <td>
                       <strong>Session 2</strong>
                    </td>
                    <td>
                       <strong>Session 3</strong>
                    </td>
                 </tr>
              </thead>
              <xsl:call-template name="renderAvails">
                 <xsl:with-param name="distincts" select="$distinctSesLoc" />
                 <xsl:with-param name="avails" select="$sesTypes" />
              </xsl:call-template>
           </table>
        </xsl:if>
        <xsl:if test="$stPrdTypes/availability">
           <table cellspacing="0">
              <thead>
                 <tr>
                    <td>
                       <xsl:value-of select="$headTitle" />
                    </td>
                    <td colspan="6">
                       <span style="font-size: 0.9em">Available in Study Periods</span>
                    </td>
                 </tr>
              </thead>
              <xsl:call-template name="renderAvails">
                 <xsl:with-param name="distincts" select="$distinctStPrdLoc" />
                 <xsl:with-param name="avails" select="$stPrdTypes" />
                 <xsl:with-param name="online" select="'Y'" />
              </xsl:call-template>
           </table>
        </xsl:if>
        <xsl:if test="$ylType/availability">
           <table cellspacing="0">
              <thead>
                 <tr>
                    <td>
                       <xsl:value-of select="$headTitle" />
                    </td>
                    <td>
                       <strong>Year Long</strong>
                    </td>
                 </tr>
              </thead>
              <xsl:call-template name="renderAvails">
                 <xsl:with-param name="distincts" select="$distinctYlLoc" />
                 <xsl:with-param name="avails" select="$ylType" />
              </xsl:call-template>
           </table>
           <p>
              <span class="pronounce">*</span>
              Year Long availabilities are normally offered in 5 week blocks throughout the year.  Students may enrol in 1 to 50 weeks depending on their English language proficiency on entry and the level aimed for at completion.
           </p>
        </xsl:if>
      </xsl:if>

      <xsl:if test="(not($resSemTypeOne/availability) and not($resSemTypeTwo/availability) and not($sesTypes/availability) and not($stPrdTypes/availability) and not($ylType/availability) or ($hideMe = 'true'))">
        <xsl:variable name="noAvailMessage">
          <xsl:choose>
              <xsl:when test="$hideMe = 'true'">
                <xsl:value-of select="$hideYear"/> unit offering information will be available in September <xsl:value-of select="number($hideYear)-1"/>
              </xsl:when>
            <xsl:otherwise>
              <xsl:text>Availability information to be confirmed.</xsl:text>
            </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
       <table cellspacing="0">
        <thead>
        <tr>
          <td><strong><xsl:value-of select="$noAvailMessage"/></strong></td>
        </tr>
      </thead>
      </table>
      </xsl:if>
   </xsl:template>

<xsl:template name="htmltotrimmedtext">
  <xsl:param name="html"/>
  <xsl:param name="len"/>
   <xsl:variable name="htmlless" select="replace($html, '&lt;/?\w+[^&lt;]*&gt;', '')"/>
   <xsl:variable name="entityless" select="replace($htmlless, '&amp;.*?;', '')"/>
   <xsl:choose>
     <xsl:when test="string-length($entityless) > $len">
       <xsl:variable name="trimmed" select="substring($entityless, 0, $len)"/>
       <xsl:variable name="wordtrimmed" select="replace($trimmed, '\s+\w+?$', '')"/>
       <xsl:value-of select="concat($wordtrimmed,' ...')"/>
     </xsl:when>
     <xsl:otherwise>
       <xsl:value-of select="$entityless"/>
     </xsl:otherwise>
   </xsl:choose>
</xsl:template>

</xsl:stylesheet>

<!-- *** END OF STYLESHEET *** -->
              ]]></stylesheet>
              <stylesheet.en><![CDATA[
<!-- *** START OF STYLESHEET *** -->

<!-- **********************************************************************
 XSL to format the search output for Google Search Appliance
 XHTML/XHTML-MP Version (15 September 2006)
     ********************************************************************** -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">

<!-- **********************************************************************
 Include customer-onebox.xsl, which is auto-generated from the customer's
 set of OneBox Module definitions, and in turn invokes either the default
 OneBox template, or the customer's:
     ********************************************************************** -->
<xsl:include href="customer-onebox.xsl"/>

<!-- **********************************************************************
 Choose output media: handheld (default is blank). Use handheld only for
 dedicated handheld media - css/markup will be minimized. Always adjust the
 xsl:output selection (below) when changing this.
     ********************************************************************** -->
<xsl:variable name="media"></xsl:variable>

<!-- **********************************************************************
 Switch to XHTML Mobile if setting variable media to handheld.
 This can be configured automatically once XSLT 2.0 is supported.
     ********************************************************************** -->
<xsl:output method="xml" omit-xml-declaration="yes" indent="yes" media-type="text/html" />
<!--
<xsl:output method="xml" omit-xml-declaration="yes" indent="no" media-type="text/html" doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd" doctype-public="-//W3C//DTD XHTML 1.0 Strict//EN"/>
<xsl:output method="xml" omit-xml-declaration="no" indent="no" doctype-system="http://www.wapforum.org/DTD/xhtml-mobile10.dtd" doctype-public="-//WAPFORUM//DTD XHTML Mobile 1.0//EN"/>
-->

<!-- **********************************************************************
 Logo setup (can be customized)
     - whether to show logo: 0 for FALSE, 1 (or non-zero) for TRUE
     - use CSS values for height and width properties
     ********************************************************************** -->
<xsl:variable name="show_logo">0</xsl:variable>
<xsl:variable name="logo_url">images/Title_Left.gif</xsl:variable>
<xsl:variable name="logo_width">200px</xsl:variable>
<xsl:variable name="logo_height">78px</xsl:variable>
<xsl:variable name="logo_url_sm">http://www.google.com/xhtml/images/google.gif</xsl:variable>
<xsl:variable name="logo_width_sm">85px</xsl:variable>
<xsl:variable name="logo_height_sm">35px</xsl:variable>
<xsl:variable name="logo_title">Go to Google Home</xsl:variable>
<xsl:variable name="logo_alt">Google</xsl:variable>

<!-- **********************************************************************
 Global Style variables (can be customized): '' for using browser's default
     - use CSS values for background, color, font-family, and
       text-size properties
     ********************************************************************** -->
<xsl:variable name="global_font">Arial,sans-serif</xsl:variable>
<xsl:variable name="global_font_size">1em</xsl:variable>
<xsl:variable name="global_bg_color">#fff</xsl:variable>
<xsl:variable name="global_text_color">#000</xsl:variable>
<xsl:variable name="global_link_color">#00c</xsl:variable>
<xsl:variable name="global_vlink_color">#551a8b</xsl:variable>
<xsl:variable name="global_alink_color">#f00</xsl:variable>
<xsl:variable name="global_co_color">#2f2f2f</xsl:variable>

<!-- **********************************************************************
 Include CSS vs. embedding (default is 0 - embed)
     - Can enable/disable without unsetting include prefix.
     - Prefix points to location of search.css, advanced.css, handheld.css
       (Example: http://www.google.com/style/)
     ********************************************************************** -->
<xsl:variable name="style_include">0</xsl:variable>
<xsl:variable name="style_include_prefix"></xsl:variable>

<!-- **********************************************************************
 Result page components (can be customized)
     - whether to show a component: 0 for FALSE, non-zero (e.g., 1) for TRUE
     - use CSS values for background, color and text-size properties
     ********************************************************************** -->

<!-- *** choose result page header: '', 'provided', 'mine', or 'both' *** -->
<xsl:variable name="choose_result_page_header">both</xsl:variable>

<!-- *** customize provided result page header *** -->
<xsl:variable name="show_swr_link">1</xsl:variable>
<xsl:variable name="swr_search_anchor_text">Search Within Results</xsl:variable>
<xsl:variable name="show_result_page_adv_link">1</xsl:variable>
<xsl:variable name="adv_search_anchor_text">Advanced Search</xsl:variable>
<xsl:variable name="show_result_page_help_link">1</xsl:variable>
<xsl:variable name="search_help_anchor_text">Search Tips</xsl:variable>
<xsl:variable name="show_alerts_link">0</xsl:variable>
<xsl:variable name="alerts_anchor_text">Alerts</xsl:variable>

<!-- *** search boxes (size in # of characters) *** -->
<xsl:variable name="show_top_search_box">0</xsl:variable>
<xsl:variable name="show_bottom_search_box">0</xsl:variable>
<xsl:variable name="search_box_size">32</xsl:variable>

<!-- *** choose search button type: 'text' or 'image' *** -->
<xsl:variable name="choose_search_button">text</xsl:variable>
<xsl:variable name="search_button_text">
  <xsl:choose>
    <xsl:when test="$media = 'handheld'">Search</xsl:when>
    <xsl:otherwise>Search</xsl:otherwise>
  </xsl:choose>
</xsl:variable>
<xsl:variable name="search_button_image_url"></xsl:variable>
<xsl:variable name="search_collections_xslt"></xsl:variable>

<!-- *** search info bars *** -->
<xsl:variable name="show_search_info">1</xsl:variable>

<!-- *** choose separation bar: 'ltblue', 'blue', 'line', 'nothing' *** -->
<xsl:variable name="choose_sep_bar">ltblue</xsl:variable>
<xsl:variable name="sep_bar_std_text">Search</xsl:variable>
<xsl:variable name="sep_bar_adv_text">Advanced Search</xsl:variable>
<xsl:variable name="sep_bar_error_text">Error</xsl:variable>

<!-- *** navigation bars: '', 'google', 'link', or 'simple'*** -->
<xsl:variable name="show_top_navigation">1</xsl:variable>
<xsl:variable name="choose_bottom_navigation">link</xsl:variable>

<!-- *** sort by date/relevance *** -->
<xsl:variable name="show_sort_by">1</xsl:variable>

<!-- *** spelling suggestions *** -->
<xsl:variable name="show_spelling">1</xsl:variable>
<xsl:variable name="spelling_text">Did you mean:</xsl:variable>
<xsl:variable name="spelling_text_color">#c00</xsl:variable>

<!-- *** synonyms suggestions *** -->
<xsl:variable name="show_synonyms">1</xsl:variable>
<xsl:variable name="synonyms_text">You could also try:</xsl:variable>
<xsl:variable name="synonyms_text_color">#c00</xsl:variable>

<!-- *** keymatch suggestions *** -->
<xsl:variable name="show_keymatch">1</xsl:variable>
<xsl:variable name="keymatch_text">KeyMatch</xsl:variable>
<xsl:variable name="keymatch_text_color">#25a</xsl:variable>
<xsl:variable name="keymatch_bg_color">#e8e8ff</xsl:variable>
<xsl:variable name="trim_keymatch_link">
  <xsl:choose>
    <xsl:when test="$media = 'handheld'">1</xsl:when>
    <xsl:otherwise>0</xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- *** Google Desktop integration *** -->
<xsl:variable name="egds_show_search_tabs">
  <xsl:choose>
    <xsl:when test="$media = 'handheld'">0</xsl:when>
    <xsl:otherwise>1</xsl:otherwise>
  </xsl:choose>
</xsl:variable>
<xsl:variable name="egds_appliance_tab_label">Appliance</xsl:variable>
<xsl:variable name="egds_show_desktop_results">0</xsl:variable>

<!--*** onebox information *** -->
<xsl:variable name="show_onebox">1</xsl:variable>

<!-- *** ASR enabling *** -->
<xsl:variable name="show_asr">0</xsl:variable>

<!-- **********************************************************************
 Result elements (can be customized)
     - whether to show an element ('1' for yes, '0' for no)
     - use CSS values for color, font-family and text-size properties
     ********************************************************************** -->

<!-- *** result title and snippet *** -->
<xsl:variable name="show_res_title">1</xsl:variable>
<xsl:variable name="res_title_color">#00c</xsl:variable>
<xsl:variable name="res_title_size">1.35em</xsl:variable>
<xsl:variable name="res_type_size">.85em</xsl:variable>
<xsl:variable name="show_res_snippet">1</xsl:variable>
<xsl:variable name="res_snippet_size">1.05em</xsl:variable>

<!-- *** keyword match (in title or snippet) *** -->
<xsl:variable name="res_keyword_color"></xsl:variable>
<xsl:variable name="res_keyword_size"></xsl:variable>
<xsl:variable name="res_keyword_format">strong</xsl:variable>

<!-- *** link URL *** -->
<xsl:variable name="show_res_url">1</xsl:variable>
<xsl:variable name="res_url_color">#008000</xsl:variable>
<xsl:variable name="res_url_size">1.05em</xsl:variable>
<xsl:variable name="truncate_result_urls">1</xsl:variable>
<xsl:variable name="truncate_result_url_length">100</xsl:variable>

<!-- *** misc elements *** -->
<xsl:variable name="show_meta_tags">0</xsl:variable>
<xsl:variable name="show_res_size">
  <xsl:choose>
    <xsl:when test="$media = 'handheld'">0</xsl:when>
    <xsl:otherwise>1</xsl:otherwise>
  </xsl:choose>
</xsl:variable>
<xsl:variable name="show_res_date">
  <xsl:choose>
    <xsl:when test="$media = 'handheld'">0</xsl:when>
    <xsl:otherwise>1</xsl:otherwise>
  </xsl:choose>
</xsl:variable>
<xsl:variable name="show_res_cache">0</xsl:variable>

<!-- *** used in result cache link, similar pages link, and description *** -->
<xsl:variable name="faint_color">#77c</xsl:variable>

<!-- *** show secure results radio button *** -->
<xsl:variable name="show_secure_radio">0</xsl:variable>

<!-- *** show suggestions (remote aut-completions) *** -->
<xsl:variable name="show_suggest">0</xsl:variable>

<!-- **********************************************************************
 Other variables (can be customized)
     ********************************************************************** -->

<!-- *** show favicon *** -->
<xsl:variable name="show_favicon">1</xsl:variable>
<xsl:variable name="favicon">http://www.google.com/favicon.ico</xsl:variable>

<!-- *** use accesskeys *** -->
<xsl:variable name="use_accesskeys">1</xsl:variable>

<!-- *** show skip links *** -->
<xsl:variable name="show_skip_links">1</xsl:variable>

<!-- *** page title *** -->
<xsl:variable name="home_page_title">Search Home</xsl:variable>
<xsl:variable name="result_page_title">Search Results</xsl:variable>
<xsl:variable name="adv_page_title">Advanced Search</xsl:variable>
<xsl:variable name="error_page_title">Error</xsl:variable>
<xsl:variable name="swr_page_title">Search Within Results</xsl:variable>

<!-- *** choose adv_search page header: '', 'provided', 'mine', or 'both' *** -->
<xsl:variable name="choose_adv_search_page_header">both</xsl:variable>

<!-- *** cached page header text *** -->
<xsl:variable name="cached_page_header_text">This is the cached copy of</xsl:variable>

<!-- *** error message text *** -->
<xsl:variable name="server_error_msg_text">A server error has occurred.</xsl:variable>
<xsl:variable name="server_error_des_text">Check server response code in details.</xsl:variable>
<xsl:variable name="xml_error_msg_text">Unknown XML result type.</xsl:variable>
<xsl:variable name="xml_error_des_text">View page source to see the offending XML.</xsl:variable>

<!-- *** advanced search page panel background color *** -->
<xsl:variable name="adv_search_panel_bgcolor">#cbdced</xsl:variable>

<!-- *** dynamic result cluster options *** -->
<xsl:variable name="show_res_clusters">0</xsl:variable>
<xsl:variable name="res_cluster_position">right</xsl:variable>

<!-- *** javascript files to output - dynamically collected. *** -->
<xsl:variable name="js_files">
  <xsl:if test="$show_res_clusters!='0'">|common|xmlhttp|uri|cluster|</xsl:if>
  <xsl:if test="$show_suggest!='0'">|suggest_js|</xsl:if>
  <xsl:if test="$show_asr!='0'">|clicklog_compiled|</xsl:if>
</xsl:variable>

<!-- SCU Variables -->
<!-- get the environment variables for this front end -->
<xsl:variable name="hideYear" select="'2018'"/>
<xsl:include href="env_variables" />

<!-- **********************************************************************
 My global page header/footer (can be customized)
     ********************************************************************** -->
<xsl:template name="my_page_header">
  <!-- *** add your xhtml here - suggest styling via #ph (header) or .phf (header/footer) -->
</xsl:template>

<xsl:template name="my_page_footer">
  <!-- *** add your xhtml here - suggest styling via #pf (footer) or .phf (header/footer) -->
</xsl:template>

<!-- **********************************************************************
 Logo template (can be customized)
     ********************************************************************** -->
<xsl:template name="logo">
  <h1>
    <xsl:if test="$media != 'handheld'"><xsl:attribute name="id">lg</xsl:attribute></xsl:if>
    <xsl:choose>
      <xsl:when test="$media = 'handheld'">
        <img src="{$logo_url_sm}" width="{$logo_width_sm}" height="{$logo_height_sm}" title="{$logo_alt}"/>
      </xsl:when>
      <xsl:when test="/GSP/CUSTOM/HOME">
        <span title="{$logo_alt}"><xsl:value-of select="$logo_alt"/></span>
      </xsl:when>
      <xsl:otherwise>
        <a href="{$home_url}" title="{$logo_title}"><xsl:value-of select="$logo_alt"/></a>
      </xsl:otherwise>
    </xsl:choose>
  </h1>
</xsl:template>

<!-- **********************************************************************
 Skip links (can be customized)
     ********************************************************************** -->
<xsl:template name="skip_links">
  <xsl:variable name="form_id">
    <xsl:choose>
      <xsl:when test="$show_top_search_box != '0'">sf</xsl:when>
      <xsl:when test="$show_bottom_search_box != '0'">sb</xsl:when>
      <xsl:otherwise></xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <xsl:if test="$form_id != '' or count(RES/R)>0">
    <xsl:variable name="skip_sep">
      <xsl:if test="$form_id != '' and count(RES/R)>0"><xsl:text>, </xsl:text></xsl:if>
    </xsl:variable>
    <p id="sk">
      <xsl:text>Skip to: </xsl:text>
      <xsl:if test="$form_id != ''"><a href="#{$form_id}">Query</a></xsl:if>
      <xsl:value-of select="$skip_sep"/>
      <xsl:if test="count(RES/R)>0"><a href="#re">Results</a></xsl:if>
      <xsl:text>.</xsl:text>
    </p>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Search result page header (can be customized): logo and search box
     ********************************************************************** -->
<xsl:template name="result_page_header">
  <xsl:if test="$show_logo != '0'">
    <xsl:call-template name="logo"/>
  </xsl:if>
  <xsl:if test="$media != 'handheld'">
    <xsl:if test="$show_skip_links != '0'">
      <xsl:call-template name="skip_links"/>
    </xsl:if>
    <xsl:if test="$show_top_search_box != '0'">
      <xsl:call-template name="search_box">
        <xsl:with-param name="type" select="'std_top'"/>
      </xsl:call-template>
    </xsl:if>
  </xsl:if>
  <xsl:if test="/GSP/CT">
    <p id="sw"><xsl:call-template name="stopwords"/></p>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Home search page header (can be customized): logo and search box
     ********************************************************************** -->
<xsl:template name="home_page_header">
  <xsl:param name="type" select="'home'"/>
  <xsl:if test="$show_logo != '0'">
    <xsl:call-template name="logo"/>
  </xsl:if>
  <xsl:if test="$show_top_search_box != '0'">
    <xsl:call-template name="search_box">
      <xsl:with-param name="type" select="$type"/>
    </xsl:call-template>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Separation bar variables (used in advanced search header and result page)
     - use CSS values for background and color properties
     ********************************************************************** -->
<xsl:variable name="sep_bar_border_color">
  <xsl:choose>
    <xsl:when test="$choose_sep_bar = 'ltblue'">#36c</xsl:when>
    <xsl:when test="$choose_sep_bar = 'blue'">#36c</xsl:when>
    <xsl:otherwise><xsl:value-of select="$global_bg_color"/></xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="sep_bar_bg_color">
  <xsl:choose>
    <xsl:when test="$choose_sep_bar = 'ltblue'">#e5ecf9</xsl:when>
    <xsl:when test="$choose_sep_bar = 'blue'">#36c</xsl:when>
    <xsl:otherwise><xsl:value-of select="$global_bg_color"/></xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="sep_bar_text_color">
  <xsl:choose>
    <xsl:when test="$choose_sep_bar = 'ltblue'">#000</xsl:when>
    <xsl:when test="$choose_sep_bar = 'blue'">#fff</xsl:when>
    <xsl:otherwise><xsl:value-of select="$global_text_color"/></xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- **********************************************************************
 Advanced search page header HTML (can be customized)
     ********************************************************************** -->
<xsl:template name="advanced_search_header">
  <xsl:if test="$show_logo != '0'"><xsl:call-template name="logo"/></xsl:if>
</xsl:template>

<!-- **********************************************************************
 Cached page header (can be customized)
     ********************************************************************** -->
<xsl:template name="cached_page_header">
  <xsl:param name="cached_page_url"/>
  <xsl:variable name="stripped_url" select="substring-after($cached_page_url,'://')"/>

  <!-- Leave style embedded. Do not factor out. -->
  <div style="border:1px solid black;margin:auto;padding:6px;">
    <div style="border:2px solid black;padding:8px;margin:auto;background:{$global_bg_color};color:{$global_text_color};">
      <div style="color:#000;">
        <xsl:value-of select="$cached_page_header_text"/>
        <xsl:text> </xsl:text>
        <xsl:choose>
          <xsl:when test="starts-with($cached_page_url, $db_url_protocol)">
            <a href="{concat('/db/',$stripped_url)}">
            <xsl:value-of select="$cached_page_url"/></a>.
          </xsl:when>
          <xsl:when test="starts-with($cached_page_url, $nfs_url_protocol)">
            <a href="{concat('/nfs/',$stripped_url)}">
            <xsl:value-of select="$cached_page_url"/></a>.
          </xsl:when>
          <xsl:when test="starts-with($cached_page_url, $smb_url_protocol)">
            <a href="{concat('/smb/',$stripped_url)}">
            <xsl:value-of select="$cached_page_url"/></a>.
          </xsl:when>
          <xsl:otherwise>
            <a href="{$cached_page_url}">
            <xsl:value-of select="$cached_page_url"/></a>.
          </xsl:otherwise>
        </xsl:choose>
      </div>
    </div>
  </div>
  <hr/>
</xsl:template>

<!-- **********************************************************************
 Suggest service javascript (do not customize)
     ********************************************************************** -->
<xsl:template name="gsa_suggest">
  <xsl:if test="$show_suggest != '0'">
<!-- 
    <script language='javascript' src='suggest_js.js'>//foo</script>
    <script language='javascript'>
    sgst('q');
    sgst('as_q');
    </script>
-->
  </xsl:if>
</xsl:template>


<!-- **********************************************************************
 "Front door" search input page (can be customized)
     ********************************************************************** -->
<xsl:template name="front_door">
  <xsl:param name="type" select="'home'"/>
  <head>
    <xsl:call-template name="head_elements"/>
    <title>
      <xsl:choose>
        <xsl:when test="$type = 'swr'"><xsl:value-of select="$swr_page_title"/></xsl:when>
        <xsl:otherwise><xsl:value-of select="$home_page_title"/></xsl:otherwise>
      </xsl:choose>
    </title>
    <xsl:call-template name="style">
      <xsl:with-param name="mode" select="$type"/>
    </xsl:call-template>
  </head>
  <body dir="ltr">
    <xsl:call-template name="my_page_header"/>
    <xsl:call-template name="home_page_header">
      <xsl:with-param name="type" select="$type"/>
    </xsl:call-template>
    <xsl:if test="$media != 'handheld'"><hr/></xsl:if>
    <xsl:call-template name="copyright"/>
    <xsl:call-template name="my_page_footer"/>
  </body>
</xsl:template>

<!-- **********************************************************************
 Empty result set (can be customized)
     ********************************************************************** -->
<xsl:template name="no_RES">
  <xsl:param name="query"/>

  <!-- *** Output Google Desktop results (if enabled and any available) *** -->
  <xsl:if test="$egds_show_desktop_results != '0'">
    <xsl:call-template name="desktop_results"/>
  </xsl:if>

  <div id="su"><p><span class="page-count">
                <span class="page-count-lbl">Results per page:</span>
                <select id="num" name="num">
                  <xsl:call-template name="select_option">
                    <xsl:with-param name="name" select="'num'"/>
                    <xsl:with-param name="value" select="'10,20,30,50,100,'"/>
                    <xsl:with-param name="desc" select="'10,20,30,50,100,'"/>
                  </xsl:call-template>
                </select>
              </span></p></div>
  <div id="er">
    <p>
      <xsl:text>Your search - </xsl:text>
      <strong>"<xsl:value-of select="$query"/>"</strong>
      <xsl:text> - did not match any documents.</xsl:text>
      <xsl:if test="$media != 'handheld'">
        <xsl:text> </xsl:text>
        <span>
          <xsl:text>No pages were found containing </xsl:text>
          <strong>"<xsl:value-of select="$query"/>"</strong>
          <xsl:text>.</xsl:text>
        </span>
      </xsl:if>
    </p>
    <xsl:if test="$media != 'handheld'">
      <p>Suggestions:</p>
      <ul>
        <li>Make sure all words are spelled correctly.</li>
        <li>You might need to deselect some search options.</li>
        <li>Try different keywords.</li>
        <xsl:if test="/GSP/PARAM[(@name='access') and(@value='a')]">
          <li>Make sure your security credentials are correct.</li>
        </xsl:if>
        <li>Try more general keywords.</li>
      </ul>
    </xsl:if>
  </div>

  <xsl:if test="$media = 'handheld' and $show_bottom_search_box != '0'">
    <xsl:call-template name="bottom_search_box"/>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Empty result set - WITH FILTER OPTIONS SELECTED and no query (can be customized)
     ********************************************************************** -->
<xsl:template name="no_RES_F">
  <xsl:param name="query"/>

  <!-- *** Output Google Desktop results (if enabled and any available) *** -->
  <xsl:if test="$egds_show_desktop_results != '0'">
    <xsl:call-template name="desktop_results"/>
  </xsl:if>

  <div id="er">
    <p>
      <xsl:text>Your search did not match any documents.</xsl:text>
    </p>
    <xsl:if test="$media != 'handheld'">
      <p>Suggestions:</p>
      <ul>
        <li>You might need to deselect some search options.</li>
        <xsl:if test="/GSP/PARAM[(@name='access') and(@value='a')]">
          <li>Make sure your security credentials are correct.</li>
        </xsl:if>
      </ul>
    </xsl:if>
  </div>

  <xsl:if test="$media = 'handheld' and $show_bottom_search_box != '0'">
    <xsl:call-template name="bottom_search_box"/>
  </xsl:if>
</xsl:template>

<!-- ######################################################################
 We do not recommend changes to the following code.  Google Technical
 Support Personnel currently do not support customization of XSLT under
 these Technical Support Services Guidelines.  Such services may be
 provided on a consulting basis, at Google's then-current consulting
 services rates under a separate agreement, if Google personnel are
 available.  Please ask your Google Account Manager for more details if
 you are interested in purchasing consulting services.
     ###################################################################### -->

<!-- **********************************************************************
 Global Style (do not customize)
 default presentation using CSS (Cascading Style Sheets)
     ********************************************************************** -->
<xsl:template name="style">
<xsl:param name="mode"/>
<style type="text/css" media="screen,print">
<xsl:comment>
<xsl:if test="$show_res_clusters = '1'">
  <xsl:choose>
    <xsl:when test="$res_cluster_position = 'top'">
div#clustering {font-size: 84%; line-height: 140%; min-height: 4.6em; _height: 4.6em; margin-top: 1em;}
div#clustering h3 {font-size: 100%; font-weight: bold; margin: 0; padding: 0;}
div#clustering table {margin-left: 2em; font-size: 100%;} 
div#clustering table a {white-space: nowrap;}
div#clustering table td {padding-right: 1em;}
div#clustering #cluster_status {color: #666666; margin-left: 2em;}
</xsl:when>
    <xsl:when test="$res_cluster_position = 'right'">
div#clustering {clear:both;font-size: 84%; line-height: 140%; float: right; width: 15em; margin: 4em 0 0 1em; padding: 0 5px 0 0; }
div#clustering h3 {font-size: 115%; font-weight: bold; margin: 0 0 0.6em 0; padding: 0; color: #444; }
div#clustering ul {list-style: none; margin: 0; padding: 0;}
div#clustering li {margin-left: 2em; text-indent: -2em;}
div#clustering #cluster_status {color: #666666;}
</xsl:when>
  </xsl:choose>
</xsl:if>
<xsl:if test="$show_suggest != '0'">
.ac-renderer {
position : absolute;
width : 300px;
background-color : #FFF;
border : 1px solid #999;
z-index : 10000;
}
.ac-row {
position : relative;
background-color : <xsl:value-of select="$global_bg_color"/>;
margin : 1px;
padding : 1px 4px;
cursor : pointer;
}
.ac-highlighted {
color : #111;
}
.ac-active {
background-color : #BAC9E0;
color : #111;
font-weight : bold;
}
</xsl:if>
</xsl:comment>
</style>
  <xsl:choose>
    <xsl:when test="$style_include != '0'">
      <xsl:choose>
        <xsl:when test="$mode = 'advanced'">
          <link href="{$style_include_prefix}advanced.css" rel="stylesheet" type="text/css" media="screen,print"/>
          <link href="{$style_include_prefix}advanced-print.css" rel="stylesheet" type="text/css" media="print"/>
          <xsl:text disable-output-escaping="yes">&lt;!--[if lte IE 7]&gt;</xsl:text>
          <link href="{$style_include_prefix}advanced-print-ie.css" rel="stylesheet" type="text/css" media="print"/>
          <xsl:text disable-output-escaping="yes">&lt;![endif]--&gt;</xsl:text>
        </xsl:when>
        <xsl:when test="$media = 'handheld'">
          <link href="{$style_include_prefix}search-handheld.css" rel="stylesheet" type="text/css"/>
        </xsl:when>
        <xsl:otherwise>
          <link href="{$style_include_prefix}search.css" rel="stylesheet" type="text/css" media="screen,print"/>
          <link href="{$style_include_prefix}search-print.css" rel="stylesheet" type="text/css" media="print"/>
          <link href="{$style_include_prefix}search-handheld.css" rel="stylesheet" type="text/css" media="handheld"/>
          <xsl:text disable-output-escaping="yes">&lt;!--[if lte IE 7]&gt;</xsl:text>
          <link href="{$style_include_prefix}search-ie.css" rel="stylesheet" type="text/css" media="screen,print"/>
          <link href="{$style_include_prefix}search-print-ie.css" rel="stylesheet" type="text/css" media="print"/>
          <xsl:text disable-output-escaping="yes">&lt;![endif]--&gt;</xsl:text>
          <xsl:text disable-output-escaping="yes">&lt;!--[if IE 7]&gt;</xsl:text>
          <link href="{$style_include_prefix}search-ie7.css" rel="stylesheet" type="text/css" media="screen,print"/>
          <xsl:text disable-output-escaping="yes">&lt;![endif]--&gt;</xsl:text>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:when>
    <xsl:otherwise>
      <xsl:choose>
        <xsl:when test="$mode = 'advanced'">
<style type="text/css" media="screen,print">
<xsl:comment>
/* &lt;![CDATA[ */
html{font-size:76%}
html,body{color:<xsl:value-of select="$global_text_color"/>;background:<xsl:value-of select="$global_bg_color"/>}
img,fieldset{border:0}
form,fieldset,dl,dt,dd,h1,h2,h3{margin:0;padding:0}
body{margin:8px}
body,div{font-family:<xsl:value-of select="$global_font"/>;font-size:<xsl:value-of select="$global_font_size"/>}
h2,h3,.param,.pair .name{clear:left}
.value,.name,.param,.pair,#lg a,#lg span{float:left}
h2{color:<xsl:value-of select="$global_text_color"/>;background:<xsl:value-of select="$sep_bar_bg_color"/>;border-top:1px solid <xsl:value-of select="$sep_bar_border_color"/>;padding:1px 4px;font-size:1.5em}
h3{font-size:1.3em}
fieldset,dl{height:1%;overflow:auto}
fieldset{border:3px solid #cbdced;margin-bottom:1.5em}
dl{line-height:1.75em;font-size:1.1em}
dt label{margin-left:2px;font-weight:bold}
.first{color:<xsl:value-of select="$global_text_color"/>;background:#cbdced}
.value{width:47%}
.name{width:38%}
.param{width:15%}
.pair{width:85%}
.pair .name{width:29%}
.pair .value{width:66%}
#lg a,#lg span{margin-right:11px;text-indent:-9999px;background:url("<xsl:value-of select="$logo_url"/>") no-repeat;height:<xsl:value-of select="$logo_height"/>;width:<xsl:value-of select="$logo_width"/>;overflow:hidden}
#co{clear:both;padding:3em 0 1em 0;text-align:center;font-size:1.1em;color:<xsl:value-of select="$global_co_color"/>;background:<xsl:value-of select="$global_bg_color"/>}
/* ]]&gt; */
</xsl:comment>
</style>

<style type="text/css" media="print">
<xsl:comment>
/* &lt;![CDATA[ */
fieldset{border:0 solid <xsl:value-of select="$global_bg_color"/>}
.first{background:<xsl:value-of select="$global_bg_color"/>}
.value,.name,.param,.pair{float:none;width:auto}
dt label{margin-left:0}
dd{margin-left:20px}
.pair .name,.pair .value{display:inline;width:auto}
.gs,#lg a,#lg span{display:none}
#lg:before{content:url("<xsl:value-of select="$logo_url"/>")}
/* ]]&gt; */
</xsl:comment>
</style>

<xsl:text disable-output-escaping="yes">
&lt;!--[if lte IE 7]&gt;&lt;style type="text/css" media="print"&gt;
#lg{display:list-item;margin:0;padding:0;list-style-image:url("</xsl:text><xsl:value-of select="$logo_url"/><xsl:text disable-output-escaping="yes">");list-style-position:inside;overflow:auto;height:1%}
fieldset,dl{height:auto}
&lt;/style&gt;&lt;![endif]--&gt;
</xsl:text>
        </xsl:when>

        <xsl:otherwise>
          <xsl:if test="$media != 'handheld'">
<style type="text/css" media="screen,print">
<xsl:comment>
/* &lt;![CDATA[ */<!--
*** Common ***
-->
html{font-size:76%}
h1,h2,h3,h4,h5,h6,form,fieldset,#nd,.sa,.sn,#su p,.s,.st,.fm,#sr,#km ul{margin:0;padding:0}
img,fieldset{border:0}
body,div{font-family:<xsl:value-of select="$global_font"/>;font-size:<xsl:value-of select="$global_font_size"/>;color:<xsl:value-of select="$global_text_color"/>}
/*body,.a,a:link,.f,.f:link,.f a:link,a:visited,.f a:visited,a:active,.f a:active{background:<xsl:value-of select="$global_bg_color"/>}*/
#re a:link{color:<xsl:value-of select="$global_link_color"/>}
#re a:visited,.f a:visited{color:<xsl:value-of select="$global_link_color"/>}
#re a:active,.f a:active{color:<xsl:value-of select="$global_alink_color"/>}
#co{clear:both;padding:3em 0 1em 0;text-align:center;font-size:1.1em;color:<xsl:value-of select="$global_co_color"/>}
.bt{vertical-align:bottom}
.z,#sk,#ns span.sp,#n span.sp,#sf h2,#sb h2,#re h3,.rn,#nd span,.sn span{display:none}
hr{clear:both;width:100%;height:1%;overflow:auto;margin-top:1em}
#re{clear:none}
<!--*** Logo ***-->
<xsl:if test="$show_logo != '0'">
#lg a,#lg span{float:left;margin-right:11px;text-indent:-9999px;overflow:hidden;height:<xsl:value-of select="$logo_height"/>;width:<xsl:value-of select="$logo_width"/>;background:url("<xsl:value-of select="$logo_url"/>") no-repeat}</xsl:if><!--

*** Search Within Results ***
--><xsl:if test="$mode = 'swr'">
#sr{font-size:1.3em}
#sr span{display:block}</xsl:if><!--

*** Desktop Nav ***
--><xsl:if test="$egds_show_search_tabs != '0'">
#nd{padding:4px 0 6px 0;font-size:1.1em}
#nd a{display:inline;list-style-type:none;margin-right:.75em}
#nd a:visited,#nd a:link,#nd a:active{color:#00c}</xsl:if><!--

*** Search Box (Header) ***
--><xsl:if test="$show_top_search_box = '1'">
#sf{float:left;font-size:1.1em;padding-bottom:.5em;margin-bottom:11px}
#sf form div{float:left;padding-right:6px}
.sa{font-size:1em}
.sn{float:left;list-style:none}
.sn a{display:block;font-size:.75em;padding:0;margin:0;line-height:1.1}</xsl:if><!--

*** Top Separation Bar ***
--><xsl:if test="$mode = 'advanced' or $mode = 'error' or (/GSP/RES/M>0)">
#su{clear:both;height:1%;overflow:auto;margin-bottom:4px;padding:1px 0;background:<xsl:value-of select="$sep_bar_bg_color"/>;border-top:1px solid <xsl:value-of select="$sep_bar_border_color"/>}
#su h2{float:left;font-size:1.5em;padding:0 2px}</xsl:if>
<!--

*** Stopwords ***
--><xsl:if test="/GSP/CT">
#sw{color:gray;background:<xsl:value-of select="$global_bg_color"/>}</xsl:if><!--

*** Spelling and Synonyms ***
--><xsl:if test="/GSP/Spelling/Suggestion or /GSP/Synonyms/OneSynonym">
#sy,#ss{font-size:1.3em;margin:1em 0;background:<xsl:value-of select="$global_bg_color"/>}
#sy{color:<xsl:value-of select="$synonyms_text_color"/>}
#ss{color:<xsl:value-of select="$spelling_text_color"/>}</xsl:if><!--

*** OneBox ***
--><xsl:if test="$show_onebox != '0' and /GSP/ENTOBRESULTS">
div.oneboxResults{max-height:150px;overflow:hidden;font-size:1.35em}</xsl:if><!--

*** No Results ***
--><xsl:if test="not(RES or GM or Spelling or Synonyms or CT or /GSP/ENTOBRESULTS)">
#er{font-size:1.3em}
#er p span{display:block}</xsl:if><!--

*** Result Page Navigation and Sort By (Header) ***
--><xsl:if test="($show_top_navigation != '0' or $show_sort_by != '0') and count(RES/R) > 0">
#ns{height:1%;overflow:auto;width:100%;clear:both}
#nt,#so{font-size:1.1em;padding:0 2px;margin:1px 0;display:inline}</xsl:if><!--

*** Result Page Navigation ***
--><xsl:if test="$show_top_navigation = '1' and (RES/NB/PU or RES/NB/NU)">
#nt{float:left}
#nt a{margin-right:.75em}</xsl:if><!--

*** Sort By ***
--><xsl:if test="$show_sort_by != '0' and count(RES/R) > 0">
#so{float:right}
#so strong{font-weight:normal}
#so a,#so strong{margin-left:.75em}</xsl:if><!--

*** Keymatch ***
--><xsl:if test="$show_keymatch != '0' and count(/GSP/GM) > 0">
#km{margin:1em 0;clear:both;position:relative}
#km h3{float:right;background:transparent;font-size:1.1em;position:absolute;right:4px;top:4px;color:<xsl:value-of select="$keymatch_text_color"/>}
#km ul{list-style:none}
#km li{padding:4px;margin-bottom:.5em}
#km li,#km .l a, #km .a{background:<xsl:value-of select="$keymatch_bg_color"/>}
#km span{display:none}
#km .l{font-size:1.35em;display:inline}
#km .a{display:block;color:#008000;margin:0;padding:0;font-size:1.1em}</xsl:if><!--

*** Results ***
--><xsl:if test="count(RES/R) > 0">
#re{clear:none}
#re dt,#re dd{margin-left:0}
#re dd{margin-bottom:1em}
#re dt.l2,#re dd.l2{margin-left:40px}
#re .st,#re .a,#re .a:link{color:<xsl:value-of select="$res_url_color"/>}
#re .st,#re .fm{font-size:<xsl:value-of select="$res_url_size"/>}
#re .ft{font-size:<xsl:value-of select="$res_type_size"/>}
#re .f,#re .f:link,#re .f a:link{color:<xsl:value-of select="$faint_color"/>}
#re .l{font-size:<xsl:value-of select="$res_title_size"/>;color:<xsl:value-of select="$res_title_color"/>}
#re .s{font-size:<xsl:value-of select="$res_snippet_size"/>}
#re .s2,#re .fm{display:block}
#om{font-size:1.1em;width:90%;color:#555;}</xsl:if><!--

*** Result Page Navigation (Footer) ***
--><xsl:if test="RES/NB/PU or RES/NB/NU">
#n h3,#n p,#n span,#n span a{margin:0 1px;padding:0}
#n h3{font-size:.95em;font-weight:normal;padding-right:.5em;vertical-align:bottom;white-space:nowrap}
#n h3,#n span,#n span a,#n span strong{display:inline}
#n span a{color:<xsl:value-of select="$global_text_color"/>}
#n span.np a,#n span.pp a{color:#00c}
#n span.cp strong{color:#a90a08}
.b,.b a{color:#00c;font-weight:bold}
#n .go h3,#n .go span a,#n .go span strong{width:16px}
#n .go span.fp strong{width:18px}
#n .go span.pp a{width:68px}
#n .go span.np a,#n .go span.lp strong{width:100px}
#n .go span a{background:url("nav_page.gif") no-repeat}
#n .go span.cp strong{background:url("nav_current.gif") no-repeat}
#n .go span.fp strong{background:url("nav_first.gif") no-repeat}
#n .go span.lp strong{background:url("nav_last.gif") no-repeat}
#n .go span.pp a{background:url("nav_previous.gif") no-repeat}
#n .go span.np a{background:url("nav_next.gif") no-repeat}
#n .go h3,#n .go span a,#n .go span strong{padding-top:26px}</xsl:if><!--

*** Search Box (Footer) ***
--><xsl:if test="$show_bottom_search_box = '1' and (RES or GM or Spelling or Synonyms or CT or /GSP/ENTOBRESULTS)">
#sb{clear:both;font-size:1.1em;margin:20px 0;padding:25px 6px 35px 6px;text-align:center;background:<xsl:value-of select="$sep_bar_bg_color"/>;border-top:1px solid <xsl:value-of select="$sep_bar_border_color"/>;border-bottom:1px solid <xsl:value-of select="$sep_bar_border_color"/>}
#sb .sn a{background:transparent}
#sb fieldset{text-align:left;margin-left:auto;margin-right:auto;display:inline}
#sb form div{float:left;padding-right:6px}</xsl:if>
/* ]]&gt; */
</xsl:comment>
</style>

<xsl:text>
</xsl:text>

<style type="text/css" media="print">
<xsl:comment>
/* &lt;![CDATA[ */
#sf,#sb,#n,#ns,#sy,p.fm,.st .rc,#om span,#sr span,#lg a,#lg span,#su .st,#nd{display:none}
#re dt+dd{page-break-inside:avoid}
a{text-decoration:none}
a:link,a:visited{color:<xsl:value-of select="$global_link_color"/>}
#lg:before{content:url("<xsl:value-of select="$logo_url"/>")}<!--

*** Keymatch ***
--><xsl:if test="$show_keymatch != '0' and count(/GSP/GM)>0">
#km h3{background:#e8e8ff}</xsl:if>
/* ]]&gt; */
</xsl:comment>
</style>

<xsl:text disable-output-escaping="yes">
&lt;!--[if lte IE 7]&gt;&lt;style type="text/css" media="screen,print"&gt;
/*#n h3,#n span a,#n span strong{float:left}
div#n{position:relative;right:50%;float:right}
div.co{position:relative;left:50%;float:left}
#n span.sp{display:none}*/
&lt;/style&gt;&lt;style type="text/css" media="print"&gt;
#lg{display:list-item;margin:0;padding:0;list-style-image:url("</xsl:text><xsl:value-of select="$logo_url"/><xsl:text disable-output-escaping="yes">");list-style-position:inside;overflow:auto;height:1%}
#su{height:auto;overflow:visible}
&lt;/style&gt;&lt;![endif]--&gt;
&lt;!--[if IE 7]&gt;&lt;style type="text/css" media="screen,print"&gt;
#n .ln h3,#n .go h3{width:100%}
&lt;/style&gt;&lt;![endif]--&gt;
</xsl:text>
          </xsl:if>

<style type="text/css">
          <xsl:if test="$media != 'handheld'">
            <xsl:attribute name="media">handheld</xsl:attribute>
          </xsl:if>
<xsl:comment>
/* &lt;![CDATA[ */
<!--
body,.a,#sy,#ss,#sw,a:link,.f,.f:link,.f a:link,a:visited,.f a:visited,a:active,.f a:active{background:<xsl:value-of select="$global_bg_color"/>}
body{color:<xsl:value-of select="$global_text_color"/>}
.a{color:#008000}
#sy{color:<xsl:value-of select="$synonyms_text_color"/>}
#ss{color:<xsl:value-of select="$spelling_text_color"/>}
#sw{color:gray}
a:link{color:<xsl:value-of select="$global_link_color"/>}
.f,.f:link,.f a:link{color:<xsl:value-of select="$faint_color"/>}
a:visited,.f a:visited{color:<xsl:value-of select="$global_vlink_color"/>}
a:active,.f a:active{color:<xsl:value-of select="$global_alink_color"/>}
img,fieldset{border:0}
#lg a,#lg span{float:left;text-indent:-9999px;overflow:hidden;background:url("<xsl:value-of select="$logo_url_sm"/>") no-repeat;height:<xsl:value-of select="$logo_height_sm"/>;width:<xsl:value-of select="$logo_width_sm"/>}
#su h2:after,#km h3:after{content:":"}
#n .pp:after{content:", "}
dd .s:after{content:" - "}
#su,#om,#sr,#sf{clear:both}
.sa,p.fm{margin:0}
dd{margin-left:0;margin-bottom:1em}
h1{margin:0}
#su h2,#km h3,#km ul,#su p,.sn a,#co,fieldset{margin:0;padding:0}
#sf,#sf h2,#sb h2,#re h3,.sn span,#ns span,#sk,.s2,.sn .as,#nd,#su .st,#so strong,#n h3,#n span,.sa span{display:none}
#home #sf,#nt #so,#gs,#gs_f,dt,dd p.fm,#su h2,.sn a,.sa span.ac{display:block}
#n .pp,#n .np,dd p{display:inline}
.sn a{display:list-item}
#su h2,#km h3{font-size:1em}
#ns #so strong,dd strong,#su strong,dt .ft{font-weight:normal}
dt .rn{font-weight:bold}
.sn,#km ul{list-style:none}
.sa label{text-transform:capitalize}
#q, #q_f{width:10em}
/* ]]&gt; */
-->
</xsl:comment>
</style>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
 URL variables (do not customize)
     ********************************************************************** -->
<!-- *** if this is a test search (help variable)-->
<xsl:variable name="is_test_search" select="/GSP/PARAM[@name='testSearch']/@value"/>

<!-- *** if this is a search within results search *** -->
<xsl:variable name="swrnum">
  <xsl:choose>
    <xsl:when test="/GSP/PARAM[(@name='swrnum') and (@value!='')]">
      <xsl:value-of select="/GSP/PARAM[@name='swrnum']/@value"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="0"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- *** help_url: search tip URL (html file) *** -->
<xsl:variable name="help_url">/user_help.html</xsl:variable>

<!-- *** alerts_url: Alerts URL (html file) *** -->
<xsl:variable name="alerts_url">/alerts</xsl:variable>

<!-- *** base_url: collection info *** -->
<xsl:variable name="base_url">
  <xsl:for-each
    select="/GSP/PARAM[@name = 'client' or
                       @name = 'site' or
                       @name = 'num' or
                       @name = 'output' or
                       @name = 'proxystylesheet' or
                       @name = 'access' or
                       @name = 'lr' or
                       @name = 'ie' or
                       @name = 'GSA-skin' or
                       @name = 'partialfields']">
    <xsl:value-of select="@name"/>=<xsl:value-of select="@original_value"/>
    <xsl:if test="position() != last()">&amp;</xsl:if>
  </xsl:for-each>
</xsl:variable>

<!-- *** home_url: ? + collection info + &proxycustom=<HOME/> *** -->
<xsl:variable name="home_url">?<xsl:value-of select="$base_url"
  />&amp;proxycustom=%3CHOME%2F%3E</xsl:variable>

<!-- *** synonym_url: does not include q, as_q, and start elements *** -->
<xsl:variable name="synonym_url"><xsl:for-each
  select="/GSP/PARAM[(@name != 'q') and
                     (@name != 'as_q') and
                     (@name != 'swrnum') and
                     (@name != 'ie') and
                     (@name != 'start') and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
    <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
    <xsl:value-of select="@original_value"/>
    <xsl:if test="position() != last()">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
  </xsl:for-each>
</xsl:variable>

<!-- *** search_url *** -->
<xsl:variable name="search_url">

 <!-- <xsl:for-each select="/GSP/PARAM[(@name != 'start') and
                                   (@name != 'swrnum') and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
-->
 
 <xsl:for-each select="/GSP/PARAM[(@name='q') or (@name='GSA-skin') or (@name='num') or (@name='site') or (@name='proxycustom') or (@name='c') or (@name='partialfields') or (@name='getfields') or starts-with(@name,'as_') and (@name != 'epoch' or $is_test_search != '')]"> 
    <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
    <xsl:value-of select="@original_value"/>
    <xsl:if test="position() != last()">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
  </xsl:for-each>
</xsl:variable>

 <!-- *** search_url_escaped: safe for inclusion in javascript *** -->
<xsl:variable name="search_url_escaped">
    <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select='"&apos;"'/>
    <xsl:with-param name="replace" select='"%27"'/>
    <xsl:with-param name="string" select="$search_url"/>
    </xsl:call-template>
  </xsl:variable>
 
<!-- *** filter_url: everything except resetting "filter=" *** -->
<xsl:variable name="filter_url">?<xsl:for-each
  select="/GSP/PARAM[(@name != 'filter') and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
    <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
    <xsl:value-of select="@original_value"/>
    <xsl:if test="position() != last()">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
  </xsl:for-each>
  <xsl:text disable-output-escaping='yes'>&amp;filter=</xsl:text>
</xsl:variable>

<!-- *** adv_search_url: ? + $search_url + as_q=$q *** -->
<xsl:variable name="adv_search_url">?<xsl:value-of
  select="$search_url"/>&amp;proxycustom=%3CADVANCED%2F%3E</xsl:variable>

<!-- *** db_url_protocol: googledb:// *** -->
<xsl:variable name="db_url_protocol">googledb://</xsl:variable>

<!-- *** nfs_url_protocol: nfs:// *** -->
<xsl:variable name="nfs_url_protocol">nfs://</xsl:variable>

<!-- *** smb_url_protocol: smb:// *** -->
<xsl:variable name="smb_url_protocol">smb://</xsl:variable>

<!-- *** swr_search_url: ? + $search_url + as_q=$q *** -->
<xsl:variable name="swr_search_url">?<xsl:value-of
  select="$search_url"/>&amp;swrnum=<xsl:value-of select="/GSP/RES/M"/></xsl:variable>

<!-- **********************************************************************
 Search Parameters (do not customize)
     ********************************************************************** -->

<!-- *** num_results: actual num_results per page *** -->
<xsl:variable name="num_results">
  <xsl:choose>
    <xsl:when test="/GSP/PARAM[(@name='num') and (@value!='')]">
      <xsl:value-of select="/GSP/PARAM[@name='num']/@value"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="10"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- *** form_params: parameters carried by the search input form *** -->
<xsl:template name="form_params">
  <xsl:for-each
    select="PARAM[@name != 'q' and
                  @name != 'ie' and
                  not(contains(@name, 'as_')) and
                  @name != 'btnG' and
                  @name != 'btnI' and
                  @name != 'site' and
                  @name != 'filter' and
                  @name != 'swrnum' and
                  @name != 'start' and
                  @name != 'access' and
                  @name != 'ip' and
                  (@name != 'epoch' or $is_test_search != '') and
                  not(starts-with(@name ,'metabased_'))]">
    <input type="hidden" name="{@name}" value="{@value}" />
    <xsl:if test="@name = 'oe'">
      <input type="hidden" name="ie" value="{@value}" />
    </xsl:if>
  </xsl:for-each>
  <xsl:if test="$search_collections_xslt = '' and PARAM[@name='site']">
    <input type="hidden" name="site" value="{PARAM[@name='site']/@value}"/>
  </xsl:if>
</xsl:template>

<!-- *** space_normalized_query: q = /GSP/Q *** -->
<xsl:variable name="qval">
  <xsl:value-of select="/GSP/Q"/>
</xsl:variable>

<xsl:variable name="qval_uri">
  <xsl:call-template name="uriencode">
    <xsl:with-param name="text" select="$qval"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="space_normalized_query">
  <xsl:value-of select="normalize-space($qval)" disable-output-escaping="yes"/>
</xsl:variable>

<!-- *** stripped_search_query: q, as_q, ... for cache highlight *** -->
<xsl:variable name="stripped_search_query"><xsl:for-each
  select="/GSP/PARAM[(@name = 'q') or
                     (@name = 'as_q') or
                     (@name = 'as_oq') or
                     (@name = 'as_epq')]"><xsl:value-of select="@original_value"
  /><xsl:if test="position() != last()"
  ><xsl:text disable-output-escaping="yes">+</xsl:text
  ></xsl:if></xsl:for-each>
</xsl:variable>

<xsl:variable name="access">
  <xsl:choose>
    <xsl:when test="/GSP/PARAM[(@name='access') and ((@value='s') or (@value='a'))]">
      <xsl:value-of select="/GSP/PARAM[@name='access']/@original_value"/>
    </xsl:when>
    <xsl:otherwise>p</xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- **********************************************************************
 Figure out what kind of page this is (do not customize)
     ********************************************************************** -->
<xsl:template match="GSP">
  <xsl:choose>
    <xsl:when test="Q or /GSP/RES/M>0">
      <xsl:choose>
        <xsl:when test="$swrnum != 0">
          <!-- <xsl:attribute name="id">swr</xsl:attribute> -->
          <xsl:call-template name="front_door">
            <xsl:with-param name="type" select="'swr'"/>
          </xsl:call-template>
        </xsl:when>
        <xsl:otherwise>
          <!-- <xsl:attribute name="id">results</xsl:attribute> -->
          <xsl:call-template name="search_results"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:when>
    <xsl:when test="CACHE">
      <!-- <xsl:attribute name="id">cache</xsl:attribute> -->
      <xsl:call-template name="cached_page"/>
    </xsl:when>
    <xsl:when test="CUSTOM/HOME">
      <!-- <xsl:attribute name="id">home</xsl:attribute> -->
      <xsl:call-template name="front_door"/>
    </xsl:when>
    <xsl:when test="CUSTOM/ADVANCED">
      <!-- <xsl:attribute name="id">advanced</xsl:attribute> -->
      <xsl:call-template name="advanced_search"/>
    </xsl:when>
    <xsl:when test="ERROR">
      <!-- <xsl:attribute name="id">error</xsl:attribute> -->
      <xsl:call-template name="error_page">
        <xsl:with-param name="errorMessage" select="$server_error_msg_text"/>
        <xsl:with-param name="errorDescription" select="$server_error_des_text"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <!-- <xsl:attribute name="id">error</xsl:attribute> -->
      <xsl:call-template name="error_page">
        <xsl:with-param name="errorMessage" select="$xml_error_msg_text"/>
        <xsl:with-param name="errorDescription" select="$xml_error_des_text"/>
      </xsl:call-template>
    </xsl:otherwise>
  </xsl:choose>
        <script type="text/javascript">
        function resetForms() {
      //    for (var i = 0; i != document.forms.length; i++ ) {
      //        document.forms[i].reset();
      //    }
            var el = document.getElementById('collectionsForm');
            if (el) { el.reset(); }
        }
        </script>
  <!--<script type="text/javascript" src="common.js">//foo</script>
  <script type="text/javascript" src="xmlhttp.js">//foo</script>
  <script type="text/javascript" src="uri.js">//foo</script>
  <script type="text/javascript" src="cluster.js">//foo</script>
  <script type="text/javascript" src="suggest_js.js">//foo</script>-->
  <!--<script id="js_files" type="text/javascript" src="?js={$js_files}">//foo</script>-->
  <xsl:if test="$show_suggest!='0'">
    <script type="text/javascript">
    window.setTimeout
    (
      function()
      {
        sgst('q');
        sgst('as_q');
      },
      1000
    )
    </script>
  </xsl:if>
  <xsl:choose>
    <xsl:when test="$show_res_clusters='1'">
      <script type="text/javascript">
          window.setTimeout
          (
            function()
            {
              var page_query = &quot;<xsl:value-of select="$stripped_search_query"/>&quot;,
                page_start = &quot;<xsl:value-of select="/GSP/PARAM[@name='start']/@value"/>&quot;,
              page_site = &quot;<xsl:value-of select="/GSP/PARAM[@name='site']/@value"/>&quot;
              resetForms();
              //cl_clk(null,page_query,"load",null,null,page_start,page_site,null);
              cs_loadClusters('<xsl:value-of select="$search_url_escaped"/>'.replace(/amp;/g, ''), cs_drawClusters);
            },
            1000
          );
      </script>
    </xsl:when>
    <xsl:otherwise>
      <script type="text/javascript">
        window.setTimeout(resetForms,1000);
      </script>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
 Cached page (do not customize)
     ********************************************************************** -->
<xsl:template name="cached_page">
  <xsl:variable name="cached_page_url" select="CACHE/CACHE_URL"/>
  <xsl:variable name="cached_page_html" select="CACHE/CACHE_HTML"/>

  <!-- *** decide whether to load html page or pdf file *** -->
  <xsl:if test="'.pdf' != substring($cached_page_url,
                1 + string-length($cached_page_url) - string-length('.pdf')) and
                not(starts-with($cached_page_url, $db_url_protocol)) and
                not(starts-with($cached_page_url, $smb_url_protocol)) and
                not(starts-with($cached_page_url, $nfs_url_protocol))">
    <base href="{$cached_page_url}"/>
  </xsl:if>

  <!-- *** display cache page header *** -->
  <xsl:call-template name="cached_page_header">
    <xsl:with-param name="cached_page_url" select="$cached_page_url"/>
  </xsl:call-template>

  <!-- *** display cached contents *** -->
  <xsl:value-of select="$cached_page_html" disable-output-escaping="yes"/>
</xsl:template>

<xsl:template name="escape_quot">
  <xsl:param name="string"/>
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="'&quot;'"/>
    <xsl:with-param name="replace" select="'&amp;quot;'"/>
    <xsl:with-param name="string" select="$string"/>
  </xsl:call-template>
</xsl:template>

<!-- **********************************************************************
 Advanced search page (do not customize)
     ********************************************************************** -->
<xsl:template name="advanced_search">

  <xsl:variable name="html_escaped_as_q">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='q']/@value"/>
    </xsl:call-template>
    <xsl:if test="/GSP/PARAM[@name='as_q']/@value != ''">
      <xsl:value-of select="' '"/>
      <xsl:call-template name="escape_quot">
        <xsl:with-param name="string" select="/GSP/PARAM[@name='as_q']/@value"/>
      </xsl:call-template>
    </xsl:if>
  </xsl:variable>

  <xsl:variable name="html_escaped_as_epq">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_epq']/@value"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="html_escaped_as_oq">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_oq']/@value"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="html_escaped_as_eq">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_eq']/@value"/>
    </xsl:call-template>
  </xsl:variable>

<!--  <head>-->
<!--  <xsl:call-template name="head_elements"/>-->
<!--  <title><xsl:value-of select="$adv_page_title"/></title>-->
<!--  <xsl:call-template name="style">-->
<!--    <xsl:with-param name="mode" select="'advanced'"/>-->
<!--  </xsl:call-template>-->
<!---->
<!--  <script type="text/javascript">-->
<!--<xsl:text disable-output-escaping="yes">-->
<!--//&lt;![CDATA[-->
<!--function setFocus(){if(document.getElementById){document.getElementById('as_q').focus();}}-->
<!--//]]&gt;-->
<!--</xsl:text>-->
<!--  </script>-->
<!---->
<!--  </head>-->

<!--  <body onload="setFocus()" dir="ltr">-->
  <xsl:call-template name="style">
    <xsl:with-param name="mode" select="'advanced'"/>
    
  </xsl:call-template>
  <!-- *** Customer's own advanced search page header *** -->
  <xsl:if test="$choose_adv_search_page_header = 'mine' or
                $choose_adv_search_page_header = 'both'">
    <xsl:call-template name="my_page_header"/>
  </xsl:if>

  <!--====Advanced Search Header======-->
  <xsl:if test="$choose_adv_search_page_header = 'provided' or
                $choose_adv_search_page_header = 'both'">
    <xsl:call-template name="advanced_search_header"/>
  </xsl:if>

  <xsl:call-template name="top_sep_bar">
    <xsl:with-param name="text" select="$sep_bar_adv_text"/>
    <xsl:with-param name="show_info" select="0"/>
    <xsl:with-param name="time" select="0"/>
  </xsl:call-template>

  <!--====Carry over Search Parameters======-->
  <a href="?{$search_url}" class="as bsback"><span class="link">Back to Basic Search</span></a>
  <h2 class="as-hdr">Advanced Search</h2>
  <form method="get" action="" id="as"><fieldset>
<!--    <xsl:if test="PARAM[@name='client']">-->
<!--      <input type="hidden" name="client" value="{PARAM[@name='client']/@value}" />-->
<!--    </xsl:if>-->

    <!--==== site is carried over in the drop down if the menu is used =====-->   
    <xsl:if test="$search_collections_xslt = '' and PARAM[@name='site']">
      <input type="hidden" name="site" value="{PARAM[@name='site']/@value}"/>
    </xsl:if>
<!--    <xsl:call-template name="hidden_field">-->
<!--      <xsl:with-param name="name" select="''"/>-->
<!--    </xsl:call-template>-->

    <!--====Advanced Search Options======-->
    <dl class="first">
      <dt class="param">
        <label for="as_q">Find Results</label>
      </dt>
      <dd>
        <div class="pair">
          <span class="name">
            <label for="as_q">with <strong>all</strong> of the words</label>
          </span>
          <xsl:text> </xsl:text>
          <span class="value">
            <input id="as_q" type="text" name="as_q" size="25">
              <xsl:attribute name="value">
                <xsl:value-of select="$html_escaped_as_q"/>
              </xsl:attribute>
            </input>
            <xsl:text> </xsl:text>
            <select id="num" name="num">
              <xsl:call-template name="select_option">
                <xsl:with-param name="name" select="'num'"/>
                <xsl:with-param name="value" select="'10,20,30,50,100,'"/>
                <xsl:with-param name="desc" select="'10 results,20 results,30 results,50 results,100 results,'"/>
              </xsl:call-template>
            </select>
            <xsl:text> </xsl:text>
            <xsl:call-template name="collection_menu"/>
            <xsl:text> </xsl:text>
            <input type="submit" name="btnG" class="gs" value="{$search_button_text}" />
          </span>
          <br />
          <span class="name">
            <label for="as_epq">with the <strong>exact phrase</strong></label>
          </span>
          <xsl:text> </xsl:text>
          <span class="value">
            <input id="as_epq" type="text" name="as_epq" size="25">
              <xsl:attribute name="value">
                <xsl:value-of select="$html_escaped_as_epq"/>
              </xsl:attribute>
            </input>
          </span>
          <br />
          <span class="name">
            <label for="as_oq">with <strong>at least one</strong> of the words</label>
          </span>
          <xsl:text> </xsl:text>
          <span class="value">
            <input id="as_oq" type="text" name="as_oq" size="25">
              <xsl:attribute name="value">
                <xsl:value-of select="$html_escaped_as_oq"/>
              </xsl:attribute>
            </input>
          </span>
          <br />
          <span class="name">
            <label for="as_eq"><strong>without</strong> the words</label>
          </span>
          <xsl:text> </xsl:text>
          <span class="value">
            <input id="as_eq" type="text" name="as_eq" size="25">
              <xsl:attribute name="value">
                <xsl:value-of select="$html_escaped_as_eq"/>
              </xsl:attribute>
            </input>
          </span>
        </div>
      </dd>
    </dl>
    <dl>
      <!--<dt class="param"><label for="lr">Language</label></dt>
      <dd>
        <span class="name">
          <label for="lr">Return pages written in</label>
        </span>
        <xsl:text> </xsl:text>
        <span class="value">
          <select name="lr" id="lr">
            <xsl:call-template name="select_option">
              <xsl:with-param name="name" select="'lr'"/>
              <xsl:with-param name="value" select="',lang_ar,lang_zh-CN,lang_zh-TW,lang_cs,lang_da,lang_nl,lang_en,lang_et,lang_fi,lang_fr,lang_de,lang_el,lang_iw,lang_hu,lang_is,lang_it,lang_ja,lang_ko,lang_lv,lang_lt,lang_no,lang_pl,lang_pt,lang_ro,lang_ru,lang_es,lang_sv,'"/>
              <xsl:with-param name="desc" select="'any language,Arabic,Chinese (Simplified),Chinese (Traditional),Czech,Danish,Dutch,English,Estonian,Finnish,French,German,Greek,Hebrew,Hungarian,Icelandic,Italian,Japanese,Korean,Latvian,Lithuanian,Norwegian,Polish,Portuguese,Romanian,Russian,Spanish,Swedish,'"/>
            </xsl:call-template>
          </select>
        </span>
      </dd>-->
      <dt class="param"><label for="as_filetype">File Format</label></dt>
      <dd>
        <span class="name">
          <select name="as_ft" id="as_ft">
            <xsl:call-template name="select_option">
              <xsl:with-param name="name" select="'as_ft'"/>
              <xsl:with-param name="value" select="'i,e,'"/>
              <xsl:with-param name="desc" select="concat('Only,Don',$apos,'t,')"/>
            </xsl:call-template>
          </select>
          <xsl:text> </xsl:text>
          <label for="as_filetype">return results of the file format</label>
        </span>
        <xsl:text> </xsl:text>
        <span class="value">
          <select name="as_filetype" id="as_filetype">
            <xsl:call-template name="select_option">
              <xsl:with-param name="name" select="'as_filetype'"/>
              <xsl:with-param name="value" select="',pdf,ps,doc,xls,ppt,rtf,'"/>
              <xsl:with-param name="desc" select="'any format,Adobe Acrobat PDF (.pdf),Adobe Postscript (.ps),Microsoft Word (.doc),Microsoft Excel (.xls),Microsoft Powerpoint (.ppt),Rich Text Format (.rtf),'"/>
            </xsl:call-template>
          </select>
        </span>
      </dd>
      <dt class="param"><label for="as_occt">Occurrences</label></dt>
      <dd>
        <span class="name"><label for="as_occt">Return results where my terms occur</label></span>
        <xsl:text> </xsl:text>
        <span class="value">
          <select name="as_occt" id="as_occt">
            <xsl:call-template name="select_option">
              <xsl:with-param name="name" select="'as_occt'"/>
              <xsl:with-param name="value" select="'any,title,url,'"/>
              <xsl:with-param name="desc" select="'anywhere in the page,in the title of the page,in the URL of the page,'"/>
            </xsl:call-template>
          </select>
        </span>
      </dd>
      <dt class="param"><label for="as_sitesearch">Domain</label></dt>
      <dd>
        <span class="name">
          <select name="as_dt" id="as_dt">
            <xsl:call-template name="select_option">
              <xsl:with-param name="name" select="'as_dt'"/>
              <xsl:with-param name="value" select="'i,e,'"/>
              <xsl:with-param name="desc" select="concat('Only,Don',$apos,'t,')"/>
            </xsl:call-template>
          </select>
          <xsl:text> </xsl:text>
          <label for="as_sitesearch">return results from the site or domain</label>
        </span>
        <xsl:text> </xsl:text>
        <span class="value">
          <input type="text" size="25" name="as_sitesearch" id="as_sitesearch">
            <xsl:attribute name="value">
              <xsl:if test="PARAM[@name='as_sitesearch']">
                <xsl:value-of select="PARAM[@name='as_sitesearch']/@value"/>
              </xsl:if>
            </xsl:attribute>
          </input><br /><em>e.g. www.scu.edu.au/howtoapply</em>
        </span>
      </dd>

      <!-- Sort by Date feature -->
      <dt class="param"><label for="sort">Sort</label></dt>
      <dd>
        <div class="pair">
          <select name="sort" id="sort">
            <xsl:call-template name="select_option">
              <xsl:with-param name="name" select="'sort'"/>
              <xsl:with-param name="value" select="',date:D:S:d1,'"/>
              <xsl:with-param name="desc" select="'Sort by relevance,Sort by date,'"/>
            </xsl:call-template>
          </select>
        </div>
      </dd>

      <!-- Secure Search feature -->
      <xsl:if test="$show_secure_radio != '0'">
        <dt class="param"><label for="as_access_p">Security</label></dt>
        <dd>
          <div class="pair">
            <input type="radio" name="access" id="as_access_p" value="p">
              <xsl:if test="$access='p'">
                <xsl:attribute name="checked">checked</xsl:attribute>
              </xsl:if>
            </input>
            <label for="as_access_p">Search public content only</label>
            <xsl:text> </xsl:text>
            <input type="radio" name="access" id="as_access_a" value="a">
              <xsl:if test="$access='a'">
                <xsl:attribute name="checked">checked</xsl:attribute>
              </xsl:if>
            </input>
            <label for="as_access_a">Search public and secure content (login required)</label>
          </div>
        </dd>
      </xsl:if>
    </dl>
  </fieldset></form>
  <script type="text/javascript">document.getElementById('as_q').focus();</script>

  <!--====Page-Specific Search======-->
  <h2>Page-Specific Search</h2>
  <form method="get" action="" id="h"><fieldset>
    <dl>
      <dt class="param"><label for="as_lq">Links</label></dt>
      <dd>
        <span class="name"><label for="as_lq">Find pages that link to the page</label></span>
        <xsl:text> </xsl:text>
        <span class="value">
          <input type="text" size="30" name="as_lq" id="as_lq">
            <xsl:attribute name="value">
              <xsl:if test="PARAM[@name='as_lq']">
                <xsl:value-of select="PARAM[@name='as_lq']/@value"/>
              </xsl:if>
            </xsl:attribute>
          </input>
          <xsl:text> </xsl:text>
          <input type="submit" name="btnG" class="gs" value="{$search_button_text}" />
        </span>
      </dd>
    </dl>
  </fieldset></form>

  <xsl:call-template name="copyright"/>

  <!-- *** Customer's own advanced search page footer *** -->
  <xsl:call-template name="my_page_footer"/>

<!--  </body>-->
</xsl:template>


<!-- **********************************************************************
 Search results (do not customize)
     ********************************************************************** -->
<xsl:template name="search_results">

  <xsl:choose>
    <xsl:when test="$show_res_clusters = '1'">
      <xsl:call-template name="style">
        <xsl:with-param name="mode" select="'results'"/>
      </xsl:call-template>
        <xsl:call-template name="search_results_body"/>
    </xsl:when>
    <xsl:otherwise>
        <!-- SWEBB: we still need styles even if not clustering? -->
      <xsl:call-template name="style">
        <xsl:with-param name="mode" select="'results'"/>
  </xsl:call-template>
        <!-- END SWEBB -->
       <xsl:call-template name="search_results_body"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<xsl:template name="search_results_body">
<!--
  <xsl:call-template name="personalization"/>
  <xsl:call-template name="analytics"/>
-->
  <!-- *** Customer's own result page header *** -->
  <xsl:if test="$choose_result_page_header = 'mine' or
                $choose_result_page_header = 'both'">
    <xsl:call-template name="my_page_header"/>
  </xsl:if>

  <!-- *** Result page header *** -->
  <xsl:if test="$choose_result_page_header = 'provided' or
                $choose_result_page_header = 'both'">
    <xsl:call-template name="result_page_header" />
  </xsl:if>

  <!-- *** Top separation bar *** -->
    <xsl:if test="/GSP/RES/M>0">
      <xsl:call-template name="top_sep_bar">
        <xsl:with-param name="text" select="$sep_bar_std_text"/>
          <xsl:with-param name="show_info" select="$show_search_info"/>
        <xsl:with-param name="time" select="TM"/>
      </xsl:call-template>
    </xsl:if>

    <!-- *** Handle results (if any) *** -->
    <xsl:choose>
      <xsl:when test="RES or GM or Spelling or Synonyms or CT or /GSP/ENTOBRESULTS">
        <xsl:call-template name="results">
          <xsl:with-param name="query" select="Q"/>
          <xsl:with-param name="time" select="TM"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:when test="Q='' and /GSP/RES/M=0">
        <xsl:call-template name="no_RES_F">
          <xsl:with-param name="query" select="Q"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="no_RES">
          <xsl:with-param name="query" select="Q"/>
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>

    <!-- *** Google footer *** -->
    <xsl:call-template name="copyright"/>

    <!-- *** Customer's own result page footer *** -->
    <xsl:call-template name="my_page_footer"/>

    <xsl:if test="$show_asr != '0'">
    <!--
  <script language='javascript' src='clicklog_compiled.js'>//foo</script>
  -->
    </xsl:if>

    <!-- *** HTML footer *** -->
</xsl:template>

<!-- **********************************************************************
  Collection menu beside the search box
     ********************************************************************** -->
<xsl:template name="collection_menu">
  <xsl:if test="$search_collections_xslt != ''">
    <select name="site">
      <xsl:call-template name="select_option">
        <xsl:with-param name="name" select="'site'"/>
        <xsl:with-param name="value" select="'scu,courses,staff_directory,student,'"/>
        <xsl:with-param name="desc" select="'All SCU,Courses,Staff Directory,Students,'"/>
      </xsl:call-template>
    </select>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
  Search box input form (Types: std_top, std_bottom, home, swr)
     ********************************************************************** -->
<xsl:template name="search_box">
  <xsl:param name="type"/>

  <xsl:variable name="swr_directions">
    <xsl:choose>
      <xsl:when test="$media = 'handheld'">Search within these results.</xsl:when>
      <xsl:otherwise>Use the search box below to search within these results.</xsl:otherwise>
    </xsl:choose>
  </xsl:variable>
  <xsl:variable name="id_suffix"><xsl:if test="$type='std_bottom'">_f</xsl:if></xsl:variable>

  <xsl:if test="($egds_show_search_tabs != '0') and (($type = 'home') or ($type = 'std_top'))">
    <xsl:call-template name="desktop_tab"/>
  </xsl:if>
  <xsl:if test="($type = 'swr')">
    <p id="sr">
      <xsl:text>There were about </xsl:text>
      <strong><xsl:value-of select="RES/M"/></strong>
      <xsl:text> results for </xsl:text>
      <strong><xsl:value-of select="$space_normalized_query"/></strong>
      <xsl:text>. </xsl:text>
      <span><xsl:value-of select="$swr_directions" /></span>
    </p>
  </xsl:if>

  <div>

  <xsl:attribute name="id">
    <xsl:choose>
      <xsl:when test="$type='std_bottom'">sb</xsl:when>
      <xsl:otherwise>sf</xsl:otherwise>
    </xsl:choose>
  </xsl:attribute>

  <form method="get" action=""><h2><label for="q{$id_suffix}">Query</label></h2><fieldset>
    <div>
    <input type="text" id="q{$id_suffix}" size="{$search_box_size}" maxlength="256" value="" alt="Query" title="Enter search query">
      <xsl:choose>
        <xsl:when test="($type = 'swr')">
          <xsl:attribute name="name">as_q</xsl:attribute>
        </xsl:when>
        <xsl:otherwise>
          <xsl:attribute name="name">q</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:value-of select="$space_normalized_query"/>
          </xsl:attribute>
        </xsl:otherwise>
      </xsl:choose>
    </input>
    <xsl:if test="($type = 'swr')"><input type="hidden" name="q" value="{$qval}"/></xsl:if>

    <xsl:text> </xsl:text>
    <xsl:call-template name="collection_menu"/>
    <xsl:text> </xsl:text>

    <input name="btnG" id="gs{$id_suffix}" value="{$search_button_text}">
      <xsl:choose>
        <xsl:when test="$choose_search_button = 'image'">
          <xsl:attribute name="type">image</xsl:attribute>
          <xsl:attribute name="class">bt</xsl:attribute>
          <xsl:attribute name="src">
            <xsl:value-of select="$search_button_image_url"/>
          </xsl:attribute>
        </xsl:when>
        <xsl:otherwise>
          <xsl:attribute name="type">submit</xsl:attribute>
        </xsl:otherwise>
      </xsl:choose>
    </input>
    <xsl:call-template name="form_params"/>
    <xsl:if test="$show_secure_radio != '0'">
      <p class="sa">
        <span>Search: </span>
        <span class="ac"><input type="radio" name="access" id="access_p{$id_suffix}" value="p">
          <xsl:if test="$access='p'">
            <xsl:attribute name="checked">checked</xsl:attribute>
          </xsl:if>
        </input>
        <label for="access_p">public content</label></span>
        <xsl:text> </xsl:text>
        <span class="ac"><input type="radio" name="access" id="access_a{$id_suffix}" value="a">
          <xsl:if test="$access='a'">
            <xsl:attribute name="checked">checked</xsl:attribute>
          </xsl:if>
        </input>
        <label for="access_a">public and secure content</label></span>
      </p>
    </xsl:if>
    </div>

    <xsl:if test="((/GSP/RES/M>0) and ($show_swr_link!='0') and ($type='std_bottom')) or ($show_result_page_adv_link != '0') or ($show_alerts_link != '0') or ($show_result_page_help_link != '0')">
      <p class="sn">
        <xsl:if test="$media = 'handheld' and not(/GSP/CUSTOM/HOME)">
          <a href="{$home_url}">Appliance</a><span>, </span>
        </xsl:if>
        <xsl:if test="(/GSP/RES/M>0) and ($show_swr_link!='0') and ($type='std_bottom')">
          <a href="{$swr_search_url}">
            <xsl:value-of select="$swr_search_anchor_text"/>
          </a><span>, </span>
        </xsl:if>
        <xsl:if test="$show_result_page_adv_link != '0'">
          <a class="as" href="{$adv_search_url}">
            <xsl:value-of select="$adv_search_anchor_text"/>
          </a><span class="as">, </span>
        </xsl:if>
        <xsl:if test="$show_alerts_link != '0'">
          <a href="{$alerts_url}">
            <xsl:value-of select="$alerts_anchor_text"/>
          </a><span>, </span>
        </xsl:if>
        <xsl:if test="$show_result_page_help_link != '0'">
          <a href="{$help_url}">
            <xsl:value-of select="$search_help_anchor_text"/>
          </a>
        </xsl:if>
        <span>.</span>
      </p>
    </xsl:if>
  </fieldset></form>
 <xsl:call-template name="gsa_suggest" />
  </div>
</xsl:template>

<!-- **********************************************************************
  Bottom search box (do not customized)
     ********************************************************************** -->
<xsl:template name="bottom_search_box">
  <xsl:call-template name="search_box">
    <xsl:with-param name="type" select="'std_bottom'"/>
  </xsl:call-template>
</xsl:template>

<!-- **********************************************************************
 Sort-by criteria: sort by date/relevance
     ********************************************************************** -->
<xsl:template name="sort_by">
  <xsl:variable name="sort_by_url"><xsl:for-each
    select="/GSP/PARAM[(@name != 'sort') and
                       (@name != 'start') and
                       (@name != 'epoch' or $is_test_search != '') and
                       not(starts-with(@name, 'metabased_'))]">
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
      <xsl:if test="position() != last()">
        <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
      </xsl:if>
    </xsl:for-each>
  </xsl:variable>

  <xsl:variable name="sort_by_relevance_url">
    <xsl:value-of select="$sort_by_url"
      />&amp;sort=date%3AD%3AL%3Ad1</xsl:variable>

  <xsl:variable name="sort_by_date_url">
    <xsl:value-of select="$sort_by_url"
      />&amp;sort=date%3AD%3AS%3Ad1</xsl:variable>

  <xsl:text> </xsl:text>
  <p id="so">
    <xsl:choose>
      <xsl:when test="/GSP/PARAM[@name = 'sort' and (starts-with(@value,'date:D:S') or starts-with(@value,'date:A:S'))]">
        <strong>Sort by date</strong><span class="sp">,</span><xsl:text> </xsl:text>
        <a href="?{$sort_by_relevance_url}">Sort by relevance</a>
      </xsl:when>
      <xsl:otherwise>
        <a href="?{$sort_by_date_url}">Sort by date</a><span class="sp">,</span><xsl:text> </xsl:text>
        <strong>Sort by relevance</strong>
      </xsl:otherwise>
    </xsl:choose>
    <span class="sp">.</span>
  </p>

</xsl:template>

<!-- **********************************************************************
 Output all results
     ********************************************************************** -->
<xsl:template name="results">
  <xsl:param name="query"/>
  <xsl:param name="time"/>

  <!-- *** Add top navigation/sort-by bar *** -->
  <xsl:if test="($show_top_navigation != '0' or $show_sort_by != '0') and count(RES/R)>0">
    <div id="ns">
      <xsl:if test="$show_top_navigation != '0'">
        <xsl:call-template name="google_navigation">
          <xsl:with-param name="prev" select="RES/NB/PU"/>
          <xsl:with-param name="next" select="RES/NB/NU"/>
          <xsl:with-param name="view_begin" select="RES/@SN"/>
          <xsl:with-param name="view_end" select="RES/@EN"/>
          <xsl:with-param name="guess" select="RES/M"/>
          <xsl:with-param name="navigation_style" select="'top'"/>
        </xsl:call-template>
      </xsl:if>
      <xsl:if test="$show_sort_by != '0'">
        <xsl:call-template name="sort_by"/>
      </xsl:if>
    </div>
  </xsl:if>

  <!-- *** Handle OneBox results, if any ***-->
  <xsl:if test="$show_onebox != '0'">
    <xsl:if test="/GSP/ENTOBRESULTS">
      <xsl:call-template name="onebox"/>
    </xsl:if>
  </xsl:if>

  <!-- *** Output Google Desktop results (if enabled and any available) *** -->
  <xsl:if test="$egds_show_desktop_results != '0'">
    <xsl:call-template name="desktop_results"/>
  </xsl:if>

  <!-- *** Output results details *** -->

  <xsl:if test="$show_res_clusters = '1'">
      <div id='clustering'>
        <h3>Narrow your search</h3>

        <span id='cluster_status'>
          <span id='cluster_message' style="display:none">Loading...</span>
          <noscript>
            Javascript must be enabled for narrowing.
          </noscript>
        </span>
             <ul>
              <li id='cluster_label0'></li>
              <li id='cluster_label1'></li>
              <li id='cluster_label2'></li>
              <li id='cluster_label3'></li>
              <li id='cluster_label4'></li>
              <li id='cluster_label5'></li>
              <li id='cluster_label6'></li>
              <li id='cluster_label7'></li>
              <li id='cluster_label8'></li>
              <li id='cluster_label9'></li>
            </ul>
       
      </div>
    </xsl:if>

  <!-- *** Handle spelling suggestions, if any *** -->
  <xsl:if test="$show_spelling != '0'">
    <xsl:call-template name="spelling"/>
  </xsl:if>

  <!-- *** Handle synonyms, if any *** -->
  <xsl:if test="$show_synonyms != '0'">
    <xsl:call-template name="synonyms"/>
  </xsl:if>

  <!-- for keymatch results -->
  <xsl:if test="$show_keymatch != '0' and count(/GSP/GM)>0">
    <div id="km">
      <h3><xsl:value-of select="$keymatch_text"/></h3>
      <ul>
        <xsl:apply-templates select="/GSP/GM"/>
      </ul>
    </div>
  </xsl:if>

  <!-- for real results -->
  <xsl:if test="count(RES/R)>0">
    <div id="re">
      <h3>Results</h3>
      <dl>
        <xsl:apply-templates select="RES/R">
          <xsl:with-param name="query" select="$query"/>
        </xsl:apply-templates>
      </dl>

      <!-- *** Filter note (if needed) *** -->
      <xsl:if test="(RES/FI) and (not(RES/NB/NU))">
        <p id="om"><em>In order to show you the most relevant results, we have omitted some entries very similar to the <xsl:value-of select="RES/@EN"/> already displayed. <span>If you like, you can <a href="{$filter_url}0">repeat the search with the omitted results included</a>.</span></em></p>
      </xsl:if>
    </div>

    <!-- *** Add bottom navigation *** -->
    <xsl:variable name="nav_style">
      <xsl:choose>
        <xsl:when test="($access='s') or ($access='a')">simple</xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="$choose_bottom_navigation"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>

    <xsl:call-template name="google_navigation">
      <xsl:with-param name="prev" select="RES/NB/PU"/>
      <xsl:with-param name="next" select="RES/NB/NU"/>
      <xsl:with-param name="view_begin" select="RES/@SN"/>
      <xsl:with-param name="view_end" select="RES/@EN"/>
      <xsl:with-param name="guess" select="RES/M"/>
      <xsl:with-param name="navigation_style" select="$nav_style"/>
    </xsl:call-template>
  </xsl:if>

  <xsl:if test="$media = 'handheld' and count(/GSP/RES/R)>0"><hr/></xsl:if>

  <!-- *** Bottom search box *** -->
  <xsl:if test="$show_bottom_search_box != '0'">
    <xsl:call-template name="bottom_search_box"/>
  </xsl:if>

</xsl:template>

<!-- **********************************************************************
 Stopwords suggestions in result page (do not customize)
     ********************************************************************** -->
<xsl:template name="stopwords">
  <xsl:variable name="stopwords_suggestions1">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="'/help/basics.html#stopwords'"/>
      <xsl:with-param name="replace" select="'user_help.html#stop'"/>
      <xsl:with-param name="string" select="/GSP/CT"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="stopwords_suggestions2">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="'/help/basics.html'"/>
      <xsl:with-param name="replace" select="'user_help.html'"/>
      <xsl:with-param name="string" select="$stopwords_suggestions1"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="stopwords_suggestions3">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="'A HREF'"/>
      <xsl:with-param name="replace" select="'a href'"/>
      <xsl:with-param name="string" select="$stopwords_suggestions2"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="stopwords_suggestions">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="'&lt;/A&gt;]&lt;br&gt;'"/>
      <xsl:with-param name="replace" select="'&lt;/a&gt;]&lt;br /&gt;'"/>
      <xsl:with-param name="string" select="$stopwords_suggestions3"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:if test="/GSP/CT">
    <xsl:value-of disable-output-escaping="yes"
      select="$stopwords_suggestions"/>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 HIDE ALL REFERENCES TO psu.edu.au and csu.edu.au
     ********************************************************************** -->
<xsl:template name="notus">
  <xsl:param name="dirty_string"/>

  <xsl:variable name="clean_string1">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select='"psu"'/>
      <xsl:with-param name="replace" select='"scu"'/>
      <xsl:with-param name="string" select="$dirty_string"/>
    </xsl:call-template>
  </xsl:variable>
  <xsl:variable name="clean_string2">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select='"csu"'/>
      <xsl:with-param name="replace" select='"scu"'/>
      <xsl:with-param name="string" select="$clean_string1"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:value-of select="$clean_string2"/>
</xsl:template>

<!-- **********************************************************************
 Spelling suggestions in result page (do not customize)
     ********************************************************************** -->
<xsl:template name="spelling">
  <xsl:if test="/GSP/Spelling/Suggestion">
    <xsl:variable name="suggest_clean">
      <xsl:choose>
        <xsl:when test="contains(/GSP/Spelling/Suggestion[1]/@q, 'csu.edu.au') or contains(/GSP/Spelling/Suggestion[1]/@q, 'psu.edu.au')">
          <xsl:call-template name="notus">
            <xsl:with-param name="dirty_string" select="/GSP/Spelling/Suggestion[1]"/>
          </xsl:call-template>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="/GSP/Spelling/Suggestion[1]"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="suggest_q_clean">
      <xsl:choose>
        <xsl:when test="contains(/GSP/Spelling/Suggestion[1]/@q, 'csu.edu.au') or contains(/GSP/Spelling/Suggestion[1]/@q, 'psu.edu.au')">
          <xsl:call-template name="notus">
            <xsl:with-param name="dirty_string" select="/GSP/Spelling/Suggestion[1]/@q"/>
          </xsl:call-template>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="/GSP/Spelling/Suggestion[1]/@q"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <xsl:variable name="suggest_qe_clean">
      <xsl:choose>
        <xsl:when test="contains(/GSP/Spelling/Suggestion[1]/@q, 'csu.edu.au') or contains(/GSP/Spelling/Suggestion[1]/@q, 'psu.edu.au')">
          <xsl:call-template name="notus">
            <xsl:with-param name="dirty_string" select="/GSP/Spelling/Suggestion[1]/@qe"/>
          </xsl:call-template>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="/GSP/Spelling/Suggestion[1]/@qe"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>

    <xsl:variable name="suggestion">
      <xsl:call-template name="reformat_semantic">
        <xsl:with-param name="markup" select="$suggest_clean"/>
      </xsl:call-template>
    </xsl:variable>

    <xsl:if test="$suggest_q_clean != $space_normalized_query">
      <p id="ss">
        <xsl:value-of select="$spelling_text"/><xsl:text> </xsl:text>
        <a href="?q={$suggest_qe_clean}&amp;spell=1&amp;{$base_url}">
          <xsl:value-of disable-output-escaping="yes" select="$suggestion"/>
        </a>
        <br />
        <xsl:choose>
          <xsl:when test="RES/M > 0">
            <span class="ssbelow">Below are the <xsl:value-of select="RES/M"/> results for: <strong><xsl:value-of select="$space_normalized_query"/></strong></span>
          </xsl:when>
          <xsl:otherwise>
            <!-- empty spans are trouble Mr Google.<span class="ssbelow"></span> -->
          </xsl:otherwise>
        </xsl:choose>
      </p>
    </xsl:if>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Synonym suggestions in result page (do not customize)
     ********************************************************************** -->
<xsl:template name="synonyms">
  <xsl:if test="/GSP/Synonyms/OneSynonym">
  <p id="sy">
    <xsl:value-of select="$synonyms_text"/><xsl:text> </xsl:text>
    <xsl:for-each select="/GSP/Synonyms/OneSynonym">
      <a href="?q={@q}&amp;{$synonym_url}">
        <xsl:value-of disable-output-escaping="yes" select="."/>
      </a>
      <xsl:text> </xsl:text>
    </xsl:for-each>
  </p>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Truncation functions (do not customize)
     ********************************************************************** -->
<xsl:template name="truncate_url">
  <xsl:param name="t_url"/>
  <xsl:choose>
    <xsl:when test="string-length($t_url) &lt; $truncate_result_url_length">
      <xsl:value-of select="$t_url"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:variable name="first" select="substring-before($t_url, '/')"/>
      <xsl:variable name="last">
        <xsl:call-template name="truncate_find_last_token">
          <xsl:with-param name="t_url" select="$t_url"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="path_limit" select="$truncate_result_url_length - (string-length($first) + string-length($last) + 1)"/>
      <xsl:choose>
        <xsl:when test="$path_limit &lt;= 0">
          <xsl:value-of select="concat(substring($t_url, 1, $truncate_result_url_length), '...')"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:variable name="chopped_path">
            <xsl:call-template name="truncate_chop_path">
              <xsl:with-param name="path" select="substring($t_url, string-length($first) + 2, string-length($t_url) - (string-length($first) + string-length($last) + 1))"/>
              <xsl:with-param name="path_limit" select="$path_limit"/>
            </xsl:call-template>
          </xsl:variable>
          <xsl:value-of select="concat($first, '/.../', $chopped_path, $last)"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<xsl:template name="truncate_find_last_token">
  <xsl:param name="t_url"/>
  <xsl:choose>
    <xsl:when test="contains($t_url, '/')">
      <xsl:call-template name="truncate_find_last_token">
        <xsl:with-param name="t_url" select="substring-after($t_url, '/')"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$t_url"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<xsl:template name="truncate_chop_path">
  <xsl:param name="path"/>
  <xsl:param name="path_limit"/>
  <xsl:choose>
    <xsl:when test="string-length($path) &lt;= $path_limit">
      <xsl:value-of select="$path"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:call-template name="truncate_chop_path">
        <xsl:with-param name="path" select="substring-after($path, '/')"/>
        <xsl:with-param name="path_limit" select="$path_limit"/>
      </xsl:call-template>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
  A single result (do not customize)
     ********************************************************************** -->
<xsl:template match="R">
  <xsl:param name="query"/>
  <xsl:variable name="display_url_tmp" select="substring-after(UD, '://')"/>
  <xsl:variable name="display_url">
    <xsl:choose>
      <xsl:when test="$display_url_tmp">
        <xsl:value-of select="$display_url_tmp"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="substring-after(U, '://')"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>
  <xsl:variable name="escaped_url" select="substring-after(UE, '://')"/>
  <xsl:variable name="protocol" select="substring-before(U, '://')"/>
  <xsl:variable name="full_url" select="UE"/>
  <xsl:variable name="crowded_url" select="HN/@U"/>
  <xsl:variable name="crowded_display_url" select="HN"/>
  <xsl:variable name="lower" select="'abcdefghijklmnopqrstuvwxyz'"/>
  <xsl:variable name="upper" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>

  <xsl:variable name="temp_url" select="substring-after(U, '://')"/>
  <xsl:variable name="url_indexed" select="not(starts-with($temp_url, 'noindex!/'))"/>
  <xsl:variable name="stripped_url">
    <xsl:choose>
      <xsl:when test="$truncate_result_urls != '0'">
        <xsl:call-template name="truncate_url">
          <xsl:with-param name="t_url" select="$display_url"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$display_url"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>
  <xsl:variable name="result_num" select="(@N)-(/GSP/RES/@SN)+1"/>
  <xsl:variable name="result_mod_class" select="concat('res-dt', ($result_num mod 2))"/>

  <!-- *** Indent as required (only supports 2 levels) *** -->
  <xsl:variable name="level"><xsl:if test="@L='2'">l2</xsl:if></xsl:variable>

  <!-- *** Result Header *** -->
  <dt class="{$result_mod_class}">
    <xsl:if test="$level != ''">
      <xsl:attribute name="class"><xsl:value-of select="$level"/></xsl:attribute>
    </xsl:if>
    <span class="rn"><xsl:value-of select="$result_num"/>.</span>
    <xsl:text> </xsl:text>

    <!-- *** Result Title (including PDF tag and hyperlink) *** -->
    <xsl:if test="$show_res_title != '0'">
      <xsl:variable name="res_type">
        <xsl:choose>
          <xsl:when test="@MIME='text/html' or @MIME='' or not(@MIME)"></xsl:when>
          <xsl:when test="@MIME='text/plain'">[TEXT]</xsl:when>
          <xsl:when test="@MIME='application/rtf'">[RTF]</xsl:when>
          <xsl:when test="@MIME='application/pdf'">[PDF]</xsl:when>
          <xsl:when test="@MIME='application/postscript'">[PS]</xsl:when>
          <xsl:when test="@MIME='application/vnd.ms-powerpoint'">[MS POWERPOINT]</xsl:when>
          <xsl:when test="@MIME='application/vnd.ms-excel'">[MS EXCEL]</xsl:when>
          <xsl:when test="@MIME='application/msword'">[MS WORD]</xsl:when>
          <xsl:otherwise>
            <xsl:variable name="extension">
              <xsl:call-template name="last_substring_after">
                <xsl:with-param name="string" select="substring-after(
                                                      substring-after(U,'://'),
                                                      '/')"/>
                <xsl:with-param name="separator" select="'.'"/>
                <xsl:with-param name="fallback" select="'UNKNOWN'"/>
              </xsl:call-template>
            </xsl:variable>
            [<xsl:value-of select="translate($extension,$lower,$upper)"/>]
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:if test="$res_type != ''">
        <strong class="ft"><xsl:value-of select="$res_type"/></strong>
        <xsl:text> </xsl:text>
      </xsl:if>

      <xsl:variable name="url_cdata">
        <xsl:choose>
          <xsl:when test="T">
            <xsl:call-template name="reformat_keyword">
              <xsl:with-param name="orig_string" select="T"/>
            </xsl:call-template>
          </xsl:when>
          <xsl:otherwise><xsl:value-of select="$stripped_url"/></xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="extension2">
        <xsl:call-template name="last_substring_after">
          <xsl:with-param name="string" select="substring-after(
                                                      substring-after(U,'://'),
                                                      '/')"/>
          <xsl:with-param name="separator" select="'.'"/>
          <xsl:with-param name="fallback" select="'UNKNOWN'"/>
        </xsl:call-template>
      </xsl:variable>

      <xsl:choose>
        <xsl:when test="$url_indexed">
          <a class="l">
            <xsl:attribute name="href">
              <xsl:choose>
                <!-- *** URI for smb/NFS must be escaped - it appears in the URI query *** -->
                <xsl:when test="$protocol='smb' or $protocol='nfs'">
                  <xsl:value-of disable-output-escaping='yes'
                                select="concat($protocol,'/', substring-after(U,'://'))"/>
                </xsl:when>
                <xsl:when test="$extension2='flv'">
                  <xsl:value-of select="U" disable-output-escaping="yes"/>
                </xsl:when>
                <xsl:when test="starts-with(U, $db_url_protocol)">
                  <xsl:value-of disable-output-escaping='yes'
                                select="concat('db/', substring-after(U,'://'))"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of disable-output-escaping='yes' select="U"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:attribute>
            <!-- *** Accesskeys run from 1-9, then 0 for result 10. No more than that. *** -->
            <xsl:if test="$use_accesskeys != '0' and $result_num &lt;= 10">
              <xsl:attribute name="accesskey">
                <xsl:value-of select="$result_num mod $num_results"/>
              </xsl:attribute>
            </xsl:if>
            <xsl:choose>
              <xsl:when test="$extension2='flv'">
                <xsl:value-of select="U" disable-output-escaping="yes"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="MT[@N = 'courses.name']/@V" disable-output-escaping="yes"/><xsl:text> </xsl:text><span class="course-title-qual"><xsl:value-of select="MT[@N = 'courses.name-qualifier']/@V" disable-output-escaping="yes"/><xsl:text> </xsl:text></span>
              </xsl:otherwise>
            </xsl:choose>
          </a>
        </xsl:when>
        <xsl:otherwise><xsl:value-of select="$url_cdata" disable-output-escaping="yes"/></xsl:otherwise>
      </xsl:choose>
    </xsl:if>
  </dt>

  <dd class="{$result_mod_class}">
    <xsl:if test="$level != ''">
      <xsl:attribute name="class"><xsl:value-of select="$level"/></xsl:attribute>
    </xsl:if>

    <!-- *** Snippet Box *** -->
    <xsl:if test="$show_res_snippet != '0'">
      <xsl:call-template name="reformat_keyword">
        <xsl:with-param name="orig_string" select="S"/>
        <xsl:with-param name="type" select="'snippet'"/>
      </xsl:call-template>
    </xsl:if>

    <!-- *** Meta tags *** -->
    <xsl:if test="$show_meta_tags != '0' and count(MT)>0">
      <ul class="mt">
        <xsl:apply-templates select="MT"/>
      </ul>
    </xsl:if>

    <p class="st">

      <!-- *** URL *** -->
      <span class="a">
        <xsl:choose>
          <xsl:when test="not($url_indexed)">
            <xsl:if test="($show_res_size!='0') or ($show_res_date!='0') or ($show_res_cache!='0')">
              <xsl:text>Not Indexed:</xsl:text>
              <xsl:value-of select="$stripped_url"/>
            </xsl:if>
          </xsl:when>
          <xsl:otherwise>
            <xsl:if test="$show_res_url != '0'">
              <xsl:value-of select="$stripped_url"/>
            </xsl:if>
          </xsl:otherwise>
        </xsl:choose>
      </span>

      <!-- *** Miscellaneous (- size - date - cache) *** -->
      <xsl:if test="$url_indexed">
        <xsl:apply-templates select="HAS/C">
          <xsl:with-param name="stripped_url" select="$stripped_url"/>
          <xsl:with-param name="escaped_url" select="$escaped_url"/>
          <xsl:with-param name="query" select="$query"/>
          <xsl:with-param name="mime" select="@MIME"/>
          <xsl:with-param name="date" select="FS[@NAME='date']/@VALUE"/>
        </xsl:apply-templates>
      </xsl:if>

    </p>

    <!-- *** Link to more links from this site *** -->
    <!-- *** Link to aggregated results from database source *** -->
    <xsl:if test="HN">
      <p class="fm">[ <a class="f" href="?{$search_url}&amp;as_sitesearch={$crowded_url}">More results from <xsl:value-of select="$crowded_display_url"/></a> ] <xsl:if test="starts-with($crowded_url, $db_url_protocol)">[ <a class="f" href="dbaggr?sitesearch={$crowded_url}&amp;{$search_url}">View all data</a> ]</xsl:if></p>
    </xsl:if>

    <!-- *** Result Footer *** -->
  </dd>
</xsl:template>

<!-- **********************************************************************
  Meta tag values within a result (do not customize)
     ********************************************************************** -->
<xsl:template match="MT">
  <li><span class="f"><xsl:value-of select="@N"/>: </span><xsl:value-of select="@V"/></li>
</xsl:template>

<!-- **********************************************************************
  A single keymatch result (do not customize)
     ********************************************************************** -->
<xsl:template match="GM">
  <li>
    <span class="l"><a href="{GL}"><xsl:value-of select="GD"/></a></span>
    <span> - </span>
    <span class="a">
      <xsl:choose>
        <xsl:when test="$trim_keymatch_link = '0'">
          <xsl:value-of select="GL"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:call-template name="replace_string">
            <xsl:with-param name="find" select="'http://'"/>
            <xsl:with-param name="replace" select="''"/>
            <xsl:with-param name="string" select="GL"/>
          </xsl:call-template>
        </xsl:otherwise>
      </xsl:choose>
    </span>
  </li>
</xsl:template>

<!-- **********************************************************************
  Variables for reformatting keyword-match display (do not customize)
     ********************************************************************** -->
<xsl:variable name="keyword_orig_start" select="'&lt;b&gt;'"/>
<xsl:variable name="keyword_orig_end" select="'&lt;/b&gt;'"/>

<xsl:variable name="keyword_reformat_start">
  <xsl:if test="$res_keyword_format">
    <xsl:text>&lt;</xsl:text>
    <xsl:value-of select="$res_keyword_format"/>
    <xsl:text>&gt;</xsl:text>
  </xsl:if>
  <xsl:if test="($res_keyword_size) or ($res_keyword_color)">
    <xsl:text>&lt;span style="</xsl:text>
    <xsl:if test="$res_keyword_size">
      <xsl:text>text-size:</xsl:text>
      <xsl:value-of select="$res_keyword_size"/>
      <xsl:text>;</xsl:text>
    </xsl:if>
    <xsl:if test="$res_keyword_color">
      <xsl:text>color:</xsl:text>
      <xsl:value-of select="$res_keyword_color"/>
      <xsl:text>;</xsl:text>
    </xsl:if>
    <xsl:text>"&gt;</xsl:text>
  </xsl:if>
</xsl:variable>

<xsl:variable name="keyword_reformat_end">
  <xsl:if test="($res_keyword_size) or ($res_keyword_color)">
    <xsl:text>&lt;/span&gt;</xsl:text>
  </xsl:if>
  <xsl:if test="$res_keyword_format">
    <xsl:text>&lt;/</xsl:text>
    <xsl:value-of select="$res_keyword_format"/>
    <xsl:text>&gt;</xsl:text>
  </xsl:if>
</xsl:variable>

<!-- **********************************************************************
  Reformat the keyword match display in a title/snippet string
     (do not customize)
     ********************************************************************** -->
<xsl:template name="reformat_keyword">
  <xsl:param name="orig_string"/>
  <xsl:param name="type"/>

  <xsl:variable name="reformatted_1">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="$keyword_orig_start"/>
      <xsl:with-param name="replace" select="$keyword_reformat_start"/>
      <xsl:with-param name="string" select="$orig_string"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="reformatted_2">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="$keyword_orig_end"/>
      <xsl:with-param name="replace" select="$keyword_reformat_end"/>
      <xsl:with-param name="string" select="$reformatted_1"/>
    </xsl:call-template>
  </xsl:variable>

  <!-- Swap out presentation-related elements with semantic equivalents -->
  <xsl:variable name="reformatted_3">
    <xsl:call-template name="reformat_semantic">
      <xsl:with-param name="markup" select="$reformatted_2"/>
    </xsl:call-template>
  </xsl:variable>

  <!-- Swap out presentation-related br in second half of snippets with a span -->
  <xsl:choose>
    <xsl:when test="$type = 'snippet'">
      <p class="s">
        <xsl:variable name="br_html">&lt;br&gt;</xsl:variable>
   <!--<div style="background: #adadad;">    
        <xsl:choose>
          <!- - Presuming one (and only one) br exists ... - ->
          <xsl:when test="contains($reformatted_3, $br_html)">
            <xsl:value-of disable-output-escaping='yes' select="substring-before($reformatted_3, $br_html)"/>
            <span class="s2">
              <xsl:value-of disable-output-escaping='yes' select="substring-after($reformatted_3, $br_html)"/>
            </span>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of disable-output-escaping='yes' select="$reformatted_3"/>
          </xsl:otherwise>
        </xsl:choose>
</div> -->

        <xsl:choose>
          <xsl:when test="/GSP/PARAM[(@name='site') and(@value='squiz-courses')]">
            <xsl:call-template name="htmltotrimmedtext">
              <xsl:with-param name="html" select="MT[@N = 'courses.about']/@V"/>
              <xsl:with-param name="len" select="310"/>
            </xsl:call-template>
          </xsl:when>
          <xsl:otherwise>
            <xsl:call-template name="htmltotrimmedtext">
              <xsl:with-param name="html" select="MT[@N = 'units.aim']/@V"/>
              <xsl:with-param name="len" select="310"/>
            </xsl:call-template>
          </xsl:otherwise>
        </xsl:choose>
       </p>

       <xsl:variable name="domAvails" select="MT[@N = 'courses.avail-combo']/@V"/>
       <xsl:variable name="intAvails" select="MT[@N = 'courses.int-avail-combo']/@V"/>

       <div class="avails" data-int-avails="{$intAvails}" data-dom-avails="{$domAvails}">
        <div class="dom-avails avail-table">
          <!--RAW-DOM:<xsl:value-of select="MT[@N = 'courses.avail-combo']/@V"/>-->
          <xsl:choose>
            <xsl:when test="/GSP/PARAM[(@name='site') and(@value='squiz-courses')]">
              <xsl:call-template name="transformAvailCombo">
               <xsl:with-param name="availCombo" select="MT[@N = 'courses.avail-combo']/@V" />
               <xsl:with-param name="webYear" select="MT[@N = 'courses.year']/@V"/>
               <xsl:with-param name="spkCode" select="MT[@N = 'courses.spk-code']/@V"/>
               <xsl:with-param name="headTitle" select="'Domestic intakes'"/>
              </xsl:call-template>
            </xsl:when>
            <xsl:otherwise>
               <xsl:call-template name="transformAvailCombo">
                <xsl:with-param name="availCombo" select="MT[@N = 'courses.avail-combo']/@V" />
                <xsl:with-param name="webYear" select="MT[@N = 'courses.year']/@V"/>
                <xsl:with-param name="spkCode" select="MT[@N = 'courses.spk-code']/@V"/>
                <xsl:with-param name="headTitle" select="'Domestic intakes'"/>
              </xsl:call-template>
            </xsl:otherwise>
          </xsl:choose>
        </div>
        <div class="int-avails avail-table">
          <!--RAW-INT:<xsl:value-of select="MT[@N = 'courses.int-avail-combo']/@V"/>-->
          <xsl:call-template name="transformAvailCombo">
         <xsl:with-param name="availCombo" select="MT[@N = 'courses.int-avail-combo']/@V" />
         <xsl:with-param name="webYear" select="MT[@N = 'courses.year']/@V"/>
         <xsl:with-param name="spkCode" select="MT[@N = 'courses.spk-code']/@V"/>
         <xsl:with-param name="headTitle" select="'International intakes'"/>
        </xsl:call-template>
        </div>
      </div>
      <!--</p>-->
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of disable-output-escaping='yes' select="$reformatted_3"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
  Helper templates for converting standard-issue HTML elements
     to more semantic variants (do not customize)
     ********************************************************************** -->
<xsl:template name="reformat_semantic">
  <xsl:param name="markup"/>

  <!-- List of elements we'll be replacing (keep space at the end) -->
  <xsl:param name="from" select="'b i '"/>
  <xsl:param name="to" select="'strong em '"/>

  <!-- Get the next pair of search/replace candidates -->
  <xsl:variable name="find" select="substring-before($from, ' ')"/>
  <xsl:variable name="replace" select="substring-before($to, ' ')"/>

  <xsl:choose>
    <xsl:when test="$find">
      <xsl:variable name="markup-new-2">
        <xsl:call-template name="replace_string">
          <xsl:with-param name="find" select="concat('&lt;',$find,'&gt;')"/>
          <xsl:with-param name="replace" select="concat('&lt;',$replace,'&gt;')"/>
          <xsl:with-param name="string" select="$markup"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="markup-new">
        <xsl:call-template name="replace_string">
          <xsl:with-param name="find" select="concat('&lt;/',$find,'&gt;')"/>
          <xsl:with-param name="replace" select="concat('&lt;/',$replace,'&gt;')"/>
          <xsl:with-param name="string" select="$markup-new-2"/>
        </xsl:call-template>
      </xsl:variable>
      <!-- Recursion: It's fun for the whole family! -->
      <xsl:call-template name="reformat_semantic">
        <xsl:with-param name="markup" select="$markup-new"/>
        <xsl:with-param name="from" select="substring-after($from, ' ')"/>
        <xsl:with-param name="to" select="substring-after($to, ' ')"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$markup"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
  Helper templates for generating a result item (do not customize)
     ********************************************************************** -->

<!-- *** Miscellaneous: - size - date - cache *** -->
<xsl:template match="C">
  <xsl:param name="stripped_url"/>
  <xsl:param name="escaped_url"/>
  <xsl:param name="query"/>
  <xsl:param name="mime"/>
  <xsl:param name="date"/>

  <xsl:variable name="docid"><xsl:value-of select="@CID"/></xsl:variable>

  <xsl:if test="$show_res_size != '0'">
    <xsl:if test="not(@SZ='')">
      <xsl:text> - </xsl:text>
      <xsl:value-of select="@SZ"/>
    </xsl:if>
  </xsl:if>

  <xsl:if test="$show_res_date != '0'">
    <xsl:if test="($date != '')">
      <xsl:text> - </xsl:text>
      <xsl:value-of select="$date"/>
    </xsl:if>
  </xsl:if>

  <xsl:if test="$show_res_cache != '0'">
    <span class="rc">
      <xsl:text> - </xsl:text>
      <xsl:variable name="cache_encoding">
        <xsl:choose>
          <xsl:when test="'' != @ENC"><xsl:value-of select="@ENC"/></xsl:when>
          <xsl:otherwise>UTF-8</xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <!-- <a class="f" href="?q=cache:{$docid}:{$escaped_url}+{
                         $stripped_search_query}&amp;{$base_url}&amp;oe={
                         $cache_encoding}"> -->
      <a class="f" href="?q=cache:{$docid}:{$escaped_url}">
        <xsl:choose>
          <xsl:when test="not($mime)">Cached</xsl:when>
          <xsl:when test="$mime='text/html'">Cached</xsl:when>
          <xsl:when test="$mime='text/plain'">Cached</xsl:when>
          <xsl:otherwise>Text Version</xsl:otherwise>
        </xsl:choose>
      </a>
    </span>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Google navigation directional endpoints: first/prev/next/last (do not customize)
     ********************************************************************** -->
<xsl:template name="nav_dir">
  <xsl:param name="style"/>
  <xsl:param name="type"/>
  <xsl:param name="nav"/>
  <xsl:param name="view_begin"/>

  <xsl:variable name="fontclass">
    <xsl:if test="$style != 'top'"><xsl:text> </xsl:text>b</xsl:if>
  </xsl:variable>

  <xsl:choose>
    <xsl:when test="$type = 'prev'">
      <xsl:choose>
        <xsl:when test="$nav">
          <span class="pp{$fontclass}"><a href="?{$search_url}&amp;start={$view_begin - $num_results - 1}" title="Go to previous page">Previous</a></span>
        </xsl:when>
        <xsl:otherwise>
          <xsl:if test="$style != 'top'">
            <span class="fp" title="First Page"><strong><xsl:call-template name="nbsp"/></strong></span>
          </xsl:if>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:when>
    <xsl:otherwise>
      <xsl:choose>
        <xsl:when test="$nav">
          <span class="np{$fontclass}"><a href="?{$search_url}&amp;start={$view_begin + $num_results - 1}" title="Go to next page">Next</a></span>
        </xsl:when>
        <xsl:otherwise>
          <xsl:if test="$style != 'top'">
            <span class="lp" title="Last Page"><strong><xsl:call-template name="nbsp"/></strong></span>
          </xsl:if>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
 Google navigation bar in result page (do not customize)
     ********************************************************************** -->
<xsl:template name="google_navigation">
  <xsl:param name="prev"/>
  <xsl:param name="next"/>
  <xsl:param name="view_begin"/>
  <xsl:param name="view_end"/>
  <xsl:param name="guess"/>
  <xsl:param name="navigation_style"/>

  <!-- *** Should we even show navigation? *** -->
  <xsl:if test="$prev or $next">

  <xsl:if test="$navigation_style = 'top'">
    <p id="nt">
      <!-- *** Get previous navigation, if available *** -->
      <xsl:call-template name="nav_dir">
        <xsl:with-param name="style" select="$navigation_style"/>
        <xsl:with-param name="type" select="'prev'"/>
        <xsl:with-param name="nav" select="$prev"/>
        <xsl:with-param name="view_begin" select="$view_begin"/>
      </xsl:call-template>

      <xsl:if test="$prev and $next">
        <span class="sp">,</span><xsl:text> </xsl:text>
      </xsl:if>

      <!-- *** Get next navigation, if available *** -->
      <xsl:call-template name="nav_dir">
        <xsl:with-param name="style" select="$navigation_style"/>
        <xsl:with-param name="type" select="'next'"/>
        <xsl:with-param name="nav" select="$next"/>
        <xsl:with-param name="view_begin" select="$view_begin"/>
      </xsl:call-template>

      <span class="sp">.</span>
    </p>
  </xsl:if>

  <xsl:if test="$navigation_style != 'top'">
    <div id="n"><div>
      <xsl:attribute name="class">
        <xsl:text>co</xsl:text>
        <xsl:if test="$navigation_style = 'google'"> go</xsl:if>
        <xsl:if test="$navigation_style != 'google'"> ln</xsl:if>
      </xsl:attribute>

      <h3>Result Page</h3>
      <p>
        <strong><xsl:value-of select="RES/M"/> results<xsl:if test="$media != 'handheld' and Q != ''"><span id="ofwhatsearch"> for '<xsl:value-of select="$space_normalized_query"/>'</span></xsl:if></strong>
        <span class="nav-control">
        <xsl:text>Pages:</xsl:text>
        <!-- *** Show previous navigation, if available *** -->
        <xsl:call-template name="nav_dir">
          <xsl:with-param name="style" select="$navigation_style"/>
          <xsl:with-param name="type" select="'prev'"/>
          <xsl:with-param name="nav" select="$prev"/>
          <xsl:with-param name="view_begin" select="$view_begin"/>
        </xsl:call-template>
        <xsl:if test="$prev">
          <span class="sp">,</span><xsl:text> </xsl:text>
        </xsl:if>

        <xsl:if test="($navigation_style = 'google') or ($navigation_style = 'link')">
          <!-- *** Google result set navigation *** -->
          <xsl:variable name="mod_end">
            <xsl:choose>
              <xsl:when test="$next"><xsl:value-of select="$guess"/></xsl:when>
              <xsl:otherwise><xsl:value-of select="$view_end"/></xsl:otherwise>
            </xsl:choose>
          </xsl:variable>

          <xsl:call-template name="result_nav">
            <xsl:with-param name="start" select="0"/>
            <xsl:with-param name="end" select="$mod_end"/>
            <xsl:with-param name="current_view" select="($view_begin)-1"/>
            <xsl:with-param name="navigation_style" select="$navigation_style"/>
          </xsl:call-template>
        </xsl:if>

        <!-- *** Show next navigation, if available *** -->
        <xsl:call-template name="nav_dir">
          <xsl:with-param name="style" select="$navigation_style"/>
          <xsl:with-param name="type" select="'next'"/>
          <xsl:with-param name="nav" select="$next"/>
          <xsl:with-param name="view_begin" select="$view_begin"/>
        </xsl:call-template><span class="sp">.</span>
        </span>
      </p>
    </div></div>
  </xsl:if>

  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Helper templates for generating Google result navigation (do not customize)
   only shows 10 sets up or down from current view
     ********************************************************************** -->
<xsl:template name="result_nav">
  <xsl:param name="start" select="'0'"/>
  <xsl:param name="end"/>
  <xsl:param name="current_view"/>
  <xsl:param name="navigation_style"/>

  <!-- *** Choose how to show this result set *** -->
  <xsl:choose>
    <xsl:when test="($start)&lt;(($current_view)-(10*($num_results)))">
    </xsl:when>
    <xsl:when test="(($current_view)&gt;=($start)) and
                    (($current_view)&lt;(($start)+($num_results)))">
      <span class="cp" title="Current page"><strong><xsl:value-of select="(($start)div($num_results))+1"/></strong></span><span class="sp">,</span>
    </xsl:when>
    <xsl:otherwise>
      <xsl:variable name="page_num">
        <xsl:value-of select="(($start)div($num_results))+1"/>
      </xsl:variable>
      <span><a href="?{$search_url}&amp;start={$start}" title="Go to page {$page_num}"><xsl:value-of select="$page_num"/></a></span><span class="sp">,</span>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:text> </xsl:text>

  <!-- *** Recursively iterate through result sets to display *** -->
  <xsl:if test="((($start)+($num_results))&lt;($end)) and
                ((($start)+($num_results))&lt;(($current_view)+
                (10*($num_results))))">
    <xsl:call-template name="result_nav">
      <xsl:with-param name="start" select="$start+$num_results"/>
      <xsl:with-param name="end" select="$end"/>
      <xsl:with-param name="current_view" select="$current_view"/>
      <xsl:with-param name="navigation_style" select="$navigation_style"/>
    </xsl:call-template>
  </xsl:if>

</xsl:template>

<!-- **********************************************************************
 Top separation bar (do not customize)
     ********************************************************************** -->
<xsl:template name="top_sep_bar">
  <xsl:param name="text"/>
  <xsl:param name="show_info"/>
  <xsl:param name="time"/>

  <div id="su">
    <xsl:if test="$media != 'handheld' or count(/GSP/RES/R)>0">
      <h2><xsl:value-of select="$text"/></h2>
    </xsl:if>
    <xsl:if test="$show_info != '0'">
      <p>
        <xsl:if test="count(/GSP/RES/R)>0">
          <xsl:if test="$media = 'handheld'">'<xsl:value-of select="$space_normalized_query"/>'<br /></xsl:if>
          <xsl:choose>
            <xsl:when test="$access = 's' or $access = 'a'">Results <strong><xsl:value-of select="RES/@SN"/></strong> - <strong><xsl:value-of select="RES/@EN"/></strong><xsl:if test="$media != 'handheld'"> for <strong><xsl:value-of select="$space_normalized_query"/></strong></xsl:if>.</xsl:when>
            <xsl:otherwise>
              <!--Results <strong><xsl:value-of select="RES/@SN"/></strong> - <strong><xsl:value-of select="RES/@EN"/></strong> of about -->
              <strong><xsl:value-of select="RES/M"/> results<xsl:if test="$media != 'handheld' and Q != ''"><span id="ofwhatsearch"> for '<xsl:value-of select="$space_normalized_query"/>'</span></xsl:if></strong>
              <span class="page-count">
                <span class="page-count-lbl">Results per page:</span>
                <select id="num" name="num">
                  <xsl:call-template name="select_option">
                    <xsl:with-param name="name" select="'num'"/>
                    <xsl:with-param name="value" select="'10,20,30,50,100,'"/>
                    <xsl:with-param name="desc" select="'10,20,30,50,100,'"/>
                  </xsl:call-template>
                </select>
              </span>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:if>
        <xsl:if test="$media != 'handheld'">
          <xsl:text> </xsl:text>
          <span class="st">Search took <strong><xsl:value-of select="round($time * 100.0) div 100.0"/></strong> seconds.</span>
        </xsl:if>
      </p>
    </xsl:if>
  </div>

  <xsl:if test="$choose_sep_bar = 'line'"><hr/></xsl:if>
</xsl:template>

<!-- **********************************************************************
 Utility function for constructing copyright text (do not customize)
     ********************************************************************** -->
<xsl:template name="copyright">
</xsl:template>

<!-- **********************************************************************
 Utility functions for generating html entities
     ********************************************************************** -->
<xsl:template name="nbsp">
  <xsl:text disable-output-escaping="yes">&amp;nbsp;</xsl:text>
</xsl:template>
<xsl:template name="nbsp3">
  <xsl:call-template name="nbsp"/>
  <xsl:call-template name="nbsp"/>
  <xsl:call-template name="nbsp"/>
</xsl:template>
<xsl:template name="nbsp4">
  <xsl:call-template name="nbsp3"/>
  <xsl:call-template name="nbsp"/>
</xsl:template>
<xsl:template name="quot">
  <xsl:text disable-output-escaping="yes">&amp;quot;</xsl:text>
</xsl:template>
<xsl:template name="copy">
  <xsl:text disable-output-escaping="yes">&amp;copy;</xsl:text>
</xsl:template>
<xsl:variable name="apos">'</xsl:variable>

<!-- **********************************************************************
 Hidden field helper template (do not customize)
     ********************************************************************** -->
<xsl:template name="hidden_field">
  <xsl:param name="name"/>
  <xsl:variable name="n" select="substring-before($name, ',')"/>
  <xsl:if test="$name">
    <xsl:if test="PARAM[@name=$n]">
      <input type="hidden" name="{$n}" value="{PARAM[@name=$n]/@value}" />
    </xsl:if>
    <xsl:call-template name="hidden_field">
      <xsl:with-param name="name" select="substring-after($name, ',')"/>
    </xsl:call-template>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Select option helper template (do not customize)
     ********************************************************************** -->
<xsl:template name="select_option">
  <xsl:param name="name"/>
  <xsl:param name="value"/>
  <xsl:param name="desc"/>
  <xsl:variable name="v" select="substring-before($value, ',')"/>
  <xsl:variable name="d" select="substring-before($desc, ',')"/>
  <xsl:choose>
    <xsl:when test="$value">
      <option value="{$v}">
        <xsl:if test="PARAM[(@name=$name) and (@value=$v)]">
          <xsl:attribute name="selected">selected</xsl:attribute>
        </xsl:if>
        <xsl:value-of select="$d"/>
      </option>
      <xsl:call-template name="select_option">
        <xsl:with-param name="name" select="$name"/>
        <xsl:with-param name="value" select="substring-after($value, ',')"/>
        <xsl:with-param name="desc" select="substring-after($desc, ',')"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise></xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
 Content-type helper template (do not customize)
     ********************************************************************** -->
<xsl:template name="content_type">
  <xsl:param name="name"/>
  <xsl:param name="value"/>
  <xsl:param name="charset"/>
  <xsl:param name="default" select="''"/>
  <xsl:variable name="v" select="substring-before($value, ',')"/>
  <xsl:variable name="c" select="substring-before($charset, ',')"/>
  <xsl:choose>
    <xsl:when test="$value">
      <xsl:choose>
        <xsl:when test="PARAM[(@name=$name) and (@value=$v)]">
          <meta http-equiv="content-type" content="application/xhtml+xml; charset={$c}"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:call-template name="content_type">
            <xsl:with-param name="name" select="$name"/>
            <xsl:with-param name="value" select="substring-after($value, ',')"/>
            <xsl:with-param name="charset" select="substring-after($charset, ',')"/>
            <xsl:with-param name="default" select="$default"/>
          </xsl:call-template>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:when>
    <xsl:otherwise>
      <meta http-equiv="content-type" content="application/xhtml+xml; charset={$default}"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
 Utility functions for generating head elements with a meta tag to the output
 specifying the character set as requested
     ********************************************************************** -->
<xsl:template name="head_elements">
  <xsl:if test="$show_favicon != '0'">
    <link rel="shortcut icon" href="{$favicon}" />
  </xsl:if>
  <meta name="robots" content="noindex,nofollow"/>
  <xsl:choose>
    <xsl:when test="PARAM[(@name='oe') and (@value!='')]">
      <xsl:call-template name="content_type">
        <xsl:with-param name="name" select="'oe'"/>
        <xsl:with-param name="value" select="'utf8,'"/>
        <xsl:with-param name="charset" select="'UTF-8,'"/>
        <xsl:with-param name="default" select="PARAM[@name='oe']/@value"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:call-template name="content_type">
        <xsl:with-param name="name" select="'lr'"/>
        <xsl:with-param name="value" select="'lang_zh-CN,lang_zh-TW,lang_cs,lang_da,lang_nl,lang_en,lang_et,lang_fi,lang_fr,lang_de,lang_el,lang_iw,lang_hu,lang_is,lang_it,lang_ja,lang_ko,lang_lv,lang_lt,lang_no,lang_pl,lang_pt,lang_ro,lang_ru,lang_es,lang_sv,'"/>
        <xsl:with-param name="charset" select="'GB2312,Big5,ISO-8859-2,ISO-8859-1,ISO-8859-1,ISO-8859-1,ISO-8859-1,ISO-8859-1,ISO-8859-1,ISO-8859-1,ISO-8859-7,ISO-8859-8-I,ISO-8859-2,ISO-8859-1,ISO-8859-1,Shift_JIS,EUC-KR,ISO-8859-1,ISO-8859-1,ISO-8859-1,ISO-8859-2,ISO-8859-1,ISO-8859-2,windows-1251,ISO-8859-1,ISO-8859-1,'"/>
      </xsl:call-template>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
 Utility functions (do not customize)
     ********************************************************************** -->

<!-- *** Find the substring after the last occurence of a separator *** -->
<xsl:template name="last_substring_after">
  <xsl:param name="string"/>
  <xsl:param name="separator"/>
  <xsl:param name="fallback"/>
  <xsl:variable name="newString" select="substring-after($string, $separator)"/>
  <xsl:choose>
    <xsl:when test="$newString!=''">
      <xsl:call-template name="last_substring_after">
        <xsl:with-param name="string" select="$newString"/>
        <xsl:with-param name="separator" select="$separator"/>
        <xsl:with-param name="fallback" select="$newString"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$fallback"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- *** Find and replace *** -->
<xsl:template name="replace_string">
  <xsl:param name="find"/>
  <xsl:param name="replace"/>
  <xsl:param name="string"/>
  <xsl:choose>
    <xsl:when test="contains($string, $find)">
      <xsl:value-of select="substring-before($string, $find)"/>
      <xsl:value-of select="$replace"/>
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select="$find"/>
        <xsl:with-param name="replace" select="$replace"/>
        <xsl:with-param name="string" select="substring-after($string, $find)"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$string"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- *** URI Encode *** -->
<xsl:template name="uriencode">
  <xsl:param name="text"/>

  <xsl:param name="from" select="'% $ &amp; + , / : ; = ? @ '"/>
  <xsl:param name="to" select="'25 24 26 2B 2C 2F 3A 3B 3D 3F 40 '"/>
  <xsl:variable name="find" select="substring-before($from, ' ')"/>
  <xsl:variable name="replace" select="substring-before($to, ' ')"/>

  <xsl:choose>
    <xsl:when test="$find">
      <xsl:variable name="replaced">
        <xsl:call-template name="replace_string">
          <xsl:with-param name="find" select="$find"/>
          <xsl:with-param name="replace" select="concat('%', $replace)"/>
          <xsl:with-param name="string" select="$text"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:call-template name="uriencode">
        <xsl:with-param name="text" select="$replaced"/>
        <xsl:with-param name="from" select="substring-after($from, ' ')"/>
        <xsl:with-param name="to" select="substring-after($to, ' ')"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="translate($text, ' ', '+')"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
 Display error messages
     ********************************************************************** -->
<xsl:template name="error_page">
  <xsl:param name="errorMessage"/>
  <xsl:param name="errorDescription"/>

  <head><meta name="robots" content="noindex,nofollow"/><title><xsl:value-of select="$error_page_title"/></title>
  <xsl:call-template name="style">
    <xsl:with-param name="mode" select="'error'"/>
  </xsl:call-template>
  </head><body>
  <xsl:call-template name="my_page_header"/>

  <xsl:if test="$show_logo != '0'">
    <xsl:call-template name="logo"/>
  </xsl:if>

  <xsl:call-template name="top_sep_bar">
    <xsl:with-param name="text" select="$sep_bar_error_text"/>
    <xsl:with-param name="show_info" select="0"/>
    <xsl:with-param name="time" select="0"/>
  </xsl:call-template>

  <dl>
    <dt>Message:</dt>
    <dd><xsl:value-of select="$errorMessage"/></dd>
    <dt>Description:</dt>
    <dd><xsl:value-of select="$errorDescription"/></dd>
    <dt>Details:</dt>
    <dd><xsl:copy-of select="/"/></dd>
  </dl>

  <hr/>
  <xsl:call-template name="copyright"/>
  <xsl:call-template name="my_page_footer"/>
  </body>

</xsl:template>

<!-- **********************************************************************
 Google Desktop for Enterprise integration templates
     ********************************************************************** -->
<xsl:template name="desktop_tab">
  <xsl:variable name="qs">
    <xsl:if test="$qval_uri != ''">
      <xsl:value-of select="concat('?q=',$qval_uri)"/>
    </xsl:if>
  </xsl:variable>

  <!-- *** Show the Google tabs *** -->
  <p id="nd">
    <a onclick="return window.qs?qs(this):1" href="http://www.google.com/search{$qs}" title="Search the Web">Web</a><span>,</span><xsl:text> </xsl:text>
    <a onclick="return window.qs?qs(this):1" href="http://images.google.com/images{$qs}" title="Search Images">Images</a><span>,</span><xsl:text> </xsl:text>
    <a onclick="return window.qs?qs(this):1" href="http://groups.google.com/groups{$qs}" title="Search Groups">Groups</a><span>,</span><xsl:text> </xsl:text>
    <a onclick="return window.qs?qs(this):1" href="http://news.google.com/news{$qs}" title="Search News">News</a><span>,</span><xsl:text> </xsl:text>
    <a onclick="return window.qs?qs(this):1" href="http://froogle.google.com/froogle{$qs}" title="Search Froogle">Froogle</a><span>,</span><xsl:text> </xsl:text>
    <a onclick="return window.qs?qs(this):1" href="http://local.google.com/local{$qs}" title="Search Local">Local</a><span>,</span><xsl:text> </xsl:text>

    <!-- *** Show the desktop and web tabs *** -->
    <!-- *** NOTE: Currently unsupported *** -->
    <!--
    <xsl:if test="CUSTOM/HOME">
      <xsl:comment>trh2</xsl:comment>
    </xsl:if>
    <xsl:if test="Q">
      <xsl:comment>trl2</xsl:comment>
    </xsl:if>
    -->

    <!-- *** Show the appliance tab *** -->
    <strong><xsl:value-of select="$egds_appliance_tab_label"/></strong><span>.</span>
  </p>
</xsl:template>

<xsl:template name="desktop_results">
  <!-- *** NOTE: Currently unsupported *** -->
  <!-- <xsl:comment>tro2</xsl:comment> -->
</xsl:template>

<!-- **********************************************************************
  OneBox results (if any)
     ********************************************************************** -->
<xsl:template name="onebox">
  <xsl:for-each select="/GSP/ENTOBRESULTS">
    <xsl:apply-templates/>
  </xsl:for-each>
</xsl:template>

<!-- **********************************************************************
 Swallow unmatched elements
     ********************************************************************** -->
<xsl:template match="@*|node()"/>

<!-- **********************************************************************
 SCU Templates
     ********************************************************************** -->

<xsl:template name="getAvailabilities">
      <xsl:param name="regex" />
      <xsl:param name="tar" />
      <availabilities>
         <xsl:analyze-string select="$tar" regex="{$regex}">
            <xsl:matching-substring>
               <loc>
                  <xsl:value-of select="$global_location_cds/locations/location[@cd = regex-group(1)]/desc" />
               </loc>
               <availability>
                  <xsl:value-of select="regex-group(2)" />
               </availability>
            </xsl:matching-substring>
         </xsl:analyze-string>
      </availabilities>
 </xsl:template>

 <xsl:template name="renderOnlineAvails">
      <xsl:param name="avails" />
      <td colspan="6">
         <xsl:for-each select="$avails/availability">
           <xsl:value-of select="replace(text(), '^2', '')" />
           <xsl:if test="not(position() = last())">
            <xsl:text>,</xsl:text>
           </xsl:if>
         </xsl:for-each>
      </td>
 </xsl:template>

 <xsl:template name="renderAvails">
      <xsl:param name="avails" />
      <xsl:param name="distincts" />
      <xsl:param name="online" />
      <tbody>
         <xsl:for-each select="$distincts">
            <xsl:sort select="."/>
            <xsl:variable name="loc" select="." />
            <xsl:variable name="availChild">
               <xsl:copy-of select="$avails/loc[text() = $loc]/following-sibling::availability[1]" />
            </xsl:variable>
            <tr>
               <xsl:attribute name="class" select="$global_location_cds/locations/location/desc[text() = $loc]/following-sibling::class/text()" />
               <td>
                  <strong>
                     <xsl:value-of select="$loc"/>
                  </strong>
               </td>
               <xsl:if test="$availChild">
                  <xsl:choose>
                    <xsl:when test="$online = 'Y'">
                      <xsl:call-template name="renderOnlineAvails">
                        <xsl:with-param name="avails" select="$availChild" />
                      </xsl:call-template>
                    </xsl:when>
                    <xsl:otherwise>
                       <xsl:for-each select="$availChild/availability">
                     <!-- array variables -->
                     <xsl:variable name="secondaryVals" select="('12','R3','R4')" />
                     <xsl:variable name="tertiaryVals" select="('13')" />
                     <xsl:variable name="followedVals" select="('11', '12', 'R1', 'R2')" />
                     <xsl:variable name="followerVals" select="('12', '13', 'R3', 'R4')" />
                     <!-- omnipotent values -->
                     <xsl:variable name="omniVals" select="('YL', 'YL2')" />
                     <!-- logical variables -->
                     <xsl:variable name="isSecondaryVal" select="boolean(text() = $secondaryVals)" />
                     <xsl:variable name="hasImmediateFollower" select="boolean(following-sibling::availability/text() = $followerVals)" />
                     <xsl:variable name="hasPrecSecondaryVal" select="boolean(preceding-sibling::availability/text() = $secondaryVals)" />
                     <xsl:variable name="isTertiaryVal" select="boolean(text() = $tertiaryVals)" />
                     <xsl:variable name="isOmniVal" select="boolean(text() = $omniVals)" />
                     <xsl:variable name="isLast" select="boolean(position() = last())" />

                     
                      <xsl:choose>
                         <xsl:when test="($isSecondaryVal and position() = 1) or ($isTertiaryVal and position() = 2 and not($hasPrecSecondaryVal))">
                            <td>&#160;</td>
                         </xsl:when>
                         <xsl:when test="($isTertiaryVal and position() = 1)">
                            <td>&#160;</td>
                            <td>&#160;</td>
                         </xsl:when>
                      </xsl:choose>
                     
                     <td>
                        <xsl:choose>
                           <xsl:when test="$isOmniVal">
                              <xsl:text>&#42;</xsl:text>
                           </xsl:when>
                           <xsl:otherwise>
                              <xsl:text>&#10003;</xsl:text>
                           </xsl:otherwise>
                        </xsl:choose>
                     </td>
                     <xsl:choose>
                      <xsl:when test="text() = ('11') and $isLast">
                        <td>&#160;</td>
                        <td>&#160;</td>
                      </xsl:when>
                      <xsl:when test="(text() = $followedVals and not($hasImmediateFollower))">
                        <td>&#160;</td>
                      </xsl:when>
                     </xsl:choose>
                  </xsl:for-each>
                    </xsl:otherwise>
                  </xsl:choose>
                  <!--<xsl:copy-of select="$avails/loc[text() = $loc]/following-sibling::availability[1]"/>-->
               </xsl:if>
            </tr>
         </xsl:for-each>
      </tbody>
   </xsl:template>

 <xsl:template name="isHideYear">
      <xsl:param name="webYear" />
      <xsl:param name="spkCode" />
      <xsl:choose>
        <xsl:when test="$webYear = $hideYear and not(contains('0123456789', substring($spkCode,1,1)))">
          <xsl:value-of select="true()"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="false()"/>
        </xsl:otherwise>
      </xsl:choose>
 </xsl:template>

 <xsl:template name="transformAvailCombo">
      <xsl:param name="availCombo" />
      <xsl:param name="headTitle" />
      <xsl:param name="webYear" />
      <xsl:param name="spkCode" />

      <xsl:variable name="resSemTypeOne" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(R[1|3]+)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctRSLoc" select="distinct-values($resSemTypeOne[1]/loc)" />
      <xsl:variable name="resSemTypeTwo" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(R[2|4]+)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctRSLocTwo" select="distinct-values($resSemTypeTwo[1]/loc)" />
      <xsl:variable name="sesTypes" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(1\d+)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctSesLoc" select="distinct-values($sesTypes[1]/loc)" />
      <xsl:variable name="stPrdTypes" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(2\d+)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctStPrdLoc" select="distinct-values($stPrdTypes[1]/loc)" />
      <xsl:variable name="ylType" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(YL)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctYlLoc" select="distinct-values($ylType[1]/loc)" />
<!--       <xsl:value-of select="$resSemTypeOne" />
      <br />
      <xsl:value-of select="$resSemTypeTwo" />
      <br />
      <xsl:value-of select="$sesTypes" />
      <br />
      <xsl:value-of select="$ylType" />
      <br /> -->


      <xsl:variable name="hideMe">
        <xsl:call-template name="isHideYear">
            <xsl:with-param name="webYear" select="$webYear" />
            <xsl:with-param name="spkCode" select="$spkCode" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:if test="$hideMe = 'false'">

        <xsl:if test="$resSemTypeOne/availability">
           <table cellspacing="0">
              <thead>
                 <tr>
                    <td>
                       <xsl:value-of select="$headTitle" />
                    </td>
                    <td>
                       <strong>Research Semester 1</strong>
                    </td>
                    <td>
                       <strong>Research Semester 2</strong>
                    </td>
                 </tr>
              </thead>
              <xsl:call-template name="renderAvails">
                 <xsl:with-param name="distincts" select="$distinctRSLoc" />
                 <xsl:with-param name="avails" select="$resSemTypeOne" />
              </xsl:call-template>
           </table>
        </xsl:if>
        <xsl:if test="$resSemTypeTwo/availability">
           <table cellspacing="0">
              <thead>
                 <tr>
                    <td>
                       <xsl:value-of select="$headTitle" />
                    </td>
                    <td>
                       <strong>Research Semester 3</strong>
                    </td>
                    <td>
                       <strong>Research Semester 4</strong>
                    </td>
                 </tr>
              </thead>
              <xsl:call-template name="renderAvails">
                 <xsl:with-param name="distincts" select="$distinctRSLocTwo" />
                 <xsl:with-param name="avails" select="$resSemTypeTwo" />
              </xsl:call-template>
           </table>
        </xsl:if>
        <xsl:if test="$sesTypes/availability">
           <table cellspacing="0">
              <thead>
                 <tr>
                    <td>
                       <xsl:value-of select="$headTitle" />
                    </td>
                    <td>
                       <strong>Session 1</strong>
                    </td>
                    <td>
                       <strong>Session 2</strong>
                    </td>
                    <td>
                       <strong>Session 3</strong>
                    </td>
                 </tr>
              </thead>
              <xsl:call-template name="renderAvails">
                 <xsl:with-param name="distincts" select="$distinctSesLoc" />
                 <xsl:with-param name="avails" select="$sesTypes" />
              </xsl:call-template>
           </table>
        </xsl:if>
        <xsl:if test="$stPrdTypes/availability">
           <table cellspacing="0">
              <thead>
                 <tr>
                    <td>
                       <xsl:value-of select="$headTitle" />
                    </td>
                    <td colspan="6">
                       <span style="font-size: 0.9em">Available in Study Periods</span>
                    </td>
                 </tr>
              </thead>
              <xsl:call-template name="renderAvails">
                 <xsl:with-param name="distincts" select="$distinctStPrdLoc" />
                 <xsl:with-param name="avails" select="$stPrdTypes" />
                 <xsl:with-param name="online" select="'Y'" />
              </xsl:call-template>
           </table>
        </xsl:if>
        <xsl:if test="$ylType/availability">
           <table cellspacing="0">
              <thead>
                 <tr>
                    <td>
                       <xsl:value-of select="$headTitle" />
                    </td>
                    <td>
                       <strong>Year Long</strong>
                    </td>
                 </tr>
              </thead>
              <xsl:call-template name="renderAvails">
                 <xsl:with-param name="distincts" select="$distinctYlLoc" />
                 <xsl:with-param name="avails" select="$ylType" />
              </xsl:call-template>
           </table>
           <p>
              <span class="pronounce">*</span>
              Year Long availabilities are normally offered in 5 week blocks throughout the year.  Students may enrol in 1 to 50 weeks depending on their English language proficiency on entry and the level aimed for at completion.
           </p>
        </xsl:if>
      </xsl:if>

      <xsl:if test="(not($resSemTypeOne/availability) and not($resSemTypeTwo/availability) and not($sesTypes/availability) and not($stPrdTypes/availability) and not($ylType/availability) or ($hideMe = 'true'))">
        <xsl:variable name="noAvailMessage">
          <xsl:choose>
              <xsl:when test="$hideMe = 'true'">
                <xsl:value-of select="$hideYear"/> unit offering information will be available in September <xsl:value-of select="number($hideYear)-1"/>
              </xsl:when>
            <xsl:otherwise>
              <xsl:text>Availability information to be confirmed.</xsl:text>
            </xsl:otherwise>
            </xsl:choose>
        </xsl:variable>
       <table cellspacing="0">
        <thead>
        <tr>
          <td><strong><xsl:value-of select="$noAvailMessage"/></strong></td>
        </tr>
      </thead>
      </table>
      </xsl:if>
   </xsl:template>

<xsl:template name="htmltotrimmedtext">
  <xsl:param name="html"/>
  <xsl:param name="len"/>
   <xsl:variable name="htmlless" select="replace($html, '&lt;/?\w+[^&lt;]*&gt;', '')"/>
   <xsl:variable name="entityless" select="replace($htmlless, '&amp;.*?;', '')"/>
   <xsl:choose>
     <xsl:when test="string-length($entityless) > $len">
       <xsl:variable name="trimmed" select="substring($entityless, 0, $len)"/>
       <xsl:variable name="wordtrimmed" select="replace($trimmed, '\s+\w+?$', '')"/>
       <xsl:value-of select="concat($wordtrimmed,' ...')"/>
     </xsl:when>
     <xsl:otherwise>
       <xsl:value-of select="$entityless"/>
     </xsl:otherwise>
   </xsl:choose>
</xsl:template>

</xsl:stylesheet>

<!-- *** END OF STYLESHEET *** -->
              ]]></stylesheet.en>
              <synonyms><![CDATA[
heath,health

              ]]></synonyms>
              <wildcard_wc_filter><![CDATA[
200

              ]]></wildcard_wc_filter>
          </frontend>
          <frontend Name="default_frontend">
              <default_language><![CDATA[
'en'
              ]]></default_language>
              <profile_sheet><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'showAlerts2': '0', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '0', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet>
              <access_control_allow_origin><![CDATA[


              ]]></access_control_allow_origin>
              <badurls_noreturn><![CDATA[

              ]]></badurls_noreturn>
              <content_type><![CDATA[
text/html
              ]]></content_type>
              <domain_filter><![CDATA[

              ]]></domain_filter>
              <filetype_filter><![CDATA[

              ]]></filetype_filter>
              <good_ips><![CDATA[
0.0.0.0/0

              ]]></good_ips>
              <googlematch><![CDATA[

              ]]></googlematch>
              <lang_filter><![CDATA[

              ]]></lang_filter>
              <metatag_filter><![CDATA[

              ]]></metatag_filter>
              <query_expansion_filter><![CDATA[
QE_FULL

              ]]></query_expansion_filter>
              <query_expansion_meta_filter><![CDATA[
QE_META_NONE

              ]]></query_expansion_meta_filter>
              <scoring_policy_filter><![CDATA[

              ]]></scoring_policy_filter>
              <star_wildcard_default_filter><![CDATA[
1

              ]]></star_wildcard_default_filter>
              <stylesheet><![CDATA[
<!-- *** START OF STYLESHEET *** -->

<!-- **********************************************************************
 XSL to format the search output for Google Search Appliance
     ********************************************************************** -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">

<!-- **********************************************************************
 include customer-onebox.xsl, which is auto-generated from the customer's
 set of OneBox Module definitions, and in turn invokes either the default
 OneBox template, or the customer's:
********************************************************************** -->
<xsl:include href="customer-onebox.xsl"/>

<xsl:output method="html"/>

<!-- **********************************************************************
 Logo setup (can be customized)
     - whether to show logo: 0 for FALSE, 1 (or non-zero) for TRUE
     - logo url
     - logo size: '' for default image size
     ********************************************************************** -->
<xsl:variable name="show_logo">0</xsl:variable>
<xsl:variable name="logo_url">images/Title_Left.png</xsl:variable>
<xsl:variable name="logo_width">200</xsl:variable>
<xsl:variable name="logo_height">78</xsl:variable>

<!-- **********************************************************************
 Global Style variables (can be customized): '' for using browser's default
     ********************************************************************** -->

<xsl:variable name="global_font">arial,sans-serif</xsl:variable>
<xsl:variable name="global_font_size"></xsl:variable>
<xsl:variable name="global_bg_color">#ffffff</xsl:variable>
<xsl:variable name="global_text_color">#000000</xsl:variable>
<xsl:variable name="global_link_color">#0000cc</xsl:variable>
<xsl:variable name="global_vlink_color">#551a8b</xsl:variable>
<xsl:variable name="global_alink_color">#ff0000</xsl:variable>


<!-- **********************************************************************
 Result page components (can be customized)
     - whether to show a component: 0 for FALSE, non-zero (e.g., 1) for TRUE
     - text and style
     ********************************************************************** -->

<!-- *** choose result page header: '', 'provided', 'mine', or 'both' *** -->
<xsl:variable name="choose_result_page_header">both</xsl:variable>

<!-- *** customize provided result page header *** -->
<xsl:variable name="show_swr_link">1</xsl:variable>
<xsl:variable name="swr_search_anchor_text">Search Within Results</xsl:variable>
<xsl:variable name="show_result_page_adv_link">1</xsl:variable>
<xsl:variable name="adv_search_anchor_text">Advanced Search</xsl:variable>
<xsl:variable name="show_result_page_help_link">0</xsl:variable>
<xsl:variable name="search_help_anchor_text">Search Tips</xsl:variable>

<!-- *** search boxes *** -->
<xsl:variable name="show_top_search_box">1</xsl:variable>
<xsl:variable name="show_bottom_search_box">0</xsl:variable>
<xsl:variable name="search_box_size">32</xsl:variable>

<!-- *** choose search button type: 'text' or 'image' *** -->
<xsl:variable name="choose_search_button">text</xsl:variable>
<xsl:variable name="search_button_text">Search</xsl:variable>
<xsl:variable name="search_button_image_url"></xsl:variable>
<xsl:variable name="search_collections_xslt">1</xsl:variable>

<!-- *** search info bars *** -->
<xsl:variable name="show_search_info">1</xsl:variable>

<!-- *** choose separation bar: 'ltblue', 'blue', 'line', 'nothing' *** -->
<xsl:variable name="choose_sep_bar">line</xsl:variable>
<xsl:variable name="sep_bar_std_text">Search</xsl:variable>
<xsl:variable name="sep_bar_adv_text">Advanced Search</xsl:variable>
<xsl:variable name="sep_bar_error_text">Error</xsl:variable>

<!-- *** navigation bars: '', 'google', 'link', or 'simple'*** -->
<xsl:variable name="show_top_navigation">0</xsl:variable>
<xsl:variable name="choose_bottom_navigation">link</xsl:variable>
<xsl:variable name="my_nav_align">right</xsl:variable>
<xsl:variable name="my_nav_size">-1</xsl:variable>
<xsl:variable name="my_nav_color">#6f6f6f</xsl:variable>

<!-- *** sort by date/relevance *** -->
<xsl:variable name="show_sort_by">1</xsl:variable>

<!-- *** spelling suggestions *** -->
<xsl:variable name="show_spelling">1</xsl:variable>
<xsl:variable name="spelling_text">Did you mean:</xsl:variable>
<xsl:variable name="spelling_text_color">#cc0000</xsl:variable>

<!-- *** synonyms suggestions *** -->
<xsl:variable name="show_synonyms">1</xsl:variable>
<xsl:variable name="synonyms_text">You could also try:</xsl:variable>
<xsl:variable name="synonyms_text_color">#cc0000</xsl:variable>

<!-- *** keymatch suggestions *** -->
<xsl:variable name="show_keymatch">1</xsl:variable>
<xsl:variable name="keymatch_text">KeyMatch</xsl:variable>
<xsl:variable name="keymatch_text_color">#2255aa</xsl:variable>
<xsl:variable name="keymatch_bg_color">#e8e8ff</xsl:variable>

<!-- *** Google Desktop integration *** -->
<xsl:variable name="egds_show_search_tabs">1</xsl:variable>
<xsl:variable name="egds_appliance_tab_label">Appliance</xsl:variable>
<xsl:variable name="egds_show_desktop_results">1</xsl:variable>

<!-- *** onebox information *** -->
<xsl:variable name="show_onebox">1</xsl:variable>

<!-- *** analytics information *** -->
<xsl:variable name="analytics_account"></xsl:variable>

<!-- *** ASR enabling *** -->
<xsl:variable name="show_asr">0</xsl:variable>

<!-- **********************************************************************
 Result elements (can be customized)
     - whether to show an element ('1' for yes, '0' for no)
     - font/size/color ('' for using style of the context)
     ********************************************************************** -->

<!-- *** result title and snippet *** -->
<xsl:variable name="show_res_title">1</xsl:variable>
<xsl:variable name="res_title_color">#0000cc</xsl:variable>
<xsl:variable name="res_title_size"></xsl:variable>
<xsl:variable name="show_res_snippet">1</xsl:variable>
<xsl:variable name="res_snippet_size">80%</xsl:variable>

<!-- *** keyword match (in title or snippet) *** -->
<xsl:variable name="res_keyword_color"></xsl:variable>
<xsl:variable name="res_keyword_size"></xsl:variable>
<xsl:variable name="res_keyword_format">b</xsl:variable> <!-- 'b' for bold -->

<!-- *** link URL *** -->
<xsl:variable name="show_res_url">1</xsl:variable>
<xsl:variable name="res_url_color">#008000</xsl:variable>
<xsl:variable name="res_url_size">-1</xsl:variable>
<xsl:variable name="truncate_result_urls">1</xsl:variable>
<xsl:variable name="truncate_result_url_length">100</xsl:variable>

<!-- *** misc elements *** -->
<xsl:variable name="show_meta_tags">0</xsl:variable>
<xsl:variable name="show_res_size">1</xsl:variable>
<xsl:variable name="show_res_date">1</xsl:variable>
<xsl:variable name="show_res_cache">0</xsl:variable>

<!-- *** used in result cache link, similar pages link, and description *** -->
<xsl:variable name="faint_color">#7777cc</xsl:variable>

<!-- *** show secure results radio button *** -->
<xsl:variable name="show_secure_radio">0</xsl:variable>

<!-- *** show suggestions (remote aut-completions) *** -->
<xsl:variable name="show_suggest">1</xsl:variable>

<!-- **********************************************************************
 Other variables (can be customized)
     ********************************************************************** -->

<!-- *** parametric navigation options *** -->
<xsl:variable name="show_parametric_navigation">0</xsl:variable>

<!-- *** page title *** -->
<xsl:variable name="front_page_title">Search Home</xsl:variable>
<xsl:variable name="result_page_title">Search Results</xsl:variable>
<xsl:variable name="adv_page_title">Advanced Search</xsl:variable>
<xsl:variable name="error_page_title">Error</xsl:variable>
<xsl:variable name="swr_page_title">Search Within Results</xsl:variable>

<!-- *** choose adv_search page header: '', 'provided', 'mine', or 'both' *** -->
<xsl:variable name="choose_adv_search_page_header">both</xsl:variable>

<!-- *** cached page header text *** -->
<xsl:variable name="cached_page_header_text">This is the cached copy of</xsl:variable>

<!-- *** error message text *** -->
<xsl:variable name="server_error_msg_text">A server error has occurred.</xsl:variable>
<xsl:variable name="server_error_des_text">Check server response code in details.</xsl:variable>
<xsl:variable name="xml_error_msg_text">Unknown XML result type.</xsl:variable>
<xsl:variable name="xml_error_des_text">View page source to see the offending XML.</xsl:variable>

<!-- *** advanced search page panel background color *** -->
<xsl:variable name="adv_search_panel_bgcolor">#cbdced</xsl:variable>

<!-- *** dynamic result cluster options *** -->
<xsl:variable name="show_res_clusters">1</xsl:variable>
<xsl:variable name="res_cluster_position">right</xsl:variable>

<!-- *** alerts2 options *** -->
<xsl:variable name="show_alerts2">0</xsl:variable>

<!-- **********************************************************************
 My parametric navigation (can be customized)
     ********************************************************************** -->
<xsl:template name="my_parametric_navigation">
  <span class="p">
    <xsl:text disable-output-escaping="yes"> &lt;!-- Please enter html code below. --&gt;</xsl:text>

 <!-- ********************************************************************** -->

  <div name="mtParametric" id="mtParametric"><font size="1"><br/><br/><br/><br/>
&#160;&#160;&#160;Loading parametric...</font></div>

 <!-- ********************************************************************** -->

  </span>
</xsl:template>

<!-- **********************************************************************
 My global page header/footer (can be customized)
     ********************************************************************** -->
<xsl:template name="my_page_header">
  <!-- *** replace the following with your own xhtml code or replace the text
   between the xsl:text tags with html escaped html code *** -->
  <xsl:text disable-output-escaping="yes">&lt;table width="100%" cellspacing="0" cellpadding="0" border="0" align="center"&gt;
		
  &lt;tbody&gt;&lt;tr&gt;
  		
	&lt;td valign="middle" nowrap="" align="left" class="nav_bar_orange"&gt;	
	&lt;a href="http://www.scu.edu.au"&gt;&lt;img width="42" height="20" border="0" alt="SCU Home" src="http://www.scu.edu.au/gfx/base/nav_bar/home.jpg"/&gt;&lt;/a&gt;&lt;a href="http://www.scu.edu.au/futurestudents"&gt;&lt;img width="93" height="20" border="0" alt="Future Students" src="http://www.scu.edu.au/gfx/base/nav_bar/future_students.jpg"/&gt;&lt;/a&gt;&lt;a href="http://www.scu.edu.au/international/"&gt;&lt;img width="82" height="20" border="0" alt="International" src="http://www.scu.edu.au/gfx/base/nav_bar/international.jpg"/&gt;&lt;/a&gt;&lt;a href="http://www.scu.edu.au/research/index.php"&gt;&lt;img width="60" height="20" border="0" alt="Research" src="http://www.scu.edu.au/gfx/base/nav_bar/research.jpg"/&gt;&lt;/a&gt;&lt;a href="http://www.scu.edu.au/about/"&gt;&lt;img width="59" height="20" border="0" alt="About Us" src="http://www.scu.edu.au/gfx/base/nav_bar/aboutUs.jpg"/&gt;&lt;/a&gt;&lt;a href="http://www.scu.edu.au/outreach/"&gt;&lt;img width="72" height="20" border="0" alt="Outreach" src="http://www.scu.edu.au/gfx/base/nav_bar/outreach.jpg"/&gt;&lt;/a&gt;
	&lt;/td&gt;
	&lt;td nowrap="" align="right" class="nav_bar_orange"&gt;&lt;img width="290" height="20" border="0" usemap="#Map" src="http://www.scu.edu.au/gfx/base/nav_bar/right_tabs.jpg"/&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;table width="100%" cellspacing="0" cellpadding="0"&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td width="100%" class="header"&gt;&lt;a href="http://www.scu.edu.au"&gt;&lt;img width="200" height="80" border="0" alt="Southern Cross University" src="http://www.scu.edu.au/gfx/_SCU_logo.jpg"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td width="0%" align="right" class="header"&gt;&lt;img border="0" align="right" alt="" src="http://www.scu.edu.au/gfx/base/banners/page_maree.jpg"/&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;table width="100%" cellspacing="0" cellpadding="0" border="0"&gt;
		&lt;tbody&gt;&lt;tr&gt;
				&lt;td align="center" class="nav_bar_main"&gt;| &lt;a href="/"&gt;Search&lt;/a&gt; | &lt;a href="http://www.scu.edu.au/services/"&gt;A-Z of Services and Facilities&lt;/a&gt; | &lt;a href="http://www.scu.edu.au/staffdirectory/"&gt;Online Staff Directory&lt;/a&gt; | &lt;a href="http://www.scu.edu.au/contact/"&gt;Contact Us&lt;/a&gt; |&lt;/td&gt;
		&lt;/tr&gt;
		&lt;tr&gt;
				&lt;td&gt;&amp;nbsp;&lt;/td&gt;
		&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;div style="width: 960px; margin: 0 auto;"&gt;
</xsl:text>
</xsl:template>

<xsl:template name="my_page_footer">
  <span class="p">
    <xsl:text disable-output-escaping="yes">
    &lt;/div&gt;
    &lt;table width="100%" cellspacing="0" cellpadding="0" border="0"&gt;
		&lt;tbody&gt;&lt;tr&gt;
				&lt;td align="center" class="nav_bar_main"&gt;| &lt;a href="/"&gt;Search&lt;/a&gt; | &lt;a href="http://www.scu.edu.au/services/"&gt;A-Z of Services and Facilities&lt;/a&gt; | &lt;a href="http://www.scu.edu.au/staffdirectory/"&gt;Online Staff Directory&lt;/a&gt; | &lt;a href="http://www.scu.edu.au/contact/"&gt;Contact Us&lt;/a&gt; |&lt;/td&gt;
		&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;table width="100%" cellspacing="0" cellpadding="0" border="0" align="center"&gt;
	&lt;tbody&gt;&lt;tr&gt;
		&lt;td class="outline_orange" colspan="2"&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;
&lt;table width="100%" cellspacing="0" cellpadding="0" border="0" align="center"&gt;
		
		&lt;tbody&gt;&lt;tr&gt;
				&lt;td&gt;&lt;table width="100%" cellspacing="0" cellpadding="0" border="0"&gt;
						&lt;tbody&gt;&lt;tr&gt;
								&lt;td class="footer"&gt;[&lt;a href="#top"&gt;Top&lt;/a&gt;]&lt;br/&gt;
														&lt;br/&gt;
														© &lt;a href="http://www.scu.edu.au/"&gt;Southern Cross University&lt;/a&gt; |  &lt;a href="http://www.scu.edu.au/wwwadmin/disclaimer/"&gt;Legals&lt;/a&gt; | &lt;a href="http://www.scu.edu.au/wwwadmin/privacy/"&gt;Privacy&lt;/a&gt; | &lt;a href="http://www.scu.edu.au/feedback/"&gt;Feedback&lt;/a&gt; | &lt;a href="http://www.scu.edu.au/contact/"&gt;Contact Us&lt;/a&gt; | 
ABN : 41 995 651 524 | CRICOS Provider No: 01241G (NSW), 02621K (WA), 02629B (VIC) &lt;br/&gt;Authorised by  Manager, Web Services [&lt;a href="mailto:web@scu.edu.au"&gt;web@scu.edu.au&lt;/a&gt;]&lt;/td&gt;
						&lt;/tr&gt;
				&lt;/tbody&gt;&lt;/table&gt;&lt;/td&gt;
				&lt;td width="46" valign="bottom" bgcolor="#efefef" align="right"&gt;&lt;img width="50" height="50" border="0" alt="Corner image" src="http://www.scu.edu.au/gfx/base/footer_corner_plain.gif"/&gt;&lt;/td&gt;
		&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;!-- End Footer --&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
</xsl:text>
  </span>
</xsl:template>


<!-- **********************************************************************
 Logo template (can be customized)
     ********************************************************************** -->
<xsl:template name="logo">
    <a href="{$home_url}"><img src="{$logo_url}"
      width="{$logo_width}" height="{$logo_height}"
      alt="Go to Google Home" border="0" onClick="clearAllCookies()" /></a>
</xsl:template>


<!-- **********************************************************************
 Search result page header (can be customized): logo and search box
     ********************************************************************** -->
<xsl:template name="result_page_header">
    <table border="0" cellpadding="0" cellspacing="0">
      <xsl:if test="$show_logo != '0'">
        <tr>
          <td rowspan="3" valign="top">
            <xsl:call-template name="logo"/>
            <xsl:call-template name="nbsp3"/>
          </td>
        </tr>
      </xsl:if>
      <xsl:if test="$show_top_search_box != '0'">
        <tr>
          <td valign="middle">
            <xsl:call-template name="search_box">
              <xsl:with-param name="type" select="'std_top'"/>
            </xsl:call-template>
          </td>
        </tr>
      </xsl:if>
      <xsl:if test="/GSP/CT">
                <tr>
          <td valign="top">
            <br/>
            <xsl:call-template name="stopwords"/>
            <br/>
          </td>
        </tr>
      </xsl:if>
    </table>
</xsl:template>


<!-- **********************************************************************
 Search within results page header (can be customized): logo and search box 
     ********************************************************************** -->
<xsl:template name="swr_page_header">
    <table border="0" cellpadding="0" cellspacing="0">
      <xsl:if test="$show_logo != '0'">
        <tr>
          <td rowspan="3" valign="top">
            <xsl:call-template name="logo"/>
            <xsl:call-template name="nbsp3"/>
          </td>
        </tr>
      </xsl:if>
      <xsl:if test="$show_top_search_box != '0'">
        <tr>
          <td valign="middle">
            <xsl:call-template name="search_box">
              <xsl:with-param name="type" select="'swr'"/>
            </xsl:call-template>
          </td>
        </tr>
      </xsl:if>
    </table>
</xsl:template>


<!-- **********************************************************************
 Home search page header (can be customized): logo and search box
     ********************************************************************** -->
<xsl:template name="home_page_header">
    <table border="0" cellpadding="0" cellspacing="0">
      <xsl:if test="$show_logo != '0'">
        <tr>
          <td rowspan="3" valign="top">
            <xsl:call-template name="logo"/>
            <xsl:call-template name="nbsp3"/>
          </td>
        </tr>
      </xsl:if>
      <xsl:if test="$show_top_search_box != '0'">
        <tr>
          <td valign="middle">
            <xsl:call-template name="search_box">
              <xsl:with-param name="type" select="'home'"/>
            </xsl:call-template>
          </td>
        </tr>
      </xsl:if>
    </table>
</xsl:template>


<!-- **********************************************************************
 Separation bar variables (used in advanced search header and result page)
     ********************************************************************** -->
<xsl:variable name="sep_bar_border_color">
  <xsl:choose>
    <xsl:when test="$choose_sep_bar = 'ltblue'">#3366cc</xsl:when>
    <xsl:when test="$choose_sep_bar = 'blue'">#3366cc</xsl:when>
    <xsl:otherwise><xsl:value-of select="$global_bg_color"/></xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="sep_bar_bg_color">
  <xsl:choose>
    <xsl:when test="$choose_sep_bar = 'ltblue'">#e5ecf9</xsl:when>
    <xsl:when test="$choose_sep_bar = 'blue'">#3366cc</xsl:when>
    <xsl:otherwise><xsl:value-of select="$global_bg_color"/></xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="sep_bar_text_color">
  <xsl:choose>
    <xsl:when test="$choose_sep_bar = 'ltblue'">#000000</xsl:when>
    <xsl:when test="$choose_sep_bar = 'blue'">#ffffff</xsl:when>
    <xsl:otherwise><xsl:value-of select="$global_text_color"/></xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- **********************************************************************
 Advanced search page header HTML (can be customized)
     ********************************************************************** -->
<xsl:template name="advanced_search_header">
      <table border="0" cellpadding="0" cellspacing="0">

        <tr>

          <td valign="top">
            <xsl:if test="$show_logo != '0'">
                  <xsl:call-template name="logo"/>
            </xsl:if>
          </td>
        </tr>
      </table>
</xsl:template>


<!-- **********************************************************************
 Cached page header (can be customized)
     ********************************************************************** -->
<xsl:template name="cached_page_header">
  <xsl:param name="cached_page_url"/>
  <xsl:variable name="stripped_url" select="substring-after($cached_page_url,
                                                            '://')"/>
<table border="1" width="100%">
  <tr>
    <td>
      <table border="1" width="100%" cellpadding="10" cellspacing="0"
        bgcolor="{$global_bg_color}" color="{$global_bg_color}">
        <tr>
          <td>
            <font face="{$global_font}" color="{$global_text_color}" size="-1">
             <xsl:value-of select="$cached_page_header_text"/>
             <xsl:call-template name="nbsp"/>
             <xsl:choose>
              <xsl:when test="starts-with($cached_page_url,
                                          $db_url_protocol)">
               <a ctype="cache" href="{concat('/db/',$stripped_url)}">
               <font color="{$global_link_color}">
               <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
              </xsl:when>
              <xsl:when test="starts-with($cached_page_url,
                                          $nfs_url_protocol)">
               <a ctype="cache" href="{concat('/nfs/',$stripped_url)}">
               <font color="{$global_link_color}">
               <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
              </xsl:when>
              <xsl:when test="starts-with($cached_page_url,
                                          $smb_url_protocol)">
               <a ctype="cache" href="{concat('/smb/',$stripped_url)}">
               <font color="{$global_link_color}">
               <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
              </xsl:when>
              <xsl:when test="starts-with($cached_page_url,
                                          $unc_url_protocol)">
               <xsl:variable name="display_url">
                 <xsl:call-template name="convert_unc">
                   <xsl:with-param name="string" select="$stripped_url"/>
                 </xsl:call-template>
               </xsl:variable>
               <a ctype="cache" href="{concat('file://',$stripped_url)}">
               <font color="{$global_link_color}">
               <xsl:value-of select="$display_url"/></font></a>.<br/>
              </xsl:when>
              <xsl:otherwise>
               <a ctype="cache" href="{$cached_page_url}"><font color="{$global_link_color}">
               <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
              </xsl:otherwise>
             </xsl:choose>
            </font>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<hr/>
</xsl:template>

<!-- **********************************************************************
 Suggest service javascript (do not customize)
     ********************************************************************** -->
<xsl:template name="gsa_suggest">
  <xsl:if test="$show_suggest != '0'">
    <script language='javascript' src='suggest_js.js'/>
    <script language='javascript'>
    sgst('q');
    sgst('as_q');
    </script>
  </xsl:if>
</xsl:template>


<!-- **********************************************************************
 "Search Within Results" search input page (can be customized)
     ********************************************************************** -->
<xsl:template name="swr_search">
<html>
  <xsl:call-template name="langHeadStart"/>
    <title><xsl:value-of select="$swr_page_title"/></title>
  <xsl:call-template name="style"/>
  <xsl:call-template name="langHeadEnd"/>

  <body dir="ltr">
  <xsl:call-template name="personalization"/>
  <xsl:call-template name="analytics"/>

  <xsl:call-template name="my_page_header"/>
  <xsl:call-template name="swr_page_header"/>
  <hr/>
  <xsl:call-template name="copyright"/>
  <xsl:call-template name="my_page_footer"/>
  </body>
</html>
</xsl:template>


<!-- **********************************************************************
 "Front door" search input page (can be customized)
     ********************************************************************** -->
<xsl:template name="front_door">
<html>
  <xsl:call-template name="langHeadStart"/>
    <title><xsl:value-of select="$front_page_title"/></title>
  <xsl:call-template name="style"/>
  <xsl:call-template name="langHeadEnd"/>

  <body dir="ltr">
  <xsl:call-template name="personalization"/>
  <xsl:call-template name="analytics"/>

  <xsl:call-template name="my_page_header"/>
  <xsl:call-template name="home_page_header"/>
  <hr/>
  <xsl:call-template name="copyright"/>
  <xsl:call-template name="my_page_footer"/>

  </body>
</html>
</xsl:template>


<!-- **********************************************************************
 Empty result set (can be customized)
     ********************************************************************** -->
<xsl:template name="no_RES">
  <xsl:param name="query"/>

  <!-- *** Output Google Desktop results (if enabled and any available) *** -->
  <xsl:if test="$egds_show_desktop_results != '0'">
    <xsl:call-template name="desktop_results"/>
  </xsl:if>

  <span class="p">
  <br/>
  Your search - <b><xsl:value-of select="$query"/></b> - did not match any documents.
  <br/>
  No pages were found containing <b>"<xsl:value-of select="$query"/>"</b>.
  <br/>
  <br/>
  Suggestions:
  <ul>
    <li>Make sure all words are spelled correctly.</li>
    <li>Try different keywords.</li>
    <xsl:if test="/GSP/PARAM[(@name='access') and(@value='a')]">
      <li>Make sure your security credentials are correct.</li>
    </xsl:if>
    <li>Try more general keywords.</li>
  </ul>
  </span>

</xsl:template>


<!-- ######################################################################
 We do not recommend changes to the following code.  Google Technical
 Support Personnel currently do not support customization of XSLT under
 these Technical Support Services Guidelines.  Such services may be
 provided on a consulting basis, at Google's then-current consulting
 services rates under a separate agreement, if Google personnel are
 available.  Please ask your Google Account Manager for more details if
 you are interested in purchasing consulting services.
     ###################################################################### -->


<!-- **********************************************************************
 Global Style (do not customize)
        default font type/size/color, background color, link color
         using HTML CSS (Cascading Style Sheets)
     ********************************************************************** -->


<xsl:template name="style">

<script language='javascript' src='http://client.dmsbt.com/diird/googleParametric.js'></script>
<link type="text/css" rel="stylesheet" href="http://www.scu.edu.au/styles/_base.css"></link>
<link type="text/css" rel="stylesheet" href="http://www.scu.edu.au/styles/_base_nav.css"></link>
<link rel="icon" type="image/vnd.microsoft.icon" href="http://scu.edu.au/favicon.ico"></link>
<style>
<xsl:comment>
.s { font-size:80%; }
body { font-size:14px; }
div div#clustering h3 { font-size:120%; }
p { font-size:16px; line-height:22px;}
td .b, td .b a { line-height:16px; }
div div.n { margin: 4.5ex 0; }
td.nav_bar_main { font-size: 14px; }

body,td,div,.p,a,.d,.s{font-family:<xsl:value-of select="$global_font"/>}
body,td,div,.p,a,.d{font-size: <xsl:value-of select="$global_font_size"/>}
body,div,td,.p,.s{color:<xsl:value-of select="$global_text_color"/>}
body,.d,.p,.s{background-color:<xsl:value-of select="$global_bg_color"/>}
.s{font-size: <xsl:value-of select="$res_snippet_size"/>}
.g{margin-top: 1em; margin-bottom: 1em}
.s td{width:34em}
.l{font-size: <xsl:value-of select="$res_title_size"/>}
.l{color: <xsl:value-of select="$res_title_color"/>}
a:link,.w,.w a:link{color:<xsl:value-of select="$global_link_color"/>}
.f,.f:link,.f a:link{color:<xsl:value-of select="$faint_color"/>}
a:visited,.f a:visited{color:<xsl:value-of select="$global_vlink_color"/>}
a:active,.f a:active{color:<xsl:value-of select="$global_alink_color"/>}
.t{color:<xsl:value-of select="$sep_bar_text_color"/>}
.t{background-color:<xsl:value-of select="$sep_bar_bg_color"/>}
.z{display:none}
.i,.i:link{color:#a90a08}
.a,.a:link{color:<xsl:value-of select="$res_url_color"/>}
div.n {margin-top: 1ex}
.n a{font-size: 10pt; color:<xsl:value-of select="$global_text_color"/>}
.n .i{font-size: 10pt; font-weight:bold}
.q a:visited,.q a:link,.q a:active,.q {color:#0000cc;}
.b,.b a{font-size: 12pt; color:#0000cc; font-weight:bold}
.d{margin-right:1em; margin-left:1em;}
div.oneboxResults {
    height: expression( this.scrollHeight > 499 ? "500px" : "auto" ); /* sets
    max-height for IE 499, 500 mismatch is to avoid IE6 freeze bug*/
    max-height:500px;
    overflow:visible;}
<xsl:if test="$show_alerts2 = '1'">
div.personalization {font-size:84%;padding: 0 0 4px;}
</xsl:if>
<xsl:if test="$show_res_clusters = '1'">
  <xsl:choose>
    <xsl:when test="$res_cluster_position = 'top'">
div#clustering {font-size: 84%; line-height: 140%; min-height: 4.6em; _height: 4.6em; margin-top: 1em;}
div#clustering h3 {font-size: 100%; font-weight: bold; margin: 0; padding: 0;}
div#clustering table {margin-left: 2em; font-size: 100%;} 
div#clustering table a {white-space: nowrap;}
div#clustering table td {padding-right: 1em;}
div#clustering #cluster_status {color: #666666; margin-left: 2em;}
</xsl:when>
    <xsl:when test="$res_cluster_position = 'right'">
div#clustering {font-size: 84%; line-height: 140%; float: right; width: 15em; margin: 2em 0 0 1em; padding-left: 1em; border-left: 1px solid #cccccc;}
div#clustering h3 {font-size: 100%; font-weight: bold; margin: 0 0 0.6em 0; padding: 0;}
div#clustering ul {list-style: none; margin: 0; padding: 0;}
div#clustering li {margin-left: 2em; text-indent: -2em;}
div#clustering #cluster_status {color: #666666;}
</xsl:when>
  </xsl:choose>
</xsl:if>
<xsl:if test="$show_suggest != '0'">
.ac-renderer {
position : absolute;
width : 300px;
background-color : <xsl:value-of select="$global_bg_color"/>;
border : 1px solid #999;
}
.ac-row {
position : relative;
background-color : <xsl:value-of select="$global_bg_color"/>;
margin : 1px;
padding : 1px 4px;
cursor : pointer;
}
.ac-highlighted {
color : #111;
}
.ac-active {
background-color : #AAF;
color : #111;
font : bold;
}
</xsl:if>


<xsl:if test="$show_parametric_navigation = '1'">
<!-- ************************************************************* -->
<!-- CUSTOM : Metatag Clustering specific style
*************************** -->
div#metaclustering { font-size: 84%; line-height: 140%; float: right; width: 15em; margin: 1em 0 0 1em; padding-left: 1em; border-left: 1px solid #cccccc; }
div#metaclustering h3 { font-size: 100%; font-weight: bold; margin: 1.2em 0 0.6em 0; padding: 0; }
div#metaclustering ul { list-style: none; margin: 0; padding: 0; }
div#metaclustering li { margin-left: 2em; text-indent: -2em; }
#metacluster_message { color: #666666; }
<!-- ************************************************************* -->
</xsl:if>


</xsl:comment>
</style>
</xsl:template>

<!-- **********************************************************************
 URL variables (do not customize)
     ********************************************************************** -->
<!-- *** if this is a test search (help variable)-->
<xsl:variable name="is_test_search"
  select="/GSP/PARAM[@name='testSearch']/@value"/>

<!-- *** if this is a search within results search *** -->
<xsl:variable name="swrnum">
  <xsl:choose>
    <xsl:when test="/GSP/PARAM[(@name='swrnum') and (@value!='')]">
      <xsl:value-of select="/GSP/PARAM[@name='swrnum']/@value"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="0"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- *** help_url: search tip URL (html file) *** -->
<xsl:variable name="help_url">/user_help.html</xsl:variable>

<!-- *** base_url: collection info *** -->
<xsl:variable name="base_url">
  <xsl:for-each
    select="/GSP/PARAM[@name = 'client' or

                     @name = 'site' or
                     @name = 'num' or
                     @name = 'output' or
                     @name = 'proxystylesheet' or
                     @name = 'access' or
                     @name = 'lr' or
                     @name = 'ie']">
    <xsl:value-of select="@name"/>=<xsl:value-of select="@original_value"/>
    <xsl:if test="position() != last()">&amp;</xsl:if>
  </xsl:for-each>
</xsl:variable>

<!-- *** home_url: search? + collection info + &proxycustom=<HOME/> *** -->
<xsl:variable name="home_url">search?<xsl:value-of select="$base_url"
  />&amp;proxycustom=&lt;HOME/&gt;</xsl:variable>


<!-- *** synonym_url: does not include q, as_q, and start elements *** -->
<xsl:variable name="synonym_url"><xsl:for-each
  select="/GSP/PARAM[(@name != 'q') and
                     (@name != 'as_q') and
                     (@name != 'swrnum') and

		     (@name != 'ie') and
                     (@name != 'start') and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
    <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
    <xsl:value-of select="@original_value"/>
    <xsl:if test="position() != last()">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
  </xsl:for-each>
</xsl:variable>

<!-- *** search_url *** -->
<xsl:variable name="search_url">
  <xsl:for-each select="/GSP/PARAM[(@name != 'start') and
                                   (@name != 'swrnum') and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
    <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
    <xsl:value-of select="@original_value"/>
    <xsl:if test="position() != last()">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
  </xsl:for-each>
</xsl:variable>

 <!-- *** search_url_escaped: safe for inclusion in javascript *** -->
<xsl:variable name="search_url_escaped">
    <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select='"&apos;"'/>
    <xsl:with-param name="replace" select='"%27"'/>
    <xsl:with-param name="string" select="$search_url"/>
    </xsl:call-template>
  </xsl:variable>

<!-- *** filter_url: everything except resetting "filter=" *** -->
<xsl:variable name="filter_url">search?<xsl:for-each
  select="/GSP/PARAM[(@name != 'filter') and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
    <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
    <xsl:value-of select="@original_value"/>
    <xsl:if test="position() != last()">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
  </xsl:for-each>
  <xsl:text disable-output-escaping='yes'>&amp;filter=</xsl:text>
</xsl:variable>

<!-- *** adv_search_url: search? + $search_url + as_q=$q *** -->
<xsl:variable name="adv_search_url">search?<xsl:value-of
  select="$search_url"/>&amp;proxycustom=&lt;ADVANCED/&gt;</xsl:variable>

<!-- *** db_url_protocol: googledb:// *** -->
<xsl:variable name="db_url_protocol">googledb://</xsl:variable>

<!-- *** googleconnector_protocol: googleconnector:// *** -->
<xsl:variable name="googleconnector_protocol">googleconnector://</xsl:variable>

<!-- *** nfs_url_protocol: nfs:// *** -->
<xsl:variable name="nfs_url_protocol">nfs://</xsl:variable>

<!-- *** smb_url_protocol: smb:// *** -->
<xsl:variable name="smb_url_protocol">smb://</xsl:variable>

<!-- *** unc_url_protocol: unc:// *** -->
<xsl:variable name="unc_url_protocol">unc://</xsl:variable>

<!-- *** swr_search_url: search? + $search_url + as_q=$q *** -->
<xsl:variable name="swr_search_url">search?<xsl:value-of
  select="$search_url"/>&amp;swrnum=<xsl:value-of select="/GSP/RES/M"/></xsl:variable>

<!-- *** analytics_script_url: http://www.google-analytics.com/urchin.js *** -->
<xsl:variable
 name="analytics_script_url">http://www.google-analytics.com/urchin.js</xsl:variable>

<!-- **********************************************************************
 Search Parameters (do not customize)
     ********************************************************************** -->

<!-- *** num_results: actual num_results per page *** -->
<xsl:variable name="num_results">
  <xsl:choose>
    <xsl:when test="/GSP/PARAM[(@name='num') and (@value!='')]">
      <xsl:value-of select="/GSP/PARAM[@name='num']/@value"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="10"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- *** form_params: parameters carried by the search input form *** -->
<xsl:template name="form_params">
  <xsl:for-each
    select="PARAM[@name != 'q' and
                  @name != 'ie' and
                  not(contains(@name, 'as_')) and
                  @name != 'btnG' and
                  @name != 'btnI' and
                  @name != 'site' and
                  @name != 'filter' and
                  @name != 'swrnum' and
                  @name != 'start' and
                  @name != 'access' and
                  @name != 'ip' and
                  (@name != 'epoch' or $is_test_search != '') and
                  not(starts-with(@name ,'metabased_'))]">
        <input type="hidden" name="{@name}" value="{@value}" />

      <xsl:if test="@name = 'oe'">
        <input type="hidden" name="ie" value="{@value}" />
      </xsl:if>
    <xsl:text>
    </xsl:text>
  </xsl:for-each>
  <xsl:if test="$search_collections_xslt = '' and PARAM[@name='site']">
    <input type="hidden" name="site" value="{PARAM[@name='site']/@value}"/>
  </xsl:if>
</xsl:template>

<!-- *** space_normalized_query: q = /GSP/Q *** -->
<xsl:variable name="qval">
  <xsl:value-of select="/GSP/Q"/>
</xsl:variable>

<xsl:variable name="space_normalized_query">
  <xsl:value-of select="normalize-space($qval)"
    disable-output-escaping="yes"/>
</xsl:variable>

<!-- *** stripped_search_query: q, as_q, ... for cache highlight *** -->
<xsl:variable name="stripped_search_query"><xsl:for-each
  select="/GSP/PARAM[(@name = 'q') or
                     (@name = 'as_q') or
                     (@name = 'as_oq') or
                     (@name = 'as_epq')]"><xsl:value-of select="@original_value"
  /><xsl:if test="position() != last()"
    ><xsl:text disable-output-escaping="yes">+</xsl:text
     ></xsl:if></xsl:for-each>
</xsl:variable>

<xsl:variable name="access">
  <xsl:choose>
    <xsl:when test="/GSP/PARAM[(@name='access') and ((@value='s') or (@value='a'))]">
      <xsl:value-of select="/GSP/PARAM[@name='access']/@original_value"/>
    </xsl:when>
    <xsl:otherwise>p</xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- **********************************************************************
 Script to get current page.
     ********************************************************************** -->
<xsl:template name="search_home_script">
 <script type="text/javascript">
  function getHomeUrl() {
    return location.href = "/ealerts?shu=" + escape(document.location.href);
  }
 </script>
</xsl:template>

<!-- **********************************************************************
 Shown sign-in/sign-out links at the top of the /search page
     ********************************************************************** -->

<xsl:template name="sign_in">
    <xsl:call-template name="search_home_script"/>
    <div class="personalization" width="100%" align="right">
     <xsl:text disable-output-escaping='yes'>&lt;a href='javascript:getHomeUrl();'&gt;My Alerts&lt;/a&gt;</xsl:text>
    </div>
</xsl:template>

<xsl:template name="signed_in">
  <xsl:call-template name="search_home_script"/>
  <div class="personalization" width="100%" align="right">
    <b><xsl:value-of select="/GSP/LOGIN" /></b> |
     <xsl:text disable-output-escaping='yes'>&lt;a href='javascript:getHomeUrl();'&gt;My Alerts&lt;/a&gt;</xsl:text> |
     <xsl:text disable-output-escaping='yes'>&lt;a href='/uam?action=Logout'&gt;Sign Out&lt;/a&gt;</xsl:text>
  </div>
</xsl:template>

<xsl:template name="personalization">
 <xsl:if test="$show_alerts2 = '1'">
  <xsl:choose>
   <xsl:when test="/GSP/PERSONALIZATION">
    <xsl:choose>
      <xsl:when test="/GSP/LOGIN"><xsl:call-template name="signed_in"/></xsl:when>
      <xsl:otherwise><xsl:call-template name="sign_in" /></xsl:otherwise>
    </xsl:choose>
   </xsl:when>
  </xsl:choose>
 </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Figure out what kind of page this is (do not customize)
     ********************************************************************** -->
<xsl:template match="GSP">
  <xsl:choose>
    <xsl:when test="Q">
      <xsl:choose>
        <xsl:when test="$swrnum != 0">
          <xsl:call-template name="swr_search"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:call-template name="search_results"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:when>
    <xsl:when test="CACHE">
      <xsl:choose>
        <xsl:when test="$show_res_cache!='0'">
          <xsl:call-template name="cached_page"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:call-template name="no_RES"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:when>
    <xsl:when test="CUSTOM/HOME">
      <xsl:call-template name="front_door"/>
    </xsl:when>
    <xsl:when test="CUSTOM/ADVANCED">
      <xsl:call-template name="advanced_search"/>
    </xsl:when>
    <xsl:when test="ERROR">
      <xsl:call-template name="error_page">
        <xsl:with-param name="errorMessage" select="$server_error_msg_text"/>
        <xsl:with-param name="errorDescription" select="$server_error_des_text"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:call-template name="error_page">
        <xsl:with-param name="errorMessage" select="$xml_error_msg_text"/>
        <xsl:with-param name="errorDescription" select="$xml_error_des_text"/>
      </xsl:call-template>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
 Cached page (do not customize)
     ********************************************************************** -->
<xsl:template name="cached_page">
<xsl:variable name="cached_page_url" select="CACHE/CACHE_URL"/>
<xsl:variable name="cached_page_html" select="CACHE/CACHE_HTML"/>

<!-- *** decide whether to load html page or pdf file *** -->
<xsl:if test="'.pdf' != substring($cached_page_url,
              1 + string-length($cached_page_url) - string-length('.pdf')) and
              not(starts-with($cached_page_url, $db_url_protocol)) and
              not(starts-with($cached_page_url, $nfs_url_protocol)) and
              not(starts-with($cached_page_url, $smb_url_protocol)) and
              not(starts-with($cached_page_url, $unc_url_protocol))">
    <base href="{$cached_page_url}"/>
</xsl:if>

<!-- *** display cache page header *** -->
<xsl:call-template name="cached_page_header">
  <xsl:with-param name="cached_page_url" select="$cached_page_url"/>
</xsl:call-template>

<!-- *** display cached contents *** -->
<xsl:value-of select="$cached_page_html" disable-output-escaping="yes"/>
</xsl:template>

<xsl:template name="escape_quot">
  <xsl:param name="string"/>
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="'&quot;'"/>
    <xsl:with-param name="replace" select="'&amp;quot;'"/>
    <xsl:with-param name="string" select="$string"/>
  </xsl:call-template>
</xsl:template>

<!-- **********************************************************************
 Advanced search page (do not customize)
     ********************************************************************** -->
<xsl:template name="advanced_search">

<xsl:variable name="html_escaped_as_q">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='q']/@value"/>
    </xsl:call-template>
    <xsl:value-of select="' '"/>
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_q']/@value"/>
    </xsl:call-template>
</xsl:variable>

<xsl:variable name="html_escaped_as_epq">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_epq']/@value"/>
    </xsl:call-template>
</xsl:variable>

<xsl:variable name="html_escaped_as_oq">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_oq']/@value"/>
    </xsl:call-template>
</xsl:variable>

<xsl:variable name="html_escaped_as_eq">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_eq']/@value"/>
    </xsl:call-template>
</xsl:variable>

<html>
<xsl:call-template name="langHeadStart"/>
<title><xsl:value-of select="$adv_page_title"/></title>
<xsl:call-template name="style"/>

<!-- script type="text/javascript" -->
<script>
<xsl:comment>
function setFocus() {
document.f.as_q.focus(); }
function esc(x){
x = escape(x).replace(/\+/g, "%2b");
if (x.substring(0,2)=="\%u") x="";
return x;
}
function collecturl(target, custom) {
var p = new Array();var i = 0;var url="";var z = document.f;
if (z.as_q.value.length) {p[i++] = 'as_q=' + esc(z.as_q.value);}
if (z.as_epq.value.length) {p[i++] = 'as_epq=' + esc(z.as_epq.value);}
if (z.as_oq.value.length) {p[i++] = 'as_oq=' + esc(z.as_oq.value);}
if (z.as_eq.value.length) {p[i++] = 'as_eq=' + esc(z.as_eq.value);}
if (z.as_sitesearch.value.length)
  {p[i++]='as_sitesearch='+esc(z.as_sitesearch.value);}
if (z.as_lq.value.length) {p[i++] = 'as_lq=' + esc(z.as_lq.value);}
if (z.as_occt.options[z.as_occt.selectedIndex].value.length)
  {p[i++]='as_occt='+esc(z.as_occt.options[z.as_occt.selectedIndex].value);}
if (z.as_dt.options[z.as_dt.selectedIndex].value.length)
  {p[i++]='as_dt='+esc(z.as_dt.options[z.as_dt.selectedIndex].value);}
if (z.lr.options[z.lr.selectedIndex].value != '') {p[i++] = 'lr=' +
  z.lr.options[z.lr.selectedIndex].value;}
if (z.num.options[z.num.selectedIndex].value != '10')
  {p[i++] = 'num=' + z.num.options[z.num.selectedIndex].value;}
if (z.sort.options[z.sort.selectedIndex].value != '')
  {p[i++] = 'sort=' + z.sort.options[z.sort.selectedIndex].value;}
if (typeof(z.client) != 'undefined')
  {p[i++] = 'client=' + esc(z.client.value);}
if (typeof(z.site) != 'undefined')
  {p[i++] = 'site=' + esc(z.site.value);}
if (typeof(z.output) != 'undefined')
  {p[i++] = 'output=' + esc(z.output.value);}
if (typeof(z.proxystylesheet) != 'undefined')
  {p[i++] = 'proxystylesheet=' + esc(z.proxystylesheet.value);}
if (typeof(z.ie) != 'undefined')
  {p[i++] = 'ie=' + esc(z.ie.value);}
if (typeof(z.oe) != 'undefined')
  {p[i++] = 'oe=' + esc(z.oe.value);}

if (typeof(z.access) != 'undefined')
  {p[i++] = 'access=' + esc(z.access.value);}
if (custom != '')
  {p[i++] = 'proxycustom=' + '&lt;ADVANCED/&gt;';}
if (p.length &gt; 0) {
url = p[0];
for (var j = 1; j &lt; p.length; j++) { url += "&amp;" + p[j]; }}
 location.href = target + '?' + url;
}
// </xsl:comment>
</script>

  <xsl:call-template name="langHeadEnd"/>

  <body onload="setFocus()" dir="ltr">
    <xsl:call-template name="personalization"/>
    <xsl:call-template name="analytics"/>

    <!-- *** Customer's own advanced search page header *** -->
    <xsl:if test="$choose_adv_search_page_header = 'mine' or
                    $choose_adv_search_page_header = 'both'">
      <xsl:call-template name="my_page_header"/>
    </xsl:if>

    <!--====Advanced Search Header======-->
    <xsl:if test="$choose_adv_search_page_header = 'provided' or
                    $choose_adv_search_page_header = 'both'">
      <xsl:call-template name="advanced_search_header"/>
    </xsl:if>

    <xsl:call-template name="top_sep_bar">
      <xsl:with-param name="text" select="$sep_bar_adv_text"/>
      <xsl:with-param name="show_info" select="0"/>
      <xsl:with-param name="time" select="0"/>
    </xsl:call-template>

    <!--====Carry over Search Parameters======-->
    <form method="get" action="search" name="f">
      <xsl:if test="PARAM[@name='client']">
        <input type="hidden" name="client"
          value="{PARAM[@name='client']/@value}" />
      </xsl:if>
    <!--==== site is carried over in the drop down if the menu is used =====-->
      <xsl:if test="$search_collections_xslt = '' and PARAM[@name='site']">
        <input type="hidden" name="site" value="{PARAM[@name='site']/@value}"/>
      </xsl:if>
      <xsl:if test="PARAM[@name='site']">
        <input type="hidden" name="site" value="{PARAM[@name='site']/@value}"/>
      </xsl:if>
      <xsl:if test="PARAM[@name='output']">
        <input type="hidden" name="output"
          value="{PARAM[@name='output']/@value}" />
      </xsl:if>
      <xsl:if test="PARAM[@name='proxystylesheet']">
        <input type="hidden" name="proxystylesheet"
          value="{PARAM[@name='proxystylesheet']/@value}" />
      </xsl:if>
      <xsl:if test="PARAM[@name='ie']">
        <input type="hidden" name="ie"
          value="{PARAM[@name='ie']/@value}" />
      </xsl:if>
      <xsl:if test="PARAM[@name='oe']">
        <input type="hidden" name="oe"
          value="{PARAM[@name='oe']/@value}" />
      </xsl:if>
      <xsl:if test="PARAM[@name='hl']">
        <input type="hidden" name="hl"
          value="{PARAM[@name='hl']/@value}" />
      </xsl:if>
      <xsl:if test="PARAM[@name='getfields']">
        <input type="hidden" name="getfields"
          value="{PARAM[@name='getfields']/@value}" />
      </xsl:if>
      <xsl:if test="PARAM[@name='requiredfields']">
        <input type="hidden" name="requiredfields"
          value="{PARAM[@name='requiredfields']/@value}" />
      </xsl:if>
      <xsl:if test="PARAM[@name='partialfields']">
        <input type="hidden" name="partialfields"
          value="{PARAM[@name='partialfields']/@value}" />
      </xsl:if>

      <!--====Advanced Search Options======-->

      <table cellspacing="0" cellpadding="3" border="0" width="100%">
        <tr bgcolor="{$adv_search_panel_bgcolor}">
          <td>
            <table width="100%" cellspacing="0" cellpadding="0" border="0">
              <tr bgcolor="{$adv_search_panel_bgcolor}">
                <td>
                  <table width="100%" cellspacing="0" cellpadding="2"
                  border="0">
                    <tr>
                      <td valign="top" width="15%"><font size="-1"><br />
                      <b>Find results</b></font> </td>

                      <td width="85%">
                        <table width="100%" cellpadding="2"
                        border="0" cellspacing="0">
                          <tr>
                            <td><font size="-1">with <b>all</b> of the words</font></td>

                            <td>
                            <xsl:text disable-output-escaping="yes">
                             &lt;input type=&quot;text&quot;
                             name=&quot;as_q&quot;
                             size=&quot;25&quot; value=&quot;</xsl:text>
                            <xsl:value-of disable-output-escaping="yes"
                             select="$html_escaped_as_q"/>
                            <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>

                            <script type="text/javascript">
                              <xsl:comment>
                                document.f.as_q.focus();
                              // </xsl:comment>
                            </script>
                            </td>

                            <td valign="top" rowspan="4">
                            <font size="-1">
                            <select name="num">
                              <xsl:choose>
                                <xsl:when test="PARAM[(@name='num') and (@value!='10')]">
                                  <option value="10">10 results</option>
                                </xsl:when>
                                <xsl:otherwise>
                                  <option value="10" selected="selected">10 results</option>
                                </xsl:otherwise>
                              </xsl:choose>
                              <xsl:choose>
                                <xsl:when test="PARAM[(@name='num') and (@value='20')]">
                                  <option value="20" selected="selected">20 results</option>
                                </xsl:when>
                                  <xsl:otherwise>
                                    <option value="20">20 results</option>
                                </xsl:otherwise>
                              </xsl:choose>
                              <xsl:choose>
                                <xsl:when test="PARAM[(@name='num') and (@value='30')]">
                                  <option value="30" selected="selected">30 results</option>
                                </xsl:when>
                                <xsl:otherwise>
                                  <option value="30">30 results</option>
                                </xsl:otherwise>
                              </xsl:choose>
                              <xsl:choose>
                                <xsl:when test="PARAM[(@name='num') and (@value='50')]">
                                  <option value="50" selected="selected">50 results</option>
                                </xsl:when>
                                <xsl:otherwise>
                                  <option value="50">50 results</option>
                                </xsl:otherwise>
                              </xsl:choose>
                              <xsl:choose>
                                <xsl:when test="PARAM[(@name='num') and (@value='100')]">
                                  <option value="100" selected="selected">100 results</option>
                                </xsl:when>
                                <xsl:otherwise>
                                  <option value="100">100 results</option>
                                </xsl:otherwise>
                              </xsl:choose>
                            </select>
                            </font>
                            </td>
       <!--                     <xsl:call-template name="collection_menu"/>-->
                            <td>
                            <font size="-1">
                            <input type="submit" name="btnG"
                              value="{$search_button_text}" />
                            </font>
                            </td>
                          </tr>

                          <tr>
                            <td nowrap="nowrap"><font size="-1">with the <b>exact phrase</b></font></td>

                            <td>
                            <xsl:text disable-output-escaping="yes">

                             &lt;input type=&quot;text&quot;
                             name=&quot;as_epq&quot;
                             size=&quot;25&quot; value=&quot;</xsl:text>
                            <xsl:value-of disable-output-escaping="yes"
                             select="$html_escaped_as_epq"/>
                            <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                            </td>
                          </tr>

                          <tr>
                            <td nowrap="nowrap"><font size="-1">with <b>at least one</b> of the words</font></td>

                            <td>
                            <xsl:text disable-output-escaping="yes">

                             &lt;input type=&quot;text&quot;
                             name=&quot;as_oq&quot;
                             size=&quot;25&quot; value=&quot;</xsl:text>
                            <xsl:value-of disable-output-escaping="yes"
                             select="$html_escaped_as_oq"/>
                            <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                            </td>
                          </tr>

                          <tr>
                            <td nowrap="nowrap"><font size="-1"><b>without</b> the words</font></td>

                            <td>
                            <xsl:text disable-output-escaping="yes">

                             &lt;input type=&quot;text&quot;
                             name=&quot;as_eq&quot;
                             size=&quot;25&quot; value=&quot;</xsl:text>
                            <xsl:value-of disable-output-escaping="yes"
                             select="$html_escaped_as_eq"/>
                            <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                            </td>
                          </tr>
                        </table>
                      </td>
                    </tr>
                  </table>
                </td>
              </tr>

              <tr bgcolor="{$global_bg_color}">
                <td>
                  <table width="100%" cellspacing="0"
                  cellpadding="2" border="0">
                    <tr>
                      <td width="15%"><font size="-1"><b>Language</b></font></td>

                      <td width="40%"><font size="-1">Return pages written in</font></td>

                      <td><font size="-1">



                         <xsl:choose>
                        <xsl:when test="PARAM[(@name='oe') and (@value!='')]">
                          <xsl:text disable-output-escaping="yes">&lt;select name=&quot;lr&quot;&gt;</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:text disable-output-escaping="yes">&lt;select name=&quot;lr&quot; onchange=&quot;javascript:collecturl('search', 'adv');&quot;&gt;</xsl:text>
                        </xsl:otherwise>
                      </xsl:choose>

                        <option value="">any language</option>

                        <!--====IMPORTANT: This is not a Message. This is a placeholder.======-->
                        
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_ar')]">
			 <option value="lang_ar"
			 selected="selected">Arabic</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_ar">Arabic</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-CN')]">
			 <option value="lang_zh-CN"
			 selected="selected">Chinese (Simplified)</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_zh-CN">Chinese (Simplified)</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-TW')]">
			 <option value="lang_zh-TW"
			 selected="selected">Chinese (Traditional)</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_zh-TW">Chinese (Traditional)</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_cs')]">
			 <option value="lang_cs"
			 selected="selected">Czech</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_cs">Czech</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_da')]">
			 <option value="lang_da"
			 selected="selected">Danish</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_da">Danish</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_nl')]">
			 <option value="lang_nl"
			 selected="selected">Dutch</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_nl">Dutch</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_en')]">
			 <option value="lang_en"
			 selected="selected">English</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_en">English</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_et')]">
			 <option value="lang_et"
			 selected="selected">Estonian</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_et">Estonian</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_fi')]">
			 <option value="lang_fi"
			 selected="selected">Finnish</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_fi">Finnish</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_fr')]">
			 <option value="lang_fr"
			 selected="selected">French</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_fr">French</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_de')]">
			 <option value="lang_de"
			 selected="selected">German</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_de">German</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_el')]">
			 <option value="lang_el"
			 selected="selected">Greek</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_el">Greek</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_iw')]">
			 <option value="lang_iw"
			 selected="selected">Hebrew</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_iw">Hebrew</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_hu')]">
			 <option value="lang_hu"
			 selected="selected">Hungarian</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_hu">Hungarian</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_is')]">
			 <option value="lang_is"
			 selected="selected">Icelandic</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_is">Icelandic</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_it')]">
			 <option value="lang_it"
			 selected="selected">Italian</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_it">Italian</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_ja')]">
			 <option value="lang_ja"
			 selected="selected">Japanese</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_ja">Japanese</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_ko')]">
			 <option value="lang_ko"
			 selected="selected">Korean</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_ko">Korean</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_lv')]">
			 <option value="lang_lv"
			 selected="selected">Latvian</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_lv">Latvian</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_lt')]">
			 <option value="lang_lt"
			 selected="selected">Lithuanian</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_lt">Lithuanian</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_no')]">
			 <option value="lang_no"
			 selected="selected">Norwegian</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_no">Norwegian</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_pl')]">
			 <option value="lang_pl"
			 selected="selected">Polish</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_pl">Polish</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_pt')]">
			 <option value="lang_pt"
			 selected="selected">Portuguese</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_pt">Portuguese</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_ro')]">
			 <option value="lang_ro"
			 selected="selected">Romanian</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_ro">Romanian</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_ru')]">
			 <option value="lang_ru"
			 selected="selected">Russian</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_ru">Russian</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_es')]">
			 <option value="lang_es"
			 selected="selected">Spanish</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_es">Spanish</option>
			 </xsl:otherwise>
			</xsl:choose>

			
			<xsl:choose>
			 <xsl:when test="PARAM[(@name='lr') and (@value='lang_sv')]">
			 <option value="lang_sv"
			 selected="selected">Swedish</option>
			 </xsl:when>
			 <xsl:otherwise>
			 <option value="lang_sv">Swedish</option>
			 </xsl:otherwise>
			</xsl:choose>


                      <xsl:text disable-output-escaping="yes">&lt;/select&gt;</xsl:text>
                      </font></td>
                    </tr>
                  </table>
                </td>
              </tr>

              <tr bgcolor="{$global_bg_color}">
                <td>
                  <table width="100%" cellpadding="2"
                  cellspacing="0" border="0">
                    <tr>
                      <td width="15%"><font size="-1"><b>File Format</b></font></td>

                      <td width="40%" nowrap="nowrap"><font size="-1"><select name="as_ft">
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_ft') and (@value='i')]">
                            <option value="i" selected="selected">Only</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="i">Only</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_ft') and (@value='e')]">
                            <option value="e" selected="selected">Don't</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="e">Don't</option>
                          </xsl:otherwise>
                        </xsl:choose>
                      </select>return results of the file format</font>
                      </td>

                      <td><font size="-1">
                      <select name="as_filetype">
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_filetype') and (@value!='')]">
                            <option value="">any format</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="" selected="selected">any format</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_filetype') and (@value='pdf')]">
                            <option value="pdf" selected="selected">Adobe Acrobat PDF (.pdf)</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="pdf">Adobe Acrobat PDF (.pdf)</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_filetype') and (@value='ps')]">
                            <option value="ps" selected="selected">Adobe Postscript (.ps)</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="ps">Adobe Postscript (.ps)</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_filetype') and (@value='doc')]">
                            <option value="doc" selected="selected">Microsoft Word (.doc)</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="doc">Microsoft Word (.doc)</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_filetype') and (@value='xls')]">
                            <option value="xls" selected="selected">Microsoft Excel (.xls)</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="xls">Microsoft Excel (.xls)</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_filetype') and (@value='ppt')]">
                            <option value="ppt" selected="selected">Microsoft Powerpoint (.ppt)</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="ppt">Microsoft Powerpoint (.ppt)</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_filetype') and (@value='rtf')]">
                            <option value="rtf" selected="selected">Rich Text Format (.rtf)</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="rtf">Rich Text Format (.rtf)</option>
                          </xsl:otherwise>
                        </xsl:choose>
                      </select>
                      </font></td>
                    </tr>
                  </table>
                </td>
              </tr>

              <tr bgcolor="{$global_bg_color}">
                <td>
                  <table width="100%" cellspacing="0"
                  cellpadding="2" border="0">
                    <tr>
                      <td width="15%"><font size="-1"><b>Occurrences</b></font></td>

                      <td nowrap="nowrap" width="40%"><font size="-1">Return results where my terms occur</font></td>

                      <td><font size="-1"><select
                      name="as_occt">
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_occt') and (@value!='any')]">
                            <option value="any"> anywhere in the page </option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="any" selected="selected">
                              anywhere in the page
                            </option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_occt') and (@value='title')]">
                            <option value="title" selected="selected">in the title of the page</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="title">in the title of the page</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_occt') and (@value='url')]">
                            <option value="url" selected="selected">in the URL of the page</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="url">in the URL of the page</option>
                          </xsl:otherwise>
                        </xsl:choose>
                      </select></font></td>
                    </tr>
                  </table>
                </td>
              </tr>

              <tr bgcolor="{$global_bg_color}">
                <td>
                  <table width="100%" cellpadding="2"
                  cellspacing="0" border="0">
                    <tr>
                      <td width="15%"><font size="-1"><b>Domain</b></font></td>

                      <td width="40%" nowrap="nowrap"><font size="-1"><select
                      name="as_dt">
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_dt') and (@value='i')]">
                            <option value="i" selected="selected">Only</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="i">Only</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_dt') and (@value='e')]">
                            <option value="e" selected="selected">Don't</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="e">Don't</option>
                          </xsl:otherwise>
                        </xsl:choose>
                      </select>return results from the site or domain</font></td>

                      <td>
                        <table cellpadding="0" cellspacing="0"
                        border="0">
                          <tr>
                            <td>
                              <xsl:choose>
                                <xsl:when test="PARAM[@name='as_sitesearch']">
                                  <input type="text" size="25"
                                  value="{PARAM[@name='as_sitesearch']/@value}"
                                  name="as_sitesearch" />
                                </xsl:when>
                                <xsl:otherwise>
                                  <input type="text" size="25" value="" name="as_sitesearch" />
                                </xsl:otherwise>
                              </xsl:choose>
                            </td>
                          </tr>

                          <tr>
                            <td valign="top" nowrap="nowrap"><font size="-1">
                              <i>e.g. google.com, .org</i></font></td>
                          </tr>
                        </table>
                      </td>
                    </tr>

                    <!-- Sort by Date feature -->
                    <tr>
                      <td width="15%"><font size="-1"><b>Sort</b></font></td>

                      <td colspan="2" nowrap="nowrap"><font size="-1"><select
                      name="sort">
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='sort') and (@value='')]">
                            <option value="" selected="selected">Sort by relevance</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="">Sort by relevance</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='sort') and (@value='date:D:S:d1')]">
                            <option value="date:D:S:d1" selected="selected">Sort by date</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="date:D:S:d1">Sort by date</option>
                          </xsl:otherwise>
                        </xsl:choose>
                      </select></font></td>
                    </tr>
                    <!-- Secure Search feature -->
                    <xsl:if test="$show_secure_radio != '0'">

                    <tr>
                      <td width="15%"><font size="-1"><b>Security</b></font></td>

                      <td colspan="2" nowrap="nowrap"><font size="-1">
                        <xsl:choose>
                          <xsl:when test="$access='p'">
                            <label><input type="radio" name="access" value="p" checked="checked" />Search public content only</label>
                          </xsl:when>
                        <xsl:otherwise>
                          <label><input type="radio" name="access" value="p"/>Search public content only</label>
                        </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="$access='a'">
                            <label><input type="radio" name="access" value="a" checked="checked" />Search public and secure content (login required)</label>
                          </xsl:when>
                        <xsl:otherwise>
                          <label><input type="radio" name="access" value="a"/>Search public and secure content (login required)</label>
                        </xsl:otherwise>
                        </xsl:choose>
                      </font></td>
                    </tr>
                    </xsl:if>
                  </table>
                </td>
              </tr>

            </table>
          </td>
        </tr>
      </table>
      <br />
      <br />

      <!--====Page-Specific Search======-->
      <table cellpadding="6" cellspacing="0" border="0">
        <tr>
          <td><b>Page-Specific Search</b></td>
        </tr>
      </table>

      <table cellspacing="0" cellpadding="3" border="0" width="100%">
        <tr bgcolor="{$adv_search_panel_bgcolor}">
          <td>
            <table width="100%" cellpadding="0" cellspacing="0"
            border="0">
              <tr bgcolor="{$adv_search_panel_bgcolor}">
                <td>

                  <table width="100%" cellpadding="2"
                  cellspacing="0" border="0">
                  <form method="get" action="search" name="h">

                    <tr bgcolor="{$global_bg_color}">
                      <td width="15%"><font size="-1"><b>Links</b></font></td>

                      <td width="40%" nowrap="nowrap"><font size="-1">Find pages that link to the page</font> </td>

                      <td nowrap="nowrap">
                          <xsl:choose>
                            <xsl:when test="PARAM[@name='as_lq']">
                              <input type="text" size="30"
                               value="{PARAM[@name='as_lq']/@value}"
                                       name="as_lq" />
                          </xsl:when>
                          <xsl:otherwise>
                            <input type="text" size="30" value="" name="as_lq" />
                          </xsl:otherwise>
                        </xsl:choose>
                        <font size="-1">
                        <input type="submit" name="btnG" value="{$search_button_text}" /></font>
                      </td>
                    </tr>
                  </form>
                  </table>
                </td>
              </tr>
            </table>
          </td>
        </tr>
      </table>

      <xsl:call-template name="copyright"/>

    </form>

    <!-- *** Customer's own advanced search page footer *** -->
    <xsl:call-template name="my_page_footer"/>

  </body>
</html>
</xsl:template>

<!-- **********************************************************************
 Resend query with filter=p to disable path_filtering
 if there is only one result cluster (do not customize)
     ********************************************************************** -->
<xsl:template name="redirect_if_few_results">
  <xsl:variable name="count" select="count(/GSP/RES/R)"/>
  <xsl:variable name="start" select="/GSP/RES/@SN"/>
  <xsl:variable name="filterall"
    select="count(/GSP/PARAM[@name='filter']) = 0"/>
  <xsl:variable name="filter" select="/GSP/PARAM[@name='filter']/@value"/>

</xsl:template>

<!-- **********************************************************************
 Search results (do not customize)
     ********************************************************************** -->
<xsl:template name="search_results">
<html>

  <!-- *** HTML header and style *** -->
  <xsl:call-template name="langHeadStart"/>
    <xsl:call-template name="redirect_if_few_results"/>
    <title><xsl:value-of select="$result_page_title"/>:
      <xsl:value-of select="$space_normalized_query"/>
    </title>
    <xsl:call-template name="style"/>
    <script type="text/javascript">
      <xsl:comment>
        function resetForms() {
          for (var i = 0; i &lt; document.forms.length; i++ ) {
              document.forms[i].reset();
          }
        }
        // Search query
	var page_query = &quot;<xsl:value-of select="$stripped_search_query"/>&quot;
	// Starting page offset, usually 0 for 1st page, 10 for 2nd, 20 for 3rd.
	var page_start = &quot;<xsl:value-of select="/GSP/PARAM[@name='start']/@value"/>&quot;
	// Front end that served the page.
	var page_site = &quot;<xsl:value-of select="/GSP/PARAM[@name='site']/@value"/>&quot;
      //</xsl:comment>
    </script>
  <xsl:call-template name="langHeadEnd"/>

  <xsl:choose>
    <xsl:when test="$show_res_clusters = '1' or $show_parametric_navigation = '1'">
      <script language='javascript' src='common.js'></script>
      <script language='javascript' src='xmlhttp.js'></script>
      <script language='javascript' src='uri.js'></script>
      <script language='javascript' src='cluster.js'></script>
      <xsl:if test="$show_parametric_navigation = '1'">
        <!-- Parametric Navigation code start -->
        <script language='javascript' src='http://YOUR_HOST/googleParametric.js'>//Comment</script>
        <!-- Parametric Navigation code end -->
      </xsl:if>
      <xsl:if test="$show_res_clusters = '1' and $show_parametric_navigation = '1'">
        <body onLoad="resetForms(); cs_loadClusters('{$search_url}', cs_drawClusters); mTLoad('mtParametric', '{$search_url}', 1);" dir="ltr">
          <xsl:call-template name="search_results_body"/>
        </body>
      </xsl:if>
      <xsl:if test="$show_res_clusters = '1' and $show_parametric_navigation != '1'">

        <body onLoad="resetForms(); cs_loadClusters('{$search_url}', cs_drawClusters);" dir="ltr">
          <xsl:call-template name="search_results_body"/>
        </body>
      </xsl:if>
      <xsl:if test="$show_res_clusters != '1' and $show_parametric_navigation = '1'">
        <body onLoad="resetForms(); mTLoad('mtParametric', '{$search_url}', 1);" dir="ltr">
          <xsl:call-template name="search_results_body"/>
        </body>
      </xsl:if>
    </xsl:when>
    <xsl:otherwise>
      <body onLoad="resetForms()" dir="ltr">
        <xsl:call-template name="search_results_body"/>
      </body>
    </xsl:otherwise>
  </xsl:choose>

</html>
</xsl:template>

<xsl:template name="search_results_body">
  <xsl:call-template name="personalization"/>
  <xsl:call-template name="analytics"/>

  <!-- *** Customer's own result page header *** -->
  <xsl:if test="$choose_result_page_header = 'mine' or
                $choose_result_page_header = 'both'">
    <xsl:call-template name="my_page_header"/>
  </xsl:if>

  <!-- *** Result page header *** -->
  <xsl:if test="$choose_result_page_header = 'provided' or
                $choose_result_page_header = 'both'">
    <xsl:call-template name="result_page_header" />
  </xsl:if>

  <!-- *** Top separation bar *** -->
    <xsl:if test="Q != ''">
      <xsl:call-template name="top_sep_bar">
        <xsl:with-param name="text" select="$sep_bar_std_text"/>
          <xsl:with-param name="show_info" select="$show_search_info"/>
        <xsl:with-param name="time" select="TM"/>
      </xsl:call-template>
    </xsl:if>

    <!-- *** Handle results (if any) *** -->
    <xsl:choose>
      <xsl:when test="RES or GM or Spelling or Synonyms or CT or /GSP/ENTOBRESULTS">
        <xsl:call-template name="results">
          <xsl:with-param name="query" select="Q"/>
          <xsl:with-param name="time" select="TM"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:when test="Q=''">
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="no_RES">
          <xsl:with-param name="query" select="Q"/>
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>

    <!-- *** Google footer *** -->
    <xsl:call-template name="copyright"/>

    <!-- *** Customer's own result page footer *** -->
    <xsl:call-template name="my_page_footer"/>

    <xsl:if test="$show_asr != '0'">
	<script language='javascript' src='clicklog_compiled.js'></script>
    </xsl:if>

    <!-- *** HTML footer *** -->
</xsl:template>


<!-- **********************************************************************
  Collection menu beside the search box
     ********************************************************************** -->
<xsl:template name="collection_menu">
  <xsl:if test="$search_collections_xslt != ''">
    <td valign="middle">
        
<select name="site">
 <xsl:choose>
  <xsl:when test="PARAM[(@name='site') and (@value='all_scu')]">
   <option value="all_scu" selected="selected">Search Everything</option>
  </xsl:when>
  <xsl:otherwise>
   <option value="all_scu">Search Everything</option>
  </xsl:otherwise>
 </xsl:choose>
<!-- <xsl:choose>
  <xsl:when test="PARAM[(@name='site') and (@value='caudit')]">
   <option value="caudit" selected="selected">caudit</option>
  </xsl:when>
  <xsl:otherwise>
   <option value="caudit">caudit</option>
  </xsl:otherwise>
 </xsl:choose>
 <xsl:choose>
  <xsl:when test="PARAM[(@name='site') and (@value='default_collection')]">
   <option value="default_collection" selected="selected">default_collection</option>
  </xsl:when>
  <xsl:otherwise>
   <option value="default_collection">default_collection</option>
  </xsl:otherwise>
 </xsl:choose> -->
 <xsl:choose>
  <xsl:when test="PARAM[(@name='site') and (@value='scu')]">
   <option value="scu" selected="selected">Public Site</option>
  </xsl:when>
  <xsl:otherwise>
   <option value="scu">Public Site</option>
  </xsl:otherwise>
 </xsl:choose>
 <xsl:choose>
  <xsl:when test="PARAM[(@name='site') and (@value='staff')]">
   <option value="staff" selected="selected">Staff Intranet</option>
  </xsl:when>
  <xsl:otherwise>
   <option value="staff">Staff Intranet</option>
  </xsl:otherwise>
 </xsl:choose>
 <xsl:choose>
  <xsl:when test="PARAM[(@name='site') and (@value='study')]">
   <option value="study" selected="selected">Student Intranet</option>
  </xsl:when>
  <xsl:otherwise>
   <option value="study">Student Intranet</option>
  </xsl:otherwise>
 </xsl:choose>
</select>

    </td>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
  Search box input form (Types: std_top, std_bottom, home, swr)
     ********************************************************************** -->
<xsl:template name="search_box">
  <xsl:param name="type"/>

  <form name="gs" method="GET" action="search" style="margin-bottom:5px;">
        <table border="0" cellpadding="0" cellspacing="5">
          <xsl:if test="($egds_show_search_tabs != '0') and (($type = 'home') or ($type = 'std_top'))">
          <tr><td>
                <!--<table cellpadding="4" cellspacing="0">
                  <tr><td>
                        <xsl:call-template name="desktop_tab"/>
                  </td></tr>
                </table>-->
          </td></tr>
          </xsl:if>
          <xsl:if test="($type = 'swr')">
          <tr><td>
                <table cellpadding="0" cellspacing="0">
                  <tr><td>
                    There were about <b><xsl:value-of select="RES/M"/></b> results for <b><xsl:value-of select="$space_normalized_query"/></b>.
                      <br/>
                    Use the search box below to search within these results.
                  </td></tr>
                </table>
          </td></tr>
          </xsl:if>
          <tr><td>
          <table cellpadding="0" cellspacing="0">
        <tr>
          <td valign="middle">
          <font size="-1">
            <xsl:choose>
              <xsl:when test="($type = 'swr')">
                <input type="text" name="as_q" size="{$search_box_size}" maxlength="256" value=""/>
                <input type="hidden" name="q" value="{$qval}"/>
              </xsl:when>
              <xsl:otherwise>
                <input type="text" name="q" size="{$search_box_size}" maxlength="256" value="{$space_normalized_query}"/>
                          </xsl:otherwise>
                        </xsl:choose>
          </font>
          </td><td><xsl:call-template name="nbsp"/><xsl:call-template name="nbsp"/></td>

         <!-- <xsl:call-template name="collection_menu"/>-->
          <td valign="middle">
          <font size="-1">
            <xsl:call-template name="nbsp"/>
<xsl:call-template name="nbsp"/>
              <xsl:choose>
              <xsl:when test="$choose_search_button = 'image'">
                        <input type="image" name="btnG" src="{$search_button_image_url}"
                       valign="bottom" width="60" height="26"
                       border="0" value="{$search_button_text}"/>
              </xsl:when>
              <xsl:otherwise>
                <input type="submit" name="btnG" value="{$search_button_text}"/>
              </xsl:otherwise>
              </xsl:choose>
          </font>
          </td>
                  <td nowrap="1">
                        <font size="-2">
                        <xsl:if test="(/GSP/RES/M > 0) and ($show_swr_link != '0') and ($type = 'std_bottom')">
                                <xsl:call-template name="nbsp"/>
                                <xsl:call-template name="nbsp"/>
                                <a ctype="advanced_swr" href="{$swr_search_url}">
                                        <xsl:value-of select="$swr_search_anchor_text"/>
                                </a>
                                <br/>
                        </xsl:if>
                        <xsl:if test="$show_result_page_adv_link != '0'">
                                <xsl:call-template name="nbsp"/>
                                <xsl:call-template name="nbsp"/>
                                <a ctype="advanced" href="{$adv_search_url}">
                                        <xsl:value-of select="$adv_search_anchor_text"/>
                                </a>
                                <br/>
                        </xsl:if>
                        <xsl:if test="$show_result_page_help_link != '0'">
                                <xsl:call-template name="nbsp"/>
                                <xsl:call-template name="nbsp"/>
                                <a ctype="help" href="{$help_url}">
                                        <xsl:value-of select="$search_help_anchor_text"/>
                                </a>
                        </xsl:if>
                        <br/>
                        </font>
                  </td>
        </tr>
        <xsl:if test="$show_secure_radio != '0'">
        <tr>
          <td colspan="2">
          <font size="-1">Search:
            <xsl:choose>
              <xsl:when test="$access='p'">
                <label><input type="radio" name="access" value="p" checked="checked" />public content</label>
              </xsl:when>
              <xsl:otherwise>
                <label><input type="radio" name="access" value="p"/>public content</label>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="$access='a'">
                <label><input type="radio" name="access" value="a" checked="checked" />public and secure content</label>
              </xsl:when>
              <xsl:otherwise>
                <label><input type="radio" name="access" value="a"/>public and secure content</label>
              </xsl:otherwise>
            </xsl:choose>
          </font>
          </td>
        </tr>
        </xsl:if>
      </table>
  </td></tr>
</table>
    <xsl:text>
    </xsl:text>
    <xsl:call-template name="form_params"/>
  </form>
  <xsl:call-template name="gsa_suggest" />
</xsl:template>


<!-- **********************************************************************
  Bottom search box (do not customized)
     ********************************************************************** -->
<xsl:template name="bottom_search_box">
    <br clear="all"/>
    <br/>
    <table width="100%" border="0" cellpadding="0" cellspacing="0">
      <tr>
        <td bgcolor="{$sep_bar_border_color}"><img width="1" height="1" alt=""/></td>
      </tr>
    </table>
    <table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="{$sep_bar_bg_color}">
      <tr>
        <td nowrap="1" bgcolor="{$sep_bar_bg_color}" align="center">
        <br/>
          <xsl:call-template name="search_box">
            <xsl:with-param name="type" select="'std_bottom'"/>
          </xsl:call-template>
        <br/>
        </td>
      </tr>
    </table>
    <table width="100%" border="0" cellpadding="0" cellspacing="0">
      <tr>
        <td bgcolor="{$sep_bar_border_color}"><img width="1" height="1" alt=""/></td>
      </tr>
    </table>
</xsl:template>


<!-- **********************************************************************
 Sort-by criteria: sort by date/relevance
     ********************************************************************** -->
<xsl:template name="sort_by">
  <xsl:variable name="sort_by_url"><xsl:for-each
    select="/GSP/PARAM[(@name != 'sort') and
                       (@name != 'start') and
                       (@name != 'epoch' or $is_test_search != '') and
                       not(starts-with(@name, 'metabased_'))]">
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
      <xsl:if test="position() != last()">
        <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
      </xsl:if>
    </xsl:for-each>
  </xsl:variable>

  <xsl:variable name="sort_by_relevance_url">
    <xsl:value-of select="$sort_by_url"
      />&amp;sort=date%3AD%3AL%3Ad1</xsl:variable>

  <xsl:variable name="sort_by_date_url">
    <xsl:value-of select="$sort_by_url"
      />&amp;sort=date%3AD%3AS%3Ad1</xsl:variable>

  <table><tr valign='top'><td>
  <span class="s">
  <xsl:choose>
    <xsl:when test="/GSP/PARAM[@name = 'sort' and starts-with(@value,'date:D:S')]">
      <font color="{$global_text_color}">
      <xsl:text>Sort by date / </xsl:text>
      </font>
      <a ctype="sort" href="search?{$sort_by_relevance_url}">Sort by relevance</a>
    </xsl:when>
    <xsl:when test="/GSP/PARAM[@name = 'sort' and starts-with(@value,'date:A:S')]">
      <font color="{$global_text_color}">
      <xsl:text>Sort by date / </xsl:text>
      </font>
      <a ctype="sort" href="search?{$sort_by_relevance_url}">Sort by relevance</a>
    </xsl:when>
    <xsl:otherwise>
      <a ctype="sort" href="search?{$sort_by_date_url}">Sort by date</a>
      <font color="{$global_text_color}">
      <xsl:text> / Sort by relevance</xsl:text>
      </font>
    </xsl:otherwise>
  </xsl:choose>
  </span>
  </td></tr></table>
</xsl:template>

<!-- **********************************************************************
 Output all results
     ********************************************************************** -->
<xsl:template name="results">
  <xsl:param name="query"/>
  <xsl:param name="time"/>

  <!-- *** Add top navigation/sort-by bar *** -->
  <xsl:if test="($show_top_navigation != '0') or ($show_sort_by != '0')">
    <xsl:if test="RES"> <!-- there might be onebox results but no RES  -->
      <table width="100%">
      <tr>
      <xsl:if test="$show_top_navigation != '0'">
      <td align="left">
        <xsl:call-template name="google_navigation">
        <xsl:with-param name="prev" select="RES/NB/PU"/>
        <xsl:with-param name="next" select="RES/NB/NU"/>
        <xsl:with-param name="view_begin" select="RES/@SN"/>
        <xsl:with-param name="view_end" select="RES/@EN"/>
        <xsl:with-param name="guess" select="RES/M"/>
        <xsl:with-param name="navigation_style" select="'top'"/>
        </xsl:call-template>
      </td>
      </xsl:if>
      <xsl:if test="$show_sort_by != '0'">
      <td align="right">
      <xsl:call-template name="sort_by"/>
      </td>
      </xsl:if>
      </tr>
    </table>
    </xsl:if>
  </xsl:if>

  <!-- *** Handle OneBox results, if any ***-->
  <xsl:if test="$show_onebox != '0'">
    <xsl:if test="/GSP/ENTOBRESULTS">
      <xsl:call-template name="onebox"/>
    </xsl:if>
  </xsl:if>

  <!-- *** Handle spelling suggestions, if any *** -->
    <xsl:if test="$show_spelling != '0'">
      <xsl:call-template name="spelling"/>
    </xsl:if>

  <!-- *** Handle synonyms, if any *** -->
    <xsl:if test="$show_synonyms != '0'">
      <xsl:call-template name="synonyms"/>
    </xsl:if>

  <!-- *** Output Google Desktop results (if enabled and any available) *** -->
        <xsl:if test="$egds_show_desktop_results != '0'">
            <xsl:call-template name="desktop_results"/>
        </xsl:if>

  <!-- *** Output results details *** -->

    <xsl:if test="$show_res_clusters = '1'">
      <div id='clustering'>
        <h3>Narrow your search</h3>

        <span id='cluster_status'>
          <span id='cluster_message' style="display:none">Loading...</span>
          <noscript>
            Javascript must be enabled for narrowing.
          </noscript>
        </span>

        <xsl:choose>
          <xsl:when test="$res_cluster_position = 'top'">
            <table>
              <tr>
                <td id='cluster_label0'></td>
                <td id='cluster_label2'></td>
                <td id='cluster_label4'></td>
                <td id='cluster_label6'></td>
                <td id='cluster_label8'></td>
              </tr>
              <tr>
                <td id='cluster_label1'></td>
                <td id='cluster_label3'></td>
                <td id='cluster_label5'></td>
                <td id='cluster_label7'></td>
                <td id='cluster_label9'></td>
              </tr>
            </table>
          </xsl:when>
          <xsl:when test="$res_cluster_position = 'right'">
            <ul>
              <li id='cluster_label0'></li>
              <li id='cluster_label1'></li>
              <li id='cluster_label2'></li>
              <li id='cluster_label3'></li>
              <li id='cluster_label4'></li>
              <li id='cluster_label5'></li>
              <li id='cluster_label6'></li>
              <li id='cluster_label7'></li>
              <li id='cluster_label8'></li>
              <li id='cluster_label9'></li>
            </ul>
          </xsl:when>
        </xsl:choose>
      </div>
    </xsl:if>

    <div>
    <!-- for keymatch results -->
    <xsl:if test="$show_keymatch != '0'">
      <xsl:apply-templates select="/GSP/GM"/>
    </xsl:if>

    <!-- for real results -->
    <xsl:apply-templates select="RES/R">
      <xsl:with-param name="query" select="$query"/>
    </xsl:apply-templates>

  <!-- *** Filter note (if needed) *** -->
    <xsl:if test="(RES/FI) and (not(RES/NB/NU))">
      <p>
        <i>
        In order to show you the most relevant results, we have omitted some entries very similar to the <xsl:value-of select="RES/@EN"/> already displayed.<br/>If you like, you can <a href="{$filter_url}0">repeat the search with the omitted results included</a>.
        </i>
      </p>
    </xsl:if>
   

<!-- for parametric navigation -->
    <xsl:if test="$show_parametric_navigation = '1'">
    <xsl:call-template name="my_parametric_navigation">
    </xsl:call-template>
    </xsl:if>

 </div>

  <!-- *** Add bottom navigation *** -->
    <xsl:variable name="nav_style">
      <xsl:choose>
        <xsl:when test="($access='s') or ($access='a')">simple</xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="$choose_bottom_navigation"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>

    <xsl:call-template name="google_navigation">
      <xsl:with-param name="prev" select="RES/NB/PU"/>
      <xsl:with-param name="next" select="RES/NB/NU"/>
      <xsl:with-param name="view_begin" select="RES/@SN"/>
      <xsl:with-param name="view_end" select="RES/@EN"/>
      <xsl:with-param name="guess" select="RES/M"/>
      <xsl:with-param name="navigation_style" select="$nav_style"/>
    </xsl:call-template>

  <!-- *** Bottom search box *** -->
    <xsl:if test="$show_bottom_search_box != '0'">
      <xsl:call-template name="bottom_search_box"/>
    </xsl:if>

</xsl:template>


<!-- **********************************************************************
 Stopwords suggestions in result page (do not customize)
     ********************************************************************** -->
<xsl:template name="stopwords">
  <xsl:variable name="stopwords_suggestions1">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="'/help/basics.html#stopwords'"/>
      <xsl:with-param name="replace" select="'user_help.html#stop'"/>
      <xsl:with-param name="string" select="/GSP/CT"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="stopwords_suggestions">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="'/help/basics.html'"/>
      <xsl:with-param name="replace" select="'user_help.html'"/>
      <xsl:with-param name="string" select="$stopwords_suggestions1"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:if test="/GSP/CT">
    <font size="-1" color="gray">
      <xsl:value-of disable-output-escaping="yes"
        select="$stopwords_suggestions"/>
    </font>
  </xsl:if>
</xsl:template>


<!-- **********************************************************************
 Spelling suggestions in result page (do not customize)
     ********************************************************************** -->
<xsl:template name="spelling">
  <xsl:if test="/GSP/Spelling/Suggestion">
    <p><span class="p"><font color="{$spelling_text_color}">
         <xsl:value-of select="$spelling_text"/>
         <xsl:call-template name="nbsp"/>
       </font></span>
       <a ctype="spell" href="search?q={/GSP/Spelling/Suggestion[1]/@qe}&amp;spell=1&amp;{$base_url}">
       <xsl:value-of disable-output-escaping="yes"
         select="/GSP/Spelling/Suggestion[1]"/>
      </a>
    </p>
  </xsl:if>
</xsl:template>


<!-- **********************************************************************
 Synonym suggestions in result page (do not customize)
     ********************************************************************** -->
<xsl:template name="synonyms">
  <xsl:if test="/GSP/Synonyms/OneSynonym">
    <p><span class="p"><font color="{$synonyms_text_color}">
         <xsl:value-of select="$synonyms_text"/>
         <xsl:call-template name="nbsp"/>
       </font></span>
    <xsl:for-each select="/GSP/Synonyms/OneSynonym">
      <a ctype="synonym" href="search?q={@q}&amp;{$synonym_url}">
        <xsl:value-of disable-output-escaping="yes" select="."/>
      </a><xsl:text> </xsl:text>
    </xsl:for-each>
    </p>
  </xsl:if>
</xsl:template>


<!-- **********************************************************************
 Truncation functions (do not customize)
     ********************************************************************** -->
<xsl:template name="truncate_url">
  <xsl:param name="t_url"/>

  <xsl:choose>
    <xsl:when test="string-length($t_url) &lt; $truncate_result_url_length">
      <xsl:value-of select="$t_url"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:variable name="first" select="substring-before($t_url, '/')"/>
      <xsl:variable name="last">
              <xsl:call-template name="truncate_find_last_token">
                <xsl:with-param name="t_url" select="$t_url"/>
              </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="path_limit" select="$truncate_result_url_length - (string-length($first) + string-length($last) + 1)"/>

      <xsl:choose>
              <xsl:when test="$path_limit &lt;= 0">
                <xsl:value-of select="concat(substring($t_url, 1, $truncate_result_url_length), '...')"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:variable name="chopped_path">
                  <xsl:call-template name="truncate_chop_path">
                    <xsl:with-param name="path" select="substring($t_url, string-length($first) + 2, string-length($t_url) - (string-length($first) + string-length($last) + 1))"/>
                    <xsl:with-param name="path_limit" select="$path_limit"/>
                  </xsl:call-template>
                </xsl:variable>
                <xsl:value-of select="concat($first, '/.../', $chopped_path, $last)"/>
              </xsl:otherwise>
      </xsl:choose>
    </xsl:otherwise>
  </xsl:choose>

</xsl:template>

<xsl:template name="truncate_find_last_token">
  <xsl:param name="t_url"/>

  <xsl:choose>
    <xsl:when test="contains($t_url, '/')">
      <xsl:call-template name="truncate_find_last_token">
            <xsl:with-param name="t_url" select="substring-after($t_url, '/')"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
            <xsl:value-of select="$t_url"/>
    </xsl:otherwise>
  </xsl:choose>

</xsl:template>

<xsl:template name="truncate_chop_path">
  <xsl:param name="path"/>
  <xsl:param name="path_limit"/>

  <xsl:choose>
    <xsl:when test="string-length($path) &lt;= $path_limit">
      <xsl:value-of select="$path"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:call-template name="truncate_chop_path">
        <xsl:with-param name="path" select="substring-after($path, '/')"/>
        <xsl:with-param name="path_limit" select="$path_limit"/>
      </xsl:call-template>
    </xsl:otherwise>
  </xsl:choose>

</xsl:template>


<!-- **********************************************************************
  Google Apps (do not customize)
     ********************************************************************** -->
<xsl:variable
  name="sites_icon"
  select="'https://www.google.com/sites/images/sites_favicon.ico'"/>
<xsl:variable
  name="docs_icon"
  select="'https://docs.google.com/images/doclist/icon_doc.gif'"/>
<xsl:variable
  name="spreadsheets_icon"
  select="'https://docs.google.com/images/doclist/icon_spread.gif'"/>
<xsl:variable
  name="presentations_icon"
  select="'https://docs.google.com/images/doclist/icon_pres.gif'"/>

<!-- **********************************************************************
  A single result (do not customize)
     ********************************************************************** -->
<xsl:template match="R">
  <xsl:param name="query"/>

  <xsl:variable name="protocol"     select="substring-before(U, '://')"/>
  <xsl:variable name="temp_url"     select="substring-after(U, '://')"/>
  <xsl:variable name="display_url1" select="substring-after(UD, '://')"/>
  <xsl:variable name="escaped_url"  select="substring-after(UE, '://')"/>

  <xsl:variable name="display_url2">
    <xsl:choose>
      <xsl:when test="$display_url1">
        <xsl:value-of select="$display_url1"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$temp_url"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <xsl:variable name="display_url">
    <xsl:choose>
      <xsl:when test="$protocol='unc'">
        <xsl:call-template name="convert_unc">
          <xsl:with-param name="string" select="$display_url2"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$display_url2"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <xsl:variable name="stripped_url">
    <xsl:choose>
      <xsl:when test="$truncate_result_urls != '0'">
                <xsl:call-template name="truncate_url">
                  <xsl:with-param name="t_url" select="$display_url"/>
                </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
            <xsl:value-of select="$display_url"/>
          </xsl:otherwise>
        </xsl:choose>
  </xsl:variable>

  <xsl:variable name="crowded_url" select="HN/@U"/>
  <xsl:variable name="crowded_display_url1" select="HN"/>
  <xsl:variable name="crowded_display_url">
    <xsl:choose>
      <xsl:when test="$protocol='unc'">
        <xsl:call-template name="convert_unc">
          <xsl:with-param name="string" select="substring-after($crowded_display_url1,'://')"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$crowded_display_url1"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <xsl:variable name="lower" select="'abcdefghijklmnopqrstuvwxyz'"/>
  <xsl:variable name="upper" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>

  <xsl:variable name="url_indexed" select="not(starts-with($temp_url, 'noindex!/'))"/>

  <!-- *** Indent as required (only supports 2 levels) *** -->
  <xsl:if test="@L='2'">
    <xsl:text disable-output-escaping="yes">&lt;blockquote class=&quot;g&quot;&gt;</xsl:text>
  </xsl:if>

  <!-- *** Result Header *** -->
  <p class="g">

  <xsl:variable name="apps_domain">
    <xsl:if test="starts-with($stripped_url, 'sites.google.com/a/') or
                  starts-with($stripped_url, 'docs.google.com/a/') or
                  starts-with($stripped_url, 'spreadsheets.google.com/a/')">
      <xsl:value-of
        select="substring-before(substring-after($stripped_url, '/a/'), '/')"/>
    </xsl:if>
  </xsl:variable>

  <!-- *** Google Sites icon *** -->
  <xsl:if test="starts-with($stripped_url, 'sites.google.com/')">
    <img src="{$sites_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
  </xsl:if>

  <!-- *** Google Docs icon *** -->
  <xsl:if test="starts-with($stripped_url, concat('docs.google.com/a/', $apps_domain, '/View?'))">
    <img src="{$docs_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
  </xsl:if>

  <!-- *** Google Spreadsheets icon *** -->
  <xsl:if test="starts-with($stripped_url, 'spreadsheets.google.com/')">
    <img src="{$spreadsheets_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
  </xsl:if>

  <!-- *** Google Presentations icon *** -->
  <!-- TODO(timg): remove once Docs eliminates SimplePresentaionView URLs -->
  <xsl:if test="starts-with($stripped_url,
                            concat('docs.google.com/a/', $apps_domain, '/SimplePresentationView?'))">
    <img src="{$presentations_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
  </xsl:if>
  <xsl:if test="starts-with($stripped_url,
                            concat('docs.google.com/a/', $apps_domain, '/PresentationView?'))">
    <img src="{$presentations_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
  </xsl:if>

  <!-- *** Result Title (including PDF tag and hyperlink) *** -->
  <xsl:if test="$show_res_title != '0'">
    <font size="-2"><b>
    <xsl:choose>
      <xsl:when test="@MIME='text/html' or @MIME='' or not(@MIME)"></xsl:when>
      <xsl:when test="@MIME='text/plain'">[TEXT]</xsl:when>
      <xsl:when test="@MIME='application/rtf'">[RTF]</xsl:when>
      <xsl:when test="@MIME='application/pdf'">[PDF]</xsl:when>
      <xsl:when test="@MIME='application/postscript'">[PS]</xsl:when>
      <xsl:when test="@MIME='application/vnd.ms-powerpoint'">[MS POWERPOINT]</xsl:when>
      <xsl:when test="@MIME='application/vnd.ms-excel'">[MS EXCEL]</xsl:when>
      <xsl:when test="@MIME='application/msword'">[MS WORD]</xsl:when>
      <xsl:otherwise>
        <xsl:variable name="extension">
          <xsl:call-template name="last_substring_after">
            <xsl:with-param name="string" select="substring-after(
                                                  $temp_url,
                                                  '/')"/>
            <xsl:with-param name="separator" select="'.'"/>
            <xsl:with-param name="fallback" select="'UNKNOWN'"/>
          </xsl:call-template>
        </xsl:variable>
        [<xsl:value-of select="translate($extension,$lower,$upper)"/>]
      </xsl:otherwise>
    </xsl:choose>
    </b></font>
    <xsl:text> </xsl:text>

    <xsl:variable name="link"
     select="$url_indexed and not(starts-with(U, $googleconnector_protocol))"/>

    <xsl:if test="$link">

      <xsl:text disable-output-escaping='yes'>&lt;a 
            ctype="c"
      </xsl:text>
            rank=&quot;<xsl:value-of select="position()"/>&quot;
      <xsl:text disable-output-escaping='yes'>
            href="</xsl:text>

      <xsl:choose>
        <xsl:when test="starts-with(U, $db_url_protocol)">
          <xsl:value-of disable-output-escaping='yes'
                        select="concat('db/', $temp_url)"/>
        </xsl:when>
	<!-- *** URI for smb or NFS must be escaped because it appears in the URI query *** -->
        <xsl:when test="$protocol='nfs' or $protocol='smb'">
	  <xsl:value-of disable-output-escaping='yes'
	                select="concat($protocol,'/',$temp_url)"/>
        </xsl:when>
        <xsl:when test="$protocol='unc'">
          <xsl:value-of disable-output-escaping='yes' select="concat('file://', $display_url2)"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of disable-output-escaping='yes' select="U"/>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:text disable-output-escaping='yes'>"&gt;</xsl:text>
    </xsl:if>
    <span class="l">
    <xsl:choose>
      <xsl:when test="T">
        <xsl:call-template name="reformat_keyword">
          <xsl:with-param name="orig_string" select="T"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise><xsl:value-of select="$stripped_url"/></xsl:otherwise>
    </xsl:choose>
    </span>
    <xsl:if test="$link">
        <xsl:text disable-output-escaping='yes'>&lt;/a&gt;</xsl:text>
    </xsl:if>
  </xsl:if>


  <!-- *** Snippet Box *** -->
  <table cellpadding="0" cellspacing="0" border="0">
    <tr>
      <td class="s">
                  <xsl:if test="$show_res_snippet != '0'">
          <xsl:call-template name="reformat_keyword">
            <xsl:with-param name="orig_string" select="S"/>
          </xsl:call-template>
        </xsl:if>

                  <!-- *** Meta tags *** -->
                  <xsl:if test="$show_meta_tags != '0'">
                    <xsl:apply-templates select="MT"/>
                  </xsl:if>

                  <!-- *** URL *** -->
            <br/>
            <font color="{$res_url_color}" size="{$res_url_size}">
              <xsl:choose>
          <xsl:when test="not($url_indexed)">
            <xsl:if test="($show_res_size!='0') or
                        ($show_res_date!='0') or
                        ($show_res_cache!='0')">
              <xsl:text>Not Indexed:</xsl:text>
              <xsl:value-of select="$stripped_url"/>
            </xsl:if>
                    </xsl:when>
          <xsl:otherwise>
            <xsl:if test="$show_res_url != '0'">
              <xsl:value-of select="$stripped_url"/>
            </xsl:if>
          </xsl:otherwise>
        </xsl:choose>
        </font>

                  <!-- *** Miscellaneous (- size - date - cache) *** -->
        <xsl:if test="$url_indexed">
          <xsl:apply-templates select="HAS/C">
                        <xsl:with-param name="stripped_url" select="$stripped_url"/>
                        <xsl:with-param name="escaped_url" select="$escaped_url"/>
                        <xsl:with-param name="query" select="$query"/>
                        <xsl:with-param name="mime" select="@MIME"/>
                        <xsl:with-param name="date" select="FS[@NAME='date']/@VALUE"/>
          </xsl:apply-templates>
        </xsl:if>


                  <!-- *** Link to more links from this site *** -->
        <xsl:if test="HN">
          <br/>
          [
          <a ctype="sitesearch" class="f" href="search?as_sitesearch={$crowded_url}&amp;{
            $search_url}">More results from <xsl:value-of select="$crowded_display_url"/></a>
          ]



  <!-- *** Link to aggregated results from database source *** -->
       <xsl:if test="starts-with($crowded_url, $db_url_protocol)">
        [
        <a ctype="db" class="f" href="dbaggr?sitesearch={$crowded_url}&amp;{
          $search_url}">View all data</a>
            ]
          </xsl:if>
        </xsl:if>


  <!-- *** Result Footer *** -->
      </td>
    </tr>
  </table>
  </p>

  <!-- *** End indenting as required (only supports 2 levels) *** -->
  <xsl:if test="@L='2'">
    <xsl:text disable-output-escaping="yes">&lt;/blockquote&gt;</xsl:text>
  </xsl:if>

</xsl:template>

<!-- **********************************************************************
  Meta tag values within a result (do not customize)
     ********************************************************************** -->
<xsl:template match="MT">
  <br/>
  <span class="f"><xsl:value-of select="@N"/>: </span><xsl:value-of select="@V"/>
</xsl:template>

<!-- **********************************************************************
  A single keymatch result (do not customize)
     ********************************************************************** -->
<xsl:template match="GM">
  <p>
    <table cellpadding="4" cellspacing="0" border="0" height="40" width="100%">
      <tr>
        <td nowrap="0" bgcolor="{$keymatch_bg_color}" height="40">
          <a ctype="keymatch" href="{GL}">
            <xsl:value-of select="GD"/>
          </a>
          <br/>
          <font size="-1" color="{$res_url_color}">
            <span class="a">
               <xsl:value-of select="GL"/>
            </span>
          </font>
        </td>
        <td bgcolor="{$keymatch_bg_color}" height="40"
          align="right" valign="top">
          <b>
          <font size="-1" color="{$keymatch_text_color}">
            <xsl:value-of select="$keymatch_text"/>
          </font>
          </b>
        </td>
      </tr>
    </table>
  </p>
</xsl:template>


<!-- **********************************************************************
  Variables for reformatting keyword-match display (do not customize)
     ********************************************************************** -->
<xsl:variable name="keyword_orig_start" select="'&lt;b&gt;'"/>
<xsl:variable name="keyword_orig_end" select="'&lt;/b&gt;'"/>

<xsl:variable name="keyword_reformat_start">
  <xsl:if test="$res_keyword_format">
    <xsl:text>&lt;</xsl:text>
    <xsl:value-of select="$res_keyword_format"/>
    <xsl:text>&gt;</xsl:text>
  </xsl:if>
  <xsl:if test="($res_keyword_size) or ($res_keyword_color)">
  <xsl:text>&lt;font</xsl:text>
  <xsl:if test="$res_keyword_size">
    <xsl:text> size="</xsl:text>
    <xsl:value-of select="$res_keyword_size"/>
    <xsl:text>"</xsl:text>
  </xsl:if>
  <xsl:if test="$res_keyword_color">
    <xsl:text> color="</xsl:text>
    <xsl:value-of select="$res_keyword_color"/>
    <xsl:text>"</xsl:text>
  </xsl:if>
  <xsl:text>&gt;</xsl:text>
  </xsl:if>
</xsl:variable>

<xsl:variable name="keyword_reformat_end">
  <xsl:if test="($res_keyword_size) or ($res_keyword_color)">
    <xsl:text>&lt;/font&gt;</xsl:text>
  </xsl:if>
  <xsl:if test="$res_keyword_format">
    <xsl:text>&lt;/</xsl:text>
    <xsl:value-of select="$res_keyword_format"/>
    <xsl:text>&gt;</xsl:text>
  </xsl:if>
</xsl:variable>

<!-- **********************************************************************
  Reformat the keyword match display in a title/snippet string
     (do not customize)
     ********************************************************************** -->
<xsl:template name="reformat_keyword">
  <xsl:param name="orig_string"/>

  <xsl:variable name="reformatted_1">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="$keyword_orig_start"/>
      <xsl:with-param name="replace" select="$keyword_reformat_start"/>
      <xsl:with-param name="string" select="$orig_string"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="reformatted_2">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="$keyword_orig_end"/>
      <xsl:with-param name="replace" select="$keyword_reformat_end"/>
      <xsl:with-param name="string" select="$reformatted_1"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:value-of disable-output-escaping='yes' select="$reformatted_2"/>

</xsl:template>


<!-- **********************************************************************
  Helper templates for generating a result item (do not customize)
     ********************************************************************** -->

<!-- *** Miscellaneous: - size - date - cache *** -->
<xsl:template match="C">
    <xsl:param name="stripped_url"/>
    <xsl:param name="escaped_url"/>
    <xsl:param name="query"/>
    <xsl:param name="mime"/>
    <xsl:param name="date"/>

    <xsl:variable name="docid"><xsl:value-of select="@CID"/></xsl:variable>

    <xsl:if test="$show_res_size != '0'">
    <xsl:if test="not(@SZ='')">
        <font color="{$res_url_color}" size="{$res_url_size}">
          <xsl:text> - </xsl:text>
          <xsl:value-of select="@SZ"/>
        </font>
    </xsl:if>
    </xsl:if>

    <xsl:if test="$show_res_date != '0'">
    <xsl:if test="($date != '') and
                  (translate($date, '-', '') &gt; 19500000) and
                  (translate($date, '-', '') &lt; 21000000)">
        <font color="{$res_url_color}" size="{$res_url_size}">
        <xsl:text> - </xsl:text>
        <xsl:value-of select="$date"/>
        </font>
    </xsl:if>
    </xsl:if>

    <xsl:if test="$show_res_cache != '0'">
        <font color="{$res_url_color}" size="{$res_url_size}">
        <xsl:text> - </xsl:text>
        </font>
        <xsl:variable name="cache_encoding">
          <xsl:choose>
            <xsl:when test="'' != @ENC"><xsl:value-of select="@ENC"/></xsl:when>
            <xsl:otherwise>UTF-8</xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <a ctype="cache" class="f" href="search?q=cache:{$docid}:{$escaped_url}+{
                           $stripped_search_query}&amp;{$base_url}&amp;oe={
                           $cache_encoding}">
          <xsl:choose>
            <xsl:when test="not($mime)">Cached</xsl:when>
            <xsl:when test="$mime='text/html'">Cached</xsl:when>
            <xsl:when test="$mime='text/plain'">Cached</xsl:when>
            <xsl:otherwise>Text Version</xsl:otherwise>
          </xsl:choose>
        </a>
    </xsl:if>

</xsl:template>


<!-- **********************************************************************
 Google navigation bar in result page (do not customize)
     ********************************************************************** -->
<xsl:template name="google_navigation">
    <xsl:param name="prev"/>
    <xsl:param name="next"/>
    <xsl:param name="view_begin"/>
    <xsl:param name="view_end"/>
    <xsl:param name="guess"/>
    <xsl:param name="navigation_style"/>

  <xsl:variable name="fontclass">
    <xsl:choose>
      <xsl:when test="$navigation_style = 'top'">s</xsl:when>
      <xsl:otherwise>b</xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <!-- *** Test to see if we should even show navigation *** -->
  <xsl:if test="($prev) or ($next)">

  <!-- *** Start Google result navigation bar *** -->

    <xsl:if test="$navigation_style != 'top'">
      <xsl:text disable-output-escaping="yes">&lt;center&gt;
        &lt;div class=&quot;n&quot;&gt;</xsl:text>
    </xsl:if>

    <table border="0" cellpadding="0" width="1%" cellspacing="3">
      <tr align="center" valign="top">
        <xsl:if test="$navigation_style != 'top'">
        <td valign="bottom" nowrap="1">
          <font size="-1">
            <xsl:call-template name="nbsp"/>
          </font>
        </td>
        </xsl:if>


  <!-- *** Show previous navigation, if available *** -->
        <xsl:choose>
          <xsl:when test="$prev">
            <td nowrap="1">

              <span class="{$fontclass}">
              <a ctype="nav.prev" href="search?{$search_url}&amp;start={$view_begin -
                      $num_results - 1}">
                <xsl:if test="$navigation_style = 'google'">

                  <img src="/nav_previous.gif" width="68" height="26"
                    alt="Previous" border="0"/>
                  <br/>
                 </xsl:if>
                <xsl:if test="$navigation_style = 'top'">
                  <xsl:text>&lt;</xsl:text>
                </xsl:if>
                <xsl:text>Previous</xsl:text>
              </a>
              </span>
              <xsl:if test="$navigation_style != 'google'">
                  <xsl:call-template name="nbsp"/>
              </xsl:if>
            </td>
          </xsl:when>
          <xsl:otherwise>
            <td nowrap="1">
              <xsl:if test="$navigation_style = 'google'">
                <img src="/nav_first.png" width="18" height="26"
                  alt="First" border="0"/>
                <br/>
              </xsl:if>
            </td>
          </xsl:otherwise>
        </xsl:choose>

        <xsl:if test="($navigation_style = 'google') or
                      ($navigation_style = 'link')">
  <!-- *** Google result set navigation *** -->
        <xsl:variable name="mod_end">
          <xsl:choose>
            <xsl:when test="$next"><xsl:value-of select="$guess"/></xsl:when>
            <xsl:otherwise><xsl:value-of select="$view_end"/></xsl:otherwise>
          </xsl:choose>
        </xsl:variable>

        <xsl:call-template name="result_nav">
          <xsl:with-param name="start" select="0"/>
          <xsl:with-param name="end" select="$mod_end"/>
          <xsl:with-param name="current_view" select="($view_begin)-1"/>
          <xsl:with-param name="navigation_style" select="$navigation_style"/>
        </xsl:call-template>
        </xsl:if>

  <!-- *** Show next navigation, if available *** -->
        <xsl:choose>
          <xsl:when test="$next">
            <td nowrap="1">
              <xsl:if test="$navigation_style != 'google'">
                  <xsl:call-template name="nbsp"/>
              </xsl:if>
              <span class="{$fontclass}">
              <a ctype="nav.next" href="search?{$search_url}&amp;start={$view_begin +
                $num_results - 1}">
                <xsl:if test="$navigation_style = 'google'">

                  <img src="/nav_next.png" width="100" height="26"

                    alt="Next" border="0"/>
                  <br/>
                </xsl:if>
                <xsl:text>Next</xsl:text>
                <xsl:if test="$navigation_style = 'top'">
                  <xsl:text>&gt;</xsl:text>
                </xsl:if>
              </a>
              </span>
            </td>
          </xsl:when>
          <xsl:otherwise>
            <td nowrap="1">
              <xsl:if test="$navigation_style != 'google'">
                <xsl:call-template name="nbsp"/>
              </xsl:if>
              <xsl:if test="$navigation_style = 'google'">
                <img src="/nav_last.png" width="46" height="26"

                  alt="Last" border="0"/>
                <br/>
              </xsl:if>
            </td>
          </xsl:otherwise>
        </xsl:choose>

  <!-- *** End Google result bar *** -->
      </tr>
    </table>

    <xsl:if test="$navigation_style != 'top'">
      <xsl:text disable-output-escaping="yes">&lt;/div&gt;
        &lt;/center&gt;</xsl:text>
    </xsl:if>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Helper templates for generating Google result navigation (do not customize)
   only shows 10 sets up or down from current view
     ********************************************************************** -->
<xsl:template name="result_nav">
  <xsl:param name="start" select="'0'"/>
  <xsl:param name="end"/>
  <xsl:param name="current_view"/>
  <xsl:param name="navigation_style"/>

  <!-- *** Choose how to show this result set *** -->
  <xsl:choose>
    <xsl:when test="($start)&lt;(($current_view)-(10*($num_results)))">
    </xsl:when>
    <xsl:when test="(($current_view)&gt;=($start)) and
                    (($current_view)&lt;(($start)+($num_results)))">
      <td>
        <xsl:if test="$navigation_style = 'google'">
          <img src="/nav_current.gif" width="16" height="26" alt="Current"/>
          <br/>
        </xsl:if>
        <xsl:if test="$navigation_style = 'link'">
          <xsl:call-template name="nbsp"/>
        </xsl:if>
        <span class="i"><xsl:value-of
          select="(($start)div($num_results))+1"/></span>
        <xsl:if test="$navigation_style = 'link'">
          <xsl:call-template name="nbsp"/>
        </xsl:if>
      </td>
    </xsl:when>
    <xsl:otherwise>
      <td>
        <xsl:if test="$navigation_style = 'link'">
            <xsl:call-template name="nbsp"/>
        </xsl:if>
        <a ctype="nav.page" href="search?{$search_url}&amp;start={$start}">
        <xsl:if test="$navigation_style = 'google'">
          <img src="/nav_page.gif" width="16" height="26" alt="Navigation"
               border="0"/>
          <br/>
        </xsl:if>
        <xsl:value-of select="(($start)div($num_results))+1"/>
        </a>
        <xsl:if test="$navigation_style = 'link'">
           <xsl:call-template name="nbsp"/>
        </xsl:if>
      </td>
    </xsl:otherwise>
  </xsl:choose>

  <!-- *** Recursively iterate through result sets to display *** -->
  <xsl:if test="((($start)+($num_results))&lt;($end)) and
                ((($start)+($num_results))&lt;(($current_view)+
                (10*($num_results))))">
    <xsl:call-template name="result_nav">
      <xsl:with-param name="start" select="$start+$num_results"/>
      <xsl:with-param name="end" select="$end"/>
      <xsl:with-param name="current_view" select="$current_view"/>
      <xsl:with-param name="navigation_style" select="$navigation_style"/>
    </xsl:call-template>
  </xsl:if>

</xsl:template>


<!-- **********************************************************************
 Top separation bar (do not customize)
     ********************************************************************** -->
<xsl:template name="top_sep_bar">
  <xsl:param name="text"/>
  <xsl:param name="show_info"/>
  <xsl:param name="time"/>


    <table width="100%" border="0" cellpadding="0" cellspacing="0">
      <tr>
        <td bgcolor="{$sep_bar_border_color}"><img width="1" height="1" alt=""/></td>
      </tr>
    </table>
    <table width="100%" cellpadding="0" cellspacing="0" border="0" bgcolor="{$sep_bar_bg_color}">
      <tr>
        <td nowrap="1" width="1%" bgcolor="{$sep_bar_bg_color}">
           <font size="+1">
                   <xsl:call-template name="nbsp"/><b><xsl:value-of select="$text"/></b>
           </font>
         </td>
        <td nowrap="1" align="right" bgcolor="{$sep_bar_bg_color}">
          <xsl:if test="$show_info != '0'">
            <font size="-1">
            <xsl:if test="count(/GSP/RES/R)>0 ">
              <xsl:choose>
                <xsl:when test="$access = 's' or $access = 'a'">
                  Results <b><xsl:value-of select="RES/@SN"/></b> - <b><xsl:value-of select="RES/@EN"/></b> for <b><xsl:value-of select="$space_normalized_query"/></b>.
                </xsl:when>
                <xsl:otherwise>
                  Results <b><xsl:value-of select="RES/@SN"/></b> - <b><xsl:value-of select="RES/@EN"/></b> of about <b><xsl:value-of select="RES/M"/></b> for <b><xsl:value-of select="$space_normalized_query"/></b>.
                </xsl:otherwise>
              </xsl:choose>
            </xsl:if>
              Search took <b><xsl:value-of select="round($time * 100.0) div 100.0"/></b> seconds.
            </font>
          </xsl:if>
        </td>
      </tr>
    </table>
    <hr class="z"/>
    <xsl:if test="$choose_sep_bar = 'line'">
      <hr size="1" color="gray"/>
    </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Analytics script (do not customize)
     ********************************************************************** -->
<xsl:template name="analytics">
  <xsl:if test="string-length($analytics_account) != '0'">
    <script src="{$analytics_script_url}" type="text/javascript"></script>
    <script type="text/javascript">
      <xsl:comment>
      _uacct = "<xsl:value-of select='$analytics_account'/>";
      urchinTracker();
      //</xsl:comment>
    </script>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Utility function for constructing copyright text (do not customize)
     ********************************************************************** -->
<xsl:template name="copyright">
  <!-- <center>
    <br/><br/>
    <p>
    <font face="arial,sans-serif" size="-1" color="#2f2f2f">
      Powered by Google Search Appliance</font>
    </p>
  </center> -->
</xsl:template>


<!-- **********************************************************************
 Utility functions for generating html entities
     ********************************************************************** -->
<xsl:template name="nbsp">
  <xsl:text disable-output-escaping="yes">&amp;nbsp;</xsl:text>
</xsl:template>
<xsl:template name="nbsp3">
  <xsl:call-template name="nbsp"/>
  <xsl:call-template name="nbsp"/>
  <xsl:call-template name="nbsp"/>
</xsl:template>
<xsl:template name="nbsp4">
  <xsl:call-template name="nbsp3"/>
  <xsl:call-template name="nbsp"/>
</xsl:template>
<xsl:template name="quot">
  <xsl:text disable-output-escaping="yes">&amp;quot;</xsl:text>
</xsl:template>
<xsl:template name="copy">
  <xsl:text disable-output-escaping="yes">&amp;copy;</xsl:text>
</xsl:template>

<!-- **********************************************************************
 Utility functions for generating head elements so that the XSLT processor
 won't add a meta tag to the output, since it may specify the wrong
 encoding (utf8) in the meta tag.
     ********************************************************************** -->
<xsl:template name="plainHeadStart">
  <xsl:text disable-output-escaping="yes">&lt;head&gt;</xsl:text>
  <meta name="robots" content="NOINDEX,NOFOLLOW"/>
  <xsl:text>
  </xsl:text>
</xsl:template>
<xsl:template name="plainHeadEnd">
  <xsl:text disable-output-escaping="yes">&lt;/head&gt;</xsl:text>
  <xsl:text>
  </xsl:text>
</xsl:template>


<!-- **********************************************************************
 Utility functions for generating head elements with a meta tag to the output
 specifying the character set as requested
     ********************************************************************** -->
<xsl:template name="langHeadStart">
  <xsl:text disable-output-escaping="yes">&lt;head&gt;</xsl:text>
  <meta name="robots" content="NOINDEX,NOFOLLOW"/>
  <xsl:choose>
    <xsl:when test="PARAM[(@name='oe') and (@value='utf8')]">
      <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='oe') and (@value!='')]">
      <meta http-equiv="content-type" content="text/html; charset={PARAM[@name='oe']/@value}"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-CN')]">
      <meta http-equiv="content-type" content="text/html; charset=GB2312"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-TW')]">
      <meta http-equiv="content-type" content="text/html; charset=Big5"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_cs')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_da')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_nl')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_en')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_et')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_fi')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_fr')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_de')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_el')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-7"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_iw')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-8-I"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_hu')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_is')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_it')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_ja')]">
      <meta http-equiv="content-type" content="text/html; charset=Shift_JIS"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_ko')]">
      <meta http-equiv="content-type" content="text/html; charset=EUC-KR"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_lv')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_lt')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_no')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_pl')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_pt')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_ro')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_ru')]">
      <meta http-equiv="content-type" content="text/html; charset=windows-1251"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_es')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_sv')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:otherwise>
      <meta http-equiv="content-type" content="text/html; charset="/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:text>
  </xsl:text>
</xsl:template>

<xsl:template name="langHeadEnd">
  <xsl:text disable-output-escaping="yes">&lt;/head&gt;</xsl:text>
  <xsl:text>
  </xsl:text>
</xsl:template>


<!-- **********************************************************************
 Utility functions (do not customize)
     ********************************************************************** -->

<!-- *** Find the substring after the last occurence of a separator *** -->
<xsl:template name="last_substring_after">

  <xsl:param name="string"/>
  <xsl:param name="separator"/>
  <xsl:param name="fallback"/>

  <xsl:variable name="newString"
    select="substring-after($string, $separator)"/>

  <xsl:choose>
    <xsl:when test="$newString!=''">
      <xsl:call-template name="last_substring_after">
        <xsl:with-param name="string" select="$newString"/>
        <xsl:with-param name="separator" select="$separator"/>
        <xsl:with-param name="fallback" select="$newString"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$fallback"/>
    </xsl:otherwise>
  </xsl:choose>

</xsl:template>

<!-- *** Find and replace *** -->
<xsl:template name="replace_string">
  <xsl:param name="find"/>
  <xsl:param name="replace"/>
  <xsl:param name="string"/>
  <xsl:choose>
    <xsl:when test="contains($string, $find)">
      <xsl:value-of select="substring-before($string, $find)"/>
      <xsl:value-of select="$replace"/>
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select="$find"/>
        <xsl:with-param name="replace" select="$replace"/>
        <xsl:with-param name="string"
          select="substring-after($string, $find)"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$string"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- *** Decode hex encoding *** -->
<xsl:template name="decode_hex">
  <xsl:param name="encoded" />

  <xsl:variable name="hex" select="'0123456789ABCDEF'" />
  <xsl:variable name="ascii"> !"#$%&amp;'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~</xsl:variable>

  <xsl:choose>
    <xsl:when test="contains($encoded,'%')">
      <xsl:value-of select="substring-before($encoded,'%')" />
      <xsl:variable name="hexpair" select="translate(substring(substring-after($encoded,'%'),1,2),'abcdef','ABCDEF')" />
      <xsl:variable name="decimal" select="(string-length(substring-before($hex,substring($hexpair,1,1))))*16 + string-length(substring-before($hex,substring($hexpair,2,1)))" />
      <xsl:choose>
        <xsl:when test="$decimal &lt; 127 and $decimal &gt; 31">
          <xsl:value-of select="substring($ascii,$decimal - 31,1)" />
        </xsl:when>
        <xsl:when test="$decimal &gt; 159">
          <xsl:text disable-output-escaping="yes">%</xsl:text>
          <xsl:value-of select="$hexpair" />
        </xsl:when>
        <xsl:otherwise>?</xsl:otherwise>
      </xsl:choose>
      <xsl:call-template name="decode_hex">
        <xsl:with-param name="encoded" select="substring(substring-after($encoded,'%'),3)" />
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$encoded" />
    </xsl:otherwise>
  </xsl:choose>

</xsl:template>

<!-- *** Convert UNC *** -->
<xsl:template name="convert_unc">
  <xsl:param name="string"/>
  <xsl:variable name="slash">/</xsl:variable>
  <xsl:variable name="backslash">\</xsl:variable>
  <xsl:variable name="escaped_ampersand">&amp;amp;</xsl:variable>
  <xsl:variable name="unescaped_ampersand">&amp;</xsl:variable>

  <xsl:variable name="converted_1">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find"    select="$slash"/>
      <xsl:with-param name="replace" select="$backslash"/>
      <xsl:with-param name="string"  select="$string"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="converted_2">
    <xsl:call-template name="decode_hex">
      <xsl:with-param name="encoded" select="$converted_1"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="converted_3">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find"    select="$escaped_ampersand"/>
      <xsl:with-param name="replace" select="$unescaped_ampersand"/>
      <xsl:with-param name="string"  select="$converted_2"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:value-of disable-output-escaping='yes' select="concat($backslash,$backslash,$converted_3)"/>

</xsl:template>

<!-- **********************************************************************
 Display error messages
     ********************************************************************** -->
<xsl:template name="error_page">
  <xsl:param name="errorMessage"/>
  <xsl:param name="errorDescription"/>

  <html>
    <xsl:call-template name="plainHeadStart"/>
      <title><xsl:value-of select="$error_page_title"/></title>
            <xsl:call-template name="style"/>
    <xsl:call-template name="plainHeadEnd"/>
    <body dir="ltr">
      <xsl:call-template name="personalization"/>
      <xsl:call-template name="analytics"/>

            <xsl:call-template name="my_page_header"/>

            <xsl:if test="$show_logo != '0'">
                <table border="0" cellpadding="0" cellspacing="0">
                  <tr>
                          <td rowspan="3" valign="top">
                          <xsl:call-template name="logo"/>
                          <xsl:call-template name="nbsp3"/>
                        </td>
                  </tr>
                </table>
            </xsl:if>

      <xsl:call-template name="top_sep_bar">
        <xsl:with-param name="text" select="$sep_bar_error_text"/>
                <xsl:with-param name="show_info" select="0"/>
        <xsl:with-param name="time" select="0"/>
      </xsl:call-template>

      <p>
      <table width="99%" border="0" cellpadding="2" cellspacing="0">
        <tr>
          <td><font color="#990000" size="+1">Message:</font></td>
          <td><font color="#990000" size="+1"><xsl:value-of select="$errorMessage"/></font></td>
        </tr>
        <tr>
          <td><font color="#990000">Description:</font></td>
          <td><font color="#990000"><xsl:value-of select="$errorDescription"/></font></td>
        </tr>
        <tr>
          <td><font color="#990000">Details:</font></td>
          <td><font color="#990000"><xsl:copy-of select="/"/></font></td>
        </tr>
      </table>
      </p>

          <hr/>
          <xsl:call-template name="copyright"/>
          <xsl:call-template name="my_page_footer"/>

    </body>
  </html>
</xsl:template>


<!-- **********************************************************************
 Google Desktop for Enterprise integration templates
     ********************************************************************** -->
<xsl:template name="desktop_tab">

  <!-- *** Show the Google tabs *** -->

  <font size="-1">
    <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.web" href="http://www.google.com/search?q={$qval}">Web</a>
  </font>

  <xsl:call-template name="nbsp4"/>

  <font size="-1">
    <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.images"  href="http://images.google.com/images?q={$qval}">Images</a>
  </font>

  <xsl:call-template name="nbsp4"/>

  <font size="-1">
    <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.groups" href="http://groups.google.com/groups?q={$qval}">Groups</a>
  </font>

  <xsl:call-template name="nbsp4"/>

  <font size="-1">
    <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.news"  href="http://news.google.com/news?q={$qval}">News</a>
  </font>

  <xsl:call-template name="nbsp4"/>

  <font size="-1">
    <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.local"  href="http://local.google.com/local?q={$qval}">Local</a>
  </font>

  <xsl:call-template name="nbsp4"/>

  <!-- *** Show the desktop and web tabs *** -->

  <xsl:if test="CUSTOM/HOME">
    <xsl:comment>trh2</xsl:comment>
  </xsl:if>
  <xsl:if test="Q">
    <xsl:comment>trl2</xsl:comment>
  </xsl:if>

  <!-- *** Show the appliance tab *** -->
  <font size="-1"><b><xsl:value-of select="$egds_appliance_tab_label"/></b></font>

</xsl:template>

<xsl:template name="desktop_results">
  <xsl:comment>tro2</xsl:comment>
</xsl:template>

<!-- **********************************************************************
  OneBox results (if any)
     ********************************************************************** -->
<xsl:template name="onebox">
     <xsl:for-each select="/GSP/ENTOBRESULTS">
       <xsl:apply-templates/>
     </xsl:for-each>
</xsl:template>

<!-- **********************************************************************
 Swallow unmatched elements
     ********************************************************************** -->
<xsl:template match="@*|node()"/>
</xsl:stylesheet>


<!-- *** END OF STYLESHEET *** -->

              ]]></stylesheet>
              <synonyms><![CDATA[

              ]]></synonyms>
              <wildcard_wc_filter><![CDATA[
200

              ]]></wildcard_wc_filter>
          </frontend>
          <frontend Name="env_variables">
              <default_language><![CDATA[
'en'
              ]]></default_language>
              <profile_sheet><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet>
              <profile_sheet.en><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet.en>
              <access_control_allow_origin><![CDATA[


              ]]></access_control_allow_origin>
              <badurls_noreturn><![CDATA[

              ]]></badurls_noreturn>
              <content_type><![CDATA[
text/html
              ]]></content_type>
              <domain_filter><![CDATA[

              ]]></domain_filter>
              <filetype_filter><![CDATA[

              ]]></filetype_filter>
              <good_ips><![CDATA[
0.0.0.0/0

              ]]></good_ips>
              <googlematch><![CDATA[

              ]]></googlematch>
              <lang_filter><![CDATA[

              ]]></lang_filter>
              <metatag_filter><![CDATA[

              ]]></metatag_filter>
              <query_expansion_filter><![CDATA[
QE_FULL

              ]]></query_expansion_filter>
              <query_expansion_meta_filter><![CDATA[
QE_META_NONE

              ]]></query_expansion_meta_filter>
              <scoring_policy_filter><![CDATA[

              ]]></scoring_policy_filter>
              <star_wildcard_default_filter><![CDATA[
1

              ]]></star_wildcard_default_filter>
              <stylesheet><![CDATA[
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
	<xsl:variable name="env">scu</xsl:variable>
	<xsl:variable name="gsa_env">scu</xsl:variable>
	<!-- DOMAIN LINKS -->
	<xsl:variable name="site_search_path">//site-search.<xsl:value-of select="$gsa_env"/>.edu.au</xsl:variable>
	<xsl:variable name="course_search_path">http://search.<xsl:value-of select="$env"/>.edu.au/courses</xsl:variable>
	<xsl:variable name="staff_intranet_path">//staff.<xsl:value-of select="$env"/>.edu.au</xsl:variable>
	<xsl:variable name="student_intranet_path">//study.<xsl:value-of select="$env"/>.edu.au</xsl:variable>
	<!-- SCU template variables-->
	<xsl:variable name="global_scu_resource_path">//<xsl:value-of select="$env"/>.edu.au/resources</xsl:variable>
	<xsl:variable name="global_scu_template_path">/SCU-template</xsl:variable>
	<xsl:variable name="scu_template_css_path"><xsl:value-of select="$global_scu_template_path"/>/css</xsl:variable>
	<xsl:variable name="scu_template_img_path"><xsl:value-of select="$global_scu_template_path"/>/img</xsl:variable>
	<xsl:variable name="scu_template_js_path"><xsl:value-of select="$global_scu_template_path"/>/js</xsl:variable>
	<xsl:variable name="scu_resource_js_path"><xsl:value-of select="$global_scu_resource_path"/>/js</xsl:variable>
	<xsl:variable name="scu_resource_css_path"><xsl:value-of select="$global_scu_resource_path"/>/css</xsl:variable>
	<!-- CUSTOM GSA variables -->
	<xsl:variable name="custom_res_root_path">//<xsl:value-of select="$env"/>.edu.au/resources/gsa</xsl:variable>
	<xsl:variable name="custom_css_path"><xsl:value-of select="$custom_res_root_path"/>/css</xsl:variable>
	<xsl:variable name="custom_js_path"><xsl:value-of select="$custom_res_root_path"/>/js</xsl:variable>
	<xsl:variable name="custom_gfx_path">//<xsl:value-of select="$env"/>.edu.au/resources/gfx/icons</xsl:variable>

	<!-- is the request skinless? -->
	<xsl:variable name="skin_class">
	<xsl:choose>
	  <xsl:when test="GSP/PARAM[@name='skin']">
	  	<xsl:value-of select="GSP/PARAM[@name='skin']/@value"></xsl:value-of>
	  </xsl:when>
	  <xsl:otherwise><!-- default to wrapper skin -->skinned</xsl:otherwise>
	</xsl:choose>
	</xsl:variable>
	<!-- LOCATION CODES -->
<xsl:variable name="global_location_cds">
  <locations>
   <location cd="U"><desc>Online</desc><class>U</class></location>
   <location cd="OL"><desc>SCU Online</desc><class>U</class></location>
   <location cd="L"><desc>Lismore</desc><class>onshore</class></location>
   <location cd="GCB"><desc>Gold Coast</desc><class>onshore</class></location>
   <location cd="CH"><desc>Coffs Harbour</desc><class>onshore</class></location>
   <location cd="MSC"><desc>National Marine Science Centre</desc><class>onshore</class></location>
   <location cd="SYD"><desc>Sydney</desc><class>onshore</class></location>
   <location cd="S"><desc>The Hotel School Sydney</desc><class>onshore</class></location>
   <location cd="MLB"><desc>Melbourne</desc><class>onshore</class></location>
   <location cd="MEL"><desc>The Hotel School Melbourne</desc><class>onshore</class></location>
   <location cd="PER"><desc>Perth</desc><class>onshore</class></location>
   <location cd="SP1"><desc>Singapore - MDIS</desc><class>offshore</class></location>
   <location cd="GX"><desc>China - Guangxi UST</desc><class>offshore</class></location>
   <location cd="TJ"><desc>China - TUST</desc><class>offshore</class></location>
   <location cd="HK"><desc>Hong Kong</desc><class>offshore</class></location>
   <location cd="TK1"><desc>Uzbekistan - MDIS Tashkent</desc><class>offshore</class></location>
   <location cd="PG1"><desc>Papua New Guinea - IBS Port Moresby</desc><class>offshore</class></location>
   <location cd="PG2"><desc>Papua New Guinea - IBS Enga</desc><class>offshore</class></location>
   <location cd="NZ"><desc>New Zealand - MIT</desc><class>offshore</class></location>
  </locations>
</xsl:variable>
</xsl:stylesheet>

              ]]></stylesheet>
              <stylesheet.en><![CDATA[
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
	<xsl:variable name="env">scu</xsl:variable>
	<xsl:variable name="gsa_env">scu</xsl:variable>
	<!-- DOMAIN LINKS -->
	<xsl:variable name="site_search_path">//site-search.<xsl:value-of select="$gsa_env"/>.edu.au</xsl:variable>
	<xsl:variable name="course_search_path">http://search.<xsl:value-of select="$env"/>.edu.au/courses</xsl:variable>
	<xsl:variable name="staff_intranet_path">//staff.<xsl:value-of select="$env"/>.edu.au</xsl:variable>
	<xsl:variable name="student_intranet_path">//study.<xsl:value-of select="$env"/>.edu.au</xsl:variable>
	<!-- SCU template variables-->
	<xsl:variable name="global_scu_resource_path">//<xsl:value-of select="$env"/>.edu.au/resources</xsl:variable>
	<xsl:variable name="global_scu_template_path">/SCU-template</xsl:variable>
	<xsl:variable name="scu_template_css_path"><xsl:value-of select="$global_scu_template_path"/>/css</xsl:variable>
	<xsl:variable name="scu_template_img_path"><xsl:value-of select="$global_scu_template_path"/>/img</xsl:variable>
	<xsl:variable name="scu_template_js_path"><xsl:value-of select="$global_scu_template_path"/>/js</xsl:variable>
	<xsl:variable name="scu_resource_js_path"><xsl:value-of select="$global_scu_resource_path"/>/js</xsl:variable>
	<xsl:variable name="scu_resource_css_path"><xsl:value-of select="$global_scu_resource_path"/>/css</xsl:variable>
	<!-- CUSTOM GSA variables -->
	<xsl:variable name="custom_res_root_path">//<xsl:value-of select="$env"/>.edu.au/resources/gsa</xsl:variable>
	<xsl:variable name="custom_css_path"><xsl:value-of select="$custom_res_root_path"/>/css</xsl:variable>
	<xsl:variable name="custom_js_path"><xsl:value-of select="$custom_res_root_path"/>/js</xsl:variable>
	<xsl:variable name="custom_gfx_path">//<xsl:value-of select="$env"/>.edu.au/resources/gfx/icons</xsl:variable>

	<!-- is the request skinless? -->
	<xsl:variable name="skin_class">
	<xsl:choose>
	  <xsl:when test="GSP/PARAM[@name='skin']">
	  	<xsl:value-of select="GSP/PARAM[@name='skin']/@value"></xsl:value-of>
	  </xsl:when>
	  <xsl:otherwise><!-- default to wrapper skin -->skinned</xsl:otherwise>
	</xsl:choose>
	</xsl:variable>
	<!-- LOCATION CODES -->
<xsl:variable name="global_location_cds">
  <locations>
   <location cd="U"><desc>Online</desc><class>U</class></location>
   <location cd="OL"><desc>SCU Online</desc><class>U</class></location>
   <location cd="L"><desc>Lismore</desc><class>onshore</class></location>
   <location cd="GCB"><desc>Gold Coast</desc><class>onshore</class></location>
   <location cd="CH"><desc>Coffs Harbour</desc><class>onshore</class></location>
   <location cd="MSC"><desc>National Marine Science Centre</desc><class>onshore</class></location>
   <location cd="SYD"><desc>Sydney</desc><class>onshore</class></location>
   <location cd="S"><desc>The Hotel School Sydney</desc><class>onshore</class></location>
   <location cd="MLB"><desc>Melbourne</desc><class>onshore</class></location>
   <location cd="MEL"><desc>The Hotel School Melbourne</desc><class>onshore</class></location>
   <location cd="PER"><desc>Perth</desc><class>onshore</class></location>
   <location cd="SP1"><desc>Singapore - MDIS</desc><class>offshore</class></location>
   <location cd="GX"><desc>China - Guangxi UST</desc><class>offshore</class></location>
   <location cd="TJ"><desc>China - TUST</desc><class>offshore</class></location>
   <location cd="HK"><desc>Hong Kong</desc><class>offshore</class></location>
   <location cd="TK1"><desc>Uzbekistan - MDIS Tashkent</desc><class>offshore</class></location>
   <location cd="PG1"><desc>Papua New Guinea - IBS Port Moresby</desc><class>offshore</class></location>
   <location cd="PG2"><desc>Papua New Guinea - IBS Enga</desc><class>offshore</class></location>
   <location cd="NZ"><desc>New Zealand - MIT</desc><class>offshore</class></location>
  </locations>
</xsl:variable>
</xsl:stylesheet>

              ]]></stylesheet.en>
              <synonyms><![CDATA[

              ]]></synonyms>
              <wildcard_wc_filter><![CDATA[
200

              ]]></wildcard_wc_filter>
          </frontend>
          <frontend Name="myscu_frontend">
              <default_language><![CDATA[
'en'
              ]]></default_language>
              <profile_sheet><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet>
              <profile_sheet.en><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet.en>
              <access_control_allow_origin><![CDATA[


              ]]></access_control_allow_origin>
              <badurls_noreturn><![CDATA[

              ]]></badurls_noreturn>
              <content_type><![CDATA[
text/html
              ]]></content_type>
              <domain_filter><![CDATA[

              ]]></domain_filter>
              <filetype_filter><![CDATA[

              ]]></filetype_filter>
              <good_ips><![CDATA[
0.0.0.0/0

              ]]></good_ips>
              <googlematch><![CDATA[

              ]]></googlematch>
              <lang_filter><![CDATA[

              ]]></lang_filter>
              <metatag_filter><![CDATA[

              ]]></metatag_filter>
              <query_expansion_filter><![CDATA[
QE_FULL

              ]]></query_expansion_filter>
              <query_expansion_meta_filter><![CDATA[
QE_META_NONE

              ]]></query_expansion_meta_filter>
              <scoring_policy_filter><![CDATA[

              ]]></scoring_policy_filter>
              <star_wildcard_default_filter><![CDATA[
1

              ]]></star_wildcard_default_filter>
              <stylesheet><![CDATA[
<!-- *** START OF STYLESHEET *** -->

<!-- **********************************************************************
XSL to format the search output for Google Search Appliance
   ********************************************************************** -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
<xsl:import href="scu_snippets"/>

<!-- **********************************************************************
GSA embedded mode support for websites that wants to display GSA search
experience embedded inside the parent container via  proxying the
request to the GSA. DO NOT EDIT the below part.
*************************************************************************** -->
<!-- Incoming query parameter identifying root path prefix to be used for links
   that should refresh the main page. -->
<xsl:variable name="embedded_mode_root_path_param" select="'emmain'" />
<!-- Incoming query parameter identifying root path prefix to be used for
   resources that should be loaded in isolation e.g. images, CSS, JS,
   AJAX requests etc. over an HTTP connection. -->
<xsl:variable name="embedded_mode_resource_root_path_param"
  select="'emsingleres'" />
<!-- Incoming query parameter for enabling/disabling style for embedded
   mode. -->
<xsl:variable name="embedded_mode_disable_style" select="'emdstyle'" />
<!-- Incoming query parameter specifying the GSA host name to be used for
   documill full preview viewer. -->
<xsl:variable name="embedded_mode_dps_viewer_param" select="'emdvhost'" />
<!-- Root path prefix for full-refresh requests that should be used instead
   of GSA's default "/search" root path prefix. -->
<xsl:variable name="embedded_mode_root_path_prefix"
  select="/GSP/PARAM[@name=$embedded_mode_root_path_param]/@value" />
<!-- Root path prefix for resources (e.g. CSS, images, JavaScript, AJAX requests
   etc.) that should be used instead of GSA's default "/" root path
   prefix. -->
<xsl:variable name="embedded_mode_resource_root_path_prefix"
  select="/GSP/PARAM[@name=$embedded_mode_resource_root_path_param]/@value" />
<!-- The GSA host to be used for documill full preview viewer. -->
<xsl:variable name="embedded_mode_dps_viewer_host"
  select="/GSP/PARAM[@name=$embedded_mode_dps_viewer_param]/@value" />
<!-- Checks if style should be disabled in embedded mode or not. -->
<xsl:variable name="is_disable_style_in_embedded_mode"
select="
if (/GSP/PARAM[@name=$embedded_mode_disable_style]/@value = 'true') then '1'
else '0'" />
<!-- Regex for matching relative path starting with a '/' character
   and not having a following '/' character. -->
<xsl:variable name="relative_path_only_regex">^(/)[^/].*</xsl:variable>
<!-- Checks if the incoming root path prefix arguments are relative paths as
   we don't want to allow absolute paths. -->
<xsl:variable name="invalid_embedded_mode_request" >
<xsl:if test="
    not(matches(
        $embedded_mode_root_path_prefix, $relative_path_only_regex)) or
    not(matches(
        $embedded_mode_resource_root_path_prefix, $relative_path_only_regex))">
  <xsl:value-of select="'1'" />
</xsl:if>
</xsl:variable>
<!-- Flag to signal if current mode is embeddeded or not.
   '1' - yes, '0' - No -->
<xsl:variable name="is_embedded_mode"
  select="if ($embedded_mode_root_path_prefix != '' and
              $invalid_embedded_mode_request != '1') then '1' else '0'" />

<!-- **********************************************************************
Root path prefix variables that should be used for search and static
resources throughout.
********************************************************************** -->
<!-- Root path prefix for search requests that should be used instead of GSA's
   default "/search" root path prefix. -->
<xsl:variable name="gsa_search_root_path_prefix">
<xsl:choose>
  <xsl:when test="$embedded_mode_root_path_prefix != '' and
                  $invalid_embedded_mode_request != '1'">
    <xsl:value-of select="$embedded_mode_root_path_prefix" />
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="'/search'" />
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>
<!-- Root path prefix for resources files (e.g. CSS, images, JavaScript etc.)
   and other HTTP requests that should be processed in isolation
   (e.g. Iframe, AJAX etc.) -->
<xsl:variable name="gsa_resource_root_path_prefix">
<xsl:choose>
  <xsl:when test="$embedded_mode_resource_root_path_prefix != '' and
                  $invalid_embedded_mode_request != '1'">
    <xsl:value-of select="$embedded_mode_resource_root_path_prefix" />
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="''" />
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- SCU Variables -->
<!-- get the environment variables for this front end -->
<xsl:include href="env_variables"/>
<xsl:variable name="app_title">Site Search</xsl:variable>
<!-- Search input placeholder variable -->
<xsl:variable name="q_input_placeholder_text">search site</xsl:variable>

<!-- **********************************************************************
include customer-onebox.xsl, which is auto-generated from the customer's
set of OneBox Module definitions, and in turn invokes either the default
OneBox template, or the customer's:
********************************************************************** -->
<xsl:include href="customer-onebox.xsl"/>

<!--
Expert Search - Include the expert search XSL to get expert search
functionality. Please DO NOT remove this import as template and
variables inside this XSL are being used below. To find all expert search
related changes in this XSL search for "Expert Search" (quotes for clarity)
string.
-->
<xsl:include href="scu_experts"/>

<xsl:output method="html"/>

<!-- **********************************************************************
Logo setup (can be customized)
   - whether to show logo: 0 for FALSE, 1 (or non-zero) for TRUE
   - logo url
   - logo size: '' for default image size
   ********************************************************************** -->
<xsl:variable name="show_logo">0</xsl:variable>
<xsl:variable name="logo_url"><xsl:value-of
  select="$gsa_resource_root_path_prefix" />images/Title_Left.png</xsl:variable>
<xsl:variable name="logo_width">200</xsl:variable>
<xsl:variable name="logo_height">78</xsl:variable>

<!-- **********************************************************************
Global Style variables (can be customized): '' for using browser's default
   ********************************************************************** -->

<xsl:variable name="global_font">arial,sans-serif</xsl:variable>
<xsl:variable name="global_font_size">#000000</xsl:variable>
<xsl:variable name="global_bg_color">#EEF5FF</xsl:variable>
<xsl:variable name="global_text_color">#000000</xsl:variable>
<xsl:variable name="global_link_color">#0000cc</xsl:variable>
<xsl:variable name="global_vlink_color">#551a8b</xsl:variable>
<xsl:variable name="global_alink_color">#ff0000</xsl:variable>


<!-- **********************************************************************
Result page components (can be customized)
   - whether to show a component: 0 for FALSE, non-zero (e.g., 1) for TRUE
   - text and style
   ********************************************************************** -->

<!-- *** choose result page header: '', 'provided', 'mine', or 'both' *** -->
<xsl:variable name="choose_result_page_header">both</xsl:variable>

<!-- *** show custom tabs on the GSA *** -->
<xsl:variable name="show_custom_tabs">1</xsl:variable>

<!-- *** customize provided result page header *** -->
<xsl:variable name="show_swr_link">0</xsl:variable>
<xsl:variable name="swr_search_anchor_text">Search Within Results</xsl:variable>
<xsl:variable name="show_result_page_adv_link">0</xsl:variable>
<xsl:variable name="adv_search_anchor_text">Advanced Search</xsl:variable>
<xsl:variable name="show_result_page_help_link">0</xsl:variable>
<xsl:variable name="search_help_anchor_text">Search Tips</xsl:variable>

<!-- *** search boxes *** -->
<xsl:variable name="show_top_search_box">1</xsl:variable>
<xsl:variable name="show_bottom_search_box">0</xsl:variable>
<xsl:variable name="search_box_size">200</xsl:variable>

<!-- *** choose search button type: 'text' or 'image' *** -->
<xsl:variable name="choose_search_button">image</xsl:variable>
<xsl:variable name="search_button_text"></xsl:variable>
<xsl:variable name="search_button_image_url"><xsl:value-of select="$custom_gfx_path" />/magnifier-grey.png</xsl:variable>
<xsl:variable name="search_collections_xslt"></xsl:variable>

<!-- *** search info bars *** -->
<xsl:variable name="show_search_info">1</xsl:variable>

<!-- *** choose separation bar: 'ltblue', 'blue', 'line', 'nothing' *** -->
<xsl:variable name="choose_sep_bar">ltblue</xsl:variable>
<xsl:variable name="sep_bar_std_text"></xsl:variable>
<xsl:variable name="sep_bar_adv_text">Advanced Search</xsl:variable>
<xsl:variable name="sep_bar_error_text">Error</xsl:variable>

<!-- *** Custom variables created to show or hide elements ***  -->
<xsl:variable name="show_timing_label">0</xsl:variable>

<!-- *** navigation bars: '', 'google', 'link', or 'simple'.
       DO NOT use 'google' as the navigation bar type for secure search
       i.e. when access='a' or access='s', unless corpus estimate is enabled
       for all queries in Serving > Query Settings. Read documentation of
       "secure_bottom_navigation_type" variable below. *** -->
<xsl:variable name="show_top_navigation">0</xsl:variable>
<xsl:variable name="choose_bottom_navigation">link</xsl:variable>
<xsl:variable name="my_nav_align">right</xsl:variable>
<xsl:variable name="my_nav_size">-1</xsl:variable>
<xsl:variable name="my_nav_color">#6f6f6f</xsl:variable>

<!-- ***  navigation bar for secure search: DO NOT change.
   Please keep the navigation type as 'simple' for secure search i.e.
   when access='a' or access='s', unless corpus estimate is enabled
   for all queries in Serving > Query Settings, because otherwise results size
   estimation is not available for generating numbered pagination. *** -->
<xsl:variable name="secure_bottom_navigation_type">simple</xsl:variable>

<!-- *** sort by date/relevance *** -->
<xsl:variable name="show_sort_by">1</xsl:variable>

<!-- *** spelling suggestions *** -->
<xsl:variable name="show_spelling">1</xsl:variable>
<xsl:variable name="spelling_text">Did you mean:</xsl:variable>
<xsl:variable name="spelling_text_color">#cc0000</xsl:variable>

<!-- *** synonyms suggestions *** -->
<xsl:variable name="show_synonyms">1</xsl:variable>
<xsl:variable name="synonyms_text">You could also try:</xsl:variable>
<xsl:variable name="synonyms_text_color">#cc0000</xsl:variable>

<!-- *** keymatch suggestions *** -->
<xsl:variable name="show_keymatch">1</xsl:variable>
<xsl:variable name="keymatch_text">KeyMatch</xsl:variable>
<xsl:variable name="keymatch_text_color">#2255aa</xsl:variable>
<xsl:variable name="keymatch_bg_color">#e8e8ff</xsl:variable>

<!-- *** Google Desktop integration *** -->
<xsl:variable name="egds_show_search_tabs">0</xsl:variable>
<xsl:variable name="egds_appliance_tab_label">Appliance</xsl:variable>
<xsl:variable name="egds_show_desktop_results">1</xsl:variable>

<!-- *** onebox information *** -->
<xsl:variable name="show_onebox">1</xsl:variable>
<xsl:variable name="uar_provider"> GSA User-Added Results </xsl:variable>

<!-- *** analytics information *** -->
<xsl:variable name="analytics_account"></xsl:variable>

<!-- *** ASR enabling *** -->
<xsl:variable name="show_asr">1</xsl:variable>

<!-- *** UAR v2, Expert Search - Document directionality. Global variable to
       hold document directionality for the user language. *** -->
<xsl:variable name="document_direction">ltr</xsl:variable>

<!-- *** Dynamic Navigation *** -->
<xsl:variable name="show_dynamic_navigation">1</xsl:variable>
<xsl:variable name="dyn_nav_max_rows">6</xsl:variable>
<!-- Expert Search - render dynamic navigation if expanded mode with dynamic
   navigation is configured for this frontend. -->
<xsl:variable name="render_dynamic_navigation"><xsl:if
test="($show_dynamic_navigation != '0' or
       $show_expert_search_expanded_results = '1') and
       count(/GSP/RES/PARM) > 0">1</xsl:if>
</xsl:variable>

<!-- *** Show Google Apps results on right side as a sidebar element *** -->
<xsl:variable name="show_apps_segmented_ui">0</xsl:variable>

<!-- *** Google Site Search results *** -->
<xsl:variable name="show_gss_results">0</xsl:variable>
<xsl:variable name="gss_search_engine_id"></xsl:variable>

<!-- *** People Search results *** -->
<xsl:variable name="show_people_search">0</xsl:variable>

<!-- *** Translation Integration *** -->
<xsl:variable name="show_translation">1</xsl:variable>
<xsl:param name="translate_key"/>

<!-- *** Sidebar for holding elements that can load data asynchronously *** -->
<xsl:variable name="show_sidebar">
<xsl:choose>
  <!-- Expert Search - enable sidebar if expert search widget view is
       configured. -->
  <xsl:when test="($show_apps_segmented_ui = '1' or $show_gss_results = '1' or
                   $show_people_search = '1' or
                   $show_expert_search_widget_view = '1') and
                   $show_expert_search_expanded_results != '1' and
                   /GSP/Q != '' and
                   ($show_res_clusters = '0' or $res_cluster_position != 'right')">
    <xsl:value-of select="'1'"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="'0'"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** Document Previews *** -->
<xsl:variable name="show_document_previews">1</xsl:variable>

<!-- **********************************************************************
Result elements (can be customized)
   - whether to show an element ('1' for yes, '0' for no)
   - font/size/color ('' for using style of the context)
   ********************************************************************** -->

<!-- *** result title and snippet *** -->
<xsl:variable name="show_res_title">1</xsl:variable>
<xsl:variable name="res_title_length">65</xsl:variable>
<xsl:variable name="res_title_length_default">65</xsl:variable>
<xsl:variable name="res_title_color">#0000cc</xsl:variable>
<xsl:variable name="res_title_size"></xsl:variable>
<xsl:variable name="show_res_snippet">1</xsl:variable>
<xsl:variable name="res_snippet_size">100%</xsl:variable>

<!-- *** keyword match (in title or snippet) *** -->
<xsl:variable name="res_keyword_color"></xsl:variable>
<xsl:variable name="res_keyword_size"></xsl:variable>
<xsl:variable name="res_keyword_format">b</xsl:variable> <!-- 'b' for bold -->

<!-- *** link URL *** -->
<xsl:variable name="show_res_url">1</xsl:variable>
<xsl:variable name="res_url_color">#008000</xsl:variable>
<xsl:variable name="res_url_size">2%</xsl:variable>
<xsl:variable name="truncate_result_urls">1</xsl:variable>
<xsl:variable name="truncate_result_url_length">60</xsl:variable>

<!-- *** misc elements *** -->
<xsl:variable name="show_ips_in_search_url">1</xsl:variable>
<xsl:variable name="show_meta_tags">0</xsl:variable>
<xsl:variable name="show_res_size">1</xsl:variable>
<xsl:variable name="show_res_date">1</xsl:variable>
<xsl:variable name="show_res_cache">0</xsl:variable>

<!-- *** used in result cache link, similar pages link, and description *** -->
<xsl:variable name="faint_color">#7777cc</xsl:variable>

<!-- *** show secure results radio button *** -->
<xsl:variable name="show_secure_radio">1</xsl:variable>

<!-- *** show suggestions (remote aut-completions) *** -->
<xsl:variable name="show_suggest">1</xsl:variable>

<!-- **********************************************************************
Other variables (can be customized)
   ********************************************************************** -->

<!-- *** page title *** -->
<!-- execute SCU function to replace app name - syntax with blank space -->

<xsl:variable name="scu_title">SCU - <xsl:value-of select="$app_title"/></xsl:variable>
<xsl:variable name="front_page_title"><xsl:value-of select="$scu_title"/> Home</xsl:variable>
<xsl:variable name="result_page_title"><xsl:value-of select="$scu_title"/> Results</xsl:variable>
<xsl:variable name="adv_page_title"><xsl:value-of select="$scu_title"/> Advanced</xsl:variable>
<xsl:variable name="error_page_title"><xsl:value-of select="$scu_title"/> Error</xsl:variable>
<xsl:variable name="swr_page_title"><xsl:value-of select="$scu_title"/> Results</xsl:variable>

<!-- *** choose adv_search page header: '', 'provided', 'mine', or 'both' *** -->
<xsl:variable name="choose_adv_search_page_header">both</xsl:variable>

<!-- *** cached page header text *** -->
<xsl:variable name="cached_page_header_text">This is the cached copy of</xsl:variable>

<!-- *** error message text *** -->
<xsl:variable name="server_error_msg_text">A server error has occurred.</xsl:variable>
<xsl:variable name="server_error_des_text">Check server response code in details.</xsl:variable>
<xsl:variable name="xml_error_msg_text">Unknown XML result type.</xsl:variable>
<xsl:variable name="xml_error_des_text">View page source to see the offending XML.</xsl:variable>

<!-- *** advanced search page panel background color *** -->
<xsl:variable name="adv_search_panel_bgcolor">#cbdced</xsl:variable>

<!-- *** dynamic result cluster options *** -->
<xsl:variable name="show_res_clusters">1</xsl:variable>
<xsl:variable name="res_cluster_position">bottom</xsl:variable>

<!-- *** alerts2 options *** -->
<xsl:variable name="show_alerts2">0</xsl:variable>

<!-- Expert Search - i18n messages used by the expert search UI component. -->
<xsl:variable name="msg_back_to_main_results_action"><![CDATA[Back to main results\]\]\></xsl:variable>
<xsl:variable name="msg_expert_search_no_experts_found"><![CDATA[No expert(s) found.\]\]\></xsl:variable>
<xsl:variable name="msg_expert_search_switch_to_expanded_mode"><![CDATA[Switch to the expert search results expanded mode\]\]\></xsl:variable>
<xsl:variable name="msg_go_to_previous_page"><![CDATA[Go to the previous results page\]\]\></xsl:variable>
<xsl:variable name="msg_go_to_next_page"><![CDATA[Go to the next results page\]\]\></xsl:variable>
<xsl:variable name="msg_loading_expert_results"><![CDATA[Loading results...\]\]\></xsl:variable>
<xsl:variable name="msg_next_page_action"><![CDATA[Next\]\]\></xsl:variable>
<xsl:variable name="msg_previous_page_action"><![CDATA[Prev\]\]\></xsl:variable>
<xsl:variable name="msg_results_page_number_prefix"><![CDATA[Page\]\]\></xsl:variable>

<!-- *** UAR i18n messages *** -->
<xsl:variable name="msg_uar_added_by"><![CDATA[Added by\]\]\></xsl:variable>
<xsl:variable name="msg_uar_edit"><![CDATA[Edit\]\]\></xsl:variable>
<xsl:variable name="msg_uar_title"><![CDATA[Title\]\]\></xsl:variable>
<xsl:variable name="msg_uar_save"><![CDATA[Save\]\]\></xsl:variable>
<xsl:variable name="msg_uar_cancel"><![CDATA[Cancel\]\]\></xsl:variable>
<xsl:variable name="msg_uar_ok"><![CDATA[Ok\]\]\></xsl:variable>
<xsl:variable name="msg_uar_address"><![CDATA[Address\]\]\></xsl:variable>
<xsl:variable name="msg_uar_or"><![CDATA[or\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete"><![CDATA[delete\]\]\></xsl:variable>
<xsl:variable name="msg_uar_username"><![CDATA[UserName\]\]\></xsl:variable>
<xsl:variable name="msg_uar_less"><![CDATA[Less\]\]\></xsl:variable>
<xsl:variable name="msg_uar_more"><![CDATA[More\]\]\></xsl:variable>
<xsl:variable name="msg_uar_add_another_result"><![CDATA[Add another result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_add_a_result"><![CDATA[Add a result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_saving"><![CDATA[Saving\]\]\></xsl:variable>
<xsl:variable name="msg_uar_deleting"><![CDATA[Deleting\]\]\></xsl:variable>
<xsl:variable name="msg_uar_save_failed"><![CDATA[Save failed\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_failed"><![CDATA[Deletion failed\]\]\></xsl:variable>
<xsl:variable name="msg_uar_error_handling_request"><![CDATA[Error handling this request\]\]\></xsl:variable>
<xsl:variable name="msg_uar_error_deleting"><![CDATA[Error deleting this result! Could not create the request\]\]\></xsl:variable>
<xsl:variable name="msg_uar_error_add_or_update"><![CDATA[Problem adding/updating this result: Could not create the request\]\]\></xsl:variable>

<!-- UAR v2 - i18n messages used by the UAR UI component. -->
<xsl:variable name="msg_uar_confirm_delete_title"><![CDATA[Confirm delete\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_delete_text"><![CDATA[Are you sure you want to delete the user added result?\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_delete_moderation_required"><![CDATA[Are you sure you want to delete the user added resultThe selected result will be deleted only after the administrator reviews and approves the same. The result will continue to show until review is done.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_in_progress"><![CDATA[Deleting...\]\]\></xsl:variable>
<xsl:variable name="msg_uar_add_pending_review_title"><![CDATA[New addition - Admin review pending\]\]\></xsl:variable>
<xsl:variable name="msg_uar_add_pending_review_content"><![CDATA[The result that you contributed has been submitted but it will be displayed only after the administrator reviews and approves the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_update_pending_review_title"><![CDATA[Edit - Admin review pending\]\]\></xsl:variable>
<xsl:variable name="msg_uar_update_pending_review_content"><![CDATA[The changes to result that you edited has been submitted but it will be displayed only after the administrator reviews and approves the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_pending_review_title"><![CDATA[Delete - Admin review pending\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_pending_review_content"><![CDATA[The request for deleting the result has been submitted but result will be deleted only after the administrator reviews and approves the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_existing_review_pending_title"><![CDATA[Existing admin review pending\]\]\></xsl:variable>
<xsl:variable name="msg_uar_existing_review_pending_content"><![CDATA[An existing request to update the same result is pending therefore this request is not processed. You can take action only after the administrator reviews the existing request.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_add_title"><![CDATA[Confirm add - Admin review required\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_add_content"><![CDATA[New result contribution will be submitted for administrator review. The result will be displayed only after the administrator will approve the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_update_title"><![CDATA[Confirm edit - Admin review required\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_update_content"><![CDATA[The changes to the result will be submitted for administrator review. The existing result will continue to show until the administrator approves the changes.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_submit_request"><![CDATA[Are you sure you want to submit this request?\]\]\></xsl:variable>
<xsl:variable name="msg_uar_review_note"><![CDATA[Note that the existing result will continue to show until the review is done.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_discard_changes_title"><![CDATA[Discard changes\]\]\></xsl:variable>
<xsl:variable name="msg_uar_discard_changes_content"><![CDATA[Do you want to discard existing changes?\]\]\></xsl:variable>
<xsl:variable name="msg_uar_no_results"><![CDATA[No results. Consider contributing a result.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_description"><![CDATA[Description\]\]\></xsl:variable>
<xsl:variable name="msg_uar_enter_title_value"><![CDATA[Enter title to be displayed\]\]\></xsl:variable>
<xsl:variable name="msg_uar_enter_url_value"><![CDATA[Enter absolute URL of the document\]\]\></xsl:variable>
<xsl:variable name="msg_uar_enter_username_value"><![CDATA[Enter user name\]\]\></xsl:variable>
<xsl:variable name="msg_uar_edit_this_result"><![CDATA[Edit this result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_this_result"><![CDATA[Delete this result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_view_all_results"><![CDATA[View all results\]\]\></xsl:variable>
<xsl:variable name="msg_uar_hide_few_results"><![CDATA[Hide few results\]\]\></xsl:variable>
<xsl:variable name="msg_uar_contribute_result"><![CDATA[Contribute a result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_loading_settings"><![CDATA[Loading settings. Please try again in a second.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_server_error"><![CDATA[Server error! Please try again.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_authn_required"><![CDATA[Authentication is required.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_username_required"><![CDATA[Username is required. Please specify the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_save_in_progress"><![CDATA[Saving...\]\]\></xsl:variable>

<!-- *** Template to sanitize UAR i18n messages *** -->
<xsl:template name="sanitize_uar_i18n_message">
<xsl:param name="uar_message_to_be_sanitized"/>
<xsl:variable name="uar_message_without_apos">
       <xsl:call-template name="replace_string">
         <xsl:with-param name="find" select='"&apos;"'/>
         <xsl:with-param name="replace" select='"\&apos;"'/>
         <xsl:with-param name="string" select="$uar_message_to_be_sanitized"/>
       </xsl:call-template>
</xsl:variable>
<xsl:variable name="uar_message_without_apos_double_quotes">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="$uar_message_without_apos"/>
    </xsl:call-template>
</xsl:variable>
<xsl:variable name="uar_message_without_apos_double_quotes_lt">
       <xsl:call-template name="replace_string">
         <xsl:with-param name="find" select='"&lt;"'/>
         <xsl:with-param name="replace" select='"&amp;lt;"'/>
         <xsl:with-param name="string"
           select="$uar_message_without_apos_double_quotes"/>
       </xsl:call-template>
</xsl:variable>
<xsl:variable name="uar_message_without_apos_double_quotes_lt_gt">
       <xsl:call-template name="replace_string">
         <xsl:with-param name="find" select='"&gt;"'/>
         <xsl:with-param name="replace" select='"&amp;gt;"'/>
         <xsl:with-param name="string"
           select="$uar_message_without_apos_double_quotes_lt"/>
       </xsl:call-template>
</xsl:variable>
<xsl:value-of select="$uar_message_without_apos_double_quotes_lt_gt"/>
</xsl:template>

<!-- *** UAR v2, Expert Search - Template to include the localized messages
       for UAR and Expert Search component. *** -->
<xsl:template name="include_localized_messages_for_uar_expert_search">
<script type="text/javascript">
<xsl:comment>
  // Variable definition included here so that no error is thrown. This will
  // be overriden as soon as the UI component JS library loads.
  var gsa = {'ui': {msg: {}}};

  /**
   * Adds localized messages to be used by the UI component(s).
   */
  function _gsa_addLocalizedMessages() {
    // UAR messages.
    gsa.ui.msg.MSG_CANCEL_BTN =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_cancel"/></xsl:call-template>';
    gsa.ui.msg.MSG_OK_BTN =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_ok"/></xsl:call-template>';
    gsa.ui.msg.MSG_SAVE_BTN =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_save"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_DELETE_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_delete_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_DELETE_TEXT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_delete_text"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_DELETE_MODERATION_REQUIRED =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_delete_moderation_required"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DELETE_IN_PROGRESS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_delete_in_progress"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ADD_PENDING_REVIEW_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_add_pending_review_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ADD_PENDING_REVIEW_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_add_pending_review_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_UPDATE_PENDING_REVIEW_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_update_pending_review_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_UPDATE_PENDING_REVIEW_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_update_pending_review_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DELETE_PENDING_REVIEW_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_delete_pending_review_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DELETE_PENDING_REVIEW_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_delete_pending_review_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_EXISTING_REVIEW_PENDING_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_existing_review_pending_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_EXISTING_REVIEW_PENDING_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_existing_review_pending_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_ADD_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_add_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_ADD_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_add_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_UPDATE_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_update_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_UPDATE_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_update_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_SUBMIT_REQUEST =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_submit_request"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_REVIEW_NOTE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_review_note"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DISCARD_CHANGES_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_discard_changes_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DISCARD_CHANGES_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_discard_changes_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_NO_RESULTS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_no_results"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ADDED_BY =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_added_by"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DESCRIPTION =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_description"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ENTER_TITLE_VALUE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_enter_title_value"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ENTER_URL_VALUE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_enter_url_value"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ENTER_USERNAME_VALUE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_enter_username_value"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_EDIT_THIS_RESULT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_edit_this_result"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DELETE_THIS_RESULT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_delete_this_result"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_VIEW_ALL_RESULTS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_view_all_results"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_HIDE_FEW_RESULTS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_hide_few_results"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONTRIBUTE_RESULT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_contribute_result"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_LOADING_SETTINGS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_loading_settings"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_SERVER_ERROR =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_server_error"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_AUTHN_REQUIRED =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_authn_required"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_USERNAME_REQUIRED =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_username_required"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_SAVE_IN_PROGRESS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_save_in_progress"/></xsl:call-template>';
    // Expert search messages.
    gsa.ui.msg.MSG_LOADING_EXPERT_RESULTS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_loading_expert_results"/></xsl:call-template>';
  }
//</xsl:comment>
</script>
</xsl:template>

<!-- *** UAR v2 - Template to include the JavaScript required for the UAR UI
       component. *** -->
<xsl:template name="include_uar_ui_component">
<script src="{$gsa_resource_root_path_prefix}/uardesktop_compiled.js"
    type="text/javascript">
</script>
<script type="text/javascript">
  gsa.ui.uar.init();
</script>
</xsl:template>

<!-- *** Template to populate the i18n message array which is used by uar.js *** -->
<xsl:template name="populate_uar_i18n_array">
<script type="text/javascript">
<xsl:comment>
  // User added results - i18n messages.
  var uar_i18n_messages = {};
  uar_i18n_messages['ADDED_BY'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                     <xsl:with-param name="uar_message_to_be_sanitized"
                                       select="$msg_uar_added_by"/>
                                   </xsl:call-template>' + ' ';
  uar_i18n_messages['EDIT'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                 <xsl:with-param name="uar_message_to_be_sanitized"
                                   select="$msg_uar_edit"/>
                               </xsl:call-template>';
  uar_i18n_messages['TITLE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                  <xsl:with-param name="uar_message_to_be_sanitized"
                                    select="$msg_uar_title"/>
                                </xsl:call-template>'  + ':';
  uar_i18n_messages['SAVE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                 <xsl:with-param name="uar_message_to_be_sanitized"
                                   select="$msg_uar_save"/>
                               </xsl:call-template>';
  uar_i18n_messages['CANCEL'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                   <xsl:with-param name="uar_message_to_be_sanitized"
                                     select="$msg_uar_cancel"/>
                                 </xsl:call-template>';
  uar_i18n_messages['ADDRESS'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                    <xsl:with-param name="uar_message_to_be_sanitized"
                                      select="$msg_uar_address"/>
                                  </xsl:call-template>'  + ':';
  uar_i18n_messages['OR'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                               <xsl:with-param name="uar_message_to_be_sanitized"
                                 select="$msg_uar_or"/>
                             </xsl:call-template>'  + ' ';
  uar_i18n_messages['DELETE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                   <xsl:with-param name="uar_message_to_be_sanitized"
                                     select="$msg_uar_delete"/>
                                 </xsl:call-template>';
  uar_i18n_messages['USERNAME'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                     <xsl:with-param name="uar_message_to_be_sanitized"
                                       select="$msg_uar_username"/>
                                   </xsl:call-template>'  + ':';
  uar_i18n_messages['LESS'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                 <xsl:with-param name="uar_message_to_be_sanitized"
                                   select="$msg_uar_less"/>
                               </xsl:call-template>';
  uar_i18n_messages['MORE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                 <xsl:with-param name="uar_message_to_be_sanitized"
                                   select="$msg_uar_more"/>
                               </xsl:call-template>';
  uar_i18n_messages['ADD_ANOTHER_RESULT'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                               <xsl:with-param name="uar_message_to_be_sanitized"
                                                 select="$msg_uar_add_another_result"/>
                                             </xsl:call-template>';
  uar_i18n_messages['ADD_A_RESULT'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                         <xsl:with-param name="uar_message_to_be_sanitized"
                                           select="$msg_uar_add_a_result"/>
                                       </xsl:call-template>';
  uar_i18n_messages['SAVING'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                   <xsl:with-param name="uar_message_to_be_sanitized"
                                     select="$msg_uar_saving"/>
                                 </xsl:call-template>'  + '...';
  uar_i18n_messages['DELETING'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                     <xsl:with-param name="uar_message_to_be_sanitized"
                                       select="$msg_uar_deleting"/>
                                   </xsl:call-template>'  + '...';
  uar_i18n_messages['SAVE_FAILED'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                        <xsl:with-param name="uar_message_to_be_sanitized"
                                          select="$msg_uar_save_failed"/>
                                      </xsl:call-template>'  + '!';
  uar_i18n_messages['DELETE_FAILED'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                          <xsl:with-param name="uar_message_to_be_sanitized"
                                            select="$msg_uar_delete_failed"/>
                                        </xsl:call-template>'  + '!';
  uar_i18n_messages['ERROR_HANDLING_REQUEST'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                                   <xsl:with-param name="uar_message_to_be_sanitized"
                                                     select="$msg_uar_error_handling_request"/>
                                                 </xsl:call-template>'  + '.';
  uar_i18n_messages['ERROR_DELETING'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                           <xsl:with-param name="uar_message_to_be_sanitized"
                                             select="$msg_uar_error_deleting"/>
                                         </xsl:call-template>'  + '.';
  uar_i18n_messages['ERROR_ADD_OR_UPDATE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                                <xsl:with-param name="uar_message_to_be_sanitized"
                                                  select="$msg_uar_error_add_or_update"/>
                                              </xsl:call-template>'  + '.';
//</xsl:comment>
</script>
</xsl:template>

<!-- *** Previewer i18n messages *** -->
<xsl:variable name="msg_previewer_error"><![CDATA[Transformation error\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_connecting"><![CDATA[Connecting\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_document_too_large"><![CDATA[Document too large\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_hit_page"><![CDATA[Hit page\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_initializing"><![CDATA[Initializing\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_page"><![CDATA[Page\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_pending"><![CDATA[Pending\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_preview_unavailable"><![CDATA[Preview unavailable\]\]\></xsl:variable>



<!-- *** Template to populate the i18n message array which is used by floating previewer widget *** -->
<xsl:template name="populate_previewer_i18n_array">
<script type="text/javascript">
<xsl:comment>
  // Document previews - i18n messages.
  var previewer_i18n_messages = {
    'connecting': '<xsl:value-of select="$msg_previewer_connecting"/>',
    'document_too_large': '<xsl:value-of select="$msg_previewer_document_too_large"/>',
    'hitpage': '<xsl:value-of select="$msg_previewer_hit_page"/>',
    'initializing': '<xsl:value-of select="$msg_previewer_initializing"/>',
    'page': '<xsl:value-of select="$msg_previewer_page"/>',
    'pending': '<xsl:value-of select="$msg_previewer_pending"/>',
    'preview_unavailable': '<xsl:value-of select="$msg_previewer_preview_unavailable"/>',
    'transformation_aborted': '<xsl:value-of select="$msg_previewer_error"/>',
    'transformation_cancelled': '<xsl:value-of select="$msg_previewer_error"/>',
    'transformation_error': '<xsl:value-of select="$msg_previewer_error"/>'
  };
//</xsl:comment>
</script>
</xsl:template>

<!-- **********************************************************************
My global page header/footer (can be customized)
   ********************************************************************** -->
<!-- *** showing up serve-logs in footer *** -->
<xsl:template match="TraceNode">
<div id="TraceNode-div">
  Total time taken
  <span style='font-style: italics;' id='total_time'><xsl:value-of select="(@out-time - @in-time) div 1000000"/></span>
  <xsl:apply-templates select="Record"/>
</div>
</xsl:template>

<xsl:template match="Record">
<div>
  <xsl:value-of select="Stmt/@log"/>
</div>
<div>
  <i><xsl:value-of select="@time-from-start"/></i>
</div>
</xsl:template>

<!-- **********************************************************************
Logo template (can be customized)
   ********************************************************************** -->
<xsl:template name="logo">
  <a ctype='logo' href="{$home_url}"><img src="{$logo_url}"
    width="{$logo_width}" height="{$logo_height}"
    alt="Go to Google Home" border="0" /></a>
</xsl:template>

<!-- **********************************************************************
Search result page header (can be customized): logo and search box
   ********************************************************************** -->
<xsl:template name="result_page_header">
  <input type="hidden" name="security_token" id="token">
    <xsl:attribute name="value">
      <xsl:value-of select="/GSP/SECURITY_TOKEN"/>
    </xsl:attribute>
  </input>
    
  <div id="result_page_header_id"> 
    <xsl:if test="$show_logo != '0'">
      <div id="logo-div">
        <xsl:call-template name="logo"/>
        <xsl:call-template name="nbsp3"/>
      </div>
    </xsl:if>
    <xsl:if test="$show_top_search_box != '0'">
      <div id="search-box-div">
          <xsl:call-template name="search_box">
            <xsl:with-param name="type" select="'std_top'"/>
          </xsl:call-template>
      </div>
    </xsl:if>
    <xsl:if test="/GSP/CT">
      <div id="stopwords-div">
        <br/>
          <xsl:call-template name="stopwords"/>
          <br/></div>
    </xsl:if>
  </div>
</xsl:template>


<!-- **********************************************************************
Search within results page header (can be customized): logo and search box 
   ********************************************************************** -->
<xsl:template name="swr_page_header">
  <div id="swr_page_header_div">
    <xsl:if test="$show_logo != '0'">
          <xsl:call-template name="logo"/>
          <xsl:call-template name="nbsp3"/>
    </xsl:if>
    <xsl:if test="$show_top_search_box != '0'">
         <xsl:call-template name="search_box">
            <xsl:with-param name="type" select="'swr'"/>
          </xsl:call-template>
    </xsl:if>
  </div>
</xsl:template>


<!-- **********************************************************************
Home search page header (can be customized): logo and search box
   ********************************************************************** -->
<xsl:template name="home_page_header">

  <input type="hidden" name="security_token" id="token">
    <xsl:attribute name="value">
      <xsl:value-of select="/GSP/SECURITY_TOKEN"/>
    </xsl:attribute>
  </input>
  <div id="home_page_header">
    <xsl:if test="$show_logo != '0'">
      <div class="pull-left">
        <xsl:call-template name="logo"/>
        <xsl:call-template name="nbsp3"/>
      </div>
    </xsl:if>  
    
    
    <xsl:if test="$show_top_search_box != '0'">
        <xsl:call-template name="search_box">
          <xsl:with-param name="type" select="'home'"/>
        </xsl:call-template>
    </xsl:if>
  </div>
</xsl:template>


<!-- **********************************************************************
Separation bar variables (used in advanced search header and result page)
   ********************************************************************** -->
<xsl:variable name="sep_bar_border_color">
<xsl:choose>
  <xsl:when test="$choose_sep_bar = 'ltblue'">#3366cc</xsl:when>
  <xsl:when test="$choose_sep_bar = 'blue'">#3366cc</xsl:when>
  <xsl:otherwise><xsl:value-of select="$global_bg_color"/></xsl:otherwise>
</xsl:choose>
</xsl:variable>

<xsl:variable name="sep_bar_bg_color">
<xsl:choose>
  <xsl:when test="$is_embedded_mode = '1'">#efefef</xsl:when>
  <xsl:when test="$choose_sep_bar = 'ltblue'">#e5ecf9</xsl:when>
  <xsl:when test="$choose_sep_bar = 'blue'">#3366cc</xsl:when>
  <xsl:otherwise><xsl:value-of select="$global_bg_color"/></xsl:otherwise>
</xsl:choose>
</xsl:variable>

<xsl:variable name="sep_bar_text_color">
<xsl:choose>
  <xsl:when test="$choose_sep_bar = 'ltblue'">#000000</xsl:when>
  <xsl:when test="$choose_sep_bar = 'blue'">#ffffff</xsl:when>
  <xsl:otherwise><xsl:value-of select="$global_text_color"/></xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- **********************************************************************
Advanced search page header HTML (can be customized)
   ********************************************************************** -->
<xsl:template name="advanced_search_header">
    <div id="advanced_search_header_div">
        <xsl:if test="$show_logo != '0'">
              <xsl:call-template name="logo"/>
        </xsl:if>
    </div>
</xsl:template>


<!-- **********************************************************************
Cached page header (can be customized)
   ********************************************************************** -->
<xsl:template name="cached_page_header">
<xsl:param name="cached_page_url"/>
<xsl:variable name="stripped_url" select="substring-after($cached_page_url,
                                                          '://')"/>
<div id="cached_page_header_div">
    <font face="{$global_font}" color="{$global_text_color}" size="-1">
     <xsl:value-of select="$cached_page_header_text"/>
     <xsl:call-template name="nbsp"/>
     <xsl:choose>
      <xsl:when test="starts-with($cached_page_url,
                                  $db_url_protocol)">
       <a ctype="cache" href="{concat('/db/',$stripped_url)}">
       <font color="{$global_link_color}">
       <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
      </xsl:when>
      <xsl:when test="starts-with($cached_page_url,
                                  $nfs_url_protocol)">
       <a ctype="cache" href="{concat('/nfs/',$stripped_url)}">
       <font color="{$global_link_color}">
       <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
      </xsl:when>
      <xsl:when test="starts-with($cached_page_url,
                                  $smb_url_protocol)">
       <a ctype="cache" href="{concat('/smb/',$stripped_url)}">
       <font color="{$global_link_color}">
       <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
      </xsl:when>
      <xsl:when test="starts-with($cached_page_url,
                                  $unc_url_protocol)">
       <xsl:variable name="display_url">
         <xsl:call-template name="convert_unc">
           <xsl:with-param name="string" select="$stripped_url"/>
         </xsl:call-template>
       </xsl:variable>
       <a ctype="cache" href="{concat('file://',$stripped_url)}">
       <font color="{$global_link_color}">
       <xsl:value-of select="$display_url"/></font></a>.<br/>
      </xsl:when>
      <xsl:otherwise>
       <a ctype="cache" href="{$cached_page_url}"><font color="{$global_link_color}">
       <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
      </xsl:otherwise>
     </xsl:choose>
    </font>
</div>
<hr/>
</xsl:template>

<!-- **********************************************************************
Suggest service javascript (do not customize)
   ********************************************************************** -->
<xsl:template name="gsa_suggest">
<xsl:variable name="ss_g_one_name_to_display">Popular Query</xsl:variable>
<xsl:variable name="ss_g_more_names_to_display">Popular Queries</xsl:variable>
<xsl:variable name="ss_non_query_empty_title">No Title</xsl:variable>
<script type="text/javascript">
/**
* HTML element names for the search form, the spellchecking suggestion, and the
* cluster suggestions. The search form must have the following input elements:
* "q" (for search box), "site", "client".
* @type {string}
*/
var ss_form_element = 'suggestion_form'; // search form

/**
* Name of search suggestion drop down.
* @type {string}
*/
var ss_popup_element = 'search_suggest'; // search suggestion drop-down

/**
* Types of suggestions to include.  Just one options now, but reserving the
* code for more types
*   g - suggest server
* Array sequence determines how different suggestion types are shown.
* Empty array would effectively turn off suggestions.
* @type {object}
*/
var ss_seq = [ 'g' ];

/**
* Suggestion type name to display when there is only one suggestion.
* @type {string}
*/
var ss_g_one_name_to_display =
  "<xsl:value-of select="$ss_g_one_name_to_display"/>";

/**
* Suggestion type name to display when there are more than one suggestions.
* @type {string}
*/
var ss_g_more_names_to_display =
  "<xsl:value-of select="$ss_g_more_names_to_display"/>";

/**
* The max suggestions to display for different suggestion types.
* No-positive values are equivalent to unlimited.
* For key matches, -1 means using GSA default (not tagging numgm parameter),
* 0 means unlimited.
* Be aware that GSA has a published max limit of 10 for key matches.
* @type {number}
*/
var ss_g_max_to_display = 10;

/**
* The max suggestions to display for all suggestion types.
* No-positive values are equivalent to unlimited.
* @type {number}
*/
var ss_max_to_display = 12;

/**
* Idling interval for fast typers.
* @type {number}
*/
var ss_wait_millisec = 300;

/**
* Delay time to avoid contention when drawing the suggestion box by various
* parallel processes.
* @type {number}
*/
var ss_delay_millisec = 30;

/**
* Host name or IP address of GSA.
* Null value can be used if the JS code loads from the GSA.
* For local test, use null if there is a &lt;base> tag pointing to the GSA,
* otherwise use the full GSA host name
* @type {string}
*/
var ss_gsa_host = null;

/**
* Constant that represents legacy output format.
* @type {string}
*/
var SS_OUTPUT_FORMAT_LEGACY = 'legacy';

/**
* Constant that represents OpenSearch output format.
* @type {string}
*/
var SS_OUTPUT_FORMAT_OPEN_SEARCH = 'os';

/**
* Constant that represents rich output format.
* @type {string}
*/
var SS_OUTPUT_FORMAT_RICH = 'rich';

/**
* What suggest request API to use.
*   legacy - use current protocol in 6.0
*            Request: /suggest?token=&lt;query>&amp;max_matches=&lt;num>&amp;use_similar=0
*            Response: [ "&lt;term 1>", "&lt;term 2>", ..., "&lt;term n>" ]
*                   or
*                      [] (if no result)
*   os -     use OpenSearch protocol
*            Request: /suggest?q=&lt;query>&amp;max=&lt;num>&amp;site=&lt;collection>&amp;client=&lt;frontend>&amp;access=p&amp;format=os
*            Response: [
*                        "&lt;query>",
*                        [ "&lt;term 1>", "&lt;term 2>", ... "&lt;term n>" ],
*                        [ "&lt;content 1>", "&lt;content 2>", ..., "&lt;content n>" ],
*                        [ "&lt;url 1>", "&lt;url 2>", ..., "&lt;url n>" ]
*                      ] (where the last two elements content and url are optional)
*                   or
*                      [ &lt;query>, [] ] (if no result)
*   rich -   use rich protocol from search-as-you-type
*            Request: /suggest?q=&lt;query>&amp;max=&lt;num>&amp;site=&lt;collection>&amp;client=&lt;frontend>&amp;access=p&amp;format=rich
*            Response: {
*                        "query": "&lt;query>",
*                        "results": [
*                          { "name": "&lt;term 1>", "type": "suggest", "content": "&lt;content 1>", "style": "&lt;style 1>", "moreDetailsUrl": "&lt;url 1>" },
*                          { "name": "&lt;term 2>", "type": "suggest", "content": "&lt;content 2>", "style": "&lt;style 2>", "moreDetailsUrl": "&lt;url 2>" },
*                          ...,
*                          { "name": "&lt;term n>", "type": "suggest", "content": "&lt;content n>", "style": "&lt;style n>", "moreDetailsUrl": "&lt;url n>" }
*                        ]
*                      } (where type, content, style, moreDetailsUrl are optional)
*                   or
*                      { "query": &lt;query>, "results": [] } (if no result)
* If unspecified or null, using legacy protocol.
* @type {string}
*/
var ss_protocol = SS_OUTPUT_FORMAT_RICH;

/**
* Whether to allow non-query suggestion items.
* Setting it to false can bring results from "os" and "rich" responses into
* backward compatible with "legacy".
* @type {boolean}
*/
var ss_allow_non_query = true;

/**
* Default title text when the non-query suggestion item does not have a useful
* title.
* The default display text should be internalionalized.
* @type {string}
*/
var ss_non_query_empty_title =
  "<xsl:value-of select="$ss_non_query_empty_title"/>";

/**
* Whether debugging is allowed.  If so, toggle with F2 key.
* @type {boolean}
*/
var ss_allow_debug = false;
</script>
<script type="text/javascript"
  src="{$gsa_resource_root_path_prefix}/ss.js">
</script>
</xsl:template>


<!-- **********************************************************************
"Search Within Results" search input page (can be customized)
   ********************************************************************** -->
<xsl:template name="swr_search">
<xsl:call-template name="doc_type"/>
<html>
	<xsl:attribute name="class">
	<xsl:value-of select="$skin_class"/>
	</xsl:attribute>
<xsl:call-template name="langHeadStart"/>
  <title><xsl:value-of select="$swr_page_title"/></title>
<xsl:call-template name="style"/>
<xsl:call-template name="langHeadEnd"/>

<body>
	 <xsl:attribute name="class">
	<xsl:value-of select="'clearfix'"/>
	<xsl:text>&#160;</xsl:text>
	<xsl:value-of select="$skin_class"/>
	</xsl:attribute>
	<xsl:attribute name="dir">ltr</xsl:attribute>
<div id="container" class="schoolpage">
 <xsl:call-template name="header_element"/>
 <xsl:call-template name="main_content_wrapper_start"/>
  <div class="main-content">
      <xsl:call-template name="personalization"/>
      <xsl:call-template name="analytics"/>
      <xsl:call-template name="swr_page_header"/>f
      <hr/>
      <xsl:call-template name="copyright"/>
  </div>
  <xsl:call-template name="footer_element"/>    
  <xsl:call-template name="main_content_wrapper_end"/>
  </div>
</body>
</html>
</xsl:template>


<!-- **********************************************************************
"Front door" search input page (can be customized)
   ********************************************************************** -->
<xsl:template name="front_door">
<xsl:call-template name="doc_type"/>
<html>
	<xsl:attribute name="class">
	<xsl:value-of select="$skin_class"/>
	</xsl:attribute>
<xsl:call-template name="langHeadStart"/>
  <title><xsl:value-of select="$front_page_title"/></title>
<xsl:call-template name="style"/>
<xsl:if test="$show_suggest != '0'">
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/common.js'></script>
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/xmlhttp.js'></script>
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/uri.js'></script>
  <xsl:call-template name="gsa_suggest" />
</xsl:if>
<xsl:call-template name="langHeadEnd"/>

<xsl:choose>
  <xsl:when test="$show_suggest != '0'">
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/common.js'></script>
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/xmlhttp.js'></script>
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/uri.js'></script>
    <xsl:call-template name="gsa_suggest" />

    <body onLoad="ss_sf();">
	    <xsl:attribute name="class">
		<xsl:value-of select="'clearfix'"/>
		<xsl:text>&#160;</xsl:text>
		<xsl:value-of select="$skin_class"/>
		</xsl:attribute>
		<xsl:attribute name="dir">ltr</xsl:attribute>
	<div id="container" class="schoolpage">
	  <xsl:call-template name="header_element"/>
	  <xsl:call-template name="main_content_wrapper_start"/>
      <div class="main-content">
        <xsl:call-template name="personalization"/>
        <xsl:call-template name="analytics"/>

        <xsl:call-template name="home_page_header"/>
        <div class="home-page-hr">
          <hr/>  
        </div>
        <xsl:call-template name="copyright"/>
      </div>
	  <xsl:call-template name="footer_element"/>
	  <xsl:call-template name="main_content_wrapper_end"/>
	  </div>
    </body>
  </xsl:when>
  <xsl:otherwise>
    <body>
    	<xsl:attribute name="class">
		<xsl:value-of select="'clearfix'"/>
		<xsl:text>&#160;</xsl:text>
		<xsl:value-of select="$skin_class"/>
		</xsl:attribute>
		<xsl:attribute name="dir">ltr</xsl:attribute>
	 <div id="container" class="schoolpage">
	  <xsl:call-template name="header_element"/>
	  <xsl:call-template name="main_content_wrapper_start"/>
      <div class="main-content">
        <xsl:call-template name="personalization"/>
        <xsl:call-template name="analytics"/>
        <xsl:call-template name="home_page_header"/>
        <hr/>
        <xsl:call-template name="copyright"/> 
      </div>
	  <xsl:call-template name="footer_element"/>   
	  <xsl:call-template name="main_content_wrapper_end"/>
	  </div>
    </body>
  </xsl:otherwise>
</xsl:choose>

</html>
</xsl:template>


<!-- **********************************************************************
Empty result set (can be customized)
   ********************************************************************** -->
<xsl:template name="no_RES">
<xsl:param name="query"/>

<!-- *** Output Google Desktop results (if enabled and any available) *** -->
<xsl:if test="$egds_show_desktop_results != '0'">
  <xsl:call-template name="desktop_results"/>
</xsl:if>
<!-- *** Handle UAR results, if any ***-->
<xsl:if test="$show_onebox != '0'  and $show_sidebar != '1'">
  <xsl:if test="/GSP/ENTOBRESULTS/OBRES/provider = $uar_provider">
      <input type="hidden" name="oneboxloc" value="1261" />
    <xsl:call-template name="onebox"/>
    <script>
    <xsl:comment>
      if (window['populateUarMessages']) {
        populateUarMessages();
      }
    //</xsl:comment>
    </script>
  </xsl:if>
</xsl:if>

<div class="no-results">
<h1>No Results:</h1>
<p>Your search for <strong><xsl:value-of select="$query"/></strong> did not return any results.</p>
<ul>
  <li>Make sure all words are spelled correctly.</li>
  <li>Try different keywords.</li>
  <li>Try another search collection above.</li>
  <xsl:if test="/GSP/PARAM[(@name='access') and(@value='a')]">
    <li>Make sure your security credentials are correct.</li>
  </xsl:if>
  <li>Try more general keywords.</li>
</ul>
</div>

</xsl:template>


<!-- ######################################################################
We do not recommend changes to the following code.  Google Technical
Support Personnel currently do not support customization of XSLT under
these Technical Support Services Guidelines.  Such services may be
provided on a consulting basis, at Google's then-current consulting
services rates under a separate agreement, if Google personnel are
available.  Please ask your Google Account Manager for more details if
you are interested in purchasing consulting services.
   ###################################################################### -->


<!-- **********************************************************************
Global Style (do not customize)
      default font type/size/color, background color, link color
       using HTML CSS (Cascading Style Sheets)
   ********************************************************************** -->
<xsl:template name="style">
<xsl:call-template name="my_page_css"/>
<link rel="stylesheet" type="text/css" href="{$custom_css_path}/global.css?version=1.0" />
<xsl:if test="$show_bottom_search_box != '0'">
  <link rel="stylesheet" type="text/css" href="{$custom_css_path}/bottom_search_box.css" />
</xsl:if>
<xsl:if test="$show_alerts2 = '1'">
  <link rel="stylesheet" type="text/css" href="{$custom_css_path}/show_alerts2.css" />
</xsl:if>


<xsl:if test="$show_res_clusters = '1'">
<xsl:choose>
  <xsl:when test="$res_cluster_position = 'top'">
    <link rel="stylesheet" type="text/css" href="{$custom_css_path}/res_cluster_top.css"/>
  </xsl:when>
  <xsl:when test="$res_cluster_position = 'bottom'">
      <!--<link rel="stylesheet" type="text/css" href="{$custom_css_path}/res_cluster_bottom.css"/>-->
  </xsl:when>
  <xsl:when test="$res_cluster_position = 'right'">
      <link rel="stylesheet" type="text/css" href="{$custom_css_path}/res_cluster_right.css"/>
  </xsl:when>
</xsl:choose>
<xsl:if test="$is_disable_style_in_embedded_mode = '1'">
<link rel="stylesheet" type="text/css" href="{$custom_css_path}/is_disable_style_in_embedded_mode.css"/>
</xsl:if>
</xsl:if>

<xsl:if test="$res_cluster_position = 'right'">
</xsl:if>
<xsl:if test="$show_suggest != '0'">
<!--<link rel="stylesheet" type="text/css" href="{$custom_css_path}/suggestion.css?version=1.0" />-->
</xsl:if>
<xsl:if test="$render_dynamic_navigation = '1'">
<link rel="stylesheet" type="text/css" href="{$custom_css_path}/dynamic_nav.css?version=1.0"/>
</xsl:if>
<xsl:if test="$show_sidebar = '1'">
<link rel="stylesheet" type="text/css" href="{$custom_css_path}/show_sidebar.css"/>
</xsl:if>
<xsl:if test="$show_document_previews = '1'">
<link rel="stylesheet" type="text/css" href="{$custom_css_path}/document_preview.css?version=1.1"/>
</xsl:if>
<xsl:if test="$show_translation = '1' and $only_apps != '1'">
 <link rel="stylesheet" type="text/css" href="{$custom_css_path}/translation.css"/>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
URL variables (do not customize)
   ********************************************************************** -->
<!-- *** if this is a test search (help variable)-->
<xsl:variable name="is_test_search"
select="/GSP/PARAM[@name='testSearch']/@value"/>

<!-- *** if this is a search within results search *** -->
<xsl:variable name="swrnum">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[(@name='swrnum') and (@value!='')]">
    <xsl:value-of select="/GSP/PARAM[@name='swrnum']/@value"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="0"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** help_url: search tip URL (html file) *** -->
<xsl:variable name="help_url">/user_help.html</xsl:variable>

<!-- *** base_url: collection info *** -->
<xsl:variable name="base_url">
<xsl:for-each
  select="/GSP/PARAM[@name = 'client' or
                   @name = 'site' or
                   @name = 'num' or
                   @name = 'output' or
                   @name = 'proxystylesheet' or
                   @name = 'access' or
                   @name = 'lr' or
                   @name = 'ie']">
  <xsl:value-of select="@name"/>=<xsl:value-of select="@original_value"/>
  <xsl:if test="position() != last()">&amp;</xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** custom tab base url *** -->
<xsl:variable name="custom_tab_url">
  <xsl:for-each select="/GSP/PARAM[@name != 'site']">
  <xsl:value-of select="@name"/>=<xsl:value-of select="@original_value"/>
  <xsl:if test="position() != last()">&amp;</xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** home_url: search? + collection info + &proxycustom=<HOME/> *** -->
<xsl:variable name="home_url">
<xsl:value-of select="$gsa_search_root_path_prefix"/>?<xsl:value-of select="$base_url"
/>&amp;proxycustom=&lt;HOME/&gt;</xsl:variable>


<!-- *** synonym_url: does not include q, as_q, and start elements *** -->
<xsl:variable name="synonym_url"><xsl:for-each
select="/GSP/PARAM[(@name != 'q') and
                   (@name != 'as_q') and
                   (@name != 'swrnum') and
                   (@name != 'dnavs') and
                   (@name != $embedded_mode_root_path_param) and
                   (@name != $embedded_mode_resource_root_path_param) and
                   (@name != $embedded_mode_disable_style) and
                   (@name != 'ie') and
                   (@name != 'start') and
                   (@name != 'epoch' or $is_test_search != '') and
                   not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** search_url *** -->
<xsl:variable name="search_url">
<!-- Expert Search - ignore expertsearchasync query param. -->
<xsl:for-each
    select="/GSP/PARAM[(@name != 'start') and
                       (@name != $embedded_mode_root_path_param) and
                       (@name != $embedded_mode_resource_root_path_param) and
                       (@name != $embedded_mode_disable_style) and
                       (@name != 'swrnum') and
                       (@name != 'expertsearchasync') and
                       (@name != 'epoch' or $is_test_search != '') and
                       not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:when test="@name = 'only_apps' and $show_apps_segmented_ui = '1'">
      <xsl:value-of select="'exclude_apps=1'" />
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** search_url minus any dynamic navigation filters *** -->
<xsl:variable name="search_url_no_dnavs">
<xsl:for-each
    select="/GSP/PARAM[(@name != 'start') and
                       (@name != $embedded_mode_root_path_param) and
                       (@name != $embedded_mode_resource_root_path_param) and
                       (@name != $embedded_mode_disable_style) and
                       (@name != 'swrnum') and
                       (@name != 'dnavs') and
                       (@name != 'epoch' or $is_test_search != '') and
                       not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:when test="@name = 'only_apps' and $show_apps_segmented_ui = '1'">
      <xsl:value-of select="'exclude_apps=1'" />
    </xsl:when>
    <xsl:when test="@name = 'q' and /GSP/PARAM[@name='dnavs']">
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="substring-before(@original_value,
        concat('+', /GSP/PARAM[@name='dnavs']/@original_value))"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** url without q and dnavs param *** -->
<xsl:variable name="no_q_dnavs_params">
<xsl:for-each
    select="/GSP/PARAM[(@name != 'start') and
                       (@name != $embedded_mode_root_path_param) and
                       (@name != $embedded_mode_resource_root_path_param) and
                       (@name != $embedded_mode_disable_style) and
                       (@name != 'swrnum') and
                       (@name != 'q') and
                       (@name != 'dnavs') and
                       (@name != 'epoch' or $is_test_search != '') and
                       not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** no_q_dnavs_params_escaped: safe for inclusion in javascript *** -->
<xsl:variable name="no_q_dnavs_params_escaped">
<xsl:call-template name="js_escape">
  <xsl:with-param name="string" select="$no_q_dnavs_params"/>
  <xsl:with-param name="slash_mode" select='"0"'/>
</xsl:call-template>
</xsl:variable>

<!-- *** search_url_escaped: safe for inclusion in javascript *** -->
<xsl:variable name="search_url_escaped">
<xsl:call-template name="js_escape">
  <xsl:with-param name="string" select="$search_url_no_dnavs"/>
  <xsl:with-param name="slash_mode" select='"0"'/>
</xsl:call-template>
</xsl:variable>

<!-- *** filter_url: everything except resetting "filter=" *** -->
<xsl:variable name="filter_url"><xsl:value-of
  select="$gsa_search_root_path_prefix"/>?<xsl:for-each
  select="/GSP/PARAM[(@name != 'filter') and
                     (@name != $embedded_mode_root_path_param) and
                     (@name != $embedded_mode_resource_root_path_param) and
                     (@name != $embedded_mode_disable_style) and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
<xsl:text disable-output-escaping='yes'>&amp;filter=</xsl:text>
</xsl:variable>

<!-- *** adv_search_url: search? + $search_url + as_q=$q *** -->
<xsl:variable name="adv_search_url"><xsl:value-of
  select="$gsa_search_root_path_prefix"/>?<xsl:value-of
  select="$search_url_no_dnavs"/>&amp;proxycustom=&lt;ADVANCED/&gt;</xsl:variable>

<!-- *** exclude_apps: stores the value of exclude_apps query string argument,
    if present. A value of '1' indicates that segmented UI should be
    displayed. Value of '0' indicates that normal blended results UI should be
    displayed. -->
<xsl:variable name="exclude_apps">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[@name='exclude_apps']">
    <xsl:value-of select="/GSP/PARAM[@name='exclude_apps']/@original_value" />
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="'1'" />
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** only_apps: A value of '1' indicates returning only Google Apps
   results. -->
<xsl:variable name="only_apps">
<xsl:value-of select="/GSP/PARAM[@name='only_apps']/@original_value"/>
</xsl:variable>

<!-- *** db_url_protocol: googledb:// *** -->
<xsl:variable name="db_url_protocol">googledb://</xsl:variable>

<!-- *** googleconnector_protocol: googleconnector:// *** -->
<xsl:variable name="googleconnector_protocol">googleconnector://</xsl:variable>

<!-- *** dbconnector_protocol: dbconnector:// *** -->
<xsl:variable name="dbconnector_protocol">dbconnector://</xsl:variable>

<!-- *** nfs_url_protocol: nfs:// *** -->
<xsl:variable name="nfs_url_protocol">nfs://</xsl:variable>

<!-- *** smb_url_protocol: smb:// *** -->
<xsl:variable name="smb_url_protocol">smb://</xsl:variable>

<!-- *** unc_url_protocol: unc:// *** -->
<xsl:variable name="unc_url_protocol">unc://</xsl:variable>

<!-- *** swr_search_url: search? + $search_url + as_q=$q *** -->
<!-- for secure search no estimates are available(except if Customer enabled them
so we use a sentinel value of -1 for swrnum -->
<xsl:variable name="swr_search_url"><xsl:value-of
  select="$gsa_search_root_path_prefix"/>?<xsl:value-of
  select="$search_url_no_dnavs"/>&amp;swrnum=<xsl:choose>
  <xsl:when test="((($access = 'a') or ($access = 's')) and /GSP/RES/M = '')">
    <xsl:value-of select="-1"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="/GSP/RES/M"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** analytics_script_url: https://www.google-analytics.com/ga.js *** -->
<xsl:variable
name="analytics_script_url">https://www.google-analytics.com/ga.js</xsl:variable>

<!-- **********************************************************************
Search Parameters (do not customize)
   ********************************************************************** -->

<!-- *** num_results: actual num_results per page *** -->
<xsl:variable name="num_results">
<xsl:choose>
  <xsl:when test="count(/GSP/PARAM[(@name='num')]) &gt; 1">
    <xsl:value-of select="/GSP/PARAM[(@name='num')][last()]/@value"/>
  </xsl:when>
  <xsl:when test="/GSP/PARAM[(@name='num') and (@value!='')]">
    <xsl:value-of select="/GSP/PARAM[@name='num']/@value"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="10"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** form_params: parameters carried by the search input form *** -->
<xsl:template name="form_params">
<xsl:for-each
  select="PARAM[@name != 'q' and
                @name != 'ie' and
                not(contains(@name, 'as_')) and
                @name != 'btnG' and
                @name != 'btnG.x' and
                @name != 'btnG.y' and
                @name != 'btnI' and
                @name != 'site' and
                @name != 'filter' and
                @name != 'swrnum' and
                @name != 'start' and
                @name != 'access' and
                @name != $embedded_mode_root_path_param and
                @name != $embedded_mode_resource_root_path_param and
                @name != $embedded_mode_disable_style and
                @name != 'ip' and
                @name != 'entqr' and
                @name != 'entqrm' and
                @name != 'ulang' and
                @name != 'dnavs' and
                @name != 'tlen' and
                @name != 'exclude_apps' and
                @name != 'only_apps_deb' and
                @name != 'requiredfields' and
                @name != 'partialfields' and
                (@name != 'epoch' or $is_test_search != '') and
                not(starts-with(@name ,'metabased_'))]">
      <input type="hidden" name="{@name}" value="{@value}" />

    <xsl:if test="@name = 'oe'">
      <input type="hidden" name="ie" value="{@value}" />
    </xsl:if>
  <xsl:text>
  </xsl:text>
</xsl:for-each>


<xsl:if test="not(/GSP/PARAM[@name='only_apps'])">
  <!-- Always provide a value for the exclude_apps hidden field
       if only_apps param is not present. -->
  <input type="hidden" name="exclude_apps" value="{$exclude_apps}" />
</xsl:if>

<xsl:if test="$search_collections_xslt = '' and PARAM[@name='site']">
  <input type="hidden" name="site" value="{PARAM[@name='site']/@value}"/>
</xsl:if>
<xsl:if test="$res_title_length != $res_title_length_default">
  <input type="hidden" name="tlen" value="{$res_title_length}"/>
</xsl:if>

  <input type="hidden" name="filter" value="0" />

</xsl:template>

<!-- *** original query without any dynamic navigation filters *** -->
<xsl:variable name="qval">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[@name='dnavs']">
    <xsl:value-of select="concat(substring-before(/GSP/Q,
      /GSP/PARAM[@name='dnavs']/@value), ' ', substring-after(/GSP/Q,
      /GSP/PARAM[@name='dnavs']/@value))"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="/GSP/Q"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<xsl:variable name="original_q">
<xsl:choose>
  <xsl:when test="count(/GSP/PARAM[@name='dnavs']) > 0">
    <xsl:value-of
      select="substring-before(/GSP/PARAM[@name='q']/@original_value,
      concat('+', /GSP/PARAM[@name='dnavs']/@original_value))"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="/GSP/PARAM[@name='q']/@original_value"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** space_normalized_query: q = /GSP/Q *** -->
<xsl:variable name="space_normalized_query">
<xsl:value-of select="normalize-space($qval)"
  disable-output-escaping="yes"/>
</xsl:variable>

<!-- *** stripped_search_query: q, as_q, ... for cache highlight *** -->
<xsl:variable name="stripped_search_query"><xsl:for-each
select="/GSP/PARAM[(@name = 'q') or
                   (@name = 'as_q') or
                   (@name = 'as_oq') or
                   (@name = 'as_epq')]"><xsl:value-of select="@original_value"
/><xsl:if test="position() != last()"
  ><xsl:text disable-output-escaping="yes">+</xsl:text
   ></xsl:if></xsl:for-each>
</xsl:variable>
<xsl:variable name="stripped_sanitized_search_query">
<xsl:call-template name="js_escape">
  <xsl:with-param name="string" select="$stripped_search_query"/>
  <xsl:with-param name="slash_mode" select='"0"'/>
</xsl:call-template>
</xsl:variable>

<xsl:variable name="access">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[(@name='access') and ((@value='s') or (@value='a'))]">
    <xsl:value-of select="/GSP/PARAM[@name='access']/@original_value"/>
  </xsl:when>
  <xsl:otherwise>p</xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- **********************************************************************
Script to get current page.
   ********************************************************************** -->
<xsl:template name="search_home_script">
<script type="text/javascript">
function getHomeUrl() {
  return location.href = "/ealerts?shu=" + escape(document.location.href);
}
</script>
</xsl:template>

<!-- **********************************************************************
Shown sign-in/sign-out links at the top of the /search page
   ********************************************************************** -->

<xsl:template name="sign_in">
  <xsl:call-template name="search_home_script"/>
  <div class="personalization" width="100%" align="right">
   <xsl:text disable-output-escaping='yes'>&lt;a href='javascript:getHomeUrl();'&gt;My Alerts&lt;/a&gt;</xsl:text>
  </div>
</xsl:template>

<xsl:template name="signed_in">
<xsl:call-template name="search_home_script"/>
<div class="personalization" width="100%" align="right">
  <b><xsl:value-of select="/GSP/LOGIN" /></b> |
   <xsl:text disable-output-escaping='yes'>&lt;a href='javascript:getHomeUrl();'&gt;My Alerts&lt;/a&gt;</xsl:text> |
   <xsl:text disable-output-escaping='yes'>&lt;a href='/uam?action=Logout'&gt;Sign Out&lt;/a&gt;</xsl:text>
</div>
</xsl:template>

<xsl:template name="personalization">
<xsl:if test="$show_alerts2 = '1'">
<xsl:choose>
 <xsl:when test="/GSP/PERSONALIZATION">
  <xsl:choose>
    <xsl:when test="/GSP/LOGIN"><xsl:call-template name="signed_in"/></xsl:when>
    <xsl:otherwise><xsl:call-template name="sign_in" /></xsl:otherwise>
  </xsl:choose>
 </xsl:when>
</xsl:choose>
</xsl:if>
</xsl:template>

<xsl:template name="doc_type">
<xsl:text disable-output-escaping="yes">
&lt;!DOCTYPE html&gt;
</xsl:text>
</xsl:template>

<!-- **********************************************************************
Figure out what kind of page this is (do not customize)
   ********************************************************************** -->
<xsl:template match="GSP">
<xsl:choose>
  <!-- Expert Search - return the expert search results for widget view
       if the current query is for the same. -->
  <xsl:when test="$show_expert_search_widget_view_results = '1'">
    <xsl:call-template name="render_expert_search_results">
      <xsl:with-param name="src_prefix"
          select="concat($gsa_search_root_path_prefix, '?')" />
      <xsl:with-param name="current_search_query_args"
          select="$search_url" />
      <xsl:with-param name="msg_expert_search_no_experts_found"
          select="$msg_expert_search_no_experts_found" />
      <xsl:with-param name="msg_expert_search_switch_to_expanded_mode"
          select="$msg_expert_search_switch_to_expanded_mode" />
      <xsl:with-param name="msg_results_page_number_prefix"
          select="$msg_results_page_number_prefix" />
      <xsl:with-param name="msg_go_to_previous_page"
          select="$msg_go_to_previous_page" />
      <xsl:with-param name="msg_go_to_next_page"
          select="$msg_go_to_next_page" />
      <xsl:with-param name="msg_previous_page_action"
          select="$msg_previous_page_action" />
      <xsl:with-param name="msg_next_page_action"
          select="$msg_next_page_action" />
    </xsl:call-template>
  </xsl:when>
  <xsl:when test="$only_apps = '1' and $show_apps_segmented_ui = '1'">
    <xsl:call-template name="apps_only_search_results"/>
  </xsl:when>
  <xsl:when test="Q">
    <xsl:choose>
      <xsl:when test="($swrnum != 0) or
        (($swrnum = '-1') and (($access = 'a') or ($access = 's')))">
        <xsl:call-template name="swr_search"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="search_results"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:when>
  <xsl:when test="CACHE">
    <xsl:choose>
      <xsl:when test="$show_res_cache!='0'">
        <xsl:call-template name="cached_page"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="no_RES"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:when>
  <xsl:when test="CUSTOM/HOME">
    <xsl:call-template name="front_door"/>
  </xsl:when>
  <xsl:when test="CUSTOM/ADVANCED">
    <xsl:call-template name="advanced_search"/>
  </xsl:when>
  <xsl:when test="ERROR">
    <xsl:call-template name="error_page">
      <xsl:with-param name="errorMessage" select="$server_error_msg_text"/>
      <xsl:with-param name="errorDescription" select="$server_error_des_text"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:call-template name="error_page">
      <xsl:with-param name="errorMessage" select="$xml_error_msg_text"/>
      <xsl:with-param name="errorDescription" select="$xml_error_des_text"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<!-- **********************************************************************
Cached page (do not customize)
   ********************************************************************** -->
<xsl:template name="cached_page">
<xsl:variable name="cached_page_url" select="CACHE/CACHE_URL"/>
<xsl:variable name="cached_page_html" select="CACHE/CACHE_HTML"/>

<!-- *** decide whether to load html page or pdf file *** -->
<xsl:if test="'.pdf' != substring($cached_page_url,
            1 + string-length($cached_page_url) - string-length('.pdf')) and
            not(starts-with($cached_page_url, $db_url_protocol)) and
            not(starts-with($cached_page_url, $nfs_url_protocol)) and
            not(starts-with($cached_page_url, $smb_url_protocol)) and
            not(starts-with($cached_page_url, $unc_url_protocol))">
  <base href="{$cached_page_url}"/>
</xsl:if>

<!-- *** display cache page header *** -->
<xsl:call-template name="cached_page_header">
<xsl:with-param name="cached_page_url" select="$cached_page_url"/>
</xsl:call-template>

<!-- *** display cached contents *** -->
<xsl:value-of select="$cached_page_html" disable-output-escaping="yes"/>
</xsl:template>

<xsl:template name="escape_quot">
<xsl:param name="string"/>
<xsl:call-template name="replace_string">
  <xsl:with-param name="find" select="'&quot;'"/>
  <xsl:with-param name="replace" select="'&amp;quot;'"/>
  <xsl:with-param name="string" select="$string"/>
</xsl:call-template>
</xsl:template>

<!-- Escapes single quote, double quotes, < and > characters. -->
<xsl:template name="js_escape">
<xsl:param name="string"/>
<xsl:param name="slash_mode"/>
<xsl:variable name="without_slash">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select='"\"'/>
    <xsl:with-param name="replace" select='"\\"'/>
    <xsl:with-param name="string" select="$string"/>
  </xsl:call-template>
</xsl:variable>
<xsl:choose>
  <xsl:when test="$slash_mode = '1'">
    <xsl:variable name="without_slash_apos">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select='"&apos;"'/>
        <xsl:with-param name="replace" select='"\&apos;"'/>
        <xsl:with-param name="string" select="$without_slash"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="without_slash_apos_double_quotes">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select="'&quot;'"/>
        <xsl:with-param name="replace" select="'\&quot;'"/>
        <xsl:with-param name="string" select="$without_slash_apos"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="without_slash_apos_double_quotes_lt">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select='"&lt;"'/>
        <xsl:with-param name="replace" select='"\&lt;"'/>
        <xsl:with-param name="string"
            select="$without_slash_apos_double_quotes"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select='"&gt;"'/>
      <xsl:with-param name="replace" select='"\&gt;"'/>
      <xsl:with-param name="string"
        select="$without_slash_apos_double_quotes_lt"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:variable name="without_slash_apos">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select='"&apos;"'/>
        <xsl:with-param name="replace" select='"&amp;apos;"'/>
        <xsl:with-param name="string" select="$without_slash"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="without_slash_apos_double_quotes">
      <xsl:call-template name="escape_quot">
        <xsl:with-param name="string" select="$without_slash_apos"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="without_slash_apos_double_quotes_lt">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select='"&lt;"'/>
        <xsl:with-param name="replace" select='"&amp;lt;"'/>
        <xsl:with-param name="string"
          select="$without_slash_apos_double_quotes"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select='"&gt;"'/>
      <xsl:with-param name="replace" select='"&amp;gt;"'/>
      <xsl:with-param name="string"
        select="$without_slash_apos_double_quotes_lt"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<!-- **********************************************************************
Advanced search page (do not customize)
   ********************************************************************** -->
<xsl:template name="advanced_search">

<xsl:variable name="html_escaped_as_q">
  <xsl:call-template name="escape_quot">
    <xsl:with-param name="string">
      <xsl:choose>
        <xsl:when test="/GSP/PARAM[@name='dnavs']">
          <xsl:value-of select="substring-before(/GSP/PARAM[@name='q']/@value,
            /GSP/PARAM[@name='dnavs']/@value)"/>
        </xsl:when>
        <xsl:otherwise><xsl:value-of select="/GSP/PARAM[@name='q']/@value"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:with-param>
  </xsl:call-template>
  <xsl:if test="/GSP/PARAM[@name='as_q']/@value">
    <xsl:if test="/GSP/PARAM[@name='q']/@value"> 
      <xsl:value-of select="' '"/>
    </xsl:if>
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_q']/@value"/>
    </xsl:call-template>
  </xsl:if>
</xsl:variable>

<xsl:variable name="html_escaped_as_epq">
  <xsl:call-template name="escape_quot">
    <xsl:with-param name="string" select="/GSP/PARAM[@name='as_epq']/@value"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="html_escaped_as_oq">
  <xsl:call-template name="escape_quot">
    <xsl:with-param name="string" select="/GSP/PARAM[@name='as_oq']/@value"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="html_escaped_as_eq">
  <xsl:call-template name="escape_quot">
    <xsl:with-param name="string" select="/GSP/PARAM[@name='as_eq']/@value"/>
  </xsl:call-template>
</xsl:variable>

<html>
<xsl:attribute name="class">
	<xsl:value-of select="$skin_class"/>
</xsl:attribute>
<xsl:call-template name="langHeadStart"/>
<title><xsl:value-of select="$adv_page_title"/></title>
<xsl:call-template name="style"/>

<!-- script type="text/javascript" -->
<script>
<xsl:comment>
function setFocus() {
document.f.as_q.focus(); }
function esc(x){
x = escape(x).replace(/\+/g, "%2b");
if (x.substring(0,2)=="\%u") x="";
return x;
}
function collecturl(target, custom) {
var p = new Array();var i = 0;var url="";var z = document.f;
if (z.as_q.value.length) {p[i++] = 'as_q=' + esc(z.as_q.value);}
if (z.as_epq.value.length) {p[i++] = 'as_epq=' + esc(z.as_epq.value);}
if (z.as_oq.value.length) {p[i++] = 'as_oq=' + esc(z.as_oq.value);}
if (z.as_eq.value.length) {p[i++] = 'as_eq=' + esc(z.as_eq.value);}
if (z.as_sitesearch.value.length)
{p[i++]='as_sitesearch='+esc(z.as_sitesearch.value);}
if (z.as_lq.value.length) {p[i++] = 'as_lq=' + esc(z.as_lq.value);}
if (z.as_occt.options[z.as_occt.selectedIndex].value.length)
{p[i++]='as_occt='+esc(z.as_occt.options[z.as_occt.selectedIndex].value);}
if (z.as_dt.options[z.as_dt.selectedIndex].value.length)
{p[i++]='as_dt='+esc(z.as_dt.options[z.as_dt.selectedIndex].value);}
if (z.lr.options[z.lr.selectedIndex].value != '') {p[i++] = 'lr=' +
z.lr.options[z.lr.selectedIndex].value;}
if (z.num.options[z.num.selectedIndex].value != '10')
{p[i++] = 'num=' + z.num.options[z.num.selectedIndex].value;}
if (z.sort.options[z.sort.selectedIndex].value != '')
{p[i++] = 'sort=' + z.sort.options[z.sort.selectedIndex].value;}
if (typeof(z.client) != 'undefined')
{p[i++] = 'client=' + esc(z.client.value);}
if (typeof(z.site) != 'undefined')
{p[i++] = 'site=' + esc(z.site.value);}
if (typeof(z.output) != 'undefined')
{p[i++] = 'output=' + esc(z.output.value);}
if (typeof(z.proxystylesheet) != 'undefined')
{p[i++] = 'proxystylesheet=' + esc(z.proxystylesheet.value);}
if (typeof(z.ie) != 'undefined')
{p[i++] = 'ie=' + esc(z.ie.value);}
if (typeof(z.oe) != 'undefined')
{p[i++] = 'oe=' + esc(z.oe.value);}

if (typeof(z.access) != 'undefined')
{p[i++] = 'access=' + esc(z.access.value);}
if (custom != '')
{p[i++] = 'proxycustom=' + '&lt;ADVANCED/&gt;';}
if (p.length &gt; 0) {
url = p[0];
for (var j = 1; j &lt; p.length; j++) { url += "&amp;" + p[j]; }}
location.href = target + '?' + url;
}
// </xsl:comment>
</script>

<xsl:call-template name="langHeadEnd"/>

<body onload="setFocus()">
	<xsl:attribute name="class">
	<xsl:value-of select="'clearfix'"/>
	<xsl:text>&#160;</xsl:text>
	<xsl:value-of select="$skin_class"/>
	</xsl:attribute>
	<xsl:attribute name="dir">ltr</xsl:attribute>
  <div id="container" class="schoolpage">
  <!-- *** Customer's own advanced search page header *** -->
  <xsl:if test="$choose_adv_search_page_header = 'mine' or
                  $choose_adv_search_page_header = 'both'">
    <xsl:call-template name="header_element"/>
	<xsl:call-template name="main_content_wrapper_start"/>
  </xsl:if>
  <div class="main-content">
  <xsl:call-template name="personalization"/>
  <xsl:call-template name="analytics"/>

  <!--====Advanced Search Header======-->
  <xsl:if test="$choose_adv_search_page_header = 'provided' or
                  $choose_adv_search_page_header = 'both'">
    <xsl:call-template name="advanced_search_header"/>
  </xsl:if>
  <xsl:call-template name="top_sep_bar">
    <xsl:with-param name="text" select="$sep_bar_adv_text"/>
    <xsl:with-param name="show_info" select="0"/>
    <xsl:with-param name="time" select="0"/>
  </xsl:call-template>

  <!--====Carry over Search Parameters======-->
  <form method="get" action="search" name="f">
    <xsl:if test="PARAM[@name='client']">
      <input type="hidden" name="client"
        value="{PARAM[@name='client']/@value}" />
    </xsl:if>
  <!--==== site is carried over in the drop down if the menu is used =====-->
    <xsl:if test="$search_collections_xslt = '' and PARAM[@name='site']">
      <input type="hidden" name="site" value="{PARAM[@name='site']/@value}"/>
    </xsl:if>
    <xsl:if test="PARAM[@name='output']">
      <input type="hidden" name="output"
        value="{PARAM[@name='output']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='proxystylesheet']">
      <input type="hidden" name="proxystylesheet"
        value="{PARAM[@name='proxystylesheet']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='ie']">
      <input type="hidden" name="ie"
        value="{PARAM[@name='ie']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='oe']">
      <input type="hidden" name="oe"
        value="{PARAM[@name='oe']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='hl']">
      <input type="hidden" name="hl"
        value="{PARAM[@name='hl']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='getfields']">
      <input type="hidden" name="getfields"
        value="{PARAM[@name='getfields']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='requiredfields']">
      <input type="hidden" name="requiredfields"
        value="{PARAM[@name='requiredfields']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='partialfields']">
      <input type="hidden" name="partialfields"
        value="{PARAM[@name='partialfields']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='exclude_apps']">
      <input type="hidden" name="exclude_apps"
        value="{PARAM[@name='exclude_apps']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='only_apps']">
      <input type="hidden" name="only_apps"
        value="{PARAM[@name='only_apps']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='ulang']">
      <input type="hidden" name="ulang"
        value="{PARAM[@name='ulang']/@value}" />
    </xsl:if>

    <!--====Advanced Search Options======-->
    <div id="advanced-search-options-div">
      
    </div>
    <table cellspacing="0" cellpadding="3" border="0" width="100%">
      <tr bgcolor="{$adv_search_panel_bgcolor}">
        <td>
          <table width="100%" cellspacing="0" cellpadding="0" border="0">
            <tr bgcolor="{$adv_search_panel_bgcolor}">
              <td>
                <table width="100%" cellspacing="0" cellpadding="2"
                border="0">
                  <tr>
                    <td valign="top" width="15%"><br />
                    <b>Find results</b></td>

                    <td width="85%">
                      <table width="100%" cellpadding="2"
                      border="0" cellspacing="0">
                        <tr>
                          <td><font size="-1">with <b>all</b> of the words</font></td>

                          <td>
                          <xsl:text disable-output-escaping="yes">
                           &lt;input type=&quot;text&quot;
                           name=&quot;as_q&quot;
                           size=&quot;25&quot; value=&quot;</xsl:text>
                          <xsl:value-of disable-output-escaping="yes"
                           select="$html_escaped_as_q"/>
                          <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>

                          <script type="text/javascript">
                            <xsl:comment>
                              document.f.as_q.focus();
                            // </xsl:comment>
                          </script>
                          </td>

                          <td valign="top" rowspan="4">
                          <font size="-1">
                          <select name="num">
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value!='10')]">
                                <option value="10">10 results</option>
                              </xsl:when>
                              <xsl:otherwise>
                                <option value="10" selected="selected">10 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value='20')]">
                                <option value="20" selected="selected">20 results</option>
                              </xsl:when>
                                <xsl:otherwise>
                                  <option value="20">20 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value='30')]">
                                <option value="30" selected="selected">30 results</option>
                              </xsl:when>
                              <xsl:otherwise>
                                <option value="30">30 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value='50')]">
                                <option value="50" selected="selected">50 results</option>
                              </xsl:when>
                              <xsl:otherwise>
                                <option value="50">50 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value='100')]">
                                <option value="100" selected="selected">100 results</option>
                              </xsl:when>
                              <xsl:otherwise>
                                <option value="100">100 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                          </select>
                          </font>
                          </td>
                          <xsl:call-template name="collection_menu"/>
                          <td>
                          <font size="-1">
                          <input type="submit" name="btnG"
                            value="{$search_button_text}" />
                          </font>
                          </td>
                        </tr>

                        <tr>
                          <td nowrap="nowrap"><font size="-1">with the <b>exact phrase</b></font></td>

                          <td>
                          <xsl:text disable-output-escaping="yes">

                           &lt;input type=&quot;text&quot;
                           name=&quot;as_epq&quot;
                           size=&quot;25&quot; value=&quot;</xsl:text>
                          <xsl:value-of disable-output-escaping="yes"
                           select="$html_escaped_as_epq"/>
                          <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                          </td>
                        </tr>

                        <tr>
                          <td nowrap="nowrap"><font size="-1">with <b>at least one</b> of the words</font></td>

                          <td>
                          <xsl:text disable-output-escaping="yes">

                           &lt;input type=&quot;text&quot;
                           name=&quot;as_oq&quot;
                           size=&quot;25&quot; value=&quot;</xsl:text>
                          <xsl:value-of disable-output-escaping="yes"
                           select="$html_escaped_as_oq"/>
                          <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                          </td>
                        </tr>

                        <tr>
                          <td nowrap="nowrap"><font size="-1"><b>without</b> the words</font></td>

                          <td>
                          <xsl:text disable-output-escaping="yes">

                           &lt;input type=&quot;text&quot;
                           name=&quot;as_eq&quot;
                           size=&quot;25&quot; value=&quot;</xsl:text>
                          <xsl:value-of disable-output-escaping="yes"
                           select="$html_escaped_as_eq"/>
                          <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                          </td>
                        </tr>
                      </table>
                    </td>
                  </tr>
                </table>
              </td>
            </tr>

            <tr bgcolor="{$global_bg_color}">
              <td>
                <table width="100%" cellspacing="0"
                cellpadding="2" border="0">
                  <tr>
                    <td width="15%"><font size="-1"><b>Language</b></font></td>

                    <td width="40%"><font size="-1">Return pages written in</font></td>

                    <td><font size="-1">



                       <xsl:choose>
                      <xsl:when test="PARAM[(@name='oe') and (@value!='')]">
                        <xsl:text disable-output-escaping="yes">&lt;select name=&quot;lr&quot;&gt;</xsl:text>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text disable-output-escaping="yes">&lt;select name=&quot;lr&quot; onchange=&quot;javascript:collecturl('search', 'adv');&quot;&gt;</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>

                      <option value="">any language</option>

                      <!--====IMPORTANT: This is not a Message. This is a placeholder.======-->
                      
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ar')]">
     <option value="lang_ar"
     selected="selected">Arabic</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ar">Arabic</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-CN')]">
     <option value="lang_zh-CN"
     selected="selected">Chinese (Simplified)</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_zh-CN">Chinese (Simplified)</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-TW')]">
     <option value="lang_zh-TW"
     selected="selected">Chinese (Traditional)</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_zh-TW">Chinese (Traditional)</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_cs')]">
     <option value="lang_cs"
     selected="selected">Czech</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_cs">Czech</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_da')]">
     <option value="lang_da"
     selected="selected">Danish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_da">Danish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_nl')]">
     <option value="lang_nl"
     selected="selected">Dutch</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_nl">Dutch</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_en')]">
     <option value="lang_en"
     selected="selected">English</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_en">English</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_et')]">
     <option value="lang_et"
     selected="selected">Estonian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_et">Estonian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_fi')]">
     <option value="lang_fi"
     selected="selected">Finnish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_fi">Finnish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_fr')]">
     <option value="lang_fr"
     selected="selected">French</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_fr">French</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_de')]">
     <option value="lang_de"
     selected="selected">German</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_de">German</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_el')]">
     <option value="lang_el"
     selected="selected">Greek</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_el">Greek</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_iw')]">
     <option value="lang_iw"
     selected="selected">Hebrew</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_iw">Hebrew</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_hu')]">
     <option value="lang_hu"
     selected="selected">Hungarian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_hu">Hungarian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_is')]">
     <option value="lang_is"
     selected="selected">Icelandic</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_is">Icelandic</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_it')]">
     <option value="lang_it"
     selected="selected">Italian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_it">Italian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ja')]">
     <option value="lang_ja"
     selected="selected">Japanese</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ja">Japanese</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ko')]">
     <option value="lang_ko"
     selected="selected">Korean</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ko">Korean</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_lv')]">
     <option value="lang_lv"
     selected="selected">Latvian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_lv">Latvian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_lt')]">
     <option value="lang_lt"
     selected="selected">Lithuanian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_lt">Lithuanian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_no')]">
     <option value="lang_no"
     selected="selected">Norwegian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_no">Norwegian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_pl')]">
     <option value="lang_pl"
     selected="selected">Polish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_pl">Polish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_pt')]">
     <option value="lang_pt"
     selected="selected">Portuguese</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_pt">Portuguese</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ro')]">
     <option value="lang_ro"
     selected="selected">Romanian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ro">Romanian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ru')]">
     <option value="lang_ru"
     selected="selected">Russian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ru">Russian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_es')]">
     <option value="lang_es"
     selected="selected">Spanish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_es">Spanish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_sv')]">
     <option value="lang_sv"
     selected="selected">Swedish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_sv">Swedish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_tr')]">
     <option value="lang_tr"
     selected="selected">Turkish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_tr">Turkish</option>
     </xsl:otherwise>
    </xsl:choose>


                    <xsl:text disable-output-escaping="yes">&lt;/select&gt;</xsl:text>
                    </font></td>
                  </tr>
                </table>
              </td>
            </tr>

            <tr bgcolor="{$global_bg_color}">
              <td>
                <table width="100%" cellpadding="2"
                cellspacing="0" border="0">
                  <tr>
                    <td width="15%"><font size="-1"><b>File Format</b></font></td>

                    <td width="40%" nowrap="nowrap"><font size="-1"><select name="as_ft">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_ft') and (@value='i')]">
                          <option value="i" selected="selected">Only</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="i">Only</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_ft') and (@value='e')]">
                          <option value="e" selected="selected">Don't</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="e">Don't</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select>return results of the file format</font>
                    </td>

                    <td><font size="-1">
                    <select name="as_filetype">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value!='')]">
                          <option value="">any format</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="" selected="selected">any format</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='pdf')]">
                          <option value="pdf" selected="selected">Adobe Acrobat PDF (.pdf)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="pdf">Adobe Acrobat PDF (.pdf)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='ps')]">
                          <option value="ps" selected="selected">Adobe Postscript (.ps)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="ps">Adobe Postscript (.ps)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='doc')]">
                          <option value="doc" selected="selected">Microsoft Word (.doc)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="doc">Microsoft Word (.doc)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='docx')]">
                          <option value="docx" selected="selected">Microsoft Word (.docx)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="docx">Microsoft Word (.docx)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='xls')]">
                          <option value="xls" selected="selected">Microsoft Excel (.xls)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="xls">Microsoft Excel (.xls)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='xlsx')]">
                          <option value="xlsx" selected="selected">Microsoft Excel (.xlsx)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="xlsx">Microsoft Excel (.xlsx)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='ppt')]">
                          <option value="ppt" selected="selected">Microsoft Powerpoint (.ppt)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="ppt">Microsoft Powerpoint (.ppt)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='pptx')]">
                          <option value="pptx" selected="selected">Microsoft Powerpoint (.pptx)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="pptx">Microsoft Powerpoint (.pptx)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='rtf')]">
                          <option value="rtf" selected="selected">Rich Text Format (.rtf)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="rtf">Rich Text Format (.rtf)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select>
                    </font></td>
                  </tr>
                </table>
              </td>
            </tr>

            <tr bgcolor="{$global_bg_color}">
              <td>
                <table width="100%" cellspacing="0"
                cellpadding="2" border="0">
                  <tr>
                    <td width="15%"><font size="-1"><b>Occurrences</b></font></td>

                    <td nowrap="nowrap" width="40%"><font size="-1">Return results where my terms occur</font></td>

                    <td><font size="-1"><select
                    name="as_occt">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_occt') and (@value!='any')]">
                          <option value="any"> anywhere in the page </option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="any" selected="selected">
                            anywhere in the page
                          </option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_occt') and (@value='title')]">
                          <option value="title" selected="selected">in the title of the page</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="title">in the title of the page</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_occt') and (@value='url')]">
                          <option value="url" selected="selected">in the URL of the page</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="url">in the URL of the page</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select></font></td>
                  </tr>
                </table>
              </td>
            </tr>

            <tr bgcolor="{$global_bg_color}">
              <td>
                <table width="100%" cellpadding="2"
                cellspacing="0" border="0">
                  <tr>
                    <td width="15%"><font size="-1"><b>Domain</b></font></td>

                    <td width="40%" nowrap="nowrap"><font size="-1"><select
                    name="as_dt">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_dt') and (@value='i')]">
                          <option value="i" selected="selected">Only</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="i">Only</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_dt') and (@value='e')]">
                          <option value="e" selected="selected">Don't</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="e">Don't</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select>return results from the site or domain</font></td>

                    <td>
                      <table cellpadding="0" cellspacing="0"
                      border="0">
                        <tr>
                          <td>
                            <xsl:choose>
                              <xsl:when test="PARAM[@name='as_sitesearch']">
                                <input type="text" size="25"
                                value="{PARAM[@name='as_sitesearch']/@value}"
                                name="as_sitesearch" />
                              </xsl:when>
                              <xsl:otherwise>
                                <input type="text" size="25" value="" name="as_sitesearch" />
                              </xsl:otherwise>
                            </xsl:choose>
                          </td>
                        </tr>

                        <tr>
                          <td valign="top" nowrap="nowrap"><font size="-1">
                            <i>e.g. google.com, .org</i></font></td>
                        </tr>
                      </table>
                    </td>
                  </tr>

                  <!-- Sort by Date feature -->
                  <tr>
                    <td width="15%"><font size="-1"><b>Sort</b></font></td>

                    <td colspan="2" nowrap="nowrap"><font size="-1"><select
                    name="sort">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='sort') and (@value='')]">
                          <option value="" selected="selected">Sort by relevance</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="">Sort by relevance</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='sort') and (@value='date:D:S:d1')]">
                          <option value="date:D:S:d1" selected="selected">Sort by date</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="date:D:S:d1">Sort by date</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select></font></td>
                  </tr>
                  <!-- Secure Search feature -->
                  <xsl:if test="$show_secure_radio != '0'">

                  <tr>
                    <td width="15%"><font size="-1"><b>Security</b></font></td>

                    <td colspan="2" nowrap="nowrap"><font size="-1">
                      <xsl:choose>
                        <xsl:when test="$access='p'">
                          <label><input type="radio" name="access" value="p" checked="checked" />Search public content only</label>
                        </xsl:when>
                      <xsl:otherwise>
                        <label><input type="radio" name="access" value="p"/>Search public content only</label>
                      </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$access='a'">
                          <label><input type="radio" name="access" value="a" checked="checked" />Search public and secure content (login required)</label>
                        </xsl:when>
                      <xsl:otherwise>
                        <label><input type="radio" name="access" value="a"/>Search public and secure content (login required)</label>
                      </xsl:otherwise>
                      </xsl:choose>
                    </font></td>
                  </tr>
                  </xsl:if>
                </table>
              </td>
            </tr>

          </table>
        </td>
      </tr>
    </table>
    <br />
    <br />

    <!--====Page-Specific Search======-->
    <div id="page-specific-search-div">
      <b>Page-Specific Search</b>
    </div>
    <table cellspacing="0" cellpadding="3" border="0" width="100%">
      <tr bgcolor="{$adv_search_panel_bgcolor}">
        <td>
          <table width="100%" cellpadding="0" cellspacing="0"
          border="0">
            <tr bgcolor="{$adv_search_panel_bgcolor}">
              <td>

                <table width="100%" cellpadding="2"
                cellspacing="0" border="0">
                <form method="get" action="search" name="h">

                  <tr bgcolor="{$global_bg_color}">
                    <td width="15%"><font size="-1"><b>Links</b></font></td>

                    <td width="40%" nowrap="nowrap"><font size="-1">Find pages that link to the page</font> </td>

                    <td nowrap="nowrap">
                        <xsl:choose>
                          <xsl:when test="PARAM[@name='as_lq']">
                            <input type="text" size="30"
                             value="{PARAM[@name='as_lq']/@value}"
                                     name="as_lq" />
                        </xsl:when>
                        <xsl:otherwise>
                          <input type="text" size="30" value="" name="as_lq" />
                        </xsl:otherwise>
                      </xsl:choose>
                      <font size="-1">
                      <input type="submit" name="btnG" value="{$search_button_text}" /></font>
                    </td>
                  </tr>
                </form>
                </table>
              </td>
            </tr>
          </table>
        </td>
      </tr>
    </table>

    <xsl:call-template name="copyright"/>

  </form>

  <!-- *** Customer's own advanced search page footer *** -->
</div>
<xsl:call-template name="footer_element"/>
<!-- *** Customer's own advanced search page header *** -->
  <xsl:if test="$choose_adv_search_page_header = 'mine' or
                  $choose_adv_search_page_header = 'both'">
	<xsl:call-template name="main_content_wrapper_end"/>
  </xsl:if>
</div>
</body>
</html>
</xsl:template>

<!-- **********************************************************************
Resend query with filter=p to disable path_filtering
if there is only one result cluster (do not customize)
   ********************************************************************** -->
<xsl:template name="redirect_if_few_results">
<xsl:variable name="count" select="count(/GSP/RES/R)"/>
<xsl:variable name="start" select="/GSP/RES/@SN"/>
<xsl:variable name="filterall"
  select="count(/GSP/PARAM[@name='filter']) = 0"/>
<xsl:variable name="filter" select="/GSP/PARAM[@name='filter']/@value"/>

</xsl:template>

<!-- **********************************************************************
Google Apps search results (do not customize)
   ********************************************************************** -->
<xsl:template name="apps_only_search_results">
<html>
	<xsl:attribute name="class">
	<xsl:value-of select="$skin_class"/>
	</xsl:attribute>
<script>
  <xsl:comment>
    /**
     * Initializes the Google Apps results section by notifying the parent
     * document containing the iframe container. The results are passed to
     * the parent iframe container so that it can display the same in the
     * 'div' section reserved for Google Apps results section.
     */
    function initGoogleApps() {
      <xsl:choose>
        <xsl:when test="RES/R">
          var isNextRes = '<xsl:value-of select="/GSP/RES/NB/NU" />';
          var isPrevRes = '<xsl:value-of select="/GSP/RES/NB/PU" />';
          var topNavHtml =
              document.getElementById('top-navigation-html').innerHTML;
          var btmNavHtml =
              document.getElementById('bottom-navigation-html').innerHTML;
          var btmSearchBoxHtml =
              document.getElementById('bottom-search-box-html').innerHTML;
          var resultsDiv = document.getElementById('apps-results-container');
          var resultsContent = resultsDiv.innerHTML;
          resultsDiv.innerHTML = '';
          window.parent.displayGoogleAppsResults(
              true, resultsContent, isNextRes, isPrevRes, topNavHtml,
              btmNavHtml, btmSearchBoxHtml);
        </xsl:when>
        <xsl:otherwise>
          window.parent.displayGoogleAppsResults(false);
        </xsl:otherwise>
      </xsl:choose>
    }
  </xsl:comment>
</script>
<xsl:variable name="only_apps_onload">
  <xsl:if test="not(/GSP/PARAM[(@name='only_apps_deb') and (@value='1')])">
    <xsl:text disable-output-escaping="yes">initGoogleApps();</xsl:text>
  </xsl:if>
</xsl:variable>
<body onload="{$only_apps_onload}">
	<xsl:attribute name="class">
	<xsl:value-of select="'clearfix'"/>
	<xsl:text>&#160;</xsl:text>
	<xsl:value-of select="$skin_class"/>
	</xsl:attribute>
<div id="container" class="schoolpage">
<div id="apps-results-container main-content">
  <div>
    <div class="sb-r-lbl-apps">Google Apps</div>
    <div>
      <xsl:apply-templates select="RES/R">
        <xsl:with-param name="query" select="Q"/>
      </xsl:apply-templates>

      <xsl:if test="RES/R">
        <div style="display: none;" id="top-navigation-html">
          <xsl:if test="$show_top_navigation != '0'">
            <xsl:call-template name="gen_top_navigation" />
          </xsl:if>
        </div>

        <div style="display: none;" id="bottom-navigation-html">
          <xsl:call-template name="gen_bottom_navigation" />
        </div>

        <div style="display: none;" id="bottom-search-box-html">
          <xsl:if test="$show_bottom_search_box != '0' and RES">
            <xsl:call-template name="bottom_search_box"/>
          </xsl:if>
        </div>
      </xsl:if>
    </div>
  </div>
</div>
</div>
</body>
</html>
</xsl:template>

<!-- **********************************************************************
Search results (do not customize)
   ********************************************************************** -->
<xsl:template name="search_results">
<xsl:call-template name="doc_type"/>
<xsl:if test="$is_embedded_mode != '1'">
<xsl:text disable-output-escaping="yes">&lt;html class=&quot;</xsl:text><xsl:value-of select="$skin_class"/><xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
</xsl:if>

<!-- *** HTML header and style *** -->
<xsl:call-template name="langHeadStart"/>
<xsl:variable name="res_count" select="count(/GSP/RES/R)"/>
  <xsl:call-template name="redirect_if_few_results"/>
  <xsl:choose>
    <xsl:when test="$res_count &gt; 0">
       <title><xsl:value-of select="$result_page_title"/>:
        <xsl:value-of select="$space_normalized_query"/>
      </title>
    </xsl:when>
    <xsl:otherwise>
      <title><xsl:value-of select="$front_page_title"/>:
        <xsl:value-of select="$space_normalized_query"/>
      </title>
    </xsl:otherwise>
  </xsl:choose> 
  <xsl:call-template name="style"/>
  <xsl:choose>
    <xsl:when test="$render_dynamic_navigation = '1' and $show_translation = '1'">
      <script type="text/javascript"
          src="{$gsa_resource_root_path_prefix}/all_js_compiled.js"></script>
    </xsl:when>
    <xsl:when test="$render_dynamic_navigation = '1'">
      <script type="text/javascript"
          src="{$gsa_resource_root_path_prefix}/dyn_nav_compiled.js"></script>
    </xsl:when>
  </xsl:choose>

  <xsl:if test="$render_dynamic_navigation = '1'">
    <script type="text/javascript">
      <xsl:variable name="dnavs_param">
        <xsl:if test="/GSP/PARAM[@name='dnavs']"><xsl:value-of
            select="/GSP/PARAM[@name='dnavs']/@original_value"/></xsl:if>
      </xsl:variable>
      var dynNavMgr = new gsa.search.DynNavManager(
        "<xsl:value-of select="$dnavs_param"/>",
        "<xsl:value-of select="/GSP/PARAM[@name='q']/@original_value"/>",
        "<xsl:value-of select='$original_q'/>",
        "<xsl:value-of select='$no_q_dnavs_params_escaped'/>",
        <xsl:value-of select='/GSP/RES/PARM/PC'/>
      );
    </script>
  </xsl:if>
  <script type="text/javascript">
    <xsl:comment>
      <xsl:if test="$show_sidebar = '1'">
        var LEFT_SIDE_RES_CONTAINER = 'left-side-container';
        var LEFT_BORDER_STYLE = 'sb-r-border';

        /** Container element to hold the sidebar. */
        var SIDEBAR_CONTAINER = 'sidebar-container';
        /** Element for holding all sidebar elements. */
        var SIDEBAR = 'sidebar';
        /** Total elements that should be displayed in the sidebar. */
        var totalSidebarEleToDisplay = 0;
        /** Count of sidebar element(s) that has no results after search. */
        var noResultsFromEleCount = 0;

        /**
         * Initializes the sidebar by loading the appropriate sidebar
         * elements.
         */
        function initSidebar() {
          document.getElementById(SIDEBAR).className = '';
          if (!isLeftResultPresent()) {
            var sidebarContainer = document.getElementById(SIDEBAR_CONTAINER);
            document.getElementById(
                LEFT_SIDE_RES_CONTAINER).style.display = 'none';
            sidebarContainer.className = 'sb-r-alt';
          }
          <xsl:if test="$show_people_search = '1'">
            totalSidebarEleToDisplay++;
          </xsl:if>
          <xsl:if test="$show_apps_segmented_ui = '1'">
            totalSidebarEleToDisplay++;
          </xsl:if>
          <xsl:if test="$show_gss_results = '1'">
            totalSidebarEleToDisplay++;
          </xsl:if>
          // Expert Search - count expert search component as sidebar element.
          <xsl:if test="$is_expert_search_configured = '1'">
            totalSidebarEleToDisplay++;
          </xsl:if>
          // Now bootstrap the actual loading.
          <xsl:if test="$show_people_search = '1'">
            loadPeopleSearchResults();
          </xsl:if>
          <xsl:if test="$show_apps_segmented_ui = '1'">
            loadGoogleAppsResults();
          </xsl:if>
          <xsl:if test="$show_gss_results = '1'">
            loadGssResults();
          </xsl:if>
          // Expert Search - initialize the expert search JS component.
          <xsl:call-template name="include_expert_search_js_init">
            <xsl:with-param name="dom_container"
                select="'exp-results-container'" />
            <xsl:with-param name="script_import" select="'0'" />
          </xsl:call-template>
        }

        /**
         * Notifies that the caller sidebar element is not having results to
         * display.
         */
        function notifyNoResults() {
          noResultsFromEleCount++;
          if (noResultsFromEleCount == totalSidebarEleToDisplay) {
            if (!isLeftResultPresent()) {
              var sidebarContainer =
                  document.getElementById(SIDEBAR_CONTAINER);
              sidebarContainer.style.display = 'none';
              document.getElementById('no-results').style.display = '';
              return true;
            }
          }
          return false;
        }

        /**
         * Notifies that the caller sidebar element is having results to
         * display.
         */
        function notifyResultsPresent() {
          var sidebar = document.getElementById(SIDEBAR);
          if (isLeftResultPresent() &amp;&amp;
              sidebar.className != LEFT_BORDER_STYLE) {
            document.getElementById(SIDEBAR).className = LEFT_BORDER_STYLE;
          }
        }

        /**
         * Checks if the organic results on the left side are present or not.
         */
        function isLeftResultPresent() {
          var leftResContainer = document.getElementById(
              LEFT_SIDE_RES_CONTAINER).getElementsByTagName('div')[0];
          return leftResContainer.childNodes.length != 0 ? true : false;
        }
      </xsl:if>
      <xsl:if test="$show_apps_segmented_ui = '1'">
        var APPS_LOADING_MSG = 'loading-app-results';
        var APPS_RESULTS_CONTAINER = 'apps-results-container';
        var APPS_RESULTS_IFRAME = 'apps-results-iframe';
        var APPS_RESULTS_MSG_CONTAINER = 'apps-results-msg';
        var APPS_RESULTS_SECTION = 'apps-results-section';
        var BOTTOM_SEARCH_BOX = 'bottom-search-box';
        var NEXT_RESULTS_IN_NON_APPS =
            '<xsl:value-of select="/GSP/RES/NB/NU" />';
        var ONLY_APPS_QUERY_PARAM = 'only_apps=1';
        var PREV_RESULTS_IN_NON_APPS =
            '<xsl:value-of select="/GSP/RES/NB/PU" />';

        /**
         * Displays Google Apps results returned from the iframe inside the
         * reserved div. This function is called during the onload event
         * processing of iframe.
         */
        function displayGoogleAppsResults(
            display, opt_resultsContent, opt_isNextRes, opt_isPrevRes,
            opt_topNavHtml, opt_btmNavHtml, opt_btmSearchBoxHtml) {
          document.getElementById(APPS_LOADING_MSG).style.display = 'none';
          if (!display) {
            notifyNoResults();
            return;
          }
          notifyResultsPresent();

          // Replace the existing top/bottom navigation bar if Google Apps
          // is having more results and left side container is having
          // no more results.
          if (!NEXT_RESULTS_IN_NON_APPS &amp;&amp; opt_isNextRes ||
              !PREV_RESULTS_IN_NON_APPS &amp;&amp; opt_isPrevRes) {
            document.getElementById('top-navigation').innerHTML =
                opt_topNavHtml;
            document.getElementById('bottom-navigation').innerHTML =
                opt_btmNavHtml;
          }

          var resultsDiv = document.getElementById(APPS_RESULTS_SECTION);
          resultsDiv.innerHTML = opt_resultsContent;
          resultsDiv.style.display = '';
          if (!isLeftResultPresent()) {
            document.getElementById(BOTTOM_SEARCH_BOX).innerHTML =
                opt_btmSearchBoxHtml;
          }
        }

        /**
         * Loads the Google Apps results if 'exclude_apps' query parameter has
         * been set to '1'. Loading of Google Apps results is done by fetching
         * the results through the hidden iframe 'apps-results-iframe' and
         * setting the returned HTML response in the reserved div
         * 'apps-results-section'.
         */
        function loadGoogleAppsResults() {
          var excludeApps = document.getElementsByName('exclude_apps')[0];
          if (excludeApps.value == '1') {
            var resultsDiv = document.getElementById(APPS_RESULTS_SECTION);
            resultsDiv.style.display = 'none';
            document.getElementById(APPS_LOADING_MSG).style.display = '';
            var appsResContainer =
                document.getElementById(APPS_RESULTS_CONTAINER);
            appsResContainer.style.visibility = 'visible';

            // Compose the URL to be loaded in the Google Apps iframe.
            var url = window.location.href;
            if (url.indexOf('exclude_apps=') > -1) {
              url = url.replace(/exclude_apps=./i, ONLY_APPS_QUERY_PARAM);
            } else {
              url += '&amp;' + ONLY_APPS_QUERY_PARAM;
            }

            document.getElementById(APPS_RESULTS_IFRAME).src = url;
          }
        }
      </xsl:if>
      <xsl:if test="$show_gss_results = '1'">
        var GSS_LOADING_MSG = 'loading-gss-results';
        var GSS_RESULTS_MSG_CONTAINER = 'gss-results-msg';
        var GSS_RESULTS_SECTION = 'gss-results-section';
        
        /**
         * Loads the Google Site Search results if it's enabled.
         */
        function loadGssResults() {
          document.getElementById(GSS_LOADING_MSG).style.display = '';
          if (!GSS_JS_API_LOADED) {
            setTimeout('loadGssResults()', 500);
            return;
          }
          var gssControl = new google.search.CustomSearchControl(
              '<xsl:value-of select="$gss_search_engine_id" />');
          gssControl.setResultSetSize(google.search.Search.SMALL_RESULTSET);
          gssControl.setSearchCompleteCallback(this, gssSearchComplete);
          // Set drawing options to use our hidden input box.
          var drawOptions = new google.search.DrawOptions();
          drawOptions.setInput(document.getElementById('gss-hidden-input'));
          gssControl.draw('gss-results-section', drawOptions);
          gssControl.execute('<xsl:value-of select="Q" />');
        }
        
        /**
         * Enables/disables GSS results view based on whether results were
         * returned from GSS or not. This is a callback function that is
         * invoked post receiving response from GSS.
         */
        function gssSearchComplete(searchControl, searcher) {
          document.getElementById(GSS_LOADING_MSG).style.display = 'none';
          if (!searcher.results.length) {
            notifyNoResults();
            return;
          }
          notifyResultsPresent();
          document.getElementById(GSS_RESULTS_SECTION).style.display = '';
          document.getElementById(
              GSS_RESULTS_MSG_CONTAINER).style.display = '';
        }
      </xsl:if>
      <xsl:if test="$show_people_search = '1'">
        var PS_RESULTS_MSG_CONTAINER = 'ps-results-msg';
        var PS_RESULTS_SECTION = 'ps-results-section';
        var PS_LOADING_MSG = 'loading-ps-results';
        var PS_CONTENT_ID = 'people-search-ele';

        /**
         * Loads the people search results if it's enabled.
         */
        function loadPeopleSearchResults() {
          var psEle = document.getElementById(PS_CONTENT_ID);
          if (!psEle) {
            notifyNoResults();
            return;
          }
          notifyResultsPresent();
          psEle.parentNode.removeChild(psEle);
          document.getElementById(
              PS_RESULTS_MSG_CONTAINER).style.display = '';
          var psRes = document.getElementById(PS_RESULTS_SECTION);
          psRes.appendChild(psEle);
          psEle.style.display = '';
          psRes.style.display = '';
        }
      </xsl:if>

      function resetForms() {
        for (var i = 0; i &lt; document.forms.length; i++ ) {
            document.forms[i].reset();
        }
      }

      /**
       * Converts file links from encoded UTF-8 to Unicode, so that Internet
       * Explorer can follow the links correctly
       */
      function fixFileLinks() {
        for (var l = 0; l &lt; document.links.length; ++l) {
          var link = document.links[l];
          if (link.href.indexOf("file://") != 0) {
            continue;
          }

          var s = unescape(link.href);
          var result = "";
          for (var i = 0; i &lt; s.length; ++i) {
            var c = s.charCodeAt(i);
            if (c &gt;&gt; 4 == 12 || c &gt;&gt; 4 == 13) {
              c = ((c &amp; 0x1F) &lt;&lt; 6)
                  + (s.charCodeAt(++i) &amp; 0x3F);
            } else if (c >> 4 == 14) {
              c = ((c &amp; 0x0F) &lt;&lt; 12)
                  + ((s.charCodeAt(++i) &amp; 0x3F) &lt;&lt; 6)
                  + (s.charCodeAt(++i) &amp; 0x3F);
            } else if (c >> 4 == 15) {
              c = ((c &amp; 0x07) &lt;&lt; 18)
                  + ((s.charCodeAt(++i) &amp; 0x3F) &lt;&lt; 12)
                  + ((s.charCodeAt(++i) &amp; 0x3F) &lt;&lt; 6)
                  + (s.charCodeAt(++i) &amp; 0x3F);
            }
            result += String.fromCharCode(c);
          }
          link.href = result;
        }
      }

      // Search query
      var page_query = &quot;<xsl:value-of select="$stripped_sanitized_search_query"/>&quot;
      // Starting page offset, usually 0 for 1st page, 10 for 2nd, 20 for 3rd.
      var page_start = &quot;<xsl:value-of select="/GSP/PARAM[@name='start']/@value"/>&quot;
      // Front end that served the page.
      var page_site = &quot;<xsl:value-of select="/GSP/PARAM[@name='site']/@value"/>&quot;
      //</xsl:comment>
  </script>
<xsl:call-template name="populate_uar_i18n_array"/>
<xsl:call-template name="langHeadEnd"/>
<xsl:call-template name="generate_html_body_for_search_results"/>
<xsl:if test="$is_embedded_mode != '1'">
<xsl:text disable-output-escaping="yes">&lt;/html&gt;</xsl:text>
</xsl:if>
</xsl:template>

<xsl:template name="search_results_body">
<xsl:call-template name="personalization"/>
<xsl:call-template name="analytics"/>

<!-- Send across form parameters that's used in the GSA search form, if we are
     running in embedded mode. This will be transformed to a hidden form in
     the embedding container page and used with the suggest feature. -->
<xsl:if test="$show_suggest = '1' and $is_embedded_mode = '1'">
  <div id="gsaembedmodeformparams" style="display: none;">
    <input type="hidden" name="q" class="q" value="" />
    <xsl:call-template name="form_params" />
  </div>
</xsl:if>

<!-- *** Result page header *** -->
<xsl:if test="$choose_result_page_header = 'provided' or
              $choose_result_page_header = 'both'">
  <xsl:call-template name="result_page_header" />
</xsl:if>

<!-- *** Top separation bar *** -->
  <xsl:if test="Q != ''">
    <xsl:call-template name="top_sep_bar">
      <xsl:with-param name="text" select="$sep_bar_std_text"/>
        <xsl:with-param name="show_info" select="$show_search_info"/>
      <xsl:with-param name="time" select="TM"/>
    </xsl:call-template>
  </xsl:if>

  <!-- *** Handle results (if any) *** -->
  <xsl:choose>
    <!-- Always allow calling results template when sidebar is enabled. -->
    <xsl:when test="$show_sidebar = '1'">
      <xsl:call-template name="results">
        <xsl:with-param name="query" select="Q"/>
        <xsl:with-param name="time" select="TM"/>
      </xsl:call-template>

      <!-- Generates the no results message container. Display this container
           when there are no results on both left side organic results
           container and sidebar. -->
      <div id="no-results" style="display: none;">
        <xsl:call-template name="no_RES">
          <xsl:with-param name="query" select="Q"/>
        </xsl:call-template>
      </div>
    </xsl:when>
    <xsl:when test="RES or GM or Spelling or Synonyms or CT or
                    (ENTOBRESULTS and
                     not(count(ENTOBRESULTS/OBRES) = 1
                         and ENTOBRESULTS/OBRES/provider = $uar_provider
                         and ENTOBRESULTS/OBRES/count = 0))">
      <xsl:call-template name="results">
        <xsl:with-param name="query" select="Q"/>
        <xsl:with-param name="time" select="TM"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:when test="Q=''">
    </xsl:when>
    <xsl:otherwise>
      <xsl:call-template name="no_RES">
        <xsl:with-param name="query" select="Q"/>
      </xsl:call-template>
    </xsl:otherwise>
  </xsl:choose>

  <!-- *** UAR v2, Expert Search - Add the i18n messages required by the
           UI components. *** -->
  <xsl:if test="(
    $show_onebox != '0' and /GSP/ENTOBRESULTS/OBRES/provider = $uar_provider)
    or $is_expert_search_configured = '1'">
    <xsl:call-template
        name="include_localized_messages_for_uar_expert_search"/>
  </xsl:if>

  <!-- *** UAR v2 - Load the UAR UI component. We make sure that this
           template is called at the end after the results are rendered
           so that UAR onebox data is available for the UI component. *** -->
<!-- Hide UAR since we only want it to add entries to suggestions -->
<!--
           <xsl:if test="$show_onebox != '0'">
    <xsl:if test="/GSP/ENTOBRESULTS/OBRES/provider = $uar_provider">
      <xsl:call-template name="include_uar_ui_component"/>
    </xsl:if>
  </xsl:if>
-->

  <!-- *** Expert Search - include expert search UI JS component. -->
  <xsl:call-template name="include_expert_search_js">
    <xsl:with-param name="src_prefix"
        select="$gsa_resource_root_path_prefix" />
  </xsl:call-template>

  <!-- *** Google footer *** -->
  <xsl:call-template name="copyright"/>

  <xsl:if test="$show_asr != '0'">
    <script type="text/javascript"
        src="{$gsa_resource_root_path_prefix}/clicklog_compiled.js"></script>
  </xsl:if>

  <xsl:if test="$render_dynamic_navigation = '1'">
    <script type="text/javascript">
      dynNavMgr.init();
    </script>
  </xsl:if>

  <!-- *** HTML footer *** -->
</xsl:template>


<!-- **********************************************************************
Collection menu beside the search box
   ********************************************************************** -->
<xsl:template name="collection_menu">
<xsl:if test="$search_collections_xslt != ''">
  <td valign="middle">
      
<select name="site">
<xsl:choose>
<xsl:when test="PARAM[(@name='site') and (@value='default_collection')]">
 <option value="default_collection" selected="selected">default_collection</option>
</xsl:when>
<xsl:otherwise>
 <option value="default_collection">default_collection</option>
</xsl:otherwise>
</xsl:choose>
<xsl:choose>
<xsl:when test="PARAM[(@name='site') and (@value='file_system')]">
 <option value="file_system" selected="selected">file_system</option>
</xsl:when>
<xsl:otherwise>
 <option value="file_system">file_system</option>
</xsl:otherwise>
</xsl:choose>
</select>

  </td>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Search box input form (Types: std_top, std_bottom, home, swr)
   ********************************************************************** -->
<xsl:template name="search_box">
<xsl:param name="type"/>

<xsl:if test="$is_embedded_mode != '1'">
<xsl:choose>
<xsl:when test="$show_suggest = '1' and (($type = 'home') or ($type = 'std_top'))">
<xsl:text disable-output-escaping="yes">&lt;form id="suggestion_form" name="gs" method="GET" action="search" onsubmit="return (this.q.value == '') ? false : true;"&gt;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text disable-output-escaping="yes">&lt;form name="gs" method="GET" action="search" onsubmit="return (this.q.value == '') ? false : true;"&gt;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:if>
      <div id="search_box_div">
        <xsl:if test="($egds_show_search_tabs != '0') and (($type = 'home') or ($type = 'std_top'))">
              <div id="desktop_tab_div">
                <xsl:call-template name="desktop_tab"/>  
              </div>
        </xsl:if>
        <xsl:if test="($type = 'swr')">
          <div id="swr_div">
                <xsl:variable name="est_result" select="/GSP/RES/M" />
                <xsl:if test="($est_result != '') and ($est_result > 0)">
                There were about <b><xsl:value-of select="RES/M"/></b> results for <b><xsl:value-of select="$space_normalized_query"/></b>.
                  <br/>
                </xsl:if>
                Use the search box below to search within these results.
          </div>
        </xsl:if>
              <xsl:choose>
                <xsl:when test="($type = 'swr')">
                  <input type="text" name="as_q" size="{$search_box_size}" maxlength="256" value="" class="search-box"/>
                  <input type="hidden" name="q" class="q" value="{$qval}"/>
                  <xsl:choose>
                      <xsl:when test="$choose_search_button = 'image'">
                                <input type="image" name="btnG" src="{$search_button_image_url}"
                               valign="bottom" width="60" height="26"
                               border="0" value="{$search_button_text}"/>
                      </xsl:when>
                    <xsl:otherwise>
                      <input type="submit" name="btnG" value="{$search_button_text}"/>
                    </xsl:otherwise>
                    </xsl:choose>   
                </xsl:when>
                <xsl:when test="$show_suggest = '1' and (($type = 'home') or ($type = 'std_top'))">
                  <div id="query_suggestions_div">
                    <input type="text" placeholder="{$q_input_placeholder_text}" name="q" class="q search-box" size="{$search_box_size}" maxlength="256" value="{$space_normalized_query}" autocomplete="off" />
                  <xsl:choose>
                      <xsl:when test="$choose_search_button = 'image'">
                                <input type="image" name="btnG" src="{$search_button_image_url}"
                               valign="bottom" width="60" height="26"
                               border="0" value="{$search_button_text}" class="glass"/>
                      </xsl:when>
                    <xsl:otherwise>
                      <input type="submit" name="btnG" value="{$search_button_text}"/>
                    </xsl:otherwise>
                    </xsl:choose>  
                  </div>
                </xsl:when>
                <xsl:otherwise>
                  <input type="text" placeholder="{$q_input_placeholder_text}" name="q" class="q search-box" size="{$search_box_size}" maxlength="256" value="{$space_normalized_query}"/>
                </xsl:otherwise>
              </xsl:choose>
        <br/>
        <div class="access-container">
            <xsl:if test="$show_secure_radio != '0'">
                <span class="access-type">
                  <xsl:choose>
                    <xsl:when test="$access='p'">
                      <label><input type="radio" name="access" value="p" checked="checked" />Public Content</label>
                    </xsl:when>
                    <xsl:otherwise>
                      <label><input type="radio" name="access" value="p"/>Public Content</label>
                    </xsl:otherwise>
                  </xsl:choose>
                  <xsl:choose>
                    <xsl:when test="$access='a'">
                      <label><input type="radio" name="access" value="a" checked="checked" />Public and Secure Content</label>
                    </xsl:when>
                    <xsl:otherwise>
                      <label><input type="radio" name="access" value="a"/>Public and Secure Content</label>
                    </xsl:otherwise>
                  </xsl:choose>
                </span>
            </xsl:if>
        </div>
		</div>
            <xsl:call-template name="form_params"/>
            <xsl:if test="$is_embedded_mode != '1'">
            <xsl:text disable-output-escaping="yes">&lt;/form&gt;</xsl:text>
            </xsl:if>
      </xsl:template>

<!-- **********************************************************************
Bottom search box (do not customized)
   ********************************************************************** -->
<xsl:template name="bottom_search_box">
  <br clear="all"/>
  <br/>
  <div class="bottom-search-box">
    <center><br/>
    <xsl:call-template name="search_box">
    <xsl:with-param name="type" select="'std_bottom'"/>
    </xsl:call-template>
    <br/></center>
  </div>
</xsl:template>


<!-- **********************************************************************
Sort-by criteria: sort by date/relevance
   ********************************************************************** -->
<xsl:template name="sort_by">
<xsl:variable name="sort_by_url"><xsl:for-each
  select="/GSP/PARAM[(@name != 'sort') and
                     (@name != $embedded_mode_root_path_param) and
                     (@name != $embedded_mode_resource_root_path_param) and
                     (@name != $embedded_mode_disable_style) and
                     (@name != 'start') and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
    <xsl:choose>
      <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
        <!-- do nothing to remove 'ip' from the URL -->
      </xsl:when>
      <xsl:when test="@name = 'only_apps' and $show_apps_segmented_ui = '1'">
        <xsl:value-of select="'exclude_apps=1'" />
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
        <xsl:value-of select="@original_value"/>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="position() != last()">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
  </xsl:for-each>
</xsl:variable>

<xsl:variable name="sort_by_relevance_url">
  <xsl:value-of select="$sort_by_url"
    />&amp;sort=date%3AD%3AL%3Ad1</xsl:variable>

<xsl:variable name="sort_by_date_url">
  <xsl:value-of select="$sort_by_url"
    />&amp;sort=date%3AD%3AS%3Ad1</xsl:variable>
<div id="sort_by_div" class="sort-by">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[@name = 'sort' and starts-with(@value,'date:D:S')]">
    <span class="sort-selected">
    <xsl:text>Sort by date / </xsl:text>
    </span>
    <a ctype="sort"
        href="{$gsa_search_root_path_prefix}?{$sort_by_relevance_url}">Sort by relevance</a>
  </xsl:when>
  <xsl:when test="/GSP/PARAM[@name = 'sort' and starts-with(@value,'date:A:S')]">
  	<span class="sort-selected">	
    <xsl:text>Sort by date / </xsl:text>
    </span>
    <a ctype="sort"
        href="{$gsa_search_root_path_prefix}?{$sort_by_relevance_url}">Sort by relevance</a>
  </xsl:when>
  <xsl:otherwise>
    <a ctype="sort"
        href="{$gsa_search_root_path_prefix}?{$sort_by_date_url}">Sort by date</a>
    <span class="sort-selected">
    <xsl:text> / Sort by relevance</xsl:text>
    </span>
  </xsl:otherwise>
</xsl:choose>
</div>
</xsl:template>

<xsl:template name="cluster_results">
<div id='clustering'>
  <h2>Narrow your search</h2>

  <span id='cluster_status'>
    <span id='cluster_message' style="display:none">loading...</span>
    <noscript>
      javascript must be enabled for narrowing.
    </noscript>
  </span>

  <xsl:choose>
    <xsl:when test="$res_cluster_position = 'top'">
      <div id="results_cluster_div" class="wrapper">
        <div id="results_cluster_top_div_col1" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label0"></li>
            <li id="cluster_label3"></li>
            <li id="cluster_label6"></li>
            <li id="cluster_label9"></li>
          </ul>
        </div>
        <div id="results_cluster_top_div_col2" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label1"></li>
            <li id="cluster_label4"></li>
            <li id="cluster_label7"></li>
          </ul>
        </div>
        <div id="results_cluster_top_div_col3" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label2"></li>
            <li id="cluster_label5"></li>
            <li id="cluster_label8"></li>
          </ul>
        </div>  
      </div>
    </xsl:when>
    <xsl:when test="$res_cluster_position = 'bottom'">
      <div id="results_cluster_div" class="wrapper">
        <div id="results_cluster_top_div_col1" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label0"></li>
            <li id="cluster_label2"></li>
            <li id="cluster_label4"></li>
            <li id="cluster_label6"></li>
            <li id="cluster_label8"></li>
          </ul>
        </div>
        <div id="results_cluster_top_div_col2" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label1"></li>
            <li id="cluster_label3"></li>
            <li id="cluster_label5"></li>
            <li id="cluster_label7"></li>
            <li id="cluster_label9"></li>
          </ul>
        </div>
      </div>
    </xsl:when>
    <xsl:when test="$res_cluster_position = 'right'">
      <ul class="cluster_list cluster-ul">
        <li id='cluster_label0'></li>
        <li id='cluster_label1'></li>
        <li id='cluster_label2'></li>
        <li id='cluster_label3'></li>
        <li id='cluster_label4'></li>
        <li id='cluster_label5'></li>
        <li id='cluster_label6'></li>
        <li id='cluster_label7'></li>
        <li id='cluster_label8'></li>
        <li id='cluster_label9'></li>
      </ul>
    </xsl:when>
  </xsl:choose>
</div>
</xsl:template>

<!-- Generates search results navigation bar to be placed at the top. -->
<xsl:template name="gen_top_navigation">
<xsl:if test="RES">
  <div class="wrapper">
    <div>
      <xsl:if test="$show_top_navigation != '0'">
        <td align="left">
          <xsl:call-template name="google_navigation">
            <xsl:with-param name="prev" select="RES/NB/PU"/>
            <xsl:with-param name="next" select="RES/NB/NU"/>
            <xsl:with-param name="view_begin" select="RES/@SN"/>
            <xsl:with-param name="view_end" select="RES/@EN"/>
            <xsl:with-param name="guess" select="RES/M"/>
            <xsl:with-param name="navigation_style" select="'top'"/>
          </xsl:call-template>
        </td>
      </xsl:if>
<!-- Removed by Vinay in scu2_frontend.xsl: not sure why -->
<!--      
      <xsl:if test="$show_sort_by != '0'">
        <td align="right">
          <xsl:call-template name="sort_by"/>
        </td>
      </xsl:if>
-->      
    </div>
  </div>
</xsl:if>
</xsl:template>

<!-- Generates search results navigation bar to be placed at the bottom. -->
<xsl:template name="gen_bottom_navigation">
<xsl:if test="RES">
  <xsl:variable name="nav_style">
    <xsl:choose>
      <xsl:when test="($access='s') or ($access='a')"><xsl:value-of select="$secure_bottom_navigation_type"/></xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$choose_bottom_navigation"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <xsl:call-template name="google_navigation">
    <xsl:with-param name="prev" select="RES/NB/PU"/>
    <xsl:with-param name="next" select="RES/NB/NU"/>
    <xsl:with-param name="view_begin" select="RES/@SN"/>
    <xsl:with-param name="view_end" select="RES/@EN"/>
    <xsl:with-param name="guess" select="RES/M"/>
    <xsl:with-param name="navigation_style" select="$nav_style"/>
  </xsl:call-template>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Output all results
   ********************************************************************** -->
<xsl:template name="results">
<xsl:param name="query"/>
<xsl:param name="time"/>

<xsl:choose>
  <xsl:when test="$render_dynamic_navigation = '1'">
    <xsl:call-template name="dynamic_navigation_results">
      <xsl:with-param name="query" select="$query"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <!-- *** Add top navigation/sort-by bar *** -->
    <xsl:if test="$show_top_navigation != '0' or $show_sort_by != '0'">
      <!-- there might be onebox results but no RES  -->
      <xsl:if test="RES or $show_sidebar = '1'">
        <div id="top-navigation">
          <xsl:call-template name="gen_top_navigation" />
        </div>
      </xsl:if>
    </xsl:if>

    <!-- *** Handle OneBox results, if any ***-->
    <xsl:if test="$show_onebox != '0' and count(/GSP/ENTOBRESULTS) &gt; 0 and $show_sidebar != '1'">
      <input type="hidden" name="oneboxloc" value="3909" />
      <xsl:call-template name="onebox"/>

    <script>
    <xsl:comment>
      if (window['populateUarMessages']) {
        populateUarMessages();
      }
    //</xsl:comment>
    </script>
    </xsl:if>

    <!-- *** handle spelling suggestions, if any *** -->
    <xsl:if test="$show_spelling != '0'">
      <xsl:call-template name="spelling"/>
    </xsl:if>

    <!-- *** handle synonyms, if any *** -->
    <xsl:if test="$show_synonyms != '0'">
      <xsl:call-template name="synonyms"/>
    </xsl:if>

    <!-- *** output google desktop results (if enabled and any available) *** -->
    <xsl:if test="$egds_show_desktop_results != '0'">
        <xsl:call-template name="desktop_results"/>
    </xsl:if>



    <!-- main results -->
    <xsl:call-template name="main_results">
      <xsl:with-param name="query" select="$query"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:template name="dynamic_navigation_results">
<xsl:param name="query"/>

<xsl:variable name="dn_tokens"
  select="tokenize(/GSP/PARAM[@name='dnavs']/@original_value, '\+')"/>

<xsl:variable name="div_pos">
  <xsl:choose>
    <xsl:when test="$show_sort_by != '0'">
      <xsl:text>position: relative; width: 100%;</xsl:text>
    </xsl:when>
    <xsl:otherwise>
      <xsl:text>position: relative; width: 100%; margin-top: 10px;</xsl:text>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<div id="main" style="{$div_pos}" class="main-div">
  <div id="dyn_nav">
    <div class="dn-hdr">
      <span style="padding-left: 6px;">
        <strong>Refine Results</strong>
        <span class="collapse"></span>
      </span>
    </div>

    <!-- Expert Search - display go back to main results link if expert
         search expanded mode is configured for this frontend. -->
    <xsl:if test="$show_expert_search_expanded_results = '1'">
      <div class="dn-exp">
        <xsl:call-template name="back_to_widget_view_frontend_link">
          <xsl:with-param name="src_prefix"
              select="concat($gsa_search_root_path_prefix, '?')" />
          <xsl:with-param name="msg_back_to_main_results_action"
              select="$msg_back_to_main_results_action" />
        </xsl:call-template>
      </div>
    </xsl:if>

    <div id="dyn_nav_col" style="height: 100%">
      <xsl:apply-templates select="/GSP/RES/PARM/PMT">
        <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
        <xsl:with-param name="partial_count" select="/GSP/RES/PARM/PC"/>
      </xsl:apply-templates>

      <script type="text/javascript">
        <xsl:for-each select="$dn_tokens">
          dynNavMgr.addSelectedAttr("<xsl:value-of select='.'/>");
        </xsl:for-each>

        <xsl:apply-templates select="/GSP/RES/PARM/PMT" mode="hidden"/>
      </script>
    </div>
  </div>
  <div id="main_res">
   <!-- show sort-by -->
	<xsl:if test="$show_sort_by != '0' or $show_spelling != '0' or $show_synonyms != '0'">
	  <xsl:if test="RES"> <!-- there might be onebox results but no RES  -->
	    <div class="wrapper">
	      <div class="gsa-row">
	        <div class="col">
	          <xsl:if test="$show_spelling != '0' or $show_synonyms != '0'">
	            <td align="left">
	              <xsl:choose>
	                <!-- *** handle spelling suggestions, if any *** -->
	                <xsl:when test="$show_spelling != '0'">
	                  <xsl:call-template name="spelling"/>
	                </xsl:when>
	                <!-- *** handle synonyms, if any *** -->
	                <xsl:otherwise>
	                  <xsl:call-template name="synonyms"/>
	                </xsl:otherwise>
	              </xsl:choose>
	            </td>
	          </xsl:if>
	        </div>
	      </div>
	    </div>
	  </xsl:if>
	</xsl:if>
	
	<xsl:if test="$show_spelling != '0' and $show_synonyms != '0'">
	  <xsl:call-template name="synonyms"/>
	</xsl:if>
    <xsl:call-template name="main_results">
      <xsl:with-param name="query" select="$query"/>
      <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
    </xsl:call-template>
  </div>
</div>
</xsl:template>

<!-- This template is specifically needed to hide the lag in rendering for the
   dynamic navigation attributes with large set of values. Since only the top
   few values need to be displayed, the rest are added to the dynNavMgr JS
   instance for rendering later on demand ('More' click).
-->
<xsl:template match="PMT" mode="hidden">
<xsl:if test="@IR != 1">
  <xsl:variable name="values">
    [<xsl:for-each select="PV[position() &gt; $dyn_nav_max_rows and @C != '0']">["<xsl:call-template
        name='js_escape'><xsl:with-param name="string"
        select="@V"/><xsl:with-param name="slash_mode" select='"1"'/>
        </xsl:call-template>", <xsl:value-of select='@C'/>]<xsl:if
        test="position() != last()">,</xsl:if></xsl:for-each>]
  </xsl:variable>
  <xsl:variable name="attr_id"><xsl:value-of
      select="concat('attr_', string(position()))"/></xsl:variable>

  dynNavMgr.addAttrValues("<xsl:value-of select='$attr_id'/>", <xsl:value-of select='$values'/>);
</xsl:if>
</xsl:template>

<xsl:template match="PMT">
<xsl:param name="dn_tokens"/>
<xsl:param name="partial_count"/>

<xsl:variable name="name"><xsl:value-of select="normalize-space(@NM)"/></xsl:variable>
<xsl:variable name="pmt_name"><xsl:call-template
    name="term-escape"><xsl:with-param name="val" select="@NM"/></xsl:call-template>
</xsl:variable>

<xsl:choose>
  <xsl:when test="@IR = 1">
    <ul class="dn-attr">
      <li class="dn-attr-hdr"><span class="dn-attr-hdr-txt"><xsl:attribute
          name="title"><xsl:value-of select="@DN" disable-output-escaping="yes"/>
      </xsl:attribute><xsl:value-of select="@DN"/></span></li>
      <xsl:apply-templates select="PV">
        <xsl:with-param name="pmt_name" select="$pmt_name"/>
        <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
        <xsl:with-param name="partial_count" select="$partial_count"/>
      </xsl:apply-templates>
    </ul>
  </xsl:when>

  <xsl:otherwise>
    <xsl:variable name="total" select="count(PV[@C != '0'])"/>
    <xsl:variable name="attr_class">
      <xsl:choose>
        <xsl:when test="$total &lt; $dyn_nav_max_rows + 1">
          <xsl:value-of select="'dn-attr'"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="'dn-attr dn-attr-more'"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>

    <xsl:variable name="attr_id"><xsl:value-of
        select="concat('attr_', string(position()))"/></xsl:variable>
    <ul id="{$attr_id}" class="{$attr_class}">
      <xsl:choose>
        <xsl:when test="$total &lt; $dyn_nav_max_rows + 1">
          <li class="dn-attr-hdr"><span class="dn-attr-hdr-txt"><xsl:attribute
            name="title"><xsl:value-of select="@DN" disable-output-escaping="yes"/>
          </xsl:attribute><xsl:value-of select="@DN"/></span></li>
        </xsl:when>
        <xsl:otherwise>
          <li class="dn-attr-hdr"><div class="dn-zippy-hdr"><div class="dn-zippy-hdr-img"></div>
            <span class="dn-attr-hdr-txt"><xsl:attribute
              name="title"><xsl:value-of select="@DN" disable-output-escaping="yes"/>
            </xsl:attribute><xsl:value-of select="@DN"/></span></div></li>
        </xsl:otherwise>
      </xsl:choose>

      <xsl:apply-templates select="PV[position() &lt; $dyn_nav_max_rows + 1]">
        <xsl:with-param name="pmt_name" select="$pmt_name"/>
        <xsl:with-param name="header" select="@DN"/>
        <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
        <xsl:with-param name="partial_count" select="$partial_count"/>
      </xsl:apply-templates>

      <xsl:if test="$total &gt; $dyn_nav_max_rows">
        <xsl:variable name="total_left" select="$total - $dyn_nav_max_rows"/>
        <li id="{$attr_id}_more_less">
          <a id="more_{$attr_id}" class="dn-link" style="margin-right: 10px; outline-style: none;"
            onclick="dynNavMgr.displayMore('{$attr_id}', true); return false;"
            href="javascript:;">
            <xsl:attribute name="ctype">
                <xsl:text>dynnav.</xsl:text>
                <xsl:value-of select="$name" disable-output-escaping="no"/>
                <xsl:text>.more</xsl:text>
            </xsl:attribute>
            <span class="dn-more-img dn-mimg"></span>
            <span id="disp_{$attr_id}"><xsl:value-of
            select="$total_left"/></span><span> More</span>
          </a>
          <a id="less_{$attr_id}" class="dn-link dn-hidden" style="outline-style: none;"
            onclick="dynNavMgr.displayMore('{$attr_id}', false, {$total_left}); return false;"
            href="javascript:;">
            <xsl:attribute name="ctype">
              <xsl:text>dynnav.</xsl:text>
              <xsl:value-of select="$name" disable-output-escaping="no"/>
              <xsl:text>.less</xsl:text>
            </xsl:attribute>
            <span class="dn-more-img dn-limg"></span>
            <span>Less</span>
          </a>
        </li>
        <label class="dn-hidden dn-id"><xsl:value-of select="$attr_id"/></label>
        <label id="{$attr_id}_escaped" class="dn-hidden"><xsl:value-of
            select="$pmt_name"/></label>
        <label id="{$attr_id}_total" class="dn-hidden"><xsl:value-of
            select="$total"/></label>
        <label id="{$attr_id}_total_left" class="dn-hidden"><xsl:value-of
            select="$total_left"/></label>
      </xsl:if>
    </ul>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:template match="PV">
<xsl:param name="pmt_name"/>
<xsl:param name="header"/>
<xsl:param name="dn_tokens"/>
<xsl:param name="partial_count"/>

<xsl:if test="@C != 0">
  <xsl:apply-templates select="." mode="construct">
    <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
    <xsl:with-param name="header" select="$header"/>
    <xsl:with-param name="partial_count" select="$partial_count"/>
    <xsl:with-param name="current_token">
      <xsl:choose>
        <xsl:when test="../@IR = '1'"><xsl:variable
          name="stripped_l" select="normalize-space(@L)"/><xsl:variable
          name="stripped_h" select="normalize-space(@H)"/>inmeta:<xsl:value-of
          select="$pmt_name"/>:<xsl:choose><xsl:when test="../@T = 3"><xsl:if
          test="$stripped_l != ''">$<xsl:value-of select="$stripped_l"/></xsl:if>..<xsl:if
          test="$stripped_h != ''">$<xsl:value-of
          select="$stripped_h"/></xsl:if></xsl:when><xsl:otherwise><xsl:value-of
          select="$stripped_l"/>..<xsl:value-of select="$stripped_h"/></xsl:otherwise></xsl:choose>
        </xsl:when>
        <xsl:otherwise>inmeta:<xsl:value-of select="$pmt_name"/>%3D<xsl:call-template
            name="term-escape"><xsl:with-param name="val"
            select="@V"/></xsl:call-template></xsl:otherwise>
      </xsl:choose>
    </xsl:with-param>
  </xsl:apply-templates>
</xsl:if>
</xsl:template>

<xsl:template match="PV" mode="construct">
<xsl:param name="dn_tokens"/>
<xsl:param name="header"/>
<xsl:param name="current_token"/>
<xsl:param name="partial_count"/>

<xsl:variable name="dispval">
  <xsl:apply-templates select="." mode="display_value">
    <xsl:with-param name="js_escape" select="'1'"/>
  </xsl:apply-templates>
</xsl:variable>

<xsl:variable name="dispcount">
  <xsl:text>(</xsl:text><xsl:if
     test="$partial_count=1"><xsl:text>&gt; </xsl:text></xsl:if>
    <xsl:value-of select="@C"/><xsl:text>)</xsl:text>
</xsl:variable>

<xsl:variable name="is_selected" select="index-of($dn_tokens, $current_token)"/>
<li class="dn-attr-v">
  <xsl:choose>
    <xsl:when test="exists($is_selected)">
      <xsl:variable name="other_tokens">
        <xsl:value-of select="string-join(remove($dn_tokens, $is_selected[position()=1]), '+')"/>
      </xsl:variable>

      <xsl:variable name="cancel_url">
        <xsl:value-of select="$no_q_dnavs_params"/>&amp;q=<xsl:value-of
          select="$original_q"/><xsl:if test="$other_tokens != ''">+<xsl:value-of
          select="$other_tokens"/>&amp;dnavs=<xsl:value-of select="$other_tokens"/></xsl:if>
      </xsl:variable>

      <a class="dn-img dn-r-img"
          href="{$gsa_search_root_path_prefix}?{$cancel_url}"
          title="Clear">
        <xsl:attribute name="ctype">
          <xsl:text>dynnav.clear.</xsl:text>
          <xsl:value-of select="$header" disable-output-escaping="no"/>
        </xsl:attribute>
      </a>
      <span class="dn-overflow dn-inline-block" style="width: 86%;">
        <xsl:if test="../@IR != 1">
          <xsl:attribute name="title"><xsl:value-of select="$dispval"
              disable-output-escaping="yes"/></xsl:attribute>
        </xsl:if>
        <div class="dn-attr-txt"><xsl:value-of
            select="$dispval" disable-output-escaping="yes"/>
        </div>
        <span class="display-cnt"><xsl:value-of
            select="$dispcount" disable-output-escaping="yes"/>
        </span>
      </span>
    </xsl:when>
    <xsl:otherwise>
      <xsl:variable name="pmts_var">dnavs=<xsl:if test="/GSP/PARAM[@name='dnavs']"><xsl:value-of
          select="/GSP/PARAM[@name='dnavs']/@original_value"/>+</xsl:if><xsl:value-of
          select="$current_token"/>
      </xsl:variable>
      <xsl:variable name="qurl"><xsl:value-of select="$no_q_dnavs_params"/>&amp;q=<xsl:value-of
          select="/GSP/PARAM[@name='q']/@original_value"/>+<xsl:value-of
          select="$current_token"/>&amp;<xsl:value-of select="$pmts_var"/>
      </xsl:variable>
      <div class="dn-attr-txt"><a
        class="dn-attr-a" href="{$gsa_search_root_path_prefix}?{$qurl}">
        <xsl:attribute name="ctype">
          <xsl:text>dynnav.</xsl:text>
          <xsl:value-of select="$header" disable-output-escaping="no"/>
          <xsl:text>.</xsl:text>
          <xsl:value-of select="$dispval" disable-output-escaping="no"/>
        </xsl:attribute>
        <xsl:if test="../@IR != 1">
          <xsl:attribute name="title"><xsl:value-of select="$dispval"
              disable-output-escaping="no"/></xsl:attribute>
        </xsl:if><xsl:value-of
            select="$dispval" disable-output-escaping="yes"/></a>
      </div>
      <span class="dn-attr-c display-cnt"><xsl:value-of select="$dispcount"
          disable-output-escaping="yes"/></span>
    </xsl:otherwise>
  </xsl:choose>
</li>
</xsl:template>

<xsl:template match="PV" mode="display_value">
<xsl:param name="js_escape"/>
<xsl:choose>
  <xsl:when test="../@IR = 1">
    <xsl:variable name="disp_l">
      <xsl:call-template name="pmt_range_display_val">
        <xsl:with-param name="val" select="@L"/>
        <xsl:with-param name="type" select="../@T"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="disp_h">
      <xsl:call-template name="pmt_range_display_val">
        <xsl:with-param name="val" select="@H"/>
        <xsl:with-param name="type" select="../@T"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:choose>
      <xsl:when test="$disp_l = ''">
        <xsl:value-of select="$disp_h"/><xsl:text> </xsl:text>
        <xsl:choose>
          <xsl:when test="../@T = 4">or earlier</xsl:when>
          <xsl:otherwise>or less</xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:when test="$disp_h = ''">
        <xsl:value-of select="$disp_l"/><xsl:text> </xsl:text>
        <xsl:choose>
          <xsl:when test="../@T = 4">or later</xsl:when>
          <xsl:otherwise>or more</xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise><xsl:value-of
        select="$disp_l"/><xsl:text> </xsl:text><xsl:call-template
        name="endash"/><xsl:text> </xsl:text><xsl:value-of select="$disp_h"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:when>
  <xsl:otherwise>
    <xsl:choose>
      <xsl:when test="$js_escape = '1'">
        <xsl:call-template name="js_escape"><xsl:with-param name="string"
          select="@V"/><xsl:with-param name="slash_mode" select='"0"'/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise><xsl:value-of select="@V"/></xsl:otherwise>
    </xsl:choose>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:variable name="hex">0123456789ABCDEF</xsl:variable>
<xsl:template name="term-escape">
<xsl:param name="val"/>
<xsl:variable name="first-char" select="substring($val, 1, 1)"/>
<xsl:variable name="code"
  select="string-to-codepoints($first-char)[position()=1]"/>
<xsl:choose>
  <xsl:when test="not(($code >= 48 and $code &lt;= 57) or
    ($code >= 65 and $code &lt;= 90) or ($code = 95) or
    ($code >= 97 and $code &lt;= 122))">
    <xsl:choose>
      <xsl:when test="$code > 128">
        <xsl:value-of select="encode-for-uri($first-char)"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:variable name="hex-digit1"
          select="substring($hex, floor($code div 16) + 1, 1)"/>
        <xsl:variable name="hex-digit2"
          select="substring($hex, $code mod 16 + 1, 1)"/>
        <xsl:value-of select="concat('%25', $hex-digit1 ,$hex-digit2)"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$first-char"/>
  </xsl:otherwise>
</xsl:choose>
<xsl:if test="string-length($val) > 1">
  <xsl:call-template name="term-escape">
    <xsl:with-param name="val" select="substring($val, 2)"/>
  </xsl:call-template>
</xsl:if>
</xsl:template>

<xsl:template name="pmt_range_display_val">
<xsl:param name="val"/>
<xsl:param name="type"/>
<xsl:choose>
  <xsl:when test="$val != '' and ($type = 2 or $type = 3)">
    <xsl:value-of select="format-number($val, '#.##')"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$val"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:template name="main_results">
<xsl:param name="query"/>
<xsl:param name="dn_tokens"/>

<xsl:if test="$render_dynamic_navigation = '1'">
  <div class="dn-bar">
    <xsl:variable name="all_results_url"><xsl:value-of
        select="$no_q_dnavs_params"/>&amp;q=<xsl:value-of select="$original_q"/>
    </xsl:variable>

    <!-- Add next/prev navigation -->
    <xsl:if test="$show_top_navigation != '0' and /GSP/RES">
      <span class="dn-bar-rt">
        <xsl:call-template name="google_navigation">
          <xsl:with-param name="prev" select="/GSP/RES/NB/PU"/>
          <xsl:with-param name="next" select="/GSP/RES/NB/NU"/>
          <xsl:with-param name="view_begin" select="/GSP/RES/@SN"/>
          <xsl:with-param name="view_end" select="/GSP/RES/@EN"/>
          <xsl:with-param name="guess" select="/GSP/RES/M"/>
          <xsl:with-param name="navigation_style" select="'top'"/>
          <xsl:with-param name="dynamic_nav_bar" select="'1'"/>
        </xsl:call-template>
      </span>
    </xsl:if>

    <a class="dn-link" style="text-decoration: underline; color: #000;"
      href="{$gsa_search_root_path_prefix}?{$all_results_url}">All results</a>

    <xsl:if test="exists($dn_tokens)">
      <xsl:call-template name="rsaquo"/>
      <xsl:variable name="root_node" select="/GSP"/>
      <xsl:for-each select="$dn_tokens">
        <xsl:variable name="other_pmts_tokens"
          select="string-join(remove($dn_tokens, position()), '+')"/>

        <xsl:variable name="cancel_url">
          <xsl:value-of select="$all_results_url"/>
          <xsl:if test="$other_pmts_tokens != ''">+<xsl:value-of
              select="$other_pmts_tokens"/>&amp;dnavs=<xsl:value-of select="$other_pmts_tokens"/>
          </xsl:if>
        </xsl:variable>

        <div class="dn-inline-block"><a class="dn-link cancel-url dn-bar-link"
            href="{$gsa_search_root_path_prefix}?{$cancel_url}"
            title="Clear">
          <xsl:variable name="range_val" select="substring-after(., ':')"/>
          <xsl:choose>
            <xsl:when test="contains(., '..')">
              <xsl:for-each select="$root_node/RES/PARM/PMT">
                <xsl:variable name="escaped_name"><xsl:call-template name="term-escape">
                  <xsl:with-param name="val" select="@NM"/>
                </xsl:call-template></xsl:variable>
                <xsl:if test="$escaped_name=substring-before($range_val, ':')">
                  <span class="dn-bar-v"><xsl:value-of select="@DN"/>:</span><xsl:call-template
                    name="nbsp"/><xsl:choose>
                    <xsl:when test="@T = '3'">
                      <xsl:for-each select="PV">
                        <xsl:variable name="check_val"><xsl:if
                          test="normalize-space(@L) != ''">$<xsl:value-of
                          select="normalize-space(@L)"/></xsl:if>..<xsl:if
                          test="normalize-space(@H) != ''">$<xsl:value-of
                            select="normalize-space(@H)"/></xsl:if>
                        </xsl:variable>
                        <xsl:if test="$check_val=substring-after($range_val, ':')">
                          <xsl:apply-templates select="current()" mode="display_value">
                            <xsl:with-param name="js_escape" select="'0'"/>
                          </xsl:apply-templates>
                        </xsl:if>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:apply-templates select="PV[concat(normalize-space(@L), '..',
                        normalize-space(@H))=substring-after($range_val, ':')]" mode="display_value">
                        <xsl:with-param name="js_escape" select="'0'"/>
                      </xsl:apply-templates>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:if>
              </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
              <xsl:for-each select="$root_node/RES/PARM/PMT">
                <xsl:variable name="escaped_name"><xsl:call-template name="term-escape">
                  <xsl:with-param name="val" select="@NM"/>
                </xsl:call-template></xsl:variable>
                <xsl:if test="$escaped_name=substring-before($range_val, '%3D')">
                  <span class="dn-bar-v"><xsl:value-of select="./@DN"/>:</span><xsl:call-template
                    name="nbsp"/><xsl:for-each select="./PV"><xsl:variable
                      name="pv_val"><xsl:call-template name="term-escape">
                        <xsl:with-param name="val" select="./@V"/>
                      </xsl:call-template></xsl:variable>
                      <xsl:if test="$pv_val=substring-after($range_val, '%3D')">
                        <xsl:apply-templates select="." mode="display_value">
                          <xsl:with-param name="js_escape" select="'0'"/>
                        </xsl:apply-templates>
                      </xsl:if>
                  </xsl:for-each>
                </xsl:if>
              </xsl:for-each>
            </xsl:otherwise>
          </xsl:choose>
        </a></div>

        <xsl:if test="position() != last()">
          <xsl:call-template name="rsaquo"/>
        </xsl:if>
      </xsl:for-each>
    </xsl:if>
  </div>
  

  
  <!-- *** Handle OneBox results, if any ***-->
  <xsl:if test="$show_onebox != '0' and count(/GSP/ENTOBRESULTS) &gt; 0 and $show_sidebar != '1'">
      <input type="hidden" name="oneboxloc" value="4486-$show_sidebar" />
    <xsl:call-template name="onebox"/>

    <script>
    <xsl:comment>
      if (window['populateUarMessages']) {
        populateUarMessages();
      }
    //</xsl:comment>
    </script>
  </xsl:if>

  <!-- *** output google desktop results (if enabled and any available) *** -->
  <xsl:if test="$egds_show_desktop_results != '0'">
    <xsl:call-template name="desktop_results"/>
  </xsl:if>
</xsl:if>

<xsl:if test="$show_translation = '1' and $only_apps != '1'">
  <div id="translate_all_div" class="trns-all-div"></div>
</xsl:if>

<xsl:choose>
  <xsl:when test="$show_sidebar = '1'">
          <div class="col sb-r" id="sidebar-container">
            <div id="sidebar">
            <!-- Onebox -->
            <xsl:if test="$show_onebox != '0' and count(/GSP/ENTOBRESULTS) &gt; 0">
                <input type="hidden" name="oneboxloc" value="4514" />
              <xsl:call-template name="onebox"/>

              <script>
              <xsl:comment>
                if (window['populateUarMessages']) {
                  populateUarMessages();
                }
              //</xsl:comment>
              </script>
            </xsl:if>
            
            <!-- Expert Search - sidebar element. -->
            <xsl:if test="$show_expert_search_widget_view = '1'">
              <div id="exp-results-container">
                <xsl:call-template
                  name="render_expert_search_results">
                  <xsl:with-param name="src_prefix"
                      select="concat($gsa_search_root_path_prefix, '?')" />
                  <xsl:with-param name="is_noscript_mode" select="'true'" />
                </xsl:call-template>
              </div>
            </xsl:if>

            <!-- People Search sidebar element. -->
            <xsl:if test="$show_people_search = '1'">
            <div id="ps-results-container">
              <div id="loading-ps-results" class="sb-r-ld-msg-c" style="display: none;">
                <span class="sb-r-lbl">Loading People search results...</span>
              </div>
              <div id="ps-results-msg" class="sb-r-lbl" style="display: none;" >People</div>
              <div id="ps-results-section" class="sb-r-res" style="display:none;">
              </div>
            </div>
            </xsl:if>

            <!-- Google Apps results sidebar element. -->
            <xsl:if test="$show_apps_segmented_ui = '1'">
            <div id="apps-results-container">
              <div id="loading-app-results" class="sb-r-ld-msg-c" style="display: none;">
                <span class="sb-r-lbl">Loading Google Apps results...</span>
              </div>
              <div style="display: none;" id="apps-results-msg" class="sb-r-lbl"></div>
              <div id="apps-results-section" class="sb-r-res" style="display: none;">
              </div>
              <iframe scrolling="no" id="apps-results-iframe" frameborder="0"
                  style="display: none;">
              </iframe>
            </div>
            </xsl:if>

            <!-- Google Site Search sidebar element. -->
            <xsl:if test="$show_gss_results = '1'">
            <div id="gss-results-container">
              <div id="loading-gss-results" class="sb-r-ld-msg-c" style="display: none;">
                <span class="sb-r-lbl">Loading Google Site Search results...</span>
              </div>
              <div id="gss-results-msg" class="sb-r-lbl" style="display: none;" >Google Site Search</div>
              <div id="gss-results-section" class="sb-r-res" style="display:none">
              </div>
              <input style="display:none" id="gss-hidden-input" />
            </div>
            </xsl:if>
          </div>
          </div>
          <div class="col" id="left-side-container">
            <xsl:call-template name="render_main_results">
              <xsl:with-param name="query" select="$query"/>
            </xsl:call-template>  
          </div>

  </xsl:when>
  <xsl:otherwise>
    <xsl:call-template name="render_main_results">
      <xsl:with-param name="query" select="$query"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>

<!-- *** Filter note (if needed) *** -->
<xsl:if test="(RES/FI) and (not(RES/NB/NU))">
  <p>
    <i>
    In order to show you the most relevant results, we have omitted some entries very similar to the <xsl:value-of select="RES/@EN"/> already displayed.<br/>If you like, you can <a href="{$filter_url}0">repeat the search with the omitted results included</a>.
    </i>
  </p>
</xsl:if>
  <!-- *** output results details *** -->
  <xsl:if test="$show_res_clusters = '1'">
    <xsl:call-template name="cluster_results"/>
  </xsl:if>
<!-- *** Add bottom navigation *** -->
<div id="bottom-navigation" class="bottom-nav clearfix">
  <xsl:call-template name="gen_bottom_navigation" />
</div>

<!-- *** Bottom search box *** -->
<div id="bottom-search-box">
  <xsl:if test="$show_bottom_search_box != '0' and RES">
    <xsl:call-template name="bottom_search_box"/>
  </xsl:if>
</div>

<!-- *** Load the JSAPI library if displaying GSS results is enabled. -->
<xsl:if test="$show_gss_results = '1'">
  <script src="https://www.google.com/jsapi" type="text/javascript"></script>
  <script type="text/javascript">
    var GSS_JS_API_LOADED = false;
    /**
     * If you want to use a different Site Search theme you can specify the
     * same through {style: THEME_CONSTANT} property passed as the third
     * parameter to google.load call below. For example:
     * google.load('search', '1', {style: google.loader.themes.ESPRESSO})
     * You can refer API documentation here:
     * http://code.google.com/apis/ajaxsearch/documentation/customsearch/#_themes
     * Optionally, you can override the default stylesheet via custom CSS or
     * customize existing themes via "Look and Feel" option in the control
     * panel.
     */
    google.load('search', '1');
    google.setOnLoadCallback(function(){GSS_JS_API_LOADED = true;});
  </script>
</xsl:if>

<!-- *** Load the Translation JS library, if enabled *** -->
<xsl:if test="$show_translation = '1' and $only_apps != '1'">
  <xsl:variable name="result_contents">
    <xsl:for-each select="/GSP/RES/R">{'id':<xsl:value-of select="@N"/>,'lang':'<xsl:value-of select="LANG"/>'},</xsl:for-each>
  </xsl:variable>
  <xsl:variable name="res_count" select="count(/GSP/RES/R)"/>
  <xsl:variable name="user_lang" select="/GSP/PARAM[@name='ulang']/@value" />
  <xsl:if test="$render_dynamic_navigation != '1'">
    <script src="{$gsa_resource_root_path_prefix}/translation_compiled.js"
        type="text/javascript"></script>
  </xsl:if>
  <script type="text/javascript">
    var translationManager = new gsa.translation.TranslationManager();
    translationManager.initTranslation(<xsl:value-of select="$res_count" />,
        [<xsl:value-of select="substring($result_contents,
        1,string-length($result_contents)-1)" />],
        '<xsl:value-of select="$user_lang"/>');

    function createSectionalElement() {
      new google.translate.SectionalElement({
       sectionalNodeClassName: 'goog-trans-section',
       controlNodeClassName: 'goog-trans-control',
       background: '#ffffff',
       useSecureConnection: true,
       key: '<xsl:value-of select="$translate_key"/>',
       relate: 'id'
      }, 'goog-trans-all');
    }
  </script>
  <script src="https://translate.google.com/translate_a/element.js?cb=createSectionalElement&amp;ug=section&amp;hl={$user_lang}"></script>
</xsl:if>

<!-- *** Load resources for showing document previews, if enabled *** -->
<xsl:if test="$show_document_previews = '1'">
  <xsl:call-template name="populate_previewer_i18n_array"/>
  <script src="{$gsa_resource_root_path_prefix}/dpsjsclient/dps.min.js"
      type="text/javascript"></script>
  <script src="{$gsa_resource_root_path_prefix}/json2.js"
      type="text/javascript"></script>
  <script src="{$custom_js_path}/previewer.js"
      type="text/javascript"></script>
  <xsl:if test="/GSP/PREVIEWS">
    <script type="text/javascript">
      <xsl:value-of select="/GSP/PREVIEWS"/>
    </script>
  </xsl:if>
  <link rel="stylesheet"
    href="{$gsa_resource_root_path_prefix}/dpsjsclient/dps-floating-viewer.css"
    type="text/css">
  </link>
  <xsl:if test="$is_embedded_mode = '1'">
    <script type="text/javascript">
      if (window['DPS']) {
        DPS.forwardingProxy =
            '<xsl:value-of select="$embedded_mode_resource_root_path_prefix" />';
        <xsl:if test="$embedded_mode_dps_viewer_host != ''">
        <xsl:variable name="embedded_mode_dps_viewer_host_to_use"
          select="if (starts-with($embedded_mode_dps_viewer_host, 'http://'))
                  then
                     $embedded_mode_dps_viewer_host
                  else
                     concat('http://', $embedded_mode_dps_viewer_host)" />
        // Disable the full preview mode in SharePoint embedded mode.
        DPS.onPageClick = function() { return false; };
        </xsl:if>
      }
    </script>
    <style type="text/css">
      div.floating-viewer-header .controls {
        background-image: url("<xsl:value-of select="$embedded_mode_resource_root_path_prefix"/>/dpsjsclient/buttons.png");
      }
      div.result-item-hover span.toggle-preview {
        background-image: url("<xsl:value-of select="$embedded_mode_resource_root_path_prefix"/>/preview_on.png") !important;
      }
      body.previews-enabled span.toggle-preview {
        background-image: url("<xsl:value-of select="$embedded_mode_resource_root_path_prefix"/>/preview_off.png");
      }
    </style>
  </xsl:if>
</xsl:if>
</xsl:template>

<xsl:template name="render_main_results">
<xsl:param name="query"/>
<xsl:variable name="main_results_class">
  <xsl:choose>
    <xsl:when test="$render_dynamic_navigation = '1'">main-results</xsl:when>
    <xsl:otherwise>main-results-without-dn</xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<div class="{$main_results_class}">
  <!-- for keymatch results -->
  <xsl:if test="$show_keymatch != '0'">
    <xsl:apply-templates select="/GSP/GM"/>
  </xsl:if>

  <!-- Experty Search - render the expert search results if expanded
       mode is configured for the current frontend. -->
  <xsl:choose>
    <xsl:when test="$show_expert_search_expanded_results = '1'">
      <xsl:if test="$render_dynamic_navigation != '1'">
        <xsl:call-template name="back_to_widget_view_frontend_link">
          <xsl:with-param name="src_prefix"
              select="concat($gsa_search_root_path_prefix, '?')" />
          <xsl:with-param name="msg_back_to_main_results_action"
              select="$msg_back_to_main_results_action" />
        </xsl:call-template>
      </xsl:if>
      <xsl:call-template name="render_expert_search_results">
        <xsl:with-param name="src_prefix"
            select="concat($gsa_search_root_path_prefix, '?')" />
        <xsl:with-param name="current_search_query_args"
            select="$search_url" />
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:apply-templates select="RES/R">
        <xsl:with-param name="query" select="$query"/>
      </xsl:apply-templates>
    </xsl:otherwise>
  </xsl:choose>
</div>
</xsl:template>

<!-- **********************************************************************
Stopwords suggestions in result page (do not customize)
   ********************************************************************** -->
<xsl:template name="stopwords">
<xsl:variable name="stopwords_suggestions1">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="'/help/basics.html#stopwords'"/>
    <xsl:with-param name="replace" select="'user_help.html#stop'"/>
    <xsl:with-param name="string" select="/GSP/CT"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="stopwords_suggestions">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="'/help/basics.html'"/>
    <xsl:with-param name="replace" select="'user_help.html'"/>
    <xsl:with-param name="string" select="$stopwords_suggestions1"/>
  </xsl:call-template>
</xsl:variable>

<xsl:if test="/GSP/CT">
  <font size="-1" color="gray">
    <xsl:value-of disable-output-escaping="yes"
      select="$stopwords_suggestions"/>
  </font>
</xsl:if>
</xsl:template>


<!-- **********************************************************************
Spelling suggestions in result page (do not customize)
   ********************************************************************** -->
<xsl:template name="spelling">
<xsl:if test="/GSP/Spelling/Suggestion">
  <p id="spell-suggest"><span class="p"><xsl:value-of select="$spelling_text"/>
       <xsl:call-template name="nbsp"/>
  	 </span>
  <xsl:variable name="apps_param">
    <xsl:choose>
      <xsl:when test="/GSP/PARAM[@name='exclude_apps']">
        <xsl:text disable-output-escaping='yes'>&amp;exclude_apps=</xsl:text>
        <xsl:value-of select="/GSP/PARAM[@name='exclude_apps']/@original_value" />
      </xsl:when>
      <xsl:when test="/GSP/PARAM[@name='only_apps']">
        <xsl:text disable-output-escaping='yes'>&amp;only_apps=</xsl:text>
        <xsl:value-of select="/GSP/PARAM[@name='only_apps']/@original_value" />
      </xsl:when>
    </xsl:choose>
  </xsl:variable>
  <a ctype="spell"
    href="{$gsa_search_root_path_prefix}?q={/GSP/Spelling/Suggestion[1]/@qe}&amp;spell=1&amp;{$synonym_url}{$apps_param}">
    <xsl:value-of disable-output-escaping="yes" select="/GSP/Spelling/Suggestion[1]"/>
  </a>
  </p>
</xsl:if>
</xsl:template>


<!-- **********************************************************************
Synonym suggestions in result page (do not customize)
   ********************************************************************** -->
<xsl:template name="synonyms">
<xsl:if test="/GSP/Synonyms/OneSynonym">
  <p><span class="p"><font color="{$synonyms_text_color}">
       <xsl:value-of select="$synonyms_text"/>
       <xsl:call-template name="nbsp"/>
     </font></span>
  <xsl:for-each select="/GSP/Synonyms/OneSynonym">
    <a ctype="synonym" href="{$gsa_search_root_path_prefix}?q={@q}&amp;{$synonym_url}">
      <xsl:value-of disable-output-escaping="yes" select="."/>
    </a><xsl:text> </xsl:text>
  </xsl:for-each>
  </p>
</xsl:if>
</xsl:template>


<!-- **********************************************************************
Truncation functions (do not customize)
   ********************************************************************** -->
<xsl:template name="truncate_url">
<xsl:param name="t_url"/>

<xsl:choose>
  <xsl:when test="string-length($t_url) &lt; $truncate_result_url_length">
    <xsl:value-of select="$t_url"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:variable name="first" select="substring-before($t_url, '/')"/>
    <xsl:variable name="last">
            <xsl:call-template name="truncate_find_last_token">
              <xsl:with-param name="t_url" select="$t_url"/>
            </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="path_limit" select="$truncate_result_url_length - (string-length($first) + string-length($last) + 1)"/>

    <xsl:choose>
            <xsl:when test="$path_limit &lt;= 0">
              <xsl:value-of select="concat(substring($t_url, 1, $truncate_result_url_length), '...')"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:variable name="chopped_path">
                <xsl:call-template name="truncate_chop_path">
                  <xsl:with-param name="path" select="substring($t_url, string-length($first) + 2, string-length($t_url) - (string-length($first) + string-length($last) + 1))"/>
                  <xsl:with-param name="path_limit" select="$path_limit"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:value-of select="concat($first, '/.../', $chopped_path, $last)"/>
            </xsl:otherwise>
    </xsl:choose>
  </xsl:otherwise>
</xsl:choose>

</xsl:template>

<xsl:template name="truncate_find_last_token">
<xsl:param name="t_url"/>

<xsl:choose>
  <xsl:when test="contains($t_url, '/')">
    <xsl:call-template name="truncate_find_last_token">
          <xsl:with-param name="t_url" select="substring-after($t_url, '/')"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
          <xsl:value-of select="$t_url"/>
  </xsl:otherwise>
</xsl:choose>

</xsl:template>

<xsl:template name="truncate_chop_path">
<xsl:param name="path"/>
<xsl:param name="path_limit"/>

<xsl:choose>
  <xsl:when test="string-length($path) &lt;= $path_limit">
    <xsl:value-of select="$path"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:call-template name="truncate_chop_path">
      <xsl:with-param name="path" select="substring-after($path, '/')"/>
      <xsl:with-param name="path_limit" select="$path_limit"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>

</xsl:template>


<!-- **********************************************************************
Google Apps (do not customize)
   ********************************************************************** -->
<xsl:variable
name="sites_icon"
select="'https://www.google.com/sites/images/sites_favicon.ico'"/>
<xsl:variable
name="docs_icon"
select="'https://docs.google.com/images/doclist/icon_doc.gif'"/>
<xsl:variable
name="spreadsheets_icon"
select="'https://docs.google.com/images/doclist/icon_spread.gif'"/>
<xsl:variable
name="presentations_icon"
select="'https://docs.google.com/images/doclist/icon_pres.gif'"/>
<xsl:variable
name="pdf_icon"
select="'https://docs.google.com/images/doclist/icon_6_pdf.gif'"/>
<xsl:variable
name="drawing_icon"
select="'https://docs.google.com/images/doclist/icon_6_drawing.png'"/>
<xsl:variable
name="email_icon"
select="'https://ssl.gstatic.com/ui/v1/icons/mail/images/favicon.ico'"/>

<!-- **********************************************************************
A single result (do not customize)
   ********************************************************************** -->
<xsl:template match="R">
<xsl:param name="query"/>

<xsl:variable name="protocol"     select="substring-before(U, '://')"/>
<xsl:variable name="temp_url"     select="substring-after(U, '://')"/>
<xsl:variable name="display_url1" select="substring-after(UD, '://')"/>
<xsl:variable name="escaped_url"  select="substring-after(UE, '://')"/>

<xsl:variable name="display_url2">
  <xsl:choose>
    <xsl:when test="$display_url1">
      <xsl:value-of select="$display_url1"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$temp_url"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="display_url">
  <xsl:choose>
    <xsl:when test="$protocol='unc'">
      <xsl:call-template name="convert_unc">
        <xsl:with-param name="string" select="$display_url2"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$display_url2"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="stripped_url">
  <xsl:choose>
    <xsl:when test="$truncate_result_urls != '0'">
              <xsl:call-template name="truncate_url">
                <xsl:with-param name="t_url" select="$display_url"/>
              </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
          <xsl:value-of select="$display_url"/>
        </xsl:otherwise>
      </xsl:choose>
</xsl:variable>

<xsl:variable name="crowded_url" select="HN/@U"/>
<xsl:variable name="crowded_display_url1" select="HN"/>
<xsl:variable name="crowded_display_url">
  <xsl:choose>
    <xsl:when test="$protocol='unc'">
      <xsl:call-template name="convert_unc">
        <xsl:with-param name="string" select="substring-after($crowded_display_url1,'://')"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$crowded_display_url1"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="lower" select="'abcdefghijklmnopqrstuvwxyz'"/>
<xsl:variable name="upper" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>

<xsl:variable name="url_indexed" select="not(starts-with($temp_url, 'noindex!/'))"/>

<!-- *** Indent as required (only supports 2 levels) *** -->
<xsl:if test="@L='2'">
  <xsl:text disable-output-escaping="yes">&lt;blockquote class=&quot;g&quot;&gt;</xsl:text>
</xsl:if>

<!-- *** Result Header *** -->
<p class="g">

<xsl:variable name="apps_domain">
  <xsl:if test="starts-with($stripped_url, 'sites.google.com/a/') or
                starts-with($stripped_url, 'docs.google.com/a/') or
                starts-with($stripped_url, 'spreadsheets.google.com/a/')">
    <xsl:value-of
      select="substring-before(substring-after($stripped_url, '/a/'), '/')"/>
  </xsl:if>
</xsl:variable>

<!-- *** Google Sites icon *** -->
<xsl:if test="starts-with($stripped_url, 'sites.google.com/')">
  <img src="{$sites_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google Docs icon *** -->
<xsl:if test="starts-with($stripped_url, concat('docs.google.com/a/', $apps_domain, '/View?')) or
              RF[@NAME='type']/@VALUE='document'">
  <img src="{$docs_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google Spreadsheets icon *** -->
<xsl:if test="starts-with($stripped_url, 'spreadsheets.google.com/') or
               RF[@NAME='type']/@VALUE='spreadsheet'">
  <img src="{$spreadsheets_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google Presentations icon *** -->
<!-- TODO(timg): remove once Docs eliminates SimplePresentaionView URLs -->
<xsl:if test="starts-with($stripped_url,
                          concat('docs.google.com/a/', $apps_domain, '/SimplePresentationView?')) or
              starts-with($stripped_url,
                          concat('docs.google.com/a/', $apps_domain, '/PresentationView?')) or
              RF[@NAME='type']/@VALUE='presentation'">
  <img src="{$presentations_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google PDF viewer icon *** -->
<xsl:if test="RF[@NAME='type']/@VALUE='pdf'">
  <img src="{$pdf_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google Drawing icon *** -->
<xsl:if test="RF[@NAME='type']/@VALUE='drawing'">
  <img src="{$drawing_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** GMail icon *** -->
<xsl:if test="starts-with($stripped_url, 'mail.google.com') or
              RF[@NAME='type']/@VALUE='mail'">
  <img src="{$email_icon}" alt="" height="16" width="16"/>&#xA0;
</xsl:if>

<!-- *** Translation button -->
<xsl:variable name="res_num" select="@N"/>
<xsl:if test="$show_translation = '1' and $only_apps != '1'">
  <span class="trns-span" id="sec_trns_elem_span_{$res_num}"></span>
</xsl:if>

<!-- *** Result Title (including PDF tag and hyperlink) *** -->
<xsl:if test="$show_res_title != '0'">
  <span class="mime"><strong>
  <xsl:choose>
    <xsl:when test="@MIME='text/html' or @MIME='' or not(@MIME)"></xsl:when>
    <xsl:when test="@MIME='text/plain'">[TEXT]</xsl:when>
    <xsl:when test="@MIME='application/rtf'">[RTF]</xsl:when>
    <xsl:when test="@MIME='application/pdf'">[PDF]</xsl:when>
    <xsl:when test="@MIME='application/postscript'">[PS]</xsl:when>
    <xsl:when test="@MIME='application/vnd.ms-powerpoint' or @MIME='application/vnd.openxmlformats-officedocument.presentationml.presentation'">[MS POWERPOINT]</xsl:when>
    <xsl:when test="@MIME='application/vnd.ms-excel' or @MIME='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'">[MS EXCEL]</xsl:when>
    <xsl:when test="@MIME='application/msword' or @MIME='application/vnd.openxmlformats-officedocument.wordprocessingml.document'">[MS WORD]</xsl:when>
    <xsl:otherwise>
      <xsl:variable name="extension">
        <xsl:call-template name="last_substring_after">
          <xsl:with-param name="string" select="substring-after(
                                                $temp_url,
                                                '/')"/>
          <xsl:with-param name="separator" select="'.'"/>
          <xsl:with-param name="fallback" select="'UNKNOWN'"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:if test="string-length($extension) &lt;= 5">
        [<xsl:value-of select="translate($extension,$lower,$upper)"/>]
      </xsl:if>
    </xsl:otherwise>
  </xsl:choose>
  </strong></span>
  <xsl:text> </xsl:text>

  <xsl:variable name="link"
   select="$url_indexed and not(starts-with(U, $googleconnector_protocol))"/>

  <xsl:if test="$link">

    <xsl:text disable-output-escaping='yes'>&lt;a 
          ctype="c"
    </xsl:text>
          rank=&quot;<xsl:value-of select="position()"/>&quot;
    <xsl:text disable-output-escaping='yes'>
          href="</xsl:text>

    <xsl:choose>
      <xsl:when test="starts-with(U, $dbconnector_protocol)">
        <xsl:variable name="cache_encoding">
          <xsl:choose>
            <xsl:when test="'' != HAS/C/@ENC"><xsl:value-of select="HAS/C/@ENC"/></xsl:when>
            <xsl:otherwise>UTF-8</xsl:otherwise>
          </xsl:choose>
          </xsl:variable><xsl:value-of select="$gsa_search_root_path_prefix"/>?q=cache:<xsl:value-of select="HAS/C/@CID"/>:<xsl:value-of select="$stripped_url"/>+<xsl:value-of select="$stripped_search_query"/>&amp;<xsl:value-of select="$base_url"/>&amp;oe=<xsl:value-of select="$cache_encoding"/>
      </xsl:when>

      <xsl:when test="starts-with(U, $db_url_protocol)">
        <xsl:value-of disable-output-escaping='yes'
                      select="concat('db/', $temp_url)"/>
      </xsl:when>
      <!-- *** URI for smb or NFS must be escaped because it appears in the URI query *** -->
      <xsl:when test="$protocol='nfs' or $protocol='smb'">
        <xsl:value-of disable-output-escaping='yes'
                      select="concat($protocol,'/',$temp_url)"/>
      </xsl:when>
      <xsl:when test="$protocol='unc'">
        <xsl:value-of disable-output-escaping='yes' select="concat('file://', $display_url2)"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of disable-output-escaping='yes' select="U"/>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:text disable-output-escaping='yes'>"&gt;</xsl:text>
  </xsl:if>
  <span id="title_{$res_num}" class="l">
  <xsl:choose>
    <xsl:when test="T">
      <span class= "goog-trans-section l" transId="gadget_{$res_num}">
        <xsl:call-template name="reformat_keyword">
          <xsl:with-param name="orig_string" select="T"/>
        </xsl:call-template>
      </span>
    </xsl:when>
    <xsl:otherwise><xsl:value-of select="$stripped_url"/></xsl:otherwise>
  </xsl:choose>
  </span>
  <xsl:if test="$link">
      <xsl:text disable-output-escaping='yes'>&lt;/a&gt;</xsl:text>
  </xsl:if>
</xsl:if>


<!-- *** Snippet Box *** -->
<div class="wrapper">
  <div class="gsa-row">
    <div class="col s">
              <xsl:if test="$show_res_snippet != '0' and string-length(S) and
                    $only_apps != '1'">
        <span id="snippet_{$res_num}" class= "goog-trans-section snippet-details" transId="gadget_{$res_num}">
          <xsl:call-template name="reformat_keyword">
            <xsl:with-param name="orig_string" select="S"/>
          </xsl:call-template>
        </span>
      </xsl:if>

      <!-- *** Meta tags *** -->
      <xsl:if test="$show_meta_tags != '0' and $only_apps != '1'">
        <xsl:apply-templates select="MT"/>
      </xsl:if>

      <xsl:if test="$only_apps != '1' and
                    ($show_res_snippet != '0' and string-length(S)) or
                    ($show_meta_tags != '0' and MT[(@N != '') or (@V != '')])">
      <br/>
      </xsl:if>

      <!-- *** URL *** -->
      <xsl:if test="$only_apps != '1' or
                    ($only_apps = '1' and $show_apps_segmented_ui != '1')">
      <span class="index-details">
        <xsl:choose>
          <xsl:when test="not($url_indexed)">
            <xsl:if test="($show_res_size!='0') or
                          ($show_res_date!='0') or
                          ($show_res_cache!='0')">
              <xsl:text>Not Indexed:</xsl:text>
              <xsl:value-of select="$stripped_url"/>:
            </xsl:if>
          </xsl:when>
          <xsl:otherwise>
            <xsl:if test="$show_res_url != '0'">
              <xsl:value-of select="$stripped_url"/>
            </xsl:if>
          </xsl:otherwise>
        </xsl:choose>
      </span>
      </xsl:if>

      <!-- *** Miscellaneous (- size - date - cache) *** -->
      <xsl:if test="$url_indexed">
      <xsl:choose>
        <xsl:when test="'' != HAS/C/@ENC">
         <xsl:apply-templates select="HAS/C">
                       <xsl:with-param name="stripped_url" select="$stripped_url"/>
                       <xsl:with-param name="escaped_url" select="$escaped_url"/>
                       <xsl:with-param name="query" select="$query"/>
                       <xsl:with-param name="mime" select="@MIME"/>
                       <xsl:with-param name="date" select="FS[@NAME='date']/@VALUE"/>
                       <xsl:with-param name="result_num" select="$res_num"/>
         </xsl:apply-templates>
        </xsl:when>
        <xsl:otherwise>
        <xsl:call-template name="showdate">
            <xsl:with-param name="date" select="FS[@NAME='date']/@VALUE"/>
        </xsl:call-template>
        </xsl:otherwise>
        </xsl:choose>
      </xsl:if>

      <!-- *** Link to more links from this site *** -->
      <xsl:if test="HN">
        <br/>
        <xsl:choose>
          <xsl:when test="HN/@MDT != ''">
            <xsl:variable name="crowded_metatag" select="HN/@MDT"/>
            <xsl:variable name="crowded_metavalue" select="HN/@MDV"/>
            <xsl:variable name="crowded_matchtype" select="HN/@MCT"/>

            <!-- *** search_url_with_metadata *** -->
            <xsl:variable name="search_url_with_metadata">
              <xsl:for-each
                  select="/GSP/PARAM[(@name != 'start') and
                                     (@name != $embedded_mode_root_path_param) and
                                     (@name != $embedded_mode_resource_root_path_param) and
                                     (@name != $embedded_mode_disable_style) and
                                     (@name != 'swrnum') and
                                     (@name != 'expertsearchasync') and
                                     (@name != 'epoch' or $is_test_search != '') and
                                     not(starts-with(@name, 'metabased_'))]">
                <xsl:choose>
                  <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
                    <!-- do nothing to remove 'ip' from the URL -->
                  </xsl:when>
                  <xsl:when test="@name = 'q'">
                    <xsl:value-of select="@name"/>
                    <xsl:text>=</xsl:text>
                    <xsl:value-of select="@original_value"/>
                    <xsl:text>+inmeta:</xsl:text>
                    <xsl:call-template name="term-escape">
                      <xsl:with-param name="val" select="$crowded_metatag"/>
                    </xsl:call-template>
                    <xsl:choose>
                      <xsl:when test="$crowded_matchtype = 'inexact'">
                        <xsl:text>~</xsl:text>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>=</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="term-escape">
                      <xsl:with-param name="val" select="$crowded_metavalue"/>
                    </xsl:call-template>
                    <xsl:if test="$crowded_matchtype = 'wildcard'">
                      <xsl:text>*</xsl:text>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="@name = 'only_apps' and $show_apps_segmented_ui = '1'">
                    <xsl:value-of select="'exclude_apps=1'" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
                    <xsl:value-of select="@original_value"/>
                  </xsl:otherwise>
                </xsl:choose>
                <xsl:if test="position() != last()">
                  <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
                </xsl:if>
              </xsl:for-each>
            </xsl:variable>

            <!-- Show "More results" message depending on the type of metadata match-->
            <xsl:variable name="match_type_msg">
              <xsl:choose>
                <xsl:when test="$crowded_matchtype = 'inexact'">
                  where metatag <xsl:value-of select="$crowded_metatag"/> contains <xsl:value-of select="$crowded_metavalue"/>
                </xsl:when>
                <xsl:otherwise> <!-- Exact match -->
                  that exactly contains metadata <xsl:value-of select="$crowded_metatag"/>=<xsl:value-of select="$crowded_metavalue"/>
                  <xsl:if test = "$crowded_matchtype = 'wildcard'">
                    <xsl:text>*</xsl:text>
                  </xsl:if>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            [
              <a ctype="sitesearch" class="f" href="{$gsa_search_root_path_prefix}?as_sitesearch={$crowded_url}&amp;{$search_url_with_metadata}">
                More results from <xsl:value-of select="$crowded_display_url"/>
                <xsl:value-of select="$match_type_msg" />
              </a>
            ]

          </xsl:when>
          <xsl:otherwise>
            [<a ctype="sitesearch" class="f" href="{$gsa_search_root_path_prefix}?as_sitesearch={$crowded_url}&amp;{
                $search_url}">More results from <xsl:value-of select="$crowded_display_url"/></a>
            ]
          </xsl:otherwise>
        </xsl:choose>
      <!-- *** Link to aggregated results from database source *** -->
      <xsl:if test="starts-with($crowded_url, $db_url_protocol)">
      [
      <a ctype="db" class="f" href="dbaggr?sitesearch={$crowded_url}&amp;{
        $search_url}&amp;filter=0">View all data</a>
          ]
        </xsl:if>
      </xsl:if>


      <!-- *** Result Footer *** -->
    </div>
  </div>
</div>
</p>

<!-- *** End indenting as required (only supports 2 levels) *** -->
<xsl:if test="@L='2'">
  <xsl:text disable-output-escaping="yes">&lt;/blockquote&gt;</xsl:text>
</xsl:if>

</xsl:template>

<!-- **********************************************************************
Meta tag values within a result (do not customize)
   ********************************************************************** -->
<xsl:template match="MT">
<br/>
<span class="f"><xsl:value-of select="@N"/>: </span><xsl:value-of select="@V"/>
</xsl:template>

<!-- **********************************************************************
A single keymatch result (do not customize)
   ********************************************************************** -->
<xsl:template match="GM">
<p>
  <div class="wrapper keymatch">
    <div class="gsa-row">
      <div class="col">
        <a ctype="keymatch" href="{GL}">
          <xsl:value-of select="substring-before(GD,'#')"/>
        </a>
        <span class="keymatch-desc"><xsl:value-of select="substring-after(GD,'#')"/></span>
        <font size="-1" color="{$res_url_color}">
          <span class="a">
             <xsl:value-of select="GL"/>
          </span>
        </font>
      </div>
    </div>
  </div>
</p>
</xsl:template>


<!-- **********************************************************************
Variables for reformatting keyword-match display (do not customize)
   ********************************************************************** -->
<xsl:variable name="keyword_orig_start" select="'&lt;b&gt;'"/>
<xsl:variable name="keyword_orig_end" select="'&lt;/b&gt;'"/>

<xsl:variable name="keyword_reformat_start">
<xsl:if test="$res_keyword_format">
  <xsl:text>&lt;</xsl:text>
  <xsl:value-of select="$res_keyword_format"/>
  <xsl:text>&gt;</xsl:text>
</xsl:if>
<xsl:if test="($res_keyword_size) or ($res_keyword_color)">
<xsl:text>&lt;font</xsl:text>
<xsl:if test="$res_keyword_size">
  <xsl:text> size="</xsl:text>
  <xsl:value-of select="$res_keyword_size"/>
  <xsl:text>"</xsl:text>
</xsl:if>
<xsl:if test="$res_keyword_color">
  <xsl:text> color="</xsl:text>
  <xsl:value-of select="$res_keyword_color"/>
  <xsl:text>"</xsl:text>
</xsl:if>
<xsl:text>&gt;</xsl:text>
</xsl:if>
</xsl:variable>

<xsl:variable name="keyword_reformat_end">
<xsl:if test="($res_keyword_size) or ($res_keyword_color)">
  <xsl:text>&lt;/font&gt;</xsl:text>
</xsl:if>
<xsl:if test="$res_keyword_format">
  <xsl:text>&lt;/</xsl:text>
  <xsl:value-of select="$res_keyword_format"/>
  <xsl:text>&gt;</xsl:text>
</xsl:if>
</xsl:variable>

<!-- **********************************************************************
Reformat the keyword match display in a title/snippet string
   (do not customize)
   ********************************************************************** -->
<xsl:template name="reformat_keyword">
<xsl:param name="orig_string"/>

<xsl:variable name="reformatted_1">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="$keyword_orig_start"/>
    <xsl:with-param name="replace" select="$keyword_reformat_start"/>
    <xsl:with-param name="string" select="$orig_string"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="reformatted_2">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="$keyword_orig_end"/>
    <xsl:with-param name="replace" select="$keyword_reformat_end"/>
    <xsl:with-param name="string" select="$reformatted_1"/>
  </xsl:call-template>
</xsl:variable>

<xsl:value-of disable-output-escaping='yes' select="$reformatted_2"/>

</xsl:template>


<!-- **********************************************************************
Helper templates for generating a result item (do not customize)
   ********************************************************************** -->

<!-- *** Miscellaneous: - size - date - cache *** -->
<xsl:template match="C">
  <xsl:param name="stripped_url"/>
  <xsl:param name="escaped_url"/>
  <xsl:param name="query"/>
  <xsl:param name="mime"/>
  <xsl:param name="date"/>
  <xsl:param name="result_num"/>

  <xsl:variable name="docid"><xsl:value-of select="@CID"/></xsl:variable>

  <xsl:if test="$show_res_size != '0'">
  <xsl:if test="not(@SZ='')">
      <span class="index-details">
        <xsl:text> - </xsl:text>
        <xsl:value-of select="@SZ"/>
      </span>
  </xsl:if>
  </xsl:if>

  <xsl:call-template name="showdate">
      <xsl:with-param name="date" select="$date"/>
  </xsl:call-template>

  <xsl:if test="$show_res_cache != '0'">
     <span class="index-details">
      <xsl:text> - </xsl:text>
      </span>
      <xsl:variable name="cache_encoding">
        <xsl:choose>
          <xsl:when test="'' != @ENC"><xsl:value-of select="@ENC"/></xsl:when>
          <xsl:otherwise>UTF-8</xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <a ctype="cache" id="cache_link_{$result_num}" class="f"
            href="{$gsa_search_root_path_prefix}?q=cache:{$docid}:{$escaped_url}+{
                  $stripped_search_query}&amp;{$base_url}&amp;oe={$cache_encoding}">
        <xsl:choose>
          <xsl:when test="not($mime)">Cached</xsl:when>
          <xsl:when test="$mime='text/html'">Cached</xsl:when>
          <xsl:when test="$mime='text/plain'">Cached</xsl:when>
          <xsl:otherwise>Text Version</xsl:otherwise>
        </xsl:choose>
      </a>
      <xsl:if test="$show_translation = '1' and $only_apps != '1'">
        <xsl:call-template name="nbsp3"/>
        <a ctype="cache" id="translate_cache_link_{$result_num}" class="f trns-cache-link"
            href="{$gsa_search_root_path_prefix}?q=cache:{$docid}:{$escaped_url}+{
                 $stripped_search_query}&amp;{$base_url}&amp;oe={$cache_encoding}">Translated
        </a>
      </xsl:if>
  </xsl:if>

</xsl:template>

<xsl:template name="showdate">
  <xsl:param name="date"/>

  <xsl:if test="$show_res_date != '0'">
  <xsl:if test="($date != '')">
      <span class="index-details">
      <xsl:text> - </xsl:text>
      <xsl:value-of select="$date"/>
      </span>
  </xsl:if>
  </xsl:if>
</xsl:template>


<!-- **********************************************************************
Google navigation bar in result page (do not customize)
   ********************************************************************** -->
<xsl:template name="google_navigation">
  <xsl:param name="prev"/>
  <xsl:param name="next"/>
  <xsl:param name="view_begin"/>
  <xsl:param name="view_end"/>
  <xsl:param name="guess"/>
  <xsl:param name="navigation_style"/>
  <xsl:param name="dynamic_nav_bar"/>

<!-- *** Override the navigation style to 'simple' type if result estimation
         is not available and the navigation type has been specified
         as 'google'. *** -->
<xsl:variable name="navigation_style_to_use">
  <xsl:choose>
    <xsl:when test="$navigation_style = 'google' and $guess = ''">simple</xsl:when>
    <xsl:otherwise><xsl:value-of select="$navigation_style"/></xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="fontclass">
  <xsl:choose>
    <xsl:when test="$navigation_style_to_use = 'top'
        and $dynamic_nav_bar = '1'">dn-bar-nav</xsl:when>
    <xsl:when test="$navigation_style_to_use = 'top'">s</xsl:when>
    <xsl:otherwise></xsl:otherwise> <!-- changed from 'b' to '' so this can be controlled via CSS more easily -->
  </xsl:choose>
</xsl:variable>

<!-- *** Test to see if we should even show navigation *** -->
<xsl:if test="($prev) or ($next)">

<!-- *** Start Google result navigation bar *** -->

  <xsl:if test="$navigation_style_to_use != 'top'">
    <xsl:text disable-output-escaping="yes">&lt;div class=&quot;n&quot;&gt;</xsl:text>
  </xsl:if>
  <div class="wrapper">
    <div class="gsa-row">
      <!-- *** Show previous navigation, if available *** -->
      <ul class="n-ul">
      <xsl:choose>
        <xsl:when test="$prev">
          <li class="{$fontclass}">
            <a ctype="nav.prev"
               href="{$gsa_search_root_path_prefix}?{$search_url}&amp;start={$view_begin - $num_results - 1}">
            <xsl:if test="$navigation_style_to_use = 'google'">
              <img src="{$gsa_resource_root_path_prefix}/nav_previous.gif" width="68" height="26" alt="Previous" border="0"/>
             </xsl:if>
            <xsl:if test="$navigation_style_to_use = 'top'">
              <xsl:text>&lt;</xsl:text><xsl:call-template name="nbsp"/>
            </xsl:if>
            <xsl:text>Previous</xsl:text>
          </a>
          </li>
        </xsl:when>
      <xsl:otherwise>
        <xsl:if test="$navigation_style_to_use = 'google'">
          <img src="{$gsa_resource_root_path_prefix}/nav_first.png" width="18" height="26" alt="First" border="0"/>
        </xsl:if>
      </xsl:otherwise>
      </xsl:choose>    
      <xsl:if test="($navigation_style_to_use = 'google') or
                    ($navigation_style_to_use = 'link')">
<!-- *** Google result set navigation *** -->
      <xsl:variable name="mod_end">
        <xsl:choose>
          <xsl:when test="$next"><xsl:value-of select="$guess"/></xsl:when>
          <xsl:otherwise><xsl:value-of select="$view_end"/></xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:call-template name="result_nav">
        <xsl:with-param name="start" select="0"/>
        <xsl:with-param name="end" select="$mod_end"/>
        <xsl:with-param name="current_view" select="($view_begin)-1"/>
        <xsl:with-param name="navigation_style" select="$navigation_style_to_use"/>
      </xsl:call-template>
      </xsl:if>

        <!-- *** Show next navigation, if available *** -->
      <xsl:choose>
        <xsl:when test="$next">
          <li class="{$fontclass}">
          <a ctype="nav.next" href="{$gsa_search_root_path_prefix}?{$search_url}&amp;start={$view_begin +
            $num_results - 1}">
            <xsl:if test="$navigation_style_to_use = 'google'">
              <img src="{$gsa_resource_root_path_prefix}/nav_next.png" width="100" height="26" alt="Next" border="0"/>
            </xsl:if>
            <xsl:text>Next</xsl:text>
            <xsl:if test="$navigation_style_to_use = 'top'">
              <xsl:call-template name="nbsp"/><xsl:text>&gt;</xsl:text>
            </xsl:if>
          </a>
          </li>
        </xsl:when>
        <xsl:otherwise>
          <xsl:if test="$navigation_style_to_use = 'google'">
            <img src="{$gsa_resource_root_path_prefix}/nav_last.png" width="46" height="26" alt="Last" border="0"/>
          </xsl:if>
        </xsl:otherwise>
      </xsl:choose>
      </ul>
        <!-- *** End Google result bar *** -->
    </div>
  </div>
  <xsl:if test="$navigation_style_to_use != 'top'">
    <xsl:text disable-output-escaping="yes">&lt;/div&gt;</xsl:text>
  </xsl:if>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Helper templates for generating Google result navigation (do not customize)
 only shows 10 sets up or down from current view
   ********************************************************************** -->
<xsl:template name="result_nav">
<xsl:param name="start" select="'0'"/>
<xsl:param name="end"/>
<xsl:param name="current_view"/>
<xsl:param name="navigation_style"/>

<!-- *** Choose how to show this result set *** -->
<xsl:choose>
  <xsl:when test="($start)&lt;(($current_view)-(10*($num_results)))">
  </xsl:when>
  <xsl:when test="(($current_view)&gt;=($start)) and
                  (($current_view)&lt;(($start)+($num_results)))">
    <li>
      <xsl:if test="$navigation_style = 'google'">
        <img src="{$gsa_resource_root_path_prefix}/nav_current.gif" width="16" height="26" alt="Current"/>
      </xsl:if>
      <span class="i"><xsl:value-of
        select="(($start)div($num_results))+1"/></span>
    </li>
  </xsl:when>
  <xsl:otherwise>
    <li>
      <a ctype="nav.page" href="{$gsa_search_root_path_prefix}?{$search_url}&amp;start={$start}">
      <xsl:if test="$navigation_style = 'google'">
        <img src="{$gsa_resource_root_path_prefix}/nav_page.gif" width="16" height="26" alt="Navigation"
             border="0"/>
      </xsl:if>
      <xsl:value-of select="(($start)div($num_results))+1"/>
      </a>
    </li>
  </xsl:otherwise>
</xsl:choose>

<!-- *** Recursively iterate through result sets to display *** -->
<xsl:if test="((($start)+($num_results))&lt;($end)) and
              ((($start)+($num_results))&lt;(($current_view)+
              (10*($num_results))))">
  <xsl:call-template name="result_nav">
    <xsl:with-param name="start" select="$start+$num_results"/>
    <xsl:with-param name="end" select="$end"/>
    <xsl:with-param name="current_view" select="$current_view"/>
    <xsl:with-param name="navigation_style" select="$navigation_style"/>
  </xsl:call-template>
</xsl:if>

</xsl:template>


<!-- **********************************************************************
Top separation bar (do not customize)
   ********************************************************************** -->
<xsl:template name="top_sep_bar">
<xsl:param name="text"/>
<xsl:param name="show_info"/>
<xsl:param name="time"/>

  <xsl:if test="$show_custom_tabs != '0'">
    <xsl:call-template name="gsa_custom_tabs"/>
  </xsl:if>  

  <div class="wrapper clearfix">
    <div class="gsa-row">
      <div class="col seperator-bar">
         <div class="timing">
         <xsl:if test="$show_info != 0">
          <span class="search-stats">
          <xsl:if test="count(/GSP/RES/R)>0 ">
            <xsl:choose>
              <xsl:when test="(($access = 's' or $access = 'a') and /GSP/RES/M = '')">
                Results <b><xsl:value-of select="RES/@SN"/></b> - <b id="num_results"><xsl:value-of select="RES/@EN"/></b> for <b><xsl:value-of select="$space_normalized_query"/></b>.
              </xsl:when>
              <xsl:otherwise>
                Currently showing <b><xsl:value-of select="RES/@SN"/></b> - <b id="num_results"><xsl:value-of select="RES/@EN"/></b> of about <b><xsl:value-of select="RES/M"/></b> results for <b><xsl:value-of select="$space_normalized_query"/></b>.
              </xsl:otherwise>
            </xsl:choose>
          </xsl:if>
          <xsl:if test="$show_timing_label !=0">
            Search took <span style="font-weight: bold;" id="search_time"><xsl:value-of select="round($time * 100.0) div 100.0"/></span> seconds.
          </xsl:if>
          <xsl:if test="$show_sort_by != '0'">
              <xsl:call-template name="sort_by"/>
          </xsl:if>
          </span>
        </xsl:if>  
         </div>
      </div> 
    </div>
  </div>
  <hr class="z"/>
  <xsl:if test="$choose_sep_bar = 'line'">
    <hr size="1" color="gray"/>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
Analytics script (do not customize)
   ********************************************************************** -->
<xsl:template name="analytics">
<xsl:if test="string-length($analytics_account) != 0">
 <script type="text/javascript" src="{$analytics_script_url}"></script>
 <script type="text/javascript">
   var pageTracker = _gat._getTracker("<xsl:value-of select='$analytics_account'/>");
   pageTracker._trackPageview();
 </script>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Utility function for constructing copyright text (do not customize)
   ********************************************************************** -->
<xsl:template name="copyright">
  <div class="copyright clearfix">
    <span class="powered-by">Powered by Google Search Appliance</span>
  </div>
</xsl:template>


<!-- **********************************************************************
Utility functions for generating html entities
   ********************************************************************** -->
<xsl:template name="nbsp">
<xsl:text disable-output-escaping="yes">&amp;nbsp;</xsl:text>
</xsl:template>
<xsl:template name="nbsp3">
<xsl:call-template name="nbsp"/>
<xsl:call-template name="nbsp"/>
<xsl:call-template name="nbsp"/>
</xsl:template>
<xsl:template name="nbsp4">
<xsl:call-template name="nbsp3"/>
<xsl:call-template name="nbsp"/>
</xsl:template>
<xsl:template name="quot">
<xsl:text disable-output-escaping="yes">&amp;quot;</xsl:text>
</xsl:template>
<xsl:template name="rsaquo">
<dfn><xsl:text disable-output-escaping="yes">&amp;#8250;</xsl:text></dfn>
</xsl:template>
<xsl:template name="endash">
<xsl:text disable-output-escaping="yes">&amp;#8211;</xsl:text>
</xsl:template>
<xsl:template name="copy">
<xsl:text disable-output-escaping="yes">&amp;copy;</xsl:text>
</xsl:template>

<!-- **********************************************************************
Utility functions for generating head elements so that the XSLT processor
won't add a meta tag to the output, since it may specify the wrong
encoding (utf8) in the meta tag.
   ********************************************************************** -->
<xsl:template name="plainHeadStart">
<xsl:text disable-output-escaping="yes">&lt;head&gt;</xsl:text>
<meta name="robots" content="NOINDEX,NOFOLLOW"/>
<xsl:text>
</xsl:text>
</xsl:template>
<xsl:template name="plainHeadEnd">
<xsl:text disable-output-escaping="yes">&lt;/head&gt;</xsl:text>
<xsl:text>
</xsl:text>
</xsl:template>


<!-- **********************************************************************
Utility functions for generating head elements with a meta tag to the output
specifying the character set as requested
   ********************************************************************** -->
<xsl:template name="langHeadStart">
<xsl:if test="$is_embedded_mode != '1'">
<xsl:text disable-output-escaping="yes">&lt;head&gt;</xsl:text>
<meta name="robots" content="NOINDEX,NOFOLLOW"/>
<meta name="viewport" content="width=device-width, target-densitydpi=160dpi, initial-scale=1"/>
<xsl:choose>
  <xsl:when test="PARAM[(@name='oe') and (@value='utf8')]">
    <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='oe') and (@value!='')]">
    <meta http-equiv="content-type" content="text/html; charset={PARAM[@name='oe']/@value}"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-CN')]">
    <meta http-equiv="content-type" content="text/html; charset=GB2312"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-TW')]">
    <meta http-equiv="content-type" content="text/html; charset=Big5"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_cs')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_da')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_nl')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_en')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_et')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_fi')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_fr')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_de')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_el')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-7"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_iw')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-8-I"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_hu')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_is')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_it')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_ja')]">
    <meta http-equiv="content-type" content="text/html; charset=Shift_JIS"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_ko')]">
    <meta http-equiv="content-type" content="text/html; charset=EUC-KR"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_lv')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_lt')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_no')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_pl')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_pt')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_ro')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_ru')]">
    <meta http-equiv="content-type" content="text/html; charset=windows-1251"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_es')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_sv')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:otherwise>
    <meta http-equiv="content-type" content="text/html; charset="/>
  </xsl:otherwise>
</xsl:choose>
</xsl:if>
<!-- UAR v2 - Load the right CSS file for the UAR UI component,
     as required. This should be placed in the head section of the
     document. -->
<xsl:if test="$show_onebox != '0'">
  <xsl:if test="/GSP/ENTOBRESULTS/OBRES/provider = $uar_provider">
  <xsl:choose>
    <xsl:when test="$document_direction = 'rtl'">
      <link rel="stylesheet"
          href="{$gsa_resource_root_path_prefix}/uardesktop_rtl.css"
          type="text/css" />
    </xsl:when>
    <xsl:otherwise>
      <link rel="stylesheet"
          href="{$gsa_resource_root_path_prefix}/uardesktop.css"
          type="text/css" />
    </xsl:otherwise>
  </xsl:choose>
  <!-- Override below styles to change the look and feel of the UAR section by
       adding appropriate CSS style properties. -->
  <style>
    /**
     * Background (default: #f2f7ff) and border-color (default: #ebebeb)
     * property for the UAR section.
     */
    .gsa-uar-container {
    }
    /* Description title color. Default is #555. */
    .gsa-uar-container h2 {
    }
    /* Color of the URL text. Default is #0e774a. */
    .gsa-uar-record cite {
    }
    <xsl:if test="$is_disable_style_in_embedded_mode = '1'">
    .gsa-uar-container {
      background: none;
    }
    .oneboxResults .gsa-uar-url-field, .oneboxResults .gsa-uar-title-field {
      width: 99%;
    }
    </xsl:if>
  </style>
  </xsl:if>
</xsl:if>

<!-- Expert Search - Load the right CSS file for the expert search UI
     component. -->
<xsl:if test="$is_expert_search_configured = '1'">
  <xsl:call-template name="include_expert_search_css">
    <xsl:with-param name="doc_dir" select="$document_direction" />
    <xsl:with-param name="src_prefix" select="$gsa_resource_root_path_prefix" />
  </xsl:call-template>
  
  <xsl:if test="$is_disable_style_in_embedded_mode = '1'">
    <style type="text/css">
      .gsa-exp-container,
      .gsa-exp-header h2,
      .gsa-exp-header a,
      ol.gsa-exp-results li {
        font-size: inherit;
      }
      ol.gsa-exp-pagination a, ol.gsa-exp-pagination span {
        color: inherit;
      }
    </style>
  </xsl:if>
</xsl:if>
<script type="text/javascript">
  /* Returns the root path prefix for full-refresh search requests. */
  function GSA_getSearchRootPathPrefix() {
    return '<xsl:value-of select="$gsa_search_root_path_prefix" />';
  }
  /* Returns the root path prefix for resources. */
  function GSA_getResourceRootPathPrefix() {
    return '<xsl:value-of select="$gsa_resource_root_path_prefix" />';
  }
  /* Checks if the search results is accessed in embedded mode or not. */
  function GSA_isEmbeddedMode() {
    return <xsl:value-of
        select="if ($is_embedded_mode = '1') then 'true' else 'false'" />;
  }
</script>
<xsl:text>
</xsl:text>
</xsl:template>

<xsl:template name="langHeadEnd">
<xsl:if test="$is_embedded_mode != '1'">
<xsl:text disable-output-escaping="yes">&lt;/head&gt;</xsl:text>
</xsl:if>
<xsl:text>
</xsl:text>
</xsl:template>

<!-- *** Generates the <body> section for the search results page. *** -->
<xsl:template name="generate_html_body_for_search_results">
<!-- Import all required JavaScript modules based on enabled features. -->
<xsl:if test="$show_suggest = '1' or $show_res_clusters = '1'">
  <script type="text/javascript"
      src="{$gsa_resource_root_path_prefix}/common.js"></script>
  <script type="text/javascript"
      src="{$gsa_resource_root_path_prefix}/xmlhttp.js"></script>
  <script type="text/javascript"
      src="{$gsa_resource_root_path_prefix}/uri.js"></script>
</xsl:if>
<xsl:if test="$show_res_clusters = '1'">
  <script type="text/javascript"
      src="{$gsa_resource_root_path_prefix}/cluster.js"></script>
</xsl:if>
<!-- Add required JS function calls based on enabled features. -->
<xsl:variable name="ss_load_call">
  <!-- Initialize suggest control. -->
  <xsl:if test="$show_suggest != '0'">
    <xsl:text disable-output-escaping="yes">ss_sf();</xsl:text>
  </xsl:if>
</xsl:variable>
<xsl:variable name="cs_load_call">
  <!-- Initialize results clustering. -->
  <xsl:if test="$show_res_clusters = '1'">
    <xsl:text disable-output-escaping="yes">cs_loadClusters('</xsl:text>
    <xsl:value-of select="$search_url_escaped" />
    <xsl:text disable-output-escaping="yes">', cs_drawClusters);</xsl:text>
  </xsl:if>
</xsl:variable>

<!-- Do not render body tag in embedded mode. -->
<xsl:if test="$is_embedded_mode != '1'">
  <xsl:text disable-output-escaping="yes">&lt;</xsl:text>
  <xsl:text>body class="clearfix </xsl:text><xsl:value-of select="$skin_class"/><xsl:text>" onLoad="resetForms(); fixFileLinks();</xsl:text>
  <xsl:value-of select="$cs_load_call"/>
  <xsl:value-of select="$ss_load_call"/>
  <xsl:text disable-output-escaping="yes">" dir="ltr"&gt;</xsl:text>
  <xsl:text disable-output-escaping="yes">&lt;div id="container" class="schoolpage"&gt;</xsl:text>
  <xsl:call-template name="header_element"/>
  <xsl:call-template name="main_content_wrapper_start"/>
  <xsl:text disable-output-escaping="yes">&lt;div class="main-content"&gt;</xsl:text>
</xsl:if>
<!-- Render search results section. -->
<xsl:call-template name="search_results_body"/>
<!-- Load Suggest script. -->
<xsl:if test="$show_suggest = '1'">
  <xsl:call-template name="gsa_suggest" />
</xsl:if>
<!-- Make required onload JS calls directly when in embedded mode. -->
<xsl:if test="$is_embedded_mode = '1'">
  <script type="text/javascript">
    <xsl:value-of select="$cs_load_call"/>
  </script>
</xsl:if>
<!-- Create the input field element for expert search, if enabled. -->
<xsl:call-template name="include_expert_search_history_input" />
<!-- Initialize side bar if enabled. -->
<xsl:if test="$show_sidebar = '1'">
  <script type="text/javascript">
   initSidebar();
  </script>
</xsl:if>
<xsl:if test="$is_embedded_mode != '1'">
  <xsl:text disable-output-escaping="yes">&lt;/div&gt;</xsl:text>
    <!-- *** Customer's own result page footer *** -->
  <xsl:call-template name="footer_element"/>
  <xsl:call-template name="main_content_wrapper_end"/>
  <xsl:text disable-output-escaping="yes">&lt;/div&gt;</xsl:text>
  <xsl:text disable-output-escaping="yes">&lt;/body&gt;</xsl:text>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Utility functions (do not customize)
   ********************************************************************** -->

<!-- *** Find the substring after the last occurence of a separator *** -->
<xsl:template name="last_substring_after">

<xsl:param name="string"/>
<xsl:param name="separator"/>
<xsl:param name="fallback"/>

<xsl:variable name="newString"
  select="substring-after($string, $separator)"/>

<xsl:choose>
  <xsl:when test="$newString!=''">
    <xsl:call-template name="last_substring_after">
      <xsl:with-param name="string" select="$newString"/>
      <xsl:with-param name="separator" select="$separator"/>
      <xsl:with-param name="fallback" select="$newString"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$fallback"/>
  </xsl:otherwise>
</xsl:choose>

</xsl:template>

<!-- *** Find and replace *** -->
<xsl:template name="replace_string">
<xsl:param name="find"/>
<xsl:param name="replace"/>
<xsl:param name="string"/>
<xsl:choose>
  <xsl:when test="contains($string, $find)">
    <xsl:value-of select="substring-before($string, $find)"/>
    <xsl:value-of select="$replace"/>
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="$find"/>
      <xsl:with-param name="replace" select="$replace"/>
      <xsl:with-param name="string"
        select="substring-after($string, $find)"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$string"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<!-- *** Decode hex encoding *** -->
<xsl:template name="decode_hex">
<xsl:param name="encoded" />

<xsl:variable name="hex" select="'0123456789ABCDEF'" />
<xsl:variable name="ascii"> !"#$%&amp;'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~</xsl:variable>

<xsl:choose>
  <xsl:when test="contains($encoded,'%')">
    <xsl:value-of select="substring-before($encoded,'%')" />
    <xsl:variable name="hexpair" select="translate(substring(substring-after($encoded,'%'),1,2),'abcdef','ABCDEF')" />
    <xsl:variable name="decimal" select="(string-length(substring-before($hex,substring($hexpair,1,1))))*16 + string-length(substring-before($hex,substring($hexpair,2,1)))" />
    <xsl:choose>
      <xsl:when test="$decimal &lt; 127 and $decimal &gt; 31">
        <xsl:value-of select="substring($ascii,$decimal - 31,1)" />
      </xsl:when>
      <xsl:when test="$decimal &gt; 159">
        <xsl:text disable-output-escaping="yes">%</xsl:text>
        <xsl:value-of select="$hexpair" />
      </xsl:when>
      <xsl:otherwise>?</xsl:otherwise>
    </xsl:choose>
    <xsl:call-template name="decode_hex">
      <xsl:with-param name="encoded" select="substring(substring-after($encoded,'%'),3)" />
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$encoded" />
  </xsl:otherwise>
</xsl:choose>

</xsl:template>

<!-- *** Convert UNC *** -->
<xsl:template name="convert_unc">
<xsl:param name="string"/>
<xsl:variable name="slash">/</xsl:variable>
<xsl:variable name="backslash">\</xsl:variable>
<xsl:variable name="escaped_ampersand">&amp;amp;</xsl:variable>
<xsl:variable name="unescaped_ampersand">&amp;</xsl:variable>

<xsl:variable name="converted_1">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find"    select="$slash"/>
    <xsl:with-param name="replace" select="$backslash"/>
    <xsl:with-param name="string"  select="$string"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="converted_2">
  <xsl:call-template name="decode_hex">
    <xsl:with-param name="encoded" select="$converted_1"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="converted_3">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find"    select="$escaped_ampersand"/>
    <xsl:with-param name="replace" select="$unescaped_ampersand"/>
    <xsl:with-param name="string"  select="$converted_2"/>
  </xsl:call-template>
</xsl:variable>

<xsl:value-of disable-output-escaping='yes' select="concat($backslash,$backslash,$converted_3)"/>

</xsl:template>

<!-- **********************************************************************
Display error messages
   ********************************************************************** -->
<xsl:template name="error_page">
<xsl:param name="errorMessage"/>
<xsl:param name="errorDescription"/>

<html>
	<xsl:attribute name="class">
	<xsl:value-of select="$skin_class"/>
	</xsl:attribute>
  <xsl:call-template name="plainHeadStart"/>
    <title><xsl:value-of select="$error_page_title"/></title>
          <xsl:call-template name="style"/>
  <xsl:call-template name="plainHeadEnd"/>
  <body>
  	<xsl:attribute name="class">
	<xsl:value-of select="'clearfix'"/>
	<xsl:text>&#160;</xsl:text>
	<xsl:value-of select="$skin_class"/>
	</xsl:attribute>
	<xsl:attribute name="dir">ltr</xsl:attribute>
   <div id="container" class="schoolpage">
   <!--HEADER COMPONENTS-->
    <xsl:call-template name="header_element"/>
	<xsl:call-template name="main_content_wrapper_start"/>
    <div class="main-content" role="main">
    <xsl:call-template name="personalization"/>
    <xsl:call-template name="analytics"/>
	<xsl:if test="$show_logo != '0'">
              <table border="0" cellpadding="0" cellspacing="0">
                <tr>
                        <td rowspan="3" valign="top">
                        <xsl:call-template name="logo"/>
                        <xsl:call-template name="nbsp3"/>
                      </td>
                </tr>
              </table>
          </xsl:if>

    <xsl:call-template name="top_sep_bar">
      <xsl:with-param name="text" select="$sep_bar_error_text"/>
              <xsl:with-param name="show_info" select="0"/>
      <xsl:with-param name="time" select="0"/>
    </xsl:call-template>

    <p>
    <table width="99%" border="0" cellpadding="2" cellspacing="0">
      <tr>
        <td><font color="#990000" size="+1">Message:</font></td>
        <td><font color="#990000" size="+1"><xsl:value-of select="$errorMessage"/></font></td>
      </tr>
      <tr>
        <td><font color="#990000">Description:</font></td>
        <td><font color="#990000"><xsl:value-of select="$errorDescription"/></font></td>
      </tr>
      <tr>
        <td><font color="#990000">Details:</font></td>
        <td><font color="#990000"><xsl:copy-of select="/"/></font></td>
      </tr>
    </table>
    </p>

        <hr/>
        <xsl:call-template name="copyright"/>
    </div>
	<xsl:call-template name="footer_element"/>
	<xsl:call-template name="main_content_wrapper_end"/>
	</div>
  </body>
</html>
</xsl:template>


<!-- **********************************************************************
Google Desktop for Enterprise integration templates
   ********************************************************************** -->
<xsl:template name="desktop_tab">

<!-- *** Show the Google tabs *** -->

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.web" href="http://www.google.com/search?q={$qval}">Web</a>
</font>

<xsl:call-template name="nbsp4"/>

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.images"  href="http://images.google.com/images?q={$qval}">Images</a>
</font>

<xsl:call-template name="nbsp4"/>

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.groups" href="http://groups.google.com/groups?q={$qval}">Groups</a>
</font>

<xsl:call-template name="nbsp4"/>

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.news"  href="http://news.google.com/news?q={$qval}">News</a>
</font>

<xsl:call-template name="nbsp4"/>

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.local"  href="http://local.google.com/local?q={$qval}">Local</a>
</font>

<xsl:call-template name="nbsp4"/>

<!-- *** Show the desktop and web tabs *** -->

<xsl:if test="CUSTOM/HOME">
  <xsl:comment>trh2</xsl:comment>
</xsl:if>
<xsl:if test="Q">
  <xsl:comment>trl2</xsl:comment>
</xsl:if>

<!-- *** Show the appliance tab *** -->
<font size="-1"><b><xsl:value-of select="$egds_appliance_tab_label"/></b></font>

</xsl:template>

<xsl:template name="desktop_results">
<xsl:comment>tro2</xsl:comment>
</xsl:template>

<!-- **********************************************************************
OneBox results (if any)
   ********************************************************************** -->
<xsl:template name="onebox">
<xsl:for-each select="/GSP/ENTOBRESULTS">
  <xsl:apply-templates/>
</xsl:for-each>
</xsl:template>

<!-- **********************************************************************
Swallow unmatched elements
   ********************************************************************** -->
<xsl:template match="@*|node()"></xsl:template>

<!-- **********************************************************************
Tabs template
Author: Vinay Joseph (vinay@vinayjoseph.com)
Date: 16th December 2015
Notes: Please be sure to change the site query parameter to match the relevant collections
in a given tab. Also note that the variable frontend has been defined at the top of the stylesheet. 
*************************************************************************** -->
<xsl:template name="gsa_custom_tabs">
  <xsl:variable name="tabs">
    <tabs>
      <tab name="All" col="scu" ctype="All_tab"></tab>
      <tab name="Courses" col="courses" ctype="courses_tab"></tab>
      <tab name="Policies" col="policies" ctype="policies_tab"></tab>
      <tab name="Library" col="library" ctype="library_tab"></tab>
      <tab name="People" col="staff_directory" ctype="staff_tab"></tab>
    </tabs>
  </xsl:variable>
<link rel="stylesheet" type="text/css" href="{$custom_css_path}/collection_tabs.css"></link>
<div class="container" id="centeredmenu">
  <ul class="search-collection-list desktop"> 
      <xsl:variable name="current_collection" select="/GSP/PARAM[@name='site']/@value" />
      <xsl:for-each select="$tabs/tabs/tab">
          <xsl:variable name="col" select="@col"></xsl:variable>
           <xsl:choose>
            <xsl:when test="$current_collection=$col">
              <li class="search-collection-tab-item {$col}">
                <a href="{$gsa_search_root_path_prefix}?{$custom_tab_url}&amp;site={$col}" ctype="{@ctype}" class="active">                 
                  <xsl:value-of select="@name"></xsl:value-of>
                </a>
              </li>
            </xsl:when>
            <xsl:otherwise>
              <li class="search-collection-tab-item {$col}">
                <a href="{$gsa_search_root_path_prefix}?{$custom_tab_url}&amp;site={$col}" ctype="{@ctype}">
                  <xsl:value-of select="@name"></xsl:value-of> 
                </a>
              </li>
            </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
  </ul>
</div>
</xsl:template>

<!-- SCU XSL FUNCTION -->

</xsl:stylesheet>


<!-- *** END OF STYLESHEET *** -->



              ]]></stylesheet>
              <stylesheet.en><![CDATA[
<!-- *** START OF STYLESHEET *** -->

<!-- **********************************************************************
XSL to format the search output for Google Search Appliance
   ********************************************************************** -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
<xsl:import href="scu_snippets"/>

<!-- **********************************************************************
GSA embedded mode support for websites that wants to display GSA search
experience embedded inside the parent container via  proxying the
request to the GSA. DO NOT EDIT the below part.
*************************************************************************** -->
<!-- Incoming query parameter identifying root path prefix to be used for links
   that should refresh the main page. -->
<xsl:variable name="embedded_mode_root_path_param" select="'emmain'" />
<!-- Incoming query parameter identifying root path prefix to be used for
   resources that should be loaded in isolation e.g. images, CSS, JS,
   AJAX requests etc. over an HTTP connection. -->
<xsl:variable name="embedded_mode_resource_root_path_param"
  select="'emsingleres'" />
<!-- Incoming query parameter for enabling/disabling style for embedded
   mode. -->
<xsl:variable name="embedded_mode_disable_style" select="'emdstyle'" />
<!-- Incoming query parameter specifying the GSA host name to be used for
   documill full preview viewer. -->
<xsl:variable name="embedded_mode_dps_viewer_param" select="'emdvhost'" />
<!-- Root path prefix for full-refresh requests that should be used instead
   of GSA's default "/search" root path prefix. -->
<xsl:variable name="embedded_mode_root_path_prefix"
  select="/GSP/PARAM[@name=$embedded_mode_root_path_param]/@value" />
<!-- Root path prefix for resources (e.g. CSS, images, JavaScript, AJAX requests
   etc.) that should be used instead of GSA's default "/" root path
   prefix. -->
<xsl:variable name="embedded_mode_resource_root_path_prefix"
  select="/GSP/PARAM[@name=$embedded_mode_resource_root_path_param]/@value" />
<!-- The GSA host to be used for documill full preview viewer. -->
<xsl:variable name="embedded_mode_dps_viewer_host"
  select="/GSP/PARAM[@name=$embedded_mode_dps_viewer_param]/@value" />
<!-- Checks if style should be disabled in embedded mode or not. -->
<xsl:variable name="is_disable_style_in_embedded_mode"
select="
if (/GSP/PARAM[@name=$embedded_mode_disable_style]/@value = 'true') then '1'
else '0'" />
<!-- Regex for matching relative path starting with a '/' character
   and not having a following '/' character. -->
<xsl:variable name="relative_path_only_regex">^(/)[^/].*</xsl:variable>
<!-- Checks if the incoming root path prefix arguments are relative paths as
   we don't want to allow absolute paths. -->
<xsl:variable name="invalid_embedded_mode_request" >
<xsl:if test="
    not(matches(
        $embedded_mode_root_path_prefix, $relative_path_only_regex)) or
    not(matches(
        $embedded_mode_resource_root_path_prefix, $relative_path_only_regex))">
  <xsl:value-of select="'1'" />
</xsl:if>
</xsl:variable>
<!-- Flag to signal if current mode is embeddeded or not.
   '1' - yes, '0' - No -->
<xsl:variable name="is_embedded_mode"
  select="if ($embedded_mode_root_path_prefix != '' and
              $invalid_embedded_mode_request != '1') then '1' else '0'" />

<!-- **********************************************************************
Root path prefix variables that should be used for search and static
resources throughout.
********************************************************************** -->
<!-- Root path prefix for search requests that should be used instead of GSA's
   default "/search" root path prefix. -->
<xsl:variable name="gsa_search_root_path_prefix">
<xsl:choose>
  <xsl:when test="$embedded_mode_root_path_prefix != '' and
                  $invalid_embedded_mode_request != '1'">
    <xsl:value-of select="$embedded_mode_root_path_prefix" />
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="'/search'" />
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>
<!-- Root path prefix for resources files (e.g. CSS, images, JavaScript etc.)
   and other HTTP requests that should be processed in isolation
   (e.g. Iframe, AJAX etc.) -->
<xsl:variable name="gsa_resource_root_path_prefix">
<xsl:choose>
  <xsl:when test="$embedded_mode_resource_root_path_prefix != '' and
                  $invalid_embedded_mode_request != '1'">
    <xsl:value-of select="$embedded_mode_resource_root_path_prefix" />
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="''" />
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- SCU Variables -->
<!-- get the environment variables for this front end -->
<xsl:include href="env_variables"/>
<xsl:variable name="app_title">Site Search</xsl:variable>
<!-- Search input placeholder variable -->
<xsl:variable name="q_input_placeholder_text">search site</xsl:variable>

<!-- **********************************************************************
include customer-onebox.xsl, which is auto-generated from the customer's
set of OneBox Module definitions, and in turn invokes either the default
OneBox template, or the customer's:
********************************************************************** -->
<xsl:include href="customer-onebox.xsl"/>

<!--
Expert Search - Include the expert search XSL to get expert search
functionality. Please DO NOT remove this import as template and
variables inside this XSL are being used below. To find all expert search
related changes in this XSL search for "Expert Search" (quotes for clarity)
string.
-->
<xsl:include href="scu_experts"/>

<xsl:output method="html"/>

<!-- **********************************************************************
Logo setup (can be customized)
   - whether to show logo: 0 for FALSE, 1 (or non-zero) for TRUE
   - logo url
   - logo size: '' for default image size
   ********************************************************************** -->
<xsl:variable name="show_logo">0</xsl:variable>
<xsl:variable name="logo_url"><xsl:value-of
  select="$gsa_resource_root_path_prefix" />images/Title_Left.png</xsl:variable>
<xsl:variable name="logo_width">200</xsl:variable>
<xsl:variable name="logo_height">78</xsl:variable>

<!-- **********************************************************************
Global Style variables (can be customized): '' for using browser's default
   ********************************************************************** -->

<xsl:variable name="global_font">arial,sans-serif</xsl:variable>
<xsl:variable name="global_font_size">#000000</xsl:variable>
<xsl:variable name="global_bg_color">#EEF5FF</xsl:variable>
<xsl:variable name="global_text_color">#000000</xsl:variable>
<xsl:variable name="global_link_color">#0000cc</xsl:variable>
<xsl:variable name="global_vlink_color">#551a8b</xsl:variable>
<xsl:variable name="global_alink_color">#ff0000</xsl:variable>


<!-- **********************************************************************
Result page components (can be customized)
   - whether to show a component: 0 for FALSE, non-zero (e.g., 1) for TRUE
   - text and style
   ********************************************************************** -->

<!-- *** choose result page header: '', 'provided', 'mine', or 'both' *** -->
<xsl:variable name="choose_result_page_header">both</xsl:variable>

<!-- *** show custom tabs on the GSA *** -->
<xsl:variable name="show_custom_tabs">1</xsl:variable>

<!-- *** customize provided result page header *** -->
<xsl:variable name="show_swr_link">0</xsl:variable>
<xsl:variable name="swr_search_anchor_text">Search Within Results</xsl:variable>
<xsl:variable name="show_result_page_adv_link">0</xsl:variable>
<xsl:variable name="adv_search_anchor_text">Advanced Search</xsl:variable>
<xsl:variable name="show_result_page_help_link">0</xsl:variable>
<xsl:variable name="search_help_anchor_text">Search Tips</xsl:variable>

<!-- *** search boxes *** -->
<xsl:variable name="show_top_search_box">1</xsl:variable>
<xsl:variable name="show_bottom_search_box">0</xsl:variable>
<xsl:variable name="search_box_size">200</xsl:variable>

<!-- *** choose search button type: 'text' or 'image' *** -->
<xsl:variable name="choose_search_button">image</xsl:variable>
<xsl:variable name="search_button_text"></xsl:variable>
<xsl:variable name="search_button_image_url"><xsl:value-of select="$custom_gfx_path" />/magnifier-grey.png</xsl:variable>
<xsl:variable name="search_collections_xslt"></xsl:variable>

<!-- *** search info bars *** -->
<xsl:variable name="show_search_info">1</xsl:variable>

<!-- *** choose separation bar: 'ltblue', 'blue', 'line', 'nothing' *** -->
<xsl:variable name="choose_sep_bar">ltblue</xsl:variable>
<xsl:variable name="sep_bar_std_text"></xsl:variable>
<xsl:variable name="sep_bar_adv_text">Advanced Search</xsl:variable>
<xsl:variable name="sep_bar_error_text">Error</xsl:variable>

<!-- *** Custom variables created to show or hide elements ***  -->
<xsl:variable name="show_timing_label">0</xsl:variable>

<!-- *** navigation bars: '', 'google', 'link', or 'simple'.
       DO NOT use 'google' as the navigation bar type for secure search
       i.e. when access='a' or access='s', unless corpus estimate is enabled
       for all queries in Serving > Query Settings. Read documentation of
       "secure_bottom_navigation_type" variable below. *** -->
<xsl:variable name="show_top_navigation">0</xsl:variable>
<xsl:variable name="choose_bottom_navigation">link</xsl:variable>
<xsl:variable name="my_nav_align">right</xsl:variable>
<xsl:variable name="my_nav_size">-1</xsl:variable>
<xsl:variable name="my_nav_color">#6f6f6f</xsl:variable>

<!-- ***  navigation bar for secure search: DO NOT change.
   Please keep the navigation type as 'simple' for secure search i.e.
   when access='a' or access='s', unless corpus estimate is enabled
   for all queries in Serving > Query Settings, because otherwise results size
   estimation is not available for generating numbered pagination. *** -->
<xsl:variable name="secure_bottom_navigation_type">simple</xsl:variable>

<!-- *** sort by date/relevance *** -->
<xsl:variable name="show_sort_by">1</xsl:variable>

<!-- *** spelling suggestions *** -->
<xsl:variable name="show_spelling">1</xsl:variable>
<xsl:variable name="spelling_text">Did you mean:</xsl:variable>
<xsl:variable name="spelling_text_color">#cc0000</xsl:variable>

<!-- *** synonyms suggestions *** -->
<xsl:variable name="show_synonyms">1</xsl:variable>
<xsl:variable name="synonyms_text">You could also try:</xsl:variable>
<xsl:variable name="synonyms_text_color">#cc0000</xsl:variable>

<!-- *** keymatch suggestions *** -->
<xsl:variable name="show_keymatch">1</xsl:variable>
<xsl:variable name="keymatch_text">KeyMatch</xsl:variable>
<xsl:variable name="keymatch_text_color">#2255aa</xsl:variable>
<xsl:variable name="keymatch_bg_color">#e8e8ff</xsl:variable>

<!-- *** Google Desktop integration *** -->
<xsl:variable name="egds_show_search_tabs">0</xsl:variable>
<xsl:variable name="egds_appliance_tab_label">Appliance</xsl:variable>
<xsl:variable name="egds_show_desktop_results">1</xsl:variable>

<!-- *** onebox information *** -->
<xsl:variable name="show_onebox">1</xsl:variable>
<xsl:variable name="uar_provider"> GSA User-Added Results </xsl:variable>

<!-- *** analytics information *** -->
<xsl:variable name="analytics_account"></xsl:variable>

<!-- *** ASR enabling *** -->
<xsl:variable name="show_asr">1</xsl:variable>

<!-- *** UAR v2, Expert Search - Document directionality. Global variable to
       hold document directionality for the user language. *** -->
<xsl:variable name="document_direction">ltr</xsl:variable>

<!-- *** Dynamic Navigation *** -->
<xsl:variable name="show_dynamic_navigation">1</xsl:variable>
<xsl:variable name="dyn_nav_max_rows">6</xsl:variable>
<!-- Expert Search - render dynamic navigation if expanded mode with dynamic
   navigation is configured for this frontend. -->
<xsl:variable name="render_dynamic_navigation"><xsl:if
test="($show_dynamic_navigation != '0' or
       $show_expert_search_expanded_results = '1') and
       count(/GSP/RES/PARM) > 0">1</xsl:if>
</xsl:variable>

<!-- *** Show Google Apps results on right side as a sidebar element *** -->
<xsl:variable name="show_apps_segmented_ui">0</xsl:variable>

<!-- *** Google Site Search results *** -->
<xsl:variable name="show_gss_results">0</xsl:variable>
<xsl:variable name="gss_search_engine_id"></xsl:variable>

<!-- *** People Search results *** -->
<xsl:variable name="show_people_search">0</xsl:variable>

<!-- *** Translation Integration *** -->
<xsl:variable name="show_translation">1</xsl:variable>
<xsl:param name="translate_key"/>

<!-- *** Sidebar for holding elements that can load data asynchronously *** -->
<xsl:variable name="show_sidebar">
<xsl:choose>
  <!-- Expert Search - enable sidebar if expert search widget view is
       configured. -->
  <xsl:when test="($show_apps_segmented_ui = '1' or $show_gss_results = '1' or
                   $show_people_search = '1' or
                   $show_expert_search_widget_view = '1') and
                   $show_expert_search_expanded_results != '1' and
                   /GSP/Q != '' and
                   ($show_res_clusters = '0' or $res_cluster_position != 'right')">
    <xsl:value-of select="'1'"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="'0'"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** Document Previews *** -->
<xsl:variable name="show_document_previews">1</xsl:variable>

<!-- **********************************************************************
Result elements (can be customized)
   - whether to show an element ('1' for yes, '0' for no)
   - font/size/color ('' for using style of the context)
   ********************************************************************** -->

<!-- *** result title and snippet *** -->
<xsl:variable name="show_res_title">1</xsl:variable>
<xsl:variable name="res_title_length">65</xsl:variable>
<xsl:variable name="res_title_length_default">65</xsl:variable>
<xsl:variable name="res_title_color">#0000cc</xsl:variable>
<xsl:variable name="res_title_size"></xsl:variable>
<xsl:variable name="show_res_snippet">1</xsl:variable>
<xsl:variable name="res_snippet_size">100%</xsl:variable>

<!-- *** keyword match (in title or snippet) *** -->
<xsl:variable name="res_keyword_color"></xsl:variable>
<xsl:variable name="res_keyword_size"></xsl:variable>
<xsl:variable name="res_keyword_format">b</xsl:variable> <!-- 'b' for bold -->

<!-- *** link URL *** -->
<xsl:variable name="show_res_url">1</xsl:variable>
<xsl:variable name="res_url_color">#008000</xsl:variable>
<xsl:variable name="res_url_size">2%</xsl:variable>
<xsl:variable name="truncate_result_urls">1</xsl:variable>
<xsl:variable name="truncate_result_url_length">60</xsl:variable>

<!-- *** misc elements *** -->
<xsl:variable name="show_ips_in_search_url">1</xsl:variable>
<xsl:variable name="show_meta_tags">0</xsl:variable>
<xsl:variable name="show_res_size">1</xsl:variable>
<xsl:variable name="show_res_date">1</xsl:variable>
<xsl:variable name="show_res_cache">0</xsl:variable>

<!-- *** used in result cache link, similar pages link, and description *** -->
<xsl:variable name="faint_color">#7777cc</xsl:variable>

<!-- *** show secure results radio button *** -->
<xsl:variable name="show_secure_radio">1</xsl:variable>

<!-- *** show suggestions (remote aut-completions) *** -->
<xsl:variable name="show_suggest">1</xsl:variable>

<!-- **********************************************************************
Other variables (can be customized)
   ********************************************************************** -->

<!-- *** page title *** -->
<!-- execute SCU function to replace app name - syntax with blank space -->

<xsl:variable name="scu_title">SCU - <xsl:value-of select="$app_title"/></xsl:variable>
<xsl:variable name="front_page_title"><xsl:value-of select="$scu_title"/> Home</xsl:variable>
<xsl:variable name="result_page_title"><xsl:value-of select="$scu_title"/> Results</xsl:variable>
<xsl:variable name="adv_page_title"><xsl:value-of select="$scu_title"/> Advanced</xsl:variable>
<xsl:variable name="error_page_title"><xsl:value-of select="$scu_title"/> Error</xsl:variable>
<xsl:variable name="swr_page_title"><xsl:value-of select="$scu_title"/> Results</xsl:variable>

<!-- *** choose adv_search page header: '', 'provided', 'mine', or 'both' *** -->
<xsl:variable name="choose_adv_search_page_header">both</xsl:variable>

<!-- *** cached page header text *** -->
<xsl:variable name="cached_page_header_text">This is the cached copy of</xsl:variable>

<!-- *** error message text *** -->
<xsl:variable name="server_error_msg_text">A server error has occurred.</xsl:variable>
<xsl:variable name="server_error_des_text">Check server response code in details.</xsl:variable>
<xsl:variable name="xml_error_msg_text">Unknown XML result type.</xsl:variable>
<xsl:variable name="xml_error_des_text">View page source to see the offending XML.</xsl:variable>

<!-- *** advanced search page panel background color *** -->
<xsl:variable name="adv_search_panel_bgcolor">#cbdced</xsl:variable>

<!-- *** dynamic result cluster options *** -->
<xsl:variable name="show_res_clusters">1</xsl:variable>
<xsl:variable name="res_cluster_position">bottom</xsl:variable>

<!-- *** alerts2 options *** -->
<xsl:variable name="show_alerts2">0</xsl:variable>

<!-- Expert Search - i18n messages used by the expert search UI component. -->
<xsl:variable name="msg_back_to_main_results_action"><![CDATA[Back to main results\]\]\></xsl:variable>
<xsl:variable name="msg_expert_search_no_experts_found"><![CDATA[No expert(s) found.\]\]\></xsl:variable>
<xsl:variable name="msg_expert_search_switch_to_expanded_mode"><![CDATA[Switch to the expert search results expanded mode\]\]\></xsl:variable>
<xsl:variable name="msg_go_to_previous_page"><![CDATA[Go to the previous results page\]\]\></xsl:variable>
<xsl:variable name="msg_go_to_next_page"><![CDATA[Go to the next results page\]\]\></xsl:variable>
<xsl:variable name="msg_loading_expert_results"><![CDATA[Loading results...\]\]\></xsl:variable>
<xsl:variable name="msg_next_page_action"><![CDATA[Next\]\]\></xsl:variable>
<xsl:variable name="msg_previous_page_action"><![CDATA[Prev\]\]\></xsl:variable>
<xsl:variable name="msg_results_page_number_prefix"><![CDATA[Page\]\]\></xsl:variable>

<!-- *** UAR i18n messages *** -->
<xsl:variable name="msg_uar_added_by"><![CDATA[Added by\]\]\></xsl:variable>
<xsl:variable name="msg_uar_edit"><![CDATA[Edit\]\]\></xsl:variable>
<xsl:variable name="msg_uar_title"><![CDATA[Title\]\]\></xsl:variable>
<xsl:variable name="msg_uar_save"><![CDATA[Save\]\]\></xsl:variable>
<xsl:variable name="msg_uar_cancel"><![CDATA[Cancel\]\]\></xsl:variable>
<xsl:variable name="msg_uar_ok"><![CDATA[Ok\]\]\></xsl:variable>
<xsl:variable name="msg_uar_address"><![CDATA[Address\]\]\></xsl:variable>
<xsl:variable name="msg_uar_or"><![CDATA[or\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete"><![CDATA[delete\]\]\></xsl:variable>
<xsl:variable name="msg_uar_username"><![CDATA[UserName\]\]\></xsl:variable>
<xsl:variable name="msg_uar_less"><![CDATA[Less\]\]\></xsl:variable>
<xsl:variable name="msg_uar_more"><![CDATA[More\]\]\></xsl:variable>
<xsl:variable name="msg_uar_add_another_result"><![CDATA[Add another result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_add_a_result"><![CDATA[Add a result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_saving"><![CDATA[Saving\]\]\></xsl:variable>
<xsl:variable name="msg_uar_deleting"><![CDATA[Deleting\]\]\></xsl:variable>
<xsl:variable name="msg_uar_save_failed"><![CDATA[Save failed\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_failed"><![CDATA[Deletion failed\]\]\></xsl:variable>
<xsl:variable name="msg_uar_error_handling_request"><![CDATA[Error handling this request\]\]\></xsl:variable>
<xsl:variable name="msg_uar_error_deleting"><![CDATA[Error deleting this result! Could not create the request\]\]\></xsl:variable>
<xsl:variable name="msg_uar_error_add_or_update"><![CDATA[Problem adding/updating this result: Could not create the request\]\]\></xsl:variable>

<!-- UAR v2 - i18n messages used by the UAR UI component. -->
<xsl:variable name="msg_uar_confirm_delete_title"><![CDATA[Confirm delete\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_delete_text"><![CDATA[Are you sure you want to delete the user added result?\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_delete_moderation_required"><![CDATA[Are you sure you want to delete the user added resultThe selected result will be deleted only after the administrator reviews and approves the same. The result will continue to show until review is done.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_in_progress"><![CDATA[Deleting...\]\]\></xsl:variable>
<xsl:variable name="msg_uar_add_pending_review_title"><![CDATA[New addition - Admin review pending\]\]\></xsl:variable>
<xsl:variable name="msg_uar_add_pending_review_content"><![CDATA[The result that you contributed has been submitted but it will be displayed only after the administrator reviews and approves the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_update_pending_review_title"><![CDATA[Edit - Admin review pending\]\]\></xsl:variable>
<xsl:variable name="msg_uar_update_pending_review_content"><![CDATA[The changes to result that you edited has been submitted but it will be displayed only after the administrator reviews and approves the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_pending_review_title"><![CDATA[Delete - Admin review pending\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_pending_review_content"><![CDATA[The request for deleting the result has been submitted but result will be deleted only after the administrator reviews and approves the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_existing_review_pending_title"><![CDATA[Existing admin review pending\]\]\></xsl:variable>
<xsl:variable name="msg_uar_existing_review_pending_content"><![CDATA[An existing request to update the same result is pending therefore this request is not processed. You can take action only after the administrator reviews the existing request.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_add_title"><![CDATA[Confirm add - Admin review required\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_add_content"><![CDATA[New result contribution will be submitted for administrator review. The result will be displayed only after the administrator will approve the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_update_title"><![CDATA[Confirm edit - Admin review required\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_update_content"><![CDATA[The changes to the result will be submitted for administrator review. The existing result will continue to show until the administrator approves the changes.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_submit_request"><![CDATA[Are you sure you want to submit this request?\]\]\></xsl:variable>
<xsl:variable name="msg_uar_review_note"><![CDATA[Note that the existing result will continue to show until the review is done.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_discard_changes_title"><![CDATA[Discard changes\]\]\></xsl:variable>
<xsl:variable name="msg_uar_discard_changes_content"><![CDATA[Do you want to discard existing changes?\]\]\></xsl:variable>
<xsl:variable name="msg_uar_no_results"><![CDATA[No results. Consider contributing a result.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_description"><![CDATA[Description\]\]\></xsl:variable>
<xsl:variable name="msg_uar_enter_title_value"><![CDATA[Enter title to be displayed\]\]\></xsl:variable>
<xsl:variable name="msg_uar_enter_url_value"><![CDATA[Enter absolute URL of the document\]\]\></xsl:variable>
<xsl:variable name="msg_uar_enter_username_value"><![CDATA[Enter user name\]\]\></xsl:variable>
<xsl:variable name="msg_uar_edit_this_result"><![CDATA[Edit this result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_this_result"><![CDATA[Delete this result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_view_all_results"><![CDATA[View all results\]\]\></xsl:variable>
<xsl:variable name="msg_uar_hide_few_results"><![CDATA[Hide few results\]\]\></xsl:variable>
<xsl:variable name="msg_uar_contribute_result"><![CDATA[Contribute a result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_loading_settings"><![CDATA[Loading settings. Please try again in a second.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_server_error"><![CDATA[Server error! Please try again.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_authn_required"><![CDATA[Authentication is required.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_username_required"><![CDATA[Username is required. Please specify the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_save_in_progress"><![CDATA[Saving...\]\]\></xsl:variable>

<!-- *** Template to sanitize UAR i18n messages *** -->
<xsl:template name="sanitize_uar_i18n_message">
<xsl:param name="uar_message_to_be_sanitized"/>
<xsl:variable name="uar_message_without_apos">
       <xsl:call-template name="replace_string">
         <xsl:with-param name="find" select='"&apos;"'/>
         <xsl:with-param name="replace" select='"\&apos;"'/>
         <xsl:with-param name="string" select="$uar_message_to_be_sanitized"/>
       </xsl:call-template>
</xsl:variable>
<xsl:variable name="uar_message_without_apos_double_quotes">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="$uar_message_without_apos"/>
    </xsl:call-template>
</xsl:variable>
<xsl:variable name="uar_message_without_apos_double_quotes_lt">
       <xsl:call-template name="replace_string">
         <xsl:with-param name="find" select='"&lt;"'/>
         <xsl:with-param name="replace" select='"&amp;lt;"'/>
         <xsl:with-param name="string"
           select="$uar_message_without_apos_double_quotes"/>
       </xsl:call-template>
</xsl:variable>
<xsl:variable name="uar_message_without_apos_double_quotes_lt_gt">
       <xsl:call-template name="replace_string">
         <xsl:with-param name="find" select='"&gt;"'/>
         <xsl:with-param name="replace" select='"&amp;gt;"'/>
         <xsl:with-param name="string"
           select="$uar_message_without_apos_double_quotes_lt"/>
       </xsl:call-template>
</xsl:variable>
<xsl:value-of select="$uar_message_without_apos_double_quotes_lt_gt"/>
</xsl:template>

<!-- *** UAR v2, Expert Search - Template to include the localized messages
       for UAR and Expert Search component. *** -->
<xsl:template name="include_localized_messages_for_uar_expert_search">
<script type="text/javascript">
<xsl:comment>
  // Variable definition included here so that no error is thrown. This will
  // be overriden as soon as the UI component JS library loads.
  var gsa = {'ui': {msg: {}}};

  /**
   * Adds localized messages to be used by the UI component(s).
   */
  function _gsa_addLocalizedMessages() {
    // UAR messages.
    gsa.ui.msg.MSG_CANCEL_BTN =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_cancel"/></xsl:call-template>';
    gsa.ui.msg.MSG_OK_BTN =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_ok"/></xsl:call-template>';
    gsa.ui.msg.MSG_SAVE_BTN =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_save"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_DELETE_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_delete_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_DELETE_TEXT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_delete_text"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_DELETE_MODERATION_REQUIRED =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_delete_moderation_required"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DELETE_IN_PROGRESS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_delete_in_progress"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ADD_PENDING_REVIEW_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_add_pending_review_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ADD_PENDING_REVIEW_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_add_pending_review_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_UPDATE_PENDING_REVIEW_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_update_pending_review_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_UPDATE_PENDING_REVIEW_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_update_pending_review_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DELETE_PENDING_REVIEW_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_delete_pending_review_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DELETE_PENDING_REVIEW_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_delete_pending_review_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_EXISTING_REVIEW_PENDING_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_existing_review_pending_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_EXISTING_REVIEW_PENDING_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_existing_review_pending_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_ADD_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_add_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_ADD_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_add_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_UPDATE_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_update_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_UPDATE_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_update_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_SUBMIT_REQUEST =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_submit_request"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_REVIEW_NOTE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_review_note"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DISCARD_CHANGES_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_discard_changes_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DISCARD_CHANGES_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_discard_changes_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_NO_RESULTS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_no_results"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ADDED_BY =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_added_by"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DESCRIPTION =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_description"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ENTER_TITLE_VALUE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_enter_title_value"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ENTER_URL_VALUE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_enter_url_value"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ENTER_USERNAME_VALUE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_enter_username_value"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_EDIT_THIS_RESULT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_edit_this_result"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DELETE_THIS_RESULT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_delete_this_result"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_VIEW_ALL_RESULTS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_view_all_results"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_HIDE_FEW_RESULTS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_hide_few_results"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONTRIBUTE_RESULT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_contribute_result"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_LOADING_SETTINGS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_loading_settings"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_SERVER_ERROR =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_server_error"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_AUTHN_REQUIRED =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_authn_required"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_USERNAME_REQUIRED =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_username_required"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_SAVE_IN_PROGRESS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_save_in_progress"/></xsl:call-template>';
    // Expert search messages.
    gsa.ui.msg.MSG_LOADING_EXPERT_RESULTS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_loading_expert_results"/></xsl:call-template>';
  }
//</xsl:comment>
</script>
</xsl:template>

<!-- *** UAR v2 - Template to include the JavaScript required for the UAR UI
       component. *** -->
<xsl:template name="include_uar_ui_component">
<script src="{$gsa_resource_root_path_prefix}/uardesktop_compiled.js"
    type="text/javascript">
</script>
<script type="text/javascript">
  gsa.ui.uar.init();
</script>
</xsl:template>

<!-- *** Template to populate the i18n message array which is used by uar.js *** -->
<xsl:template name="populate_uar_i18n_array">
<script type="text/javascript">
<xsl:comment>
  // User added results - i18n messages.
  var uar_i18n_messages = {};
  uar_i18n_messages['ADDED_BY'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                     <xsl:with-param name="uar_message_to_be_sanitized"
                                       select="$msg_uar_added_by"/>
                                   </xsl:call-template>' + ' ';
  uar_i18n_messages['EDIT'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                 <xsl:with-param name="uar_message_to_be_sanitized"
                                   select="$msg_uar_edit"/>
                               </xsl:call-template>';
  uar_i18n_messages['TITLE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                  <xsl:with-param name="uar_message_to_be_sanitized"
                                    select="$msg_uar_title"/>
                                </xsl:call-template>'  + ':';
  uar_i18n_messages['SAVE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                 <xsl:with-param name="uar_message_to_be_sanitized"
                                   select="$msg_uar_save"/>
                               </xsl:call-template>';
  uar_i18n_messages['CANCEL'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                   <xsl:with-param name="uar_message_to_be_sanitized"
                                     select="$msg_uar_cancel"/>
                                 </xsl:call-template>';
  uar_i18n_messages['ADDRESS'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                    <xsl:with-param name="uar_message_to_be_sanitized"
                                      select="$msg_uar_address"/>
                                  </xsl:call-template>'  + ':';
  uar_i18n_messages['OR'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                               <xsl:with-param name="uar_message_to_be_sanitized"
                                 select="$msg_uar_or"/>
                             </xsl:call-template>'  + ' ';
  uar_i18n_messages['DELETE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                   <xsl:with-param name="uar_message_to_be_sanitized"
                                     select="$msg_uar_delete"/>
                                 </xsl:call-template>';
  uar_i18n_messages['USERNAME'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                     <xsl:with-param name="uar_message_to_be_sanitized"
                                       select="$msg_uar_username"/>
                                   </xsl:call-template>'  + ':';
  uar_i18n_messages['LESS'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                 <xsl:with-param name="uar_message_to_be_sanitized"
                                   select="$msg_uar_less"/>
                               </xsl:call-template>';
  uar_i18n_messages['MORE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                 <xsl:with-param name="uar_message_to_be_sanitized"
                                   select="$msg_uar_more"/>
                               </xsl:call-template>';
  uar_i18n_messages['ADD_ANOTHER_RESULT'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                               <xsl:with-param name="uar_message_to_be_sanitized"
                                                 select="$msg_uar_add_another_result"/>
                                             </xsl:call-template>';
  uar_i18n_messages['ADD_A_RESULT'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                         <xsl:with-param name="uar_message_to_be_sanitized"
                                           select="$msg_uar_add_a_result"/>
                                       </xsl:call-template>';
  uar_i18n_messages['SAVING'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                   <xsl:with-param name="uar_message_to_be_sanitized"
                                     select="$msg_uar_saving"/>
                                 </xsl:call-template>'  + '...';
  uar_i18n_messages['DELETING'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                     <xsl:with-param name="uar_message_to_be_sanitized"
                                       select="$msg_uar_deleting"/>
                                   </xsl:call-template>'  + '...';
  uar_i18n_messages['SAVE_FAILED'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                        <xsl:with-param name="uar_message_to_be_sanitized"
                                          select="$msg_uar_save_failed"/>
                                      </xsl:call-template>'  + '!';
  uar_i18n_messages['DELETE_FAILED'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                          <xsl:with-param name="uar_message_to_be_sanitized"
                                            select="$msg_uar_delete_failed"/>
                                        </xsl:call-template>'  + '!';
  uar_i18n_messages['ERROR_HANDLING_REQUEST'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                                   <xsl:with-param name="uar_message_to_be_sanitized"
                                                     select="$msg_uar_error_handling_request"/>
                                                 </xsl:call-template>'  + '.';
  uar_i18n_messages['ERROR_DELETING'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                           <xsl:with-param name="uar_message_to_be_sanitized"
                                             select="$msg_uar_error_deleting"/>
                                         </xsl:call-template>'  + '.';
  uar_i18n_messages['ERROR_ADD_OR_UPDATE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                                <xsl:with-param name="uar_message_to_be_sanitized"
                                                  select="$msg_uar_error_add_or_update"/>
                                              </xsl:call-template>'  + '.';
//</xsl:comment>
</script>
</xsl:template>

<!-- *** Previewer i18n messages *** -->
<xsl:variable name="msg_previewer_error"><![CDATA[Transformation error\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_connecting"><![CDATA[Connecting\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_document_too_large"><![CDATA[Document too large\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_hit_page"><![CDATA[Hit page\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_initializing"><![CDATA[Initializing\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_page"><![CDATA[Page\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_pending"><![CDATA[Pending\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_preview_unavailable"><![CDATA[Preview unavailable\]\]\></xsl:variable>



<!-- *** Template to populate the i18n message array which is used by floating previewer widget *** -->
<xsl:template name="populate_previewer_i18n_array">
<script type="text/javascript">
<xsl:comment>
  // Document previews - i18n messages.
  var previewer_i18n_messages = {
    'connecting': '<xsl:value-of select="$msg_previewer_connecting"/>',
    'document_too_large': '<xsl:value-of select="$msg_previewer_document_too_large"/>',
    'hitpage': '<xsl:value-of select="$msg_previewer_hit_page"/>',
    'initializing': '<xsl:value-of select="$msg_previewer_initializing"/>',
    'page': '<xsl:value-of select="$msg_previewer_page"/>',
    'pending': '<xsl:value-of select="$msg_previewer_pending"/>',
    'preview_unavailable': '<xsl:value-of select="$msg_previewer_preview_unavailable"/>',
    'transformation_aborted': '<xsl:value-of select="$msg_previewer_error"/>',
    'transformation_cancelled': '<xsl:value-of select="$msg_previewer_error"/>',
    'transformation_error': '<xsl:value-of select="$msg_previewer_error"/>'
  };
//</xsl:comment>
</script>
</xsl:template>

<!-- **********************************************************************
My global page header/footer (can be customized)
   ********************************************************************** -->
<!-- *** showing up serve-logs in footer *** -->
<xsl:template match="TraceNode">
<div id="TraceNode-div">
  Total time taken
  <span style='font-style: italics;' id='total_time'><xsl:value-of select="(@out-time - @in-time) div 1000000"/></span>
  <xsl:apply-templates select="Record"/>
</div>
</xsl:template>

<xsl:template match="Record">
<div>
  <xsl:value-of select="Stmt/@log"/>
</div>
<div>
  <i><xsl:value-of select="@time-from-start"/></i>
</div>
</xsl:template>

<!-- **********************************************************************
Logo template (can be customized)
   ********************************************************************** -->
<xsl:template name="logo">
  <a ctype='logo' href="{$home_url}"><img src="{$logo_url}"
    width="{$logo_width}" height="{$logo_height}"
    alt="Go to Google Home" border="0" /></a>
</xsl:template>

<!-- **********************************************************************
Search result page header (can be customized): logo and search box
   ********************************************************************** -->
<xsl:template name="result_page_header">
  <input type="hidden" name="security_token" id="token">
    <xsl:attribute name="value">
      <xsl:value-of select="/GSP/SECURITY_TOKEN"/>
    </xsl:attribute>
  </input>
    
  <div id="result_page_header_id"> 
    <xsl:if test="$show_logo != '0'">
      <div id="logo-div">
        <xsl:call-template name="logo"/>
        <xsl:call-template name="nbsp3"/>
      </div>
    </xsl:if>
    <xsl:if test="$show_top_search_box != '0'">
      <div id="search-box-div">
          <xsl:call-template name="search_box">
            <xsl:with-param name="type" select="'std_top'"/>
          </xsl:call-template>
      </div>
    </xsl:if>
    <xsl:if test="/GSP/CT">
      <div id="stopwords-div">
        <br/>
          <xsl:call-template name="stopwords"/>
          <br/></div>
    </xsl:if>
  </div>
</xsl:template>


<!-- **********************************************************************
Search within results page header (can be customized): logo and search box 
   ********************************************************************** -->
<xsl:template name="swr_page_header">
  <div id="swr_page_header_div">
    <xsl:if test="$show_logo != '0'">
          <xsl:call-template name="logo"/>
          <xsl:call-template name="nbsp3"/>
    </xsl:if>
    <xsl:if test="$show_top_search_box != '0'">
         <xsl:call-template name="search_box">
            <xsl:with-param name="type" select="'swr'"/>
          </xsl:call-template>
    </xsl:if>
  </div>
</xsl:template>


<!-- **********************************************************************
Home search page header (can be customized): logo and search box
   ********************************************************************** -->
<xsl:template name="home_page_header">

  <input type="hidden" name="security_token" id="token">
    <xsl:attribute name="value">
      <xsl:value-of select="/GSP/SECURITY_TOKEN"/>
    </xsl:attribute>
  </input>
  <div id="home_page_header">
    <xsl:if test="$show_logo != '0'">
      <div class="pull-left">
        <xsl:call-template name="logo"/>
        <xsl:call-template name="nbsp3"/>
      </div>
    </xsl:if>  
    
    
    <xsl:if test="$show_top_search_box != '0'">
        <xsl:call-template name="search_box">
          <xsl:with-param name="type" select="'home'"/>
        </xsl:call-template>
    </xsl:if>
  </div>
</xsl:template>


<!-- **********************************************************************
Separation bar variables (used in advanced search header and result page)
   ********************************************************************** -->
<xsl:variable name="sep_bar_border_color">
<xsl:choose>
  <xsl:when test="$choose_sep_bar = 'ltblue'">#3366cc</xsl:when>
  <xsl:when test="$choose_sep_bar = 'blue'">#3366cc</xsl:when>
  <xsl:otherwise><xsl:value-of select="$global_bg_color"/></xsl:otherwise>
</xsl:choose>
</xsl:variable>

<xsl:variable name="sep_bar_bg_color">
<xsl:choose>
  <xsl:when test="$is_embedded_mode = '1'">#efefef</xsl:when>
  <xsl:when test="$choose_sep_bar = 'ltblue'">#e5ecf9</xsl:when>
  <xsl:when test="$choose_sep_bar = 'blue'">#3366cc</xsl:when>
  <xsl:otherwise><xsl:value-of select="$global_bg_color"/></xsl:otherwise>
</xsl:choose>
</xsl:variable>

<xsl:variable name="sep_bar_text_color">
<xsl:choose>
  <xsl:when test="$choose_sep_bar = 'ltblue'">#000000</xsl:when>
  <xsl:when test="$choose_sep_bar = 'blue'">#ffffff</xsl:when>
  <xsl:otherwise><xsl:value-of select="$global_text_color"/></xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- **********************************************************************
Advanced search page header HTML (can be customized)
   ********************************************************************** -->
<xsl:template name="advanced_search_header">
    <div id="advanced_search_header_div">
        <xsl:if test="$show_logo != '0'">
              <xsl:call-template name="logo"/>
        </xsl:if>
    </div>
</xsl:template>


<!-- **********************************************************************
Cached page header (can be customized)
   ********************************************************************** -->
<xsl:template name="cached_page_header">
<xsl:param name="cached_page_url"/>
<xsl:variable name="stripped_url" select="substring-after($cached_page_url,
                                                          '://')"/>
<div id="cached_page_header_div">
    <font face="{$global_font}" color="{$global_text_color}" size="-1">
     <xsl:value-of select="$cached_page_header_text"/>
     <xsl:call-template name="nbsp"/>
     <xsl:choose>
      <xsl:when test="starts-with($cached_page_url,
                                  $db_url_protocol)">
       <a ctype="cache" href="{concat('/db/',$stripped_url)}">
       <font color="{$global_link_color}">
       <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
      </xsl:when>
      <xsl:when test="starts-with($cached_page_url,
                                  $nfs_url_protocol)">
       <a ctype="cache" href="{concat('/nfs/',$stripped_url)}">
       <font color="{$global_link_color}">
       <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
      </xsl:when>
      <xsl:when test="starts-with($cached_page_url,
                                  $smb_url_protocol)">
       <a ctype="cache" href="{concat('/smb/',$stripped_url)}">
       <font color="{$global_link_color}">
       <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
      </xsl:when>
      <xsl:when test="starts-with($cached_page_url,
                                  $unc_url_protocol)">
       <xsl:variable name="display_url">
         <xsl:call-template name="convert_unc">
           <xsl:with-param name="string" select="$stripped_url"/>
         </xsl:call-template>
       </xsl:variable>
       <a ctype="cache" href="{concat('file://',$stripped_url)}">
       <font color="{$global_link_color}">
       <xsl:value-of select="$display_url"/></font></a>.<br/>
      </xsl:when>
      <xsl:otherwise>
       <a ctype="cache" href="{$cached_page_url}"><font color="{$global_link_color}">
       <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
      </xsl:otherwise>
     </xsl:choose>
    </font>
</div>
<hr/>
</xsl:template>

<!-- **********************************************************************
Suggest service javascript (do not customize)
   ********************************************************************** -->
<xsl:template name="gsa_suggest">
<xsl:variable name="ss_g_one_name_to_display">Popular Query</xsl:variable>
<xsl:variable name="ss_g_more_names_to_display">Popular Queries</xsl:variable>
<xsl:variable name="ss_non_query_empty_title">No Title</xsl:variable>
<script type="text/javascript">
/**
* HTML element names for the search form, the spellchecking suggestion, and the
* cluster suggestions. The search form must have the following input elements:
* "q" (for search box), "site", "client".
* @type {string}
*/
var ss_form_element = 'suggestion_form'; // search form

/**
* Name of search suggestion drop down.
* @type {string}
*/
var ss_popup_element = 'search_suggest'; // search suggestion drop-down

/**
* Types of suggestions to include.  Just one options now, but reserving the
* code for more types
*   g - suggest server
* Array sequence determines how different suggestion types are shown.
* Empty array would effectively turn off suggestions.
* @type {object}
*/
var ss_seq = [ 'g' ];

/**
* Suggestion type name to display when there is only one suggestion.
* @type {string}
*/
var ss_g_one_name_to_display =
  "<xsl:value-of select="$ss_g_one_name_to_display"/>";

/**
* Suggestion type name to display when there are more than one suggestions.
* @type {string}
*/
var ss_g_more_names_to_display =
  "<xsl:value-of select="$ss_g_more_names_to_display"/>";

/**
* The max suggestions to display for different suggestion types.
* No-positive values are equivalent to unlimited.
* For key matches, -1 means using GSA default (not tagging numgm parameter),
* 0 means unlimited.
* Be aware that GSA has a published max limit of 10 for key matches.
* @type {number}
*/
var ss_g_max_to_display = 10;

/**
* The max suggestions to display for all suggestion types.
* No-positive values are equivalent to unlimited.
* @type {number}
*/
var ss_max_to_display = 12;

/**
* Idling interval for fast typers.
* @type {number}
*/
var ss_wait_millisec = 300;

/**
* Delay time to avoid contention when drawing the suggestion box by various
* parallel processes.
* @type {number}
*/
var ss_delay_millisec = 30;

/**
* Host name or IP address of GSA.
* Null value can be used if the JS code loads from the GSA.
* For local test, use null if there is a &lt;base> tag pointing to the GSA,
* otherwise use the full GSA host name
* @type {string}
*/
var ss_gsa_host = null;

/**
* Constant that represents legacy output format.
* @type {string}
*/
var SS_OUTPUT_FORMAT_LEGACY = 'legacy';

/**
* Constant that represents OpenSearch output format.
* @type {string}
*/
var SS_OUTPUT_FORMAT_OPEN_SEARCH = 'os';

/**
* Constant that represents rich output format.
* @type {string}
*/
var SS_OUTPUT_FORMAT_RICH = 'rich';

/**
* What suggest request API to use.
*   legacy - use current protocol in 6.0
*            Request: /suggest?token=&lt;query>&amp;max_matches=&lt;num>&amp;use_similar=0
*            Response: [ "&lt;term 1>", "&lt;term 2>", ..., "&lt;term n>" ]
*                   or
*                      [] (if no result)
*   os -     use OpenSearch protocol
*            Request: /suggest?q=&lt;query>&amp;max=&lt;num>&amp;site=&lt;collection>&amp;client=&lt;frontend>&amp;access=p&amp;format=os
*            Response: [
*                        "&lt;query>",
*                        [ "&lt;term 1>", "&lt;term 2>", ... "&lt;term n>" ],
*                        [ "&lt;content 1>", "&lt;content 2>", ..., "&lt;content n>" ],
*                        [ "&lt;url 1>", "&lt;url 2>", ..., "&lt;url n>" ]
*                      ] (where the last two elements content and url are optional)
*                   or
*                      [ &lt;query>, [] ] (if no result)
*   rich -   use rich protocol from search-as-you-type
*            Request: /suggest?q=&lt;query>&amp;max=&lt;num>&amp;site=&lt;collection>&amp;client=&lt;frontend>&amp;access=p&amp;format=rich
*            Response: {
*                        "query": "&lt;query>",
*                        "results": [
*                          { "name": "&lt;term 1>", "type": "suggest", "content": "&lt;content 1>", "style": "&lt;style 1>", "moreDetailsUrl": "&lt;url 1>" },
*                          { "name": "&lt;term 2>", "type": "suggest", "content": "&lt;content 2>", "style": "&lt;style 2>", "moreDetailsUrl": "&lt;url 2>" },
*                          ...,
*                          { "name": "&lt;term n>", "type": "suggest", "content": "&lt;content n>", "style": "&lt;style n>", "moreDetailsUrl": "&lt;url n>" }
*                        ]
*                      } (where type, content, style, moreDetailsUrl are optional)
*                   or
*                      { "query": &lt;query>, "results": [] } (if no result)
* If unspecified or null, using legacy protocol.
* @type {string}
*/
var ss_protocol = SS_OUTPUT_FORMAT_RICH;

/**
* Whether to allow non-query suggestion items.
* Setting it to false can bring results from "os" and "rich" responses into
* backward compatible with "legacy".
* @type {boolean}
*/
var ss_allow_non_query = true;

/**
* Default title text when the non-query suggestion item does not have a useful
* title.
* The default display text should be internalionalized.
* @type {string}
*/
var ss_non_query_empty_title =
  "<xsl:value-of select="$ss_non_query_empty_title"/>";

/**
* Whether debugging is allowed.  If so, toggle with F2 key.
* @type {boolean}
*/
var ss_allow_debug = false;
</script>
<script type="text/javascript"
  src="{$gsa_resource_root_path_prefix}/ss.js">
</script>
</xsl:template>


<!-- **********************************************************************
"Search Within Results" search input page (can be customized)
   ********************************************************************** -->
<xsl:template name="swr_search">
<xsl:call-template name="doc_type"/>
<html>
	<xsl:attribute name="class">
	<xsl:value-of select="$skin_class"/>
	</xsl:attribute>
<xsl:call-template name="langHeadStart"/>
  <title><xsl:value-of select="$swr_page_title"/></title>
<xsl:call-template name="style"/>
<xsl:call-template name="langHeadEnd"/>

<body>
	 <xsl:attribute name="class">
	<xsl:value-of select="'clearfix'"/>
	<xsl:text>&#160;</xsl:text>
	<xsl:value-of select="$skin_class"/>
	</xsl:attribute>
	<xsl:attribute name="dir">ltr</xsl:attribute>
<div id="container" class="schoolpage">
 <xsl:call-template name="header_element"/>
 <xsl:call-template name="main_content_wrapper_start"/>
  <div class="main-content">
      <xsl:call-template name="personalization"/>
      <xsl:call-template name="analytics"/>
      <xsl:call-template name="swr_page_header"/>f
      <hr/>
      <xsl:call-template name="copyright"/>
  </div>
  <xsl:call-template name="footer_element"/>    
  <xsl:call-template name="main_content_wrapper_end"/>
  </div>
</body>
</html>
</xsl:template>


<!-- **********************************************************************
"Front door" search input page (can be customized)
   ********************************************************************** -->
<xsl:template name="front_door">
<xsl:call-template name="doc_type"/>
<html>
	<xsl:attribute name="class">
	<xsl:value-of select="$skin_class"/>
	</xsl:attribute>
<xsl:call-template name="langHeadStart"/>
  <title><xsl:value-of select="$front_page_title"/></title>
<xsl:call-template name="style"/>
<xsl:if test="$show_suggest != '0'">
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/common.js'></script>
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/xmlhttp.js'></script>
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/uri.js'></script>
  <xsl:call-template name="gsa_suggest" />
</xsl:if>
<xsl:call-template name="langHeadEnd"/>

<xsl:choose>
  <xsl:when test="$show_suggest != '0'">
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/common.js'></script>
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/xmlhttp.js'></script>
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/uri.js'></script>
    <xsl:call-template name="gsa_suggest" />

    <body onLoad="ss_sf();">
	    <xsl:attribute name="class">
		<xsl:value-of select="'clearfix'"/>
		<xsl:text>&#160;</xsl:text>
		<xsl:value-of select="$skin_class"/>
		</xsl:attribute>
		<xsl:attribute name="dir">ltr</xsl:attribute>
	<div id="container" class="schoolpage">
	  <xsl:call-template name="header_element"/>
	  <xsl:call-template name="main_content_wrapper_start"/>
      <div class="main-content">
        <xsl:call-template name="personalization"/>
        <xsl:call-template name="analytics"/>

        <xsl:call-template name="home_page_header"/>
        <div class="home-page-hr">
          <hr/>  
        </div>
        <xsl:call-template name="copyright"/>
      </div>
	  <xsl:call-template name="footer_element"/>
	  <xsl:call-template name="main_content_wrapper_end"/>
	  </div>
    </body>
  </xsl:when>
  <xsl:otherwise>
    <body>
    	<xsl:attribute name="class">
		<xsl:value-of select="'clearfix'"/>
		<xsl:text>&#160;</xsl:text>
		<xsl:value-of select="$skin_class"/>
		</xsl:attribute>
		<xsl:attribute name="dir">ltr</xsl:attribute>
	 <div id="container" class="schoolpage">
	  <xsl:call-template name="header_element"/>
	  <xsl:call-template name="main_content_wrapper_start"/>
      <div class="main-content">
        <xsl:call-template name="personalization"/>
        <xsl:call-template name="analytics"/>
        <xsl:call-template name="home_page_header"/>
        <hr/>
        <xsl:call-template name="copyright"/> 
      </div>
	  <xsl:call-template name="footer_element"/>   
	  <xsl:call-template name="main_content_wrapper_end"/>
	  </div>
    </body>
  </xsl:otherwise>
</xsl:choose>

</html>
</xsl:template>


<!-- **********************************************************************
Empty result set (can be customized)
   ********************************************************************** -->
<xsl:template name="no_RES">
<xsl:param name="query"/>

<!-- *** Output Google Desktop results (if enabled and any available) *** -->
<xsl:if test="$egds_show_desktop_results != '0'">
  <xsl:call-template name="desktop_results"/>
</xsl:if>
<!-- *** Handle UAR results, if any ***-->
<xsl:if test="$show_onebox != '0'  and $show_sidebar != '1'">
  <xsl:if test="/GSP/ENTOBRESULTS/OBRES/provider = $uar_provider">
      <input type="hidden" name="oneboxloc" value="1261" />
    <xsl:call-template name="onebox"/>
    <script>
    <xsl:comment>
      if (window['populateUarMessages']) {
        populateUarMessages();
      }
    //</xsl:comment>
    </script>
  </xsl:if>
</xsl:if>

<div class="no-results">
<h1>No Results:</h1>
<p>Your search for <strong><xsl:value-of select="$query"/></strong> did not return any results.</p>
<ul>
  <li>Make sure all words are spelled correctly.</li>
  <li>Try different keywords.</li>
  <li>Try another search collection above.</li>
  <xsl:if test="/GSP/PARAM[(@name='access') and(@value='a')]">
    <li>Make sure your security credentials are correct.</li>
  </xsl:if>
  <li>Try more general keywords.</li>
</ul>
</div>

</xsl:template>


<!-- ######################################################################
We do not recommend changes to the following code.  Google Technical
Support Personnel currently do not support customization of XSLT under
these Technical Support Services Guidelines.  Such services may be
provided on a consulting basis, at Google's then-current consulting
services rates under a separate agreement, if Google personnel are
available.  Please ask your Google Account Manager for more details if
you are interested in purchasing consulting services.
   ###################################################################### -->


<!-- **********************************************************************
Global Style (do not customize)
      default font type/size/color, background color, link color
       using HTML CSS (Cascading Style Sheets)
   ********************************************************************** -->
<xsl:template name="style">
<xsl:call-template name="my_page_css"/>
<link rel="stylesheet" type="text/css" href="{$custom_css_path}/global.css?version=1.0" />
<xsl:if test="$show_bottom_search_box != '0'">
  <link rel="stylesheet" type="text/css" href="{$custom_css_path}/bottom_search_box.css" />
</xsl:if>
<xsl:if test="$show_alerts2 = '1'">
  <link rel="stylesheet" type="text/css" href="{$custom_css_path}/show_alerts2.css" />
</xsl:if>


<xsl:if test="$show_res_clusters = '1'">
<xsl:choose>
  <xsl:when test="$res_cluster_position = 'top'">
    <link rel="stylesheet" type="text/css" href="{$custom_css_path}/res_cluster_top.css"/>
  </xsl:when>
  <xsl:when test="$res_cluster_position = 'bottom'">
      <!--<link rel="stylesheet" type="text/css" href="{$custom_css_path}/res_cluster_bottom.css"/>-->
  </xsl:when>
  <xsl:when test="$res_cluster_position = 'right'">
      <link rel="stylesheet" type="text/css" href="{$custom_css_path}/res_cluster_right.css"/>
  </xsl:when>
</xsl:choose>
<xsl:if test="$is_disable_style_in_embedded_mode = '1'">
<link rel="stylesheet" type="text/css" href="{$custom_css_path}/is_disable_style_in_embedded_mode.css"/>
</xsl:if>
</xsl:if>

<xsl:if test="$res_cluster_position = 'right'">
</xsl:if>
<xsl:if test="$show_suggest != '0'">
<!--<link rel="stylesheet" type="text/css" href="{$custom_css_path}/suggestion.css?version=1.0" />-->
</xsl:if>
<xsl:if test="$render_dynamic_navigation = '1'">
<link rel="stylesheet" type="text/css" href="{$custom_css_path}/dynamic_nav.css?version=1.0"/>
</xsl:if>
<xsl:if test="$show_sidebar = '1'">
<link rel="stylesheet" type="text/css" href="{$custom_css_path}/show_sidebar.css"/>
</xsl:if>
<xsl:if test="$show_document_previews = '1'">
<link rel="stylesheet" type="text/css" href="{$custom_css_path}/document_preview.css?version=1.1"/>
</xsl:if>
<xsl:if test="$show_translation = '1' and $only_apps != '1'">
 <link rel="stylesheet" type="text/css" href="{$custom_css_path}/translation.css"/>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
URL variables (do not customize)
   ********************************************************************** -->
<!-- *** if this is a test search (help variable)-->
<xsl:variable name="is_test_search"
select="/GSP/PARAM[@name='testSearch']/@value"/>

<!-- *** if this is a search within results search *** -->
<xsl:variable name="swrnum">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[(@name='swrnum') and (@value!='')]">
    <xsl:value-of select="/GSP/PARAM[@name='swrnum']/@value"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="0"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** help_url: search tip URL (html file) *** -->
<xsl:variable name="help_url">/user_help.html</xsl:variable>

<!-- *** base_url: collection info *** -->
<xsl:variable name="base_url">
<xsl:for-each
  select="/GSP/PARAM[@name = 'client' or
                   @name = 'site' or
                   @name = 'num' or
                   @name = 'output' or
                   @name = 'proxystylesheet' or
                   @name = 'access' or
                   @name = 'lr' or
                   @name = 'ie']">
  <xsl:value-of select="@name"/>=<xsl:value-of select="@original_value"/>
  <xsl:if test="position() != last()">&amp;</xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** custom tab base url *** -->
<xsl:variable name="custom_tab_url">
  <xsl:for-each select="/GSP/PARAM[@name != 'site']">
  <xsl:value-of select="@name"/>=<xsl:value-of select="@original_value"/>
  <xsl:if test="position() != last()">&amp;</xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** home_url: search? + collection info + &proxycustom=<HOME/> *** -->
<xsl:variable name="home_url">
<xsl:value-of select="$gsa_search_root_path_prefix"/>?<xsl:value-of select="$base_url"
/>&amp;proxycustom=&lt;HOME/&gt;</xsl:variable>


<!-- *** synonym_url: does not include q, as_q, and start elements *** -->
<xsl:variable name="synonym_url"><xsl:for-each
select="/GSP/PARAM[(@name != 'q') and
                   (@name != 'as_q') and
                   (@name != 'swrnum') and
                   (@name != 'dnavs') and
                   (@name != $embedded_mode_root_path_param) and
                   (@name != $embedded_mode_resource_root_path_param) and
                   (@name != $embedded_mode_disable_style) and
                   (@name != 'ie') and
                   (@name != 'start') and
                   (@name != 'epoch' or $is_test_search != '') and
                   not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** search_url *** -->
<xsl:variable name="search_url">
<!-- Expert Search - ignore expertsearchasync query param. -->
<xsl:for-each
    select="/GSP/PARAM[(@name != 'start') and
                       (@name != $embedded_mode_root_path_param) and
                       (@name != $embedded_mode_resource_root_path_param) and
                       (@name != $embedded_mode_disable_style) and
                       (@name != 'swrnum') and
                       (@name != 'expertsearchasync') and
                       (@name != 'epoch' or $is_test_search != '') and
                       not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:when test="@name = 'only_apps' and $show_apps_segmented_ui = '1'">
      <xsl:value-of select="'exclude_apps=1'" />
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** search_url minus any dynamic navigation filters *** -->
<xsl:variable name="search_url_no_dnavs">
<xsl:for-each
    select="/GSP/PARAM[(@name != 'start') and
                       (@name != $embedded_mode_root_path_param) and
                       (@name != $embedded_mode_resource_root_path_param) and
                       (@name != $embedded_mode_disable_style) and
                       (@name != 'swrnum') and
                       (@name != 'dnavs') and
                       (@name != 'epoch' or $is_test_search != '') and
                       not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:when test="@name = 'only_apps' and $show_apps_segmented_ui = '1'">
      <xsl:value-of select="'exclude_apps=1'" />
    </xsl:when>
    <xsl:when test="@name = 'q' and /GSP/PARAM[@name='dnavs']">
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="substring-before(@original_value,
        concat('+', /GSP/PARAM[@name='dnavs']/@original_value))"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** url without q and dnavs param *** -->
<xsl:variable name="no_q_dnavs_params">
<xsl:for-each
    select="/GSP/PARAM[(@name != 'start') and
                       (@name != $embedded_mode_root_path_param) and
                       (@name != $embedded_mode_resource_root_path_param) and
                       (@name != $embedded_mode_disable_style) and
                       (@name != 'swrnum') and
                       (@name != 'q') and
                       (@name != 'dnavs') and
                       (@name != 'epoch' or $is_test_search != '') and
                       not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** no_q_dnavs_params_escaped: safe for inclusion in javascript *** -->
<xsl:variable name="no_q_dnavs_params_escaped">
<xsl:call-template name="js_escape">
  <xsl:with-param name="string" select="$no_q_dnavs_params"/>
  <xsl:with-param name="slash_mode" select='"0"'/>
</xsl:call-template>
</xsl:variable>

<!-- *** search_url_escaped: safe for inclusion in javascript *** -->
<xsl:variable name="search_url_escaped">
<xsl:call-template name="js_escape">
  <xsl:with-param name="string" select="$search_url_no_dnavs"/>
  <xsl:with-param name="slash_mode" select='"0"'/>
</xsl:call-template>
</xsl:variable>

<!-- *** filter_url: everything except resetting "filter=" *** -->
<xsl:variable name="filter_url"><xsl:value-of
  select="$gsa_search_root_path_prefix"/>?<xsl:for-each
  select="/GSP/PARAM[(@name != 'filter') and
                     (@name != $embedded_mode_root_path_param) and
                     (@name != $embedded_mode_resource_root_path_param) and
                     (@name != $embedded_mode_disable_style) and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
<xsl:text disable-output-escaping='yes'>&amp;filter=</xsl:text>
</xsl:variable>

<!-- *** adv_search_url: search? + $search_url + as_q=$q *** -->
<xsl:variable name="adv_search_url"><xsl:value-of
  select="$gsa_search_root_path_prefix"/>?<xsl:value-of
  select="$search_url_no_dnavs"/>&amp;proxycustom=&lt;ADVANCED/&gt;</xsl:variable>

<!-- *** exclude_apps: stores the value of exclude_apps query string argument,
    if present. A value of '1' indicates that segmented UI should be
    displayed. Value of '0' indicates that normal blended results UI should be
    displayed. -->
<xsl:variable name="exclude_apps">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[@name='exclude_apps']">
    <xsl:value-of select="/GSP/PARAM[@name='exclude_apps']/@original_value" />
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="'1'" />
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** only_apps: A value of '1' indicates returning only Google Apps
   results. -->
<xsl:variable name="only_apps">
<xsl:value-of select="/GSP/PARAM[@name='only_apps']/@original_value"/>
</xsl:variable>

<!-- *** db_url_protocol: googledb:// *** -->
<xsl:variable name="db_url_protocol">googledb://</xsl:variable>

<!-- *** googleconnector_protocol: googleconnector:// *** -->
<xsl:variable name="googleconnector_protocol">googleconnector://</xsl:variable>

<!-- *** dbconnector_protocol: dbconnector:// *** -->
<xsl:variable name="dbconnector_protocol">dbconnector://</xsl:variable>

<!-- *** nfs_url_protocol: nfs:// *** -->
<xsl:variable name="nfs_url_protocol">nfs://</xsl:variable>

<!-- *** smb_url_protocol: smb:// *** -->
<xsl:variable name="smb_url_protocol">smb://</xsl:variable>

<!-- *** unc_url_protocol: unc:// *** -->
<xsl:variable name="unc_url_protocol">unc://</xsl:variable>

<!-- *** swr_search_url: search? + $search_url + as_q=$q *** -->
<!-- for secure search no estimates are available(except if Customer enabled them
so we use a sentinel value of -1 for swrnum -->
<xsl:variable name="swr_search_url"><xsl:value-of
  select="$gsa_search_root_path_prefix"/>?<xsl:value-of
  select="$search_url_no_dnavs"/>&amp;swrnum=<xsl:choose>
  <xsl:when test="((($access = 'a') or ($access = 's')) and /GSP/RES/M = '')">
    <xsl:value-of select="-1"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="/GSP/RES/M"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** analytics_script_url: https://www.google-analytics.com/ga.js *** -->
<xsl:variable
name="analytics_script_url">https://www.google-analytics.com/ga.js</xsl:variable>

<!-- **********************************************************************
Search Parameters (do not customize)
   ********************************************************************** -->

<!-- *** num_results: actual num_results per page *** -->
<xsl:variable name="num_results">
<xsl:choose>
  <xsl:when test="count(/GSP/PARAM[(@name='num')]) &gt; 1">
    <xsl:value-of select="/GSP/PARAM[(@name='num')][last()]/@value"/>
  </xsl:when>
  <xsl:when test="/GSP/PARAM[(@name='num') and (@value!='')]">
    <xsl:value-of select="/GSP/PARAM[@name='num']/@value"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="10"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** form_params: parameters carried by the search input form *** -->
<xsl:template name="form_params">
<xsl:for-each
  select="PARAM[@name != 'q' and
                @name != 'ie' and
                not(contains(@name, 'as_')) and
                @name != 'btnG' and
                @name != 'btnG.x' and
                @name != 'btnG.y' and
                @name != 'btnI' and
                @name != 'site' and
                @name != 'filter' and
                @name != 'swrnum' and
                @name != 'start' and
                @name != 'access' and
                @name != $embedded_mode_root_path_param and
                @name != $embedded_mode_resource_root_path_param and
                @name != $embedded_mode_disable_style and
                @name != 'ip' and
                @name != 'entqr' and
                @name != 'entqrm' and
                @name != 'ulang' and
                @name != 'dnavs' and
                @name != 'tlen' and
                @name != 'exclude_apps' and
                @name != 'only_apps_deb' and
                @name != 'requiredfields' and
                @name != 'partialfields' and
                (@name != 'epoch' or $is_test_search != '') and
                not(starts-with(@name ,'metabased_'))]">
      <input type="hidden" name="{@name}" value="{@value}" />

    <xsl:if test="@name = 'oe'">
      <input type="hidden" name="ie" value="{@value}" />
    </xsl:if>
  <xsl:text>
  </xsl:text>
</xsl:for-each>


<xsl:if test="not(/GSP/PARAM[@name='only_apps'])">
  <!-- Always provide a value for the exclude_apps hidden field
       if only_apps param is not present. -->
  <input type="hidden" name="exclude_apps" value="{$exclude_apps}" />
</xsl:if>

<xsl:if test="$search_collections_xslt = '' and PARAM[@name='site']">
  <input type="hidden" name="site" value="{PARAM[@name='site']/@value}"/>
</xsl:if>
<xsl:if test="$res_title_length != $res_title_length_default">
  <input type="hidden" name="tlen" value="{$res_title_length}"/>
</xsl:if>

  <input type="hidden" name="filter" value="0" />

</xsl:template>

<!-- *** original query without any dynamic navigation filters *** -->
<xsl:variable name="qval">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[@name='dnavs']">
    <xsl:value-of select="concat(substring-before(/GSP/Q,
      /GSP/PARAM[@name='dnavs']/@value), ' ', substring-after(/GSP/Q,
      /GSP/PARAM[@name='dnavs']/@value))"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="/GSP/Q"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<xsl:variable name="original_q">
<xsl:choose>
  <xsl:when test="count(/GSP/PARAM[@name='dnavs']) > 0">
    <xsl:value-of
      select="substring-before(/GSP/PARAM[@name='q']/@original_value,
      concat('+', /GSP/PARAM[@name='dnavs']/@original_value))"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="/GSP/PARAM[@name='q']/@original_value"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** space_normalized_query: q = /GSP/Q *** -->
<xsl:variable name="space_normalized_query">
<xsl:value-of select="normalize-space($qval)"
  disable-output-escaping="yes"/>
</xsl:variable>

<!-- *** stripped_search_query: q, as_q, ... for cache highlight *** -->
<xsl:variable name="stripped_search_query"><xsl:for-each
select="/GSP/PARAM[(@name = 'q') or
                   (@name = 'as_q') or
                   (@name = 'as_oq') or
                   (@name = 'as_epq')]"><xsl:value-of select="@original_value"
/><xsl:if test="position() != last()"
  ><xsl:text disable-output-escaping="yes">+</xsl:text
   ></xsl:if></xsl:for-each>
</xsl:variable>
<xsl:variable name="stripped_sanitized_search_query">
<xsl:call-template name="js_escape">
  <xsl:with-param name="string" select="$stripped_search_query"/>
  <xsl:with-param name="slash_mode" select='"0"'/>
</xsl:call-template>
</xsl:variable>

<xsl:variable name="access">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[(@name='access') and ((@value='s') or (@value='a'))]">
    <xsl:value-of select="/GSP/PARAM[@name='access']/@original_value"/>
  </xsl:when>
  <xsl:otherwise>p</xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- **********************************************************************
Script to get current page.
   ********************************************************************** -->
<xsl:template name="search_home_script">
<script type="text/javascript">
function getHomeUrl() {
  return location.href = "/ealerts?shu=" + escape(document.location.href);
}
</script>
</xsl:template>

<!-- **********************************************************************
Shown sign-in/sign-out links at the top of the /search page
   ********************************************************************** -->

<xsl:template name="sign_in">
  <xsl:call-template name="search_home_script"/>
  <div class="personalization" width="100%" align="right">
   <xsl:text disable-output-escaping='yes'>&lt;a href='javascript:getHomeUrl();'&gt;My Alerts&lt;/a&gt;</xsl:text>
  </div>
</xsl:template>

<xsl:template name="signed_in">
<xsl:call-template name="search_home_script"/>
<div class="personalization" width="100%" align="right">
  <b><xsl:value-of select="/GSP/LOGIN" /></b> |
   <xsl:text disable-output-escaping='yes'>&lt;a href='javascript:getHomeUrl();'&gt;My Alerts&lt;/a&gt;</xsl:text> |
   <xsl:text disable-output-escaping='yes'>&lt;a href='/uam?action=Logout'&gt;Sign Out&lt;/a&gt;</xsl:text>
</div>
</xsl:template>

<xsl:template name="personalization">
<xsl:if test="$show_alerts2 = '1'">
<xsl:choose>
 <xsl:when test="/GSP/PERSONALIZATION">
  <xsl:choose>
    <xsl:when test="/GSP/LOGIN"><xsl:call-template name="signed_in"/></xsl:when>
    <xsl:otherwise><xsl:call-template name="sign_in" /></xsl:otherwise>
  </xsl:choose>
 </xsl:when>
</xsl:choose>
</xsl:if>
</xsl:template>

<xsl:template name="doc_type">
<xsl:text disable-output-escaping="yes">
&lt;!DOCTYPE html&gt;
</xsl:text>
</xsl:template>

<!-- **********************************************************************
Figure out what kind of page this is (do not customize)
   ********************************************************************** -->
<xsl:template match="GSP">
<xsl:choose>
  <!-- Expert Search - return the expert search results for widget view
       if the current query is for the same. -->
  <xsl:when test="$show_expert_search_widget_view_results = '1'">
    <xsl:call-template name="render_expert_search_results">
      <xsl:with-param name="src_prefix"
          select="concat($gsa_search_root_path_prefix, '?')" />
      <xsl:with-param name="current_search_query_args"
          select="$search_url" />
      <xsl:with-param name="msg_expert_search_no_experts_found"
          select="$msg_expert_search_no_experts_found" />
      <xsl:with-param name="msg_expert_search_switch_to_expanded_mode"
          select="$msg_expert_search_switch_to_expanded_mode" />
      <xsl:with-param name="msg_results_page_number_prefix"
          select="$msg_results_page_number_prefix" />
      <xsl:with-param name="msg_go_to_previous_page"
          select="$msg_go_to_previous_page" />
      <xsl:with-param name="msg_go_to_next_page"
          select="$msg_go_to_next_page" />
      <xsl:with-param name="msg_previous_page_action"
          select="$msg_previous_page_action" />
      <xsl:with-param name="msg_next_page_action"
          select="$msg_next_page_action" />
    </xsl:call-template>
  </xsl:when>
  <xsl:when test="$only_apps = '1' and $show_apps_segmented_ui = '1'">
    <xsl:call-template name="apps_only_search_results"/>
  </xsl:when>
  <xsl:when test="Q">
    <xsl:choose>
      <xsl:when test="($swrnum != 0) or
        (($swrnum = '-1') and (($access = 'a') or ($access = 's')))">
        <xsl:call-template name="swr_search"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="search_results"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:when>
  <xsl:when test="CACHE">
    <xsl:choose>
      <xsl:when test="$show_res_cache!='0'">
        <xsl:call-template name="cached_page"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="no_RES"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:when>
  <xsl:when test="CUSTOM/HOME">
    <xsl:call-template name="front_door"/>
  </xsl:when>
  <xsl:when test="CUSTOM/ADVANCED">
    <xsl:call-template name="advanced_search"/>
  </xsl:when>
  <xsl:when test="ERROR">
    <xsl:call-template name="error_page">
      <xsl:with-param name="errorMessage" select="$server_error_msg_text"/>
      <xsl:with-param name="errorDescription" select="$server_error_des_text"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:call-template name="error_page">
      <xsl:with-param name="errorMessage" select="$xml_error_msg_text"/>
      <xsl:with-param name="errorDescription" select="$xml_error_des_text"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<!-- **********************************************************************
Cached page (do not customize)
   ********************************************************************** -->
<xsl:template name="cached_page">
<xsl:variable name="cached_page_url" select="CACHE/CACHE_URL"/>
<xsl:variable name="cached_page_html" select="CACHE/CACHE_HTML"/>

<!-- *** decide whether to load html page or pdf file *** -->
<xsl:if test="'.pdf' != substring($cached_page_url,
            1 + string-length($cached_page_url) - string-length('.pdf')) and
            not(starts-with($cached_page_url, $db_url_protocol)) and
            not(starts-with($cached_page_url, $nfs_url_protocol)) and
            not(starts-with($cached_page_url, $smb_url_protocol)) and
            not(starts-with($cached_page_url, $unc_url_protocol))">
  <base href="{$cached_page_url}"/>
</xsl:if>

<!-- *** display cache page header *** -->
<xsl:call-template name="cached_page_header">
<xsl:with-param name="cached_page_url" select="$cached_page_url"/>
</xsl:call-template>

<!-- *** display cached contents *** -->
<xsl:value-of select="$cached_page_html" disable-output-escaping="yes"/>
</xsl:template>

<xsl:template name="escape_quot">
<xsl:param name="string"/>
<xsl:call-template name="replace_string">
  <xsl:with-param name="find" select="'&quot;'"/>
  <xsl:with-param name="replace" select="'&amp;quot;'"/>
  <xsl:with-param name="string" select="$string"/>
</xsl:call-template>
</xsl:template>

<!-- Escapes single quote, double quotes, < and > characters. -->
<xsl:template name="js_escape">
<xsl:param name="string"/>
<xsl:param name="slash_mode"/>
<xsl:variable name="without_slash">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select='"\"'/>
    <xsl:with-param name="replace" select='"\\"'/>
    <xsl:with-param name="string" select="$string"/>
  </xsl:call-template>
</xsl:variable>
<xsl:choose>
  <xsl:when test="$slash_mode = '1'">
    <xsl:variable name="without_slash_apos">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select='"&apos;"'/>
        <xsl:with-param name="replace" select='"\&apos;"'/>
        <xsl:with-param name="string" select="$without_slash"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="without_slash_apos_double_quotes">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select="'&quot;'"/>
        <xsl:with-param name="replace" select="'\&quot;'"/>
        <xsl:with-param name="string" select="$without_slash_apos"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="without_slash_apos_double_quotes_lt">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select='"&lt;"'/>
        <xsl:with-param name="replace" select='"\&lt;"'/>
        <xsl:with-param name="string"
            select="$without_slash_apos_double_quotes"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select='"&gt;"'/>
      <xsl:with-param name="replace" select='"\&gt;"'/>
      <xsl:with-param name="string"
        select="$without_slash_apos_double_quotes_lt"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:variable name="without_slash_apos">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select='"&apos;"'/>
        <xsl:with-param name="replace" select='"&amp;apos;"'/>
        <xsl:with-param name="string" select="$without_slash"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="without_slash_apos_double_quotes">
      <xsl:call-template name="escape_quot">
        <xsl:with-param name="string" select="$without_slash_apos"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="without_slash_apos_double_quotes_lt">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select='"&lt;"'/>
        <xsl:with-param name="replace" select='"&amp;lt;"'/>
        <xsl:with-param name="string"
          select="$without_slash_apos_double_quotes"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select='"&gt;"'/>
      <xsl:with-param name="replace" select='"&amp;gt;"'/>
      <xsl:with-param name="string"
        select="$without_slash_apos_double_quotes_lt"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<!-- **********************************************************************
Advanced search page (do not customize)
   ********************************************************************** -->
<xsl:template name="advanced_search">

<xsl:variable name="html_escaped_as_q">
  <xsl:call-template name="escape_quot">
    <xsl:with-param name="string">
      <xsl:choose>
        <xsl:when test="/GSP/PARAM[@name='dnavs']">
          <xsl:value-of select="substring-before(/GSP/PARAM[@name='q']/@value,
            /GSP/PARAM[@name='dnavs']/@value)"/>
        </xsl:when>
        <xsl:otherwise><xsl:value-of select="/GSP/PARAM[@name='q']/@value"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:with-param>
  </xsl:call-template>
  <xsl:if test="/GSP/PARAM[@name='as_q']/@value">
    <xsl:if test="/GSP/PARAM[@name='q']/@value"> 
      <xsl:value-of select="' '"/>
    </xsl:if>
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_q']/@value"/>
    </xsl:call-template>
  </xsl:if>
</xsl:variable>

<xsl:variable name="html_escaped_as_epq">
  <xsl:call-template name="escape_quot">
    <xsl:with-param name="string" select="/GSP/PARAM[@name='as_epq']/@value"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="html_escaped_as_oq">
  <xsl:call-template name="escape_quot">
    <xsl:with-param name="string" select="/GSP/PARAM[@name='as_oq']/@value"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="html_escaped_as_eq">
  <xsl:call-template name="escape_quot">
    <xsl:with-param name="string" select="/GSP/PARAM[@name='as_eq']/@value"/>
  </xsl:call-template>
</xsl:variable>

<html>
<xsl:attribute name="class">
	<xsl:value-of select="$skin_class"/>
</xsl:attribute>
<xsl:call-template name="langHeadStart"/>
<title><xsl:value-of select="$adv_page_title"/></title>
<xsl:call-template name="style"/>

<!-- script type="text/javascript" -->
<script>
<xsl:comment>
function setFocus() {
document.f.as_q.focus(); }
function esc(x){
x = escape(x).replace(/\+/g, "%2b");
if (x.substring(0,2)=="\%u") x="";
return x;
}
function collecturl(target, custom) {
var p = new Array();var i = 0;var url="";var z = document.f;
if (z.as_q.value.length) {p[i++] = 'as_q=' + esc(z.as_q.value);}
if (z.as_epq.value.length) {p[i++] = 'as_epq=' + esc(z.as_epq.value);}
if (z.as_oq.value.length) {p[i++] = 'as_oq=' + esc(z.as_oq.value);}
if (z.as_eq.value.length) {p[i++] = 'as_eq=' + esc(z.as_eq.value);}
if (z.as_sitesearch.value.length)
{p[i++]='as_sitesearch='+esc(z.as_sitesearch.value);}
if (z.as_lq.value.length) {p[i++] = 'as_lq=' + esc(z.as_lq.value);}
if (z.as_occt.options[z.as_occt.selectedIndex].value.length)
{p[i++]='as_occt='+esc(z.as_occt.options[z.as_occt.selectedIndex].value);}
if (z.as_dt.options[z.as_dt.selectedIndex].value.length)
{p[i++]='as_dt='+esc(z.as_dt.options[z.as_dt.selectedIndex].value);}
if (z.lr.options[z.lr.selectedIndex].value != '') {p[i++] = 'lr=' +
z.lr.options[z.lr.selectedIndex].value;}
if (z.num.options[z.num.selectedIndex].value != '10')
{p[i++] = 'num=' + z.num.options[z.num.selectedIndex].value;}
if (z.sort.options[z.sort.selectedIndex].value != '')
{p[i++] = 'sort=' + z.sort.options[z.sort.selectedIndex].value;}
if (typeof(z.client) != 'undefined')
{p[i++] = 'client=' + esc(z.client.value);}
if (typeof(z.site) != 'undefined')
{p[i++] = 'site=' + esc(z.site.value);}
if (typeof(z.output) != 'undefined')
{p[i++] = 'output=' + esc(z.output.value);}
if (typeof(z.proxystylesheet) != 'undefined')
{p[i++] = 'proxystylesheet=' + esc(z.proxystylesheet.value);}
if (typeof(z.ie) != 'undefined')
{p[i++] = 'ie=' + esc(z.ie.value);}
if (typeof(z.oe) != 'undefined')
{p[i++] = 'oe=' + esc(z.oe.value);}

if (typeof(z.access) != 'undefined')
{p[i++] = 'access=' + esc(z.access.value);}
if (custom != '')
{p[i++] = 'proxycustom=' + '&lt;ADVANCED/&gt;';}
if (p.length &gt; 0) {
url = p[0];
for (var j = 1; j &lt; p.length; j++) { url += "&amp;" + p[j]; }}
location.href = target + '?' + url;
}
// </xsl:comment>
</script>

<xsl:call-template name="langHeadEnd"/>

<body onload="setFocus()">
	<xsl:attribute name="class">
	<xsl:value-of select="'clearfix'"/>
	<xsl:text>&#160;</xsl:text>
	<xsl:value-of select="$skin_class"/>
	</xsl:attribute>
	<xsl:attribute name="dir">ltr</xsl:attribute>
  <div id="container" class="schoolpage">
  <!-- *** Customer's own advanced search page header *** -->
  <xsl:if test="$choose_adv_search_page_header = 'mine' or
                  $choose_adv_search_page_header = 'both'">
    <xsl:call-template name="header_element"/>
	<xsl:call-template name="main_content_wrapper_start"/>
  </xsl:if>
  <div class="main-content">
  <xsl:call-template name="personalization"/>
  <xsl:call-template name="analytics"/>

  <!--====Advanced Search Header======-->
  <xsl:if test="$choose_adv_search_page_header = 'provided' or
                  $choose_adv_search_page_header = 'both'">
    <xsl:call-template name="advanced_search_header"/>
  </xsl:if>
  <xsl:call-template name="top_sep_bar">
    <xsl:with-param name="text" select="$sep_bar_adv_text"/>
    <xsl:with-param name="show_info" select="0"/>
    <xsl:with-param name="time" select="0"/>
  </xsl:call-template>

  <!--====Carry over Search Parameters======-->
  <form method="get" action="search" name="f">
    <xsl:if test="PARAM[@name='client']">
      <input type="hidden" name="client"
        value="{PARAM[@name='client']/@value}" />
    </xsl:if>
  <!--==== site is carried over in the drop down if the menu is used =====-->
    <xsl:if test="$search_collections_xslt = '' and PARAM[@name='site']">
      <input type="hidden" name="site" value="{PARAM[@name='site']/@value}"/>
    </xsl:if>
    <xsl:if test="PARAM[@name='output']">
      <input type="hidden" name="output"
        value="{PARAM[@name='output']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='proxystylesheet']">
      <input type="hidden" name="proxystylesheet"
        value="{PARAM[@name='proxystylesheet']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='ie']">
      <input type="hidden" name="ie"
        value="{PARAM[@name='ie']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='oe']">
      <input type="hidden" name="oe"
        value="{PARAM[@name='oe']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='hl']">
      <input type="hidden" name="hl"
        value="{PARAM[@name='hl']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='getfields']">
      <input type="hidden" name="getfields"
        value="{PARAM[@name='getfields']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='requiredfields']">
      <input type="hidden" name="requiredfields"
        value="{PARAM[@name='requiredfields']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='partialfields']">
      <input type="hidden" name="partialfields"
        value="{PARAM[@name='partialfields']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='exclude_apps']">
      <input type="hidden" name="exclude_apps"
        value="{PARAM[@name='exclude_apps']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='only_apps']">
      <input type="hidden" name="only_apps"
        value="{PARAM[@name='only_apps']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='ulang']">
      <input type="hidden" name="ulang"
        value="{PARAM[@name='ulang']/@value}" />
    </xsl:if>

    <!--====Advanced Search Options======-->
    <div id="advanced-search-options-div">
      
    </div>
    <table cellspacing="0" cellpadding="3" border="0" width="100%">
      <tr bgcolor="{$adv_search_panel_bgcolor}">
        <td>
          <table width="100%" cellspacing="0" cellpadding="0" border="0">
            <tr bgcolor="{$adv_search_panel_bgcolor}">
              <td>
                <table width="100%" cellspacing="0" cellpadding="2"
                border="0">
                  <tr>
                    <td valign="top" width="15%"><br />
                    <b>Find results</b></td>

                    <td width="85%">
                      <table width="100%" cellpadding="2"
                      border="0" cellspacing="0">
                        <tr>
                          <td><font size="-1">with <b>all</b> of the words</font></td>

                          <td>
                          <xsl:text disable-output-escaping="yes">
                           &lt;input type=&quot;text&quot;
                           name=&quot;as_q&quot;
                           size=&quot;25&quot; value=&quot;</xsl:text>
                          <xsl:value-of disable-output-escaping="yes"
                           select="$html_escaped_as_q"/>
                          <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>

                          <script type="text/javascript">
                            <xsl:comment>
                              document.f.as_q.focus();
                            // </xsl:comment>
                          </script>
                          </td>

                          <td valign="top" rowspan="4">
                          <font size="-1">
                          <select name="num">
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value!='10')]">
                                <option value="10">10 results</option>
                              </xsl:when>
                              <xsl:otherwise>
                                <option value="10" selected="selected">10 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value='20')]">
                                <option value="20" selected="selected">20 results</option>
                              </xsl:when>
                                <xsl:otherwise>
                                  <option value="20">20 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value='30')]">
                                <option value="30" selected="selected">30 results</option>
                              </xsl:when>
                              <xsl:otherwise>
                                <option value="30">30 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value='50')]">
                                <option value="50" selected="selected">50 results</option>
                              </xsl:when>
                              <xsl:otherwise>
                                <option value="50">50 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value='100')]">
                                <option value="100" selected="selected">100 results</option>
                              </xsl:when>
                              <xsl:otherwise>
                                <option value="100">100 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                          </select>
                          </font>
                          </td>
                          <xsl:call-template name="collection_menu"/>
                          <td>
                          <font size="-1">
                          <input type="submit" name="btnG"
                            value="{$search_button_text}" />
                          </font>
                          </td>
                        </tr>

                        <tr>
                          <td nowrap="nowrap"><font size="-1">with the <b>exact phrase</b></font></td>

                          <td>
                          <xsl:text disable-output-escaping="yes">

                           &lt;input type=&quot;text&quot;
                           name=&quot;as_epq&quot;
                           size=&quot;25&quot; value=&quot;</xsl:text>
                          <xsl:value-of disable-output-escaping="yes"
                           select="$html_escaped_as_epq"/>
                          <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                          </td>
                        </tr>

                        <tr>
                          <td nowrap="nowrap"><font size="-1">with <b>at least one</b> of the words</font></td>

                          <td>
                          <xsl:text disable-output-escaping="yes">

                           &lt;input type=&quot;text&quot;
                           name=&quot;as_oq&quot;
                           size=&quot;25&quot; value=&quot;</xsl:text>
                          <xsl:value-of disable-output-escaping="yes"
                           select="$html_escaped_as_oq"/>
                          <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                          </td>
                        </tr>

                        <tr>
                          <td nowrap="nowrap"><font size="-1"><b>without</b> the words</font></td>

                          <td>
                          <xsl:text disable-output-escaping="yes">

                           &lt;input type=&quot;text&quot;
                           name=&quot;as_eq&quot;
                           size=&quot;25&quot; value=&quot;</xsl:text>
                          <xsl:value-of disable-output-escaping="yes"
                           select="$html_escaped_as_eq"/>
                          <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                          </td>
                        </tr>
                      </table>
                    </td>
                  </tr>
                </table>
              </td>
            </tr>

            <tr bgcolor="{$global_bg_color}">
              <td>
                <table width="100%" cellspacing="0"
                cellpadding="2" border="0">
                  <tr>
                    <td width="15%"><font size="-1"><b>Language</b></font></td>

                    <td width="40%"><font size="-1">Return pages written in</font></td>

                    <td><font size="-1">



                       <xsl:choose>
                      <xsl:when test="PARAM[(@name='oe') and (@value!='')]">
                        <xsl:text disable-output-escaping="yes">&lt;select name=&quot;lr&quot;&gt;</xsl:text>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text disable-output-escaping="yes">&lt;select name=&quot;lr&quot; onchange=&quot;javascript:collecturl('search', 'adv');&quot;&gt;</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>

                      <option value="">any language</option>

                      <!--====IMPORTANT: This is not a Message. This is a placeholder.======-->
                      
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ar')]">
     <option value="lang_ar"
     selected="selected">Arabic</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ar">Arabic</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-CN')]">
     <option value="lang_zh-CN"
     selected="selected">Chinese (Simplified)</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_zh-CN">Chinese (Simplified)</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-TW')]">
     <option value="lang_zh-TW"
     selected="selected">Chinese (Traditional)</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_zh-TW">Chinese (Traditional)</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_cs')]">
     <option value="lang_cs"
     selected="selected">Czech</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_cs">Czech</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_da')]">
     <option value="lang_da"
     selected="selected">Danish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_da">Danish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_nl')]">
     <option value="lang_nl"
     selected="selected">Dutch</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_nl">Dutch</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_en')]">
     <option value="lang_en"
     selected="selected">English</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_en">English</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_et')]">
     <option value="lang_et"
     selected="selected">Estonian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_et">Estonian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_fi')]">
     <option value="lang_fi"
     selected="selected">Finnish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_fi">Finnish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_fr')]">
     <option value="lang_fr"
     selected="selected">French</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_fr">French</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_de')]">
     <option value="lang_de"
     selected="selected">German</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_de">German</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_el')]">
     <option value="lang_el"
     selected="selected">Greek</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_el">Greek</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_iw')]">
     <option value="lang_iw"
     selected="selected">Hebrew</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_iw">Hebrew</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_hu')]">
     <option value="lang_hu"
     selected="selected">Hungarian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_hu">Hungarian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_is')]">
     <option value="lang_is"
     selected="selected">Icelandic</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_is">Icelandic</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_it')]">
     <option value="lang_it"
     selected="selected">Italian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_it">Italian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ja')]">
     <option value="lang_ja"
     selected="selected">Japanese</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ja">Japanese</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ko')]">
     <option value="lang_ko"
     selected="selected">Korean</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ko">Korean</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_lv')]">
     <option value="lang_lv"
     selected="selected">Latvian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_lv">Latvian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_lt')]">
     <option value="lang_lt"
     selected="selected">Lithuanian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_lt">Lithuanian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_no')]">
     <option value="lang_no"
     selected="selected">Norwegian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_no">Norwegian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_pl')]">
     <option value="lang_pl"
     selected="selected">Polish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_pl">Polish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_pt')]">
     <option value="lang_pt"
     selected="selected">Portuguese</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_pt">Portuguese</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ro')]">
     <option value="lang_ro"
     selected="selected">Romanian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ro">Romanian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ru')]">
     <option value="lang_ru"
     selected="selected">Russian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ru">Russian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_es')]">
     <option value="lang_es"
     selected="selected">Spanish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_es">Spanish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_sv')]">
     <option value="lang_sv"
     selected="selected">Swedish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_sv">Swedish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_tr')]">
     <option value="lang_tr"
     selected="selected">Turkish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_tr">Turkish</option>
     </xsl:otherwise>
    </xsl:choose>


                    <xsl:text disable-output-escaping="yes">&lt;/select&gt;</xsl:text>
                    </font></td>
                  </tr>
                </table>
              </td>
            </tr>

            <tr bgcolor="{$global_bg_color}">
              <td>
                <table width="100%" cellpadding="2"
                cellspacing="0" border="0">
                  <tr>
                    <td width="15%"><font size="-1"><b>File Format</b></font></td>

                    <td width="40%" nowrap="nowrap"><font size="-1"><select name="as_ft">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_ft') and (@value='i')]">
                          <option value="i" selected="selected">Only</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="i">Only</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_ft') and (@value='e')]">
                          <option value="e" selected="selected">Don't</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="e">Don't</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select>return results of the file format</font>
                    </td>

                    <td><font size="-1">
                    <select name="as_filetype">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value!='')]">
                          <option value="">any format</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="" selected="selected">any format</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='pdf')]">
                          <option value="pdf" selected="selected">Adobe Acrobat PDF (.pdf)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="pdf">Adobe Acrobat PDF (.pdf)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='ps')]">
                          <option value="ps" selected="selected">Adobe Postscript (.ps)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="ps">Adobe Postscript (.ps)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='doc')]">
                          <option value="doc" selected="selected">Microsoft Word (.doc)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="doc">Microsoft Word (.doc)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='docx')]">
                          <option value="docx" selected="selected">Microsoft Word (.docx)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="docx">Microsoft Word (.docx)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='xls')]">
                          <option value="xls" selected="selected">Microsoft Excel (.xls)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="xls">Microsoft Excel (.xls)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='xlsx')]">
                          <option value="xlsx" selected="selected">Microsoft Excel (.xlsx)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="xlsx">Microsoft Excel (.xlsx)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='ppt')]">
                          <option value="ppt" selected="selected">Microsoft Powerpoint (.ppt)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="ppt">Microsoft Powerpoint (.ppt)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='pptx')]">
                          <option value="pptx" selected="selected">Microsoft Powerpoint (.pptx)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="pptx">Microsoft Powerpoint (.pptx)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='rtf')]">
                          <option value="rtf" selected="selected">Rich Text Format (.rtf)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="rtf">Rich Text Format (.rtf)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select>
                    </font></td>
                  </tr>
                </table>
              </td>
            </tr>

            <tr bgcolor="{$global_bg_color}">
              <td>
                <table width="100%" cellspacing="0"
                cellpadding="2" border="0">
                  <tr>
                    <td width="15%"><font size="-1"><b>Occurrences</b></font></td>

                    <td nowrap="nowrap" width="40%"><font size="-1">Return results where my terms occur</font></td>

                    <td><font size="-1"><select
                    name="as_occt">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_occt') and (@value!='any')]">
                          <option value="any"> anywhere in the page </option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="any" selected="selected">
                            anywhere in the page
                          </option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_occt') and (@value='title')]">
                          <option value="title" selected="selected">in the title of the page</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="title">in the title of the page</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_occt') and (@value='url')]">
                          <option value="url" selected="selected">in the URL of the page</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="url">in the URL of the page</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select></font></td>
                  </tr>
                </table>
              </td>
            </tr>

            <tr bgcolor="{$global_bg_color}">
              <td>
                <table width="100%" cellpadding="2"
                cellspacing="0" border="0">
                  <tr>
                    <td width="15%"><font size="-1"><b>Domain</b></font></td>

                    <td width="40%" nowrap="nowrap"><font size="-1"><select
                    name="as_dt">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_dt') and (@value='i')]">
                          <option value="i" selected="selected">Only</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="i">Only</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_dt') and (@value='e')]">
                          <option value="e" selected="selected">Don't</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="e">Don't</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select>return results from the site or domain</font></td>

                    <td>
                      <table cellpadding="0" cellspacing="0"
                      border="0">
                        <tr>
                          <td>
                            <xsl:choose>
                              <xsl:when test="PARAM[@name='as_sitesearch']">
                                <input type="text" size="25"
                                value="{PARAM[@name='as_sitesearch']/@value}"
                                name="as_sitesearch" />
                              </xsl:when>
                              <xsl:otherwise>
                                <input type="text" size="25" value="" name="as_sitesearch" />
                              </xsl:otherwise>
                            </xsl:choose>
                          </td>
                        </tr>

                        <tr>
                          <td valign="top" nowrap="nowrap"><font size="-1">
                            <i>e.g. google.com, .org</i></font></td>
                        </tr>
                      </table>
                    </td>
                  </tr>

                  <!-- Sort by Date feature -->
                  <tr>
                    <td width="15%"><font size="-1"><b>Sort</b></font></td>

                    <td colspan="2" nowrap="nowrap"><font size="-1"><select
                    name="sort">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='sort') and (@value='')]">
                          <option value="" selected="selected">Sort by relevance</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="">Sort by relevance</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='sort') and (@value='date:D:S:d1')]">
                          <option value="date:D:S:d1" selected="selected">Sort by date</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="date:D:S:d1">Sort by date</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select></font></td>
                  </tr>
                  <!-- Secure Search feature -->
                  <xsl:if test="$show_secure_radio != '0'">

                  <tr>
                    <td width="15%"><font size="-1"><b>Security</b></font></td>

                    <td colspan="2" nowrap="nowrap"><font size="-1">
                      <xsl:choose>
                        <xsl:when test="$access='p'">
                          <label><input type="radio" name="access" value="p" checked="checked" />Search public content only</label>
                        </xsl:when>
                      <xsl:otherwise>
                        <label><input type="radio" name="access" value="p"/>Search public content only</label>
                      </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$access='a'">
                          <label><input type="radio" name="access" value="a" checked="checked" />Search public and secure content (login required)</label>
                        </xsl:when>
                      <xsl:otherwise>
                        <label><input type="radio" name="access" value="a"/>Search public and secure content (login required)</label>
                      </xsl:otherwise>
                      </xsl:choose>
                    </font></td>
                  </tr>
                  </xsl:if>
                </table>
              </td>
            </tr>

          </table>
        </td>
      </tr>
    </table>
    <br />
    <br />

    <!--====Page-Specific Search======-->
    <div id="page-specific-search-div">
      <b>Page-Specific Search</b>
    </div>
    <table cellspacing="0" cellpadding="3" border="0" width="100%">
      <tr bgcolor="{$adv_search_panel_bgcolor}">
        <td>
          <table width="100%" cellpadding="0" cellspacing="0"
          border="0">
            <tr bgcolor="{$adv_search_panel_bgcolor}">
              <td>

                <table width="100%" cellpadding="2"
                cellspacing="0" border="0">
                <form method="get" action="search" name="h">

                  <tr bgcolor="{$global_bg_color}">
                    <td width="15%"><font size="-1"><b>Links</b></font></td>

                    <td width="40%" nowrap="nowrap"><font size="-1">Find pages that link to the page</font> </td>

                    <td nowrap="nowrap">
                        <xsl:choose>
                          <xsl:when test="PARAM[@name='as_lq']">
                            <input type="text" size="30"
                             value="{PARAM[@name='as_lq']/@value}"
                                     name="as_lq" />
                        </xsl:when>
                        <xsl:otherwise>
                          <input type="text" size="30" value="" name="as_lq" />
                        </xsl:otherwise>
                      </xsl:choose>
                      <font size="-1">
                      <input type="submit" name="btnG" value="{$search_button_text}" /></font>
                    </td>
                  </tr>
                </form>
                </table>
              </td>
            </tr>
          </table>
        </td>
      </tr>
    </table>

    <xsl:call-template name="copyright"/>

  </form>

  <!-- *** Customer's own advanced search page footer *** -->
</div>
<xsl:call-template name="footer_element"/>
<!-- *** Customer's own advanced search page header *** -->
  <xsl:if test="$choose_adv_search_page_header = 'mine' or
                  $choose_adv_search_page_header = 'both'">
	<xsl:call-template name="main_content_wrapper_end"/>
  </xsl:if>
</div>
</body>
</html>
</xsl:template>

<!-- **********************************************************************
Resend query with filter=p to disable path_filtering
if there is only one result cluster (do not customize)
   ********************************************************************** -->
<xsl:template name="redirect_if_few_results">
<xsl:variable name="count" select="count(/GSP/RES/R)"/>
<xsl:variable name="start" select="/GSP/RES/@SN"/>
<xsl:variable name="filterall"
  select="count(/GSP/PARAM[@name='filter']) = 0"/>
<xsl:variable name="filter" select="/GSP/PARAM[@name='filter']/@value"/>

</xsl:template>

<!-- **********************************************************************
Google Apps search results (do not customize)
   ********************************************************************** -->
<xsl:template name="apps_only_search_results">
<html>
	<xsl:attribute name="class">
	<xsl:value-of select="$skin_class"/>
	</xsl:attribute>
<script>
  <xsl:comment>
    /**
     * Initializes the Google Apps results section by notifying the parent
     * document containing the iframe container. The results are passed to
     * the parent iframe container so that it can display the same in the
     * 'div' section reserved for Google Apps results section.
     */
    function initGoogleApps() {
      <xsl:choose>
        <xsl:when test="RES/R">
          var isNextRes = '<xsl:value-of select="/GSP/RES/NB/NU" />';
          var isPrevRes = '<xsl:value-of select="/GSP/RES/NB/PU" />';
          var topNavHtml =
              document.getElementById('top-navigation-html').innerHTML;
          var btmNavHtml =
              document.getElementById('bottom-navigation-html').innerHTML;
          var btmSearchBoxHtml =
              document.getElementById('bottom-search-box-html').innerHTML;
          var resultsDiv = document.getElementById('apps-results-container');
          var resultsContent = resultsDiv.innerHTML;
          resultsDiv.innerHTML = '';
          window.parent.displayGoogleAppsResults(
              true, resultsContent, isNextRes, isPrevRes, topNavHtml,
              btmNavHtml, btmSearchBoxHtml);
        </xsl:when>
        <xsl:otherwise>
          window.parent.displayGoogleAppsResults(false);
        </xsl:otherwise>
      </xsl:choose>
    }
  </xsl:comment>
</script>
<xsl:variable name="only_apps_onload">
  <xsl:if test="not(/GSP/PARAM[(@name='only_apps_deb') and (@value='1')])">
    <xsl:text disable-output-escaping="yes">initGoogleApps();</xsl:text>
  </xsl:if>
</xsl:variable>
<body onload="{$only_apps_onload}">
	<xsl:attribute name="class">
	<xsl:value-of select="'clearfix'"/>
	<xsl:text>&#160;</xsl:text>
	<xsl:value-of select="$skin_class"/>
	</xsl:attribute>
<div id="container" class="schoolpage">
<div id="apps-results-container main-content">
  <div>
    <div class="sb-r-lbl-apps">Google Apps</div>
    <div>
      <xsl:apply-templates select="RES/R">
        <xsl:with-param name="query" select="Q"/>
      </xsl:apply-templates>

      <xsl:if test="RES/R">
        <div style="display: none;" id="top-navigation-html">
          <xsl:if test="$show_top_navigation != '0'">
            <xsl:call-template name="gen_top_navigation" />
          </xsl:if>
        </div>

        <div style="display: none;" id="bottom-navigation-html">
          <xsl:call-template name="gen_bottom_navigation" />
        </div>

        <div style="display: none;" id="bottom-search-box-html">
          <xsl:if test="$show_bottom_search_box != '0' and RES">
            <xsl:call-template name="bottom_search_box"/>
          </xsl:if>
        </div>
      </xsl:if>
    </div>
  </div>
</div>
</div>
</body>
</html>
</xsl:template>

<!-- **********************************************************************
Search results (do not customize)
   ********************************************************************** -->
<xsl:template name="search_results">
<xsl:call-template name="doc_type"/>
<xsl:if test="$is_embedded_mode != '1'">
<xsl:text disable-output-escaping="yes">&lt;html class=&quot;</xsl:text><xsl:value-of select="$skin_class"/><xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
</xsl:if>

<!-- *** HTML header and style *** -->
<xsl:call-template name="langHeadStart"/>
<xsl:variable name="res_count" select="count(/GSP/RES/R)"/>
  <xsl:call-template name="redirect_if_few_results"/>
  <xsl:choose>
    <xsl:when test="$res_count &gt; 0">
       <title><xsl:value-of select="$result_page_title"/>:
        <xsl:value-of select="$space_normalized_query"/>
      </title>
    </xsl:when>
    <xsl:otherwise>
      <title><xsl:value-of select="$front_page_title"/>:
        <xsl:value-of select="$space_normalized_query"/>
      </title>
    </xsl:otherwise>
  </xsl:choose> 
  <xsl:call-template name="style"/>
  <xsl:choose>
    <xsl:when test="$render_dynamic_navigation = '1' and $show_translation = '1'">
      <script type="text/javascript"
          src="{$gsa_resource_root_path_prefix}/all_js_compiled.js"></script>
    </xsl:when>
    <xsl:when test="$render_dynamic_navigation = '1'">
      <script type="text/javascript"
          src="{$gsa_resource_root_path_prefix}/dyn_nav_compiled.js"></script>
    </xsl:when>
  </xsl:choose>

  <xsl:if test="$render_dynamic_navigation = '1'">
    <script type="text/javascript">
      <xsl:variable name="dnavs_param">
        <xsl:if test="/GSP/PARAM[@name='dnavs']"><xsl:value-of
            select="/GSP/PARAM[@name='dnavs']/@original_value"/></xsl:if>
      </xsl:variable>
      var dynNavMgr = new gsa.search.DynNavManager(
        "<xsl:value-of select="$dnavs_param"/>",
        "<xsl:value-of select="/GSP/PARAM[@name='q']/@original_value"/>",
        "<xsl:value-of select='$original_q'/>",
        "<xsl:value-of select='$no_q_dnavs_params_escaped'/>",
        <xsl:value-of select='/GSP/RES/PARM/PC'/>
      );
    </script>
  </xsl:if>
  <script type="text/javascript">
    <xsl:comment>
      <xsl:if test="$show_sidebar = '1'">
        var LEFT_SIDE_RES_CONTAINER = 'left-side-container';
        var LEFT_BORDER_STYLE = 'sb-r-border';

        /** Container element to hold the sidebar. */
        var SIDEBAR_CONTAINER = 'sidebar-container';
        /** Element for holding all sidebar elements. */
        var SIDEBAR = 'sidebar';
        /** Total elements that should be displayed in the sidebar. */
        var totalSidebarEleToDisplay = 0;
        /** Count of sidebar element(s) that has no results after search. */
        var noResultsFromEleCount = 0;

        /**
         * Initializes the sidebar by loading the appropriate sidebar
         * elements.
         */
        function initSidebar() {
          document.getElementById(SIDEBAR).className = '';
          if (!isLeftResultPresent()) {
            var sidebarContainer = document.getElementById(SIDEBAR_CONTAINER);
            document.getElementById(
                LEFT_SIDE_RES_CONTAINER).style.display = 'none';
            sidebarContainer.className = 'sb-r-alt';
          }
          <xsl:if test="$show_people_search = '1'">
            totalSidebarEleToDisplay++;
          </xsl:if>
          <xsl:if test="$show_apps_segmented_ui = '1'">
            totalSidebarEleToDisplay++;
          </xsl:if>
          <xsl:if test="$show_gss_results = '1'">
            totalSidebarEleToDisplay++;
          </xsl:if>
          // Expert Search - count expert search component as sidebar element.
          <xsl:if test="$is_expert_search_configured = '1'">
            totalSidebarEleToDisplay++;
          </xsl:if>
          // Now bootstrap the actual loading.
          <xsl:if test="$show_people_search = '1'">
            loadPeopleSearchResults();
          </xsl:if>
          <xsl:if test="$show_apps_segmented_ui = '1'">
            loadGoogleAppsResults();
          </xsl:if>
          <xsl:if test="$show_gss_results = '1'">
            loadGssResults();
          </xsl:if>
          // Expert Search - initialize the expert search JS component.
          <xsl:call-template name="include_expert_search_js_init">
            <xsl:with-param name="dom_container"
                select="'exp-results-container'" />
            <xsl:with-param name="script_import" select="'0'" />
          </xsl:call-template>
        }

        /**
         * Notifies that the caller sidebar element is not having results to
         * display.
         */
        function notifyNoResults() {
          noResultsFromEleCount++;
          if (noResultsFromEleCount == totalSidebarEleToDisplay) {
            if (!isLeftResultPresent()) {
              var sidebarContainer =
                  document.getElementById(SIDEBAR_CONTAINER);
              sidebarContainer.style.display = 'none';
              document.getElementById('no-results').style.display = '';
              return true;
            }
          }
          return false;
        }

        /**
         * Notifies that the caller sidebar element is having results to
         * display.
         */
        function notifyResultsPresent() {
          var sidebar = document.getElementById(SIDEBAR);
          if (isLeftResultPresent() &amp;&amp;
              sidebar.className != LEFT_BORDER_STYLE) {
            document.getElementById(SIDEBAR).className = LEFT_BORDER_STYLE;
          }
        }

        /**
         * Checks if the organic results on the left side are present or not.
         */
        function isLeftResultPresent() {
          var leftResContainer = document.getElementById(
              LEFT_SIDE_RES_CONTAINER).getElementsByTagName('div')[0];
          return leftResContainer.childNodes.length != 0 ? true : false;
        }
      </xsl:if>
      <xsl:if test="$show_apps_segmented_ui = '1'">
        var APPS_LOADING_MSG = 'loading-app-results';
        var APPS_RESULTS_CONTAINER = 'apps-results-container';
        var APPS_RESULTS_IFRAME = 'apps-results-iframe';
        var APPS_RESULTS_MSG_CONTAINER = 'apps-results-msg';
        var APPS_RESULTS_SECTION = 'apps-results-section';
        var BOTTOM_SEARCH_BOX = 'bottom-search-box';
        var NEXT_RESULTS_IN_NON_APPS =
            '<xsl:value-of select="/GSP/RES/NB/NU" />';
        var ONLY_APPS_QUERY_PARAM = 'only_apps=1';
        var PREV_RESULTS_IN_NON_APPS =
            '<xsl:value-of select="/GSP/RES/NB/PU" />';

        /**
         * Displays Google Apps results returned from the iframe inside the
         * reserved div. This function is called during the onload event
         * processing of iframe.
         */
        function displayGoogleAppsResults(
            display, opt_resultsContent, opt_isNextRes, opt_isPrevRes,
            opt_topNavHtml, opt_btmNavHtml, opt_btmSearchBoxHtml) {
          document.getElementById(APPS_LOADING_MSG).style.display = 'none';
          if (!display) {
            notifyNoResults();
            return;
          }
          notifyResultsPresent();

          // Replace the existing top/bottom navigation bar if Google Apps
          // is having more results and left side container is having
          // no more results.
          if (!NEXT_RESULTS_IN_NON_APPS &amp;&amp; opt_isNextRes ||
              !PREV_RESULTS_IN_NON_APPS &amp;&amp; opt_isPrevRes) {
            document.getElementById('top-navigation').innerHTML =
                opt_topNavHtml;
            document.getElementById('bottom-navigation').innerHTML =
                opt_btmNavHtml;
          }

          var resultsDiv = document.getElementById(APPS_RESULTS_SECTION);
          resultsDiv.innerHTML = opt_resultsContent;
          resultsDiv.style.display = '';
          if (!isLeftResultPresent()) {
            document.getElementById(BOTTOM_SEARCH_BOX).innerHTML =
                opt_btmSearchBoxHtml;
          }
        }

        /**
         * Loads the Google Apps results if 'exclude_apps' query parameter has
         * been set to '1'. Loading of Google Apps results is done by fetching
         * the results through the hidden iframe 'apps-results-iframe' and
         * setting the returned HTML response in the reserved div
         * 'apps-results-section'.
         */
        function loadGoogleAppsResults() {
          var excludeApps = document.getElementsByName('exclude_apps')[0];
          if (excludeApps.value == '1') {
            var resultsDiv = document.getElementById(APPS_RESULTS_SECTION);
            resultsDiv.style.display = 'none';
            document.getElementById(APPS_LOADING_MSG).style.display = '';
            var appsResContainer =
                document.getElementById(APPS_RESULTS_CONTAINER);
            appsResContainer.style.visibility = 'visible';

            // Compose the URL to be loaded in the Google Apps iframe.
            var url = window.location.href;
            if (url.indexOf('exclude_apps=') > -1) {
              url = url.replace(/exclude_apps=./i, ONLY_APPS_QUERY_PARAM);
            } else {
              url += '&amp;' + ONLY_APPS_QUERY_PARAM;
            }

            document.getElementById(APPS_RESULTS_IFRAME).src = url;
          }
        }
      </xsl:if>
      <xsl:if test="$show_gss_results = '1'">
        var GSS_LOADING_MSG = 'loading-gss-results';
        var GSS_RESULTS_MSG_CONTAINER = 'gss-results-msg';
        var GSS_RESULTS_SECTION = 'gss-results-section';
        
        /**
         * Loads the Google Site Search results if it's enabled.
         */
        function loadGssResults() {
          document.getElementById(GSS_LOADING_MSG).style.display = '';
          if (!GSS_JS_API_LOADED) {
            setTimeout('loadGssResults()', 500);
            return;
          }
          var gssControl = new google.search.CustomSearchControl(
              '<xsl:value-of select="$gss_search_engine_id" />');
          gssControl.setResultSetSize(google.search.Search.SMALL_RESULTSET);
          gssControl.setSearchCompleteCallback(this, gssSearchComplete);
          // Set drawing options to use our hidden input box.
          var drawOptions = new google.search.DrawOptions();
          drawOptions.setInput(document.getElementById('gss-hidden-input'));
          gssControl.draw('gss-results-section', drawOptions);
          gssControl.execute('<xsl:value-of select="Q" />');
        }
        
        /**
         * Enables/disables GSS results view based on whether results were
         * returned from GSS or not. This is a callback function that is
         * invoked post receiving response from GSS.
         */
        function gssSearchComplete(searchControl, searcher) {
          document.getElementById(GSS_LOADING_MSG).style.display = 'none';
          if (!searcher.results.length) {
            notifyNoResults();
            return;
          }
          notifyResultsPresent();
          document.getElementById(GSS_RESULTS_SECTION).style.display = '';
          document.getElementById(
              GSS_RESULTS_MSG_CONTAINER).style.display = '';
        }
      </xsl:if>
      <xsl:if test="$show_people_search = '1'">
        var PS_RESULTS_MSG_CONTAINER = 'ps-results-msg';
        var PS_RESULTS_SECTION = 'ps-results-section';
        var PS_LOADING_MSG = 'loading-ps-results';
        var PS_CONTENT_ID = 'people-search-ele';

        /**
         * Loads the people search results if it's enabled.
         */
        function loadPeopleSearchResults() {
          var psEle = document.getElementById(PS_CONTENT_ID);
          if (!psEle) {
            notifyNoResults();
            return;
          }
          notifyResultsPresent();
          psEle.parentNode.removeChild(psEle);
          document.getElementById(
              PS_RESULTS_MSG_CONTAINER).style.display = '';
          var psRes = document.getElementById(PS_RESULTS_SECTION);
          psRes.appendChild(psEle);
          psEle.style.display = '';
          psRes.style.display = '';
        }
      </xsl:if>

      function resetForms() {
        for (var i = 0; i &lt; document.forms.length; i++ ) {
            document.forms[i].reset();
        }
      }

      /**
       * Converts file links from encoded UTF-8 to Unicode, so that Internet
       * Explorer can follow the links correctly
       */
      function fixFileLinks() {
        for (var l = 0; l &lt; document.links.length; ++l) {
          var link = document.links[l];
          if (link.href.indexOf("file://") != 0) {
            continue;
          }

          var s = unescape(link.href);
          var result = "";
          for (var i = 0; i &lt; s.length; ++i) {
            var c = s.charCodeAt(i);
            if (c &gt;&gt; 4 == 12 || c &gt;&gt; 4 == 13) {
              c = ((c &amp; 0x1F) &lt;&lt; 6)
                  + (s.charCodeAt(++i) &amp; 0x3F);
            } else if (c >> 4 == 14) {
              c = ((c &amp; 0x0F) &lt;&lt; 12)
                  + ((s.charCodeAt(++i) &amp; 0x3F) &lt;&lt; 6)
                  + (s.charCodeAt(++i) &amp; 0x3F);
            } else if (c >> 4 == 15) {
              c = ((c &amp; 0x07) &lt;&lt; 18)
                  + ((s.charCodeAt(++i) &amp; 0x3F) &lt;&lt; 12)
                  + ((s.charCodeAt(++i) &amp; 0x3F) &lt;&lt; 6)
                  + (s.charCodeAt(++i) &amp; 0x3F);
            }
            result += String.fromCharCode(c);
          }
          link.href = result;
        }
      }

      // Search query
      var page_query = &quot;<xsl:value-of select="$stripped_sanitized_search_query"/>&quot;
      // Starting page offset, usually 0 for 1st page, 10 for 2nd, 20 for 3rd.
      var page_start = &quot;<xsl:value-of select="/GSP/PARAM[@name='start']/@value"/>&quot;
      // Front end that served the page.
      var page_site = &quot;<xsl:value-of select="/GSP/PARAM[@name='site']/@value"/>&quot;
      //</xsl:comment>
  </script>
<xsl:call-template name="populate_uar_i18n_array"/>
<xsl:call-template name="langHeadEnd"/>
<xsl:call-template name="generate_html_body_for_search_results"/>
<xsl:if test="$is_embedded_mode != '1'">
<xsl:text disable-output-escaping="yes">&lt;/html&gt;</xsl:text>
</xsl:if>
</xsl:template>

<xsl:template name="search_results_body">
<xsl:call-template name="personalization"/>
<xsl:call-template name="analytics"/>

<!-- Send across form parameters that's used in the GSA search form, if we are
     running in embedded mode. This will be transformed to a hidden form in
     the embedding container page and used with the suggest feature. -->
<xsl:if test="$show_suggest = '1' and $is_embedded_mode = '1'">
  <div id="gsaembedmodeformparams" style="display: none;">
    <input type="hidden" name="q" class="q" value="" />
    <xsl:call-template name="form_params" />
  </div>
</xsl:if>

<!-- *** Result page header *** -->
<xsl:if test="$choose_result_page_header = 'provided' or
              $choose_result_page_header = 'both'">
  <xsl:call-template name="result_page_header" />
</xsl:if>

<!-- *** Top separation bar *** -->
  <xsl:if test="Q != ''">
    <xsl:call-template name="top_sep_bar">
      <xsl:with-param name="text" select="$sep_bar_std_text"/>
        <xsl:with-param name="show_info" select="$show_search_info"/>
      <xsl:with-param name="time" select="TM"/>
    </xsl:call-template>
  </xsl:if>

  <!-- *** Handle results (if any) *** -->
  <xsl:choose>
    <!-- Always allow calling results template when sidebar is enabled. -->
    <xsl:when test="$show_sidebar = '1'">
      <xsl:call-template name="results">
        <xsl:with-param name="query" select="Q"/>
        <xsl:with-param name="time" select="TM"/>
      </xsl:call-template>

      <!-- Generates the no results message container. Display this container
           when there are no results on both left side organic results
           container and sidebar. -->
      <div id="no-results" style="display: none;">
        <xsl:call-template name="no_RES">
          <xsl:with-param name="query" select="Q"/>
        </xsl:call-template>
      </div>
    </xsl:when>
    <xsl:when test="RES or GM or Spelling or Synonyms or CT or
                    (ENTOBRESULTS and
                     not(count(ENTOBRESULTS/OBRES) = 1
                         and ENTOBRESULTS/OBRES/provider = $uar_provider
                         and ENTOBRESULTS/OBRES/count = 0))">
      <xsl:call-template name="results">
        <xsl:with-param name="query" select="Q"/>
        <xsl:with-param name="time" select="TM"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:when test="Q=''">
    </xsl:when>
    <xsl:otherwise>
      <xsl:call-template name="no_RES">
        <xsl:with-param name="query" select="Q"/>
      </xsl:call-template>
    </xsl:otherwise>
  </xsl:choose>

  <!-- *** UAR v2, Expert Search - Add the i18n messages required by the
           UI components. *** -->
  <xsl:if test="(
    $show_onebox != '0' and /GSP/ENTOBRESULTS/OBRES/provider = $uar_provider)
    or $is_expert_search_configured = '1'">
    <xsl:call-template
        name="include_localized_messages_for_uar_expert_search"/>
  </xsl:if>

  <!-- *** UAR v2 - Load the UAR UI component. We make sure that this
           template is called at the end after the results are rendered
           so that UAR onebox data is available for the UI component. *** -->
<!-- Hide UAR since we only want it to add entries to suggestions -->
<!--
           <xsl:if test="$show_onebox != '0'">
    <xsl:if test="/GSP/ENTOBRESULTS/OBRES/provider = $uar_provider">
      <xsl:call-template name="include_uar_ui_component"/>
    </xsl:if>
  </xsl:if>
-->

  <!-- *** Expert Search - include expert search UI JS component. -->
  <xsl:call-template name="include_expert_search_js">
    <xsl:with-param name="src_prefix"
        select="$gsa_resource_root_path_prefix" />
  </xsl:call-template>

  <!-- *** Google footer *** -->
  <xsl:call-template name="copyright"/>

  <xsl:if test="$show_asr != '0'">
    <script type="text/javascript"
        src="{$gsa_resource_root_path_prefix}/clicklog_compiled.js"></script>
  </xsl:if>

  <xsl:if test="$render_dynamic_navigation = '1'">
    <script type="text/javascript">
      dynNavMgr.init();
    </script>
  </xsl:if>

  <!-- *** HTML footer *** -->
</xsl:template>


<!-- **********************************************************************
Collection menu beside the search box
   ********************************************************************** -->
<xsl:template name="collection_menu">
<xsl:if test="$search_collections_xslt != ''">
  <td valign="middle">
      
<select name="site">
<xsl:choose>
<xsl:when test="PARAM[(@name='site') and (@value='default_collection')]">
 <option value="default_collection" selected="selected">default_collection</option>
</xsl:when>
<xsl:otherwise>
 <option value="default_collection">default_collection</option>
</xsl:otherwise>
</xsl:choose>
<xsl:choose>
<xsl:when test="PARAM[(@name='site') and (@value='file_system')]">
 <option value="file_system" selected="selected">file_system</option>
</xsl:when>
<xsl:otherwise>
 <option value="file_system">file_system</option>
</xsl:otherwise>
</xsl:choose>
</select>

  </td>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Search box input form (Types: std_top, std_bottom, home, swr)
   ********************************************************************** -->
<xsl:template name="search_box">
<xsl:param name="type"/>

<xsl:if test="$is_embedded_mode != '1'">
<xsl:choose>
<xsl:when test="$show_suggest = '1' and (($type = 'home') or ($type = 'std_top'))">
<xsl:text disable-output-escaping="yes">&lt;form id="suggestion_form" name="gs" method="GET" action="search" onsubmit="return (this.q.value == '') ? false : true;"&gt;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text disable-output-escaping="yes">&lt;form name="gs" method="GET" action="search" onsubmit="return (this.q.value == '') ? false : true;"&gt;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:if>
      <div id="search_box_div">
        <xsl:if test="($egds_show_search_tabs != '0') and (($type = 'home') or ($type = 'std_top'))">
              <div id="desktop_tab_div">
                <xsl:call-template name="desktop_tab"/>  
              </div>
        </xsl:if>
        <xsl:if test="($type = 'swr')">
          <div id="swr_div">
                <xsl:variable name="est_result" select="/GSP/RES/M" />
                <xsl:if test="($est_result != '') and ($est_result > 0)">
                There were about <b><xsl:value-of select="RES/M"/></b> results for <b><xsl:value-of select="$space_normalized_query"/></b>.
                  <br/>
                </xsl:if>
                Use the search box below to search within these results.
          </div>
        </xsl:if>
              <xsl:choose>
                <xsl:when test="($type = 'swr')">
                  <input type="text" name="as_q" size="{$search_box_size}" maxlength="256" value="" class="search-box"/>
                  <input type="hidden" name="q" class="q" value="{$qval}"/>
                  <xsl:choose>
                      <xsl:when test="$choose_search_button = 'image'">
                                <input type="image" name="btnG" src="{$search_button_image_url}"
                               valign="bottom" width="60" height="26"
                               border="0" value="{$search_button_text}"/>
                      </xsl:when>
                    <xsl:otherwise>
                      <input type="submit" name="btnG" value="{$search_button_text}"/>
                    </xsl:otherwise>
                    </xsl:choose>   
                </xsl:when>
                <xsl:when test="$show_suggest = '1' and (($type = 'home') or ($type = 'std_top'))">
                  <div id="query_suggestions_div">
                    <input type="text" placeholder="{$q_input_placeholder_text}" name="q" class="q search-box" size="{$search_box_size}" maxlength="256" value="{$space_normalized_query}" autocomplete="off" />
                  <xsl:choose>
                      <xsl:when test="$choose_search_button = 'image'">
                                <input type="image" name="btnG" src="{$search_button_image_url}"
                               valign="bottom" width="60" height="26"
                               border="0" value="{$search_button_text}" class="glass"/>
                      </xsl:when>
                    <xsl:otherwise>
                      <input type="submit" name="btnG" value="{$search_button_text}"/>
                    </xsl:otherwise>
                    </xsl:choose>  
                  </div>
                </xsl:when>
                <xsl:otherwise>
                  <input type="text" placeholder="{$q_input_placeholder_text}" name="q" class="q search-box" size="{$search_box_size}" maxlength="256" value="{$space_normalized_query}"/>
                </xsl:otherwise>
              </xsl:choose>
        <br/>
        <div class="access-container">
            <xsl:if test="$show_secure_radio != '0'">
                <span class="access-type">
                  <xsl:choose>
                    <xsl:when test="$access='p'">
                      <label><input type="radio" name="access" value="p" checked="checked" />Public Content</label>
                    </xsl:when>
                    <xsl:otherwise>
                      <label><input type="radio" name="access" value="p"/>Public Content</label>
                    </xsl:otherwise>
                  </xsl:choose>
                  <xsl:choose>
                    <xsl:when test="$access='a'">
                      <label><input type="radio" name="access" value="a" checked="checked" />Public and Secure Content</label>
                    </xsl:when>
                    <xsl:otherwise>
                      <label><input type="radio" name="access" value="a"/>Public and Secure Content</label>
                    </xsl:otherwise>
                  </xsl:choose>
                </span>
            </xsl:if>
        </div>
		</div>
            <xsl:call-template name="form_params"/>
            <xsl:if test="$is_embedded_mode != '1'">
            <xsl:text disable-output-escaping="yes">&lt;/form&gt;</xsl:text>
            </xsl:if>
      </xsl:template>

<!-- **********************************************************************
Bottom search box (do not customized)
   ********************************************************************** -->
<xsl:template name="bottom_search_box">
  <br clear="all"/>
  <br/>
  <div class="bottom-search-box">
    <center><br/>
    <xsl:call-template name="search_box">
    <xsl:with-param name="type" select="'std_bottom'"/>
    </xsl:call-template>
    <br/></center>
  </div>
</xsl:template>


<!-- **********************************************************************
Sort-by criteria: sort by date/relevance
   ********************************************************************** -->
<xsl:template name="sort_by">
<xsl:variable name="sort_by_url"><xsl:for-each
  select="/GSP/PARAM[(@name != 'sort') and
                     (@name != $embedded_mode_root_path_param) and
                     (@name != $embedded_mode_resource_root_path_param) and
                     (@name != $embedded_mode_disable_style) and
                     (@name != 'start') and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
    <xsl:choose>
      <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
        <!-- do nothing to remove 'ip' from the URL -->
      </xsl:when>
      <xsl:when test="@name = 'only_apps' and $show_apps_segmented_ui = '1'">
        <xsl:value-of select="'exclude_apps=1'" />
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
        <xsl:value-of select="@original_value"/>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="position() != last()">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
  </xsl:for-each>
</xsl:variable>

<xsl:variable name="sort_by_relevance_url">
  <xsl:value-of select="$sort_by_url"
    />&amp;sort=date%3AD%3AL%3Ad1</xsl:variable>

<xsl:variable name="sort_by_date_url">
  <xsl:value-of select="$sort_by_url"
    />&amp;sort=date%3AD%3AS%3Ad1</xsl:variable>
<div id="sort_by_div" class="sort-by">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[@name = 'sort' and starts-with(@value,'date:D:S')]">
    <span class="sort-selected">
    <xsl:text>Sort by date / </xsl:text>
    </span>
    <a ctype="sort"
        href="{$gsa_search_root_path_prefix}?{$sort_by_relevance_url}">Sort by relevance</a>
  </xsl:when>
  <xsl:when test="/GSP/PARAM[@name = 'sort' and starts-with(@value,'date:A:S')]">
  	<span class="sort-selected">	
    <xsl:text>Sort by date / </xsl:text>
    </span>
    <a ctype="sort"
        href="{$gsa_search_root_path_prefix}?{$sort_by_relevance_url}">Sort by relevance</a>
  </xsl:when>
  <xsl:otherwise>
    <a ctype="sort"
        href="{$gsa_search_root_path_prefix}?{$sort_by_date_url}">Sort by date</a>
    <span class="sort-selected">
    <xsl:text> / Sort by relevance</xsl:text>
    </span>
  </xsl:otherwise>
</xsl:choose>
</div>
</xsl:template>

<xsl:template name="cluster_results">
<div id='clustering'>
  <h2>Narrow your search</h2>

  <span id='cluster_status'>
    <span id='cluster_message' style="display:none">loading...</span>
    <noscript>
      javascript must be enabled for narrowing.
    </noscript>
  </span>

  <xsl:choose>
    <xsl:when test="$res_cluster_position = 'top'">
      <div id="results_cluster_div" class="wrapper">
        <div id="results_cluster_top_div_col1" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label0"></li>
            <li id="cluster_label3"></li>
            <li id="cluster_label6"></li>
            <li id="cluster_label9"></li>
          </ul>
        </div>
        <div id="results_cluster_top_div_col2" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label1"></li>
            <li id="cluster_label4"></li>
            <li id="cluster_label7"></li>
          </ul>
        </div>
        <div id="results_cluster_top_div_col3" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label2"></li>
            <li id="cluster_label5"></li>
            <li id="cluster_label8"></li>
          </ul>
        </div>  
      </div>
    </xsl:when>
    <xsl:when test="$res_cluster_position = 'bottom'">
      <div id="results_cluster_div" class="wrapper">
        <div id="results_cluster_top_div_col1" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label0"></li>
            <li id="cluster_label2"></li>
            <li id="cluster_label4"></li>
            <li id="cluster_label6"></li>
            <li id="cluster_label8"></li>
          </ul>
        </div>
        <div id="results_cluster_top_div_col2" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label1"></li>
            <li id="cluster_label3"></li>
            <li id="cluster_label5"></li>
            <li id="cluster_label7"></li>
            <li id="cluster_label9"></li>
          </ul>
        </div>
      </div>
    </xsl:when>
    <xsl:when test="$res_cluster_position = 'right'">
      <ul class="cluster_list cluster-ul">
        <li id='cluster_label0'></li>
        <li id='cluster_label1'></li>
        <li id='cluster_label2'></li>
        <li id='cluster_label3'></li>
        <li id='cluster_label4'></li>
        <li id='cluster_label5'></li>
        <li id='cluster_label6'></li>
        <li id='cluster_label7'></li>
        <li id='cluster_label8'></li>
        <li id='cluster_label9'></li>
      </ul>
    </xsl:when>
  </xsl:choose>
</div>
</xsl:template>

<!-- Generates search results navigation bar to be placed at the top. -->
<xsl:template name="gen_top_navigation">
<xsl:if test="RES">
  <div class="wrapper">
    <div>
      <xsl:if test="$show_top_navigation != '0'">
        <td align="left">
          <xsl:call-template name="google_navigation">
            <xsl:with-param name="prev" select="RES/NB/PU"/>
            <xsl:with-param name="next" select="RES/NB/NU"/>
            <xsl:with-param name="view_begin" select="RES/@SN"/>
            <xsl:with-param name="view_end" select="RES/@EN"/>
            <xsl:with-param name="guess" select="RES/M"/>
            <xsl:with-param name="navigation_style" select="'top'"/>
          </xsl:call-template>
        </td>
      </xsl:if>
<!-- Removed by Vinay in scu2_frontend.xsl: not sure why -->
<!--      
      <xsl:if test="$show_sort_by != '0'">
        <td align="right">
          <xsl:call-template name="sort_by"/>
        </td>
      </xsl:if>
-->      
    </div>
  </div>
</xsl:if>
</xsl:template>

<!-- Generates search results navigation bar to be placed at the bottom. -->
<xsl:template name="gen_bottom_navigation">
<xsl:if test="RES">
  <xsl:variable name="nav_style">
    <xsl:choose>
      <xsl:when test="($access='s') or ($access='a')"><xsl:value-of select="$secure_bottom_navigation_type"/></xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$choose_bottom_navigation"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <xsl:call-template name="google_navigation">
    <xsl:with-param name="prev" select="RES/NB/PU"/>
    <xsl:with-param name="next" select="RES/NB/NU"/>
    <xsl:with-param name="view_begin" select="RES/@SN"/>
    <xsl:with-param name="view_end" select="RES/@EN"/>
    <xsl:with-param name="guess" select="RES/M"/>
    <xsl:with-param name="navigation_style" select="$nav_style"/>
  </xsl:call-template>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Output all results
   ********************************************************************** -->
<xsl:template name="results">
<xsl:param name="query"/>
<xsl:param name="time"/>

<xsl:choose>
  <xsl:when test="$render_dynamic_navigation = '1'">
    <xsl:call-template name="dynamic_navigation_results">
      <xsl:with-param name="query" select="$query"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <!-- *** Add top navigation/sort-by bar *** -->
    <xsl:if test="$show_top_navigation != '0' or $show_sort_by != '0'">
      <!-- there might be onebox results but no RES  -->
      <xsl:if test="RES or $show_sidebar = '1'">
        <div id="top-navigation">
          <xsl:call-template name="gen_top_navigation" />
        </div>
      </xsl:if>
    </xsl:if>

    <!-- *** Handle OneBox results, if any ***-->
    <xsl:if test="$show_onebox != '0' and count(/GSP/ENTOBRESULTS) &gt; 0 and $show_sidebar != '1'">
      <input type="hidden" name="oneboxloc" value="3909" />
      <xsl:call-template name="onebox"/>

    <script>
    <xsl:comment>
      if (window['populateUarMessages']) {
        populateUarMessages();
      }
    //</xsl:comment>
    </script>
    </xsl:if>

    <!-- *** handle spelling suggestions, if any *** -->
    <xsl:if test="$show_spelling != '0'">
      <xsl:call-template name="spelling"/>
    </xsl:if>

    <!-- *** handle synonyms, if any *** -->
    <xsl:if test="$show_synonyms != '0'">
      <xsl:call-template name="synonyms"/>
    </xsl:if>

    <!-- *** output google desktop results (if enabled and any available) *** -->
    <xsl:if test="$egds_show_desktop_results != '0'">
        <xsl:call-template name="desktop_results"/>
    </xsl:if>



    <!-- main results -->
    <xsl:call-template name="main_results">
      <xsl:with-param name="query" select="$query"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:template name="dynamic_navigation_results">
<xsl:param name="query"/>

<xsl:variable name="dn_tokens"
  select="tokenize(/GSP/PARAM[@name='dnavs']/@original_value, '\+')"/>

<xsl:variable name="div_pos">
  <xsl:choose>
    <xsl:when test="$show_sort_by != '0'">
      <xsl:text>position: relative; width: 100%;</xsl:text>
    </xsl:when>
    <xsl:otherwise>
      <xsl:text>position: relative; width: 100%; margin-top: 10px;</xsl:text>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<div id="main" style="{$div_pos}" class="main-div">
  <div id="dyn_nav">
    <div class="dn-hdr">
      <span style="padding-left: 6px;">
        <strong>Refine Results</strong>
        <span class="collapse"></span>
      </span>
    </div>

    <!-- Expert Search - display go back to main results link if expert
         search expanded mode is configured for this frontend. -->
    <xsl:if test="$show_expert_search_expanded_results = '1'">
      <div class="dn-exp">
        <xsl:call-template name="back_to_widget_view_frontend_link">
          <xsl:with-param name="src_prefix"
              select="concat($gsa_search_root_path_prefix, '?')" />
          <xsl:with-param name="msg_back_to_main_results_action"
              select="$msg_back_to_main_results_action" />
        </xsl:call-template>
      </div>
    </xsl:if>

    <div id="dyn_nav_col" style="height: 100%">
      <xsl:apply-templates select="/GSP/RES/PARM/PMT">
        <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
        <xsl:with-param name="partial_count" select="/GSP/RES/PARM/PC"/>
      </xsl:apply-templates>

      <script type="text/javascript">
        <xsl:for-each select="$dn_tokens">
          dynNavMgr.addSelectedAttr("<xsl:value-of select='.'/>");
        </xsl:for-each>

        <xsl:apply-templates select="/GSP/RES/PARM/PMT" mode="hidden"/>
      </script>
    </div>
  </div>
  <div id="main_res">
   <!-- show sort-by -->
	<xsl:if test="$show_sort_by != '0' or $show_spelling != '0' or $show_synonyms != '0'">
	  <xsl:if test="RES"> <!-- there might be onebox results but no RES  -->
	    <div class="wrapper">
	      <div class="gsa-row">
	        <div class="col">
	          <xsl:if test="$show_spelling != '0' or $show_synonyms != '0'">
	            <td align="left">
	              <xsl:choose>
	                <!-- *** handle spelling suggestions, if any *** -->
	                <xsl:when test="$show_spelling != '0'">
	                  <xsl:call-template name="spelling"/>
	                </xsl:when>
	                <!-- *** handle synonyms, if any *** -->
	                <xsl:otherwise>
	                  <xsl:call-template name="synonyms"/>
	                </xsl:otherwise>
	              </xsl:choose>
	            </td>
	          </xsl:if>
	        </div>
	      </div>
	    </div>
	  </xsl:if>
	</xsl:if>
	
	<xsl:if test="$show_spelling != '0' and $show_synonyms != '0'">
	  <xsl:call-template name="synonyms"/>
	</xsl:if>
    <xsl:call-template name="main_results">
      <xsl:with-param name="query" select="$query"/>
      <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
    </xsl:call-template>
  </div>
</div>
</xsl:template>

<!-- This template is specifically needed to hide the lag in rendering for the
   dynamic navigation attributes with large set of values. Since only the top
   few values need to be displayed, the rest are added to the dynNavMgr JS
   instance for rendering later on demand ('More' click).
-->
<xsl:template match="PMT" mode="hidden">
<xsl:if test="@IR != 1">
  <xsl:variable name="values">
    [<xsl:for-each select="PV[position() &gt; $dyn_nav_max_rows and @C != '0']">["<xsl:call-template
        name='js_escape'><xsl:with-param name="string"
        select="@V"/><xsl:with-param name="slash_mode" select='"1"'/>
        </xsl:call-template>", <xsl:value-of select='@C'/>]<xsl:if
        test="position() != last()">,</xsl:if></xsl:for-each>]
  </xsl:variable>
  <xsl:variable name="attr_id"><xsl:value-of
      select="concat('attr_', string(position()))"/></xsl:variable>

  dynNavMgr.addAttrValues("<xsl:value-of select='$attr_id'/>", <xsl:value-of select='$values'/>);
</xsl:if>
</xsl:template>

<xsl:template match="PMT">
<xsl:param name="dn_tokens"/>
<xsl:param name="partial_count"/>

<xsl:variable name="name"><xsl:value-of select="normalize-space(@NM)"/></xsl:variable>
<xsl:variable name="pmt_name"><xsl:call-template
    name="term-escape"><xsl:with-param name="val" select="@NM"/></xsl:call-template>
</xsl:variable>

<xsl:choose>
  <xsl:when test="@IR = 1">
    <ul class="dn-attr">
      <li class="dn-attr-hdr"><span class="dn-attr-hdr-txt"><xsl:attribute
          name="title"><xsl:value-of select="@DN" disable-output-escaping="yes"/>
      </xsl:attribute><xsl:value-of select="@DN"/></span></li>
      <xsl:apply-templates select="PV">
        <xsl:with-param name="pmt_name" select="$pmt_name"/>
        <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
        <xsl:with-param name="partial_count" select="$partial_count"/>
      </xsl:apply-templates>
    </ul>
  </xsl:when>

  <xsl:otherwise>
    <xsl:variable name="total" select="count(PV[@C != '0'])"/>
    <xsl:variable name="attr_class">
      <xsl:choose>
        <xsl:when test="$total &lt; $dyn_nav_max_rows + 1">
          <xsl:value-of select="'dn-attr'"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="'dn-attr dn-attr-more'"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>

    <xsl:variable name="attr_id"><xsl:value-of
        select="concat('attr_', string(position()))"/></xsl:variable>
    <ul id="{$attr_id}" class="{$attr_class}">
      <xsl:choose>
        <xsl:when test="$total &lt; $dyn_nav_max_rows + 1">
          <li class="dn-attr-hdr"><span class="dn-attr-hdr-txt"><xsl:attribute
            name="title"><xsl:value-of select="@DN" disable-output-escaping="yes"/>
          </xsl:attribute><xsl:value-of select="@DN"/></span></li>
        </xsl:when>
        <xsl:otherwise>
          <li class="dn-attr-hdr"><div class="dn-zippy-hdr"><div class="dn-zippy-hdr-img"></div>
            <span class="dn-attr-hdr-txt"><xsl:attribute
              name="title"><xsl:value-of select="@DN" disable-output-escaping="yes"/>
            </xsl:attribute><xsl:value-of select="@DN"/></span></div></li>
        </xsl:otherwise>
      </xsl:choose>

      <xsl:apply-templates select="PV[position() &lt; $dyn_nav_max_rows + 1]">
        <xsl:with-param name="pmt_name" select="$pmt_name"/>
        <xsl:with-param name="header" select="@DN"/>
        <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
        <xsl:with-param name="partial_count" select="$partial_count"/>
      </xsl:apply-templates>

      <xsl:if test="$total &gt; $dyn_nav_max_rows">
        <xsl:variable name="total_left" select="$total - $dyn_nav_max_rows"/>
        <li id="{$attr_id}_more_less">
          <a id="more_{$attr_id}" class="dn-link" style="margin-right: 10px; outline-style: none;"
            onclick="dynNavMgr.displayMore('{$attr_id}', true); return false;"
            href="javascript:;">
            <xsl:attribute name="ctype">
                <xsl:text>dynnav.</xsl:text>
                <xsl:value-of select="$name" disable-output-escaping="no"/>
                <xsl:text>.more</xsl:text>
            </xsl:attribute>
            <span class="dn-more-img dn-mimg"></span>
            <span id="disp_{$attr_id}"><xsl:value-of
            select="$total_left"/></span><span> More</span>
          </a>
          <a id="less_{$attr_id}" class="dn-link dn-hidden" style="outline-style: none;"
            onclick="dynNavMgr.displayMore('{$attr_id}', false, {$total_left}); return false;"
            href="javascript:;">
            <xsl:attribute name="ctype">
              <xsl:text>dynnav.</xsl:text>
              <xsl:value-of select="$name" disable-output-escaping="no"/>
              <xsl:text>.less</xsl:text>
            </xsl:attribute>
            <span class="dn-more-img dn-limg"></span>
            <span>Less</span>
          </a>
        </li>
        <label class="dn-hidden dn-id"><xsl:value-of select="$attr_id"/></label>
        <label id="{$attr_id}_escaped" class="dn-hidden"><xsl:value-of
            select="$pmt_name"/></label>
        <label id="{$attr_id}_total" class="dn-hidden"><xsl:value-of
            select="$total"/></label>
        <label id="{$attr_id}_total_left" class="dn-hidden"><xsl:value-of
            select="$total_left"/></label>
      </xsl:if>
    </ul>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:template match="PV">
<xsl:param name="pmt_name"/>
<xsl:param name="header"/>
<xsl:param name="dn_tokens"/>
<xsl:param name="partial_count"/>

<xsl:if test="@C != 0">
  <xsl:apply-templates select="." mode="construct">
    <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
    <xsl:with-param name="header" select="$header"/>
    <xsl:with-param name="partial_count" select="$partial_count"/>
    <xsl:with-param name="current_token">
      <xsl:choose>
        <xsl:when test="../@IR = '1'"><xsl:variable
          name="stripped_l" select="normalize-space(@L)"/><xsl:variable
          name="stripped_h" select="normalize-space(@H)"/>inmeta:<xsl:value-of
          select="$pmt_name"/>:<xsl:choose><xsl:when test="../@T = 3"><xsl:if
          test="$stripped_l != ''">$<xsl:value-of select="$stripped_l"/></xsl:if>..<xsl:if
          test="$stripped_h != ''">$<xsl:value-of
          select="$stripped_h"/></xsl:if></xsl:when><xsl:otherwise><xsl:value-of
          select="$stripped_l"/>..<xsl:value-of select="$stripped_h"/></xsl:otherwise></xsl:choose>
        </xsl:when>
        <xsl:otherwise>inmeta:<xsl:value-of select="$pmt_name"/>%3D<xsl:call-template
            name="term-escape"><xsl:with-param name="val"
            select="@V"/></xsl:call-template></xsl:otherwise>
      </xsl:choose>
    </xsl:with-param>
  </xsl:apply-templates>
</xsl:if>
</xsl:template>

<xsl:template match="PV" mode="construct">
<xsl:param name="dn_tokens"/>
<xsl:param name="header"/>
<xsl:param name="current_token"/>
<xsl:param name="partial_count"/>

<xsl:variable name="dispval">
  <xsl:apply-templates select="." mode="display_value">
    <xsl:with-param name="js_escape" select="'1'"/>
  </xsl:apply-templates>
</xsl:variable>

<xsl:variable name="dispcount">
  <xsl:text>(</xsl:text><xsl:if
     test="$partial_count=1"><xsl:text>&gt; </xsl:text></xsl:if>
    <xsl:value-of select="@C"/><xsl:text>)</xsl:text>
</xsl:variable>

<xsl:variable name="is_selected" select="index-of($dn_tokens, $current_token)"/>
<li class="dn-attr-v">
  <xsl:choose>
    <xsl:when test="exists($is_selected)">
      <xsl:variable name="other_tokens">
        <xsl:value-of select="string-join(remove($dn_tokens, $is_selected[position()=1]), '+')"/>
      </xsl:variable>

      <xsl:variable name="cancel_url">
        <xsl:value-of select="$no_q_dnavs_params"/>&amp;q=<xsl:value-of
          select="$original_q"/><xsl:if test="$other_tokens != ''">+<xsl:value-of
          select="$other_tokens"/>&amp;dnavs=<xsl:value-of select="$other_tokens"/></xsl:if>
      </xsl:variable>

      <a class="dn-img dn-r-img"
          href="{$gsa_search_root_path_prefix}?{$cancel_url}"
          title="Clear">
        <xsl:attribute name="ctype">
          <xsl:text>dynnav.clear.</xsl:text>
          <xsl:value-of select="$header" disable-output-escaping="no"/>
        </xsl:attribute>
      </a>
      <span class="dn-overflow dn-inline-block" style="width: 86%;">
        <xsl:if test="../@IR != 1">
          <xsl:attribute name="title"><xsl:value-of select="$dispval"
              disable-output-escaping="yes"/></xsl:attribute>
        </xsl:if>
        <div class="dn-attr-txt"><xsl:value-of
            select="$dispval" disable-output-escaping="yes"/>
        </div>
        <span class="display-cnt"><xsl:value-of
            select="$dispcount" disable-output-escaping="yes"/>
        </span>
      </span>
    </xsl:when>
    <xsl:otherwise>
      <xsl:variable name="pmts_var">dnavs=<xsl:if test="/GSP/PARAM[@name='dnavs']"><xsl:value-of
          select="/GSP/PARAM[@name='dnavs']/@original_value"/>+</xsl:if><xsl:value-of
          select="$current_token"/>
      </xsl:variable>
      <xsl:variable name="qurl"><xsl:value-of select="$no_q_dnavs_params"/>&amp;q=<xsl:value-of
          select="/GSP/PARAM[@name='q']/@original_value"/>+<xsl:value-of
          select="$current_token"/>&amp;<xsl:value-of select="$pmts_var"/>
      </xsl:variable>
      <div class="dn-attr-txt"><a
        class="dn-attr-a" href="{$gsa_search_root_path_prefix}?{$qurl}">
        <xsl:attribute name="ctype">
          <xsl:text>dynnav.</xsl:text>
          <xsl:value-of select="$header" disable-output-escaping="no"/>
          <xsl:text>.</xsl:text>
          <xsl:value-of select="$dispval" disable-output-escaping="no"/>
        </xsl:attribute>
        <xsl:if test="../@IR != 1">
          <xsl:attribute name="title"><xsl:value-of select="$dispval"
              disable-output-escaping="no"/></xsl:attribute>
        </xsl:if><xsl:value-of
            select="$dispval" disable-output-escaping="yes"/></a>
      </div>
      <span class="dn-attr-c display-cnt"><xsl:value-of select="$dispcount"
          disable-output-escaping="yes"/></span>
    </xsl:otherwise>
  </xsl:choose>
</li>
</xsl:template>

<xsl:template match="PV" mode="display_value">
<xsl:param name="js_escape"/>
<xsl:choose>
  <xsl:when test="../@IR = 1">
    <xsl:variable name="disp_l">
      <xsl:call-template name="pmt_range_display_val">
        <xsl:with-param name="val" select="@L"/>
        <xsl:with-param name="type" select="../@T"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="disp_h">
      <xsl:call-template name="pmt_range_display_val">
        <xsl:with-param name="val" select="@H"/>
        <xsl:with-param name="type" select="../@T"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:choose>
      <xsl:when test="$disp_l = ''">
        <xsl:value-of select="$disp_h"/><xsl:text> </xsl:text>
        <xsl:choose>
          <xsl:when test="../@T = 4">or earlier</xsl:when>
          <xsl:otherwise>or less</xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:when test="$disp_h = ''">
        <xsl:value-of select="$disp_l"/><xsl:text> </xsl:text>
        <xsl:choose>
          <xsl:when test="../@T = 4">or later</xsl:when>
          <xsl:otherwise>or more</xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise><xsl:value-of
        select="$disp_l"/><xsl:text> </xsl:text><xsl:call-template
        name="endash"/><xsl:text> </xsl:text><xsl:value-of select="$disp_h"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:when>
  <xsl:otherwise>
    <xsl:choose>
      <xsl:when test="$js_escape = '1'">
        <xsl:call-template name="js_escape"><xsl:with-param name="string"
          select="@V"/><xsl:with-param name="slash_mode" select='"0"'/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise><xsl:value-of select="@V"/></xsl:otherwise>
    </xsl:choose>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:variable name="hex">0123456789ABCDEF</xsl:variable>
<xsl:template name="term-escape">
<xsl:param name="val"/>
<xsl:variable name="first-char" select="substring($val, 1, 1)"/>
<xsl:variable name="code"
  select="string-to-codepoints($first-char)[position()=1]"/>
<xsl:choose>
  <xsl:when test="not(($code >= 48 and $code &lt;= 57) or
    ($code >= 65 and $code &lt;= 90) or ($code = 95) or
    ($code >= 97 and $code &lt;= 122))">
    <xsl:choose>
      <xsl:when test="$code > 128">
        <xsl:value-of select="encode-for-uri($first-char)"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:variable name="hex-digit1"
          select="substring($hex, floor($code div 16) + 1, 1)"/>
        <xsl:variable name="hex-digit2"
          select="substring($hex, $code mod 16 + 1, 1)"/>
        <xsl:value-of select="concat('%25', $hex-digit1 ,$hex-digit2)"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$first-char"/>
  </xsl:otherwise>
</xsl:choose>
<xsl:if test="string-length($val) > 1">
  <xsl:call-template name="term-escape">
    <xsl:with-param name="val" select="substring($val, 2)"/>
  </xsl:call-template>
</xsl:if>
</xsl:template>

<xsl:template name="pmt_range_display_val">
<xsl:param name="val"/>
<xsl:param name="type"/>
<xsl:choose>
  <xsl:when test="$val != '' and ($type = 2 or $type = 3)">
    <xsl:value-of select="format-number($val, '#.##')"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$val"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:template name="main_results">
<xsl:param name="query"/>
<xsl:param name="dn_tokens"/>

<xsl:if test="$render_dynamic_navigation = '1'">
  <div class="dn-bar">
    <xsl:variable name="all_results_url"><xsl:value-of
        select="$no_q_dnavs_params"/>&amp;q=<xsl:value-of select="$original_q"/>
    </xsl:variable>

    <!-- Add next/prev navigation -->
    <xsl:if test="$show_top_navigation != '0' and /GSP/RES">
      <span class="dn-bar-rt">
        <xsl:call-template name="google_navigation">
          <xsl:with-param name="prev" select="/GSP/RES/NB/PU"/>
          <xsl:with-param name="next" select="/GSP/RES/NB/NU"/>
          <xsl:with-param name="view_begin" select="/GSP/RES/@SN"/>
          <xsl:with-param name="view_end" select="/GSP/RES/@EN"/>
          <xsl:with-param name="guess" select="/GSP/RES/M"/>
          <xsl:with-param name="navigation_style" select="'top'"/>
          <xsl:with-param name="dynamic_nav_bar" select="'1'"/>
        </xsl:call-template>
      </span>
    </xsl:if>

    <a class="dn-link" style="text-decoration: underline; color: #000;"
      href="{$gsa_search_root_path_prefix}?{$all_results_url}">All results</a>

    <xsl:if test="exists($dn_tokens)">
      <xsl:call-template name="rsaquo"/>
      <xsl:variable name="root_node" select="/GSP"/>
      <xsl:for-each select="$dn_tokens">
        <xsl:variable name="other_pmts_tokens"
          select="string-join(remove($dn_tokens, position()), '+')"/>

        <xsl:variable name="cancel_url">
          <xsl:value-of select="$all_results_url"/>
          <xsl:if test="$other_pmts_tokens != ''">+<xsl:value-of
              select="$other_pmts_tokens"/>&amp;dnavs=<xsl:value-of select="$other_pmts_tokens"/>
          </xsl:if>
        </xsl:variable>

        <div class="dn-inline-block"><a class="dn-link cancel-url dn-bar-link"
            href="{$gsa_search_root_path_prefix}?{$cancel_url}"
            title="Clear">
          <xsl:variable name="range_val" select="substring-after(., ':')"/>
          <xsl:choose>
            <xsl:when test="contains(., '..')">
              <xsl:for-each select="$root_node/RES/PARM/PMT">
                <xsl:variable name="escaped_name"><xsl:call-template name="term-escape">
                  <xsl:with-param name="val" select="@NM"/>
                </xsl:call-template></xsl:variable>
                <xsl:if test="$escaped_name=substring-before($range_val, ':')">
                  <span class="dn-bar-v"><xsl:value-of select="@DN"/>:</span><xsl:call-template
                    name="nbsp"/><xsl:choose>
                    <xsl:when test="@T = '3'">
                      <xsl:for-each select="PV">
                        <xsl:variable name="check_val"><xsl:if
                          test="normalize-space(@L) != ''">$<xsl:value-of
                          select="normalize-space(@L)"/></xsl:if>..<xsl:if
                          test="normalize-space(@H) != ''">$<xsl:value-of
                            select="normalize-space(@H)"/></xsl:if>
                        </xsl:variable>
                        <xsl:if test="$check_val=substring-after($range_val, ':')">
                          <xsl:apply-templates select="current()" mode="display_value">
                            <xsl:with-param name="js_escape" select="'0'"/>
                          </xsl:apply-templates>
                        </xsl:if>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:apply-templates select="PV[concat(normalize-space(@L), '..',
                        normalize-space(@H))=substring-after($range_val, ':')]" mode="display_value">
                        <xsl:with-param name="js_escape" select="'0'"/>
                      </xsl:apply-templates>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:if>
              </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
              <xsl:for-each select="$root_node/RES/PARM/PMT">
                <xsl:variable name="escaped_name"><xsl:call-template name="term-escape">
                  <xsl:with-param name="val" select="@NM"/>
                </xsl:call-template></xsl:variable>
                <xsl:if test="$escaped_name=substring-before($range_val, '%3D')">
                  <span class="dn-bar-v"><xsl:value-of select="./@DN"/>:</span><xsl:call-template
                    name="nbsp"/><xsl:for-each select="./PV"><xsl:variable
                      name="pv_val"><xsl:call-template name="term-escape">
                        <xsl:with-param name="val" select="./@V"/>
                      </xsl:call-template></xsl:variable>
                      <xsl:if test="$pv_val=substring-after($range_val, '%3D')">
                        <xsl:apply-templates select="." mode="display_value">
                          <xsl:with-param name="js_escape" select="'0'"/>
                        </xsl:apply-templates>
                      </xsl:if>
                  </xsl:for-each>
                </xsl:if>
              </xsl:for-each>
            </xsl:otherwise>
          </xsl:choose>
        </a></div>

        <xsl:if test="position() != last()">
          <xsl:call-template name="rsaquo"/>
        </xsl:if>
      </xsl:for-each>
    </xsl:if>
  </div>
  

  
  <!-- *** Handle OneBox results, if any ***-->
  <xsl:if test="$show_onebox != '0' and count(/GSP/ENTOBRESULTS) &gt; 0 and $show_sidebar != '1'">
      <input type="hidden" name="oneboxloc" value="4486-$show_sidebar" />
    <xsl:call-template name="onebox"/>

    <script>
    <xsl:comment>
      if (window['populateUarMessages']) {
        populateUarMessages();
      }
    //</xsl:comment>
    </script>
  </xsl:if>

  <!-- *** output google desktop results (if enabled and any available) *** -->
  <xsl:if test="$egds_show_desktop_results != '0'">
    <xsl:call-template name="desktop_results"/>
  </xsl:if>
</xsl:if>

<xsl:if test="$show_translation = '1' and $only_apps != '1'">
  <div id="translate_all_div" class="trns-all-div"></div>
</xsl:if>

<xsl:choose>
  <xsl:when test="$show_sidebar = '1'">
          <div class="col sb-r" id="sidebar-container">
            <div id="sidebar">
            <!-- Onebox -->
            <xsl:if test="$show_onebox != '0' and count(/GSP/ENTOBRESULTS) &gt; 0">
                <input type="hidden" name="oneboxloc" value="4514" />
              <xsl:call-template name="onebox"/>

              <script>
              <xsl:comment>
                if (window['populateUarMessages']) {
                  populateUarMessages();
                }
              //</xsl:comment>
              </script>
            </xsl:if>
            
            <!-- Expert Search - sidebar element. -->
            <xsl:if test="$show_expert_search_widget_view = '1'">
              <div id="exp-results-container">
                <xsl:call-template
                  name="render_expert_search_results">
                  <xsl:with-param name="src_prefix"
                      select="concat($gsa_search_root_path_prefix, '?')" />
                  <xsl:with-param name="is_noscript_mode" select="'true'" />
                </xsl:call-template>
              </div>
            </xsl:if>

            <!-- People Search sidebar element. -->
            <xsl:if test="$show_people_search = '1'">
            <div id="ps-results-container">
              <div id="loading-ps-results" class="sb-r-ld-msg-c" style="display: none;">
                <span class="sb-r-lbl">Loading People search results...</span>
              </div>
              <div id="ps-results-msg" class="sb-r-lbl" style="display: none;" >People</div>
              <div id="ps-results-section" class="sb-r-res" style="display:none;">
              </div>
            </div>
            </xsl:if>

            <!-- Google Apps results sidebar element. -->
            <xsl:if test="$show_apps_segmented_ui = '1'">
            <div id="apps-results-container">
              <div id="loading-app-results" class="sb-r-ld-msg-c" style="display: none;">
                <span class="sb-r-lbl">Loading Google Apps results...</span>
              </div>
              <div style="display: none;" id="apps-results-msg" class="sb-r-lbl"></div>
              <div id="apps-results-section" class="sb-r-res" style="display: none;">
              </div>
              <iframe scrolling="no" id="apps-results-iframe" frameborder="0"
                  style="display: none;">
              </iframe>
            </div>
            </xsl:if>

            <!-- Google Site Search sidebar element. -->
            <xsl:if test="$show_gss_results = '1'">
            <div id="gss-results-container">
              <div id="loading-gss-results" class="sb-r-ld-msg-c" style="display: none;">
                <span class="sb-r-lbl">Loading Google Site Search results...</span>
              </div>
              <div id="gss-results-msg" class="sb-r-lbl" style="display: none;" >Google Site Search</div>
              <div id="gss-results-section" class="sb-r-res" style="display:none">
              </div>
              <input style="display:none" id="gss-hidden-input" />
            </div>
            </xsl:if>
          </div>
          </div>
          <div class="col" id="left-side-container">
            <xsl:call-template name="render_main_results">
              <xsl:with-param name="query" select="$query"/>
            </xsl:call-template>  
          </div>

  </xsl:when>
  <xsl:otherwise>
    <xsl:call-template name="render_main_results">
      <xsl:with-param name="query" select="$query"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>

<!-- *** Filter note (if needed) *** -->
<xsl:if test="(RES/FI) and (not(RES/NB/NU))">
  <p>
    <i>
    In order to show you the most relevant results, we have omitted some entries very similar to the <xsl:value-of select="RES/@EN"/> already displayed.<br/>If you like, you can <a href="{$filter_url}0">repeat the search with the omitted results included</a>.
    </i>
  </p>
</xsl:if>
  <!-- *** output results details *** -->
  <xsl:if test="$show_res_clusters = '1'">
    <xsl:call-template name="cluster_results"/>
  </xsl:if>
<!-- *** Add bottom navigation *** -->
<div id="bottom-navigation" class="bottom-nav clearfix">
  <xsl:call-template name="gen_bottom_navigation" />
</div>

<!-- *** Bottom search box *** -->
<div id="bottom-search-box">
  <xsl:if test="$show_bottom_search_box != '0' and RES">
    <xsl:call-template name="bottom_search_box"/>
  </xsl:if>
</div>

<!-- *** Load the JSAPI library if displaying GSS results is enabled. -->
<xsl:if test="$show_gss_results = '1'">
  <script src="https://www.google.com/jsapi" type="text/javascript"></script>
  <script type="text/javascript">
    var GSS_JS_API_LOADED = false;
    /**
     * If you want to use a different Site Search theme you can specify the
     * same through {style: THEME_CONSTANT} property passed as the third
     * parameter to google.load call below. For example:
     * google.load('search', '1', {style: google.loader.themes.ESPRESSO})
     * You can refer API documentation here:
     * http://code.google.com/apis/ajaxsearch/documentation/customsearch/#_themes
     * Optionally, you can override the default stylesheet via custom CSS or
     * customize existing themes via "Look and Feel" option in the control
     * panel.
     */
    google.load('search', '1');
    google.setOnLoadCallback(function(){GSS_JS_API_LOADED = true;});
  </script>
</xsl:if>

<!-- *** Load the Translation JS library, if enabled *** -->
<xsl:if test="$show_translation = '1' and $only_apps != '1'">
  <xsl:variable name="result_contents">
    <xsl:for-each select="/GSP/RES/R">{'id':<xsl:value-of select="@N"/>,'lang':'<xsl:value-of select="LANG"/>'},</xsl:for-each>
  </xsl:variable>
  <xsl:variable name="res_count" select="count(/GSP/RES/R)"/>
  <xsl:variable name="user_lang" select="/GSP/PARAM[@name='ulang']/@value" />
  <xsl:if test="$render_dynamic_navigation != '1'">
    <script src="{$gsa_resource_root_path_prefix}/translation_compiled.js"
        type="text/javascript"></script>
  </xsl:if>
  <script type="text/javascript">
    var translationManager = new gsa.translation.TranslationManager();
    translationManager.initTranslation(<xsl:value-of select="$res_count" />,
        [<xsl:value-of select="substring($result_contents,
        1,string-length($result_contents)-1)" />],
        '<xsl:value-of select="$user_lang"/>');

    function createSectionalElement() {
      new google.translate.SectionalElement({
       sectionalNodeClassName: 'goog-trans-section',
       controlNodeClassName: 'goog-trans-control',
       background: '#ffffff',
       useSecureConnection: true,
       key: '<xsl:value-of select="$translate_key"/>',
       relate: 'id'
      }, 'goog-trans-all');
    }
  </script>
  <script src="https://translate.google.com/translate_a/element.js?cb=createSectionalElement&amp;ug=section&amp;hl={$user_lang}"></script>
</xsl:if>

<!-- *** Load resources for showing document previews, if enabled *** -->
<xsl:if test="$show_document_previews = '1'">
  <xsl:call-template name="populate_previewer_i18n_array"/>
  <script src="{$gsa_resource_root_path_prefix}/dpsjsclient/dps.min.js"
      type="text/javascript"></script>
  <script src="{$gsa_resource_root_path_prefix}/json2.js"
      type="text/javascript"></script>
  <script src="{$custom_js_path}/previewer.js"
      type="text/javascript"></script>
  <xsl:if test="/GSP/PREVIEWS">
    <script type="text/javascript">
      <xsl:value-of select="/GSP/PREVIEWS"/>
    </script>
  </xsl:if>
  <link rel="stylesheet"
    href="{$gsa_resource_root_path_prefix}/dpsjsclient/dps-floating-viewer.css"
    type="text/css">
  </link>
  <xsl:if test="$is_embedded_mode = '1'">
    <script type="text/javascript">
      if (window['DPS']) {
        DPS.forwardingProxy =
            '<xsl:value-of select="$embedded_mode_resource_root_path_prefix" />';
        <xsl:if test="$embedded_mode_dps_viewer_host != ''">
        <xsl:variable name="embedded_mode_dps_viewer_host_to_use"
          select="if (starts-with($embedded_mode_dps_viewer_host, 'http://'))
                  then
                     $embedded_mode_dps_viewer_host
                  else
                     concat('http://', $embedded_mode_dps_viewer_host)" />
        // Disable the full preview mode in SharePoint embedded mode.
        DPS.onPageClick = function() { return false; };
        </xsl:if>
      }
    </script>
    <style type="text/css">
      div.floating-viewer-header .controls {
        background-image: url("<xsl:value-of select="$embedded_mode_resource_root_path_prefix"/>/dpsjsclient/buttons.png");
      }
      div.result-item-hover span.toggle-preview {
        background-image: url("<xsl:value-of select="$embedded_mode_resource_root_path_prefix"/>/preview_on.png") !important;
      }
      body.previews-enabled span.toggle-preview {
        background-image: url("<xsl:value-of select="$embedded_mode_resource_root_path_prefix"/>/preview_off.png");
      }
    </style>
  </xsl:if>
</xsl:if>
</xsl:template>

<xsl:template name="render_main_results">
<xsl:param name="query"/>
<xsl:variable name="main_results_class">
  <xsl:choose>
    <xsl:when test="$render_dynamic_navigation = '1'">main-results</xsl:when>
    <xsl:otherwise>main-results-without-dn</xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<div class="{$main_results_class}">
  <!-- for keymatch results -->
  <xsl:if test="$show_keymatch != '0'">
    <xsl:apply-templates select="/GSP/GM"/>
  </xsl:if>

  <!-- Experty Search - render the expert search results if expanded
       mode is configured for the current frontend. -->
  <xsl:choose>
    <xsl:when test="$show_expert_search_expanded_results = '1'">
      <xsl:if test="$render_dynamic_navigation != '1'">
        <xsl:call-template name="back_to_widget_view_frontend_link">
          <xsl:with-param name="src_prefix"
              select="concat($gsa_search_root_path_prefix, '?')" />
          <xsl:with-param name="msg_back_to_main_results_action"
              select="$msg_back_to_main_results_action" />
        </xsl:call-template>
      </xsl:if>
      <xsl:call-template name="render_expert_search_results">
        <xsl:with-param name="src_prefix"
            select="concat($gsa_search_root_path_prefix, '?')" />
        <xsl:with-param name="current_search_query_args"
            select="$search_url" />
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:apply-templates select="RES/R">
        <xsl:with-param name="query" select="$query"/>
      </xsl:apply-templates>
    </xsl:otherwise>
  </xsl:choose>
</div>
</xsl:template>

<!-- **********************************************************************
Stopwords suggestions in result page (do not customize)
   ********************************************************************** -->
<xsl:template name="stopwords">
<xsl:variable name="stopwords_suggestions1">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="'/help/basics.html#stopwords'"/>
    <xsl:with-param name="replace" select="'user_help.html#stop'"/>
    <xsl:with-param name="string" select="/GSP/CT"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="stopwords_suggestions">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="'/help/basics.html'"/>
    <xsl:with-param name="replace" select="'user_help.html'"/>
    <xsl:with-param name="string" select="$stopwords_suggestions1"/>
  </xsl:call-template>
</xsl:variable>

<xsl:if test="/GSP/CT">
  <font size="-1" color="gray">
    <xsl:value-of disable-output-escaping="yes"
      select="$stopwords_suggestions"/>
  </font>
</xsl:if>
</xsl:template>


<!-- **********************************************************************
Spelling suggestions in result page (do not customize)
   ********************************************************************** -->
<xsl:template name="spelling">
<xsl:if test="/GSP/Spelling/Suggestion">
  <p id="spell-suggest"><span class="p"><xsl:value-of select="$spelling_text"/>
       <xsl:call-template name="nbsp"/>
  	 </span>
  <xsl:variable name="apps_param">
    <xsl:choose>
      <xsl:when test="/GSP/PARAM[@name='exclude_apps']">
        <xsl:text disable-output-escaping='yes'>&amp;exclude_apps=</xsl:text>
        <xsl:value-of select="/GSP/PARAM[@name='exclude_apps']/@original_value" />
      </xsl:when>
      <xsl:when test="/GSP/PARAM[@name='only_apps']">
        <xsl:text disable-output-escaping='yes'>&amp;only_apps=</xsl:text>
        <xsl:value-of select="/GSP/PARAM[@name='only_apps']/@original_value" />
      </xsl:when>
    </xsl:choose>
  </xsl:variable>
  <a ctype="spell"
    href="{$gsa_search_root_path_prefix}?q={/GSP/Spelling/Suggestion[1]/@qe}&amp;spell=1&amp;{$synonym_url}{$apps_param}">
    <xsl:value-of disable-output-escaping="yes" select="/GSP/Spelling/Suggestion[1]"/>
  </a>
  </p>
</xsl:if>
</xsl:template>


<!-- **********************************************************************
Synonym suggestions in result page (do not customize)
   ********************************************************************** -->
<xsl:template name="synonyms">
<xsl:if test="/GSP/Synonyms/OneSynonym">
  <p><span class="p"><font color="{$synonyms_text_color}">
       <xsl:value-of select="$synonyms_text"/>
       <xsl:call-template name="nbsp"/>
     </font></span>
  <xsl:for-each select="/GSP/Synonyms/OneSynonym">
    <a ctype="synonym" href="{$gsa_search_root_path_prefix}?q={@q}&amp;{$synonym_url}">
      <xsl:value-of disable-output-escaping="yes" select="."/>
    </a><xsl:text> </xsl:text>
  </xsl:for-each>
  </p>
</xsl:if>
</xsl:template>


<!-- **********************************************************************
Truncation functions (do not customize)
   ********************************************************************** -->
<xsl:template name="truncate_url">
<xsl:param name="t_url"/>

<xsl:choose>
  <xsl:when test="string-length($t_url) &lt; $truncate_result_url_length">
    <xsl:value-of select="$t_url"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:variable name="first" select="substring-before($t_url, '/')"/>
    <xsl:variable name="last">
            <xsl:call-template name="truncate_find_last_token">
              <xsl:with-param name="t_url" select="$t_url"/>
            </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="path_limit" select="$truncate_result_url_length - (string-length($first) + string-length($last) + 1)"/>

    <xsl:choose>
            <xsl:when test="$path_limit &lt;= 0">
              <xsl:value-of select="concat(substring($t_url, 1, $truncate_result_url_length), '...')"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:variable name="chopped_path">
                <xsl:call-template name="truncate_chop_path">
                  <xsl:with-param name="path" select="substring($t_url, string-length($first) + 2, string-length($t_url) - (string-length($first) + string-length($last) + 1))"/>
                  <xsl:with-param name="path_limit" select="$path_limit"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:value-of select="concat($first, '/.../', $chopped_path, $last)"/>
            </xsl:otherwise>
    </xsl:choose>
  </xsl:otherwise>
</xsl:choose>

</xsl:template>

<xsl:template name="truncate_find_last_token">
<xsl:param name="t_url"/>

<xsl:choose>
  <xsl:when test="contains($t_url, '/')">
    <xsl:call-template name="truncate_find_last_token">
          <xsl:with-param name="t_url" select="substring-after($t_url, '/')"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
          <xsl:value-of select="$t_url"/>
  </xsl:otherwise>
</xsl:choose>

</xsl:template>

<xsl:template name="truncate_chop_path">
<xsl:param name="path"/>
<xsl:param name="path_limit"/>

<xsl:choose>
  <xsl:when test="string-length($path) &lt;= $path_limit">
    <xsl:value-of select="$path"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:call-template name="truncate_chop_path">
      <xsl:with-param name="path" select="substring-after($path, '/')"/>
      <xsl:with-param name="path_limit" select="$path_limit"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>

</xsl:template>


<!-- **********************************************************************
Google Apps (do not customize)
   ********************************************************************** -->
<xsl:variable
name="sites_icon"
select="'https://www.google.com/sites/images/sites_favicon.ico'"/>
<xsl:variable
name="docs_icon"
select="'https://docs.google.com/images/doclist/icon_doc.gif'"/>
<xsl:variable
name="spreadsheets_icon"
select="'https://docs.google.com/images/doclist/icon_spread.gif'"/>
<xsl:variable
name="presentations_icon"
select="'https://docs.google.com/images/doclist/icon_pres.gif'"/>
<xsl:variable
name="pdf_icon"
select="'https://docs.google.com/images/doclist/icon_6_pdf.gif'"/>
<xsl:variable
name="drawing_icon"
select="'https://docs.google.com/images/doclist/icon_6_drawing.png'"/>
<xsl:variable
name="email_icon"
select="'https://ssl.gstatic.com/ui/v1/icons/mail/images/favicon.ico'"/>

<!-- **********************************************************************
A single result (do not customize)
   ********************************************************************** -->
<xsl:template match="R">
<xsl:param name="query"/>

<xsl:variable name="protocol"     select="substring-before(U, '://')"/>
<xsl:variable name="temp_url"     select="substring-after(U, '://')"/>
<xsl:variable name="display_url1" select="substring-after(UD, '://')"/>
<xsl:variable name="escaped_url"  select="substring-after(UE, '://')"/>

<xsl:variable name="display_url2">
  <xsl:choose>
    <xsl:when test="$display_url1">
      <xsl:value-of select="$display_url1"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$temp_url"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="display_url">
  <xsl:choose>
    <xsl:when test="$protocol='unc'">
      <xsl:call-template name="convert_unc">
        <xsl:with-param name="string" select="$display_url2"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$display_url2"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="stripped_url">
  <xsl:choose>
    <xsl:when test="$truncate_result_urls != '0'">
              <xsl:call-template name="truncate_url">
                <xsl:with-param name="t_url" select="$display_url"/>
              </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
          <xsl:value-of select="$display_url"/>
        </xsl:otherwise>
      </xsl:choose>
</xsl:variable>

<xsl:variable name="crowded_url" select="HN/@U"/>
<xsl:variable name="crowded_display_url1" select="HN"/>
<xsl:variable name="crowded_display_url">
  <xsl:choose>
    <xsl:when test="$protocol='unc'">
      <xsl:call-template name="convert_unc">
        <xsl:with-param name="string" select="substring-after($crowded_display_url1,'://')"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$crowded_display_url1"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="lower" select="'abcdefghijklmnopqrstuvwxyz'"/>
<xsl:variable name="upper" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>

<xsl:variable name="url_indexed" select="not(starts-with($temp_url, 'noindex!/'))"/>

<!-- *** Indent as required (only supports 2 levels) *** -->
<xsl:if test="@L='2'">
  <xsl:text disable-output-escaping="yes">&lt;blockquote class=&quot;g&quot;&gt;</xsl:text>
</xsl:if>

<!-- *** Result Header *** -->
<p class="g">

<xsl:variable name="apps_domain">
  <xsl:if test="starts-with($stripped_url, 'sites.google.com/a/') or
                starts-with($stripped_url, 'docs.google.com/a/') or
                starts-with($stripped_url, 'spreadsheets.google.com/a/')">
    <xsl:value-of
      select="substring-before(substring-after($stripped_url, '/a/'), '/')"/>
  </xsl:if>
</xsl:variable>

<!-- *** Google Sites icon *** -->
<xsl:if test="starts-with($stripped_url, 'sites.google.com/')">
  <img src="{$sites_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google Docs icon *** -->
<xsl:if test="starts-with($stripped_url, concat('docs.google.com/a/', $apps_domain, '/View?')) or
              RF[@NAME='type']/@VALUE='document'">
  <img src="{$docs_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google Spreadsheets icon *** -->
<xsl:if test="starts-with($stripped_url, 'spreadsheets.google.com/') or
               RF[@NAME='type']/@VALUE='spreadsheet'">
  <img src="{$spreadsheets_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google Presentations icon *** -->
<!-- TODO(timg): remove once Docs eliminates SimplePresentaionView URLs -->
<xsl:if test="starts-with($stripped_url,
                          concat('docs.google.com/a/', $apps_domain, '/SimplePresentationView?')) or
              starts-with($stripped_url,
                          concat('docs.google.com/a/', $apps_domain, '/PresentationView?')) or
              RF[@NAME='type']/@VALUE='presentation'">
  <img src="{$presentations_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google PDF viewer icon *** -->
<xsl:if test="RF[@NAME='type']/@VALUE='pdf'">
  <img src="{$pdf_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google Drawing icon *** -->
<xsl:if test="RF[@NAME='type']/@VALUE='drawing'">
  <img src="{$drawing_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** GMail icon *** -->
<xsl:if test="starts-with($stripped_url, 'mail.google.com') or
              RF[@NAME='type']/@VALUE='mail'">
  <img src="{$email_icon}" alt="" height="16" width="16"/>&#xA0;
</xsl:if>

<!-- *** Translation button -->
<xsl:variable name="res_num" select="@N"/>
<xsl:if test="$show_translation = '1' and $only_apps != '1'">
  <span class="trns-span" id="sec_trns_elem_span_{$res_num}"></span>
</xsl:if>

<!-- *** Result Title (including PDF tag and hyperlink) *** -->
<xsl:if test="$show_res_title != '0'">
  <span class="mime"><strong>
  <xsl:choose>
    <xsl:when test="@MIME='text/html' or @MIME='' or not(@MIME)"></xsl:when>
    <xsl:when test="@MIME='text/plain'">[TEXT]</xsl:when>
    <xsl:when test="@MIME='application/rtf'">[RTF]</xsl:when>
    <xsl:when test="@MIME='application/pdf'">[PDF]</xsl:when>
    <xsl:when test="@MIME='application/postscript'">[PS]</xsl:when>
    <xsl:when test="@MIME='application/vnd.ms-powerpoint' or @MIME='application/vnd.openxmlformats-officedocument.presentationml.presentation'">[MS POWERPOINT]</xsl:when>
    <xsl:when test="@MIME='application/vnd.ms-excel' or @MIME='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'">[MS EXCEL]</xsl:when>
    <xsl:when test="@MIME='application/msword' or @MIME='application/vnd.openxmlformats-officedocument.wordprocessingml.document'">[MS WORD]</xsl:when>
    <xsl:otherwise>
      <xsl:variable name="extension">
        <xsl:call-template name="last_substring_after">
          <xsl:with-param name="string" select="substring-after(
                                                $temp_url,
                                                '/')"/>
          <xsl:with-param name="separator" select="'.'"/>
          <xsl:with-param name="fallback" select="'UNKNOWN'"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:if test="string-length($extension) &lt;= 5">
        [<xsl:value-of select="translate($extension,$lower,$upper)"/>]
      </xsl:if>
    </xsl:otherwise>
  </xsl:choose>
  </strong></span>
  <xsl:text> </xsl:text>

  <xsl:variable name="link"
   select="$url_indexed and not(starts-with(U, $googleconnector_protocol))"/>

  <xsl:if test="$link">

    <xsl:text disable-output-escaping='yes'>&lt;a 
          ctype="c"
    </xsl:text>
          rank=&quot;<xsl:value-of select="position()"/>&quot;
    <xsl:text disable-output-escaping='yes'>
          href="</xsl:text>

    <xsl:choose>
      <xsl:when test="starts-with(U, $dbconnector_protocol)">
        <xsl:variable name="cache_encoding">
          <xsl:choose>
            <xsl:when test="'' != HAS/C/@ENC"><xsl:value-of select="HAS/C/@ENC"/></xsl:when>
            <xsl:otherwise>UTF-8</xsl:otherwise>
          </xsl:choose>
          </xsl:variable><xsl:value-of select="$gsa_search_root_path_prefix"/>?q=cache:<xsl:value-of select="HAS/C/@CID"/>:<xsl:value-of select="$stripped_url"/>+<xsl:value-of select="$stripped_search_query"/>&amp;<xsl:value-of select="$base_url"/>&amp;oe=<xsl:value-of select="$cache_encoding"/>
      </xsl:when>

      <xsl:when test="starts-with(U, $db_url_protocol)">
        <xsl:value-of disable-output-escaping='yes'
                      select="concat('db/', $temp_url)"/>
      </xsl:when>
      <!-- *** URI for smb or NFS must be escaped because it appears in the URI query *** -->
      <xsl:when test="$protocol='nfs' or $protocol='smb'">
        <xsl:value-of disable-output-escaping='yes'
                      select="concat($protocol,'/',$temp_url)"/>
      </xsl:when>
      <xsl:when test="$protocol='unc'">
        <xsl:value-of disable-output-escaping='yes' select="concat('file://', $display_url2)"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of disable-output-escaping='yes' select="U"/>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:text disable-output-escaping='yes'>"&gt;</xsl:text>
  </xsl:if>
  <span id="title_{$res_num}" class="l">
  <xsl:choose>
    <xsl:when test="T">
      <span class= "goog-trans-section l" transId="gadget_{$res_num}">
        <xsl:call-template name="reformat_keyword">
          <xsl:with-param name="orig_string" select="T"/>
        </xsl:call-template>
      </span>
    </xsl:when>
    <xsl:otherwise><xsl:value-of select="$stripped_url"/></xsl:otherwise>
  </xsl:choose>
  </span>
  <xsl:if test="$link">
      <xsl:text disable-output-escaping='yes'>&lt;/a&gt;</xsl:text>
  </xsl:if>
</xsl:if>


<!-- *** Snippet Box *** -->
<div class="wrapper">
  <div class="gsa-row">
    <div class="col s">
              <xsl:if test="$show_res_snippet != '0' and string-length(S) and
                    $only_apps != '1'">
        <span id="snippet_{$res_num}" class= "goog-trans-section snippet-details" transId="gadget_{$res_num}">
          <xsl:call-template name="reformat_keyword">
            <xsl:with-param name="orig_string" select="S"/>
          </xsl:call-template>
        </span>
      </xsl:if>

      <!-- *** Meta tags *** -->
      <xsl:if test="$show_meta_tags != '0' and $only_apps != '1'">
        <xsl:apply-templates select="MT"/>
      </xsl:if>

      <xsl:if test="$only_apps != '1' and
                    ($show_res_snippet != '0' and string-length(S)) or
                    ($show_meta_tags != '0' and MT[(@N != '') or (@V != '')])">
      <br/>
      </xsl:if>

      <!-- *** URL *** -->
      <xsl:if test="$only_apps != '1' or
                    ($only_apps = '1' and $show_apps_segmented_ui != '1')">
      <span class="index-details">
        <xsl:choose>
          <xsl:when test="not($url_indexed)">
            <xsl:if test="($show_res_size!='0') or
                          ($show_res_date!='0') or
                          ($show_res_cache!='0')">
              <xsl:text>Not Indexed:</xsl:text>
              <xsl:value-of select="$stripped_url"/>:
            </xsl:if>
          </xsl:when>
          <xsl:otherwise>
            <xsl:if test="$show_res_url != '0'">
              <xsl:value-of select="$stripped_url"/>
            </xsl:if>
          </xsl:otherwise>
        </xsl:choose>
      </span>
      </xsl:if>

      <!-- *** Miscellaneous (- size - date - cache) *** -->
      <xsl:if test="$url_indexed">
      <xsl:choose>
        <xsl:when test="'' != HAS/C/@ENC">
         <xsl:apply-templates select="HAS/C">
                       <xsl:with-param name="stripped_url" select="$stripped_url"/>
                       <xsl:with-param name="escaped_url" select="$escaped_url"/>
                       <xsl:with-param name="query" select="$query"/>
                       <xsl:with-param name="mime" select="@MIME"/>
                       <xsl:with-param name="date" select="FS[@NAME='date']/@VALUE"/>
                       <xsl:with-param name="result_num" select="$res_num"/>
         </xsl:apply-templates>
        </xsl:when>
        <xsl:otherwise>
        <xsl:call-template name="showdate">
            <xsl:with-param name="date" select="FS[@NAME='date']/@VALUE"/>
        </xsl:call-template>
        </xsl:otherwise>
        </xsl:choose>
      </xsl:if>

      <!-- *** Link to more links from this site *** -->
      <xsl:if test="HN">
        <br/>
        <xsl:choose>
          <xsl:when test="HN/@MDT != ''">
            <xsl:variable name="crowded_metatag" select="HN/@MDT"/>
            <xsl:variable name="crowded_metavalue" select="HN/@MDV"/>
            <xsl:variable name="crowded_matchtype" select="HN/@MCT"/>

            <!-- *** search_url_with_metadata *** -->
            <xsl:variable name="search_url_with_metadata">
              <xsl:for-each
                  select="/GSP/PARAM[(@name != 'start') and
                                     (@name != $embedded_mode_root_path_param) and
                                     (@name != $embedded_mode_resource_root_path_param) and
                                     (@name != $embedded_mode_disable_style) and
                                     (@name != 'swrnum') and
                                     (@name != 'expertsearchasync') and
                                     (@name != 'epoch' or $is_test_search != '') and
                                     not(starts-with(@name, 'metabased_'))]">
                <xsl:choose>
                  <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
                    <!-- do nothing to remove 'ip' from the URL -->
                  </xsl:when>
                  <xsl:when test="@name = 'q'">
                    <xsl:value-of select="@name"/>
                    <xsl:text>=</xsl:text>
                    <xsl:value-of select="@original_value"/>
                    <xsl:text>+inmeta:</xsl:text>
                    <xsl:call-template name="term-escape">
                      <xsl:with-param name="val" select="$crowded_metatag"/>
                    </xsl:call-template>
                    <xsl:choose>
                      <xsl:when test="$crowded_matchtype = 'inexact'">
                        <xsl:text>~</xsl:text>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>=</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="term-escape">
                      <xsl:with-param name="val" select="$crowded_metavalue"/>
                    </xsl:call-template>
                    <xsl:if test="$crowded_matchtype = 'wildcard'">
                      <xsl:text>*</xsl:text>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="@name = 'only_apps' and $show_apps_segmented_ui = '1'">
                    <xsl:value-of select="'exclude_apps=1'" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
                    <xsl:value-of select="@original_value"/>
                  </xsl:otherwise>
                </xsl:choose>
                <xsl:if test="position() != last()">
                  <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
                </xsl:if>
              </xsl:for-each>
            </xsl:variable>

            <!-- Show "More results" message depending on the type of metadata match-->
            <xsl:variable name="match_type_msg">
              <xsl:choose>
                <xsl:when test="$crowded_matchtype = 'inexact'">
                  where metatag <xsl:value-of select="$crowded_metatag"/> contains <xsl:value-of select="$crowded_metavalue"/>
                </xsl:when>
                <xsl:otherwise> <!-- Exact match -->
                  that exactly contains metadata <xsl:value-of select="$crowded_metatag"/>=<xsl:value-of select="$crowded_metavalue"/>
                  <xsl:if test = "$crowded_matchtype = 'wildcard'">
                    <xsl:text>*</xsl:text>
                  </xsl:if>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            [
              <a ctype="sitesearch" class="f" href="{$gsa_search_root_path_prefix}?as_sitesearch={$crowded_url}&amp;{$search_url_with_metadata}">
                More results from <xsl:value-of select="$crowded_display_url"/>
                <xsl:value-of select="$match_type_msg" />
              </a>
            ]

          </xsl:when>
          <xsl:otherwise>
            [<a ctype="sitesearch" class="f" href="{$gsa_search_root_path_prefix}?as_sitesearch={$crowded_url}&amp;{
                $search_url}">More results from <xsl:value-of select="$crowded_display_url"/></a>
            ]
          </xsl:otherwise>
        </xsl:choose>
      <!-- *** Link to aggregated results from database source *** -->
      <xsl:if test="starts-with($crowded_url, $db_url_protocol)">
      [
      <a ctype="db" class="f" href="dbaggr?sitesearch={$crowded_url}&amp;{
        $search_url}&amp;filter=0">View all data</a>
          ]
        </xsl:if>
      </xsl:if>


      <!-- *** Result Footer *** -->
    </div>
  </div>
</div>
</p>

<!-- *** End indenting as required (only supports 2 levels) *** -->
<xsl:if test="@L='2'">
  <xsl:text disable-output-escaping="yes">&lt;/blockquote&gt;</xsl:text>
</xsl:if>

</xsl:template>

<!-- **********************************************************************
Meta tag values within a result (do not customize)
   ********************************************************************** -->
<xsl:template match="MT">
<br/>
<span class="f"><xsl:value-of select="@N"/>: </span><xsl:value-of select="@V"/>
</xsl:template>

<!-- **********************************************************************
A single keymatch result (do not customize)
   ********************************************************************** -->
<xsl:template match="GM">
<p>
  <div class="wrapper keymatch">
    <div class="gsa-row">
      <div class="col">
        <a ctype="keymatch" href="{GL}">
          <xsl:value-of select="substring-before(GD,'#')"/>
        </a>
        <span class="keymatch-desc"><xsl:value-of select="substring-after(GD,'#')"/></span>
        <font size="-1" color="{$res_url_color}">
          <span class="a">
             <xsl:value-of select="GL"/>
          </span>
        </font>
      </div>
    </div>
  </div>
</p>
</xsl:template>


<!-- **********************************************************************
Variables for reformatting keyword-match display (do not customize)
   ********************************************************************** -->
<xsl:variable name="keyword_orig_start" select="'&lt;b&gt;'"/>
<xsl:variable name="keyword_orig_end" select="'&lt;/b&gt;'"/>

<xsl:variable name="keyword_reformat_start">
<xsl:if test="$res_keyword_format">
  <xsl:text>&lt;</xsl:text>
  <xsl:value-of select="$res_keyword_format"/>
  <xsl:text>&gt;</xsl:text>
</xsl:if>
<xsl:if test="($res_keyword_size) or ($res_keyword_color)">
<xsl:text>&lt;font</xsl:text>
<xsl:if test="$res_keyword_size">
  <xsl:text> size="</xsl:text>
  <xsl:value-of select="$res_keyword_size"/>
  <xsl:text>"</xsl:text>
</xsl:if>
<xsl:if test="$res_keyword_color">
  <xsl:text> color="</xsl:text>
  <xsl:value-of select="$res_keyword_color"/>
  <xsl:text>"</xsl:text>
</xsl:if>
<xsl:text>&gt;</xsl:text>
</xsl:if>
</xsl:variable>

<xsl:variable name="keyword_reformat_end">
<xsl:if test="($res_keyword_size) or ($res_keyword_color)">
  <xsl:text>&lt;/font&gt;</xsl:text>
</xsl:if>
<xsl:if test="$res_keyword_format">
  <xsl:text>&lt;/</xsl:text>
  <xsl:value-of select="$res_keyword_format"/>
  <xsl:text>&gt;</xsl:text>
</xsl:if>
</xsl:variable>

<!-- **********************************************************************
Reformat the keyword match display in a title/snippet string
   (do not customize)
   ********************************************************************** -->
<xsl:template name="reformat_keyword">
<xsl:param name="orig_string"/>

<xsl:variable name="reformatted_1">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="$keyword_orig_start"/>
    <xsl:with-param name="replace" select="$keyword_reformat_start"/>
    <xsl:with-param name="string" select="$orig_string"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="reformatted_2">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="$keyword_orig_end"/>
    <xsl:with-param name="replace" select="$keyword_reformat_end"/>
    <xsl:with-param name="string" select="$reformatted_1"/>
  </xsl:call-template>
</xsl:variable>

<xsl:value-of disable-output-escaping='yes' select="$reformatted_2"/>

</xsl:template>


<!-- **********************************************************************
Helper templates for generating a result item (do not customize)
   ********************************************************************** -->

<!-- *** Miscellaneous: - size - date - cache *** -->
<xsl:template match="C">
  <xsl:param name="stripped_url"/>
  <xsl:param name="escaped_url"/>
  <xsl:param name="query"/>
  <xsl:param name="mime"/>
  <xsl:param name="date"/>
  <xsl:param name="result_num"/>

  <xsl:variable name="docid"><xsl:value-of select="@CID"/></xsl:variable>

  <xsl:if test="$show_res_size != '0'">
  <xsl:if test="not(@SZ='')">
      <span class="index-details">
        <xsl:text> - </xsl:text>
        <xsl:value-of select="@SZ"/>
      </span>
  </xsl:if>
  </xsl:if>

  <xsl:call-template name="showdate">
      <xsl:with-param name="date" select="$date"/>
  </xsl:call-template>

  <xsl:if test="$show_res_cache != '0'">
     <span class="index-details">
      <xsl:text> - </xsl:text>
      </span>
      <xsl:variable name="cache_encoding">
        <xsl:choose>
          <xsl:when test="'' != @ENC"><xsl:value-of select="@ENC"/></xsl:when>
          <xsl:otherwise>UTF-8</xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <a ctype="cache" id="cache_link_{$result_num}" class="f"
            href="{$gsa_search_root_path_prefix}?q=cache:{$docid}:{$escaped_url}+{
                  $stripped_search_query}&amp;{$base_url}&amp;oe={$cache_encoding}">
        <xsl:choose>
          <xsl:when test="not($mime)">Cached</xsl:when>
          <xsl:when test="$mime='text/html'">Cached</xsl:when>
          <xsl:when test="$mime='text/plain'">Cached</xsl:when>
          <xsl:otherwise>Text Version</xsl:otherwise>
        </xsl:choose>
      </a>
      <xsl:if test="$show_translation = '1' and $only_apps != '1'">
        <xsl:call-template name="nbsp3"/>
        <a ctype="cache" id="translate_cache_link_{$result_num}" class="f trns-cache-link"
            href="{$gsa_search_root_path_prefix}?q=cache:{$docid}:{$escaped_url}+{
                 $stripped_search_query}&amp;{$base_url}&amp;oe={$cache_encoding}">Translated
        </a>
      </xsl:if>
  </xsl:if>

</xsl:template>

<xsl:template name="showdate">
  <xsl:param name="date"/>

  <xsl:if test="$show_res_date != '0'">
  <xsl:if test="($date != '')">
      <span class="index-details">
      <xsl:text> - </xsl:text>
      <xsl:value-of select="$date"/>
      </span>
  </xsl:if>
  </xsl:if>
</xsl:template>


<!-- **********************************************************************
Google navigation bar in result page (do not customize)
   ********************************************************************** -->
<xsl:template name="google_navigation">
  <xsl:param name="prev"/>
  <xsl:param name="next"/>
  <xsl:param name="view_begin"/>
  <xsl:param name="view_end"/>
  <xsl:param name="guess"/>
  <xsl:param name="navigation_style"/>
  <xsl:param name="dynamic_nav_bar"/>

<!-- *** Override the navigation style to 'simple' type if result estimation
         is not available and the navigation type has been specified
         as 'google'. *** -->
<xsl:variable name="navigation_style_to_use">
  <xsl:choose>
    <xsl:when test="$navigation_style = 'google' and $guess = ''">simple</xsl:when>
    <xsl:otherwise><xsl:value-of select="$navigation_style"/></xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="fontclass">
  <xsl:choose>
    <xsl:when test="$navigation_style_to_use = 'top'
        and $dynamic_nav_bar = '1'">dn-bar-nav</xsl:when>
    <xsl:when test="$navigation_style_to_use = 'top'">s</xsl:when>
    <xsl:otherwise></xsl:otherwise> <!-- changed from 'b' to '' so this can be controlled via CSS more easily -->
  </xsl:choose>
</xsl:variable>

<!-- *** Test to see if we should even show navigation *** -->
<xsl:if test="($prev) or ($next)">

<!-- *** Start Google result navigation bar *** -->

  <xsl:if test="$navigation_style_to_use != 'top'">
    <xsl:text disable-output-escaping="yes">&lt;div class=&quot;n&quot;&gt;</xsl:text>
  </xsl:if>
  <div class="wrapper">
    <div class="gsa-row">
      <!-- *** Show previous navigation, if available *** -->
      <ul class="n-ul">
      <xsl:choose>
        <xsl:when test="$prev">
          <li class="{$fontclass}">
            <a ctype="nav.prev"
               href="{$gsa_search_root_path_prefix}?{$search_url}&amp;start={$view_begin - $num_results - 1}">
            <xsl:if test="$navigation_style_to_use = 'google'">
              <img src="{$gsa_resource_root_path_prefix}/nav_previous.gif" width="68" height="26" alt="Previous" border="0"/>
             </xsl:if>
            <xsl:if test="$navigation_style_to_use = 'top'">
              <xsl:text>&lt;</xsl:text><xsl:call-template name="nbsp"/>
            </xsl:if>
            <xsl:text>Previous</xsl:text>
          </a>
          </li>
        </xsl:when>
      <xsl:otherwise>
        <xsl:if test="$navigation_style_to_use = 'google'">
          <img src="{$gsa_resource_root_path_prefix}/nav_first.png" width="18" height="26" alt="First" border="0"/>
        </xsl:if>
      </xsl:otherwise>
      </xsl:choose>    
      <xsl:if test="($navigation_style_to_use = 'google') or
                    ($navigation_style_to_use = 'link')">
<!-- *** Google result set navigation *** -->
      <xsl:variable name="mod_end">
        <xsl:choose>
          <xsl:when test="$next"><xsl:value-of select="$guess"/></xsl:when>
          <xsl:otherwise><xsl:value-of select="$view_end"/></xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:call-template name="result_nav">
        <xsl:with-param name="start" select="0"/>
        <xsl:with-param name="end" select="$mod_end"/>
        <xsl:with-param name="current_view" select="($view_begin)-1"/>
        <xsl:with-param name="navigation_style" select="$navigation_style_to_use"/>
      </xsl:call-template>
      </xsl:if>

        <!-- *** Show next navigation, if available *** -->
      <xsl:choose>
        <xsl:when test="$next">
          <li class="{$fontclass}">
          <a ctype="nav.next" href="{$gsa_search_root_path_prefix}?{$search_url}&amp;start={$view_begin +
            $num_results - 1}">
            <xsl:if test="$navigation_style_to_use = 'google'">
              <img src="{$gsa_resource_root_path_prefix}/nav_next.png" width="100" height="26" alt="Next" border="0"/>
            </xsl:if>
            <xsl:text>Next</xsl:text>
            <xsl:if test="$navigation_style_to_use = 'top'">
              <xsl:call-template name="nbsp"/><xsl:text>&gt;</xsl:text>
            </xsl:if>
          </a>
          </li>
        </xsl:when>
        <xsl:otherwise>
          <xsl:if test="$navigation_style_to_use = 'google'">
            <img src="{$gsa_resource_root_path_prefix}/nav_last.png" width="46" height="26" alt="Last" border="0"/>
          </xsl:if>
        </xsl:otherwise>
      </xsl:choose>
      </ul>
        <!-- *** End Google result bar *** -->
    </div>
  </div>
  <xsl:if test="$navigation_style_to_use != 'top'">
    <xsl:text disable-output-escaping="yes">&lt;/div&gt;</xsl:text>
  </xsl:if>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Helper templates for generating Google result navigation (do not customize)
 only shows 10 sets up or down from current view
   ********************************************************************** -->
<xsl:template name="result_nav">
<xsl:param name="start" select="'0'"/>
<xsl:param name="end"/>
<xsl:param name="current_view"/>
<xsl:param name="navigation_style"/>

<!-- *** Choose how to show this result set *** -->
<xsl:choose>
  <xsl:when test="($start)&lt;(($current_view)-(10*($num_results)))">
  </xsl:when>
  <xsl:when test="(($current_view)&gt;=($start)) and
                  (($current_view)&lt;(($start)+($num_results)))">
    <li>
      <xsl:if test="$navigation_style = 'google'">
        <img src="{$gsa_resource_root_path_prefix}/nav_current.gif" width="16" height="26" alt="Current"/>
      </xsl:if>
      <span class="i"><xsl:value-of
        select="(($start)div($num_results))+1"/></span>
    </li>
  </xsl:when>
  <xsl:otherwise>
    <li>
      <a ctype="nav.page" href="{$gsa_search_root_path_prefix}?{$search_url}&amp;start={$start}">
      <xsl:if test="$navigation_style = 'google'">
        <img src="{$gsa_resource_root_path_prefix}/nav_page.gif" width="16" height="26" alt="Navigation"
             border="0"/>
      </xsl:if>
      <xsl:value-of select="(($start)div($num_results))+1"/>
      </a>
    </li>
  </xsl:otherwise>
</xsl:choose>

<!-- *** Recursively iterate through result sets to display *** -->
<xsl:if test="((($start)+($num_results))&lt;($end)) and
              ((($start)+($num_results))&lt;(($current_view)+
              (10*($num_results))))">
  <xsl:call-template name="result_nav">
    <xsl:with-param name="start" select="$start+$num_results"/>
    <xsl:with-param name="end" select="$end"/>
    <xsl:with-param name="current_view" select="$current_view"/>
    <xsl:with-param name="navigation_style" select="$navigation_style"/>
  </xsl:call-template>
</xsl:if>

</xsl:template>


<!-- **********************************************************************
Top separation bar (do not customize)
   ********************************************************************** -->
<xsl:template name="top_sep_bar">
<xsl:param name="text"/>
<xsl:param name="show_info"/>
<xsl:param name="time"/>

  <xsl:if test="$show_custom_tabs != '0'">
    <xsl:call-template name="gsa_custom_tabs"/>
  </xsl:if>  

  <div class="wrapper clearfix">
    <div class="gsa-row">
      <div class="col seperator-bar">
         <div class="timing">
         <xsl:if test="$show_info != 0">
          <span class="search-stats">
          <xsl:if test="count(/GSP/RES/R)>0 ">
            <xsl:choose>
              <xsl:when test="(($access = 's' or $access = 'a') and /GSP/RES/M = '')">
                Results <b><xsl:value-of select="RES/@SN"/></b> - <b id="num_results"><xsl:value-of select="RES/@EN"/></b> for <b><xsl:value-of select="$space_normalized_query"/></b>.
              </xsl:when>
              <xsl:otherwise>
                Currently showing <b><xsl:value-of select="RES/@SN"/></b> - <b id="num_results"><xsl:value-of select="RES/@EN"/></b> of about <b><xsl:value-of select="RES/M"/></b> results for <b><xsl:value-of select="$space_normalized_query"/></b>.
              </xsl:otherwise>
            </xsl:choose>
          </xsl:if>
          <xsl:if test="$show_timing_label !=0">
            Search took <span style="font-weight: bold;" id="search_time"><xsl:value-of select="round($time * 100.0) div 100.0"/></span> seconds.
          </xsl:if>
          <xsl:if test="$show_sort_by != '0'">
              <xsl:call-template name="sort_by"/>
          </xsl:if>
          </span>
        </xsl:if>  
         </div>
      </div> 
    </div>
  </div>
  <hr class="z"/>
  <xsl:if test="$choose_sep_bar = 'line'">
    <hr size="1" color="gray"/>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
Analytics script (do not customize)
   ********************************************************************** -->
<xsl:template name="analytics">
<xsl:if test="string-length($analytics_account) != 0">
 <script type="text/javascript" src="{$analytics_script_url}"></script>
 <script type="text/javascript">
   var pageTracker = _gat._getTracker("<xsl:value-of select='$analytics_account'/>");
   pageTracker._trackPageview();
 </script>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Utility function for constructing copyright text (do not customize)
   ********************************************************************** -->
<xsl:template name="copyright">
  <div class="copyright clearfix">
    <span class="powered-by">Powered by Google Search Appliance</span>
  </div>
</xsl:template>


<!-- **********************************************************************
Utility functions for generating html entities
   ********************************************************************** -->
<xsl:template name="nbsp">
<xsl:text disable-output-escaping="yes">&amp;nbsp;</xsl:text>
</xsl:template>
<xsl:template name="nbsp3">
<xsl:call-template name="nbsp"/>
<xsl:call-template name="nbsp"/>
<xsl:call-template name="nbsp"/>
</xsl:template>
<xsl:template name="nbsp4">
<xsl:call-template name="nbsp3"/>
<xsl:call-template name="nbsp"/>
</xsl:template>
<xsl:template name="quot">
<xsl:text disable-output-escaping="yes">&amp;quot;</xsl:text>
</xsl:template>
<xsl:template name="rsaquo">
<dfn><xsl:text disable-output-escaping="yes">&amp;#8250;</xsl:text></dfn>
</xsl:template>
<xsl:template name="endash">
<xsl:text disable-output-escaping="yes">&amp;#8211;</xsl:text>
</xsl:template>
<xsl:template name="copy">
<xsl:text disable-output-escaping="yes">&amp;copy;</xsl:text>
</xsl:template>

<!-- **********************************************************************
Utility functions for generating head elements so that the XSLT processor
won't add a meta tag to the output, since it may specify the wrong
encoding (utf8) in the meta tag.
   ********************************************************************** -->
<xsl:template name="plainHeadStart">
<xsl:text disable-output-escaping="yes">&lt;head&gt;</xsl:text>
<meta name="robots" content="NOINDEX,NOFOLLOW"/>
<xsl:text>
</xsl:text>
</xsl:template>
<xsl:template name="plainHeadEnd">
<xsl:text disable-output-escaping="yes">&lt;/head&gt;</xsl:text>
<xsl:text>
</xsl:text>
</xsl:template>


<!-- **********************************************************************
Utility functions for generating head elements with a meta tag to the output
specifying the character set as requested
   ********************************************************************** -->
<xsl:template name="langHeadStart">
<xsl:if test="$is_embedded_mode != '1'">
<xsl:text disable-output-escaping="yes">&lt;head&gt;</xsl:text>
<meta name="robots" content="NOINDEX,NOFOLLOW"/>
<meta name="viewport" content="width=device-width, target-densitydpi=160dpi, initial-scale=1"/>
<xsl:choose>
  <xsl:when test="PARAM[(@name='oe') and (@value='utf8')]">
    <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='oe') and (@value!='')]">
    <meta http-equiv="content-type" content="text/html; charset={PARAM[@name='oe']/@value}"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-CN')]">
    <meta http-equiv="content-type" content="text/html; charset=GB2312"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-TW')]">
    <meta http-equiv="content-type" content="text/html; charset=Big5"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_cs')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_da')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_nl')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_en')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_et')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_fi')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_fr')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_de')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_el')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-7"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_iw')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-8-I"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_hu')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_is')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_it')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_ja')]">
    <meta http-equiv="content-type" content="text/html; charset=Shift_JIS"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_ko')]">
    <meta http-equiv="content-type" content="text/html; charset=EUC-KR"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_lv')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_lt')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_no')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_pl')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_pt')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_ro')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_ru')]">
    <meta http-equiv="content-type" content="text/html; charset=windows-1251"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_es')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_sv')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:otherwise>
    <meta http-equiv="content-type" content="text/html; charset="/>
  </xsl:otherwise>
</xsl:choose>
</xsl:if>
<!-- UAR v2 - Load the right CSS file for the UAR UI component,
     as required. This should be placed in the head section of the
     document. -->
<xsl:if test="$show_onebox != '0'">
  <xsl:if test="/GSP/ENTOBRESULTS/OBRES/provider = $uar_provider">
  <xsl:choose>
    <xsl:when test="$document_direction = 'rtl'">
      <link rel="stylesheet"
          href="{$gsa_resource_root_path_prefix}/uardesktop_rtl.css"
          type="text/css" />
    </xsl:when>
    <xsl:otherwise>
      <link rel="stylesheet"
          href="{$gsa_resource_root_path_prefix}/uardesktop.css"
          type="text/css" />
    </xsl:otherwise>
  </xsl:choose>
  <!-- Override below styles to change the look and feel of the UAR section by
       adding appropriate CSS style properties. -->
  <style>
    /**
     * Background (default: #f2f7ff) and border-color (default: #ebebeb)
     * property for the UAR section.
     */
    .gsa-uar-container {
    }
    /* Description title color. Default is #555. */
    .gsa-uar-container h2 {
    }
    /* Color of the URL text. Default is #0e774a. */
    .gsa-uar-record cite {
    }
    <xsl:if test="$is_disable_style_in_embedded_mode = '1'">
    .gsa-uar-container {
      background: none;
    }
    .oneboxResults .gsa-uar-url-field, .oneboxResults .gsa-uar-title-field {
      width: 99%;
    }
    </xsl:if>
  </style>
  </xsl:if>
</xsl:if>

<!-- Expert Search - Load the right CSS file for the expert search UI
     component. -->
<xsl:if test="$is_expert_search_configured = '1'">
  <xsl:call-template name="include_expert_search_css">
    <xsl:with-param name="doc_dir" select="$document_direction" />
    <xsl:with-param name="src_prefix" select="$gsa_resource_root_path_prefix" />
  </xsl:call-template>
  
  <xsl:if test="$is_disable_style_in_embedded_mode = '1'">
    <style type="text/css">
      .gsa-exp-container,
      .gsa-exp-header h2,
      .gsa-exp-header a,
      ol.gsa-exp-results li {
        font-size: inherit;
      }
      ol.gsa-exp-pagination a, ol.gsa-exp-pagination span {
        color: inherit;
      }
    </style>
  </xsl:if>
</xsl:if>
<script type="text/javascript">
  /* Returns the root path prefix for full-refresh search requests. */
  function GSA_getSearchRootPathPrefix() {
    return '<xsl:value-of select="$gsa_search_root_path_prefix" />';
  }
  /* Returns the root path prefix for resources. */
  function GSA_getResourceRootPathPrefix() {
    return '<xsl:value-of select="$gsa_resource_root_path_prefix" />';
  }
  /* Checks if the search results is accessed in embedded mode or not. */
  function GSA_isEmbeddedMode() {
    return <xsl:value-of
        select="if ($is_embedded_mode = '1') then 'true' else 'false'" />;
  }
</script>
<xsl:text>
</xsl:text>
</xsl:template>

<xsl:template name="langHeadEnd">
<xsl:if test="$is_embedded_mode != '1'">
<xsl:text disable-output-escaping="yes">&lt;/head&gt;</xsl:text>
</xsl:if>
<xsl:text>
</xsl:text>
</xsl:template>

<!-- *** Generates the <body> section for the search results page. *** -->
<xsl:template name="generate_html_body_for_search_results">
<!-- Import all required JavaScript modules based on enabled features. -->
<xsl:if test="$show_suggest = '1' or $show_res_clusters = '1'">
  <script type="text/javascript"
      src="{$gsa_resource_root_path_prefix}/common.js"></script>
  <script type="text/javascript"
      src="{$gsa_resource_root_path_prefix}/xmlhttp.js"></script>
  <script type="text/javascript"
      src="{$gsa_resource_root_path_prefix}/uri.js"></script>
</xsl:if>
<xsl:if test="$show_res_clusters = '1'">
  <script type="text/javascript"
      src="{$gsa_resource_root_path_prefix}/cluster.js"></script>
</xsl:if>
<!-- Add required JS function calls based on enabled features. -->
<xsl:variable name="ss_load_call">
  <!-- Initialize suggest control. -->
  <xsl:if test="$show_suggest != '0'">
    <xsl:text disable-output-escaping="yes">ss_sf();</xsl:text>
  </xsl:if>
</xsl:variable>
<xsl:variable name="cs_load_call">
  <!-- Initialize results clustering. -->
  <xsl:if test="$show_res_clusters = '1'">
    <xsl:text disable-output-escaping="yes">cs_loadClusters('</xsl:text>
    <xsl:value-of select="$search_url_escaped" />
    <xsl:text disable-output-escaping="yes">', cs_drawClusters);</xsl:text>
  </xsl:if>
</xsl:variable>

<!-- Do not render body tag in embedded mode. -->
<xsl:if test="$is_embedded_mode != '1'">
  <xsl:text disable-output-escaping="yes">&lt;</xsl:text>
  <xsl:text>body class="clearfix </xsl:text><xsl:value-of select="$skin_class"/><xsl:text>" onLoad="resetForms(); fixFileLinks();</xsl:text>
  <xsl:value-of select="$cs_load_call"/>
  <xsl:value-of select="$ss_load_call"/>
  <xsl:text disable-output-escaping="yes">" dir="ltr"&gt;</xsl:text>
  <xsl:text disable-output-escaping="yes">&lt;div id="container" class="schoolpage"&gt;</xsl:text>
  <xsl:call-template name="header_element"/>
  <xsl:call-template name="main_content_wrapper_start"/>
  <xsl:text disable-output-escaping="yes">&lt;div class="main-content"&gt;</xsl:text>
</xsl:if>
<!-- Render search results section. -->
<xsl:call-template name="search_results_body"/>
<!-- Load Suggest script. -->
<xsl:if test="$show_suggest = '1'">
  <xsl:call-template name="gsa_suggest" />
</xsl:if>
<!-- Make required onload JS calls directly when in embedded mode. -->
<xsl:if test="$is_embedded_mode = '1'">
  <script type="text/javascript">
    <xsl:value-of select="$cs_load_call"/>
  </script>
</xsl:if>
<!-- Create the input field element for expert search, if enabled. -->
<xsl:call-template name="include_expert_search_history_input" />
<!-- Initialize side bar if enabled. -->
<xsl:if test="$show_sidebar = '1'">
  <script type="text/javascript">
   initSidebar();
  </script>
</xsl:if>
<xsl:if test="$is_embedded_mode != '1'">
  <xsl:text disable-output-escaping="yes">&lt;/div&gt;</xsl:text>
    <!-- *** Customer's own result page footer *** -->
  <xsl:call-template name="footer_element"/>
  <xsl:call-template name="main_content_wrapper_end"/>
  <xsl:text disable-output-escaping="yes">&lt;/div&gt;</xsl:text>
  <xsl:text disable-output-escaping="yes">&lt;/body&gt;</xsl:text>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Utility functions (do not customize)
   ********************************************************************** -->

<!-- *** Find the substring after the last occurence of a separator *** -->
<xsl:template name="last_substring_after">

<xsl:param name="string"/>
<xsl:param name="separator"/>
<xsl:param name="fallback"/>

<xsl:variable name="newString"
  select="substring-after($string, $separator)"/>

<xsl:choose>
  <xsl:when test="$newString!=''">
    <xsl:call-template name="last_substring_after">
      <xsl:with-param name="string" select="$newString"/>
      <xsl:with-param name="separator" select="$separator"/>
      <xsl:with-param name="fallback" select="$newString"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$fallback"/>
  </xsl:otherwise>
</xsl:choose>

</xsl:template>

<!-- *** Find and replace *** -->
<xsl:template name="replace_string">
<xsl:param name="find"/>
<xsl:param name="replace"/>
<xsl:param name="string"/>
<xsl:choose>
  <xsl:when test="contains($string, $find)">
    <xsl:value-of select="substring-before($string, $find)"/>
    <xsl:value-of select="$replace"/>
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="$find"/>
      <xsl:with-param name="replace" select="$replace"/>
      <xsl:with-param name="string"
        select="substring-after($string, $find)"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$string"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<!-- *** Decode hex encoding *** -->
<xsl:template name="decode_hex">
<xsl:param name="encoded" />

<xsl:variable name="hex" select="'0123456789ABCDEF'" />
<xsl:variable name="ascii"> !"#$%&amp;'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~</xsl:variable>

<xsl:choose>
  <xsl:when test="contains($encoded,'%')">
    <xsl:value-of select="substring-before($encoded,'%')" />
    <xsl:variable name="hexpair" select="translate(substring(substring-after($encoded,'%'),1,2),'abcdef','ABCDEF')" />
    <xsl:variable name="decimal" select="(string-length(substring-before($hex,substring($hexpair,1,1))))*16 + string-length(substring-before($hex,substring($hexpair,2,1)))" />
    <xsl:choose>
      <xsl:when test="$decimal &lt; 127 and $decimal &gt; 31">
        <xsl:value-of select="substring($ascii,$decimal - 31,1)" />
      </xsl:when>
      <xsl:when test="$decimal &gt; 159">
        <xsl:text disable-output-escaping="yes">%</xsl:text>
        <xsl:value-of select="$hexpair" />
      </xsl:when>
      <xsl:otherwise>?</xsl:otherwise>
    </xsl:choose>
    <xsl:call-template name="decode_hex">
      <xsl:with-param name="encoded" select="substring(substring-after($encoded,'%'),3)" />
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$encoded" />
  </xsl:otherwise>
</xsl:choose>

</xsl:template>

<!-- *** Convert UNC *** -->
<xsl:template name="convert_unc">
<xsl:param name="string"/>
<xsl:variable name="slash">/</xsl:variable>
<xsl:variable name="backslash">\</xsl:variable>
<xsl:variable name="escaped_ampersand">&amp;amp;</xsl:variable>
<xsl:variable name="unescaped_ampersand">&amp;</xsl:variable>

<xsl:variable name="converted_1">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find"    select="$slash"/>
    <xsl:with-param name="replace" select="$backslash"/>
    <xsl:with-param name="string"  select="$string"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="converted_2">
  <xsl:call-template name="decode_hex">
    <xsl:with-param name="encoded" select="$converted_1"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="converted_3">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find"    select="$escaped_ampersand"/>
    <xsl:with-param name="replace" select="$unescaped_ampersand"/>
    <xsl:with-param name="string"  select="$converted_2"/>
  </xsl:call-template>
</xsl:variable>

<xsl:value-of disable-output-escaping='yes' select="concat($backslash,$backslash,$converted_3)"/>

</xsl:template>

<!-- **********************************************************************
Display error messages
   ********************************************************************** -->
<xsl:template name="error_page">
<xsl:param name="errorMessage"/>
<xsl:param name="errorDescription"/>

<html>
	<xsl:attribute name="class">
	<xsl:value-of select="$skin_class"/>
	</xsl:attribute>
  <xsl:call-template name="plainHeadStart"/>
    <title><xsl:value-of select="$error_page_title"/></title>
          <xsl:call-template name="style"/>
  <xsl:call-template name="plainHeadEnd"/>
  <body>
  	<xsl:attribute name="class">
	<xsl:value-of select="'clearfix'"/>
	<xsl:text>&#160;</xsl:text>
	<xsl:value-of select="$skin_class"/>
	</xsl:attribute>
	<xsl:attribute name="dir">ltr</xsl:attribute>
   <div id="container" class="schoolpage">
   <!--HEADER COMPONENTS-->
    <xsl:call-template name="header_element"/>
	<xsl:call-template name="main_content_wrapper_start"/>
    <div class="main-content" role="main">
    <xsl:call-template name="personalization"/>
    <xsl:call-template name="analytics"/>
	<xsl:if test="$show_logo != '0'">
              <table border="0" cellpadding="0" cellspacing="0">
                <tr>
                        <td rowspan="3" valign="top">
                        <xsl:call-template name="logo"/>
                        <xsl:call-template name="nbsp3"/>
                      </td>
                </tr>
              </table>
          </xsl:if>

    <xsl:call-template name="top_sep_bar">
      <xsl:with-param name="text" select="$sep_bar_error_text"/>
              <xsl:with-param name="show_info" select="0"/>
      <xsl:with-param name="time" select="0"/>
    </xsl:call-template>

    <p>
    <table width="99%" border="0" cellpadding="2" cellspacing="0">
      <tr>
        <td><font color="#990000" size="+1">Message:</font></td>
        <td><font color="#990000" size="+1"><xsl:value-of select="$errorMessage"/></font></td>
      </tr>
      <tr>
        <td><font color="#990000">Description:</font></td>
        <td><font color="#990000"><xsl:value-of select="$errorDescription"/></font></td>
      </tr>
      <tr>
        <td><font color="#990000">Details:</font></td>
        <td><font color="#990000"><xsl:copy-of select="/"/></font></td>
      </tr>
    </table>
    </p>

        <hr/>
        <xsl:call-template name="copyright"/>
    </div>
	<xsl:call-template name="footer_element"/>
	<xsl:call-template name="main_content_wrapper_end"/>
	</div>
  </body>
</html>
</xsl:template>


<!-- **********************************************************************
Google Desktop for Enterprise integration templates
   ********************************************************************** -->
<xsl:template name="desktop_tab">

<!-- *** Show the Google tabs *** -->

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.web" href="http://www.google.com/search?q={$qval}">Web</a>
</font>

<xsl:call-template name="nbsp4"/>

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.images"  href="http://images.google.com/images?q={$qval}">Images</a>
</font>

<xsl:call-template name="nbsp4"/>

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.groups" href="http://groups.google.com/groups?q={$qval}">Groups</a>
</font>

<xsl:call-template name="nbsp4"/>

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.news"  href="http://news.google.com/news?q={$qval}">News</a>
</font>

<xsl:call-template name="nbsp4"/>

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.local"  href="http://local.google.com/local?q={$qval}">Local</a>
</font>

<xsl:call-template name="nbsp4"/>

<!-- *** Show the desktop and web tabs *** -->

<xsl:if test="CUSTOM/HOME">
  <xsl:comment>trh2</xsl:comment>
</xsl:if>
<xsl:if test="Q">
  <xsl:comment>trl2</xsl:comment>
</xsl:if>

<!-- *** Show the appliance tab *** -->
<font size="-1"><b><xsl:value-of select="$egds_appliance_tab_label"/></b></font>

</xsl:template>

<xsl:template name="desktop_results">
<xsl:comment>tro2</xsl:comment>
</xsl:template>

<!-- **********************************************************************
OneBox results (if any)
   ********************************************************************** -->
<xsl:template name="onebox">
<xsl:for-each select="/GSP/ENTOBRESULTS">
  <xsl:apply-templates/>
</xsl:for-each>
</xsl:template>

<!-- **********************************************************************
Swallow unmatched elements
   ********************************************************************** -->
<xsl:template match="@*|node()"></xsl:template>

<!-- **********************************************************************
Tabs template
Author: Vinay Joseph (vinay@vinayjoseph.com)
Date: 16th December 2015
Notes: Please be sure to change the site query parameter to match the relevant collections
in a given tab. Also note that the variable frontend has been defined at the top of the stylesheet. 
*************************************************************************** -->
<xsl:template name="gsa_custom_tabs">
  <xsl:variable name="tabs">
    <tabs>
      <tab name="All" col="scu" ctype="All_tab"></tab>
      <tab name="Courses" col="courses" ctype="courses_tab"></tab>
      <tab name="Policies" col="policies" ctype="policies_tab"></tab>
      <tab name="Library" col="library" ctype="library_tab"></tab>
      <tab name="People" col="staff_directory" ctype="staff_tab"></tab>
    </tabs>
  </xsl:variable>
<link rel="stylesheet" type="text/css" href="{$custom_css_path}/collection_tabs.css"></link>
<div class="container" id="centeredmenu">
  <ul class="search-collection-list desktop"> 
      <xsl:variable name="current_collection" select="/GSP/PARAM[@name='site']/@value" />
      <xsl:for-each select="$tabs/tabs/tab">
          <xsl:variable name="col" select="@col"></xsl:variable>
           <xsl:choose>
            <xsl:when test="$current_collection=$col">
              <li class="search-collection-tab-item {$col}">
                <a href="{$gsa_search_root_path_prefix}?{$custom_tab_url}&amp;site={$col}" ctype="{@ctype}" class="active">                 
                  <xsl:value-of select="@name"></xsl:value-of>
                </a>
              </li>
            </xsl:when>
            <xsl:otherwise>
              <li class="search-collection-tab-item {$col}">
                <a href="{$gsa_search_root_path_prefix}?{$custom_tab_url}&amp;site={$col}" ctype="{@ctype}">
                  <xsl:value-of select="@name"></xsl:value-of> 
                </a>
              </li>
            </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
  </ul>
</div>
</xsl:template>

<!-- SCU XSL FUNCTION -->

</xsl:stylesheet>


<!-- *** END OF STYLESHEET *** -->



              ]]></stylesheet.en>
              <synonyms><![CDATA[

              ]]></synonyms>
              <wildcard_wc_filter><![CDATA[
200

              ]]></wildcard_wc_filter>
          </frontend>
          <frontend Name="oobe_frontend">
              <default_language><![CDATA[
'en'
              ]]></default_language>
              <profile_sheet><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '1', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '1', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '1', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '0', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet>
              <profile_sheet.en><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '1', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '1', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '1', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '0', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet.en>
              <access_control_allow_origin><![CDATA[


              ]]></access_control_allow_origin>
              <badurls_noreturn><![CDATA[

              ]]></badurls_noreturn>
              <content_type><![CDATA[
text/html
              ]]></content_type>
              <domain_filter><![CDATA[

              ]]></domain_filter>
              <filetype_filter><![CDATA[

              ]]></filetype_filter>
              <good_ips><![CDATA[
0.0.0.0/0

              ]]></good_ips>
              <googlematch><![CDATA[
engineering,KeywordMatch,http://courses.scu.edu.au/courses/bachelor-of-forest-science-and-management/2016,Engineering!

              ]]></googlematch>
              <lang_filter><![CDATA[

              ]]></lang_filter>
              <metatag_filter><![CDATA[

              ]]></metatag_filter>
              <query_expansion_filter><![CDATA[
QE_FULL

              ]]></query_expansion_filter>
              <query_expansion_meta_filter><![CDATA[
QE_META_NONE

              ]]></query_expansion_meta_filter>
              <scoring_policy_filter><![CDATA[

              ]]></scoring_policy_filter>
              <star_wildcard_default_filter><![CDATA[
1

              ]]></star_wildcard_default_filter>
              <synonyms><![CDATA[

              ]]></synonyms>
              <wildcard_wc_filter><![CDATA[
200

              ]]></wildcard_wc_filter>
          </frontend>
          <frontend Name="scu_experts">
              <default_language><![CDATA[
'en'
              ]]></default_language>
              <profile_sheet><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet>
              <profile_sheet.en><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet.en>
              <access_control_allow_origin><![CDATA[


              ]]></access_control_allow_origin>
              <badurls_noreturn><![CDATA[

              ]]></badurls_noreturn>
              <content_type><![CDATA[
text/html
              ]]></content_type>
              <domain_filter><![CDATA[

              ]]></domain_filter>
              <filetype_filter><![CDATA[

              ]]></filetype_filter>
              <good_ips><![CDATA[
0.0.0.0/0

              ]]></good_ips>
              <googlematch><![CDATA[

              ]]></googlematch>
              <lang_filter><![CDATA[

              ]]></lang_filter>
              <metatag_filter><![CDATA[

              ]]></metatag_filter>
              <query_expansion_filter><![CDATA[
QE_FULL

              ]]></query_expansion_filter>
              <query_expansion_meta_filter><![CDATA[
QE_META_NONE

              ]]></query_expansion_meta_filter>
              <scoring_policy_filter><![CDATA[

              ]]></scoring_policy_filter>
              <star_wildcard_default_filter><![CDATA[
1

              ]]></star_wildcard_default_filter>
              <stylesheet><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<!-- *** Expert Search Stylesheet *** -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
  <xsl:output method="html"/>
  <!--
    For checking the mode of this XSL's usage. Default is 0.
    1 - Enabled. Used during development.
    0 - Disabled. Used in production setup.
  -->
  <xsl:param name="test_mode" select="'0'" />

  <!-- *****************************************************************
                      Private variables and templates
                   PLEASE DO NOT ACCESS OUTSIDE THIS XSL

       See "Public variables and templates" section below to know what
       can be accessed outside this XSL.
       *****************************************************************  -->

  <!--
    Query param flag to detect  if current query is an expert search query.
    'true' - expert search query.
    'false' - not an expert search query.
    @private
  -->
  <xsl:variable name="is_expert_search_query_"
      select="/GSP/PARAM[@name='expertsearch']/@value" />

  <!--
    Query param flag to detect if the expert search is being accessed in
    expanded mode.
    'true' - is in expanded mode.
    @private
  -->
  <xsl:variable name="is_expanded_mode_"
      select="/GSP/PARAM[@name='expertsearchexpand']/@value" />

  <!--
    Current stylesheet in effect i.e. 'proxystylesheet='  param.
    @private
  -->
  <xsl:variable name="current_proxystylesheet_"
      select="/GSP/PARAM[@name='proxystylesheet']/@value" />

  <!--
    Number of results allowed per page. By default, it's 10. Incoming 'num'
    parameter can override the value to the desired number.
    @private
  -->
  <xsl:variable name="expert_results_per_page_">
    <xsl:choose>
      <xsl:when test="/GSP/PARAM[(@name='num') and (@value!='')]">
        <xsl:value-of select="/GSP/PARAM[@name='num']/@value"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="10"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <!--
    Current search query term in unescaped form.
    @private
  -->
  <xsl:variable name="current_query_unescaped_" select="/GSP/Q" />

  <!--
    Current search query term i.e. 'q=' param.
    @private
  -->
  <xsl:variable name="current_query_"
      select="encode-for-uri($current_query_unescaped_)" />

  <!--
    Original search query term i.e. 'q=' param used before navigating to the
    expanded mode. Used when returning back from the expanded mode to main
    results mode.
    @private
  -->
  <xsl:variable name="original_query_"
      select="/GSP/PARAM[@name='originalquery']/@original_value" />

  <!--
    Expert search stylesheet that initiated the expanded mode. This is used to
    go back to the original widget view results page from the expanded mode.
    @private
  -->
  <xsl:variable name="expert_search_proxystylesheet_"
      select="/GSP/PARAM[@name='expertsearchfrontend']/@value" />

  <!--
    The 'client=' query param that should be used to select frontend settings.
    This should be the value of 'proxystylesheet=' param because the expert
    search view is made accessible via the proxystylesheet. The expert search
    backend will read client= param to figure out the expert search config to
    use.
    @private
  -->
  <xsl:variable name="client_frontend_to_use_"
      select="$current_proxystylesheet_" />

  <!--
    Current collection in effect i.e. 'site=' query param.
    @private
  -->
  <xsl:variable name="current_collection_"
      select="/GSP/PARAM[@name='site']/@value" />

  <!--
    If the user is accessing the results page with JavaScript not enabled.
    'true' - if JavaScript is disabled.
    @private
  -->
  <xsl:variable name="noscript_mode_"
      select="/GSP/PARAM[@name='noscript_mode']/@value" />

  <!--
    The frontend used to present the expanded mode for the expert results.
    @private
  -->
  <xsl:variable name="expert_search_expand_mode_frontend_"
      select="/GSP/ExpertSearchConfig/ExpandedView/FrontendName" />

  <!--
    The text to be shown for detailed view link.
    @private
  -->
  <xsl:variable name="expert_search_detailed_view_text_"
      select="/GSP/ExpertSearchConfig/View/WidgetDetailedText" />

  <!--
    The text to be shown for widget header.
    @private
  -->
  <xsl:variable name="expert_search_heading_title_"
      select="/GSP/ExpertSearchConfig/View/WidgetHeaderText" />

  <!--
    Number of results that should be displayed per page in the widget view.
    @private
  -->
  <xsl:variable name="num_res_widget_view_"
      select="/GSP/ExpertSearchConfig/View/NumResultsToDisplayInWidget" />

  <!--
    Number of results that should be displayed per page in the expanded view.
    @private
  -->
  <xsl:variable name="num_res_expanded_view_"
      select="/GSP/ExpertSearchConfig/View/NumResultsToDisplayInExpandedMode" />

  <!--
    Query param flag to detect if the expert search is being accessed in
    asynchronous JavaScript mode.
    @private
  -->
  <xsl:variable name="is_expert_async_search_"
      select="/GSP/PARAM[@name='expertsearchasync']/@value"/>

  <!--
    Query param flag to detect if the expert search is secure search mode.
    @private
  -->
  <xsl:variable name="access_"
      select="/GSP/PARAM[@name='access']/@value"/>

  <!--
    Finds the given string and replaces the same with the specified string.

    Params:
      find: The string that should be searched.
      replace: The string that should be substituted.
      source: The source string on which search / replace should happen.
    Returns:
      The modified string with the requested substring replaced.
    @private
  -->
  <xsl:template name="find_and_replace_string_">
    <xsl:param name="find" />
    <xsl:param name="replace" />
    <xsl:param name="source" />
    <xsl:value-of select="replace($source, $find, $replace)" />
  </xsl:template>

  <!--
    Composes the query string used for fetching the expert search results.

    Params:
      src_prefix: The prefix that should be added to the query string.
      extra_args: Any extra query string arguments that should be added apart
          from the common arguments.
    Returns:
      A string containing the composed query string.
    @private
  -->
  <xsl:template name="compose_expert_search_query_string_">
    <xsl:param name="src_prefix" select="''" />
    <xsl:param name="extra_args" select="''" />
    <xsl:value-of select="$src_prefix" />
    <xsl:value-of select="$extra_args" />
    <xsl:if test="$extra_args">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
    <xsl:text disable-output-escaping="yes">q=</xsl:text>
    <xsl:value-of select="$current_query_" />
    <xsl:text
        disable-output-escaping="yes">&amp;expertsearch=true</xsl:text>
    <xsl:text
        disable-output-escaping="yes">&amp;proxystylesheet=</xsl:text>
    <xsl:value-of select="$current_proxystylesheet_" />
    <xsl:text
        disable-output-escaping="yes">&amp;client=</xsl:text>
    <xsl:value-of select="$client_frontend_to_use_" />
    <xsl:text
        disable-output-escaping="yes">&amp;site=</xsl:text>
    <xsl:value-of select="$current_collection_" />
    <xsl:text
        disable-output-escaping="yes">&amp;filter=0</xsl:text>
    <xsl:text
        disable-output-escaping="yes">&amp;getfields=*</xsl:text>
    <xsl:text
        disable-output-escaping="yes">&amp;num=</xsl:text>
    <xsl:value-of select="$num_res_widget_view_" />
    <xsl:text
        disable-output-escaping="yes">&amp;access=</xsl:text>
    <xsl:value-of select="$access_" />
  </xsl:template>

  <!--
    Renders expert search results using iframe in noscript mode i.e. when
    JavaScript is not enabled.

    Params:
      src_prefix: The prefix that should be added to the src URL string for the
          iframe.
    Returns:
      An iframe embedded inside noscript tag to render expert results.
    @private
  -->
  <xsl:template name="render_expert_search_results_in_noscript_mode_">
    <xsl:param name="src_prefix" select="'?'" />
    <noscript>
      <iframe width="100%" frameborder="0" height="380px;">
        <xsl:attribute name="src">
          <xsl:call-template name="compose_expert_search_query_string_">
            <xsl:with-param name="src_prefix" select="$src_prefix" />
            <xsl:with-param name="extra_args">
              <xsl:text>noscript_mode=true</xsl:text>
            </xsl:with-param>
          </xsl:call-template>
        </xsl:attribute>
      </iframe>
    </noscript>
  </xsl:template>

  <!--
    Generates link tag for pagination element for the pagination section.

    Params:
      is_link: '1' if the tag should be a hyperlink; '0' for plain text span
          tag.
      title: The title to be associated with the tag.
      display_text: The text to be displayed within link or plain text
          container.
      start_index: The starting index to be used to start query string argument.
      href_prefix: The prefix to be used in the href attribute if it's a link.
    Returns:
      The HTML markup containing list items for page numbers.
    @private
  -->
  <xsl:template name="generate_paginate_tag_">
    <xsl:param name="is_link" />
    <xsl:param name="title"/>
    <xsl:param name="display_text"/>
    <xsl:param name="start_index" />
    <xsl:param name="href_prefix" />
    <li>
      <xsl:choose>
        <xsl:when test="$is_link = '1'">
          <a>
            <xsl:attribute name="href">
              <xsl:value-of select="$href_prefix" />
              <xsl:text>&amp;start=</xsl:text>
              <xsl:value-of select="$start_index" />
            </xsl:attribute>
            <xsl:attribute name="title">
              <xsl:value-of select="$title" />
            </xsl:attribute>
            <xsl:value-of select="$display_text" />
          </a>
        </xsl:when>
        <xsl:otherwise>
          <span>
            <xsl:attribute name="title">
              <xsl:value-of select="$title" />
            </xsl:attribute>
            <xsl:value-of select="$display_text" />
          </span>
        </xsl:otherwise>
      </xsl:choose>
    </li>
  </xsl:template>

  <!--
    Generates the page numbers in the pagination section.

    Params:
      msg_*: All localized message strings. See the params documentation of
          "render_expert_search_results" template in this file for details.
      start: The starting index of the result page.
      end: The index of the last result element.
      current_results_first_index: The index of the first result for the current
          page to be displayed. 1-based starting index is assumed.
    Returns:
      The HTML markup containing list items for page numbers.
    @private
  -->
  <xsl:template name="generate_pagination_numbers_">
    <xsl:param name="msg_results_page_number_prefix" />
    <xsl:param name="href_prefix" />
    <xsl:param name="start" select="'0'"/>
    <xsl:param name="end"/>
    <xsl:param name="current_results_first_index"/>
    <xsl:variable name="page_number"
        select="($start div $expert_results_per_page_) + 1"/>
    <xsl:choose>
      <xsl:when test="
          $start &lt;
          ($current_results_first_index - (10 * $expert_results_per_page_))">
      </xsl:when>
      <xsl:when test="($current_results_first_index &gt;= $start) and
          ($current_results_first_index &lt;
              ($start + $expert_results_per_page_))">
        <xsl:call-template name="generate_paginate_tag_">
          <xsl:with-param name="is_link" select="'0'" />
          <xsl:with-param name="title">
            <xsl:value-of select="$msg_results_page_number_prefix"/>
            <xsl:text> </xsl:text>
            <xsl:value-of select="$page_number" />
          </xsl:with-param>
          <xsl:with-param name="display_text" select="$page_number" />
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="generate_paginate_tag_">
          <xsl:with-param name="is_link" select="'1'" />
          <xsl:with-param name="title">
            <xsl:value-of select="$msg_results_page_number_prefix"/>
            <xsl:text> </xsl:text>
            <xsl:value-of select="$page_number" />
          </xsl:with-param>
          <xsl:with-param name="display_text" select="$page_number" />
          <xsl:with-param name="start_index" select="$start" />
          <xsl:with-param name="href_prefix" select="$href_prefix" />
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
    <!-- Recursively iterate to display all page numbers, as required. -->
    <xsl:if test="(($start + $expert_results_per_page_) &lt; $end) and
        (($start + $expert_results_per_page_) &lt;
            ($current_results_first_index + (10 * $expert_results_per_page_)))">
      <xsl:call-template name="generate_pagination_numbers_">
        <xsl:with-param name="msg_results_page_number_prefix"
            select="$msg_results_page_number_prefix" />
        <xsl:with-param name="href_prefix" select="$href_prefix" />
        <xsl:with-param name="start"
            select="$start + $expert_results_per_page_" />
        <xsl:with-param name="end" select="$end" />
        <xsl:with-param name="current_results_first_index"
            select="$current_results_first_index" />
      </xsl:call-template>
    </xsl:if>
  </xsl:template>

  <!--
    Generates pagination section for the current results.

    Params:
      msg_*: All localized message strings. See the params documentation of
          "render_expert_search_results" template in this file for details.
      prev_link: A string containing the previous link, if available.
      next_link: A string containing the next link, if available.
      current_results_first_index: The index of the first result for the current
          page to be displayed. 1-based starting index is assumed.
      current_results_last_index: The index of the last result for the current
          page to be displayed. 1-based starting index is assumed.
      estimated_total_results: The estimated number of total results, if
          available.
    Returns:
      The initial source string with all placeholders substituted with values.
    @private
  -->
  <xsl:template name="generate_pagination_">
    <xsl:param name="msg_results_page_number_prefix" />
    <xsl:param name="msg_go_to_previous_page" />
    <xsl:param name="msg_go_to_next_page" />
    <xsl:param name="msg_previous_page_action" />
    <xsl:param name="msg_next_page_action" />
    <xsl:param name="href_prefix" />
    <xsl:param name="prev_link" />
    <xsl:param name="next_link" />
    <xsl:param name="current_results_first_index" />
    <xsl:param name="current_results_last_index" />
    <xsl:param name="estimated_total_results" />

    <!-- Check if pagination should displayed or not. -->
    <xsl:if test="$prev_link or $next_link">
      <ol class="gsa-exp-pagination">
      <!-- Show previous link, if available. -->
      <xsl:if test="$prev_link">
        <xsl:call-template name="generate_paginate_tag_">
          <xsl:with-param name="is_link" select="'1'" />
          <xsl:with-param name="title" select="$msg_go_to_previous_page" />
          <xsl:with-param name="display_text"
              select="$msg_previous_page_action" />
          <xsl:with-param name="start_index"
              select="$current_results_first_index -
                  $expert_results_per_page_ - 1" />
          <xsl:with-param name="href_prefix" select="$href_prefix" />
        </xsl:call-template>
      </xsl:if>

      <!-- Google result set navigation. -->
      <xsl:variable name="results_end_index">
        <xsl:choose>
          <xsl:when test="$next_link">
            <xsl:value-of select="$estimated_total_results" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$current_results_last_index" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <!-- Generate page numbers in between, if estimated results number is
           available. -->
      <xsl:if test="$estimated_total_results != ''">
        <xsl:call-template name="generate_pagination_numbers_">
          <xsl:with-param name="msg_results_page_number_prefix"
              select="$msg_results_page_number_prefix" />
          <xsl:with-param name="href_prefix" select="$href_prefix" />
          <xsl:with-param name="start" select="0" />
          <xsl:with-param name="end" select="$results_end_index" />
          <xsl:with-param name="current_results_first_index"
              select="($current_results_first_index) - 1" />
        </xsl:call-template>
      </xsl:if>

      <!-- Show next link, if available. -->
      <xsl:if test="$next_link">
        <xsl:call-template name="generate_paginate_tag_">
          <xsl:with-param name="is_link" select="'1'" />
          <xsl:with-param name="title" select="$msg_go_to_next_page" />
          <xsl:with-param name="display_text" select="$msg_next_page_action" />
          <xsl:with-param name="start_index"
              select="$current_results_first_index +
                  $expert_results_per_page_ - 1" />
          <xsl:with-param name="href_prefix" select="$href_prefix" />
        </xsl:call-template>
      </xsl:if>
      </ol>
    </xsl:if>
  </xsl:template>

  <!--
    Substitutes value in the opening/closing curly {<METADATA_NAME>}
    placeholder(s) of the source string by fetching the same from the specified
    result XML sub-tree.

    Params:
      source_string: The source string containing the placeholder(s) in
          {<METADATA_NAME>} format.
      current_result: The result XML sub-tree that contains value for the
          placeholder(s).
    Returns:
      The initial source string with all placeholders substituted with values.
    @private
  -->
  <xsl:template name="substitute_value_in_placeholder_">
    <xsl:param name="source_string" />
    <xsl:param name="current_result" />
    <xsl:variable name="before_opening"
        select="substring-before($source_string, '{')" />
    <xsl:variable name="after_opening"
        select="substring-after($source_string, '{')" />
    <xsl:variable name="after_closing"
        select="substring-after($source_string, '}')" />
    <xsl:variable name="attribute_to_lookup"
        select="substring-before($after_opening, '}')" />
    <xsl:choose>
      <xsl:when test="$attribute_to_lookup = ''">
        <xsl:value-of select="$source_string" />
      </xsl:when>
      <xsl:otherwise>
        <xsl:variable name="attribute_value"
            select="$current_result/MT[@N=$attribute_to_lookup]/@V" />
        <xsl:variable name="new_source_string"
          select="concat(
              $before_opening, string-join($attribute_value, ', '), $after_closing)" />
        <xsl:call-template name="substitute_value_in_placeholder_">
          <xsl:with-param name="source_string" select="$new_source_string" />
          <xsl:with-param name="current_result" select="$current_result" />
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!--
    Generates the content markup for the specified field element in the config.

    Params:
      current_field: The current field element that should be processed to
          generate appropriate markup.
      source_string: The source string containing the placeholder(s) in
          {METADATA_NAME} format.
      current_result: The result XML sub-tree that contains value for the
          placeholder(s).
    Returns:
      The HTML markup for the specified field element. As of now, this can be
      image or text content with optional label and wrapped around with optional
      anchor element (if it's a link).
    @private
  -->
  <xsl:template name="generate_content_markup_">
    <xsl:param name="current_field" />
    <xsl:param name="source_string" />
    <xsl:param name="current_result" />

    <!-- Display label if required. -->
    <xsl:if test="$current_field/Label != ''">
      <span class="gsa-exp-label">
        <xsl:value-of select="$current_field/Label" />:
      </span>
    </xsl:if>

    <!-- Get the value substituted landing URL, if the field is a link. -->
    <xsl:variable name="landing_url">
      <xsl:if test="$current_field/LandingUrl">
        <xsl:call-template name="substitute_value_in_placeholder_">
          <xsl:with-param name="source_string"
              select="$current_field/LandingUrl" />
          <xsl:with-param name="current_result" select="$current_result" />
        </xsl:call-template>
      </xsl:if>
    </xsl:variable>

    <!-- Wrap with anchor tag if field is a link. -->
    <xsl:if test="$landing_url != ''">
      <xsl:text disable-output-escaping="yes">&lt;a href="</xsl:text>
      <xsl:value-of select="$landing_url" />
      <xsl:text>"</xsl:text>
      <xsl:if test="$current_field/Description and
          $current_field/Type != 'image'">
        <xsl:text disable-output-escaping="yes"> title="</xsl:text>
        <xsl:call-template name="substitute_value_in_placeholder_">
            <xsl:with-param name="source_string"
                select="$current_field/Description" />
            <xsl:with-param name="current_result"
                select="$current_result" />
        </xsl:call-template>
        <xsl:text>"</xsl:text>
      </xsl:if>
      <xsl:text disable-output-escaping="yes">></xsl:text>
    </xsl:if>

    <xsl:choose>
      <xsl:when test="$current_field/Type = 'image'">
        <!-- Set image attributes based on specified config. -->
        <img>
          <xsl:attribute name="src">
            <xsl:call-template name="substitute_value_in_placeholder_">
              <xsl:with-param name="source_string"
                  select="$current_field/Value" />
              <xsl:with-param name="current_result"
                  select="$current_result" />
            </xsl:call-template>
          </xsl:attribute>
          <xsl:if test="$current_field/Description">
            <xsl:attribute name="alt">
              <xsl:call-template name="substitute_value_in_placeholder_">
                <xsl:with-param name="source_string"
                    select="$current_field/Description" />
                <xsl:with-param name="current_result"
                    select="$current_result" />
              </xsl:call-template>
            </xsl:attribute>
          </xsl:if>
          <xsl:if test="$current_field/Description">
            <xsl:attribute name="title">
              <xsl:call-template name="substitute_value_in_placeholder_">
                <xsl:with-param name="source_string"
                    select="$current_field/Description" />
                <xsl:with-param name="current_result"
                    select="$current_result" />
              </xsl:call-template>
            </xsl:attribute>
          </xsl:if>
          <xsl:if test="$current_field/Width">
            <xsl:attribute name="width">
              <xsl:value-of select="$current_field/Width" />
            </xsl:attribute>
          </xsl:if>
          <xsl:if test="$current_field/Height">
            <xsl:attribute name="height">
              <xsl:value-of select="$current_field/Height" />
            </xsl:attribute>
          </xsl:if>
        </img>
      </xsl:when>
      <xsl:when test="$current_field/Type = 'text'">
        <span>
        <xsl:call-template name="substitute_value_in_placeholder_">
          <xsl:with-param name="source_string" select="$current_field/Value" />
          <xsl:with-param name="current_result" select="$current_result" />
        </xsl:call-template>
        </span>
      </xsl:when>
    </xsl:choose>

    <xsl:if test="$landing_url != ''">
      <xsl:text disable-output-escaping="yes">&lt;/a>
      </xsl:text>
    </xsl:if>
  </xsl:template>

  <!--
    Processes the specified result element containing expert information.

    Params:
      current_result: The result XML sub-tree that contains the expert
          information.
    Returns:
      The HTML markup representing a single expert information in the overall
      expert results list.
    @private
  -->
  <xsl:template name="process_expert_result_">
    <xsl:param name="current_result" />
    <!-- Determine the view mode to select the fields to be rendered. -->
    <xsl:variable name="view_type">
      <xsl:choose>
        <xsl:when test="$is_expanded_mode_ = 'true'">
          <xsl:text>detailed</xsl:text>
        </xsl:when>
        <xsl:otherwise>
          <xsl:text>widget</xsl:text>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <div class="g-section">
      <div class="gsa-exp-result-container">
        <table cellpadding="0" cellspacing="0">
          <tr>
          <xsl:for-each select="/GSP/ExpertSearchConfig/View/Row/Column">
            <xsl:choose>
              <xsl:when test="Field" >
                <td>
                <xsl:for-each select="Field">
                  <xsl:if test="current()/RenderMode = $view_type or
                      current()/RenderMode = 'both'">
                    <div class="gsa-exp-img-container">
                      <xsl:call-template name="generate_content_markup_">
                        <xsl:with-param name="current_field"
                            select="current()" />
                        <xsl:with-param name="source_string"
                            select="current()/Value" />
                        <xsl:with-param name="current_result"
                            select="$current_result" />
                      </xsl:call-template>
                    </div>
                  </xsl:if>
                </xsl:for-each>
                </td>
              </xsl:when>
              <xsl:otherwise>
                <td>
                <div class="gsa-exp-info-container">
                  <xsl:for-each select="current()/Row">
                    <div>
                      <!--
                        Add row specific class for customizing style for a
                        specific info row in the UI. Useful for external
                        customization.
                      -->
                      <xsl:variable name="row_position" select="position()" />
                      <xsl:attribute name="class">
                        <xsl:text>gsa-exp-info-row gsa-exp-info-row-</xsl:text>
                        <xsl:value-of select="$row_position" />
                      </xsl:attribute>
                      <xsl:for-each select="current()/Column">
                        <xsl:if test="
                            Field/RenderMode=$view_type or
                            Field/RenderMode='both'">
                          <div>
                            <!--
                              Add coloumn specific class for customizing style
                              for a specific row-rolumn in the UI. Useful for
                              external customization.
                            -->
                            <xsl:attribute name="class">
                              <xsl:text>gsa-exp-info-column-ele </xsl:text>
                              <xsl:text>gsa-exp-info-row-</xsl:text>
                              <xsl:value-of select="$row_position" />
                              <xsl:text>-col-</xsl:text>
                              <xsl:value-of select="position()" />
                            </xsl:attribute>
                            <xsl:call-template name="generate_content_markup_">
                              <xsl:with-param name="current_field"
                                  select="Field" />
                              <xsl:with-param name="source_string"
                                  select="Field/Value" />
                              <xsl:with-param name="current_result"
                                  select="$current_result" />
                            </xsl:call-template>
                          </div>
                        </xsl:if>
                      </xsl:for-each>
                    </div>
                  </xsl:for-each>
                </div>
                </td>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
          </tr>
        </table>
      </div>
    </div>
  </xsl:template>

  <!--
    Renders the HTML markup for the expanded mode, as required.

    Params:
      href_prefix: The prefix that should be added to the query string.
      current_search_query_args: The current query string extracted from the
          absolute incoming search request params.
      msg_*: All localized message strings. See the params documentation of
          "render_expert_search_results" template in this file for details.
    Returns:
      The HTML markup containing expand link.
    @private
  -->
  <xsl:template name="render_expand_link_">
    <xsl:param name="href_prefix" select="'?'" />
    <xsl:param name="current_search_query_args" select="''" />
    <xsl:param name="msg_expert_search_switch_to_expanded_mode" />
    <!-- Display expand link if expanded mode is configured. -->
    <xsl:if test="count(/GSP/RES/R) > 0 and not($is_expanded_mode_) and
        $expert_search_expand_mode_frontend_ != ''">
      <xsl:variable name="expand_href_prefix">
        <xsl:call-template name="find_and_replace_string_">
          <xsl:with-param name="find">
            <xsl:text>proxystylesheet=</xsl:text>
            <xsl:value-of select="$current_proxystylesheet_" />
          </xsl:with-param>
          <xsl:with-param name="replace">
            <xsl:text>proxystylesheet=</xsl:text>
            <xsl:value-of select="$expert_search_expand_mode_frontend_" />
          </xsl:with-param>
          <xsl:with-param name="source" select="$current_search_query_args" />
        </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="existing_num_res"
          select="/GSP/PARAM[@name='num']/@value" />
      <xsl:variable name="expand_href_prefix_2">
        <xsl:choose>
          <xsl:when test="not($existing_num_res)">
            <xsl:value-of select="$expand_href_prefix" />
            <xsl:text disable-output-escaping="yes">&amp;num=</xsl:text>
            <xsl:value-of select="$num_res_expanded_view_" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:call-template name="find_and_replace_string_">
              <xsl:with-param name="find">
                <xsl:text>num=</xsl:text>
                <xsl:value-of select="$existing_num_res" />
              </xsl:with-param>
              <xsl:with-param name="replace">
                <xsl:text>num=</xsl:text>
                <xsl:value-of select="$num_res_expanded_view_" />
              </xsl:with-param>
              <xsl:with-param name="source" select="$expand_href_prefix" />
            </xsl:call-template>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:variable name="expand_href_prefix_3">
        <xsl:call-template name="find_and_replace_string_">
          <xsl:with-param name="find">
            <xsl:text>client=</xsl:text>
            <xsl:value-of select="$client_frontend_to_use_" />
          </xsl:with-param>
          <xsl:with-param name="replace">
            <xsl:text>client=</xsl:text>
            <xsl:value-of select="$expert_search_expand_mode_frontend_" />
          </xsl:with-param>
          <xsl:with-param name="source" select="$expand_href_prefix_2" />
        </xsl:call-template>
      </xsl:variable>
      <a class="gsa-exp-expand-link">
        <xsl:attribute name="href">
          <xsl:value-of select="$href_prefix" />
          <xsl:value-of select="$expand_href_prefix_3" />
          <xsl:text
            disable-output-escaping="yes">&amp;expertsearchexpand=</xsl:text>
          <xsl:text>true</xsl:text>
          <xsl:text
            disable-output-escaping="yes">&amp;expertsearchfrontend=</xsl:text>
          <xsl:value-of select="$current_proxystylesheet_" />
          <xsl:text
            disable-output-escaping="yes">&amp;originalquery=</xsl:text>
          <xsl:value-of select="$current_query_" />
        </xsl:attribute>
        <xsl:attribute name="title">
          <xsl:value-of select="$msg_expert_search_switch_to_expanded_mode" />
        </xsl:attribute>
        <xsl:attribute name="target">
          <xsl:choose>
            <xsl:when test="$noscript_mode_ = 'true'">
              <xsl:text>_parent</xsl:text>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>_self</xsl:text>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:attribute>
        <xsl:text>[</xsl:text>
        <xsl:value-of select="$expert_search_detailed_view_text_" />
        <xsl:text>]</xsl:text>
      </a>
    </xsl:if>
  </xsl:template>

  <!--
    Renders the HTML markup for the expert search results section.

    Params:
      href_prefix: The prefix that should be added to the query string.
      current_search_query_args: The current query string extracted from the
          absolute incoming search request params.
      msg_*: All localized message strings. See the params documentation of
          "render_expert_search_results" template in this file for details.
    Returns:
      The HTML markup containing expert results section.
    @private
  -->
  <xsl:template name="render_expert_search_results_">
    <xsl:param name="href_prefix" select="'?'" />
    <xsl:param name="current_search_query_args" select="''" />
    <xsl:param name="msg_expert_search_no_experts_found" />
    <xsl:param name="msg_expert_search_switch_to_expanded_mode" />
    <xsl:param name="msg_results_page_number_prefix" />
    <xsl:param name="msg_go_to_previous_page" />
    <xsl:param name="msg_go_to_next_page" />
    <xsl:param name="msg_previous_page_action" />
    <xsl:param name="msg_next_page_action" />
    <xsl:if test="$is_expert_search_configured = '1'">
      <div class="g-section gsa-exp-container">
        <div class="gsa-exp-header">
          <div class="g-section">
            <div>
              <xsl:if test="not($is_expanded_mode_)">
              <h2>
                <xsl:value-of select="$expert_search_heading_title_" />
              </h2>
              </xsl:if>
              <xsl:call-template name="render_expand_link_">
                <xsl:with-param name="href_prefix" select="$href_prefix" />
                <xsl:with-param name="current_search_query_args"
                    select="$current_search_query_args" />
                <xsl:with-param name="msg_expert_search_switch_to_expanded_mode"
                    select="$msg_expert_search_switch_to_expanded_mode" />
              </xsl:call-template>
            </div>
          </div>
        </div>
        <!-- Display appropriate view based on presence/absence of results. -->
        <xsl:choose>
          <xsl:when test="count(/GSP/RES/R) > 0">
            <ol class="gsa-exp-results">
              <xsl:for-each select="/GSP/RES/R">
               <li tabindex="0">
                <xsl:call-template name="process_expert_result_">
                  <xsl:with-param name="current_result" select="current()" />
                </xsl:call-template>
              </li>
              </xsl:for-each>
            </ol>
            <!--
              Don't display pagination in expanded mode as we piggyback on
              existing organic results pagination.
            -->
            <xsl:if test="not($is_expanded_mode_)">
              <xsl:call-template name="generate_pagination_">
                <xsl:with-param name="msg_results_page_number_prefix"
                    select="$msg_results_page_number_prefix" />
                <xsl:with-param name="msg_go_to_previous_page"
                    select="$msg_go_to_previous_page" />
                <xsl:with-param name="msg_go_to_next_page"
                    select="$msg_go_to_next_page" />
                <xsl:with-param name="msg_previous_page_action"
                    select="$msg_previous_page_action" />
                <xsl:with-param name="msg_next_page_action"
                    select="$msg_next_page_action" />
                <xsl:with-param name="href_prefix" >
                  <xsl:call-template name="compose_expert_search_query_string_">
                    <xsl:with-param name="src_prefix" select="$href_prefix" />
                  </xsl:call-template>
                </xsl:with-param>
                <xsl:with-param name="prev_link" select="/GSP/RES/NB/PU" />
                <xsl:with-param name="next_link" select="/GSP/RES/NB/NU" />
                <xsl:with-param name="current_results_first_index"
                    select="/GSP/RES/@SN" />
                <xsl:with-param name="current_results_last_index"
                    select="/GSP/RES/@EN" />
                <xsl:with-param name="estimated_total_results"
                    select="/GSP/RES/M" />
              </xsl:call-template>
            </xsl:if>
          </xsl:when>
          <xsl:otherwise>
            <span class="gsa-exp-no-results">
              <xsl:value-of select="$msg_expert_search_no_experts_found" />
            </span>
          </xsl:otherwise>
        </xsl:choose>
      </div>
    </xsl:if>
  </xsl:template>

  <!-- *********** END OF PRIVATE VARIABLES AND TEMPLATES  *************  -->

  <!-- *****************************************************************
                      Public variables and templates
                     CAN BE ACCESSED OUTSIDE THIS XSL
       *****************************************************************  -->

  <!--
    Checks if expert search is configured or not.
    1 - configured.
    0 - not configured.
   -->
  <xsl:variable name="is_expert_search_configured">
    <xsl:if test="/GSP/ExpertSearchConfig">1</xsl:if>
  </xsl:variable>

  <!--
    Checks if expert search widget view should be displayed or not in current
    context.
    1 - should be displayed.
    0 - should not be displayed.
   -->
  <xsl:variable name="show_expert_search_widget_view">
    <xsl:if test="$is_expert_search_configured = '1' and
                  not($is_expanded_mode_)">1</xsl:if>
  </xsl:variable>

  <!--
    Checks if expert search widget view results should be displayed or not.
    1 - should be displayed.
    0 - should not be displayed.
   -->
  <xsl:variable name="show_expert_search_widget_view_results">
    <xsl:if test="$is_expert_search_configured = '1' and
        $is_expert_search_query_ = 'true' and
        not($is_expanded_mode_)">1</xsl:if>
  </xsl:variable>

  <!--
    Checks if expert search results should be displayed or not in expanded mode.
    1 - should be displayed.
    0 - should not be displayed.
   -->
  <xsl:variable name="show_expert_search_expanded_results">
    <xsl:if test="$is_expert_search_configured = '1' and
        $is_expert_search_query_ = 'true' and
        $expert_search_expand_mode_frontend_ = $current_proxystylesheet_ and
        $is_expanded_mode_ = 'true'">1</xsl:if>
  </xsl:variable>

  <!--
    Includes the CSS file containing expert search styles.

    Params:
      doc_dir: The directionality of the document i.e. LTR or RTL.
      src_prefix: The prefix that should be added to the CSS source URI.
    Returns:
      The link tag including the appropriate CSS file based on the document
      directionality.
  -->
  <xsl:template name="include_expert_search_css">
    <xsl:param name="doc_dir" select="'ltr'" />
    <xsl:param name="src_prefix" select="'//static-gsa.s3-website-ap-southeast-2.amazonaws.com'" />
    <xsl:if test="$is_expert_search_configured = '1'">
      <xsl:choose>
        <xsl:when test="$doc_dir = 'rtl'">
          <link rel="stylesheet"
              href="{$src_prefix}/expertsearchdesktop_rtl.css"
              type="text/css" />
        </xsl:when>
        <xsl:otherwise>
          <link rel="stylesheet" href="//static-gsa.s3-website-ap-southeast-2.amazonaws.com/expertsearchdesktop.css"
              type="text/css" />
        </xsl:otherwise>
      </xsl:choose>
    </xsl:if>
  </xsl:template>

  <!--
    Includes the JavaScript file containing expert search component for enhanced
    functionality when JavaScript is enabled in user's browser.

    Params:
      src_prefix: The prefix that should be added to the JS source URI.
    Returns:
      The script tag including the JavaScript file.
  -->
  <xsl:template name="include_expert_search_js">
    <xsl:param name="src_prefix" select="''" />
    <!--  Include only for widget view -->
    <xsl:if test="$show_expert_search_widget_view = '1'">
      <script src="{$src_prefix}/expertsearchdesktop_compiled.js"
          type="text/javascript">
      </script>
    </xsl:if>
  </xsl:template>

  <!--
    Includes the JavaScript block for initializing the expert search JavaScript
    component for enhanced behavior when JavaScript is enabled in user's
    browser.

    Note: this should only be called after the JavaSript file has been
    included via "include_expert_search_js" template call.

    Params:
      dom_container: The DOM element that should hold the expert search section.
      script_import: '1' if initialization code should be called via an explicit
          <script> import.
    Returns:
      The script block with the initializing logic.
  -->
  <xsl:template name="include_expert_search_js_init">
    <xsl:param name="dom_container" />
    <xsl:param name="script_import" select="'1'" />
    <!--  Include only for widget view -->
    <xsl:if test="$show_expert_search_widget_view = '1'">
      <xsl:if test="$script_import = '1'">
        <xsl:text
          disable-output-escaping="yes"
          >&lt;script type="text/javascript"&gt;</xsl:text>
      </xsl:if>
      gsa.ui.expertsearch.init(
          '<xsl:call-template name="compose_expert_search_query_string_" />',
          '<xsl:value-of select="$dom_container" />');
      <xsl:if test="$script_import = '1'">
        <xsl:text
          disable-output-escaping="yes">&lt;/script&gt;</xsl:text>
      </xsl:if>
    </xsl:if>
  </xsl:template>

  <!--
    Includes the input field for expert search history management.
  -->
  <xsl:template name="include_expert_search_history_input">
    <xsl:if test="$show_expert_search_widget_view = '1'">
      <input id="eshistorytoken" type="hidden" />
    </xsl:if>
  </xsl:template>

  <!--
    Generates the 'back to main results' link used in the expanded mode to go
    back to the widget view results page.

    Params:
      src_prefix: The prefix that should be added to the query string.
      msg_back_to_main_results_action: Localized message string to be displayed
          for going back to the main results page containing widget view.
    Returns:
      The HTML markup containing link to go back to main results containing the
      widget view.
  -->
  <xsl:template name="back_to_widget_view_frontend_link">
    <xsl:param name="src_prefix" select="'/search?'" />
    <xsl:param name="msg_back_to_main_results_action"
        select="'Back to main results'" />
    <xsl:variable name="filtered_url">
      <xsl:for-each
          select="/GSP/PARAM[(@name != 'start') and
                             (@name != 'swrnum') and
                             (@name != 'expertsearchasync') and
                             (@name != 'proxystylesheet') and
                             (@name != 'client') and
                             (@name != 'getfields') and
                             (@name != 'dnavs') and
                             (@name != 'filter') and
                             (@name != 'num') and
                             (@name != 'originalquery') and
                             (@name != 'emmain') and
                             (@name != 'emsingleres') and
                             (@name != 'emdstyle') and
                             (@name != 'expertsearchexpand') and
                             (@name != 'expertsearch') and
                             (@name != 'expertsearchfrontend') and
                             (@name != 'q') and
                             (@name != 'noscript_mode') and
                             (@name != 'epoch') and
                             not(starts-with(@name, 'metabased_'))]">
        <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
        <xsl:value-of select="@original_value"/>
        <xsl:if test="position() != last()">
          <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
        </xsl:if>
      </xsl:for-each>
    </xsl:variable>
    <xsl:variable name="back_to_link_href">
      <xsl:value-of select="$src_prefix" />
      <xsl:value-of select="$filtered_url" />
      <xsl:text disable-output-escaping="yes">&amp;q=</xsl:text>
      <xsl:value-of select="$original_query_" />
      <xsl:text disable-output-escaping="yes">&amp;proxystylesheet=</xsl:text>
      <xsl:value-of select="$expert_search_proxystylesheet_" />
      <xsl:text disable-output-escaping="yes">&amp;client=</xsl:text>
      <xsl:value-of select="$expert_search_proxystylesheet_" />
    </xsl:variable>
    <xsl:if test="$expert_search_proxystylesheet_ != ''">
      <a>
        <xsl:attribute name="href" select="$back_to_link_href" />
        <xsl:text>&lt;&lt; </xsl:text>
        <xsl:value-of select="$msg_back_to_main_results_action" />
      </a>
    </xsl:if>
  </xsl:template>

  <!--
    Renders the HTML markup for the expert search results section.

    Params:
      src_prefix: The prefix that should be added to the query string.
      is_noscript_mode: Set to 'true' if markup related to the noscript scenario
          should be returned.
      current_search_query_args: The current query string extracted from the
          absolute incoming search request params.
      msg_expert_search_no_experts_found: Localized message string to be
          displayed when no result(s) are present.
      msg_expert_search_switch_to_expanded_mode: Localized message string to be
          displayed for switching to the expanded mode.
      msg_results_page_number_prefix: Localized message string to be displayed
          as prefix for the search results page number.
      msg_go_to_previous_page: Localized message string to be displayed for
          going to previous results page help text.
      msg_go_to_previous_page: Localized message string to be displayed for
          going to next results page help text.
      msg_previous_page_action: Localized message string to be displayed for the
          previous page action link.
      msg_next_page_action: Localized message string to be displayed for the
          next page action link.
    Returns:
      The HTML markup containing expert results section.
  -->
  <xsl:template name="render_expert_search_results">
    <xsl:param name="src_prefix" select="'?'" />
    <xsl:param name="is_noscript_mode" select="'false'" />
    <xsl:param name="current_search_query_args" select="''" />
    <xsl:param name="msg_expert_search_no_experts_found"
        select="'No expert(s) found.'" />
    <xsl:param name="msg_expert_search_switch_to_expanded_mode"
        select="'Switch to the expert search results expanded mode'" />
    <xsl:param name="msg_results_page_number_prefix" select="'Page'" />
    <xsl:param name="msg_go_to_previous_page"
        select="'Go to the previous results page'" />
    <xsl:param name="msg_go_to_next_page"
        select="'Go to the next results page'" />
    <xsl:param name="msg_previous_page_action" select="'Prev'" />
    <xsl:param name="msg_next_page_action" select="'Next'" />
    <xsl:choose>
      <!-- Return iframe to handle noscript scenario. -->
      <xsl:when test="$is_noscript_mode = 'true'">
        <xsl:call-template
            name="render_expert_search_results_in_noscript_mode_">
          <xsl:with-param name="src_prefix" select="$src_prefix" />
        </xsl:call-template>
      </xsl:when>
      <!--
        Return full HTML document when results are not requested through the
        JavaScript component and it's not expanded mode. This happens in
        the noscript mode or when directly opening the widget view in browser
        without JavaScript component requesting the same.
      -->
      <xsl:when test="(not($is_expert_async_search_) and
          not($is_expanded_mode_)) or $noscript_mode_ = 'true'">
        <xsl:text disable-output-escaping="yes">&lt;</xsl:text>
        <xsl:text disable-output-escaping="yes">!DOCTYPE html</xsl:text>
        <xsl:text disable-output-escaping="yes">></xsl:text>
        <html>
          <head>
            <xsl:call-template name="include_expert_search_css" >
              <xsl:with-param name="doc_dir" select="'ltr'" />
              <xsl:with-param name="src_prefix" select="'//static-gsa.s3-website-ap-southeast-2.amazonaws.com'" />
            </xsl:call-template>
          </head>
          <body>
            <div id="exp-results-container"></div>
            <xsl:call-template name="include_expert_search_js" />
            <xsl:call-template name="include_expert_search_js_init">
              <xsl:with-param name="dom_container"
                  select="'exp-results-container'" />
            </xsl:call-template>
            <noscript>
              <xsl:call-template name="render_expert_search_results_">
                <xsl:with-param name="href_prefix" select="$src_prefix" />
                <xsl:with-param name="current_search_query_args"
                    select="$current_search_query_args" />
                <xsl:with-param name="msg_expert_search_no_experts_found"
                    select="$msg_expert_search_no_experts_found" />
                <xsl:with-param name="msg_expert_search_switch_to_expanded_mode"
                    select="$msg_expert_search_switch_to_expanded_mode" />
                <xsl:with-param name="msg_results_page_number_prefix"
                    select="$msg_results_page_number_prefix" />
                <xsl:with-param name="msg_go_to_previous_page"
                    select="$msg_go_to_previous_page" />
                <xsl:with-param name="msg_go_to_next_page"
                    select="$msg_go_to_next_page" />
                <xsl:with-param name="msg_previous_page_action"
                    select="$msg_previous_page_action" />
                <xsl:with-param name="msg_next_page_action"
                    select="$msg_next_page_action" />
              </xsl:call-template>
            </noscript>
          </body>
        </html>
      </xsl:when>
      <!--
        If the request is asynchronous via the JavaScript component then only
        return the results section markup.
      -->
      <xsl:otherwise>
        <xsl:call-template name="render_expert_search_results_">
          <xsl:with-param name="href_prefix" select="$src_prefix" />
          <xsl:with-param name="current_search_query_args"
              select="$current_search_query_args" />
          <xsl:with-param name="msg_expert_search_no_experts_found"
              select="$msg_expert_search_no_experts_found" />
          <xsl:with-param name="msg_expert_search_switch_to_expanded_mode"
              select="$msg_expert_search_switch_to_expanded_mode" />
          <xsl:with-param name="msg_results_page_number_prefix"
              select="$msg_results_page_number_prefix" />
          <xsl:with-param name="msg_go_to_previous_page"
              select="$msg_go_to_previous_page" />
          <xsl:with-param name="msg_go_to_next_page"
              select="$msg_go_to_next_page" />
          <xsl:with-param name="msg_previous_page_action"
              select="$msg_previous_page_action" />
          <xsl:with-param name="msg_next_page_action"
              select="$msg_next_page_action" />
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- ************ END OF PUBLIC VARIABLES AND TEMPLATES  *************  -->

  <!--
    Matches the root element and calls the expert search template if test_mode
    is enabled. This is mainly used during development.
  -->
  <xsl:template match="/">
    <xsl:if test="$test_mode = '1'">
    <xsl:choose>
      <xsl:when test="$is_expert_search_configured = '1'">
        <xsl:call-template name="render_expert_search_results" />
      </xsl:when>
    </xsl:choose>
    </xsl:if>
    <xsl:if test="$test_mode = '0'">
      <xsl:apply-templates />
    </xsl:if>
  </xsl:template>
</xsl:stylesheet>



              ]]></stylesheet>
              <stylesheet.en><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<!-- *** Expert Search Stylesheet *** -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
  <xsl:output method="html"/>
  <!--
    For checking the mode of this XSL's usage. Default is 0.
    1 - Enabled. Used during development.
    0 - Disabled. Used in production setup.
  -->
  <xsl:param name="test_mode" select="'0'" />

  <!-- *****************************************************************
                      Private variables and templates
                   PLEASE DO NOT ACCESS OUTSIDE THIS XSL

       See "Public variables and templates" section below to know what
       can be accessed outside this XSL.
       *****************************************************************  -->

  <!--
    Query param flag to detect  if current query is an expert search query.
    'true' - expert search query.
    'false' - not an expert search query.
    @private
  -->
  <xsl:variable name="is_expert_search_query_"
      select="/GSP/PARAM[@name='expertsearch']/@value" />

  <!--
    Query param flag to detect if the expert search is being accessed in
    expanded mode.
    'true' - is in expanded mode.
    @private
  -->
  <xsl:variable name="is_expanded_mode_"
      select="/GSP/PARAM[@name='expertsearchexpand']/@value" />

  <!--
    Current stylesheet in effect i.e. 'proxystylesheet='  param.
    @private
  -->
  <xsl:variable name="current_proxystylesheet_"
      select="/GSP/PARAM[@name='proxystylesheet']/@value" />

  <!--
    Number of results allowed per page. By default, it's 10. Incoming 'num'
    parameter can override the value to the desired number.
    @private
  -->
  <xsl:variable name="expert_results_per_page_">
    <xsl:choose>
      <xsl:when test="/GSP/PARAM[(@name='num') and (@value!='')]">
        <xsl:value-of select="/GSP/PARAM[@name='num']/@value"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="10"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <!--
    Current search query term in unescaped form.
    @private
  -->
  <xsl:variable name="current_query_unescaped_" select="/GSP/Q" />

  <!--
    Current search query term i.e. 'q=' param.
    @private
  -->
  <xsl:variable name="current_query_"
      select="encode-for-uri($current_query_unescaped_)" />

  <!--
    Original search query term i.e. 'q=' param used before navigating to the
    expanded mode. Used when returning back from the expanded mode to main
    results mode.
    @private
  -->
  <xsl:variable name="original_query_"
      select="/GSP/PARAM[@name='originalquery']/@original_value" />

  <!--
    Expert search stylesheet that initiated the expanded mode. This is used to
    go back to the original widget view results page from the expanded mode.
    @private
  -->
  <xsl:variable name="expert_search_proxystylesheet_"
      select="/GSP/PARAM[@name='expertsearchfrontend']/@value" />

  <!--
    The 'client=' query param that should be used to select frontend settings.
    This should be the value of 'proxystylesheet=' param because the expert
    search view is made accessible via the proxystylesheet. The expert search
    backend will read client= param to figure out the expert search config to
    use.
    @private
  -->
  <xsl:variable name="client_frontend_to_use_"
      select="$current_proxystylesheet_" />

  <!--
    Current collection in effect i.e. 'site=' query param.
    @private
  -->
  <xsl:variable name="current_collection_"
      select="/GSP/PARAM[@name='site']/@value" />

  <!--
    If the user is accessing the results page with JavaScript not enabled.
    'true' - if JavaScript is disabled.
    @private
  -->
  <xsl:variable name="noscript_mode_"
      select="/GSP/PARAM[@name='noscript_mode']/@value" />

  <!--
    The frontend used to present the expanded mode for the expert results.
    @private
  -->
  <xsl:variable name="expert_search_expand_mode_frontend_"
      select="/GSP/ExpertSearchConfig/ExpandedView/FrontendName" />

  <!--
    The text to be shown for detailed view link.
    @private
  -->
  <xsl:variable name="expert_search_detailed_view_text_"
      select="/GSP/ExpertSearchConfig/View/WidgetDetailedText" />

  <!--
    The text to be shown for widget header.
    @private
  -->
  <xsl:variable name="expert_search_heading_title_"
      select="/GSP/ExpertSearchConfig/View/WidgetHeaderText" />

  <!--
    Number of results that should be displayed per page in the widget view.
    @private
  -->
  <xsl:variable name="num_res_widget_view_"
      select="/GSP/ExpertSearchConfig/View/NumResultsToDisplayInWidget" />

  <!--
    Number of results that should be displayed per page in the expanded view.
    @private
  -->
  <xsl:variable name="num_res_expanded_view_"
      select="/GSP/ExpertSearchConfig/View/NumResultsToDisplayInExpandedMode" />

  <!--
    Query param flag to detect if the expert search is being accessed in
    asynchronous JavaScript mode.
    @private
  -->
  <xsl:variable name="is_expert_async_search_"
      select="/GSP/PARAM[@name='expertsearchasync']/@value"/>

  <!--
    Query param flag to detect if the expert search is secure search mode.
    @private
  -->
  <xsl:variable name="access_"
      select="/GSP/PARAM[@name='access']/@value"/>

  <!--
    Finds the given string and replaces the same with the specified string.

    Params:
      find: The string that should be searched.
      replace: The string that should be substituted.
      source: The source string on which search / replace should happen.
    Returns:
      The modified string with the requested substring replaced.
    @private
  -->
  <xsl:template name="find_and_replace_string_">
    <xsl:param name="find" />
    <xsl:param name="replace" />
    <xsl:param name="source" />
    <xsl:value-of select="replace($source, $find, $replace)" />
  </xsl:template>

  <!--
    Composes the query string used for fetching the expert search results.

    Params:
      src_prefix: The prefix that should be added to the query string.
      extra_args: Any extra query string arguments that should be added apart
          from the common arguments.
    Returns:
      A string containing the composed query string.
    @private
  -->
  <xsl:template name="compose_expert_search_query_string_">
    <xsl:param name="src_prefix" select="''" />
    <xsl:param name="extra_args" select="''" />
    <xsl:value-of select="$src_prefix" />
    <xsl:value-of select="$extra_args" />
    <xsl:if test="$extra_args">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
    <xsl:text disable-output-escaping="yes">q=</xsl:text>
    <xsl:value-of select="$current_query_" />
    <xsl:text
        disable-output-escaping="yes">&amp;expertsearch=true</xsl:text>
    <xsl:text
        disable-output-escaping="yes">&amp;proxystylesheet=</xsl:text>
    <xsl:value-of select="$current_proxystylesheet_" />
    <xsl:text
        disable-output-escaping="yes">&amp;client=</xsl:text>
    <xsl:value-of select="$client_frontend_to_use_" />
    <xsl:text
        disable-output-escaping="yes">&amp;site=</xsl:text>
    <xsl:value-of select="$current_collection_" />
    <xsl:text
        disable-output-escaping="yes">&amp;filter=0</xsl:text>
    <xsl:text
        disable-output-escaping="yes">&amp;getfields=*</xsl:text>
    <xsl:text
        disable-output-escaping="yes">&amp;num=</xsl:text>
    <xsl:value-of select="$num_res_widget_view_" />
    <xsl:text
        disable-output-escaping="yes">&amp;access=</xsl:text>
    <xsl:value-of select="$access_" />
  </xsl:template>

  <!--
    Renders expert search results using iframe in noscript mode i.e. when
    JavaScript is not enabled.

    Params:
      src_prefix: The prefix that should be added to the src URL string for the
          iframe.
    Returns:
      An iframe embedded inside noscript tag to render expert results.
    @private
  -->
  <xsl:template name="render_expert_search_results_in_noscript_mode_">
    <xsl:param name="src_prefix" select="'?'" />
    <noscript>
      <iframe width="100%" frameborder="0" height="380px;">
        <xsl:attribute name="src">
          <xsl:call-template name="compose_expert_search_query_string_">
            <xsl:with-param name="src_prefix" select="$src_prefix" />
            <xsl:with-param name="extra_args">
              <xsl:text>noscript_mode=true</xsl:text>
            </xsl:with-param>
          </xsl:call-template>
        </xsl:attribute>
      </iframe>
    </noscript>
  </xsl:template>

  <!--
    Generates link tag for pagination element for the pagination section.

    Params:
      is_link: '1' if the tag should be a hyperlink; '0' for plain text span
          tag.
      title: The title to be associated with the tag.
      display_text: The text to be displayed within link or plain text
          container.
      start_index: The starting index to be used to start query string argument.
      href_prefix: The prefix to be used in the href attribute if it's a link.
    Returns:
      The HTML markup containing list items for page numbers.
    @private
  -->
  <xsl:template name="generate_paginate_tag_">
    <xsl:param name="is_link" />
    <xsl:param name="title"/>
    <xsl:param name="display_text"/>
    <xsl:param name="start_index" />
    <xsl:param name="href_prefix" />
    <li>
      <xsl:choose>
        <xsl:when test="$is_link = '1'">
          <a>
            <xsl:attribute name="href">
              <xsl:value-of select="$href_prefix" />
              <xsl:text>&amp;start=</xsl:text>
              <xsl:value-of select="$start_index" />
            </xsl:attribute>
            <xsl:attribute name="title">
              <xsl:value-of select="$title" />
            </xsl:attribute>
            <xsl:value-of select="$display_text" />
          </a>
        </xsl:when>
        <xsl:otherwise>
          <span>
            <xsl:attribute name="title">
              <xsl:value-of select="$title" />
            </xsl:attribute>
            <xsl:value-of select="$display_text" />
          </span>
        </xsl:otherwise>
      </xsl:choose>
    </li>
  </xsl:template>

  <!--
    Generates the page numbers in the pagination section.

    Params:
      msg_*: All localized message strings. See the params documentation of
          "render_expert_search_results" template in this file for details.
      start: The starting index of the result page.
      end: The index of the last result element.
      current_results_first_index: The index of the first result for the current
          page to be displayed. 1-based starting index is assumed.
    Returns:
      The HTML markup containing list items for page numbers.
    @private
  -->
  <xsl:template name="generate_pagination_numbers_">
    <xsl:param name="msg_results_page_number_prefix" />
    <xsl:param name="href_prefix" />
    <xsl:param name="start" select="'0'"/>
    <xsl:param name="end"/>
    <xsl:param name="current_results_first_index"/>
    <xsl:variable name="page_number"
        select="($start div $expert_results_per_page_) + 1"/>
    <xsl:choose>
      <xsl:when test="
          $start &lt;
          ($current_results_first_index - (10 * $expert_results_per_page_))">
      </xsl:when>
      <xsl:when test="($current_results_first_index &gt;= $start) and
          ($current_results_first_index &lt;
              ($start + $expert_results_per_page_))">
        <xsl:call-template name="generate_paginate_tag_">
          <xsl:with-param name="is_link" select="'0'" />
          <xsl:with-param name="title">
            <xsl:value-of select="$msg_results_page_number_prefix"/>
            <xsl:text> </xsl:text>
            <xsl:value-of select="$page_number" />
          </xsl:with-param>
          <xsl:with-param name="display_text" select="$page_number" />
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="generate_paginate_tag_">
          <xsl:with-param name="is_link" select="'1'" />
          <xsl:with-param name="title">
            <xsl:value-of select="$msg_results_page_number_prefix"/>
            <xsl:text> </xsl:text>
            <xsl:value-of select="$page_number" />
          </xsl:with-param>
          <xsl:with-param name="display_text" select="$page_number" />
          <xsl:with-param name="start_index" select="$start" />
          <xsl:with-param name="href_prefix" select="$href_prefix" />
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
    <!-- Recursively iterate to display all page numbers, as required. -->
    <xsl:if test="(($start + $expert_results_per_page_) &lt; $end) and
        (($start + $expert_results_per_page_) &lt;
            ($current_results_first_index + (10 * $expert_results_per_page_)))">
      <xsl:call-template name="generate_pagination_numbers_">
        <xsl:with-param name="msg_results_page_number_prefix"
            select="$msg_results_page_number_prefix" />
        <xsl:with-param name="href_prefix" select="$href_prefix" />
        <xsl:with-param name="start"
            select="$start + $expert_results_per_page_" />
        <xsl:with-param name="end" select="$end" />
        <xsl:with-param name="current_results_first_index"
            select="$current_results_first_index" />
      </xsl:call-template>
    </xsl:if>
  </xsl:template>

  <!--
    Generates pagination section for the current results.

    Params:
      msg_*: All localized message strings. See the params documentation of
          "render_expert_search_results" template in this file for details.
      prev_link: A string containing the previous link, if available.
      next_link: A string containing the next link, if available.
      current_results_first_index: The index of the first result for the current
          page to be displayed. 1-based starting index is assumed.
      current_results_last_index: The index of the last result for the current
          page to be displayed. 1-based starting index is assumed.
      estimated_total_results: The estimated number of total results, if
          available.
    Returns:
      The initial source string with all placeholders substituted with values.
    @private
  -->
  <xsl:template name="generate_pagination_">
    <xsl:param name="msg_results_page_number_prefix" />
    <xsl:param name="msg_go_to_previous_page" />
    <xsl:param name="msg_go_to_next_page" />
    <xsl:param name="msg_previous_page_action" />
    <xsl:param name="msg_next_page_action" />
    <xsl:param name="href_prefix" />
    <xsl:param name="prev_link" />
    <xsl:param name="next_link" />
    <xsl:param name="current_results_first_index" />
    <xsl:param name="current_results_last_index" />
    <xsl:param name="estimated_total_results" />

    <!-- Check if pagination should displayed or not. -->
    <xsl:if test="$prev_link or $next_link">
      <ol class="gsa-exp-pagination">
      <!-- Show previous link, if available. -->
      <xsl:if test="$prev_link">
        <xsl:call-template name="generate_paginate_tag_">
          <xsl:with-param name="is_link" select="'1'" />
          <xsl:with-param name="title" select="$msg_go_to_previous_page" />
          <xsl:with-param name="display_text"
              select="$msg_previous_page_action" />
          <xsl:with-param name="start_index"
              select="$current_results_first_index -
                  $expert_results_per_page_ - 1" />
          <xsl:with-param name="href_prefix" select="$href_prefix" />
        </xsl:call-template>
      </xsl:if>

      <!-- Google result set navigation. -->
      <xsl:variable name="results_end_index">
        <xsl:choose>
          <xsl:when test="$next_link">
            <xsl:value-of select="$estimated_total_results" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$current_results_last_index" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <!-- Generate page numbers in between, if estimated results number is
           available. -->
      <xsl:if test="$estimated_total_results != ''">
        <xsl:call-template name="generate_pagination_numbers_">
          <xsl:with-param name="msg_results_page_number_prefix"
              select="$msg_results_page_number_prefix" />
          <xsl:with-param name="href_prefix" select="$href_prefix" />
          <xsl:with-param name="start" select="0" />
          <xsl:with-param name="end" select="$results_end_index" />
          <xsl:with-param name="current_results_first_index"
              select="($current_results_first_index) - 1" />
        </xsl:call-template>
      </xsl:if>

      <!-- Show next link, if available. -->
      <xsl:if test="$next_link">
        <xsl:call-template name="generate_paginate_tag_">
          <xsl:with-param name="is_link" select="'1'" />
          <xsl:with-param name="title" select="$msg_go_to_next_page" />
          <xsl:with-param name="display_text" select="$msg_next_page_action" />
          <xsl:with-param name="start_index"
              select="$current_results_first_index +
                  $expert_results_per_page_ - 1" />
          <xsl:with-param name="href_prefix" select="$href_prefix" />
        </xsl:call-template>
      </xsl:if>
      </ol>
    </xsl:if>
  </xsl:template>

  <!--
    Substitutes value in the opening/closing curly {<METADATA_NAME>}
    placeholder(s) of the source string by fetching the same from the specified
    result XML sub-tree.

    Params:
      source_string: The source string containing the placeholder(s) in
          {<METADATA_NAME>} format.
      current_result: The result XML sub-tree that contains value for the
          placeholder(s).
    Returns:
      The initial source string with all placeholders substituted with values.
    @private
  -->
  <xsl:template name="substitute_value_in_placeholder_">
    <xsl:param name="source_string" />
    <xsl:param name="current_result" />
    <xsl:variable name="before_opening"
        select="substring-before($source_string, '{')" />
    <xsl:variable name="after_opening"
        select="substring-after($source_string, '{')" />
    <xsl:variable name="after_closing"
        select="substring-after($source_string, '}')" />
    <xsl:variable name="attribute_to_lookup"
        select="substring-before($after_opening, '}')" />
    <xsl:choose>
      <xsl:when test="$attribute_to_lookup = ''">
        <xsl:value-of select="$source_string" />
      </xsl:when>
      <xsl:otherwise>
        <xsl:variable name="attribute_value"
            select="$current_result/MT[@N=$attribute_to_lookup]/@V" />
        <xsl:variable name="new_source_string"
          select="concat(
              $before_opening, string-join($attribute_value, ', '), $after_closing)" />
        <xsl:call-template name="substitute_value_in_placeholder_">
          <xsl:with-param name="source_string" select="$new_source_string" />
          <xsl:with-param name="current_result" select="$current_result" />
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!--
    Generates the content markup for the specified field element in the config.

    Params:
      current_field: The current field element that should be processed to
          generate appropriate markup.
      source_string: The source string containing the placeholder(s) in
          {METADATA_NAME} format.
      current_result: The result XML sub-tree that contains value for the
          placeholder(s).
    Returns:
      The HTML markup for the specified field element. As of now, this can be
      image or text content with optional label and wrapped around with optional
      anchor element (if it's a link).
    @private
  -->
  <xsl:template name="generate_content_markup_">
    <xsl:param name="current_field" />
    <xsl:param name="source_string" />
    <xsl:param name="current_result" />

    <!-- Display label if required. -->
    <xsl:if test="$current_field/Label != ''">
      <span class="gsa-exp-label">
        <xsl:value-of select="$current_field/Label" />:
      </span>
    </xsl:if>

    <!-- Get the value substituted landing URL, if the field is a link. -->
    <xsl:variable name="landing_url">
      <xsl:if test="$current_field/LandingUrl">
        <xsl:call-template name="substitute_value_in_placeholder_">
          <xsl:with-param name="source_string"
              select="$current_field/LandingUrl" />
          <xsl:with-param name="current_result" select="$current_result" />
        </xsl:call-template>
      </xsl:if>
    </xsl:variable>

    <!-- Wrap with anchor tag if field is a link. -->
    <xsl:if test="$landing_url != ''">
      <xsl:text disable-output-escaping="yes">&lt;a href="</xsl:text>
      <xsl:value-of select="$landing_url" />
      <xsl:text>"</xsl:text>
      <xsl:if test="$current_field/Description and
          $current_field/Type != 'image'">
        <xsl:text disable-output-escaping="yes"> title="</xsl:text>
        <xsl:call-template name="substitute_value_in_placeholder_">
            <xsl:with-param name="source_string"
                select="$current_field/Description" />
            <xsl:with-param name="current_result"
                select="$current_result" />
        </xsl:call-template>
        <xsl:text>"</xsl:text>
      </xsl:if>
      <xsl:text disable-output-escaping="yes">></xsl:text>
    </xsl:if>

    <xsl:choose>
      <xsl:when test="$current_field/Type = 'image'">
        <!-- Set image attributes based on specified config. -->
        <img>
          <xsl:attribute name="src">
            <xsl:call-template name="substitute_value_in_placeholder_">
              <xsl:with-param name="source_string"
                  select="$current_field/Value" />
              <xsl:with-param name="current_result"
                  select="$current_result" />
            </xsl:call-template>
          </xsl:attribute>
          <xsl:if test="$current_field/Description">
            <xsl:attribute name="alt">
              <xsl:call-template name="substitute_value_in_placeholder_">
                <xsl:with-param name="source_string"
                    select="$current_field/Description" />
                <xsl:with-param name="current_result"
                    select="$current_result" />
              </xsl:call-template>
            </xsl:attribute>
          </xsl:if>
          <xsl:if test="$current_field/Description">
            <xsl:attribute name="title">
              <xsl:call-template name="substitute_value_in_placeholder_">
                <xsl:with-param name="source_string"
                    select="$current_field/Description" />
                <xsl:with-param name="current_result"
                    select="$current_result" />
              </xsl:call-template>
            </xsl:attribute>
          </xsl:if>
          <xsl:if test="$current_field/Width">
            <xsl:attribute name="width">
              <xsl:value-of select="$current_field/Width" />
            </xsl:attribute>
          </xsl:if>
          <xsl:if test="$current_field/Height">
            <xsl:attribute name="height">
              <xsl:value-of select="$current_field/Height" />
            </xsl:attribute>
          </xsl:if>
        </img>
      </xsl:when>
      <xsl:when test="$current_field/Type = 'text'">
        <span>
        <xsl:call-template name="substitute_value_in_placeholder_">
          <xsl:with-param name="source_string" select="$current_field/Value" />
          <xsl:with-param name="current_result" select="$current_result" />
        </xsl:call-template>
        </span>
      </xsl:when>
    </xsl:choose>

    <xsl:if test="$landing_url != ''">
      <xsl:text disable-output-escaping="yes">&lt;/a>
      </xsl:text>
    </xsl:if>
  </xsl:template>

  <!--
    Processes the specified result element containing expert information.

    Params:
      current_result: The result XML sub-tree that contains the expert
          information.
    Returns:
      The HTML markup representing a single expert information in the overall
      expert results list.
    @private
  -->
  <xsl:template name="process_expert_result_">
    <xsl:param name="current_result" />
    <!-- Determine the view mode to select the fields to be rendered. -->
    <xsl:variable name="view_type">
      <xsl:choose>
        <xsl:when test="$is_expanded_mode_ = 'true'">
          <xsl:text>detailed</xsl:text>
        </xsl:when>
        <xsl:otherwise>
          <xsl:text>widget</xsl:text>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <div class="g-section">
      <div class="gsa-exp-result-container">
        <table cellpadding="0" cellspacing="0">
          <tr>
          <xsl:for-each select="/GSP/ExpertSearchConfig/View/Row/Column">
            <xsl:choose>
              <xsl:when test="Field" >
                <td>
                <xsl:for-each select="Field">
                  <xsl:if test="current()/RenderMode = $view_type or
                      current()/RenderMode = 'both'">
                    <div class="gsa-exp-img-container">
                      <xsl:call-template name="generate_content_markup_">
                        <xsl:with-param name="current_field"
                            select="current()" />
                        <xsl:with-param name="source_string"
                            select="current()/Value" />
                        <xsl:with-param name="current_result"
                            select="$current_result" />
                      </xsl:call-template>
                    </div>
                  </xsl:if>
                </xsl:for-each>
                </td>
              </xsl:when>
              <xsl:otherwise>
                <td>
                <div class="gsa-exp-info-container">
                  <xsl:for-each select="current()/Row">
                    <div>
                      <!--
                        Add row specific class for customizing style for a
                        specific info row in the UI. Useful for external
                        customization.
                      -->
                      <xsl:variable name="row_position" select="position()" />
                      <xsl:attribute name="class">
                        <xsl:text>gsa-exp-info-row gsa-exp-info-row-</xsl:text>
                        <xsl:value-of select="$row_position" />
                      </xsl:attribute>
                      <xsl:for-each select="current()/Column">
                        <xsl:if test="
                            Field/RenderMode=$view_type or
                            Field/RenderMode='both'">
                          <div>
                            <!--
                              Add coloumn specific class for customizing style
                              for a specific row-rolumn in the UI. Useful for
                              external customization.
                            -->
                            <xsl:attribute name="class">
                              <xsl:text>gsa-exp-info-column-ele </xsl:text>
                              <xsl:text>gsa-exp-info-row-</xsl:text>
                              <xsl:value-of select="$row_position" />
                              <xsl:text>-col-</xsl:text>
                              <xsl:value-of select="position()" />
                            </xsl:attribute>
                            <xsl:call-template name="generate_content_markup_">
                              <xsl:with-param name="current_field"
                                  select="Field" />
                              <xsl:with-param name="source_string"
                                  select="Field/Value" />
                              <xsl:with-param name="current_result"
                                  select="$current_result" />
                            </xsl:call-template>
                          </div>
                        </xsl:if>
                      </xsl:for-each>
                    </div>
                  </xsl:for-each>
                </div>
                </td>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
          </tr>
        </table>
      </div>
    </div>
  </xsl:template>

  <!--
    Renders the HTML markup for the expanded mode, as required.

    Params:
      href_prefix: The prefix that should be added to the query string.
      current_search_query_args: The current query string extracted from the
          absolute incoming search request params.
      msg_*: All localized message strings. See the params documentation of
          "render_expert_search_results" template in this file for details.
    Returns:
      The HTML markup containing expand link.
    @private
  -->
  <xsl:template name="render_expand_link_">
    <xsl:param name="href_prefix" select="'?'" />
    <xsl:param name="current_search_query_args" select="''" />
    <xsl:param name="msg_expert_search_switch_to_expanded_mode" />
    <!-- Display expand link if expanded mode is configured. -->
    <xsl:if test="count(/GSP/RES/R) > 0 and not($is_expanded_mode_) and
        $expert_search_expand_mode_frontend_ != ''">
      <xsl:variable name="expand_href_prefix">
        <xsl:call-template name="find_and_replace_string_">
          <xsl:with-param name="find">
            <xsl:text>proxystylesheet=</xsl:text>
            <xsl:value-of select="$current_proxystylesheet_" />
          </xsl:with-param>
          <xsl:with-param name="replace">
            <xsl:text>proxystylesheet=</xsl:text>
            <xsl:value-of select="$expert_search_expand_mode_frontend_" />
          </xsl:with-param>
          <xsl:with-param name="source" select="$current_search_query_args" />
        </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="existing_num_res"
          select="/GSP/PARAM[@name='num']/@value" />
      <xsl:variable name="expand_href_prefix_2">
        <xsl:choose>
          <xsl:when test="not($existing_num_res)">
            <xsl:value-of select="$expand_href_prefix" />
            <xsl:text disable-output-escaping="yes">&amp;num=</xsl:text>
            <xsl:value-of select="$num_res_expanded_view_" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:call-template name="find_and_replace_string_">
              <xsl:with-param name="find">
                <xsl:text>num=</xsl:text>
                <xsl:value-of select="$existing_num_res" />
              </xsl:with-param>
              <xsl:with-param name="replace">
                <xsl:text>num=</xsl:text>
                <xsl:value-of select="$num_res_expanded_view_" />
              </xsl:with-param>
              <xsl:with-param name="source" select="$expand_href_prefix" />
            </xsl:call-template>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:variable name="expand_href_prefix_3">
        <xsl:call-template name="find_and_replace_string_">
          <xsl:with-param name="find">
            <xsl:text>client=</xsl:text>
            <xsl:value-of select="$client_frontend_to_use_" />
          </xsl:with-param>
          <xsl:with-param name="replace">
            <xsl:text>client=</xsl:text>
            <xsl:value-of select="$expert_search_expand_mode_frontend_" />
          </xsl:with-param>
          <xsl:with-param name="source" select="$expand_href_prefix_2" />
        </xsl:call-template>
      </xsl:variable>
      <a class="gsa-exp-expand-link">
        <xsl:attribute name="href">
          <xsl:value-of select="$href_prefix" />
          <xsl:value-of select="$expand_href_prefix_3" />
          <xsl:text
            disable-output-escaping="yes">&amp;expertsearchexpand=</xsl:text>
          <xsl:text>true</xsl:text>
          <xsl:text
            disable-output-escaping="yes">&amp;expertsearchfrontend=</xsl:text>
          <xsl:value-of select="$current_proxystylesheet_" />
          <xsl:text
            disable-output-escaping="yes">&amp;originalquery=</xsl:text>
          <xsl:value-of select="$current_query_" />
        </xsl:attribute>
        <xsl:attribute name="title">
          <xsl:value-of select="$msg_expert_search_switch_to_expanded_mode" />
        </xsl:attribute>
        <xsl:attribute name="target">
          <xsl:choose>
            <xsl:when test="$noscript_mode_ = 'true'">
              <xsl:text>_parent</xsl:text>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>_self</xsl:text>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:attribute>
        <xsl:text>[</xsl:text>
        <xsl:value-of select="$expert_search_detailed_view_text_" />
        <xsl:text>]</xsl:text>
      </a>
    </xsl:if>
  </xsl:template>

  <!--
    Renders the HTML markup for the expert search results section.

    Params:
      href_prefix: The prefix that should be added to the query string.
      current_search_query_args: The current query string extracted from the
          absolute incoming search request params.
      msg_*: All localized message strings. See the params documentation of
          "render_expert_search_results" template in this file for details.
    Returns:
      The HTML markup containing expert results section.
    @private
  -->
  <xsl:template name="render_expert_search_results_">
    <xsl:param name="href_prefix" select="'?'" />
    <xsl:param name="current_search_query_args" select="''" />
    <xsl:param name="msg_expert_search_no_experts_found" />
    <xsl:param name="msg_expert_search_switch_to_expanded_mode" />
    <xsl:param name="msg_results_page_number_prefix" />
    <xsl:param name="msg_go_to_previous_page" />
    <xsl:param name="msg_go_to_next_page" />
    <xsl:param name="msg_previous_page_action" />
    <xsl:param name="msg_next_page_action" />
    <xsl:if test="$is_expert_search_configured = '1'">
      <div class="g-section gsa-exp-container">
        <div class="gsa-exp-header">
          <div class="g-section">
            <div>
              <xsl:if test="not($is_expanded_mode_)">
              <h2>
                <xsl:value-of select="$expert_search_heading_title_" />
              </h2>
              </xsl:if>
              <xsl:call-template name="render_expand_link_">
                <xsl:with-param name="href_prefix" select="$href_prefix" />
                <xsl:with-param name="current_search_query_args"
                    select="$current_search_query_args" />
                <xsl:with-param name="msg_expert_search_switch_to_expanded_mode"
                    select="$msg_expert_search_switch_to_expanded_mode" />
              </xsl:call-template>
            </div>
          </div>
        </div>
        <!-- Display appropriate view based on presence/absence of results. -->
        <xsl:choose>
          <xsl:when test="count(/GSP/RES/R) > 0">
            <ol class="gsa-exp-results">
              <xsl:for-each select="/GSP/RES/R">
               <li tabindex="0">
                <xsl:call-template name="process_expert_result_">
                  <xsl:with-param name="current_result" select="current()" />
                </xsl:call-template>
              </li>
              </xsl:for-each>
            </ol>
            <!--
              Don't display pagination in expanded mode as we piggyback on
              existing organic results pagination.
            -->
            <xsl:if test="not($is_expanded_mode_)">
              <xsl:call-template name="generate_pagination_">
                <xsl:with-param name="msg_results_page_number_prefix"
                    select="$msg_results_page_number_prefix" />
                <xsl:with-param name="msg_go_to_previous_page"
                    select="$msg_go_to_previous_page" />
                <xsl:with-param name="msg_go_to_next_page"
                    select="$msg_go_to_next_page" />
                <xsl:with-param name="msg_previous_page_action"
                    select="$msg_previous_page_action" />
                <xsl:with-param name="msg_next_page_action"
                    select="$msg_next_page_action" />
                <xsl:with-param name="href_prefix" >
                  <xsl:call-template name="compose_expert_search_query_string_">
                    <xsl:with-param name="src_prefix" select="$href_prefix" />
                  </xsl:call-template>
                </xsl:with-param>
                <xsl:with-param name="prev_link" select="/GSP/RES/NB/PU" />
                <xsl:with-param name="next_link" select="/GSP/RES/NB/NU" />
                <xsl:with-param name="current_results_first_index"
                    select="/GSP/RES/@SN" />
                <xsl:with-param name="current_results_last_index"
                    select="/GSP/RES/@EN" />
                <xsl:with-param name="estimated_total_results"
                    select="/GSP/RES/M" />
              </xsl:call-template>
            </xsl:if>
          </xsl:when>
          <xsl:otherwise>
            <span class="gsa-exp-no-results">
              <xsl:value-of select="$msg_expert_search_no_experts_found" />
            </span>
          </xsl:otherwise>
        </xsl:choose>
      </div>
    </xsl:if>
  </xsl:template>

  <!-- *********** END OF PRIVATE VARIABLES AND TEMPLATES  *************  -->

  <!-- *****************************************************************
                      Public variables and templates
                     CAN BE ACCESSED OUTSIDE THIS XSL
       *****************************************************************  -->

  <!--
    Checks if expert search is configured or not.
    1 - configured.
    0 - not configured.
   -->
  <xsl:variable name="is_expert_search_configured">
    <xsl:if test="/GSP/ExpertSearchConfig">1</xsl:if>
  </xsl:variable>

  <!--
    Checks if expert search widget view should be displayed or not in current
    context.
    1 - should be displayed.
    0 - should not be displayed.
   -->
  <xsl:variable name="show_expert_search_widget_view">
    <xsl:if test="$is_expert_search_configured = '1' and
                  not($is_expanded_mode_)">1</xsl:if>
  </xsl:variable>

  <!--
    Checks if expert search widget view results should be displayed or not.
    1 - should be displayed.
    0 - should not be displayed.
   -->
  <xsl:variable name="show_expert_search_widget_view_results">
    <xsl:if test="$is_expert_search_configured = '1' and
        $is_expert_search_query_ = 'true' and
        not($is_expanded_mode_)">1</xsl:if>
  </xsl:variable>

  <!--
    Checks if expert search results should be displayed or not in expanded mode.
    1 - should be displayed.
    0 - should not be displayed.
   -->
  <xsl:variable name="show_expert_search_expanded_results">
    <xsl:if test="$is_expert_search_configured = '1' and
        $is_expert_search_query_ = 'true' and
        $expert_search_expand_mode_frontend_ = $current_proxystylesheet_ and
        $is_expanded_mode_ = 'true'">1</xsl:if>
  </xsl:variable>

  <!--
    Includes the CSS file containing expert search styles.

    Params:
      doc_dir: The directionality of the document i.e. LTR or RTL.
      src_prefix: The prefix that should be added to the CSS source URI.
    Returns:
      The link tag including the appropriate CSS file based on the document
      directionality.
  -->
  <xsl:template name="include_expert_search_css">
    <xsl:param name="doc_dir" select="'ltr'" />
    <xsl:param name="src_prefix" select="'//static-gsa.s3-website-ap-southeast-2.amazonaws.com'" />
    <xsl:if test="$is_expert_search_configured = '1'">
      <xsl:choose>
        <xsl:when test="$doc_dir = 'rtl'">
          <link rel="stylesheet"
              href="{$src_prefix}/expertsearchdesktop_rtl.css"
              type="text/css" />
        </xsl:when>
        <xsl:otherwise>
          <link rel="stylesheet" href="//static-gsa.s3-website-ap-southeast-2.amazonaws.com/expertsearchdesktop.css"
              type="text/css" />
        </xsl:otherwise>
      </xsl:choose>
    </xsl:if>
  </xsl:template>

  <!--
    Includes the JavaScript file containing expert search component for enhanced
    functionality when JavaScript is enabled in user's browser.

    Params:
      src_prefix: The prefix that should be added to the JS source URI.
    Returns:
      The script tag including the JavaScript file.
  -->
  <xsl:template name="include_expert_search_js">
    <xsl:param name="src_prefix" select="''" />
    <!--  Include only for widget view -->
    <xsl:if test="$show_expert_search_widget_view = '1'">
      <script src="{$src_prefix}/expertsearchdesktop_compiled.js"
          type="text/javascript">
      </script>
    </xsl:if>
  </xsl:template>

  <!--
    Includes the JavaScript block for initializing the expert search JavaScript
    component for enhanced behavior when JavaScript is enabled in user's
    browser.

    Note: this should only be called after the JavaSript file has been
    included via "include_expert_search_js" template call.

    Params:
      dom_container: The DOM element that should hold the expert search section.
      script_import: '1' if initialization code should be called via an explicit
          <script> import.
    Returns:
      The script block with the initializing logic.
  -->
  <xsl:template name="include_expert_search_js_init">
    <xsl:param name="dom_container" />
    <xsl:param name="script_import" select="'1'" />
    <!--  Include only for widget view -->
    <xsl:if test="$show_expert_search_widget_view = '1'">
      <xsl:if test="$script_import = '1'">
        <xsl:text
          disable-output-escaping="yes"
          >&lt;script type="text/javascript"&gt;</xsl:text>
      </xsl:if>
      gsa.ui.expertsearch.init(
          '<xsl:call-template name="compose_expert_search_query_string_" />',
          '<xsl:value-of select="$dom_container" />');
      <xsl:if test="$script_import = '1'">
        <xsl:text
          disable-output-escaping="yes">&lt;/script&gt;</xsl:text>
      </xsl:if>
    </xsl:if>
  </xsl:template>

  <!--
    Includes the input field for expert search history management.
  -->
  <xsl:template name="include_expert_search_history_input">
    <xsl:if test="$show_expert_search_widget_view = '1'">
      <input id="eshistorytoken" type="hidden" />
    </xsl:if>
  </xsl:template>

  <!--
    Generates the 'back to main results' link used in the expanded mode to go
    back to the widget view results page.

    Params:
      src_prefix: The prefix that should be added to the query string.
      msg_back_to_main_results_action: Localized message string to be displayed
          for going back to the main results page containing widget view.
    Returns:
      The HTML markup containing link to go back to main results containing the
      widget view.
  -->
  <xsl:template name="back_to_widget_view_frontend_link">
    <xsl:param name="src_prefix" select="'/search?'" />
    <xsl:param name="msg_back_to_main_results_action"
        select="'Back to main results'" />
    <xsl:variable name="filtered_url">
      <xsl:for-each
          select="/GSP/PARAM[(@name != 'start') and
                             (@name != 'swrnum') and
                             (@name != 'expertsearchasync') and
                             (@name != 'proxystylesheet') and
                             (@name != 'client') and
                             (@name != 'getfields') and
                             (@name != 'dnavs') and
                             (@name != 'filter') and
                             (@name != 'num') and
                             (@name != 'originalquery') and
                             (@name != 'emmain') and
                             (@name != 'emsingleres') and
                             (@name != 'emdstyle') and
                             (@name != 'expertsearchexpand') and
                             (@name != 'expertsearch') and
                             (@name != 'expertsearchfrontend') and
                             (@name != 'q') and
                             (@name != 'noscript_mode') and
                             (@name != 'epoch') and
                             not(starts-with(@name, 'metabased_'))]">
        <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
        <xsl:value-of select="@original_value"/>
        <xsl:if test="position() != last()">
          <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
        </xsl:if>
      </xsl:for-each>
    </xsl:variable>
    <xsl:variable name="back_to_link_href">
      <xsl:value-of select="$src_prefix" />
      <xsl:value-of select="$filtered_url" />
      <xsl:text disable-output-escaping="yes">&amp;q=</xsl:text>
      <xsl:value-of select="$original_query_" />
      <xsl:text disable-output-escaping="yes">&amp;proxystylesheet=</xsl:text>
      <xsl:value-of select="$expert_search_proxystylesheet_" />
      <xsl:text disable-output-escaping="yes">&amp;client=</xsl:text>
      <xsl:value-of select="$expert_search_proxystylesheet_" />
    </xsl:variable>
    <xsl:if test="$expert_search_proxystylesheet_ != ''">
      <a>
        <xsl:attribute name="href" select="$back_to_link_href" />
        <xsl:text>&lt;&lt; </xsl:text>
        <xsl:value-of select="$msg_back_to_main_results_action" />
      </a>
    </xsl:if>
  </xsl:template>

  <!--
    Renders the HTML markup for the expert search results section.

    Params:
      src_prefix: The prefix that should be added to the query string.
      is_noscript_mode: Set to 'true' if markup related to the noscript scenario
          should be returned.
      current_search_query_args: The current query string extracted from the
          absolute incoming search request params.
      msg_expert_search_no_experts_found: Localized message string to be
          displayed when no result(s) are present.
      msg_expert_search_switch_to_expanded_mode: Localized message string to be
          displayed for switching to the expanded mode.
      msg_results_page_number_prefix: Localized message string to be displayed
          as prefix for the search results page number.
      msg_go_to_previous_page: Localized message string to be displayed for
          going to previous results page help text.
      msg_go_to_previous_page: Localized message string to be displayed for
          going to next results page help text.
      msg_previous_page_action: Localized message string to be displayed for the
          previous page action link.
      msg_next_page_action: Localized message string to be displayed for the
          next page action link.
    Returns:
      The HTML markup containing expert results section.
  -->
  <xsl:template name="render_expert_search_results">
    <xsl:param name="src_prefix" select="'?'" />
    <xsl:param name="is_noscript_mode" select="'false'" />
    <xsl:param name="current_search_query_args" select="''" />
    <xsl:param name="msg_expert_search_no_experts_found"
        select="'No expert(s) found.'" />
    <xsl:param name="msg_expert_search_switch_to_expanded_mode"
        select="'Switch to the expert search results expanded mode'" />
    <xsl:param name="msg_results_page_number_prefix" select="'Page'" />
    <xsl:param name="msg_go_to_previous_page"
        select="'Go to the previous results page'" />
    <xsl:param name="msg_go_to_next_page"
        select="'Go to the next results page'" />
    <xsl:param name="msg_previous_page_action" select="'Prev'" />
    <xsl:param name="msg_next_page_action" select="'Next'" />
    <xsl:choose>
      <!-- Return iframe to handle noscript scenario. -->
      <xsl:when test="$is_noscript_mode = 'true'">
        <xsl:call-template
            name="render_expert_search_results_in_noscript_mode_">
          <xsl:with-param name="src_prefix" select="$src_prefix" />
        </xsl:call-template>
      </xsl:when>
      <!--
        Return full HTML document when results are not requested through the
        JavaScript component and it's not expanded mode. This happens in
        the noscript mode or when directly opening the widget view in browser
        without JavaScript component requesting the same.
      -->
      <xsl:when test="(not($is_expert_async_search_) and
          not($is_expanded_mode_)) or $noscript_mode_ = 'true'">
        <xsl:text disable-output-escaping="yes">&lt;</xsl:text>
        <xsl:text disable-output-escaping="yes">!DOCTYPE html</xsl:text>
        <xsl:text disable-output-escaping="yes">></xsl:text>
        <html>
          <head>
            <xsl:call-template name="include_expert_search_css" >
              <xsl:with-param name="doc_dir" select="'ltr'" />
              <xsl:with-param name="src_prefix" select="'//static-gsa.s3-website-ap-southeast-2.amazonaws.com'" />
            </xsl:call-template>
          </head>
          <body>
            <div id="exp-results-container"></div>
            <xsl:call-template name="include_expert_search_js" />
            <xsl:call-template name="include_expert_search_js_init">
              <xsl:with-param name="dom_container"
                  select="'exp-results-container'" />
            </xsl:call-template>
            <noscript>
              <xsl:call-template name="render_expert_search_results_">
                <xsl:with-param name="href_prefix" select="$src_prefix" />
                <xsl:with-param name="current_search_query_args"
                    select="$current_search_query_args" />
                <xsl:with-param name="msg_expert_search_no_experts_found"
                    select="$msg_expert_search_no_experts_found" />
                <xsl:with-param name="msg_expert_search_switch_to_expanded_mode"
                    select="$msg_expert_search_switch_to_expanded_mode" />
                <xsl:with-param name="msg_results_page_number_prefix"
                    select="$msg_results_page_number_prefix" />
                <xsl:with-param name="msg_go_to_previous_page"
                    select="$msg_go_to_previous_page" />
                <xsl:with-param name="msg_go_to_next_page"
                    select="$msg_go_to_next_page" />
                <xsl:with-param name="msg_previous_page_action"
                    select="$msg_previous_page_action" />
                <xsl:with-param name="msg_next_page_action"
                    select="$msg_next_page_action" />
              </xsl:call-template>
            </noscript>
          </body>
        </html>
      </xsl:when>
      <!--
        If the request is asynchronous via the JavaScript component then only
        return the results section markup.
      -->
      <xsl:otherwise>
        <xsl:call-template name="render_expert_search_results_">
          <xsl:with-param name="href_prefix" select="$src_prefix" />
          <xsl:with-param name="current_search_query_args"
              select="$current_search_query_args" />
          <xsl:with-param name="msg_expert_search_no_experts_found"
              select="$msg_expert_search_no_experts_found" />
          <xsl:with-param name="msg_expert_search_switch_to_expanded_mode"
              select="$msg_expert_search_switch_to_expanded_mode" />
          <xsl:with-param name="msg_results_page_number_prefix"
              select="$msg_results_page_number_prefix" />
          <xsl:with-param name="msg_go_to_previous_page"
              select="$msg_go_to_previous_page" />
          <xsl:with-param name="msg_go_to_next_page"
              select="$msg_go_to_next_page" />
          <xsl:with-param name="msg_previous_page_action"
              select="$msg_previous_page_action" />
          <xsl:with-param name="msg_next_page_action"
              select="$msg_next_page_action" />
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- ************ END OF PUBLIC VARIABLES AND TEMPLATES  *************  -->

  <!--
    Matches the root element and calls the expert search template if test_mode
    is enabled. This is mainly used during development.
  -->
  <xsl:template match="/">
    <xsl:if test="$test_mode = '1'">
    <xsl:choose>
      <xsl:when test="$is_expert_search_configured = '1'">
        <xsl:call-template name="render_expert_search_results" />
      </xsl:when>
    </xsl:choose>
    </xsl:if>
    <xsl:if test="$test_mode = '0'">
      <xsl:apply-templates />
    </xsl:if>
  </xsl:template>
</xsl:stylesheet>



              ]]></stylesheet.en>
              <synonyms><![CDATA[

              ]]></synonyms>
              <wildcard_wc_filter><![CDATA[
200

              ]]></wildcard_wc_filter>
          </frontend>
          <frontend Name="scu_footer2">
              <default_language><![CDATA[
'en'
              ]]></default_language>
              <profile_sheet><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet>
              <profile_sheet.en><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet.en>
              <access_control_allow_origin><![CDATA[


              ]]></access_control_allow_origin>
              <badurls_noreturn><![CDATA[

              ]]></badurls_noreturn>
              <content_type><![CDATA[
text/html
              ]]></content_type>
              <domain_filter><![CDATA[

              ]]></domain_filter>
              <filetype_filter><![CDATA[

              ]]></filetype_filter>
              <good_ips><![CDATA[
0.0.0.0/0

              ]]></good_ips>
              <googlematch><![CDATA[

              ]]></googlematch>
              <lang_filter><![CDATA[

              ]]></lang_filter>
              <metatag_filter><![CDATA[

              ]]></metatag_filter>
              <query_expansion_filter><![CDATA[
QE_FULL

              ]]></query_expansion_filter>
              <query_expansion_meta_filter><![CDATA[
QE_META_NONE

              ]]></query_expansion_meta_filter>
              <scoring_policy_filter><![CDATA[

              ]]></scoring_policy_filter>
              <star_wildcard_default_filter><![CDATA[
1

              ]]></star_wildcard_default_filter>
              <stylesheet><![CDATA[
<!-- *** START OF STYLESHEET *** -->

<!-- **********************************************************************
 XSL to format the search output for Google Search Appliance
     ********************************************************************** -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
<xsl:template name="my_page_footer">
  <span class="p">
    <xsl:text disable-output-escaping="yes">
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://s3-ap-southeast-2.amazonaws.com/static-gsa/scu-footer2.css&quot; /&gt;
&lt;div id=&quot;content-after&quot;&gt;&lt;/div&gt;
&lt;footer role=&quot;contentinfo&quot; class=&quot;clearfix&quot;&gt;
&lt;div class=&quot;footer-nav&quot;&gt;
&lt;nav&gt;
&lt;h4&gt;Most popular&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://search.scu.edu.au/courses/#year=2016&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-2016CourseOptions&#039;]);&quot;&gt;2016 course options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/international/index.php/220/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-2016InternationalCourseOptions&#039;]);&quot;&gt;2016 international course options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/futurestudents/index.php/20/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-Accommodation&#039;]);&quot;&gt;Accommodation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/distance/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-DistanceOnlineStudy&#039;]);&quot;&gt;Distance and online study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/it/messaging/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-EmailCalendaring&#039;]);&quot;&gt;Email and calendaring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/jobs/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-Jobs&#039;]);&quot;&gt;Jobs @ SCU&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Important&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://scu.edu.au/scuinfodays/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-InfoDays&#039;]);&quot;&gt;SCU Info Days  &lt;sup class=&quot;minilabel&quot; style=&quot;font-size: 8px;&quot;&gt; NEW &lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/futurestudents/index.php/7/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-Dates&#039;]);&quot;&gt;Key application dates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/myenrolment/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-MyEnrolment&#039;]);&quot;&gt;My Enrolment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/orientation/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-Orientation&#039;]);&quot;&gt;Orientation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/scholarships/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-Scholarships&#039;]);&quot;&gt;Scholarships&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/news/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-SCUNews&#039;]);&quot;&gt;SCU News&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt; &lt;nav&gt;
&lt;h4&gt;Courses&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/business-tourism/index.php/3/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-Bus&#039;]);&quot;&gt;Business&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/arts-social-sciences/index.php/2#course_cat_7090&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-CrePerArt&#039;]);&quot;&gt;Creative and Performing Arts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/education/index.php/4/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-Edu&#039;]);&quot;&gt;Education&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/environment-science-engineering/index.php/22/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-ESE&#039;]);&quot;&gt;Environment, Science and Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/health-sciences/index.php/34/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-HHS&#039;]);&quot;&gt;Health and Human Sciences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/arts-social-sciences/index.php/2/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-HSS&#039;]);&quot;&gt;Humanities and Social Sciences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/gnibi-indigenous-studies/index.php/2/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-Ind&#039;]);&quot;&gt;Indigenous Studies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/business-tourism/index.php/3/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-IT&#039;]);&quot;&gt;Information Technology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/law-justice/index.php/5/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-Law&#039;]);&quot;&gt;Law and Justice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scucollege.scu.edu.au/index.php/13/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-SCUC&#039;]);&quot;&gt;SCU College and Preparatory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/business-tourism/index.php/3/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-THM&#039;]);&quot;&gt;Tourism and Hospitality&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Course information&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/futurestudents/index.php/dds#cat1634/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CI-2015StudyGuide&#039;]);&quot;&gt;2015 study guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/futurestudents/index.php/dds#cat1637/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CI-CourseBrochures&#039;]);&quot;&gt;Course brochures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/courseguide/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CI-CouEnrGui&#039;]);&quot;&gt;Course enrolment guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/scuinfodays/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CI-InfoDays&#039;]);&quot;&gt;SCU Info Days&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/nav&gt; &lt;nav&gt;
&lt;h4&gt;Information for&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/alumni/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-Alumni&#039;]);&quot;&gt;Alumni&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/distance/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-DE&#039;]);&quot;&gt;Distance and online study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/futurestudents/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-FS&#039;]);&quot;&gt;Future students&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/international/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-IS&#039;]);&quot;&gt;International students&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/postgraduate/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-PostgRes&#039;]);&quot;&gt;Postgraduate and research&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/students/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-Students&#039;]);&quot;&gt;SCU students&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/risingstars/index.php/3/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-ScholSupp&#039;]);&quot;&gt;Scholarship supporters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Connect with SCU&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/scunews/index.php/31#facebook&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-Facebook&#039;]);&quot;&gt;&lt;img src=&quot;http://scu.edu.au/SCU-template/img/share-sml/facebook-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on Facebook&quot; title=&quot;Southern Cross University on Facebook&quot;&gt; Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/scunews/index.php/31#twitter&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-Twitter&#039;]);&quot;&gt;&lt;img src=&quot;http://scu.edu.au/SCU-template/img/share-sml/twitter-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on Twitter&quot; title=&quot;Southern Cross University on Twitter&quot;&gt; Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/scunews/index.php/31#linkedin&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-LinkedIn&#039;]);&quot;&gt;&lt;img src=&quot;http://scu.edu.au/SCU-template/img/share-sml/linkedin-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on LinkedIn&quot; title=&quot;Southern Cross University on LinkedIn&quot;&gt; LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/scunews/index.php/31#youtube&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-YouTube&#039;]);&quot;&gt;&lt;img src=&quot;http://scu.edu.au/SCU-template/img/share-sml/youtube-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on YouTube&quot; title=&quot;Southern Cross University on YouTube&quot;&gt; YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/itunesu/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-iTunesU&#039;]);&quot;&gt;&lt;img src=&quot;http://scu.edu.au/SCU-template/img/share-sml/itunesu-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on iTunes&quot; title=&quot;Southern Cross University on iTunes&quot;&gt; iTunesU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/enquiries/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-OnlineEnquiry&#039;]);&quot;&gt;Online enquiry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/nav&gt; &lt;nav class=&quot;last&quot;&gt;
&lt;h4&gt;Commercial services&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/eal/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-EAL&#039;]);&quot;&gt;Environmental Analysis Laboratory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://invercauldhouse.com.au/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-InvHouse&#039;]);&quot;&gt;Invercauld House&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://catering.scu.edu.au/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-SCUCater&#039;]);&quot;&gt;SCU Catering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://gymandpool.scu.edu.au/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-SCUGymPool&#039;]);&quot;&gt;SCU Fitness for You&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/healthclinic/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-SCUHC&#039;]);&quot;&gt;SCU Health Clinic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://unibarandcafe.scu.edu.au/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-SCUUniBarCafe&#039;]);&quot;&gt;SCU Unibar and Cafe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Information about&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/space/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;InfA-CommEng&#039;]);&quot;&gt;Community Engagement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/governance/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;InfA-Gover&#039;]);&quot;&gt;Governance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/docs/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;InfA-PubPol&#039;]);&quot;&gt;Publications and Policies&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;padding-bottom: 10px;&quot;&gt;&lt;a href=&quot;http://scu.edu.au/sustainability/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;InfA-Sust&#039;]);&quot;&gt;Sustainability&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;a id=&quot;RUN-link&quot; href=&quot;http://www.run.edu.au/&quot; target=&quot;_blank&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;RUNimg&#039;]);&quot;&gt;&lt;img title=&quot;Regional Universities Network&quot; src=&quot;//scu.edu.au/assets/res/i/scu/RUN_Logo.jpg&quot; alt=&quot;The Regional Universities Network (RUN) is a network of six universities with headquarters in regional Australia and a shared commitment to playing a transformative role in their regions.&quot;&gt;&lt;/a&gt;
&lt;/nav&gt;
&lt;/div&gt;
&lt;div class=&quot;footer-shadow&quot;&gt;&lt;/div&gt;
&lt;p class=&quot;top-link&quot;&gt;&lt;a href=&quot;#&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-Top&#039;]);&quot;&gt;top&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;global-footer&quot;&gt;
&lt;span class=&quot;SCU-copy-title&quot;&gt;&#169; &lt;a href=&quot;http://scu.edu.au/&quot; title=&quot;Southern Cross University&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-SCU&#039;]);&quot;&gt;Southern Cross University&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;sep titlesep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://scu.edu.au/wwwadmin/disclaimer/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-Legals&#039;]);&quot;&gt;Legals&lt;/a&gt;&lt;span class=&quot;sep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://scu.edu.au/privacy/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-Privacy&#039;]);&quot;&gt;Privacy&lt;/a&gt;&lt;span class=&quot;sep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://scu.edu.au/scunews/index.php/72/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-Accessibility&#039;]);&quot;&gt;Accessibility&lt;/a&gt;&lt;span class=&quot;sep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://scu.edu.au/contact/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-ContactUs&#039;]);&quot;&gt;Contact Us&lt;/a&gt;&lt;span class=&quot;admin-link&quot;&gt;&lt;span class=&quot;sep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://study.scu.edu.au/websys/content/index.php?site_id=50&amp;amp;action=Edit%20Item&amp;amp;page_id=31&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-SiteAdmin&#039;]);&quot;&gt;Site Admin&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;sep abnsep&quot;&gt; | &lt;/span&gt;&lt;span class=&quot;SCU-abn&quot;&gt;ABN: 41 995 651 524&lt;/span&gt;&lt;span class=&quot;sep cricosep&quot;&gt; | &lt;/span&gt;&lt;span class=&quot;SCU-cricos&quot;&gt;CRICOS Provider: 01241G&lt;/span&gt;
&lt;/p&gt;
&lt;/footer&gt;
    </xsl:text>
  </span>
  <xsl:apply-templates select="TraceNode"/>
</xsl:template>
</xsl:stylesheet>


              ]]></stylesheet>
              <stylesheet.en><![CDATA[
<!-- *** START OF STYLESHEET *** -->

<!-- **********************************************************************
 XSL to format the search output for Google Search Appliance
     ********************************************************************** -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
<xsl:template name="my_page_footer">
  <span class="p">
    <xsl:text disable-output-escaping="yes">
&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://s3-ap-southeast-2.amazonaws.com/static-gsa/scu-footer2.css&quot; /&gt;
&lt;div id=&quot;content-after&quot;&gt;&lt;/div&gt;
&lt;footer role=&quot;contentinfo&quot; class=&quot;clearfix&quot;&gt;
&lt;div class=&quot;footer-nav&quot;&gt;
&lt;nav&gt;
&lt;h4&gt;Most popular&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://search.scu.edu.au/courses/#year=2016&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-2016CourseOptions&#039;]);&quot;&gt;2016 course options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/international/index.php/220/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-2016InternationalCourseOptions&#039;]);&quot;&gt;2016 international course options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/futurestudents/index.php/20/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-Accommodation&#039;]);&quot;&gt;Accommodation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/distance/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-DistanceOnlineStudy&#039;]);&quot;&gt;Distance and online study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/it/messaging/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-EmailCalendaring&#039;]);&quot;&gt;Email and calendaring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/jobs/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-Jobs&#039;]);&quot;&gt;Jobs @ SCU&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Important&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://scu.edu.au/scuinfodays/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-InfoDays&#039;]);&quot;&gt;SCU Info Days  &lt;sup class=&quot;minilabel&quot; style=&quot;font-size: 8px;&quot;&gt; NEW &lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/futurestudents/index.php/7/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-Dates&#039;]);&quot;&gt;Key application dates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/myenrolment/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-MyEnrolment&#039;]);&quot;&gt;My Enrolment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/orientation/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-Orientation&#039;]);&quot;&gt;Orientation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/scholarships/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-Scholarships&#039;]);&quot;&gt;Scholarships&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/news/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-SCUNews&#039;]);&quot;&gt;SCU News&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt; &lt;nav&gt;
&lt;h4&gt;Courses&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/business-tourism/index.php/3/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-Bus&#039;]);&quot;&gt;Business&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/arts-social-sciences/index.php/2#course_cat_7090&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-CrePerArt&#039;]);&quot;&gt;Creative and Performing Arts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/education/index.php/4/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-Edu&#039;]);&quot;&gt;Education&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/environment-science-engineering/index.php/22/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-ESE&#039;]);&quot;&gt;Environment, Science and Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/health-sciences/index.php/34/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-HHS&#039;]);&quot;&gt;Health and Human Sciences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/arts-social-sciences/index.php/2/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-HSS&#039;]);&quot;&gt;Humanities and Social Sciences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/gnibi-indigenous-studies/index.php/2/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-Ind&#039;]);&quot;&gt;Indigenous Studies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/business-tourism/index.php/3/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-IT&#039;]);&quot;&gt;Information Technology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/law-justice/index.php/5/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-Law&#039;]);&quot;&gt;Law and Justice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scucollege.scu.edu.au/index.php/13/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-SCUC&#039;]);&quot;&gt;SCU College and Preparatory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/business-tourism/index.php/3/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-THM&#039;]);&quot;&gt;Tourism and Hospitality&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Course information&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/futurestudents/index.php/dds#cat1634/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CI-2015StudyGuide&#039;]);&quot;&gt;2015 study guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/futurestudents/index.php/dds#cat1637/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CI-CourseBrochures&#039;]);&quot;&gt;Course brochures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/courseguide/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CI-CouEnrGui&#039;]);&quot;&gt;Course enrolment guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/scuinfodays/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CI-InfoDays&#039;]);&quot;&gt;SCU Info Days&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/nav&gt; &lt;nav&gt;
&lt;h4&gt;Information for&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/alumni/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-Alumni&#039;]);&quot;&gt;Alumni&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/distance/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-DE&#039;]);&quot;&gt;Distance and online study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/futurestudents/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-FS&#039;]);&quot;&gt;Future students&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/international/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-IS&#039;]);&quot;&gt;International students&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/postgraduate/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-PostgRes&#039;]);&quot;&gt;Postgraduate and research&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/students/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-Students&#039;]);&quot;&gt;SCU students&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/risingstars/index.php/3/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-ScholSupp&#039;]);&quot;&gt;Scholarship supporters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Connect with SCU&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/scunews/index.php/31#facebook&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-Facebook&#039;]);&quot;&gt;&lt;img src=&quot;http://scu.edu.au/SCU-template/img/share-sml/facebook-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on Facebook&quot; title=&quot;Southern Cross University on Facebook&quot;&gt; Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/scunews/index.php/31#twitter&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-Twitter&#039;]);&quot;&gt;&lt;img src=&quot;http://scu.edu.au/SCU-template/img/share-sml/twitter-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on Twitter&quot; title=&quot;Southern Cross University on Twitter&quot;&gt; Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/scunews/index.php/31#linkedin&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-LinkedIn&#039;]);&quot;&gt;&lt;img src=&quot;http://scu.edu.au/SCU-template/img/share-sml/linkedin-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on LinkedIn&quot; title=&quot;Southern Cross University on LinkedIn&quot;&gt; LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/scunews/index.php/31#youtube&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-YouTube&#039;]);&quot;&gt;&lt;img src=&quot;http://scu.edu.au/SCU-template/img/share-sml/youtube-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on YouTube&quot; title=&quot;Southern Cross University on YouTube&quot;&gt; YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/itunesu/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-iTunesU&#039;]);&quot;&gt;&lt;img src=&quot;http://scu.edu.au/SCU-template/img/share-sml/itunesu-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on iTunes&quot; title=&quot;Southern Cross University on iTunes&quot;&gt; iTunesU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/enquiries/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-OnlineEnquiry&#039;]);&quot;&gt;Online enquiry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/nav&gt; &lt;nav class=&quot;last&quot;&gt;
&lt;h4&gt;Commercial services&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/eal/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-EAL&#039;]);&quot;&gt;Environmental Analysis Laboratory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://invercauldhouse.com.au/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-InvHouse&#039;]);&quot;&gt;Invercauld House&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://catering.scu.edu.au/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-SCUCater&#039;]);&quot;&gt;SCU Catering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://gymandpool.scu.edu.au/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-SCUGymPool&#039;]);&quot;&gt;SCU Fitness for You&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/healthclinic/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-SCUHC&#039;]);&quot;&gt;SCU Health Clinic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://unibarandcafe.scu.edu.au/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-SCUUniBarCafe&#039;]);&quot;&gt;SCU Unibar and Cafe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Information about&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/space/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;InfA-CommEng&#039;]);&quot;&gt;Community Engagement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/governance/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;InfA-Gover&#039;]);&quot;&gt;Governance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/docs/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;InfA-PubPol&#039;]);&quot;&gt;Publications and Policies&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;padding-bottom: 10px;&quot;&gt;&lt;a href=&quot;http://scu.edu.au/sustainability/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;InfA-Sust&#039;]);&quot;&gt;Sustainability&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;a id=&quot;RUN-link&quot; href=&quot;http://www.run.edu.au/&quot; target=&quot;_blank&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;RUNimg&#039;]);&quot;&gt;&lt;img title=&quot;Regional Universities Network&quot; src=&quot;//scu.edu.au/assets/res/i/scu/RUN_Logo.jpg&quot; alt=&quot;The Regional Universities Network (RUN) is a network of six universities with headquarters in regional Australia and a shared commitment to playing a transformative role in their regions.&quot;&gt;&lt;/a&gt;
&lt;/nav&gt;
&lt;/div&gt;
&lt;div class=&quot;footer-shadow&quot;&gt;&lt;/div&gt;
&lt;p class=&quot;top-link&quot;&gt;&lt;a href=&quot;#&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-Top&#039;]);&quot;&gt;top&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;global-footer&quot;&gt;
&lt;span class=&quot;SCU-copy-title&quot;&gt;&#169; &lt;a href=&quot;http://scu.edu.au/&quot; title=&quot;Southern Cross University&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-SCU&#039;]);&quot;&gt;Southern Cross University&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;sep titlesep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://scu.edu.au/wwwadmin/disclaimer/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-Legals&#039;]);&quot;&gt;Legals&lt;/a&gt;&lt;span class=&quot;sep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://scu.edu.au/privacy/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-Privacy&#039;]);&quot;&gt;Privacy&lt;/a&gt;&lt;span class=&quot;sep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://scu.edu.au/scunews/index.php/72/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-Accessibility&#039;]);&quot;&gt;Accessibility&lt;/a&gt;&lt;span class=&quot;sep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://scu.edu.au/contact/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-ContactUs&#039;]);&quot;&gt;Contact Us&lt;/a&gt;&lt;span class=&quot;admin-link&quot;&gt;&lt;span class=&quot;sep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://study.scu.edu.au/websys/content/index.php?site_id=50&amp;amp;action=Edit%20Item&amp;amp;page_id=31&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-SiteAdmin&#039;]);&quot;&gt;Site Admin&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;sep abnsep&quot;&gt; | &lt;/span&gt;&lt;span class=&quot;SCU-abn&quot;&gt;ABN: 41 995 651 524&lt;/span&gt;&lt;span class=&quot;sep cricosep&quot;&gt; | &lt;/span&gt;&lt;span class=&quot;SCU-cricos&quot;&gt;CRICOS Provider: 01241G&lt;/span&gt;
&lt;/p&gt;
&lt;/footer&gt;
    </xsl:text>
  </span>
  <xsl:apply-templates select="TraceNode"/>
</xsl:template>
</xsl:stylesheet>


              ]]></stylesheet.en>
              <synonyms><![CDATA[

              ]]></synonyms>
              <wildcard_wc_filter><![CDATA[
200

              ]]></wildcard_wc_filter>
          </frontend>
          <frontend Name="scu_frontend">
              <default_language><![CDATA[
'en'
              ]]></default_language>
              <profile_sheet><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet>
              <profile_sheet.en><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet.en>
              <access_control_allow_origin><![CDATA[


              ]]></access_control_allow_origin>
              <badurls_noreturn><![CDATA[
http://staff.scu.edu.au/
http://study.scu.edu.au/
contains:www.scu.edu.au/services/studentservices/sou/sched
              ]]></badurls_noreturn>
              <content_type><![CDATA[
text/html
              ]]></content_type>
              <domain_filter><![CDATA[

              ]]></domain_filter>
              <filetype_filter><![CDATA[

              ]]></filetype_filter>
              <good_ips><![CDATA[
0.0.0.0/0

              ]]></good_ips>
              <googlematch><![CDATA[

              ]]></googlematch>
              <lang_filter><![CDATA[

              ]]></lang_filter>
              <metatag_filter><![CDATA[

              ]]></metatag_filter>
              <query_expansion_filter><![CDATA[
QE_FULL
              ]]></query_expansion_filter>
              <query_expansion_meta_filter><![CDATA[
QE_META_NONE
              ]]></query_expansion_meta_filter>
              <scoring_policy_filter><![CDATA[
a__my_policy
              ]]></scoring_policy_filter>
              <star_wildcard_default_filter><![CDATA[
1
              ]]></star_wildcard_default_filter>
              <stylesheet><![CDATA[
<!-- *** START OF STYLESHEET *** -->

<!-- **********************************************************************
XSL to format the search output for Google Search Appliance
   ********************************************************************** -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
<xsl:import href="scu_snippets"/>

<!-- **********************************************************************
GSA embedded mode support for websites that wants to display GSA search
experience embedded inside the parent container via  proxying the
request to the GSA. DO NOT EDIT the below part.
*************************************************************************** -->
<!-- Incoming query parameter identifying root path prefix to be used for links
   that should refresh the main page. -->
<xsl:variable name="embedded_mode_root_path_param" select="'emmain'" />
<!-- Incoming query parameter identifying root path prefix to be used for
   resources that should be loaded in isolation e.g. images, CSS, JS,
   AJAX requests etc. over an HTTP connection. -->
<xsl:variable name="embedded_mode_resource_root_path_param"
  select="'emsingleres'" />
<!-- Incoming query parameter for enabling/disabling style for embedded
   mode. -->
<xsl:variable name="embedded_mode_disable_style" select="'emdstyle'" />
<!-- Incoming query parameter specifying the GSA host name to be used for
   documill full preview viewer. -->
<xsl:variable name="embedded_mode_dps_viewer_param" select="'emdvhost'" />
<!-- Root path prefix for full-refresh requests that should be used instead
   of GSA's default "/search" root path prefix. -->
<xsl:variable name="embedded_mode_root_path_prefix"
  select="/GSP/PARAM[@name=$embedded_mode_root_path_param]/@value" />
<!-- Root path prefix for resources (e.g. CSS, images, JavaScript, AJAX requests
   etc.) that should be used instead of GSA's default "/" root path
   prefix. -->
<xsl:variable name="embedded_mode_resource_root_path_prefix"
  select="/GSP/PARAM[@name=$embedded_mode_resource_root_path_param]/@value" />
<!-- The GSA host to be used for documill full preview viewer. -->
<xsl:variable name="embedded_mode_dps_viewer_host"
  select="/GSP/PARAM[@name=$embedded_mode_dps_viewer_param]/@value" />
<!-- Checks if style should be disabled in embedded mode or not. -->
<xsl:variable name="is_disable_style_in_embedded_mode"
select="
if (/GSP/PARAM[@name=$embedded_mode_disable_style]/@value = 'true') then '1'
else '0'" />
<!-- Regex for matching relative path starting with a '/' character
   and not having a following '/' character. -->
<xsl:variable name="relative_path_only_regex">^(/)[^/].*</xsl:variable>
<!-- Checks if the incoming root path prefix arguments are relative paths as
   we don't want to allow absolute paths. -->
<xsl:variable name="invalid_embedded_mode_request" >
<xsl:if test="
    not(matches(
        $embedded_mode_root_path_prefix, $relative_path_only_regex)) or
    not(matches(
        $embedded_mode_resource_root_path_prefix, $relative_path_only_regex))">
  <xsl:value-of select="'1'" />
</xsl:if>
</xsl:variable>
<!-- Flag to signal if current mode is embeddeded or not.
   '1' - yes, '0' - No -->
<xsl:variable name="is_embedded_mode"
  select="if ($embedded_mode_root_path_prefix != '' and
              $invalid_embedded_mode_request != '1') then '1' else '0'" />

<!-- **********************************************************************
Root path prefix variables that should be used for search and static
resources throughout.
********************************************************************** -->
<!-- Root path prefix for search requests that should be used instead of GSA's
   default "/search" root path prefix. -->
<xsl:variable name="gsa_search_root_path_prefix">
<xsl:choose>
  <xsl:when test="$embedded_mode_root_path_prefix != '' and
                  $invalid_embedded_mode_request != '1'">
    <xsl:value-of select="$embedded_mode_root_path_prefix" />
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="'/search'" />
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>
<!-- Root path prefix for resources files (e.g. CSS, images, JavaScript etc.)
   and other HTTP requests that should be processed in isolation
   (e.g. Iframe, AJAX etc.) -->
<xsl:variable name="gsa_resource_root_path_prefix">
<xsl:choose>
  <xsl:when test="$embedded_mode_resource_root_path_prefix != '' and
                  $invalid_embedded_mode_request != '1'">
    <xsl:value-of select="$embedded_mode_resource_root_path_prefix" />
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="''" />
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- SCU Variables -->
<!-- get the environment variables for this front end -->
<xsl:include href="env_variables"/>
<xsl:variable name="app_title">Site Search</xsl:variable>
<!-- Search input placeholder variable -->
<xsl:variable name="q_input_placeholder_text">search site</xsl:variable>

<!-- **********************************************************************
include customer-onebox.xsl, which is auto-generated from the customer's
set of OneBox Module definitions, and in turn invokes either the default
OneBox template, or the customer's:
********************************************************************** -->
<xsl:include href="customer-onebox.xsl"/>

<!--
Expert Search - Include the expert search XSL to get expert search
functionality. Please DO NOT remove this import as template and
variables inside this XSL are being used below. To find all expert search
related changes in this XSL search for "Expert Search" (quotes for clarity)
string.
-->
<xsl:include href="scu_experts"/>

<xsl:output method="html"/>

<!-- **********************************************************************
Logo setup (can be customized)
   - whether to show logo: 0 for FALSE, 1 (or non-zero) for TRUE
   - logo url
   - logo size: '' for default image size
   ********************************************************************** -->
<xsl:variable name="show_logo">0</xsl:variable>
<xsl:variable name="logo_url"><xsl:value-of
  select="$gsa_resource_root_path_prefix" />images/Title_Left.png</xsl:variable>
<xsl:variable name="logo_width">200</xsl:variable>
<xsl:variable name="logo_height">78</xsl:variable>

<!-- **********************************************************************
Global Style variables (can be customized): '' for using browser's default
   ********************************************************************** -->

<xsl:variable name="global_font">arial,sans-serif</xsl:variable>
<xsl:variable name="global_font_size">#000000</xsl:variable>
<xsl:variable name="global_bg_color">#EEF5FF</xsl:variable>
<xsl:variable name="global_text_color">#000000</xsl:variable>
<xsl:variable name="global_link_color">#0000cc</xsl:variable>
<xsl:variable name="global_vlink_color">#551a8b</xsl:variable>
<xsl:variable name="global_alink_color">#ff0000</xsl:variable>


<!-- **********************************************************************
Result page components (can be customized)
   - whether to show a component: 0 for FALSE, non-zero (e.g., 1) for TRUE
   - text and style
   ********************************************************************** -->

<!-- *** choose result page header: '', 'provided', 'mine', or 'both' *** -->
<xsl:variable name="choose_result_page_header">both</xsl:variable>

<!-- *** show custom tabs on the GSA *** -->
<xsl:variable name="show_custom_tabs">1</xsl:variable>

<!-- *** customize provided result page header *** -->
<xsl:variable name="show_swr_link">0</xsl:variable>
<xsl:variable name="swr_search_anchor_text">Search Within Results</xsl:variable>
<xsl:variable name="show_result_page_adv_link">0</xsl:variable>
<xsl:variable name="adv_search_anchor_text">Advanced Search</xsl:variable>
<xsl:variable name="show_result_page_help_link">0</xsl:variable>
<xsl:variable name="search_help_anchor_text">Search Tips</xsl:variable>

<!-- *** search boxes *** -->
<xsl:variable name="show_top_search_box">1</xsl:variable>
<xsl:variable name="show_bottom_search_box">0</xsl:variable>
<xsl:variable name="search_box_size">200</xsl:variable>

<!-- *** choose search button type: 'text' or 'image' *** -->
<xsl:variable name="choose_search_button">image</xsl:variable>
<xsl:variable name="search_button_text"></xsl:variable>
<xsl:variable name="search_button_image_url"><xsl:value-of select="$scu_template_img_path" />/magnifier-grey.png</xsl:variable>
<xsl:variable name="search_collections_xslt"></xsl:variable>

<!-- *** search info bars *** -->
<xsl:variable name="show_search_info">1</xsl:variable>

<!-- *** choose separation bar: 'ltblue', 'blue', 'line', 'nothing' *** -->
<xsl:variable name="choose_sep_bar">ltblue</xsl:variable>
<xsl:variable name="sep_bar_std_text"></xsl:variable>
<xsl:variable name="sep_bar_adv_text">Advanced Search</xsl:variable>
<xsl:variable name="sep_bar_error_text">Error</xsl:variable>

<!-- *** Custom variables created to show or hide elements ***  -->
<xsl:variable name="show_timing_label">0</xsl:variable>

<!-- *** navigation bars: '', 'google', 'link', or 'simple'.
       DO NOT use 'google' as the navigation bar type for secure search
       i.e. when access='a' or access='s', unless corpus estimate is enabled
       for all queries in Serving > Query Settings. Read documentation of
       "secure_bottom_navigation_type" variable below. *** -->
<xsl:variable name="show_top_navigation">0</xsl:variable>
<xsl:variable name="choose_bottom_navigation">link</xsl:variable>
<xsl:variable name="my_nav_align">right</xsl:variable>
<xsl:variable name="my_nav_size">-1</xsl:variable>
<xsl:variable name="my_nav_color">#6f6f6f</xsl:variable>

<!-- ***  navigation bar for secure search: DO NOT change.
   Please keep the navigation type as 'simple' for secure search i.e.
   when access='a' or access='s', unless corpus estimate is enabled
   for all queries in Serving > Query Settings, because otherwise results size
   estimation is not available for generating numbered pagination. *** -->
<xsl:variable name="secure_bottom_navigation_type">simple</xsl:variable>

<!-- *** sort by date/relevance *** -->
<xsl:variable name="show_sort_by">1</xsl:variable>

<!-- *** spelling suggestions *** -->
<xsl:variable name="show_spelling">1</xsl:variable>
<xsl:variable name="spelling_text">Did you mean:</xsl:variable>
<xsl:variable name="spelling_text_color">#cc0000</xsl:variable>

<!-- *** synonyms suggestions *** -->
<xsl:variable name="show_synonyms">1</xsl:variable>
<xsl:variable name="synonyms_text">You could also try:</xsl:variable>
<xsl:variable name="synonyms_text_color">#cc0000</xsl:variable>

<!-- *** keymatch suggestions *** -->
<xsl:variable name="show_keymatch">1</xsl:variable>
<xsl:variable name="keymatch_text">KeyMatch</xsl:variable>
<xsl:variable name="keymatch_text_color">#2255aa</xsl:variable>
<xsl:variable name="keymatch_bg_color">#e8e8ff</xsl:variable>

<!-- *** Google Desktop integration *** -->
<xsl:variable name="egds_show_search_tabs">0</xsl:variable>
<xsl:variable name="egds_appliance_tab_label">Appliance</xsl:variable>
<xsl:variable name="egds_show_desktop_results">1</xsl:variable>

<!-- *** onebox information *** -->
<xsl:variable name="show_onebox">1</xsl:variable>
<xsl:variable name="uar_provider"> GSA User-Added Results </xsl:variable>

<!-- *** analytics information *** -->
<xsl:variable name="analytics_account"></xsl:variable>

<!-- *** ASR enabling *** -->
<xsl:variable name="show_asr">1</xsl:variable>

<!-- *** UAR v2, Expert Search - Document directionality. Global variable to
       hold document directionality for the user language. *** -->
<xsl:variable name="document_direction">ltr</xsl:variable>

<!-- *** Dynamic Navigation *** -->
<xsl:variable name="show_dynamic_navigation">1</xsl:variable>
<xsl:variable name="dyn_nav_max_rows">6</xsl:variable>
<!-- Expert Search - render dynamic navigation if expanded mode with dynamic
   navigation is configured for this frontend. -->
<xsl:variable name="render_dynamic_navigation"><xsl:if
test="($show_dynamic_navigation != '0' or
       $show_expert_search_expanded_results = '1') and
       count(/GSP/RES/PARM) > 0">1</xsl:if>
</xsl:variable>

<!-- *** Show Google Apps results on right side as a sidebar element *** -->
<xsl:variable name="show_apps_segmented_ui">0</xsl:variable>

<!-- *** Google Site Search results *** -->
<xsl:variable name="show_gss_results">0</xsl:variable>
<xsl:variable name="gss_search_engine_id"></xsl:variable>

<!-- *** People Search results *** -->
<xsl:variable name="show_people_search">0</xsl:variable>

<!-- *** Translation Integration *** -->
<xsl:variable name="show_translation">1</xsl:variable>
<xsl:param name="translate_key"/>

<!-- *** Sidebar for holding elements that can load data asynchronously *** -->
<xsl:variable name="show_sidebar">
<xsl:choose>
  <!-- Expert Search - enable sidebar if expert search widget view is
       configured. -->
  <xsl:when test="($show_apps_segmented_ui = '1' or $show_gss_results = '1' or
                   $show_people_search = '1' or
                   $show_expert_search_widget_view = '1') and
                   $show_expert_search_expanded_results != '1' and
                   /GSP/Q != '' and
                   ($show_res_clusters = '0' or $res_cluster_position != 'right')">
    <xsl:value-of select="'1'"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="'0'"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** Document Previews *** -->
<xsl:variable name="show_document_previews">1</xsl:variable>

<!-- **********************************************************************
Result elements (can be customized)
   - whether to show an element ('1' for yes, '0' for no)
   - font/size/color ('' for using style of the context)
   ********************************************************************** -->

<!-- *** result title and snippet *** -->
<xsl:variable name="show_res_title">1</xsl:variable>
<xsl:variable name="res_title_length">65</xsl:variable>
<xsl:variable name="res_title_length_default">65</xsl:variable>
<xsl:variable name="res_title_color">#0000cc</xsl:variable>
<xsl:variable name="res_title_size"></xsl:variable>
<xsl:variable name="show_res_snippet">1</xsl:variable>
<xsl:variable name="res_snippet_size">100%</xsl:variable>

<!-- *** keyword match (in title or snippet) *** -->
<xsl:variable name="res_keyword_color"></xsl:variable>
<xsl:variable name="res_keyword_size"></xsl:variable>
<xsl:variable name="res_keyword_format">b</xsl:variable> <!-- 'b' for bold -->

<!-- *** link URL *** -->
<xsl:variable name="show_res_url">1</xsl:variable>
<xsl:variable name="res_url_color">#008000</xsl:variable>
<xsl:variable name="res_url_size">2%</xsl:variable>
<xsl:variable name="truncate_result_urls">1</xsl:variable>
<xsl:variable name="truncate_result_url_length">60</xsl:variable>

<!-- *** misc elements *** -->
<xsl:variable name="show_ips_in_search_url">1</xsl:variable>
<xsl:variable name="show_meta_tags">0</xsl:variable>
<xsl:variable name="show_res_size">1</xsl:variable>
<xsl:variable name="show_res_date">1</xsl:variable>
<xsl:variable name="show_res_cache">0</xsl:variable>

<!-- *** used in result cache link, similar pages link, and description *** -->
<xsl:variable name="faint_color">#7777cc</xsl:variable>

<!-- *** show secure results radio button *** -->
<xsl:variable name="show_secure_radio">1</xsl:variable>

<!-- *** show suggestions (remote aut-completions) *** -->
<xsl:variable name="show_suggest">1</xsl:variable>

<!-- **********************************************************************
Other variables (can be customized)
   ********************************************************************** -->

<!-- *** page title *** -->
<!-- execute SCU function to replace app name - syntax with blank space -->

<xsl:variable name="scu_title">SCU - <xsl:value-of select="$app_title"/></xsl:variable>
<xsl:variable name="front_page_title"><xsl:value-of select="$scu_title"/> Home</xsl:variable>
<xsl:variable name="result_page_title"><xsl:value-of select="$scu_title"/> Results</xsl:variable>
<xsl:variable name="adv_page_title"><xsl:value-of select="$scu_title"/> Advanced</xsl:variable>
<xsl:variable name="error_page_title"><xsl:value-of select="$scu_title"/> Error</xsl:variable>
<xsl:variable name="swr_page_title"><xsl:value-of select="$scu_title"/> Results</xsl:variable>

<!-- *** choose adv_search page header: '', 'provided', 'mine', or 'both' *** -->
<xsl:variable name="choose_adv_search_page_header">both</xsl:variable>

<!-- *** cached page header text *** -->
<xsl:variable name="cached_page_header_text">This is the cached copy of</xsl:variable>

<!-- *** error message text *** -->
<xsl:variable name="server_error_msg_text">A server error has occurred.</xsl:variable>
<xsl:variable name="server_error_des_text">Check server response code in details.</xsl:variable>
<xsl:variable name="xml_error_msg_text">Unknown XML result type.</xsl:variable>
<xsl:variable name="xml_error_des_text">View page source to see the offending XML.</xsl:variable>

<!-- *** advanced search page panel background color *** -->
<xsl:variable name="adv_search_panel_bgcolor">#cbdced</xsl:variable>

<!-- *** dynamic result cluster options *** -->
<xsl:variable name="show_res_clusters">1</xsl:variable>
<xsl:variable name="res_cluster_position">bottom</xsl:variable>

<!-- *** alerts2 options *** -->
<xsl:variable name="show_alerts2">0</xsl:variable>

<!-- Expert Search - i18n messages used by the expert search UI component. -->
<xsl:variable name="msg_back_to_main_results_action"><![CDATA[Back to main results\]\]\></xsl:variable>
<xsl:variable name="msg_expert_search_no_experts_found"><![CDATA[No expert(s) found.\]\]\></xsl:variable>
<xsl:variable name="msg_expert_search_switch_to_expanded_mode"><![CDATA[Switch to the expert search results expanded mode\]\]\></xsl:variable>
<xsl:variable name="msg_go_to_previous_page"><![CDATA[Go to the previous results page\]\]\></xsl:variable>
<xsl:variable name="msg_go_to_next_page"><![CDATA[Go to the next results page\]\]\></xsl:variable>
<xsl:variable name="msg_loading_expert_results"><![CDATA[Loading results...\]\]\></xsl:variable>
<xsl:variable name="msg_next_page_action"><![CDATA[Next\]\]\></xsl:variable>
<xsl:variable name="msg_previous_page_action"><![CDATA[Prev\]\]\></xsl:variable>
<xsl:variable name="msg_results_page_number_prefix"><![CDATA[Page\]\]\></xsl:variable>

<!-- *** UAR i18n messages *** -->
<xsl:variable name="msg_uar_added_by"><![CDATA[Added by\]\]\></xsl:variable>
<xsl:variable name="msg_uar_edit"><![CDATA[Edit\]\]\></xsl:variable>
<xsl:variable name="msg_uar_title"><![CDATA[Title\]\]\></xsl:variable>
<xsl:variable name="msg_uar_save"><![CDATA[Save\]\]\></xsl:variable>
<xsl:variable name="msg_uar_cancel"><![CDATA[Cancel\]\]\></xsl:variable>
<xsl:variable name="msg_uar_ok"><![CDATA[Ok\]\]\></xsl:variable>
<xsl:variable name="msg_uar_address"><![CDATA[Address\]\]\></xsl:variable>
<xsl:variable name="msg_uar_or"><![CDATA[or\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete"><![CDATA[delete\]\]\></xsl:variable>
<xsl:variable name="msg_uar_username"><![CDATA[UserName\]\]\></xsl:variable>
<xsl:variable name="msg_uar_less"><![CDATA[Less\]\]\></xsl:variable>
<xsl:variable name="msg_uar_more"><![CDATA[More\]\]\></xsl:variable>
<xsl:variable name="msg_uar_add_another_result"><![CDATA[Add another result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_add_a_result"><![CDATA[Add a result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_saving"><![CDATA[Saving\]\]\></xsl:variable>
<xsl:variable name="msg_uar_deleting"><![CDATA[Deleting\]\]\></xsl:variable>
<xsl:variable name="msg_uar_save_failed"><![CDATA[Save failed\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_failed"><![CDATA[Deletion failed\]\]\></xsl:variable>
<xsl:variable name="msg_uar_error_handling_request"><![CDATA[Error handling this request\]\]\></xsl:variable>
<xsl:variable name="msg_uar_error_deleting"><![CDATA[Error deleting this result! Could not create the request\]\]\></xsl:variable>
<xsl:variable name="msg_uar_error_add_or_update"><![CDATA[Problem adding/updating this result: Could not create the request\]\]\></xsl:variable>

<!-- UAR v2 - i18n messages used by the UAR UI component. -->
<xsl:variable name="msg_uar_confirm_delete_title"><![CDATA[Confirm delete\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_delete_text"><![CDATA[Are you sure you want to delete the user added result?\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_delete_moderation_required"><![CDATA[Are you sure you want to delete the user added resultThe selected result will be deleted only after the administrator reviews and approves the same. The result will continue to show until review is done.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_in_progress"><![CDATA[Deleting...\]\]\></xsl:variable>
<xsl:variable name="msg_uar_add_pending_review_title"><![CDATA[New addition - Admin review pending\]\]\></xsl:variable>
<xsl:variable name="msg_uar_add_pending_review_content"><![CDATA[The result that you contributed has been submitted but it will be displayed only after the administrator reviews and approves the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_update_pending_review_title"><![CDATA[Edit - Admin review pending\]\]\></xsl:variable>
<xsl:variable name="msg_uar_update_pending_review_content"><![CDATA[The changes to result that you edited has been submitted but it will be displayed only after the administrator reviews and approves the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_pending_review_title"><![CDATA[Delete - Admin review pending\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_pending_review_content"><![CDATA[The request for deleting the result has been submitted but result will be deleted only after the administrator reviews and approves the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_existing_review_pending_title"><![CDATA[Existing admin review pending\]\]\></xsl:variable>
<xsl:variable name="msg_uar_existing_review_pending_content"><![CDATA[An existing request to update the same result is pending therefore this request is not processed. You can take action only after the administrator reviews the existing request.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_add_title"><![CDATA[Confirm add - Admin review required\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_add_content"><![CDATA[New result contribution will be submitted for administrator review. The result will be displayed only after the administrator will approve the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_update_title"><![CDATA[Confirm edit - Admin review required\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_update_content"><![CDATA[The changes to the result will be submitted for administrator review. The existing result will continue to show until the administrator approves the changes.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_submit_request"><![CDATA[Are you sure you want to submit this request?\]\]\></xsl:variable>
<xsl:variable name="msg_uar_review_note"><![CDATA[Note that the existing result will continue to show until the review is done.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_discard_changes_title"><![CDATA[Discard changes\]\]\></xsl:variable>
<xsl:variable name="msg_uar_discard_changes_content"><![CDATA[Do you want to discard existing changes?\]\]\></xsl:variable>
<xsl:variable name="msg_uar_no_results"><![CDATA[No results. Consider contributing a result.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_description"><![CDATA[Description\]\]\></xsl:variable>
<xsl:variable name="msg_uar_enter_title_value"><![CDATA[Enter title to be displayed\]\]\></xsl:variable>
<xsl:variable name="msg_uar_enter_url_value"><![CDATA[Enter absolute URL of the document\]\]\></xsl:variable>
<xsl:variable name="msg_uar_enter_username_value"><![CDATA[Enter user name\]\]\></xsl:variable>
<xsl:variable name="msg_uar_edit_this_result"><![CDATA[Edit this result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_this_result"><![CDATA[Delete this result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_view_all_results"><![CDATA[View all results\]\]\></xsl:variable>
<xsl:variable name="msg_uar_hide_few_results"><![CDATA[Hide few results\]\]\></xsl:variable>
<xsl:variable name="msg_uar_contribute_result"><![CDATA[Contribute a result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_loading_settings"><![CDATA[Loading settings. Please try again in a second.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_server_error"><![CDATA[Server error! Please try again.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_authn_required"><![CDATA[Authentication is required.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_username_required"><![CDATA[Username is required. Please specify the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_save_in_progress"><![CDATA[Saving...\]\]\></xsl:variable>

<!-- *** Template to sanitize UAR i18n messages *** -->
<xsl:template name="sanitize_uar_i18n_message">
<xsl:param name="uar_message_to_be_sanitized"/>
<xsl:variable name="uar_message_without_apos">
       <xsl:call-template name="replace_string">
         <xsl:with-param name="find" select='"&apos;"'/>
         <xsl:with-param name="replace" select='"\&apos;"'/>
         <xsl:with-param name="string" select="$uar_message_to_be_sanitized"/>
       </xsl:call-template>
</xsl:variable>
<xsl:variable name="uar_message_without_apos_double_quotes">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="$uar_message_without_apos"/>
    </xsl:call-template>
</xsl:variable>
<xsl:variable name="uar_message_without_apos_double_quotes_lt">
       <xsl:call-template name="replace_string">
         <xsl:with-param name="find" select='"&lt;"'/>
         <xsl:with-param name="replace" select='"&amp;lt;"'/>
         <xsl:with-param name="string"
           select="$uar_message_without_apos_double_quotes"/>
       </xsl:call-template>
</xsl:variable>
<xsl:variable name="uar_message_without_apos_double_quotes_lt_gt">
       <xsl:call-template name="replace_string">
         <xsl:with-param name="find" select='"&gt;"'/>
         <xsl:with-param name="replace" select='"&amp;gt;"'/>
         <xsl:with-param name="string"
           select="$uar_message_without_apos_double_quotes_lt"/>
       </xsl:call-template>
</xsl:variable>
<xsl:value-of select="$uar_message_without_apos_double_quotes_lt_gt"/>
</xsl:template>

<!-- *** UAR v2, Expert Search - Template to include the localized messages
       for UAR and Expert Search component. *** -->
<xsl:template name="include_localized_messages_for_uar_expert_search">
<script type="text/javascript">
<xsl:comment>
  // Variable definition included here so that no error is thrown. This will
  // be overriden as soon as the UI component JS library loads.
  var gsa = {'ui': {msg: {}}};

  /**
   * Adds localized messages to be used by the UI component(s).
   */
  function _gsa_addLocalizedMessages() {
    // UAR messages.
    gsa.ui.msg.MSG_CANCEL_BTN =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_cancel"/></xsl:call-template>';
    gsa.ui.msg.MSG_OK_BTN =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_ok"/></xsl:call-template>';
    gsa.ui.msg.MSG_SAVE_BTN =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_save"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_DELETE_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_delete_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_DELETE_TEXT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_delete_text"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_DELETE_MODERATION_REQUIRED =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_delete_moderation_required"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DELETE_IN_PROGRESS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_delete_in_progress"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ADD_PENDING_REVIEW_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_add_pending_review_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ADD_PENDING_REVIEW_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_add_pending_review_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_UPDATE_PENDING_REVIEW_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_update_pending_review_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_UPDATE_PENDING_REVIEW_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_update_pending_review_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DELETE_PENDING_REVIEW_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_delete_pending_review_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DELETE_PENDING_REVIEW_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_delete_pending_review_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_EXISTING_REVIEW_PENDING_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_existing_review_pending_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_EXISTING_REVIEW_PENDING_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_existing_review_pending_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_ADD_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_add_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_ADD_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_add_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_UPDATE_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_update_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_UPDATE_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_update_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_SUBMIT_REQUEST =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_submit_request"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_REVIEW_NOTE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_review_note"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DISCARD_CHANGES_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_discard_changes_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DISCARD_CHANGES_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_discard_changes_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_NO_RESULTS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_no_results"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ADDED_BY =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_added_by"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DESCRIPTION =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_description"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ENTER_TITLE_VALUE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_enter_title_value"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ENTER_URL_VALUE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_enter_url_value"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ENTER_USERNAME_VALUE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_enter_username_value"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_EDIT_THIS_RESULT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_edit_this_result"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DELETE_THIS_RESULT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_delete_this_result"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_VIEW_ALL_RESULTS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_view_all_results"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_HIDE_FEW_RESULTS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_hide_few_results"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONTRIBUTE_RESULT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_contribute_result"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_LOADING_SETTINGS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_loading_settings"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_SERVER_ERROR =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_server_error"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_AUTHN_REQUIRED =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_authn_required"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_USERNAME_REQUIRED =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_username_required"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_SAVE_IN_PROGRESS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_save_in_progress"/></xsl:call-template>';
    // Expert search messages.
    gsa.ui.msg.MSG_LOADING_EXPERT_RESULTS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_loading_expert_results"/></xsl:call-template>';
  }
//</xsl:comment>
</script>
</xsl:template>

<!-- *** UAR v2 - Template to include the JavaScript required for the UAR UI
       component. *** -->
<xsl:template name="include_uar_ui_component">
<script src="{$gsa_resource_root_path_prefix}/uardesktop_compiled.js"
    type="text/javascript">
</script>
<script type="text/javascript">
  gsa.ui.uar.init();
</script>
</xsl:template>

<!-- *** Template to populate the i18n message array which is used by uar.js *** -->
<xsl:template name="populate_uar_i18n_array">
<script type="text/javascript">
<xsl:comment>
  // User added results - i18n messages.
  var uar_i18n_messages = {};
  uar_i18n_messages['ADDED_BY'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                     <xsl:with-param name="uar_message_to_be_sanitized"
                                       select="$msg_uar_added_by"/>
                                   </xsl:call-template>' + ' ';
  uar_i18n_messages['EDIT'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                 <xsl:with-param name="uar_message_to_be_sanitized"
                                   select="$msg_uar_edit"/>
                               </xsl:call-template>';
  uar_i18n_messages['TITLE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                  <xsl:with-param name="uar_message_to_be_sanitized"
                                    select="$msg_uar_title"/>
                                </xsl:call-template>'  + ':';
  uar_i18n_messages['SAVE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                 <xsl:with-param name="uar_message_to_be_sanitized"
                                   select="$msg_uar_save"/>
                               </xsl:call-template>';
  uar_i18n_messages['CANCEL'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                   <xsl:with-param name="uar_message_to_be_sanitized"
                                     select="$msg_uar_cancel"/>
                                 </xsl:call-template>';
  uar_i18n_messages['ADDRESS'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                    <xsl:with-param name="uar_message_to_be_sanitized"
                                      select="$msg_uar_address"/>
                                  </xsl:call-template>'  + ':';
  uar_i18n_messages['OR'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                               <xsl:with-param name="uar_message_to_be_sanitized"
                                 select="$msg_uar_or"/>
                             </xsl:call-template>'  + ' ';
  uar_i18n_messages['DELETE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                   <xsl:with-param name="uar_message_to_be_sanitized"
                                     select="$msg_uar_delete"/>
                                 </xsl:call-template>';
  uar_i18n_messages['USERNAME'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                     <xsl:with-param name="uar_message_to_be_sanitized"
                                       select="$msg_uar_username"/>
                                   </xsl:call-template>'  + ':';
  uar_i18n_messages['LESS'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                 <xsl:with-param name="uar_message_to_be_sanitized"
                                   select="$msg_uar_less"/>
                               </xsl:call-template>';
  uar_i18n_messages['MORE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                 <xsl:with-param name="uar_message_to_be_sanitized"
                                   select="$msg_uar_more"/>
                               </xsl:call-template>';
  uar_i18n_messages['ADD_ANOTHER_RESULT'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                               <xsl:with-param name="uar_message_to_be_sanitized"
                                                 select="$msg_uar_add_another_result"/>
                                             </xsl:call-template>';
  uar_i18n_messages['ADD_A_RESULT'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                         <xsl:with-param name="uar_message_to_be_sanitized"
                                           select="$msg_uar_add_a_result"/>
                                       </xsl:call-template>';
  uar_i18n_messages['SAVING'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                   <xsl:with-param name="uar_message_to_be_sanitized"
                                     select="$msg_uar_saving"/>
                                 </xsl:call-template>'  + '...';
  uar_i18n_messages['DELETING'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                     <xsl:with-param name="uar_message_to_be_sanitized"
                                       select="$msg_uar_deleting"/>
                                   </xsl:call-template>'  + '...';
  uar_i18n_messages['SAVE_FAILED'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                        <xsl:with-param name="uar_message_to_be_sanitized"
                                          select="$msg_uar_save_failed"/>
                                      </xsl:call-template>'  + '!';
  uar_i18n_messages['DELETE_FAILED'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                          <xsl:with-param name="uar_message_to_be_sanitized"
                                            select="$msg_uar_delete_failed"/>
                                        </xsl:call-template>'  + '!';
  uar_i18n_messages['ERROR_HANDLING_REQUEST'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                                   <xsl:with-param name="uar_message_to_be_sanitized"
                                                     select="$msg_uar_error_handling_request"/>
                                                 </xsl:call-template>'  + '.';
  uar_i18n_messages['ERROR_DELETING'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                           <xsl:with-param name="uar_message_to_be_sanitized"
                                             select="$msg_uar_error_deleting"/>
                                         </xsl:call-template>'  + '.';
  uar_i18n_messages['ERROR_ADD_OR_UPDATE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                                <xsl:with-param name="uar_message_to_be_sanitized"
                                                  select="$msg_uar_error_add_or_update"/>
                                              </xsl:call-template>'  + '.';
//</xsl:comment>
</script>
</xsl:template>

<!-- *** Previewer i18n messages *** -->
<xsl:variable name="msg_previewer_error"><![CDATA[Transformation error\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_connecting"><![CDATA[Connecting\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_document_too_large"><![CDATA[Document too large\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_hit_page"><![CDATA[Hit page\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_initializing"><![CDATA[Initializing\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_page"><![CDATA[Page\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_pending"><![CDATA[Pending\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_preview_unavailable"><![CDATA[Preview unavailable\]\]\></xsl:variable>



<!-- *** Template to populate the i18n message array which is used by floating previewer widget *** -->
<xsl:template name="populate_previewer_i18n_array">
<script type="text/javascript">
<xsl:comment>
  // Document previews - i18n messages.
  var previewer_i18n_messages = {
    'connecting': '<xsl:value-of select="$msg_previewer_connecting"/>',
    'document_too_large': '<xsl:value-of select="$msg_previewer_document_too_large"/>',
    'hitpage': '<xsl:value-of select="$msg_previewer_hit_page"/>',
    'initializing': '<xsl:value-of select="$msg_previewer_initializing"/>',
    'page': '<xsl:value-of select="$msg_previewer_page"/>',
    'pending': '<xsl:value-of select="$msg_previewer_pending"/>',
    'preview_unavailable': '<xsl:value-of select="$msg_previewer_preview_unavailable"/>',
    'transformation_aborted': '<xsl:value-of select="$msg_previewer_error"/>',
    'transformation_cancelled': '<xsl:value-of select="$msg_previewer_error"/>',
    'transformation_error': '<xsl:value-of select="$msg_previewer_error"/>'
  };
//</xsl:comment>
</script>
</xsl:template>

<!-- **********************************************************************
My global page header/footer (can be customized)
   ********************************************************************** -->
<!-- *** showing up serve-logs in footer *** -->
<xsl:template match="TraceNode">
<div id="TraceNode-div">
  Total time taken
  <span style='font-style: italics;' id='total_time'><xsl:value-of select="(@out-time - @in-time) div 1000000"/></span>
  <xsl:apply-templates select="Record"/>
</div>
</xsl:template>

<xsl:template match="Record">
<div>
  <xsl:value-of select="Stmt/@log"/>
</div>
<div>
  <i><xsl:value-of select="@time-from-start"/></i>
</div>
</xsl:template>

<!-- **********************************************************************
Logo template (can be customized)
   ********************************************************************** -->
<xsl:template name="logo">
  <a ctype='logo' href="{$home_url}"><img src="{$logo_url}"
    width="{$logo_width}" height="{$logo_height}"
    alt="Go to Google Home" border="0" /></a>
</xsl:template>

<!-- **********************************************************************
Search result page header (can be customized): logo and search box
   ********************************************************************** -->
<xsl:template name="result_page_header">
  <input type="hidden" name="security_token" id="token">
    <xsl:attribute name="value">
      <xsl:value-of select="/GSP/SECURITY_TOKEN"/>
    </xsl:attribute>
  </input>
    
  <div id="result_page_header_id"> 
    <xsl:if test="$show_logo != '0'">
      <div id="logo-div">
        <xsl:call-template name="logo"/>
        <xsl:call-template name="nbsp3"/>
      </div>
    </xsl:if>
    <xsl:if test="$show_top_search_box != '0'">
      <div id="search-box-div">
          <xsl:call-template name="search_box">
            <xsl:with-param name="type" select="'std_top'"/>
          </xsl:call-template>
      </div>
    </xsl:if>
    <xsl:if test="/GSP/CT">
      <div id="stopwords-div">
        <br/>
          <xsl:call-template name="stopwords"/>
          <br/></div>
    </xsl:if>
  </div>
</xsl:template>


<!-- **********************************************************************
Search within results page header (can be customized): logo and search box 
   ********************************************************************** -->
<xsl:template name="swr_page_header">
  <div id="swr_page_header_div">
    <xsl:if test="$show_logo != '0'">
          <xsl:call-template name="logo"/>
          <xsl:call-template name="nbsp3"/>
    </xsl:if>
    <xsl:if test="$show_top_search_box != '0'">
         <xsl:call-template name="search_box">
            <xsl:with-param name="type" select="'swr'"/>
          </xsl:call-template>
    </xsl:if>
  </div>
</xsl:template>


<!-- **********************************************************************
Home search page header (can be customized): logo and search box
   ********************************************************************** -->
<xsl:template name="home_page_header">

  <input type="hidden" name="security_token" id="token">
    <xsl:attribute name="value">
      <xsl:value-of select="/GSP/SECURITY_TOKEN"/>
    </xsl:attribute>
  </input>
  <div id="home_page_header">
    <xsl:if test="$show_logo != '0'">
      <div class="pull-left">
        <xsl:call-template name="logo"/>
        <xsl:call-template name="nbsp3"/>
      </div>
    </xsl:if>  
    
    
    <xsl:if test="$show_top_search_box != '0'">
        <xsl:call-template name="search_box">
          <xsl:with-param name="type" select="'home'"/>
        </xsl:call-template>
    </xsl:if>
  </div>
</xsl:template>


<!-- **********************************************************************
Separation bar variables (used in advanced search header and result page)
   ********************************************************************** -->
<xsl:variable name="sep_bar_border_color">
<xsl:choose>
  <xsl:when test="$choose_sep_bar = 'ltblue'">#3366cc</xsl:when>
  <xsl:when test="$choose_sep_bar = 'blue'">#3366cc</xsl:when>
  <xsl:otherwise><xsl:value-of select="$global_bg_color"/></xsl:otherwise>
</xsl:choose>
</xsl:variable>

<xsl:variable name="sep_bar_bg_color">
<xsl:choose>
  <xsl:when test="$is_embedded_mode = '1'">#efefef</xsl:when>
  <xsl:when test="$choose_sep_bar = 'ltblue'">#e5ecf9</xsl:when>
  <xsl:when test="$choose_sep_bar = 'blue'">#3366cc</xsl:when>
  <xsl:otherwise><xsl:value-of select="$global_bg_color"/></xsl:otherwise>
</xsl:choose>
</xsl:variable>

<xsl:variable name="sep_bar_text_color">
<xsl:choose>
  <xsl:when test="$choose_sep_bar = 'ltblue'">#000000</xsl:when>
  <xsl:when test="$choose_sep_bar = 'blue'">#ffffff</xsl:when>
  <xsl:otherwise><xsl:value-of select="$global_text_color"/></xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- **********************************************************************
Advanced search page header HTML (can be customized)
   ********************************************************************** -->
<xsl:template name="advanced_search_header">
    <div id="advanced_search_header_div">
        <xsl:if test="$show_logo != '0'">
              <xsl:call-template name="logo"/>
        </xsl:if>
    </div>
</xsl:template>


<!-- **********************************************************************
Cached page header (can be customized)
   ********************************************************************** -->
<xsl:template name="cached_page_header">
<xsl:param name="cached_page_url"/>
<xsl:variable name="stripped_url" select="substring-after($cached_page_url,
                                                          '://')"/>
<div id="cached_page_header_div">
    <font face="{$global_font}" color="{$global_text_color}" size="-1">
     <xsl:value-of select="$cached_page_header_text"/>
     <xsl:call-template name="nbsp"/>
     <xsl:choose>
      <xsl:when test="starts-with($cached_page_url,
                                  $db_url_protocol)">
       <a ctype="cache" href="{concat('/db/',$stripped_url)}">
       <font color="{$global_link_color}">
       <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
      </xsl:when>
      <xsl:when test="starts-with($cached_page_url,
                                  $nfs_url_protocol)">
       <a ctype="cache" href="{concat('/nfs/',$stripped_url)}">
       <font color="{$global_link_color}">
       <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
      </xsl:when>
      <xsl:when test="starts-with($cached_page_url,
                                  $smb_url_protocol)">
       <a ctype="cache" href="{concat('/smb/',$stripped_url)}">
       <font color="{$global_link_color}">
       <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
      </xsl:when>
      <xsl:when test="starts-with($cached_page_url,
                                  $unc_url_protocol)">
       <xsl:variable name="display_url">
         <xsl:call-template name="convert_unc">
           <xsl:with-param name="string" select="$stripped_url"/>
         </xsl:call-template>
       </xsl:variable>
       <a ctype="cache" href="{concat('file://',$stripped_url)}">
       <font color="{$global_link_color}">
       <xsl:value-of select="$display_url"/></font></a>.<br/>
      </xsl:when>
      <xsl:otherwise>
       <a ctype="cache" href="{$cached_page_url}"><font color="{$global_link_color}">
       <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
      </xsl:otherwise>
     </xsl:choose>
    </font>
</div>
<hr/>
</xsl:template>

<!-- **********************************************************************
Suggest service javascript (do not customize)
   ********************************************************************** -->
<xsl:template name="gsa_suggest">
<xsl:variable name="ss_g_one_name_to_display">Popular Query</xsl:variable>
<xsl:variable name="ss_g_more_names_to_display">Popular Queries</xsl:variable>
<xsl:variable name="ss_non_query_empty_title">No Title</xsl:variable>
<script type="text/javascript">
/**
* HTML element names for the search form, the spellchecking suggestion, and the
* cluster suggestions. The search form must have the following input elements:
* "q" (for search box), "site", "client".
* @type {string}
*/
var ss_form_element = 'suggestion_form'; // search form

/**
* Name of search suggestion drop down.
* @type {string}
*/
var ss_popup_element = 'search_suggest'; // search suggestion drop-down

/**
* Types of suggestions to include.  Just one options now, but reserving the
* code for more types
*   g - suggest server
* Array sequence determines how different suggestion types are shown.
* Empty array would effectively turn off suggestions.
* @type {object}
*/
var ss_seq = [ 'g' ];

/**
* Suggestion type name to display when there is only one suggestion.
* @type {string}
*/
var ss_g_one_name_to_display =
  "<xsl:value-of select="$ss_g_one_name_to_display"/>";

/**
* Suggestion type name to display when there are more than one suggestions.
* @type {string}
*/
var ss_g_more_names_to_display =
  "<xsl:value-of select="$ss_g_more_names_to_display"/>";

/**
* The max suggestions to display for different suggestion types.
* No-positive values are equivalent to unlimited.
* For key matches, -1 means using GSA default (not tagging numgm parameter),
* 0 means unlimited.
* Be aware that GSA has a published max limit of 10 for key matches.
* @type {number}
*/
var ss_g_max_to_display = 10;

/**
* The max suggestions to display for all suggestion types.
* No-positive values are equivalent to unlimited.
* @type {number}
*/
var ss_max_to_display = 12;

/**
* Idling interval for fast typers.
* @type {number}
*/
var ss_wait_millisec = 300;

/**
* Delay time to avoid contention when drawing the suggestion box by various
* parallel processes.
* @type {number}
*/
var ss_delay_millisec = 30;

/**
* Host name or IP address of GSA.
* Null value can be used if the JS code loads from the GSA.
* For local test, use null if there is a &lt;base> tag pointing to the GSA,
* otherwise use the full GSA host name
* @type {string}
*/
var ss_gsa_host = null;

/**
* Constant that represents legacy output format.
* @type {string}
*/
var SS_OUTPUT_FORMAT_LEGACY = 'legacy';

/**
* Constant that represents OpenSearch output format.
* @type {string}
*/
var SS_OUTPUT_FORMAT_OPEN_SEARCH = 'os';

/**
* Constant that represents rich output format.
* @type {string}
*/
var SS_OUTPUT_FORMAT_RICH = 'rich';

/**
* What suggest request API to use.
*   legacy - use current protocol in 6.0
*            Request: /suggest?token=&lt;query>&amp;max_matches=&lt;num>&amp;use_similar=0
*            Response: [ "&lt;term 1>", "&lt;term 2>", ..., "&lt;term n>" ]
*                   or
*                      [] (if no result)
*   os -     use OpenSearch protocol
*            Request: /suggest?q=&lt;query>&amp;max=&lt;num>&amp;site=&lt;collection>&amp;client=&lt;frontend>&amp;access=p&amp;format=os
*            Response: [
*                        "&lt;query>",
*                        [ "&lt;term 1>", "&lt;term 2>", ... "&lt;term n>" ],
*                        [ "&lt;content 1>", "&lt;content 2>", ..., "&lt;content n>" ],
*                        [ "&lt;url 1>", "&lt;url 2>", ..., "&lt;url n>" ]
*                      ] (where the last two elements content and url are optional)
*                   or
*                      [ &lt;query>, [] ] (if no result)
*   rich -   use rich protocol from search-as-you-type
*            Request: /suggest?q=&lt;query>&amp;max=&lt;num>&amp;site=&lt;collection>&amp;client=&lt;frontend>&amp;access=p&amp;format=rich
*            Response: {
*                        "query": "&lt;query>",
*                        "results": [
*                          { "name": "&lt;term 1>", "type": "suggest", "content": "&lt;content 1>", "style": "&lt;style 1>", "moreDetailsUrl": "&lt;url 1>" },
*                          { "name": "&lt;term 2>", "type": "suggest", "content": "&lt;content 2>", "style": "&lt;style 2>", "moreDetailsUrl": "&lt;url 2>" },
*                          ...,
*                          { "name": "&lt;term n>", "type": "suggest", "content": "&lt;content n>", "style": "&lt;style n>", "moreDetailsUrl": "&lt;url n>" }
*                        ]
*                      } (where type, content, style, moreDetailsUrl are optional)
*                   or
*                      { "query": &lt;query>, "results": [] } (if no result)
* If unspecified or null, using legacy protocol.
* @type {string}
*/
var ss_protocol = SS_OUTPUT_FORMAT_RICH;

/**
* Whether to allow non-query suggestion items.
* Setting it to false can bring results from "os" and "rich" responses into
* backward compatible with "legacy".
* @type {boolean}
*/
var ss_allow_non_query = true;

/**
* Default title text when the non-query suggestion item does not have a useful
* title.
* The default display text should be internalionalized.
* @type {string}
*/
var ss_non_query_empty_title =
  "<xsl:value-of select="$ss_non_query_empty_title"/>";

/**
* Whether debugging is allowed.  If so, toggle with F2 key.
* @type {boolean}
*/
var ss_allow_debug = false;
</script>
<script type="text/javascript"
  src="{$gsa_resource_root_path_prefix}/ss.js">
</script>
</xsl:template>


<!-- **********************************************************************
"Search Within Results" search input page (can be customized)
   ********************************************************************** -->
<xsl:template name="swr_search">
<xsl:call-template name="doc_type"/>
<html>
  <xsl:attribute name="class">
  <xsl:value-of select="$skin_class"/>
  </xsl:attribute>
<xsl:call-template name="langHeadStart"/>
  <title><xsl:value-of select="$swr_page_title"/></title>
<xsl:call-template name="style"/>
<xsl:call-template name="langHeadEnd"/>

<body>
   <xsl:attribute name="class">
  <xsl:value-of select="'clearfix'"/>
  </xsl:attribute>
  <xsl:attribute name="dir">ltr</xsl:attribute>
<div id="container" class="schoolpage">
 <xsl:call-template name="header_element"/>
 <xsl:call-template name="main_content_wrapper_start"/>
  <div class="main-content">
      <xsl:call-template name="personalization"/>
      <xsl:call-template name="analytics"/>
      <xsl:call-template name="swr_page_header"/>f
      <hr/>
      <xsl:call-template name="copyright"/>
  </div>
  <xsl:call-template name="footer_element"/>    
  <xsl:call-template name="main_content_wrapper_end"/>
  </div>
</body>
</html>
</xsl:template>


<!-- **********************************************************************
"Front door" search input page (can be customized)
   ********************************************************************** -->
<xsl:template name="front_door">
<xsl:call-template name="doc_type"/>
<html>
  <xsl:attribute name="class">
  <xsl:value-of select="$skin_class"/>
  </xsl:attribute>
<xsl:call-template name="langHeadStart"/>
  <title><xsl:value-of select="$front_page_title"/></title>
<xsl:call-template name="style"/>
<xsl:if test="$show_suggest != '0'">
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/common.js'></script>
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/xmlhttp.js'></script>
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/uri.js'></script>
  <xsl:call-template name="gsa_suggest" />
</xsl:if>
<xsl:call-template name="langHeadEnd"/>

<xsl:choose>
  <xsl:when test="$show_suggest != '0'">
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/common.js'></script>
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/xmlhttp.js'></script>
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/uri.js'></script>
    <xsl:call-template name="gsa_suggest" />

    <body onLoad="ss_sf();">
      <xsl:attribute name="class">
    <xsl:value-of select="'clearfix'"/>
    </xsl:attribute>
    <xsl:attribute name="dir">ltr</xsl:attribute>
  <div id="container" class="schoolpage">
    <xsl:call-template name="header_element"/>
    <xsl:call-template name="main_content_wrapper_start"/>
      <div class="main-content">
        <xsl:call-template name="personalization"/>
        <xsl:call-template name="analytics"/>

        <xsl:call-template name="home_page_header"/>
        <div class="home-page-hr">
          <hr/>  
        </div>
        <xsl:call-template name="copyright"/>
      </div>
    <xsl:call-template name="footer_element"/>
    <xsl:call-template name="main_content_wrapper_end"/>
    </div>
    </body>
  </xsl:when>
  <xsl:otherwise>
    <body>
      <xsl:attribute name="class">
    <xsl:value-of select="'clearfix'"/>
    </xsl:attribute>
    <xsl:attribute name="dir">ltr</xsl:attribute>
   <div id="container" class="schoolpage">
    <xsl:call-template name="header_element"/>
    <xsl:call-template name="main_content_wrapper_start"/>
      <div class="main-content">
        <xsl:call-template name="personalization"/>
        <xsl:call-template name="analytics"/>
        <xsl:call-template name="home_page_header"/>
        <hr/>
        <xsl:call-template name="copyright"/> 
      </div>
    <xsl:call-template name="footer_element"/>   
    <xsl:call-template name="main_content_wrapper_end"/>
    </div>
    </body>
  </xsl:otherwise>
</xsl:choose>

</html>
</xsl:template>


<!-- **********************************************************************
Empty result set (can be customized)
   ********************************************************************** -->
<xsl:template name="no_RES">
<xsl:param name="query"/>

<!-- *** Output Google Desktop results (if enabled and any available) *** -->
<xsl:if test="$egds_show_desktop_results != '0'">
  <xsl:call-template name="desktop_results"/>
</xsl:if>
<!-- *** Handle UAR results, if any ***-->
<xsl:if test="$show_onebox != '0'  and $show_sidebar != '1'">
  <xsl:if test="/GSP/ENTOBRESULTS/OBRES/provider = $uar_provider">
      <input type="hidden" name="oneboxloc" value="1261" />
    <xsl:call-template name="onebox"/>
    <script>
    <xsl:comment>
      if (window['populateUarMessages']) {
        populateUarMessages();
      }
    //</xsl:comment>
    </script>
  </xsl:if>
</xsl:if>

<div class="no-results">
<h1>No Results:</h1>
<p>Your search for <strong><xsl:value-of select="$query"/></strong> did not return any results.</p>
<ul>
  <li>Make sure all words are spelled correctly.</li>
  <li>Try different keywords.</li>
  <li>Try another search collection above.</li>
  <xsl:if test="/GSP/PARAM[(@name='access') and(@value='a')]">
    <li>Make sure your security credentials are correct.</li>
  </xsl:if>
  <li>Try more general keywords.</li>
</ul>
</div>

</xsl:template>


<!-- ######################################################################
We do not recommend changes to the following code.  Google Technical
Support Personnel currently do not support customization of XSLT under
these Technical Support Services Guidelines.  Such services may be
provided on a consulting basis, at Google's then-current consulting
services rates under a separate agreement, if Google personnel are
available.  Please ask your Google Account Manager for more details if
you are interested in purchasing consulting services.
   ###################################################################### -->


<!-- **********************************************************************
Global Style (do not customize)
      default font type/size/color, background color, link color
       using HTML CSS (Cascading Style Sheets)
   ********************************************************************** -->
<xsl:template name="style">
<xsl:call-template name="my_page_css"/>
<link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/global.css?version=1.0" />
<xsl:if test="$show_bottom_search_box != '0'">
  <link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/bottom_search_box.css" />
</xsl:if>
<xsl:if test="$show_alerts2 = '1'">
  <link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/show_alerts2.css" />
</xsl:if>


<xsl:if test="$show_res_clusters = '1'">
<xsl:choose>
  <xsl:when test="$res_cluster_position = 'top'">
    <link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/res_cluster_top.css"/>
  </xsl:when>
  <xsl:when test="$res_cluster_position = 'bottom'">
      <!--<link rel="stylesheet" type="text/css" href="{$custom_css_path}/res_cluster_bottom.css"/>-->
  </xsl:when>
  <xsl:when test="$res_cluster_position = 'right'">
      <link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/res_cluster_right.css"/>
  </xsl:when>
</xsl:choose>
<xsl:if test="$is_disable_style_in_embedded_mode = '1'">
<link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/is_disable_style_in_embedded_mode.css"/>
</xsl:if>
</xsl:if>

<xsl:if test="$res_cluster_position = 'right'">
</xsl:if>
<xsl:if test="$show_suggest != '0'">
<!--<link rel="stylesheet" type="text/css" href="{$custom_css_path}/suggestion.css?version=1.0" />-->
</xsl:if>
<xsl:if test="$render_dynamic_navigation = '1'">
<link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/dynamic_nav.css?version=1.0"/>
</xsl:if>
<xsl:if test="$show_sidebar = '1'">
<link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/show_sidebar.css"/>
</xsl:if>
<xsl:if test="$show_document_previews = '1'">
<link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/document_preview.css?version=1.1"/>
</xsl:if>
<xsl:if test="$show_translation = '1' and $only_apps != '1'">
 <link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/translation.css"/>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
URL variables (do not customize)
   ********************************************************************** -->
<!-- *** if this is a test search (help variable)-->
<xsl:variable name="is_test_search"
select="/GSP/PARAM[@name='testSearch']/@value"/>

<!-- *** if this is a search within results search *** -->
<xsl:variable name="swrnum">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[(@name='swrnum') and (@value!='')]">
    <xsl:value-of select="/GSP/PARAM[@name='swrnum']/@value"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="0"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** help_url: search tip URL (html file) *** -->
<xsl:variable name="help_url">/user_help.html</xsl:variable>

<!-- *** base_url: collection info *** -->
<xsl:variable name="base_url">
<xsl:for-each
  select="/GSP/PARAM[@name = 'client' or
                   @name = 'site' or
                   @name = 'num' or
                   @name = 'output' or
                   @name = 'proxystylesheet' or
                   @name = 'access' or
                   @name = 'lr' or
                   @name = 'ie']">
  <xsl:value-of select="@name"/>=<xsl:value-of select="@original_value"/>
  <xsl:if test="position() != last()">&amp;</xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** custom tab base url *** -->
<xsl:variable name="custom_tab_url">
  <xsl:for-each select="/GSP/PARAM[(@name != 'site') and (@name != 'dnavs')]">
    <xsl:choose>
     <xsl:when test="@name = 'q' and /GSP/PARAM[@name='dnavs']">
        <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
        <xsl:value-of select="substring-before(@original_value,
          concat('+', /GSP/PARAM[@name='dnavs']/@original_value))"/>
      </xsl:when>
     <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
     </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="position() != last()">&amp;</xsl:if>
  </xsl:for-each>
</xsl:variable>

<!-- *** home_url: search? + collection info + &proxycustom=<HOME/> *** -->
<xsl:variable name="home_url">
<xsl:value-of select="$gsa_search_root_path_prefix"/>?<xsl:value-of select="$base_url"
/>&amp;proxycustom=&lt;HOME/&gt;</xsl:variable>


<!-- *** synonym_url: does not include q, as_q, and start elements *** -->
<xsl:variable name="synonym_url"><xsl:for-each
select="/GSP/PARAM[(@name != 'q') and
                   (@name != 'as_q') and
                   (@name != 'swrnum') and
                   (@name != 'dnavs') and
                   (@name != $embedded_mode_root_path_param) and
                   (@name != $embedded_mode_resource_root_path_param) and
                   (@name != $embedded_mode_disable_style) and
                   (@name != 'ie') and
                   (@name != 'start') and
                   (@name != 'epoch' or $is_test_search != '') and
                   not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** search_url *** -->
<xsl:variable name="search_url">
<!-- Expert Search - ignore expertsearchasync query param. -->
<xsl:for-each
    select="/GSP/PARAM[(@name != 'start') and
                       (@name != $embedded_mode_root_path_param) and
                       (@name != $embedded_mode_resource_root_path_param) and
                       (@name != $embedded_mode_disable_style) and
                       (@name != 'swrnum') and
                       (@name != 'expertsearchasync') and
                       (@name != 'epoch' or $is_test_search != '') and
                       not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:when test="@name = 'only_apps' and $show_apps_segmented_ui = '1'">
      <xsl:value-of select="'exclude_apps=1'" />
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** search_url minus any dynamic navigation filters *** -->
<xsl:variable name="search_url_no_dnavs">
<xsl:for-each
    select="/GSP/PARAM[(@name != 'start') and
                       (@name != $embedded_mode_root_path_param) and
                       (@name != $embedded_mode_resource_root_path_param) and
                       (@name != $embedded_mode_disable_style) and
                       (@name != 'swrnum') and
                       (@name != 'dnavs') and
                       (@name != 'epoch' or $is_test_search != '') and
                       not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:when test="@name = 'only_apps' and $show_apps_segmented_ui = '1'">
      <xsl:value-of select="'exclude_apps=1'" />
    </xsl:when>
    <xsl:when test="@name = 'q' and /GSP/PARAM[@name='dnavs']">
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="substring-before(@original_value,
        concat('+', /GSP/PARAM[@name='dnavs']/@original_value))"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** url without q and dnavs param *** -->
<xsl:variable name="no_q_dnavs_params">
<xsl:for-each
    select="/GSP/PARAM[(@name != 'start') and
                       (@name != $embedded_mode_root_path_param) and
                       (@name != $embedded_mode_resource_root_path_param) and
                       (@name != $embedded_mode_disable_style) and
                       (@name != 'swrnum') and
                       (@name != 'q') and
                       (@name != 'dnavs') and
                       (@name != 'epoch' or $is_test_search != '') and
                       not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** no_q_dnavs_params_escaped: safe for inclusion in javascript *** -->
<xsl:variable name="no_q_dnavs_params_escaped">
<xsl:call-template name="js_escape">
  <xsl:with-param name="string" select="$no_q_dnavs_params"/>
  <xsl:with-param name="slash_mode" select='"0"'/>
</xsl:call-template>
</xsl:variable>

<!-- *** search_url_escaped: safe for inclusion in javascript *** -->
<xsl:variable name="search_url_escaped">
<xsl:call-template name="js_escape">
  <xsl:with-param name="string" select="$search_url_no_dnavs"/>
  <xsl:with-param name="slash_mode" select='"0"'/>
</xsl:call-template>
</xsl:variable>

<!-- *** filter_url: everything except resetting "filter=" *** -->
<xsl:variable name="filter_url"><xsl:value-of
  select="$gsa_search_root_path_prefix"/>?<xsl:for-each
  select="/GSP/PARAM[(@name != 'filter') and
                     (@name != $embedded_mode_root_path_param) and
                     (@name != $embedded_mode_resource_root_path_param) and
                     (@name != $embedded_mode_disable_style) and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
<xsl:text disable-output-escaping='yes'>&amp;filter=</xsl:text>
</xsl:variable>

<!-- *** adv_search_url: search? + $search_url + as_q=$q *** -->
<xsl:variable name="adv_search_url"><xsl:value-of
  select="$gsa_search_root_path_prefix"/>?<xsl:value-of
  select="$search_url_no_dnavs"/>&amp;proxycustom=&lt;ADVANCED/&gt;</xsl:variable>

<!-- *** exclude_apps: stores the value of exclude_apps query string argument,
    if present. A value of '1' indicates that segmented UI should be
    displayed. Value of '0' indicates that normal blended results UI should be
    displayed. -->
<xsl:variable name="exclude_apps">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[@name='exclude_apps']">
    <xsl:value-of select="/GSP/PARAM[@name='exclude_apps']/@original_value" />
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="'1'" />
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** only_apps: A value of '1' indicates returning only Google Apps
   results. -->
<xsl:variable name="only_apps">
<xsl:value-of select="/GSP/PARAM[@name='only_apps']/@original_value"/>
</xsl:variable>

<!-- *** db_url_protocol: googledb:// *** -->
<xsl:variable name="db_url_protocol">googledb://</xsl:variable>

<!-- *** googleconnector_protocol: googleconnector:// *** -->
<xsl:variable name="googleconnector_protocol">googleconnector://</xsl:variable>

<!-- *** dbconnector_protocol: dbconnector:// *** -->
<xsl:variable name="dbconnector_protocol">dbconnector://</xsl:variable>

<!-- *** nfs_url_protocol: nfs:// *** -->
<xsl:variable name="nfs_url_protocol">nfs://</xsl:variable>

<!-- *** smb_url_protocol: smb:// *** -->
<xsl:variable name="smb_url_protocol">smb://</xsl:variable>

<!-- *** unc_url_protocol: unc:// *** -->
<xsl:variable name="unc_url_protocol">unc://</xsl:variable>

<!-- *** swr_search_url: search? + $search_url + as_q=$q *** -->
<!-- for secure search no estimates are available(except if Customer enabled them
so we use a sentinel value of -1 for swrnum -->
<xsl:variable name="swr_search_url"><xsl:value-of
  select="$gsa_search_root_path_prefix"/>?<xsl:value-of
  select="$search_url_no_dnavs"/>&amp;swrnum=<xsl:choose>
  <xsl:when test="((($access = 'a') or ($access = 's')) and /GSP/RES/M = '')">
    <xsl:value-of select="-1"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="/GSP/RES/M"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** analytics_script_url: https://www.google-analytics.com/ga.js *** -->
<xsl:variable
name="analytics_script_url">https://www.google-analytics.com/ga.js</xsl:variable>

<!-- **********************************************************************
Search Parameters (do not customize)
   ********************************************************************** -->

<!-- *** num_results: actual num_results per page *** -->
<xsl:variable name="num_results">
<xsl:choose>
  <xsl:when test="count(/GSP/PARAM[(@name='num')]) &gt; 1">
    <xsl:value-of select="/GSP/PARAM[(@name='num')][last()]/@value"/>
  </xsl:when>
  <xsl:when test="/GSP/PARAM[(@name='num') and (@value!='')]">
    <xsl:value-of select="/GSP/PARAM[@name='num']/@value"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="10"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** form_params: parameters carried by the search input form *** -->
<xsl:template name="form_params">
<xsl:for-each
  select="PARAM[@name != 'q' and
                @name != 'ie' and
                not(contains(@name, 'as_')) and
                @name != 'btnG' and
                @name != 'btnG.x' and
                @name != 'btnG.y' and
                @name != 'btnI' and
                @name != 'site' and
                @name != 'filter' and
                @name != 'swrnum' and
                @name != 'start' and
                @name != 'access' and
                @name != $embedded_mode_root_path_param and
                @name != $embedded_mode_resource_root_path_param and
                @name != $embedded_mode_disable_style and
                @name != 'ip' and
                @name != 'entqr' and
                @name != 'entqrm' and
                @name != 'ulang' and
                @name != 'dnavs' and
                @name != 'tlen' and
                @name != 'exclude_apps' and
                @name != 'only_apps_deb' and
                @name != 'requiredfields' and
                @name != 'partialfields' and
                (@name != 'epoch' or $is_test_search != '') and
                not(starts-with(@name ,'metabased_'))]">
      <input type="hidden" name="{@name}" value="{@value}" />

    <xsl:if test="@name = 'oe'">
      <input type="hidden" name="ie" value="{@value}" />
    </xsl:if>
  <xsl:text>
  </xsl:text>
</xsl:for-each>


<xsl:if test="not(/GSP/PARAM[@name='only_apps'])">
  <!-- Always provide a value for the exclude_apps hidden field
       if only_apps param is not present. -->
  <input type="hidden" name="exclude_apps" value="{$exclude_apps}" />
</xsl:if>

<xsl:if test="$search_collections_xslt = '' and PARAM[@name='site']">
  <input type="hidden" name="site" value="{PARAM[@name='site']/@value}"/>
</xsl:if>
<xsl:if test="$res_title_length != $res_title_length_default">
  <input type="hidden" name="tlen" value="{$res_title_length}"/>
</xsl:if>

  <input type="hidden" name="filter" value="0" />

</xsl:template>

<!-- *** original query without any dynamic navigation filters *** -->
<xsl:variable name="qval">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[@name='dnavs']">
    <xsl:value-of select="concat(substring-before(/GSP/Q,
      /GSP/PARAM[@name='dnavs']/@value), ' ', substring-after(/GSP/Q,
      /GSP/PARAM[@name='dnavs']/@value))"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="/GSP/Q"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<xsl:variable name="original_q">
<xsl:choose>
  <xsl:when test="count(/GSP/PARAM[@name='dnavs']) > 0">
    <xsl:value-of
      select="substring-before(/GSP/PARAM[@name='q']/@original_value,
      concat('+', /GSP/PARAM[@name='dnavs']/@original_value))"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="/GSP/PARAM[@name='q']/@original_value"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** space_normalized_query: q = /GSP/Q *** -->
<xsl:variable name="space_normalized_query">
<xsl:value-of select="normalize-space($qval)"
  disable-output-escaping="yes"/>
</xsl:variable>

<!-- *** stripped_search_query: q, as_q, ... for cache highlight *** -->
<xsl:variable name="stripped_search_query"><xsl:for-each
select="/GSP/PARAM[(@name = 'q') or
                   (@name = 'as_q') or
                   (@name = 'as_oq') or
                   (@name = 'as_epq')]"><xsl:value-of select="@original_value"
/><xsl:if test="position() != last()"
  ><xsl:text disable-output-escaping="yes">+</xsl:text
   ></xsl:if></xsl:for-each>
</xsl:variable>
<xsl:variable name="stripped_sanitized_search_query">
<xsl:call-template name="js_escape">
  <xsl:with-param name="string" select="$stripped_search_query"/>
  <xsl:with-param name="slash_mode" select='"0"'/>
</xsl:call-template>
</xsl:variable>

<xsl:variable name="access">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[(@name='access') and ((@value='s') or (@value='a'))]">
    <xsl:value-of select="/GSP/PARAM[@name='access']/@original_value"/>
  </xsl:when>
  <xsl:otherwise>p</xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- **********************************************************************
Script to get current page.
   ********************************************************************** -->
<xsl:template name="search_home_script">
<script type="text/javascript">
function getHomeUrl() {
  return location.href = "/ealerts?shu=" + escape(document.location.href);
}
</script>
</xsl:template>

<!-- **********************************************************************
Shown sign-in/sign-out links at the top of the /search page
   ********************************************************************** -->

<xsl:template name="sign_in">
  <xsl:call-template name="search_home_script"/>
  <div class="personalization" width="100%" align="right">
   <xsl:text disable-output-escaping='yes'>&lt;a href='javascript:getHomeUrl();'&gt;My Alerts&lt;/a&gt;</xsl:text>
  </div>
</xsl:template>

<xsl:template name="signed_in">
<xsl:call-template name="search_home_script"/>
<div class="personalization" width="100%" align="right">
  <b><xsl:value-of select="/GSP/LOGIN" /></b> |
   <xsl:text disable-output-escaping='yes'>&lt;a href='javascript:getHomeUrl();'&gt;My Alerts&lt;/a&gt;</xsl:text> |
   <xsl:text disable-output-escaping='yes'>&lt;a href='/uam?action=Logout'&gt;Sign Out&lt;/a&gt;</xsl:text>
</div>
</xsl:template>

<xsl:template name="personalization">
<xsl:if test="$show_alerts2 = '1'">
<xsl:choose>
 <xsl:when test="/GSP/PERSONALIZATION">
  <xsl:choose>
    <xsl:when test="/GSP/LOGIN"><xsl:call-template name="signed_in"/></xsl:when>
    <xsl:otherwise><xsl:call-template name="sign_in" /></xsl:otherwise>
  </xsl:choose>
 </xsl:when>
</xsl:choose>
</xsl:if>
</xsl:template>

<xsl:template name="doc_type">
<xsl:text disable-output-escaping="yes">
&lt;!DOCTYPE html&gt;
</xsl:text>
</xsl:template>

<!-- **********************************************************************
Figure out what kind of page this is (do not customize)
   ********************************************************************** -->
<xsl:template match="GSP">
<xsl:choose>
  <!-- Expert Search - return the expert search results for widget view
       if the current query is for the same. -->
  <xsl:when test="$show_expert_search_widget_view_results = '1'">
    <xsl:call-template name="render_expert_search_results">
      <xsl:with-param name="src_prefix"
          select="concat($gsa_search_root_path_prefix, '?')" />
      <xsl:with-param name="current_search_query_args"
          select="$search_url" />
      <xsl:with-param name="msg_expert_search_no_experts_found"
          select="$msg_expert_search_no_experts_found" />
      <xsl:with-param name="msg_expert_search_switch_to_expanded_mode"
          select="$msg_expert_search_switch_to_expanded_mode" />
      <xsl:with-param name="msg_results_page_number_prefix"
          select="$msg_results_page_number_prefix" />
      <xsl:with-param name="msg_go_to_previous_page"
          select="$msg_go_to_previous_page" />
      <xsl:with-param name="msg_go_to_next_page"
          select="$msg_go_to_next_page" />
      <xsl:with-param name="msg_previous_page_action"
          select="$msg_previous_page_action" />
      <xsl:with-param name="msg_next_page_action"
          select="$msg_next_page_action" />
    </xsl:call-template>
  </xsl:when>
  <xsl:when test="$only_apps = '1' and $show_apps_segmented_ui = '1'">
    <xsl:call-template name="apps_only_search_results"/>
  </xsl:when>
  <xsl:when test="Q">
    <xsl:choose>
      <xsl:when test="($swrnum != 0) or
        (($swrnum = '-1') and (($access = 'a') or ($access = 's')))">
        <xsl:call-template name="swr_search"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="search_results"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:when>
  <xsl:when test="CACHE">
    <xsl:choose>
      <xsl:when test="$show_res_cache!='0'">
        <xsl:call-template name="cached_page"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="no_RES"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:when>
  <xsl:when test="CUSTOM/HOME">
    <xsl:call-template name="front_door"/>
  </xsl:when>
  <xsl:when test="CUSTOM/ADVANCED">
    <xsl:call-template name="advanced_search"/>
  </xsl:when>
  <xsl:when test="ERROR">
    <xsl:call-template name="error_page">
      <xsl:with-param name="errorMessage" select="$server_error_msg_text"/>
      <xsl:with-param name="errorDescription" select="$server_error_des_text"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:call-template name="error_page">
      <xsl:with-param name="errorMessage" select="$xml_error_msg_text"/>
      <xsl:with-param name="errorDescription" select="$xml_error_des_text"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<!-- **********************************************************************
Cached page (do not customize)
   ********************************************************************** -->
<xsl:template name="cached_page">
<xsl:variable name="cached_page_url" select="CACHE/CACHE_URL"/>
<xsl:variable name="cached_page_html" select="CACHE/CACHE_HTML"/>

<!-- *** decide whether to load html page or pdf file *** -->
<xsl:if test="'.pdf' != substring($cached_page_url,
            1 + string-length($cached_page_url) - string-length('.pdf')) and
            not(starts-with($cached_page_url, $db_url_protocol)) and
            not(starts-with($cached_page_url, $nfs_url_protocol)) and
            not(starts-with($cached_page_url, $smb_url_protocol)) and
            not(starts-with($cached_page_url, $unc_url_protocol))">
  <base href="{$cached_page_url}"/>
</xsl:if>

<!-- *** display cache page header *** -->
<xsl:call-template name="cached_page_header">
<xsl:with-param name="cached_page_url" select="$cached_page_url"/>
</xsl:call-template>

<!-- *** display cached contents *** -->
<xsl:value-of select="$cached_page_html" disable-output-escaping="yes"/>
</xsl:template>

<xsl:template name="escape_quot">
<xsl:param name="string"/>
<xsl:call-template name="replace_string">
  <xsl:with-param name="find" select="'&quot;'"/>
  <xsl:with-param name="replace" select="'&amp;quot;'"/>
  <xsl:with-param name="string" select="$string"/>
</xsl:call-template>
</xsl:template>

<!-- Escapes single quote, double quotes, < and > characters. -->
<xsl:template name="js_escape">
<xsl:param name="string"/>
<xsl:param name="slash_mode"/>
<xsl:variable name="without_slash">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select='"\"'/>
    <xsl:with-param name="replace" select='"\\"'/>
    <xsl:with-param name="string" select="$string"/>
  </xsl:call-template>
</xsl:variable>
<xsl:choose>
  <xsl:when test="$slash_mode = '1'">
    <xsl:variable name="without_slash_apos">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select='"&apos;"'/>
        <xsl:with-param name="replace" select='"\&apos;"'/>
        <xsl:with-param name="string" select="$without_slash"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="without_slash_apos_double_quotes">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select="'&quot;'"/>
        <xsl:with-param name="replace" select="'\&quot;'"/>
        <xsl:with-param name="string" select="$without_slash_apos"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="without_slash_apos_double_quotes_lt">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select='"&lt;"'/>
        <xsl:with-param name="replace" select='"\&lt;"'/>
        <xsl:with-param name="string"
            select="$without_slash_apos_double_quotes"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select='"&gt;"'/>
      <xsl:with-param name="replace" select='"\&gt;"'/>
      <xsl:with-param name="string"
        select="$without_slash_apos_double_quotes_lt"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:variable name="without_slash_apos">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select='"&apos;"'/>
        <xsl:with-param name="replace" select='"&amp;apos;"'/>
        <xsl:with-param name="string" select="$without_slash"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="without_slash_apos_double_quotes">
      <xsl:call-template name="escape_quot">
        <xsl:with-param name="string" select="$without_slash_apos"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="without_slash_apos_double_quotes_lt">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select='"&lt;"'/>
        <xsl:with-param name="replace" select='"&amp;lt;"'/>
        <xsl:with-param name="string"
          select="$without_slash_apos_double_quotes"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select='"&gt;"'/>
      <xsl:with-param name="replace" select='"&amp;gt;"'/>
      <xsl:with-param name="string"
        select="$without_slash_apos_double_quotes_lt"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<!-- **********************************************************************
Advanced search page (do not customize)
   ********************************************************************** -->
<xsl:template name="advanced_search">

<xsl:variable name="html_escaped_as_q">
  <xsl:call-template name="escape_quot">
    <xsl:with-param name="string">
      <xsl:choose>
        <xsl:when test="/GSP/PARAM[@name='dnavs']">
          <xsl:value-of select="substring-before(/GSP/PARAM[@name='q']/@value,
            /GSP/PARAM[@name='dnavs']/@value)"/>
        </xsl:when>
        <xsl:otherwise><xsl:value-of select="/GSP/PARAM[@name='q']/@value"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:with-param>
  </xsl:call-template>
  <xsl:if test="/GSP/PARAM[@name='as_q']/@value">
    <xsl:if test="/GSP/PARAM[@name='q']/@value"> 
      <xsl:value-of select="' '"/>
    </xsl:if>
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_q']/@value"/>
    </xsl:call-template>
  </xsl:if>
</xsl:variable>

<xsl:variable name="html_escaped_as_epq">
  <xsl:call-template name="escape_quot">
    <xsl:with-param name="string" select="/GSP/PARAM[@name='as_epq']/@value"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="html_escaped_as_oq">
  <xsl:call-template name="escape_quot">
    <xsl:with-param name="string" select="/GSP/PARAM[@name='as_oq']/@value"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="html_escaped_as_eq">
  <xsl:call-template name="escape_quot">
    <xsl:with-param name="string" select="/GSP/PARAM[@name='as_eq']/@value"/>
  </xsl:call-template>
</xsl:variable>

<html>
<xsl:attribute name="class">
  <xsl:value-of select="$skin_class"/>
</xsl:attribute>
<xsl:call-template name="langHeadStart"/>
<title><xsl:value-of select="$adv_page_title"/></title>
<xsl:call-template name="style"/>

<!-- script type="text/javascript" -->
<script>
<xsl:comment>
function setFocus() {
document.f.as_q.focus(); }
function esc(x){
x = escape(x).replace(/\+/g, "%2b");
if (x.substring(0,2)=="\%u") x="";
return x;
}
function collecturl(target, custom) {
var p = new Array();var i = 0;var url="";var z = document.f;
if (z.as_q.value.length) {p[i++] = 'as_q=' + esc(z.as_q.value);}
if (z.as_epq.value.length) {p[i++] = 'as_epq=' + esc(z.as_epq.value);}
if (z.as_oq.value.length) {p[i++] = 'as_oq=' + esc(z.as_oq.value);}
if (z.as_eq.value.length) {p[i++] = 'as_eq=' + esc(z.as_eq.value);}
if (z.as_sitesearch.value.length)
{p[i++]='as_sitesearch='+esc(z.as_sitesearch.value);}
if (z.as_lq.value.length) {p[i++] = 'as_lq=' + esc(z.as_lq.value);}
if (z.as_occt.options[z.as_occt.selectedIndex].value.length)
{p[i++]='as_occt='+esc(z.as_occt.options[z.as_occt.selectedIndex].value);}
if (z.as_dt.options[z.as_dt.selectedIndex].value.length)
{p[i++]='as_dt='+esc(z.as_dt.options[z.as_dt.selectedIndex].value);}
if (z.lr.options[z.lr.selectedIndex].value != '') {p[i++] = 'lr=' +
z.lr.options[z.lr.selectedIndex].value;}
if (z.num.options[z.num.selectedIndex].value != '10')
{p[i++] = 'num=' + z.num.options[z.num.selectedIndex].value;}
if (z.sort.options[z.sort.selectedIndex].value != '')
{p[i++] = 'sort=' + z.sort.options[z.sort.selectedIndex].value;}
if (typeof(z.client) != 'undefined')
{p[i++] = 'client=' + esc(z.client.value);}
if (typeof(z.site) != 'undefined')
{p[i++] = 'site=' + esc(z.site.value);}
if (typeof(z.output) != 'undefined')
{p[i++] = 'output=' + esc(z.output.value);}
if (typeof(z.proxystylesheet) != 'undefined')
{p[i++] = 'proxystylesheet=' + esc(z.proxystylesheet.value);}
if (typeof(z.ie) != 'undefined')
{p[i++] = 'ie=' + esc(z.ie.value);}
if (typeof(z.oe) != 'undefined')
{p[i++] = 'oe=' + esc(z.oe.value);}

if (typeof(z.access) != 'undefined')
{p[i++] = 'access=' + esc(z.access.value);}
if (custom != '')
{p[i++] = 'proxycustom=' + '&lt;ADVANCED/&gt;';}
if (p.length &gt; 0) {
url = p[0];
for (var j = 1; j &lt; p.length; j++) { url += "&amp;" + p[j]; }}
location.href = target + '?' + url;
}
// </xsl:comment>
</script>

<xsl:call-template name="langHeadEnd"/>

<body onload="setFocus()">
  <xsl:attribute name="class">
  <xsl:value-of select="'clearfix'"/>
  </xsl:attribute>
  <xsl:attribute name="dir">ltr</xsl:attribute>
  <div id="container" class="schoolpage">
  <!-- *** Customer's own advanced search page header *** -->
  <xsl:if test="$choose_adv_search_page_header = 'mine' or
                  $choose_adv_search_page_header = 'both'">
    <xsl:call-template name="header_element"/>
  <xsl:call-template name="main_content_wrapper_start"/>
  </xsl:if>
  <div class="main-content">
  <xsl:call-template name="personalization"/>
  <xsl:call-template name="analytics"/>

  <!--====Advanced Search Header======-->
  <xsl:if test="$choose_adv_search_page_header = 'provided' or
                  $choose_adv_search_page_header = 'both'">
    <xsl:call-template name="advanced_search_header"/>
  </xsl:if>
  <xsl:call-template name="top_sep_bar">
    <xsl:with-param name="text" select="$sep_bar_adv_text"/>
    <xsl:with-param name="show_info" select="0"/>
    <xsl:with-param name="time" select="0"/>
  </xsl:call-template>

  <!--====Carry over Search Parameters======-->
  <form method="get" action="search" name="f">
    <xsl:if test="PARAM[@name='client']">
      <input type="hidden" name="client"
        value="{PARAM[@name='client']/@value}" />
    </xsl:if>
  <!--==== site is carried over in the drop down if the menu is used =====-->
    <xsl:if test="$search_collections_xslt = '' and PARAM[@name='site']">
      <input type="hidden" name="site" value="{PARAM[@name='site']/@value}"/>
    </xsl:if>
    <xsl:if test="PARAM[@name='output']">
      <input type="hidden" name="output"
        value="{PARAM[@name='output']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='proxystylesheet']">
      <input type="hidden" name="proxystylesheet"
        value="{PARAM[@name='proxystylesheet']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='ie']">
      <input type="hidden" name="ie"
        value="{PARAM[@name='ie']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='oe']">
      <input type="hidden" name="oe"
        value="{PARAM[@name='oe']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='hl']">
      <input type="hidden" name="hl"
        value="{PARAM[@name='hl']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='getfields']">
      <input type="hidden" name="getfields"
        value="{PARAM[@name='getfields']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='requiredfields']">
      <input type="hidden" name="requiredfields"
        value="{PARAM[@name='requiredfields']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='partialfields']">
      <input type="hidden" name="partialfields"
        value="{PARAM[@name='partialfields']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='exclude_apps']">
      <input type="hidden" name="exclude_apps"
        value="{PARAM[@name='exclude_apps']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='only_apps']">
      <input type="hidden" name="only_apps"
        value="{PARAM[@name='only_apps']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='ulang']">
      <input type="hidden" name="ulang"
        value="{PARAM[@name='ulang']/@value}" />
    </xsl:if>

    <!--====Advanced Search Options======-->
    <div id="advanced-search-options-div">
      
    </div>
    <table cellspacing="0" cellpadding="3" border="0" width="100%">
      <tr bgcolor="{$adv_search_panel_bgcolor}">
        <td>
          <table width="100%" cellspacing="0" cellpadding="0" border="0">
            <tr bgcolor="{$adv_search_panel_bgcolor}">
              <td>
                <table width="100%" cellspacing="0" cellpadding="2"
                border="0">
                  <tr>
                    <td valign="top" width="15%"><br />
                    <b>Find results</b></td>

                    <td width="85%">
                      <table width="100%" cellpadding="2"
                      border="0" cellspacing="0">
                        <tr>
                          <td><font size="-1">with <b>all</b> of the words</font></td>

                          <td>
                          <xsl:text disable-output-escaping="yes">
                           &lt;input type=&quot;text&quot;
                           name=&quot;as_q&quot;
                           size=&quot;25&quot; value=&quot;</xsl:text>
                          <xsl:value-of disable-output-escaping="yes"
                           select="$html_escaped_as_q"/>
                          <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>

                          <script type="text/javascript">
                            <xsl:comment>
                              document.f.as_q.focus();
                            // </xsl:comment>
                          </script>
                          </td>

                          <td valign="top" rowspan="4">
                          <font size="-1">
                          <select name="num">
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value!='10')]">
                                <option value="10">10 results</option>
                              </xsl:when>
                              <xsl:otherwise>
                                <option value="10" selected="selected">10 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value='20')]">
                                <option value="20" selected="selected">20 results</option>
                              </xsl:when>
                                <xsl:otherwise>
                                  <option value="20">20 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value='30')]">
                                <option value="30" selected="selected">30 results</option>
                              </xsl:when>
                              <xsl:otherwise>
                                <option value="30">30 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value='50')]">
                                <option value="50" selected="selected">50 results</option>
                              </xsl:when>
                              <xsl:otherwise>
                                <option value="50">50 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value='100')]">
                                <option value="100" selected="selected">100 results</option>
                              </xsl:when>
                              <xsl:otherwise>
                                <option value="100">100 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                          </select>
                          </font>
                          </td>
                          <xsl:call-template name="collection_menu"/>
                          <td>
                          <font size="-1">
                          <input type="submit" name="btnG"
                            value="{$search_button_text}" />
                          </font>
                          </td>
                        </tr>

                        <tr>
                          <td nowrap="nowrap"><font size="-1">with the <b>exact phrase</b></font></td>

                          <td>
                          <xsl:text disable-output-escaping="yes">

                           &lt;input type=&quot;text&quot;
                           name=&quot;as_epq&quot;
                           size=&quot;25&quot; value=&quot;</xsl:text>
                          <xsl:value-of disable-output-escaping="yes"
                           select="$html_escaped_as_epq"/>
                          <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                          </td>
                        </tr>

                        <tr>
                          <td nowrap="nowrap"><font size="-1">with <b>at least one</b> of the words</font></td>

                          <td>
                          <xsl:text disable-output-escaping="yes">

                           &lt;input type=&quot;text&quot;
                           name=&quot;as_oq&quot;
                           size=&quot;25&quot; value=&quot;</xsl:text>
                          <xsl:value-of disable-output-escaping="yes"
                           select="$html_escaped_as_oq"/>
                          <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                          </td>
                        </tr>

                        <tr>
                          <td nowrap="nowrap"><font size="-1"><b>without</b> the words</font></td>

                          <td>
                          <xsl:text disable-output-escaping="yes">

                           &lt;input type=&quot;text&quot;
                           name=&quot;as_eq&quot;
                           size=&quot;25&quot; value=&quot;</xsl:text>
                          <xsl:value-of disable-output-escaping="yes"
                           select="$html_escaped_as_eq"/>
                          <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                          </td>
                        </tr>
                      </table>
                    </td>
                  </tr>
                </table>
              </td>
            </tr>

            <tr bgcolor="{$global_bg_color}">
              <td>
                <table width="100%" cellspacing="0"
                cellpadding="2" border="0">
                  <tr>
                    <td width="15%"><font size="-1"><b>Language</b></font></td>

                    <td width="40%"><font size="-1">Return pages written in</font></td>

                    <td><font size="-1">



                       <xsl:choose>
                      <xsl:when test="PARAM[(@name='oe') and (@value!='')]">
                        <xsl:text disable-output-escaping="yes">&lt;select name=&quot;lr&quot;&gt;</xsl:text>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text disable-output-escaping="yes">&lt;select name=&quot;lr&quot; onchange=&quot;javascript:collecturl('search', 'adv');&quot;&gt;</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>

                      <option value="">any language</option>

                      <!--====IMPORTANT: This is not a Message. This is a placeholder.======-->
                      
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ar')]">
     <option value="lang_ar"
     selected="selected">Arabic</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ar">Arabic</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-CN')]">
     <option value="lang_zh-CN"
     selected="selected">Chinese (Simplified)</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_zh-CN">Chinese (Simplified)</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-TW')]">
     <option value="lang_zh-TW"
     selected="selected">Chinese (Traditional)</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_zh-TW">Chinese (Traditional)</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_cs')]">
     <option value="lang_cs"
     selected="selected">Czech</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_cs">Czech</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_da')]">
     <option value="lang_da"
     selected="selected">Danish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_da">Danish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_nl')]">
     <option value="lang_nl"
     selected="selected">Dutch</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_nl">Dutch</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_en')]">
     <option value="lang_en"
     selected="selected">English</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_en">English</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_et')]">
     <option value="lang_et"
     selected="selected">Estonian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_et">Estonian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_fi')]">
     <option value="lang_fi"
     selected="selected">Finnish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_fi">Finnish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_fr')]">
     <option value="lang_fr"
     selected="selected">French</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_fr">French</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_de')]">
     <option value="lang_de"
     selected="selected">German</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_de">German</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_el')]">
     <option value="lang_el"
     selected="selected">Greek</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_el">Greek</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_iw')]">
     <option value="lang_iw"
     selected="selected">Hebrew</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_iw">Hebrew</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_hu')]">
     <option value="lang_hu"
     selected="selected">Hungarian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_hu">Hungarian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_is')]">
     <option value="lang_is"
     selected="selected">Icelandic</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_is">Icelandic</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_it')]">
     <option value="lang_it"
     selected="selected">Italian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_it">Italian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ja')]">
     <option value="lang_ja"
     selected="selected">Japanese</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ja">Japanese</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ko')]">
     <option value="lang_ko"
     selected="selected">Korean</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ko">Korean</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_lv')]">
     <option value="lang_lv"
     selected="selected">Latvian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_lv">Latvian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_lt')]">
     <option value="lang_lt"
     selected="selected">Lithuanian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_lt">Lithuanian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_no')]">
     <option value="lang_no"
     selected="selected">Norwegian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_no">Norwegian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_pl')]">
     <option value="lang_pl"
     selected="selected">Polish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_pl">Polish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_pt')]">
     <option value="lang_pt"
     selected="selected">Portuguese</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_pt">Portuguese</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ro')]">
     <option value="lang_ro"
     selected="selected">Romanian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ro">Romanian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ru')]">
     <option value="lang_ru"
     selected="selected">Russian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ru">Russian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_es')]">
     <option value="lang_es"
     selected="selected">Spanish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_es">Spanish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_sv')]">
     <option value="lang_sv"
     selected="selected">Swedish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_sv">Swedish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_tr')]">
     <option value="lang_tr"
     selected="selected">Turkish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_tr">Turkish</option>
     </xsl:otherwise>
    </xsl:choose>


                    <xsl:text disable-output-escaping="yes">&lt;/select&gt;</xsl:text>
                    </font></td>
                  </tr>
                </table>
              </td>
            </tr>

            <tr bgcolor="{$global_bg_color}">
              <td>
                <table width="100%" cellpadding="2"
                cellspacing="0" border="0">
                  <tr>
                    <td width="15%"><font size="-1"><b>File Format</b></font></td>

                    <td width="40%" nowrap="nowrap"><font size="-1"><select name="as_ft">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_ft') and (@value='i')]">
                          <option value="i" selected="selected">Only</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="i">Only</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_ft') and (@value='e')]">
                          <option value="e" selected="selected">Don't</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="e">Don't</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select>return results of the file format</font>
                    </td>

                    <td><font size="-1">
                    <select name="as_filetype">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value!='')]">
                          <option value="">any format</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="" selected="selected">any format</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='pdf')]">
                          <option value="pdf" selected="selected">Adobe Acrobat PDF (.pdf)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="pdf">Adobe Acrobat PDF (.pdf)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='ps')]">
                          <option value="ps" selected="selected">Adobe Postscript (.ps)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="ps">Adobe Postscript (.ps)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='doc')]">
                          <option value="doc" selected="selected">Microsoft Word (.doc)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="doc">Microsoft Word (.doc)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='docx')]">
                          <option value="docx" selected="selected">Microsoft Word (.docx)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="docx">Microsoft Word (.docx)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='xls')]">
                          <option value="xls" selected="selected">Microsoft Excel (.xls)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="xls">Microsoft Excel (.xls)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='xlsx')]">
                          <option value="xlsx" selected="selected">Microsoft Excel (.xlsx)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="xlsx">Microsoft Excel (.xlsx)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='ppt')]">
                          <option value="ppt" selected="selected">Microsoft Powerpoint (.ppt)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="ppt">Microsoft Powerpoint (.ppt)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='pptx')]">
                          <option value="pptx" selected="selected">Microsoft Powerpoint (.pptx)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="pptx">Microsoft Powerpoint (.pptx)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='rtf')]">
                          <option value="rtf" selected="selected">Rich Text Format (.rtf)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="rtf">Rich Text Format (.rtf)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select>
                    </font></td>
                  </tr>
                </table>
              </td>
            </tr>

            <tr bgcolor="{$global_bg_color}">
              <td>
                <table width="100%" cellspacing="0"
                cellpadding="2" border="0">
                  <tr>
                    <td width="15%"><font size="-1"><b>Occurrences</b></font></td>

                    <td nowrap="nowrap" width="40%"><font size="-1">Return results where my terms occur</font></td>

                    <td><font size="-1"><select
                    name="as_occt">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_occt') and (@value!='any')]">
                          <option value="any"> anywhere in the page </option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="any" selected="selected">
                            anywhere in the page
                          </option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_occt') and (@value='title')]">
                          <option value="title" selected="selected">in the title of the page</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="title">in the title of the page</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_occt') and (@value='url')]">
                          <option value="url" selected="selected">in the URL of the page</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="url">in the URL of the page</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select></font></td>
                  </tr>
                </table>
              </td>
            </tr>

            <tr bgcolor="{$global_bg_color}">
              <td>
                <table width="100%" cellpadding="2"
                cellspacing="0" border="0">
                  <tr>
                    <td width="15%"><font size="-1"><b>Domain</b></font></td>

                    <td width="40%" nowrap="nowrap"><font size="-1"><select
                    name="as_dt">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_dt') and (@value='i')]">
                          <option value="i" selected="selected">Only</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="i">Only</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_dt') and (@value='e')]">
                          <option value="e" selected="selected">Don't</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="e">Don't</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select>return results from the site or domain</font></td>

                    <td>
                      <table cellpadding="0" cellspacing="0"
                      border="0">
                        <tr>
                          <td>
                            <xsl:choose>
                              <xsl:when test="PARAM[@name='as_sitesearch']">
                                <input type="text" size="25"
                                value="{PARAM[@name='as_sitesearch']/@value}"
                                name="as_sitesearch" />
                              </xsl:when>
                              <xsl:otherwise>
                                <input type="text" size="25" value="" name="as_sitesearch" />
                              </xsl:otherwise>
                            </xsl:choose>
                          </td>
                        </tr>

                        <tr>
                          <td valign="top" nowrap="nowrap"><font size="-1">
                            <i>e.g. google.com, .org</i></font></td>
                        </tr>
                      </table>
                    </td>
                  </tr>

                  <!-- Sort by Date feature -->
                  <tr>
                    <td width="15%"><font size="-1"><b>Sort</b></font></td>

                    <td colspan="2" nowrap="nowrap"><font size="-1"><select
                    name="sort">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='sort') and (@value='')]">
                          <option value="" selected="selected">Sort by relevance</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="">Sort by relevance</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='sort') and (@value='date:D:S:d1')]">
                          <option value="date:D:S:d1" selected="selected">Sort by date</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="date:D:S:d1">Sort by date</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select></font></td>
                  </tr>
                  <!-- Secure Search feature -->
                  <xsl:if test="$show_secure_radio != '0'">

                  <tr>
                    <td width="15%"><font size="-1"><b>Security</b></font></td>

                    <td colspan="2" nowrap="nowrap"><font size="-1">
                      <xsl:if test="$skin_class = 'skinned'">
                        <xsl:choose>
                        <xsl:when test="$access='p'">
                          <label><input type="radio" name="access" value="p" checked="checked" />Search public content only</label>
                        </xsl:when>
                        <xsl:otherwise>
                          <label><input type="radio" name="access" value="p"/>Search public content only</label>
                        </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="$access='a'">
                            <label><input type="radio" name="access" value="a" checked="checked" />Search public and secure content (login required)</label>
                          </xsl:when>
                        <xsl:otherwise>
                          <label><input type="radio" name="access" value="a"/>Search public and secure content (login required)</label>
                        </xsl:otherwise>
                        </xsl:choose>
                      </xsl:if>
                    </font></td>
                  </tr>
                  </xsl:if>
                </table>
              </td>
            </tr>

          </table>
        </td>
      </tr>
    </table>
    <br />
    <br />

    <!--====Page-Specific Search======-->
    <div id="page-specific-search-div">
      <b>Page-Specific Search</b>
    </div>
    <table cellspacing="0" cellpadding="3" border="0" width="100%">
      <tr bgcolor="{$adv_search_panel_bgcolor}">
        <td>
          <table width="100%" cellpadding="0" cellspacing="0"
          border="0">
            <tr bgcolor="{$adv_search_panel_bgcolor}">
              <td>

                <table width="100%" cellpadding="2"
                cellspacing="0" border="0">
                <form method="get" action="search" name="h">

                  <tr bgcolor="{$global_bg_color}">
                    <td width="15%"><font size="-1"><b>Links</b></font></td>

                    <td width="40%" nowrap="nowrap"><font size="-1">Find pages that link to the page</font> </td>

                    <td nowrap="nowrap">
                        <xsl:choose>
                          <xsl:when test="PARAM[@name='as_lq']">
                            <input type="text" size="30"
                             value="{PARAM[@name='as_lq']/@value}"
                                     name="as_lq" />
                        </xsl:when>
                        <xsl:otherwise>
                          <input type="text" size="30" value="" name="as_lq" />
                        </xsl:otherwise>
                      </xsl:choose>
                      <font size="-1">
                      <input type="submit" name="btnG" value="{$search_button_text}" /></font>
                    </td>
                  </tr>
                </form>
                </table>
              </td>
            </tr>
          </table>
        </td>
      </tr>
    </table>

    <xsl:call-template name="copyright"/>

  </form>

  <!-- *** Customer's own advanced search page footer *** -->
</div>
<xsl:call-template name="footer_element"/>
<!-- *** Customer's own advanced search page header *** -->
  <xsl:if test="$choose_adv_search_page_header = 'mine' or
                  $choose_adv_search_page_header = 'both'">
  <xsl:call-template name="main_content_wrapper_end"/>
  </xsl:if>
</div>
</body>
</html>
</xsl:template>

<!-- **********************************************************************
Resend query with filter=p to disable path_filtering
if there is only one result cluster (do not customize)
   ********************************************************************** -->
<xsl:template name="redirect_if_few_results">
<xsl:variable name="count" select="count(/GSP/RES/R)"/>
<xsl:variable name="start" select="/GSP/RES/@SN"/>
<xsl:variable name="filterall"
  select="count(/GSP/PARAM[@name='filter']) = 0"/>
<xsl:variable name="filter" select="/GSP/PARAM[@name='filter']/@value"/>

</xsl:template>

<!-- **********************************************************************
Google Apps search results (do not customize)
   ********************************************************************** -->
<xsl:template name="apps_only_search_results">
<html>
  <xsl:attribute name="class">
  <xsl:value-of select="$skin_class"/>
  </xsl:attribute>
<script>
  <xsl:comment>
    /**
     * Initializes the Google Apps results section by notifying the parent
     * document containing the iframe container. The results are passed to
     * the parent iframe container so that it can display the same in the
     * 'div' section reserved for Google Apps results section.
     */
    function initGoogleApps() {
      <xsl:choose>
        <xsl:when test="RES/R">
          var isNextRes = '<xsl:value-of select="/GSP/RES/NB/NU" />';
          var isPrevRes = '<xsl:value-of select="/GSP/RES/NB/PU" />';
          var topNavHtml =
              document.getElementById('top-navigation-html').innerHTML;
          var btmNavHtml =
              document.getElementById('bottom-navigation-html').innerHTML;
          var btmSearchBoxHtml =
              document.getElementById('bottom-search-box-html').innerHTML;
          var resultsDiv = document.getElementById('apps-results-container');
          var resultsContent = resultsDiv.innerHTML;
          resultsDiv.innerHTML = '';
          window.parent.displayGoogleAppsResults(
              true, resultsContent, isNextRes, isPrevRes, topNavHtml,
              btmNavHtml, btmSearchBoxHtml);
        </xsl:when>
        <xsl:otherwise>
          window.parent.displayGoogleAppsResults(false);
        </xsl:otherwise>
      </xsl:choose>
    }
  </xsl:comment>
</script>
<xsl:variable name="only_apps_onload">
  <xsl:if test="not(/GSP/PARAM[(@name='only_apps_deb') and (@value='1')])">
    <xsl:text disable-output-escaping="yes">initGoogleApps();</xsl:text>
  </xsl:if>
</xsl:variable>
<body onload="{$only_apps_onload}">
  <xsl:attribute name="class">
  <xsl:value-of select="'clearfix'"/>
  </xsl:attribute>
<div id="container" class="schoolpage">
<div id="apps-results-container main-content">
  <div>
    <div class="sb-r-lbl-apps">Google Apps</div>
    <div>
      <xsl:apply-templates select="RES/R">
        <xsl:with-param name="query" select="Q"/>
      </xsl:apply-templates>

      <xsl:if test="RES/R">
        <div style="display: none;" id="top-navigation-html">
          <xsl:if test="$show_top_navigation != '0'">
            <xsl:call-template name="gen_top_navigation" />
          </xsl:if>
        </div>

        <div style="display: none;" id="bottom-navigation-html">
          <xsl:call-template name="gen_bottom_navigation" />
        </div>

        <div style="display: none;" id="bottom-search-box-html">
          <xsl:if test="$show_bottom_search_box != '0' and RES">
            <xsl:call-template name="bottom_search_box"/>
          </xsl:if>
        </div>
      </xsl:if>
    </div>
  </div>
</div>
</div>
</body>
</html>
</xsl:template>

<!-- **********************************************************************
Search results (do not customize)
   ********************************************************************** -->
<xsl:template name="search_results">
<xsl:call-template name="doc_type"/>
<xsl:if test="$is_embedded_mode != '1'">
<xsl:text disable-output-escaping="yes">&lt;html class=&quot;</xsl:text><xsl:value-of select="$skin_class"/><xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
</xsl:if>

<!-- *** HTML header and style *** -->
<xsl:call-template name="langHeadStart"/>
<xsl:variable name="res_count" select="count(/GSP/RES/R)"/>
  <xsl:call-template name="redirect_if_few_results"/>
  <xsl:choose>
    <xsl:when test="$res_count &gt; 0">
       <title><xsl:value-of select="$result_page_title"/>:
        <xsl:value-of select="$space_normalized_query"/>
      </title>
    </xsl:when>
    <xsl:otherwise>
      <title><xsl:value-of select="$front_page_title"/>:
        <xsl:value-of select="$space_normalized_query"/>
      </title>
    </xsl:otherwise>
  </xsl:choose> 
  <xsl:call-template name="style"/>
  <xsl:choose>
    <xsl:when test="$render_dynamic_navigation = '1' and $show_translation = '1'">
      <script type="text/javascript"
          src="{$gsa_resource_root_path_prefix}/all_js_compiled.js"></script>
    </xsl:when>
    <xsl:when test="$render_dynamic_navigation = '1'">
      <script type="text/javascript"
          src="{$gsa_resource_root_path_prefix}/dyn_nav_compiled.js"></script>
    </xsl:when>
  </xsl:choose>

  <xsl:if test="$render_dynamic_navigation = '1'">
    <script type="text/javascript">
      <xsl:variable name="dnavs_param">
        <xsl:if test="/GSP/PARAM[@name='dnavs']"><xsl:value-of
            select="/GSP/PARAM[@name='dnavs']/@original_value"/></xsl:if>
      </xsl:variable>
      var dynNavMgr = new gsa.search.DynNavManager(
        "<xsl:value-of select="$dnavs_param"/>",
        "<xsl:value-of select="/GSP/PARAM[@name='q']/@original_value"/>",
        "<xsl:value-of select='$original_q'/>",
        "<xsl:value-of select='$no_q_dnavs_params_escaped'/>",
        <xsl:value-of select='/GSP/RES/PARM/PC'/>
      );
    </script>
  </xsl:if>
  <script type="text/javascript">
    <xsl:comment>
      <xsl:if test="$show_sidebar = '1'">
        var LEFT_SIDE_RES_CONTAINER = 'left-side-container';
        var LEFT_BORDER_STYLE = 'sb-r-border';

        /** Container element to hold the sidebar. */
        var SIDEBAR_CONTAINER = 'sidebar-container';
        /** Element for holding all sidebar elements. */
        var SIDEBAR = 'sidebar';
        /** Total elements that should be displayed in the sidebar. */
        var totalSidebarEleToDisplay = 0;
        /** Count of sidebar element(s) that has no results after search. */
        var noResultsFromEleCount = 0;

        /**
         * Initializes the sidebar by loading the appropriate sidebar
         * elements.
         */
        function initSidebar() {
          document.getElementById(SIDEBAR).className = '';
          if (!isLeftResultPresent()) {
            var sidebarContainer = document.getElementById(SIDEBAR_CONTAINER);
            document.getElementById(
                LEFT_SIDE_RES_CONTAINER).style.display = 'none';
            sidebarContainer.className = 'sb-r-alt';
          }
          <xsl:if test="$show_people_search = '1'">
            totalSidebarEleToDisplay++;
          </xsl:if>
          <xsl:if test="$show_apps_segmented_ui = '1'">
            totalSidebarEleToDisplay++;
          </xsl:if>
          <xsl:if test="$show_gss_results = '1'">
            totalSidebarEleToDisplay++;
          </xsl:if>
          // Expert Search - count expert search component as sidebar element.
          <xsl:if test="$is_expert_search_configured = '1'">
            totalSidebarEleToDisplay++;
          </xsl:if>
          // Now bootstrap the actual loading.
          <xsl:if test="$show_people_search = '1'">
            loadPeopleSearchResults();
          </xsl:if>
          <xsl:if test="$show_apps_segmented_ui = '1'">
            loadGoogleAppsResults();
          </xsl:if>
          <xsl:if test="$show_gss_results = '1'">
            loadGssResults();
          </xsl:if>
          // Expert Search - initialize the expert search JS component.
          <xsl:call-template name="include_expert_search_js_init">
            <xsl:with-param name="dom_container"
                select="'exp-results-container'" />
            <xsl:with-param name="script_import" select="'0'" />
          </xsl:call-template>
        }

        /**
         * Notifies that the caller sidebar element is not having results to
         * display.
         */
        function notifyNoResults() {
          noResultsFromEleCount++;
          if (noResultsFromEleCount == totalSidebarEleToDisplay) {
            if (!isLeftResultPresent()) {
              var sidebarContainer =
                  document.getElementById(SIDEBAR_CONTAINER);
              sidebarContainer.style.display = 'none';
              document.getElementById('no-results').style.display = '';
              return true;
            }
          }
          return false;
        }

        /**
         * Notifies that the caller sidebar element is having results to
         * display.
         */
        function notifyResultsPresent() {
          var sidebar = document.getElementById(SIDEBAR);
          if (isLeftResultPresent() &amp;&amp;
              sidebar.className != LEFT_BORDER_STYLE) {
            document.getElementById(SIDEBAR).className = LEFT_BORDER_STYLE;
          }
        }

        /**
         * Checks if the organic results on the left side are present or not.
         */
        function isLeftResultPresent() {
          var leftResContainer = document.getElementById(
              LEFT_SIDE_RES_CONTAINER).getElementsByTagName('div')[0];
          return leftResContainer.childNodes.length != 0 ? true : false;
        }
      </xsl:if>
      <xsl:if test="$show_apps_segmented_ui = '1'">
        var APPS_LOADING_MSG = 'loading-app-results';
        var APPS_RESULTS_CONTAINER = 'apps-results-container';
        var APPS_RESULTS_IFRAME = 'apps-results-iframe';
        var APPS_RESULTS_MSG_CONTAINER = 'apps-results-msg';
        var APPS_RESULTS_SECTION = 'apps-results-section';
        var BOTTOM_SEARCH_BOX = 'bottom-search-box';
        var NEXT_RESULTS_IN_NON_APPS =
            '<xsl:value-of select="/GSP/RES/NB/NU" />';
        var ONLY_APPS_QUERY_PARAM = 'only_apps=1';
        var PREV_RESULTS_IN_NON_APPS =
            '<xsl:value-of select="/GSP/RES/NB/PU" />';

        /**
         * Displays Google Apps results returned from the iframe inside the
         * reserved div. This function is called during the onload event
         * processing of iframe.
         */
        function displayGoogleAppsResults(
            display, opt_resultsContent, opt_isNextRes, opt_isPrevRes,
            opt_topNavHtml, opt_btmNavHtml, opt_btmSearchBoxHtml) {
          document.getElementById(APPS_LOADING_MSG).style.display = 'none';
          if (!display) {
            notifyNoResults();
            return;
          }
          notifyResultsPresent();

          // Replace the existing top/bottom navigation bar if Google Apps
          // is having more results and left side container is having
          // no more results.
          if (!NEXT_RESULTS_IN_NON_APPS &amp;&amp; opt_isNextRes ||
              !PREV_RESULTS_IN_NON_APPS &amp;&amp; opt_isPrevRes) {
            document.getElementById('top-navigation').innerHTML =
                opt_topNavHtml;
            document.getElementById('bottom-navigation').innerHTML =
                opt_btmNavHtml;
          }

          var resultsDiv = document.getElementById(APPS_RESULTS_SECTION);
          resultsDiv.innerHTML = opt_resultsContent;
          resultsDiv.style.display = '';
          if (!isLeftResultPresent()) {
            document.getElementById(BOTTOM_SEARCH_BOX).innerHTML =
                opt_btmSearchBoxHtml;
          }
        }

        /**
         * Loads the Google Apps results if 'exclude_apps' query parameter has
         * been set to '1'. Loading of Google Apps results is done by fetching
         * the results through the hidden iframe 'apps-results-iframe' and
         * setting the returned HTML response in the reserved div
         * 'apps-results-section'.
         */
        function loadGoogleAppsResults() {
          var excludeApps = document.getElementsByName('exclude_apps')[0];
          if (excludeApps.value == '1') {
            var resultsDiv = document.getElementById(APPS_RESULTS_SECTION);
            resultsDiv.style.display = 'none';
            document.getElementById(APPS_LOADING_MSG).style.display = '';
            var appsResContainer =
                document.getElementById(APPS_RESULTS_CONTAINER);
            appsResContainer.style.visibility = 'visible';

            // Compose the URL to be loaded in the Google Apps iframe.
            var url = window.location.href;
            if (url.indexOf('exclude_apps=') > -1) {
              url = url.replace(/exclude_apps=./i, ONLY_APPS_QUERY_PARAM);
            } else {
              url += '&amp;' + ONLY_APPS_QUERY_PARAM;
            }

            document.getElementById(APPS_RESULTS_IFRAME).src = url;
          }
        }
      </xsl:if>
      <xsl:if test="$show_gss_results = '1'">
        var GSS_LOADING_MSG = 'loading-gss-results';
        var GSS_RESULTS_MSG_CONTAINER = 'gss-results-msg';
        var GSS_RESULTS_SECTION = 'gss-results-section';
        
        /**
         * Loads the Google Site Search results if it's enabled.
         */
        function loadGssResults() {
          document.getElementById(GSS_LOADING_MSG).style.display = '';
          if (!GSS_JS_API_LOADED) {
            setTimeout('loadGssResults()', 500);
            return;
          }
          var gssControl = new google.search.CustomSearchControl(
              '<xsl:value-of select="$gss_search_engine_id" />');
          gssControl.setResultSetSize(google.search.Search.SMALL_RESULTSET);
          gssControl.setSearchCompleteCallback(this, gssSearchComplete);
          // Set drawing options to use our hidden input box.
          var drawOptions = new google.search.DrawOptions();
          drawOptions.setInput(document.getElementById('gss-hidden-input'));
          gssControl.draw('gss-results-section', drawOptions);
          gssControl.execute('<xsl:value-of select="Q" />');
        }
        
        /**
         * Enables/disables GSS results view based on whether results were
         * returned from GSS or not. This is a callback function that is
         * invoked post receiving response from GSS.
         */
        function gssSearchComplete(searchControl, searcher) {
          document.getElementById(GSS_LOADING_MSG).style.display = 'none';
          if (!searcher.results.length) {
            notifyNoResults();
            return;
          }
          notifyResultsPresent();
          document.getElementById(GSS_RESULTS_SECTION).style.display = '';
          document.getElementById(
              GSS_RESULTS_MSG_CONTAINER).style.display = '';
        }
      </xsl:if>
      <xsl:if test="$show_people_search = '1'">
        var PS_RESULTS_MSG_CONTAINER = 'ps-results-msg';
        var PS_RESULTS_SECTION = 'ps-results-section';
        var PS_LOADING_MSG = 'loading-ps-results';
        var PS_CONTENT_ID = 'people-search-ele';

        /**
         * Loads the people search results if it's enabled.
         */
        function loadPeopleSearchResults() {
          var psEle = document.getElementById(PS_CONTENT_ID);
          if (!psEle) {
            notifyNoResults();
            return;
          }
          notifyResultsPresent();
          psEle.parentNode.removeChild(psEle);
          document.getElementById(
              PS_RESULTS_MSG_CONTAINER).style.display = '';
          var psRes = document.getElementById(PS_RESULTS_SECTION);
          psRes.appendChild(psEle);
          psEle.style.display = '';
          psRes.style.display = '';
        }
      </xsl:if>

      function resetForms() {
        for (var i = 0; i &lt; document.forms.length; i++ ) {
            document.forms[i].reset();
        }
      }

      /**
       * Converts file links from encoded UTF-8 to Unicode, so that Internet
       * Explorer can follow the links correctly
       */
      function fixFileLinks() {
        for (var l = 0; l &lt; document.links.length; ++l) {
          var link = document.links[l];
          if (link.href.indexOf("file://") != 0) {
            continue;
          }

          var s = unescape(link.href);
          var result = "";
          for (var i = 0; i &lt; s.length; ++i) {
            var c = s.charCodeAt(i);
            if (c &gt;&gt; 4 == 12 || c &gt;&gt; 4 == 13) {
              c = ((c &amp; 0x1F) &lt;&lt; 6)
                  + (s.charCodeAt(++i) &amp; 0x3F);
            } else if (c >> 4 == 14) {
              c = ((c &amp; 0x0F) &lt;&lt; 12)
                  + ((s.charCodeAt(++i) &amp; 0x3F) &lt;&lt; 6)
                  + (s.charCodeAt(++i) &amp; 0x3F);
            } else if (c >> 4 == 15) {
              c = ((c &amp; 0x07) &lt;&lt; 18)
                  + ((s.charCodeAt(++i) &amp; 0x3F) &lt;&lt; 12)
                  + ((s.charCodeAt(++i) &amp; 0x3F) &lt;&lt; 6)
                  + (s.charCodeAt(++i) &amp; 0x3F);
            }
            result += String.fromCharCode(c);
          }
          link.href = result;
        }
      }

      // Search query
      var page_query = &quot;<xsl:value-of select="$stripped_sanitized_search_query"/>&quot;
      // Starting page offset, usually 0 for 1st page, 10 for 2nd, 20 for 3rd.
      var page_start = &quot;<xsl:value-of select="/GSP/PARAM[@name='start']/@value"/>&quot;
      // Front end that served the page.
      var page_site = &quot;<xsl:value-of select="/GSP/PARAM[@name='site']/@value"/>&quot;
      //</xsl:comment>
  </script>
<xsl:call-template name="populate_uar_i18n_array"/>
<xsl:call-template name="langHeadEnd"/>
<xsl:call-template name="generate_html_body_for_search_results"/>
<xsl:if test="$is_embedded_mode != '1'">
<xsl:text disable-output-escaping="yes">&lt;/html&gt;</xsl:text>
</xsl:if>
</xsl:template>

<xsl:template name="search_results_body">
<xsl:call-template name="personalization"/>
<xsl:call-template name="analytics"/>

<!-- Send across form parameters that's used in the GSA search form, if we are
     running in embedded mode. This will be transformed to a hidden form in
     the embedding container page and used with the suggest feature. -->
<xsl:if test="$show_suggest = '1' and $is_embedded_mode = '1'">
  <div id="gsaembedmodeformparams" style="display: none;">
    <input type="hidden" name="q" class="q" value="" />
    <xsl:call-template name="form_params" />
  </div>
</xsl:if>

<!-- *** Result page header *** -->
<xsl:if test="$choose_result_page_header = 'provided' or
              $choose_result_page_header = 'both'">
  <xsl:call-template name="result_page_header" />
</xsl:if>

<!-- *** Top separation bar *** -->
  <xsl:if test="Q != ''">
    <xsl:call-template name="top_sep_bar">
      <xsl:with-param name="text" select="$sep_bar_std_text"/>
        <xsl:with-param name="show_info" select="$show_search_info"/>
      <xsl:with-param name="time" select="TM"/>
    </xsl:call-template>
  </xsl:if>

  <!-- *** Handle results (if any) *** -->
  <xsl:choose>
    <!-- Always allow calling results template when sidebar is enabled. -->
    <xsl:when test="$show_sidebar = '1'">
      <xsl:call-template name="results">
        <xsl:with-param name="query" select="Q"/>
        <xsl:with-param name="time" select="TM"/>
      </xsl:call-template>

      <!-- Generates the no results message container. Display this container
           when there are no results on both left side organic results
           container and sidebar. -->
      <div id="no-results" style="display: none;">
        <xsl:call-template name="no_RES">
          <xsl:with-param name="query" select="Q"/>
        </xsl:call-template>
      </div>
    </xsl:when>
    <xsl:when test="RES or GM or Spelling or Synonyms or CT or
                    (ENTOBRESULTS and
                     not(count(ENTOBRESULTS/OBRES) = 1
                         and ENTOBRESULTS/OBRES/provider = $uar_provider
                         and ENTOBRESULTS/OBRES/count = 0))">
      <xsl:call-template name="results">
        <xsl:with-param name="query" select="Q"/>
        <xsl:with-param name="time" select="TM"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:when test="Q=''">
    </xsl:when>
    <xsl:otherwise>
      <xsl:call-template name="no_RES">
        <xsl:with-param name="query" select="Q"/>
      </xsl:call-template>
    </xsl:otherwise>
  </xsl:choose>

  <!-- *** UAR v2, Expert Search - Add the i18n messages required by the
           UI components. *** -->
  <xsl:if test="(
    $show_onebox != '0' and /GSP/ENTOBRESULTS/OBRES/provider = $uar_provider)
    or $is_expert_search_configured = '1'">
    <xsl:call-template
        name="include_localized_messages_for_uar_expert_search"/>
  </xsl:if>

  <!-- *** UAR v2 - Load the UAR UI component. We make sure that this
           template is called at the end after the results are rendered
           so that UAR onebox data is available for the UI component. *** -->
<!-- Hide UAR since we only want it to add entries to suggestions -->
<!--
           <xsl:if test="$show_onebox != '0'">
    <xsl:if test="/GSP/ENTOBRESULTS/OBRES/provider = $uar_provider">
      <xsl:call-template name="include_uar_ui_component"/>
    </xsl:if>
  </xsl:if>
-->

  <!-- *** Expert Search - include expert search UI JS component. -->
  <xsl:call-template name="include_expert_search_js">
    <xsl:with-param name="src_prefix"
        select="$gsa_resource_root_path_prefix" />
  </xsl:call-template>

  <!-- *** Google footer *** -->
  <xsl:call-template name="copyright"/>

  <xsl:if test="$show_asr != '0'">
    <script type="text/javascript"
        src="{$gsa_resource_root_path_prefix}/clicklog_compiled.js"></script>
  </xsl:if>

  <xsl:if test="$render_dynamic_navigation = '1'">
    <script type="text/javascript">
      dynNavMgr.init();
    </script>
  </xsl:if>

  <!-- *** HTML footer *** -->
</xsl:template>


<!-- **********************************************************************
Collection menu beside the search box
   ********************************************************************** -->
<xsl:template name="collection_menu">
<xsl:if test="$search_collections_xslt != ''">
  <td valign="middle">
      
<select name="site">
<xsl:choose>
<xsl:when test="PARAM[(@name='site') and (@value='default_collection')]">
 <option value="default_collection" selected="selected">default_collection</option>
</xsl:when>
<xsl:otherwise>
 <option value="default_collection">default_collection</option>
</xsl:otherwise>
</xsl:choose>
<xsl:choose>
<xsl:when test="PARAM[(@name='site') and (@value='file_system')]">
 <option value="file_system" selected="selected">file_system</option>
</xsl:when>
<xsl:otherwise>
 <option value="file_system">file_system</option>
</xsl:otherwise>
</xsl:choose>
</select>

  </td>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Search box input form (Types: std_top, std_bottom, home, swr)
   ********************************************************************** -->
<xsl:template name="search_box">
<xsl:param name="type"/>

<xsl:if test="$is_embedded_mode != '1'">
<xsl:choose>
<xsl:when test="$show_suggest = '1' and (($type = 'home') or ($type = 'std_top'))">
<xsl:text disable-output-escaping="yes">&lt;form id="suggestion_form" name="gs" method="GET" action="search" onsubmit="return (this.q.value == '') ? false : true;"&gt;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text disable-output-escaping="yes">&lt;form name="gs" method="GET" action="search" onsubmit="return (this.q.value == '') ? false : true;"&gt;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:if>
      <div id="search_box_div">
        <xsl:if test="($egds_show_search_tabs != '0') and (($type = 'home') or ($type = 'std_top'))">
              <div id="desktop_tab_div">
                <xsl:call-template name="desktop_tab"/>  
              </div>
        </xsl:if>
        <xsl:if test="($type = 'swr')">
          <div id="swr_div">
                <xsl:variable name="est_result" select="/GSP/RES/M" />
                <xsl:if test="($est_result != '') and ($est_result > 0)">
                There were about <b><xsl:value-of select="RES/M"/></b> results for <b><xsl:value-of select="$space_normalized_query"/></b>.
                  <br/>
                </xsl:if>
                Use the search box below to search within these results.
          </div>
        </xsl:if>
              <xsl:choose>
                <xsl:when test="($type = 'swr')">
                  <input type="text" name="as_q" size="{$search_box_size}" maxlength="256" value="" class="search-box"/>
                  <input type="hidden" name="q" class="q" value="{$qval}"/>
                  <xsl:choose>
                      <xsl:when test="$choose_search_button = 'image'">
                                <input type="image" name="btnG" src="{$search_button_image_url}"
                               valign="bottom" width="60" height="26"
                               border="0" value="{$search_button_text}"/>
                      </xsl:when>
                    <xsl:otherwise>
                      <input type="submit" name="btnG" value="{$search_button_text}"/>
                    </xsl:otherwise>
                    </xsl:choose>   
                </xsl:when>
                <xsl:when test="$show_suggest = '1' and (($type = 'home') or ($type = 'std_top'))">
                  <div id="query_suggestions_div">
                    <input type="text" placeholder="{$q_input_placeholder_text}" name="q" class="q search-box" size="{$search_box_size}" maxlength="256" value="{$space_normalized_query}" autocomplete="off" />
                  <xsl:choose>
                      <xsl:when test="$choose_search_button = 'image'">
                                <input type="image" name="btnG" src="{$search_button_image_url}"
                               valign="bottom" width="60" height="26"
                               border="0" value="{$search_button_text}" class="glass"/>
                      </xsl:when>
                    <xsl:otherwise>
                      <input type="submit" name="btnG" value="{$search_button_text}"/>
                    </xsl:otherwise>
                    </xsl:choose>  
                  </div>
                </xsl:when>
                <xsl:otherwise>
                  <input type="text" placeholder="{$q_input_placeholder_text}" name="q" class="q search-box" size="{$search_box_size}" maxlength="256" value="{$space_normalized_query}"/>
                </xsl:otherwise>
              </xsl:choose>
        <br/>
        <div class="access-container">
            <xsl:if test="$show_secure_radio != '0'">
                <div class="access-type">
                  <xsl:if test="$skin_class = 'skinned'">
                    <xsl:choose>
                        <xsl:when test="$access='p'">
                          <label><input type="radio" name="access" value="p" checked="checked" />Public Content</label>
                        </xsl:when>
                        <xsl:otherwise>
                          <label><input type="radio" name="access" value="p"/>Public Content</label>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$access='a'">
                          <label><input type="radio" name="access" value="a" checked="checked" />Public and Secure Content</label>
                        </xsl:when>
                        <xsl:otherwise>
                          <label><input type="radio" name="access" value="a"/>Public and Secure Content</label>
                        </xsl:otherwise>
                      </xsl:choose>
                  </xsl:if>
                </div>
            </xsl:if>
        </div>
    </div>
            <xsl:call-template name="form_params"/>
            <xsl:if test="$is_embedded_mode != '1'">
            <xsl:text disable-output-escaping="yes">&lt;/form&gt;</xsl:text>
            </xsl:if>
      </xsl:template>

<!-- **********************************************************************
Bottom search box (do not customized)
   ********************************************************************** -->
<xsl:template name="bottom_search_box">
  <br clear="all"/>
  <br/>
  <div class="bottom-search-box">
    <center><br/>
    <xsl:call-template name="search_box">
    <xsl:with-param name="type" select="'std_bottom'"/>
    </xsl:call-template>
    <br/></center>
  </div>
</xsl:template>


<!-- **********************************************************************
Sort-by criteria: sort by date/relevance
   ********************************************************************** -->
<xsl:template name="sort_by">
<xsl:variable name="sort_by_url"><xsl:for-each
  select="/GSP/PARAM[(@name != 'sort') and
                     (@name != $embedded_mode_root_path_param) and
                     (@name != $embedded_mode_resource_root_path_param) and
                     (@name != $embedded_mode_disable_style) and
                     (@name != 'start') and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
    <xsl:choose>
      <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
        <!-- do nothing to remove 'ip' from the URL -->
      </xsl:when>
      <xsl:when test="@name = 'only_apps' and $show_apps_segmented_ui = '1'">
        <xsl:value-of select="'exclude_apps=1'" />
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
        <xsl:value-of select="@original_value"/>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="position() != last()">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
  </xsl:for-each>
</xsl:variable>

<xsl:variable name="sort_by_relevance_url">
  <xsl:value-of select="$sort_by_url"
    />&amp;sort=date%3AD%3AL%3Ad1</xsl:variable>

<xsl:variable name="sort_by_date_url">
  <xsl:value-of select="$sort_by_url"
    />&amp;sort=date%3AD%3AS%3Ad1</xsl:variable>
<div id="sort_by_div" class="sort-by">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[@name = 'sort' and starts-with(@value,'date:D:S')]">
    <span class="sort-selected">
    <xsl:text>Sort by date / </xsl:text>
    </span>
    <a ctype="sort"
        href="{$gsa_search_root_path_prefix}?{$sort_by_relevance_url}">Sort by relevance</a>
  </xsl:when>
  <xsl:when test="/GSP/PARAM[@name = 'sort' and starts-with(@value,'date:A:S')]">
    <span class="sort-selected">  
    <xsl:text>Sort by date / </xsl:text>
    </span>
    <a ctype="sort"
        href="{$gsa_search_root_path_prefix}?{$sort_by_relevance_url}">Sort by relevance</a>
  </xsl:when>
  <xsl:otherwise>
    <a ctype="sort"
        href="{$gsa_search_root_path_prefix}?{$sort_by_date_url}">Sort by date</a>
    <span class="sort-selected">
    <xsl:text> / Sort by relevance</xsl:text>
    </span>
  </xsl:otherwise>
</xsl:choose>
</div>
</xsl:template>

<xsl:template name="cluster_results">
<div id='clustering'>
  <h2>Narrow your search</h2>

  <span id='cluster_status'>
    <span id='cluster_message' style="display:none">loading...</span>
    <noscript>
      javascript must be enabled for narrowing.
    </noscript>
  </span>

  <xsl:choose>
    <xsl:when test="$res_cluster_position = 'top'">
      <div id="results_cluster_div" class="wrapper">
        <div id="results_cluster_top_div_col1" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label0"></li>
            <li id="cluster_label3"></li>
            <li id="cluster_label6"></li>
            <li id="cluster_label9"></li>
          </ul>
        </div>
        <div id="results_cluster_top_div_col2" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label1"></li>
            <li id="cluster_label4"></li>
            <li id="cluster_label7"></li>
          </ul>
        </div>
        <div id="results_cluster_top_div_col3" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label2"></li>
            <li id="cluster_label5"></li>
            <li id="cluster_label8"></li>
          </ul>
        </div>  
      </div>
    </xsl:when>
    <xsl:when test="$res_cluster_position = 'bottom'">
      <div id="results_cluster_div" class="wrapper">
        <div id="results_cluster_top_div_col1" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label0"></li>
            <li id="cluster_label2"></li>
            <li id="cluster_label4"></li>
            <li id="cluster_label6"></li>
            <li id="cluster_label8"></li>
          </ul>
        </div>
        <div id="results_cluster_top_div_col2" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label1"></li>
            <li id="cluster_label3"></li>
            <li id="cluster_label5"></li>
            <li id="cluster_label7"></li>
            <li id="cluster_label9"></li>
          </ul>
        </div>
      </div>
    </xsl:when>
    <xsl:when test="$res_cluster_position = 'right'">
      <ul class="cluster_list cluster-ul">
        <li id='cluster_label0'></li>
        <li id='cluster_label1'></li>
        <li id='cluster_label2'></li>
        <li id='cluster_label3'></li>
        <li id='cluster_label4'></li>
        <li id='cluster_label5'></li>
        <li id='cluster_label6'></li>
        <li id='cluster_label7'></li>
        <li id='cluster_label8'></li>
        <li id='cluster_label9'></li>
      </ul>
    </xsl:when>
  </xsl:choose>
</div>
</xsl:template>

<!-- Generates search results navigation bar to be placed at the top. -->
<xsl:template name="gen_top_navigation">
<xsl:if test="RES">
  <div class="wrapper">
    <div>
      <xsl:if test="$show_top_navigation != '0'">
        <td align="left">
          <xsl:call-template name="google_navigation">
            <xsl:with-param name="prev" select="RES/NB/PU"/>
            <xsl:with-param name="next" select="RES/NB/NU"/>
            <xsl:with-param name="view_begin" select="RES/@SN"/>
            <xsl:with-param name="view_end" select="RES/@EN"/>
            <xsl:with-param name="guess" select="RES/M"/>
            <xsl:with-param name="navigation_style" select="'top'"/>
          </xsl:call-template>
        </td>
      </xsl:if>
<!-- Removed by Vinay in scu2_frontend.xsl: not sure why -->
<!--      
      <xsl:if test="$show_sort_by != '0'">
        <td align="right">
          <xsl:call-template name="sort_by"/>
        </td>
      </xsl:if>
-->      
    </div>
  </div>
</xsl:if>
</xsl:template>

<!-- Generates search results navigation bar to be placed at the bottom. -->
<xsl:template name="gen_bottom_navigation">
<xsl:if test="RES">
  <xsl:variable name="nav_style">
    <xsl:choose>
      <xsl:when test="($access='s') or ($access='a')"><xsl:value-of select="$secure_bottom_navigation_type"/></xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$choose_bottom_navigation"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <xsl:call-template name="google_navigation">
    <xsl:with-param name="prev" select="RES/NB/PU"/>
    <xsl:with-param name="next" select="RES/NB/NU"/>
    <xsl:with-param name="view_begin" select="RES/@SN"/>
    <xsl:with-param name="view_end" select="RES/@EN"/>
    <xsl:with-param name="guess" select="RES/M"/>
    <xsl:with-param name="navigation_style" select="$nav_style"/>
  </xsl:call-template>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Output all results
   ********************************************************************** -->
<xsl:template name="results">
<xsl:param name="query"/>
<xsl:param name="time"/>

<xsl:choose>
  <xsl:when test="$render_dynamic_navigation = '1'">
    <xsl:call-template name="dynamic_navigation_results">
      <xsl:with-param name="query" select="$query"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <!-- *** Add top navigation/sort-by bar *** -->
    <xsl:if test="$show_top_navigation != '0' or $show_sort_by != '0'">
      <!-- there might be onebox results but no RES  -->
      <xsl:if test="RES or $show_sidebar = '1'">
        <div id="top-navigation">
          <xsl:call-template name="gen_top_navigation" />
        </div>
      </xsl:if>
    </xsl:if>

    <!-- *** Handle OneBox results, if any ***-->
    <xsl:if test="$show_onebox != '0' and count(/GSP/ENTOBRESULTS) &gt; 0 and $show_sidebar != '1'">
      <input type="hidden" name="oneboxloc" value="3909" />
      <xsl:call-template name="onebox"/>

    <script>
    <xsl:comment>
      if (window['populateUarMessages']) {
        populateUarMessages();
      }
    //</xsl:comment>
    </script>
    </xsl:if>

    <!-- *** handle spelling suggestions, if any *** -->
    <xsl:if test="$show_spelling != '0'">
      <xsl:call-template name="spelling"/>
    </xsl:if>

    <!-- *** handle synonyms, if any *** -->
    <xsl:if test="$show_synonyms != '0'">
      <xsl:call-template name="synonyms"/>
    </xsl:if>

    <!-- *** output google desktop results (if enabled and any available) *** -->
    <xsl:if test="$egds_show_desktop_results != '0'">
        <xsl:call-template name="desktop_results"/>
    </xsl:if>



    <!-- main results -->
    <xsl:call-template name="main_results">
      <xsl:with-param name="query" select="$query"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:template name="dynamic_navigation_results">
<xsl:param name="query"/>

<xsl:variable name="dn_tokens"
  select="tokenize(/GSP/PARAM[@name='dnavs']/@original_value, '\+')"/>

<xsl:variable name="div_pos">
  <xsl:choose>
    <xsl:when test="$show_sort_by != '0'">
      <xsl:text>position: relative; width: 100%;</xsl:text>
    </xsl:when>
    <xsl:otherwise>
      <xsl:text>position: relative; width: 100%; margin-top: 10px;</xsl:text>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<div id="main" style="{$div_pos}" class="main-div">
  <div id="dyn_nav">
    <div class="dn-hdr">
      <span style="padding-left: 6px;">
        <strong>Refine Results</strong>
        <span class="collapse"></span>
      </span>
    </div>

    <!-- Expert Search - display go back to main results link if expert
         search expanded mode is configured for this frontend. -->
    <xsl:if test="$show_expert_search_expanded_results = '1'">
      <div class="dn-exp">
        <xsl:call-template name="back_to_widget_view_frontend_link">
          <xsl:with-param name="src_prefix"
              select="concat($gsa_search_root_path_prefix, '?')" />
          <xsl:with-param name="msg_back_to_main_results_action"
              select="$msg_back_to_main_results_action" />
        </xsl:call-template>
      </div>
    </xsl:if>

    <div id="dyn_nav_col" style="height: 100%">
      <xsl:apply-templates select="/GSP/RES/PARM/PMT">
        <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
        <xsl:with-param name="partial_count" select="/GSP/RES/PARM/PC"/>
      </xsl:apply-templates>

      <script type="text/javascript">
        <xsl:for-each select="$dn_tokens">
          dynNavMgr.addSelectedAttr("<xsl:value-of select='.'/>");
        </xsl:for-each>

        <xsl:apply-templates select="/GSP/RES/PARM/PMT" mode="hidden"/>
      </script>
    </div>
  </div>
  <div id="main_res">
   <!-- show sort-by -->
  <xsl:if test="$show_sort_by != '0' or $show_spelling != '0' or $show_synonyms != '0'">
    <xsl:if test="RES"> <!-- there might be onebox results but no RES  -->
      <div class="wrapper">
        <div class="gsa-row">
          <div class="col">
            <xsl:if test="$show_spelling != '0' or $show_synonyms != '0'">
              <td align="left">
                <xsl:choose>
                  <!-- *** handle spelling suggestions, if any *** -->
                  <xsl:when test="$show_spelling != '0'">
                    <xsl:call-template name="spelling"/>
                  </xsl:when>
                  <!-- *** handle synonyms, if any *** -->
                  <xsl:otherwise>
                    <xsl:call-template name="synonyms"/>
                  </xsl:otherwise>
                </xsl:choose>
              </td>
            </xsl:if>
          </div>
        </div>
      </div>
    </xsl:if>
  </xsl:if>
  
  <xsl:if test="$show_spelling != '0' and $show_synonyms != '0'">
    <xsl:call-template name="synonyms"/>
  </xsl:if>
    <xsl:call-template name="main_results">
      <xsl:with-param name="query" select="$query"/>
      <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
    </xsl:call-template>
  </div>
</div>
</xsl:template>

<!-- This template is specifically needed to hide the lag in rendering for the
   dynamic navigation attributes with large set of values. Since only the top
   few values need to be displayed, the rest are added to the dynNavMgr JS
   instance for rendering later on demand ('More' click).
-->
<xsl:template match="PMT" mode="hidden">
<xsl:if test="@IR != 1">
  <xsl:variable name="values">
    [<xsl:for-each select="PV[position() &gt; $dyn_nav_max_rows and @C != '0']">["<xsl:call-template
        name='js_escape'><xsl:with-param name="string"
        select="@V"/><xsl:with-param name="slash_mode" select='"1"'/>
        </xsl:call-template>", <xsl:value-of select='@C'/>]<xsl:if
        test="position() != last()">,</xsl:if></xsl:for-each>]
  </xsl:variable>
  <xsl:variable name="attr_id"><xsl:value-of
      select="concat('attr_', string(position()))"/></xsl:variable>

  dynNavMgr.addAttrValues("<xsl:value-of select='$attr_id'/>", <xsl:value-of select='$values'/>);
</xsl:if>
</xsl:template>

<xsl:template match="PMT">
<xsl:param name="dn_tokens"/>
<xsl:param name="partial_count"/>

<xsl:variable name="name"><xsl:value-of select="normalize-space(@NM)"/></xsl:variable>
<xsl:variable name="pmt_name"><xsl:call-template
    name="term-escape"><xsl:with-param name="val" select="@NM"/></xsl:call-template>
</xsl:variable>

<xsl:choose>
  <xsl:when test="@IR = 1">
    <ul class="dn-attr">
      <li class="dn-attr-hdr"><span class="dn-attr-hdr-txt"><xsl:attribute
          name="title"><xsl:value-of select="@DN" disable-output-escaping="yes"/>
      </xsl:attribute><xsl:value-of select="@DN"/></span></li>
      <xsl:apply-templates select="PV">
        <xsl:with-param name="pmt_name" select="$pmt_name"/>
        <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
        <xsl:with-param name="partial_count" select="$partial_count"/>
      </xsl:apply-templates>
    </ul>
  </xsl:when>

  <xsl:otherwise>
    <xsl:variable name="total" select="count(PV[@C != '0'])"/>
    <xsl:variable name="attr_class">
      <xsl:choose>
        <xsl:when test="$total &lt; $dyn_nav_max_rows + 1">
          <xsl:value-of select="'dn-attr'"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="'dn-attr dn-attr-more'"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>

    <xsl:variable name="attr_id"><xsl:value-of
        select="concat('attr_', string(position()))"/></xsl:variable>
    <ul id="{$attr_id}" class="{$attr_class}">
      <xsl:choose>
        <xsl:when test="$total &lt; $dyn_nav_max_rows + 1">
          <li class="dn-attr-hdr"><span class="dn-attr-hdr-txt"><xsl:attribute
            name="title"><xsl:value-of select="@DN" disable-output-escaping="yes"/>
          </xsl:attribute><xsl:value-of select="@DN"/></span></li>
        </xsl:when>
        <xsl:otherwise>
          <li class="dn-attr-hdr"><div class="dn-zippy-hdr"><div class="dn-zippy-hdr-img"></div>
            <span class="dn-attr-hdr-txt"><xsl:attribute
              name="title"><xsl:value-of select="@DN" disable-output-escaping="yes"/>
            </xsl:attribute><xsl:value-of select="@DN"/></span></div></li>
        </xsl:otherwise>
      </xsl:choose>

      <xsl:apply-templates select="PV[position() &lt; $dyn_nav_max_rows + 1]">
        <xsl:with-param name="pmt_name" select="$pmt_name"/>
        <xsl:with-param name="header" select="@DN"/>
        <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
        <xsl:with-param name="partial_count" select="$partial_count"/>
      </xsl:apply-templates>

      <xsl:if test="$total &gt; $dyn_nav_max_rows">
        <xsl:variable name="total_left" select="$total - $dyn_nav_max_rows"/>
        <li id="{$attr_id}_more_less">
          <a id="more_{$attr_id}" class="dn-link" style="margin-right: 10px; outline-style: none;"
            onclick="dynNavMgr.displayMore('{$attr_id}', true); return false;"
            href="javascript:;">
            <xsl:attribute name="ctype">
                <xsl:text>dynnav.</xsl:text>
                <xsl:value-of select="$name" disable-output-escaping="no"/>
                <xsl:text>.more</xsl:text>
            </xsl:attribute>
            <span class="dn-more-img dn-mimg"></span>
            <span id="disp_{$attr_id}"><xsl:value-of
            select="$total_left"/></span><span> More</span>
          </a>
          <a id="less_{$attr_id}" class="dn-link dn-hidden" style="outline-style: none;"
            onclick="dynNavMgr.displayMore('{$attr_id}', false, {$total_left}); return false;"
            href="javascript:;">
            <xsl:attribute name="ctype">
              <xsl:text>dynnav.</xsl:text>
              <xsl:value-of select="$name" disable-output-escaping="no"/>
              <xsl:text>.less</xsl:text>
            </xsl:attribute>
            <span class="dn-more-img dn-limg"></span>
            <span>Less</span>
          </a>
        </li>
        <label class="dn-hidden dn-id"><xsl:value-of select="$attr_id"/></label>
        <label id="{$attr_id}_escaped" class="dn-hidden"><xsl:value-of
            select="$pmt_name"/></label>
        <label id="{$attr_id}_total" class="dn-hidden"><xsl:value-of
            select="$total"/></label>
        <label id="{$attr_id}_total_left" class="dn-hidden"><xsl:value-of
            select="$total_left"/></label>
      </xsl:if>
    </ul>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:template match="PV">
<xsl:param name="pmt_name"/>
<xsl:param name="header"/>
<xsl:param name="dn_tokens"/>
<xsl:param name="partial_count"/>

<xsl:if test="@C != 0">
  <xsl:apply-templates select="." mode="construct">
    <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
    <xsl:with-param name="header" select="$header"/>
    <xsl:with-param name="partial_count" select="$partial_count"/>
    <xsl:with-param name="current_token">
      <xsl:choose>
        <xsl:when test="../@IR = '1'"><xsl:variable
          name="stripped_l" select="normalize-space(@L)"/><xsl:variable
          name="stripped_h" select="normalize-space(@H)"/>inmeta:<xsl:value-of
          select="$pmt_name"/>:<xsl:choose><xsl:when test="../@T = 3"><xsl:if
          test="$stripped_l != ''">$<xsl:value-of select="$stripped_l"/></xsl:if>..<xsl:if
          test="$stripped_h != ''">$<xsl:value-of
          select="$stripped_h"/></xsl:if></xsl:when><xsl:otherwise><xsl:value-of
          select="$stripped_l"/>..<xsl:value-of select="$stripped_h"/></xsl:otherwise></xsl:choose>
        </xsl:when>
        <xsl:otherwise>inmeta:<xsl:value-of select="$pmt_name"/>%3D<xsl:call-template
            name="term-escape"><xsl:with-param name="val"
            select="@V"/></xsl:call-template></xsl:otherwise>
      </xsl:choose>
    </xsl:with-param>
  </xsl:apply-templates>
</xsl:if>
</xsl:template>

<xsl:template match="PV" mode="construct">
<xsl:param name="dn_tokens"/>
<xsl:param name="header"/>
<xsl:param name="current_token"/>
<xsl:param name="partial_count"/>

<xsl:variable name="dispval">
  <xsl:apply-templates select="." mode="display_value">
    <xsl:with-param name="js_escape" select="'1'"/>
  </xsl:apply-templates>
</xsl:variable>

<xsl:variable name="dispcount">
  <xsl:text>(</xsl:text><xsl:if
     test="$partial_count=1"><xsl:text>&gt; </xsl:text></xsl:if>
    <xsl:value-of select="@C"/><xsl:text>)</xsl:text>
</xsl:variable>

<xsl:variable name="is_selected" select="index-of($dn_tokens, $current_token)"/>
<li class="dn-attr-v">
  <xsl:choose>
    <xsl:when test="exists($is_selected)">
      <xsl:variable name="other_tokens">
        <xsl:value-of select="string-join(remove($dn_tokens, $is_selected[position()=1]), '+')"/>
      </xsl:variable>

      <xsl:variable name="cancel_url">
        <xsl:value-of select="$no_q_dnavs_params"/>&amp;q=<xsl:value-of
          select="$original_q"/><xsl:if test="$other_tokens != ''">+<xsl:value-of
          select="$other_tokens"/>&amp;dnavs=<xsl:value-of select="$other_tokens"/></xsl:if>
      </xsl:variable>

      <a class="dn-img dn-r-img"
          href="{$gsa_search_root_path_prefix}?{$cancel_url}"
          title="Clear">
        <xsl:attribute name="ctype">
          <xsl:text>dynnav.clear.</xsl:text>
          <xsl:value-of select="$header" disable-output-escaping="no"/>
        </xsl:attribute>
      </a>
      <span class="dn-overflow dn-inline-block" style="width: 86%;">
        <xsl:if test="../@IR != 1">
          <xsl:attribute name="title"><xsl:value-of select="$dispval"
              disable-output-escaping="yes"/></xsl:attribute>
        </xsl:if>
        <div class="dn-attr-txt"><xsl:value-of
            select="$dispval" disable-output-escaping="yes"/>
        </div>
        <span class="display-cnt"><xsl:value-of
            select="$dispcount" disable-output-escaping="yes"/>
        </span>
      </span>
    </xsl:when>
    <xsl:otherwise>
      <xsl:variable name="pmts_var">dnavs=<xsl:if test="/GSP/PARAM[@name='dnavs']"><xsl:value-of
          select="/GSP/PARAM[@name='dnavs']/@original_value"/>+</xsl:if><xsl:value-of
          select="$current_token"/>
      </xsl:variable>
      <xsl:variable name="qurl"><xsl:value-of select="$no_q_dnavs_params"/>&amp;q=<xsl:value-of
          select="/GSP/PARAM[@name='q']/@original_value"/>+<xsl:value-of
          select="$current_token"/>&amp;<xsl:value-of select="$pmts_var"/>
      </xsl:variable>
      <div class="dn-attr-txt"><a
        class="dn-attr-a" href="{$gsa_search_root_path_prefix}?{$qurl}">
        <xsl:attribute name="ctype">
          <xsl:text>dynnav.</xsl:text>
          <xsl:value-of select="$header" disable-output-escaping="no"/>
          <xsl:text>.</xsl:text>
          <xsl:value-of select="$dispval" disable-output-escaping="no"/>
        </xsl:attribute>
        <xsl:if test="../@IR != 1">
          <xsl:attribute name="title"><xsl:value-of select="$dispval"
              disable-output-escaping="no"/></xsl:attribute>
        </xsl:if><xsl:value-of
            select="$dispval" disable-output-escaping="yes"/></a>
      </div>
      <span class="dn-attr-c display-cnt"><xsl:value-of select="$dispcount"
          disable-output-escaping="yes"/></span>
    </xsl:otherwise>
  </xsl:choose>
</li>
</xsl:template>

<xsl:template match="PV" mode="display_value">
<xsl:param name="js_escape"/>
<xsl:choose>
  <xsl:when test="../@IR = 1">
    <xsl:variable name="disp_l">
      <xsl:call-template name="pmt_range_display_val">
        <xsl:with-param name="val" select="@L"/>
        <xsl:with-param name="type" select="../@T"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="disp_h">
      <xsl:call-template name="pmt_range_display_val">
        <xsl:with-param name="val" select="@H"/>
        <xsl:with-param name="type" select="../@T"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:choose>
      <xsl:when test="$disp_l = ''">
        <xsl:value-of select="$disp_h"/><xsl:text> </xsl:text>
        <xsl:choose>
          <xsl:when test="../@T = 4">or earlier</xsl:when>
          <xsl:otherwise>or less</xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:when test="$disp_h = ''">
        <xsl:value-of select="$disp_l"/><xsl:text> </xsl:text>
        <xsl:choose>
          <xsl:when test="../@T = 4">or later</xsl:when>
          <xsl:otherwise>or more</xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise><xsl:value-of
        select="$disp_l"/><xsl:text> </xsl:text><xsl:call-template
        name="endash"/><xsl:text> </xsl:text><xsl:value-of select="$disp_h"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:when>
  <xsl:otherwise>
    <xsl:choose>
      <xsl:when test="$js_escape = '1'">
        <xsl:call-template name="js_escape"><xsl:with-param name="string"
          select="@V"/><xsl:with-param name="slash_mode" select='"0"'/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise><xsl:value-of select="@V"/></xsl:otherwise>
    </xsl:choose>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:variable name="hex">0123456789ABCDEF</xsl:variable>
<xsl:template name="term-escape">
<xsl:param name="val"/>
<xsl:variable name="first-char" select="substring($val, 1, 1)"/>
<xsl:variable name="code"
  select="string-to-codepoints($first-char)[position()=1]"/>
<xsl:choose>
  <xsl:when test="not(($code >= 48 and $code &lt;= 57) or
    ($code >= 65 and $code &lt;= 90) or ($code = 95) or
    ($code >= 97 and $code &lt;= 122))">
    <xsl:choose>
      <xsl:when test="$code > 128">
        <xsl:value-of select="encode-for-uri($first-char)"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:variable name="hex-digit1"
          select="substring($hex, floor($code div 16) + 1, 1)"/>
        <xsl:variable name="hex-digit2"
          select="substring($hex, $code mod 16 + 1, 1)"/>
        <xsl:value-of select="concat('%25', $hex-digit1 ,$hex-digit2)"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$first-char"/>
  </xsl:otherwise>
</xsl:choose>
<xsl:if test="string-length($val) > 1">
  <xsl:call-template name="term-escape">
    <xsl:with-param name="val" select="substring($val, 2)"/>
  </xsl:call-template>
</xsl:if>
</xsl:template>

<xsl:template name="pmt_range_display_val">
<xsl:param name="val"/>
<xsl:param name="type"/>
<xsl:choose>
  <xsl:when test="$val != '' and ($type = 2 or $type = 3)">
    <xsl:value-of select="format-number($val, '#.##')"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$val"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:template name="main_results">
<xsl:param name="query"/>
<xsl:param name="dn_tokens"/>

<xsl:if test="$render_dynamic_navigation = '1'">
  <div class="dn-bar">
    <xsl:variable name="all_results_url"><xsl:value-of
        select="$no_q_dnavs_params"/>&amp;q=<xsl:value-of select="$original_q"/>
    </xsl:variable>

    <!-- Add next/prev navigation -->
    <xsl:if test="$show_top_navigation != '0' and /GSP/RES">
      <span class="dn-bar-rt">
        <xsl:call-template name="google_navigation">
          <xsl:with-param name="prev" select="/GSP/RES/NB/PU"/>
          <xsl:with-param name="next" select="/GSP/RES/NB/NU"/>
          <xsl:with-param name="view_begin" select="/GSP/RES/@SN"/>
          <xsl:with-param name="view_end" select="/GSP/RES/@EN"/>
          <xsl:with-param name="guess" select="/GSP/RES/M"/>
          <xsl:with-param name="navigation_style" select="'top'"/>
          <xsl:with-param name="dynamic_nav_bar" select="'1'"/>
        </xsl:call-template>
      </span>
    </xsl:if>

    <a class="dn-link" style="text-decoration: underline; color: #000;"
      href="{$gsa_search_root_path_prefix}?{$all_results_url}">All results</a>

    <xsl:if test="exists($dn_tokens)">
      <xsl:call-template name="rsaquo"/>
      <xsl:variable name="root_node" select="/GSP"/>
      <xsl:for-each select="$dn_tokens">
        <xsl:variable name="other_pmts_tokens"
          select="string-join(remove($dn_tokens, position()), '+')"/>

        <xsl:variable name="cancel_url">
          <xsl:value-of select="$all_results_url"/>
          <xsl:if test="$other_pmts_tokens != ''">+<xsl:value-of
              select="$other_pmts_tokens"/>&amp;dnavs=<xsl:value-of select="$other_pmts_tokens"/>
          </xsl:if>
        </xsl:variable>

        <div class="dn-inline-block"><a class="dn-link cancel-url dn-bar-link"
            href="{$gsa_search_root_path_prefix}?{$cancel_url}"
            title="Clear">
          <xsl:variable name="range_val" select="substring-after(., ':')"/>
          <xsl:choose>
            <xsl:when test="contains(., '..')">
              <xsl:for-each select="$root_node/RES/PARM/PMT">
                <xsl:variable name="escaped_name"><xsl:call-template name="term-escape">
                  <xsl:with-param name="val" select="@NM"/>
                </xsl:call-template></xsl:variable>
                <xsl:if test="$escaped_name=substring-before($range_val, ':')">
                  <span class="dn-bar-v"><xsl:value-of select="@DN"/>:</span><xsl:call-template
                    name="nbsp"/><xsl:choose>
                    <xsl:when test="@T = '3'">
                      <xsl:for-each select="PV">
                        <xsl:variable name="check_val"><xsl:if
                          test="normalize-space(@L) != ''">$<xsl:value-of
                          select="normalize-space(@L)"/></xsl:if>..<xsl:if
                          test="normalize-space(@H) != ''">$<xsl:value-of
                            select="normalize-space(@H)"/></xsl:if>
                        </xsl:variable>
                        <xsl:if test="$check_val=substring-after($range_val, ':')">
                          <xsl:apply-templates select="current()" mode="display_value">
                            <xsl:with-param name="js_escape" select="'0'"/>
                          </xsl:apply-templates>
                        </xsl:if>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:apply-templates select="PV[concat(normalize-space(@L), '..',
                        normalize-space(@H))=substring-after($range_val, ':')]" mode="display_value">
                        <xsl:with-param name="js_escape" select="'0'"/>
                      </xsl:apply-templates>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:if>
              </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
              <xsl:for-each select="$root_node/RES/PARM/PMT">
                <xsl:variable name="escaped_name"><xsl:call-template name="term-escape">
                  <xsl:with-param name="val" select="@NM"/>
                </xsl:call-template></xsl:variable>
                <xsl:if test="$escaped_name=substring-before($range_val, '%3D')">
                  <span class="dn-bar-v"><xsl:value-of select="./@DN"/>:</span><xsl:call-template
                    name="nbsp"/><xsl:for-each select="./PV"><xsl:variable
                      name="pv_val"><xsl:call-template name="term-escape">
                        <xsl:with-param name="val" select="./@V"/>
                      </xsl:call-template></xsl:variable>
                      <xsl:if test="$pv_val=substring-after($range_val, '%3D')">
                        <xsl:apply-templates select="." mode="display_value">
                          <xsl:with-param name="js_escape" select="'0'"/>
                        </xsl:apply-templates>
                      </xsl:if>
                  </xsl:for-each>
                </xsl:if>
              </xsl:for-each>
            </xsl:otherwise>
          </xsl:choose>
        </a></div>

        <xsl:if test="position() != last()">
          <xsl:call-template name="rsaquo"/>
        </xsl:if>
      </xsl:for-each>
    </xsl:if>
  </div>
  

  
  <!-- *** Handle OneBox results, if any ***-->
  <xsl:if test="$show_onebox != '0' and count(/GSP/ENTOBRESULTS) &gt; 0 and $show_sidebar != '1'">
      <input type="hidden" name="oneboxloc" value="4486-$show_sidebar" />
    <xsl:call-template name="onebox"/>

    <script>
    <xsl:comment>
      if (window['populateUarMessages']) {
        populateUarMessages();
      }
    //</xsl:comment>
    </script>
  </xsl:if>

  <!-- *** output google desktop results (if enabled and any available) *** -->
  <xsl:if test="$egds_show_desktop_results != '0'">
    <xsl:call-template name="desktop_results"/>
  </xsl:if>
</xsl:if>

<xsl:if test="$show_translation = '1' and $only_apps != '1'">
  <div id="translate_all_div" class="trns-all-div"></div>
</xsl:if>

<xsl:choose>
  <xsl:when test="$show_sidebar = '1'">
          <div class="col sb-r" id="sidebar-container">
            <div id="sidebar">
            <!-- Onebox -->
            <xsl:if test="$show_onebox != '0' and count(/GSP/ENTOBRESULTS) &gt; 0">
                <input type="hidden" name="oneboxloc" value="4514" />
              <xsl:call-template name="onebox"/>

              <script>
              <xsl:comment>
                if (window['populateUarMessages']) {
                  populateUarMessages();
                }
              //</xsl:comment>
              </script>
            </xsl:if>
            
            <!-- Expert Search - sidebar element. -->
            <xsl:if test="$show_expert_search_widget_view = '1'">
              <div id="exp-results-container">
                <xsl:call-template
                  name="render_expert_search_results">
                  <xsl:with-param name="src_prefix"
                      select="concat($gsa_search_root_path_prefix, '?')" />
                  <xsl:with-param name="is_noscript_mode" select="'true'" />
                </xsl:call-template>
              </div>
            </xsl:if>

            <!-- People Search sidebar element. -->
            <xsl:if test="$show_people_search = '1'">
            <div id="ps-results-container">
              <div id="loading-ps-results" class="sb-r-ld-msg-c" style="display: none;">
                <span class="sb-r-lbl">Loading People search results...</span>
              </div>
              <div id="ps-results-msg" class="sb-r-lbl" style="display: none;" >People</div>
              <div id="ps-results-section" class="sb-r-res" style="display:none;">
              </div>
            </div>
            </xsl:if>

            <!-- Google Apps results sidebar element. -->
            <xsl:if test="$show_apps_segmented_ui = '1'">
            <div id="apps-results-container">
              <div id="loading-app-results" class="sb-r-ld-msg-c" style="display: none;">
                <span class="sb-r-lbl">Loading Google Apps results...</span>
              </div>
              <div style="display: none;" id="apps-results-msg" class="sb-r-lbl"></div>
              <div id="apps-results-section" class="sb-r-res" style="display: none;">
              </div>
              <iframe scrolling="no" id="apps-results-iframe" frameborder="0"
                  style="display: none;">
              </iframe>
            </div>
            </xsl:if>

            <!-- Google Site Search sidebar element. -->
            <xsl:if test="$show_gss_results = '1'">
            <div id="gss-results-container">
              <div id="loading-gss-results" class="sb-r-ld-msg-c" style="display: none;">
                <span class="sb-r-lbl">Loading Google Site Search results...</span>
              </div>
              <div id="gss-results-msg" class="sb-r-lbl" style="display: none;" >Google Site Search</div>
              <div id="gss-results-section" class="sb-r-res" style="display:none">
              </div>
              <input style="display:none" id="gss-hidden-input" />
            </div>
            </xsl:if>
          </div>
          </div>
          <div class="col" id="left-side-container">
            <xsl:call-template name="render_main_results">
              <xsl:with-param name="query" select="$query"/>
            </xsl:call-template>  
          </div>

  </xsl:when>
  <xsl:otherwise>
    <xsl:call-template name="render_main_results">
      <xsl:with-param name="query" select="$query"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>

<!-- *** Filter note (if needed) *** -->
<xsl:if test="(RES/FI) and (not(RES/NB/NU))">
  <p>
    <i>
    In order to show you the most relevant results, we have omitted some entries very similar to the <xsl:value-of select="RES/@EN"/> already displayed.<br/>If you like, you can <a href="{$filter_url}0">repeat the search with the omitted results included</a>.
    </i>
  </p>
</xsl:if>
  <!-- *** output results details *** -->
  <xsl:if test="$show_res_clusters = '1'">
    <xsl:call-template name="cluster_results"/>
  </xsl:if>
<!-- *** Add bottom navigation *** -->
<div id="bottom-navigation" class="bottom-nav clearfix">
  <xsl:call-template name="gen_bottom_navigation" />
</div>

<!-- *** Bottom search box *** -->
<div id="bottom-search-box">
  <xsl:if test="$show_bottom_search_box != '0' and RES">
    <xsl:call-template name="bottom_search_box"/>
  </xsl:if>
</div>

<!-- *** Load the JSAPI library if displaying GSS results is enabled. -->
<xsl:if test="$show_gss_results = '1'">
  <script src="https://www.google.com/jsapi" type="text/javascript"></script>
  <script type="text/javascript">
    var GSS_JS_API_LOADED = false;
    /**
     * If you want to use a different Site Search theme you can specify the
     * same through {style: THEME_CONSTANT} property passed as the third
     * parameter to google.load call below. For example:
     * google.load('search', '1', {style: google.loader.themes.ESPRESSO})
     * You can refer API documentation here:
     * http://code.google.com/apis/ajaxsearch/documentation/customsearch/#_themes
     * Optionally, you can override the default stylesheet via custom CSS or
     * customize existing themes via "Look and Feel" option in the control
     * panel.
     */
    google.load('search', '1');
    google.setOnLoadCallback(function(){GSS_JS_API_LOADED = true;});
  </script>
</xsl:if>

<!-- *** Load the Translation JS library, if enabled *** -->
<xsl:if test="$show_translation = '1' and $only_apps != '1'">
  <xsl:variable name="result_contents">
    <xsl:for-each select="/GSP/RES/R">{'id':<xsl:value-of select="@N"/>,'lang':'<xsl:value-of select="LANG"/>'},</xsl:for-each>
  </xsl:variable>
  <xsl:variable name="res_count" select="count(/GSP/RES/R)"/>
  <xsl:variable name="user_lang" select="/GSP/PARAM[@name='ulang']/@value" />
  <xsl:if test="$render_dynamic_navigation != '1'">
    <script src="{$gsa_resource_root_path_prefix}/translation_compiled.js"
        type="text/javascript"></script>
  </xsl:if>
  <script type="text/javascript">
    var translationManager = new gsa.translation.TranslationManager();
    translationManager.initTranslation(<xsl:value-of select="$res_count" />,
        [<xsl:value-of select="substring($result_contents,
        1,string-length($result_contents)-1)" />],
        '<xsl:value-of select="$user_lang"/>');

    function createSectionalElement() {
      new google.translate.SectionalElement({
       sectionalNodeClassName: 'goog-trans-section',
       controlNodeClassName: 'goog-trans-control',
       background: '#ffffff',
       useSecureConnection: true,
       key: '<xsl:value-of select="$translate_key"/>',
       relate: 'id'
      }, 'goog-trans-all');
    }
  </script>
  <script src="https://translate.google.com/translate_a/element.js?cb=createSectionalElement&amp;ug=section&amp;hl={$user_lang}"></script>
</xsl:if>

<!-- *** Load resources for showing document previews, if enabled *** -->
<xsl:if test="$show_document_previews = '1'">
  <xsl:call-template name="populate_previewer_i18n_array"/>
  <script src="{$gsa_resource_root_path_prefix}/dpsjsclient/dps.min.js"
      type="text/javascript"></script>
  <script src="{$gsa_resource_root_path_prefix}/json2.js"
      type="text/javascript"></script>
  <script src="{$scu_template_js_path}/SCUlibs/previewer.js"
      type="text/javascript"></script>
  <xsl:if test="/GSP/PREVIEWS">
    <script type="text/javascript">
      <xsl:value-of select="/GSP/PREVIEWS"/>
    </script>
  </xsl:if>
  <link rel="stylesheet"
    href="{$gsa_resource_root_path_prefix}/dpsjsclient/dps-floating-viewer.css"
    type="text/css">
  </link>
  <xsl:if test="$is_embedded_mode = '1'">
    <script type="text/javascript">
      if (window['DPS']) {
        DPS.forwardingProxy =
            '<xsl:value-of select="$embedded_mode_resource_root_path_prefix" />';
        <xsl:if test="$embedded_mode_dps_viewer_host != ''">
        <xsl:variable name="embedded_mode_dps_viewer_host_to_use"
          select="if (starts-with($embedded_mode_dps_viewer_host, 'http://'))
                  then
                     $embedded_mode_dps_viewer_host
                  else
                     concat('http://', $embedded_mode_dps_viewer_host)" />
        // Disable the full preview mode in SharePoint embedded mode.
        DPS.onPageClick = function() { return false; };
        </xsl:if>
      }
    </script>
    <style type="text/css">
      div.floating-viewer-header .controls {
        background-image: url("<xsl:value-of select="$embedded_mode_resource_root_path_prefix"/>/dpsjsclient/buttons.png");
      }
      div.result-item-hover span.toggle-preview {
        background-image: url("<xsl:value-of select="$embedded_mode_resource_root_path_prefix"/>/preview_on.png") !important;
      }
      body.previews-enabled span.toggle-preview {
        background-image: url("<xsl:value-of select="$embedded_mode_resource_root_path_prefix"/>/preview_off.png");
      }
    </style>
  </xsl:if>
</xsl:if>
</xsl:template>

<xsl:template name="render_main_results">
<xsl:param name="query"/>
<xsl:variable name="main_results_class">
  <xsl:choose>
    <xsl:when test="$render_dynamic_navigation = '1'">main-results</xsl:when>
    <xsl:otherwise>main-results-without-dn</xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<div class="{$main_results_class}">
  <!-- for keymatch results -->
  <xsl:if test="$show_keymatch != '0'">
    <xsl:apply-templates select="/GSP/GM"/>
  </xsl:if>

  <!-- Experty Search - render the expert search results if expanded
       mode is configured for the current frontend. -->
  <xsl:choose>
    <xsl:when test="$show_expert_search_expanded_results = '1'">
      <xsl:if test="$render_dynamic_navigation != '1'">
        <xsl:call-template name="back_to_widget_view_frontend_link">
          <xsl:with-param name="src_prefix"
              select="concat($gsa_search_root_path_prefix, '?')" />
          <xsl:with-param name="msg_back_to_main_results_action"
              select="$msg_back_to_main_results_action" />
        </xsl:call-template>
      </xsl:if>
      <xsl:call-template name="render_expert_search_results">
        <xsl:with-param name="src_prefix"
            select="concat($gsa_search_root_path_prefix, '?')" />
        <xsl:with-param name="current_search_query_args"
            select="$search_url" />
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:apply-templates select="RES/R">
        <xsl:with-param name="query" select="$query"/>
      </xsl:apply-templates>
    </xsl:otherwise>
  </xsl:choose>
</div>
</xsl:template>

<!-- **********************************************************************
Stopwords suggestions in result page (do not customize)
   ********************************************************************** -->
<xsl:template name="stopwords">
<xsl:variable name="stopwords_suggestions1">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="'/help/basics.html#stopwords'"/>
    <xsl:with-param name="replace" select="'user_help.html#stop'"/>
    <xsl:with-param name="string" select="/GSP/CT"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="stopwords_suggestions">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="'/help/basics.html'"/>
    <xsl:with-param name="replace" select="'user_help.html'"/>
    <xsl:with-param name="string" select="$stopwords_suggestions1"/>
  </xsl:call-template>
</xsl:variable>

<xsl:if test="/GSP/CT">
  <font size="-1" color="gray">
    <xsl:value-of disable-output-escaping="yes"
      select="$stopwords_suggestions"/>
  </font>
</xsl:if>
</xsl:template>


<!-- **********************************************************************
Spelling suggestions in result page (do not customize)
   ********************************************************************** -->
<xsl:template name="spelling">
<xsl:if test="/GSP/Spelling/Suggestion">
  <p id="spell-suggest"><span class="p"><xsl:value-of select="$spelling_text"/>
       <xsl:call-template name="nbsp"/>
     </span>
  <xsl:variable name="apps_param">
    <xsl:choose>
      <xsl:when test="/GSP/PARAM[@name='exclude_apps']">
        <xsl:text disable-output-escaping='yes'>&amp;exclude_apps=</xsl:text>
        <xsl:value-of select="/GSP/PARAM[@name='exclude_apps']/@original_value" />
      </xsl:when>
      <xsl:when test="/GSP/PARAM[@name='only_apps']">
        <xsl:text disable-output-escaping='yes'>&amp;only_apps=</xsl:text>
        <xsl:value-of select="/GSP/PARAM[@name='only_apps']/@original_value" />
      </xsl:when>
    </xsl:choose>
  </xsl:variable>
  <a ctype="spell"
    href="{$gsa_search_root_path_prefix}?q={/GSP/Spelling/Suggestion[1]/@qe}&amp;spell=1&amp;{$synonym_url}{$apps_param}">
    <xsl:value-of disable-output-escaping="yes" select="/GSP/Spelling/Suggestion[1]"/>
  </a>
  </p>
</xsl:if>
</xsl:template>


<!-- **********************************************************************
Synonym suggestions in result page (do not customize)
   ********************************************************************** -->
<xsl:template name="synonyms">
<xsl:if test="/GSP/Synonyms/OneSynonym">
  <p><span class="p"><font color="{$synonyms_text_color}">
       <xsl:value-of select="$synonyms_text"/>
       <xsl:call-template name="nbsp"/>
     </font></span>
  <xsl:for-each select="/GSP/Synonyms/OneSynonym">
    <a ctype="synonym" href="{$gsa_search_root_path_prefix}?q={@q}&amp;{$synonym_url}">
      <xsl:value-of disable-output-escaping="yes" select="."/>
    </a><xsl:text> </xsl:text>
  </xsl:for-each>
  </p>
</xsl:if>
</xsl:template>


<!-- **********************************************************************
Truncation functions (do not customize)
   ********************************************************************** -->
<xsl:template name="truncate_url">
<xsl:param name="t_url"/>

<xsl:choose>
  <xsl:when test="string-length($t_url) &lt; $truncate_result_url_length">
    <xsl:value-of select="$t_url"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:variable name="first" select="substring-before($t_url, '/')"/>
    <xsl:variable name="last">
            <xsl:call-template name="truncate_find_last_token">
              <xsl:with-param name="t_url" select="$t_url"/>
            </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="path_limit" select="$truncate_result_url_length - (string-length($first) + string-length($last) + 1)"/>

    <xsl:choose>
            <xsl:when test="$path_limit &lt;= 0">
              <xsl:value-of select="concat(substring($t_url, 1, $truncate_result_url_length), '...')"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:variable name="chopped_path">
                <xsl:call-template name="truncate_chop_path">
                  <xsl:with-param name="path" select="substring($t_url, string-length($first) + 2, string-length($t_url) - (string-length($first) + string-length($last) + 1))"/>
                  <xsl:with-param name="path_limit" select="$path_limit"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:value-of select="concat($first, '/.../', $chopped_path, $last)"/>
            </xsl:otherwise>
    </xsl:choose>
  </xsl:otherwise>
</xsl:choose>

</xsl:template>

<xsl:template name="truncate_find_last_token">
<xsl:param name="t_url"/>

<xsl:choose>
  <xsl:when test="contains($t_url, '/')">
    <xsl:call-template name="truncate_find_last_token">
          <xsl:with-param name="t_url" select="substring-after($t_url, '/')"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
          <xsl:value-of select="$t_url"/>
  </xsl:otherwise>
</xsl:choose>

</xsl:template>

<xsl:template name="truncate_chop_path">
<xsl:param name="path"/>
<xsl:param name="path_limit"/>

<xsl:choose>
  <xsl:when test="string-length($path) &lt;= $path_limit">
    <xsl:value-of select="$path"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:call-template name="truncate_chop_path">
      <xsl:with-param name="path" select="substring-after($path, '/')"/>
      <xsl:with-param name="path_limit" select="$path_limit"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>

</xsl:template>


<!-- **********************************************************************
Google Apps (do not customize)
   ********************************************************************** -->
<xsl:variable
name="sites_icon"
select="'https://www.google.com/sites/images/sites_favicon.ico'"/>
<xsl:variable
name="docs_icon"
select="'https://docs.google.com/images/doclist/icon_doc.gif'"/>
<xsl:variable
name="spreadsheets_icon"
select="'https://docs.google.com/images/doclist/icon_spread.gif'"/>
<xsl:variable
name="presentations_icon"
select="'https://docs.google.com/images/doclist/icon_pres.gif'"/>
<xsl:variable
name="pdf_icon"
select="'https://docs.google.com/images/doclist/icon_6_pdf.gif'"/>
<xsl:variable
name="drawing_icon"
select="'https://docs.google.com/images/doclist/icon_6_drawing.png'"/>
<xsl:variable
name="email_icon"
select="'https://ssl.gstatic.com/ui/v1/icons/mail/images/favicon.ico'"/>

<!-- **********************************************************************
A single result (do not customize)
   ********************************************************************** -->
<xsl:template match="R">
<xsl:param name="query"/>

<xsl:variable name="protocol"     select="substring-before(U, '://')"/>
<xsl:variable name="temp_url"     select="substring-after(U, '://')"/>
<xsl:variable name="display_url1" select="substring-after(UD, '://')"/>
<xsl:variable name="escaped_url"  select="substring-after(UE, '://')"/>

<xsl:variable name="display_url2">
  <xsl:choose>
    <xsl:when test="$display_url1">
      <xsl:value-of select="$display_url1"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$temp_url"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="display_url">
  <xsl:choose>
    <xsl:when test="$protocol='unc'">
      <xsl:call-template name="convert_unc">
        <xsl:with-param name="string" select="$display_url2"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$display_url2"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="stripped_url">
  <xsl:choose>
    <xsl:when test="$truncate_result_urls != '0'">
              <xsl:call-template name="truncate_url">
                <xsl:with-param name="t_url" select="$display_url"/>
              </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
          <xsl:value-of select="$display_url"/>
        </xsl:otherwise>
      </xsl:choose>
</xsl:variable>

<xsl:variable name="crowded_url" select="HN/@U"/>
<xsl:variable name="crowded_display_url1" select="HN"/>
<xsl:variable name="crowded_display_url">
  <xsl:choose>
    <xsl:when test="$protocol='unc'">
      <xsl:call-template name="convert_unc">
        <xsl:with-param name="string" select="substring-after($crowded_display_url1,'://')"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$crowded_display_url1"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="lower" select="'abcdefghijklmnopqrstuvwxyz'"/>
<xsl:variable name="upper" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>

<xsl:variable name="url_indexed" select="not(starts-with($temp_url, 'noindex!/'))"/>

<!-- *** Indent as required (only supports 2 levels) *** -->
<xsl:if test="@L='2'">
  <xsl:text disable-output-escaping="yes">&lt;blockquote class=&quot;g&quot;&gt;</xsl:text>
</xsl:if>

<!-- *** Result Header *** -->
<p class="g">

<xsl:variable name="apps_domain">
  <xsl:if test="starts-with($stripped_url, 'sites.google.com/a/') or
                starts-with($stripped_url, 'docs.google.com/a/') or
                starts-with($stripped_url, 'spreadsheets.google.com/a/')">
    <xsl:value-of
      select="substring-before(substring-after($stripped_url, '/a/'), '/')"/>
  </xsl:if>
</xsl:variable>

<!-- *** Google Sites icon *** -->
<xsl:if test="starts-with($stripped_url, 'sites.google.com/')">
  <img src="{$sites_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google Docs icon *** -->
<xsl:if test="starts-with($stripped_url, concat('docs.google.com/a/', $apps_domain, '/View?')) or
              RF[@NAME='type']/@VALUE='document'">
  <img src="{$docs_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google Spreadsheets icon *** -->
<xsl:if test="starts-with($stripped_url, 'spreadsheets.google.com/') or
               RF[@NAME='type']/@VALUE='spreadsheet'">
  <img src="{$spreadsheets_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google Presentations icon *** -->
<!-- TODO(timg): remove once Docs eliminates SimplePresentaionView URLs -->
<xsl:if test="starts-with($stripped_url,
                          concat('docs.google.com/a/', $apps_domain, '/SimplePresentationView?')) or
              starts-with($stripped_url,
                          concat('docs.google.com/a/', $apps_domain, '/PresentationView?')) or
              RF[@NAME='type']/@VALUE='presentation'">
  <img src="{$presentations_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google PDF viewer icon *** -->
<xsl:if test="RF[@NAME='type']/@VALUE='pdf'">
  <img src="{$pdf_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google Drawing icon *** -->
<xsl:if test="RF[@NAME='type']/@VALUE='drawing'">
  <img src="{$drawing_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** GMail icon *** -->
<xsl:if test="starts-with($stripped_url, 'mail.google.com') or
              RF[@NAME='type']/@VALUE='mail'">
  <img src="{$email_icon}" alt="" height="16" width="16"/>&#xA0;
</xsl:if>

<!-- *** Translation button -->
<xsl:variable name="res_num" select="@N"/>
<xsl:if test="$show_translation = '1' and $only_apps != '1'">
  <span class="trns-span" id="sec_trns_elem_span_{$res_num}"></span>
</xsl:if>

<!-- *** Result Title (including PDF tag and hyperlink) *** -->
<xsl:if test="$show_res_title != '0'">
  <span class="mime"><strong>
  <xsl:choose>
    <xsl:when test="@MIME='text/html' or @MIME='' or not(@MIME)"></xsl:when>
    <xsl:when test="@MIME='text/plain'">[TEXT]</xsl:when>
    <xsl:when test="@MIME='application/rtf'">[RTF]</xsl:when>
    <xsl:when test="@MIME='application/pdf'">[PDF]</xsl:when>
    <xsl:when test="@MIME='application/postscript'">[PS]</xsl:when>
    <xsl:when test="@MIME='application/vnd.ms-powerpoint' or @MIME='application/vnd.openxmlformats-officedocument.presentationml.presentation'">[MS POWERPOINT]</xsl:when>
    <xsl:when test="@MIME='application/vnd.ms-excel' or @MIME='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'">[MS EXCEL]</xsl:when>
    <xsl:when test="@MIME='application/msword' or @MIME='application/vnd.openxmlformats-officedocument.wordprocessingml.document'">[MS WORD]</xsl:when>
    <xsl:otherwise>
      <xsl:variable name="extension">
        <xsl:call-template name="last_substring_after">
          <xsl:with-param name="string" select="substring-after(
                                                $temp_url,
                                                '/')"/>
          <xsl:with-param name="separator" select="'.'"/>
          <xsl:with-param name="fallback" select="'UNKNOWN'"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:if test="string-length($extension) &lt;= 5">
        [<xsl:value-of select="translate($extension,$lower,$upper)"/>]
      </xsl:if>
    </xsl:otherwise>
  </xsl:choose>
  </strong></span>
  <xsl:text> </xsl:text>

  <xsl:variable name="link"
   select="$url_indexed and not(starts-with(U, $googleconnector_protocol))"/>

  <xsl:if test="$link">

    <xsl:text disable-output-escaping='yes'>&lt;a 
          ctype="c"
    </xsl:text>
          rank=&quot;<xsl:value-of select="position()"/>&quot;
    <xsl:if test="$skin_class != 'skinned'">
      <xsl:text disable-output-escaping='yes'> target="_parent" </xsl:text>
    </xsl:if>
    <xsl:text disable-output-escaping='yes'>
    <!-- has it been called with a potential to be iframed? if so set a base to _parent -->
          href="</xsl:text>

    <xsl:choose>
      <xsl:when test="starts-with(U, $dbconnector_protocol)">
        <xsl:variable name="cache_encoding">
          <xsl:choose>
            <xsl:when test="'' != HAS/C/@ENC"><xsl:value-of select="HAS/C/@ENC"/></xsl:when>
            <xsl:otherwise>UTF-8</xsl:otherwise>
          </xsl:choose>
          </xsl:variable><xsl:value-of select="$gsa_search_root_path_prefix"/>?q=cache:<xsl:value-of select="HAS/C/@CID"/>:<xsl:value-of select="$stripped_url"/>+<xsl:value-of select="$stripped_search_query"/>&amp;<xsl:value-of select="$base_url"/>&amp;oe=<xsl:value-of select="$cache_encoding"/>
      </xsl:when>

      <xsl:when test="starts-with(U, $db_url_protocol)">
        <xsl:value-of disable-output-escaping='yes'
                      select="concat('db/', $temp_url)"/>
      </xsl:when>
      <!-- *** URI for smb or NFS must be escaped because it appears in the URI query *** -->
      <xsl:when test="$protocol='nfs' or $protocol='smb'">
        <xsl:value-of disable-output-escaping='yes'
                      select="concat($protocol,'/',$temp_url)"/>
      </xsl:when>
      <xsl:when test="$protocol='unc'">
        <xsl:value-of disable-output-escaping='yes' select="concat('file://', $display_url2)"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of disable-output-escaping='yes' select="U"/>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:text disable-output-escaping='yes'>"&gt;</xsl:text>
  </xsl:if>
  <span id="title_{$res_num}" class="l">
  <xsl:choose>
    <xsl:when test="T">
      <span class= "goog-trans-section l" transId="gadget_{$res_num}">
        <xsl:call-template name="reformat_keyword">
          <xsl:with-param name="orig_string" select="T"/>
        </xsl:call-template>
      </span>
    </xsl:when>
    <xsl:otherwise><xsl:value-of select="$stripped_url"/></xsl:otherwise>
  </xsl:choose>
  </span>
  <xsl:if test="$link">
      <xsl:text disable-output-escaping='yes'>&lt;/a&gt;</xsl:text>
  </xsl:if>
</xsl:if>


<!-- *** Snippet Box *** -->
<div class="wrapper">
  <div class="gsa-row">
    <div class="col s">
              <xsl:if test="$show_res_snippet != '0' and string-length(S) and
                    $only_apps != '1'">
        <span id="snippet_{$res_num}" class= "goog-trans-section snippet-details" transId="gadget_{$res_num}">
          <xsl:call-template name="reformat_keyword">
            <xsl:with-param name="orig_string" select="S"/>
          </xsl:call-template>
        </span>
      </xsl:if>

      <!-- *** Meta tags *** -->
      <xsl:if test="$show_meta_tags != '0' and $only_apps != '1'">
        <xsl:apply-templates select="MT"/>
      </xsl:if>

      <xsl:if test="$only_apps != '1' and
                    ($show_res_snippet != '0' and string-length(S)) or
                    ($show_meta_tags != '0' and MT[(@N != '') or (@V != '')])">
      <br/>
      </xsl:if>

      <!-- *** URL *** -->
      <xsl:if test="$only_apps != '1' or
                    ($only_apps = '1' and $show_apps_segmented_ui != '1')">
      <span class="index-details">
        <xsl:choose>
          <xsl:when test="not($url_indexed)">
            <xsl:if test="($show_res_size!='0') or
                          ($show_res_date!='0') or
                          ($show_res_cache!='0')">
              <xsl:text>Not Indexed:</xsl:text>
              <xsl:value-of select="$stripped_url"/>:
            </xsl:if>
          </xsl:when>
          <xsl:otherwise>
            <xsl:if test="$show_res_url != '0'">
              <xsl:value-of select="$stripped_url"/>
            </xsl:if>
          </xsl:otherwise>
        </xsl:choose>
      </span>
      </xsl:if>

      <!-- *** Miscellaneous (- size - date - cache) *** -->
      <xsl:if test="$url_indexed">
      <xsl:choose>
        <xsl:when test="'' != HAS/C/@ENC">
         <xsl:apply-templates select="HAS/C">
                       <xsl:with-param name="stripped_url" select="$stripped_url"/>
                       <xsl:with-param name="escaped_url" select="$escaped_url"/>
                       <xsl:with-param name="query" select="$query"/>
                       <xsl:with-param name="mime" select="@MIME"/>
                       <xsl:with-param name="date" select="FS[@NAME='date']/@VALUE"/>
                       <xsl:with-param name="result_num" select="$res_num"/>
         </xsl:apply-templates>
        </xsl:when>
        <xsl:otherwise>
        <xsl:call-template name="showdate">
            <xsl:with-param name="date" select="FS[@NAME='date']/@VALUE"/>
            <xsl:with-param name="escaped_url" select="$escaped_url"/>
        </xsl:call-template>
        </xsl:otherwise>
        </xsl:choose>
      </xsl:if>

      <!-- *** Link to more links from this site *** -->
      <xsl:if test="HN">
        <br/>
        <xsl:choose>
          <xsl:when test="HN/@MDT != ''">
            <xsl:variable name="crowded_metatag" select="HN/@MDT"/>
            <xsl:variable name="crowded_metavalue" select="HN/@MDV"/>
            <xsl:variable name="crowded_matchtype" select="HN/@MCT"/>

            <!-- *** search_url_with_metadata *** -->
            <xsl:variable name="search_url_with_metadata">
              <xsl:for-each
                  select="/GSP/PARAM[(@name != 'start') and
                                     (@name != $embedded_mode_root_path_param) and
                                     (@name != $embedded_mode_resource_root_path_param) and
                                     (@name != $embedded_mode_disable_style) and
                                     (@name != 'swrnum') and
                                     (@name != 'expertsearchasync') and
                                     (@name != 'epoch' or $is_test_search != '') and
                                     not(starts-with(@name, 'metabased_'))]">
                <xsl:choose>
                  <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
                    <!-- do nothing to remove 'ip' from the URL -->
                  </xsl:when>
                  <xsl:when test="@name = 'q'">
                    <xsl:value-of select="@name"/>
                    <xsl:text>=</xsl:text>
                    <xsl:value-of select="@original_value"/>
                    <xsl:text>+inmeta:</xsl:text>
                    <xsl:call-template name="term-escape">
                      <xsl:with-param name="val" select="$crowded_metatag"/>
                    </xsl:call-template>
                    <xsl:choose>
                      <xsl:when test="$crowded_matchtype = 'inexact'">
                        <xsl:text>~</xsl:text>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>=</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="term-escape">
                      <xsl:with-param name="val" select="$crowded_metavalue"/>
                    </xsl:call-template>
                    <xsl:if test="$crowded_matchtype = 'wildcard'">
                      <xsl:text>*</xsl:text>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="@name = 'only_apps' and $show_apps_segmented_ui = '1'">
                    <xsl:value-of select="'exclude_apps=1'" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
                    <xsl:value-of select="@original_value"/>
                  </xsl:otherwise>
                </xsl:choose>
                <xsl:if test="position() != last()">
                  <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
                </xsl:if>
              </xsl:for-each>
            </xsl:variable>

            <!-- Show "More results" message depending on the type of metadata match-->
            <xsl:variable name="match_type_msg">
              <xsl:choose>
                <xsl:when test="$crowded_matchtype = 'inexact'">
                  where metatag <xsl:value-of select="$crowded_metatag"/> contains <xsl:value-of select="$crowded_metavalue"/>
                </xsl:when>
                <xsl:otherwise> <!-- Exact match -->
                  that exactly contains metadata <xsl:value-of select="$crowded_metatag"/>=<xsl:value-of select="$crowded_metavalue"/>
                  <xsl:if test = "$crowded_matchtype = 'wildcard'">
                    <xsl:text>*</xsl:text>
                  </xsl:if>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            [
              <a ctype="sitesearch" class="f" href="{$gsa_search_root_path_prefix}?as_sitesearch={$crowded_url}&amp;{$search_url_with_metadata}">
                More results from <xsl:value-of select="$crowded_display_url"/>
                <xsl:value-of select="$match_type_msg" />
              </a>
            ]

          </xsl:when>
          <xsl:otherwise>
            [<a ctype="sitesearch" class="f" href="{$gsa_search_root_path_prefix}?as_sitesearch={$crowded_url}&amp;{
                $search_url}">More results from <xsl:value-of select="$crowded_display_url"/></a>
            ]
          </xsl:otherwise>
        </xsl:choose>
      <!-- *** Link to aggregated results from database source *** -->
      <xsl:if test="starts-with($crowded_url, $db_url_protocol)">
      [
      <a ctype="db" class="f" href="dbaggr?sitesearch={$crowded_url}&amp;{
        $search_url}&amp;filter=0">View all data</a>
          ]
        </xsl:if>
      </xsl:if>


      <!-- *** Result Footer *** -->
    </div>
  </div>
</div>
</p>

<!-- *** End indenting as required (only supports 2 levels) *** -->
<xsl:if test="@L='2'">
  <xsl:text disable-output-escaping="yes">&lt;/blockquote&gt;</xsl:text>
</xsl:if>

</xsl:template>

<!-- **********************************************************************
Meta tag values within a result (do not customize)
   ********************************************************************** -->
<xsl:template match="MT">
<br/>
<span class="f"><xsl:value-of select="@N"/>: </span><xsl:value-of select="@V"/>
</xsl:template>

<!-- **********************************************************************
A single keymatch result (do not customize)
   ********************************************************************** -->
<xsl:template match="GM">
<p>
  <div class="wrapper keymatch">
    <div class="gsa-row">
      <div class="col">
        <a ctype="keymatch" href="{GL}">
          <xsl:value-of select="substring-before(GD,'#')"/>
        </a>
        <span class="keymatch-desc"><xsl:value-of select="substring-after(GD,'#')"/></span>
        <font size="-1" color="{$res_url_color}">
          <span class="a">
             <xsl:value-of select="GL"/>
          </span>
        </font>
      </div>
    </div>
  </div>
</p>
</xsl:template>


<!-- **********************************************************************
Variables for reformatting keyword-match display (do not customize)
   ********************************************************************** -->
<xsl:variable name="keyword_orig_start" select="'&lt;b&gt;'"/>
<xsl:variable name="keyword_orig_end" select="'&lt;/b&gt;'"/>

<xsl:variable name="keyword_reformat_start">
<xsl:if test="$res_keyword_format">
  <xsl:text>&lt;</xsl:text>
  <xsl:value-of select="$res_keyword_format"/>
  <xsl:text>&gt;</xsl:text>
</xsl:if>
<xsl:if test="($res_keyword_size) or ($res_keyword_color)">
<xsl:text>&lt;font</xsl:text>
<xsl:if test="$res_keyword_size">
  <xsl:text> size="</xsl:text>
  <xsl:value-of select="$res_keyword_size"/>
  <xsl:text>"</xsl:text>
</xsl:if>
<xsl:if test="$res_keyword_color">
  <xsl:text> color="</xsl:text>
  <xsl:value-of select="$res_keyword_color"/>
  <xsl:text>"</xsl:text>
</xsl:if>
<xsl:text>&gt;</xsl:text>
</xsl:if>
</xsl:variable>

<xsl:variable name="keyword_reformat_end">
<xsl:if test="($res_keyword_size) or ($res_keyword_color)">
  <xsl:text>&lt;/font&gt;</xsl:text>
</xsl:if>
<xsl:if test="$res_keyword_format">
  <xsl:text>&lt;/</xsl:text>
  <xsl:value-of select="$res_keyword_format"/>
  <xsl:text>&gt;</xsl:text>
</xsl:if>
</xsl:variable>

<!-- **********************************************************************
Reformat the keyword match display in a title/snippet string
   (do not customize)
   ********************************************************************** -->
<xsl:template name="reformat_keyword">
<xsl:param name="orig_string"/>

<xsl:variable name="reformatted_1">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="$keyword_orig_start"/>
    <xsl:with-param name="replace" select="$keyword_reformat_start"/>
    <xsl:with-param name="string" select="$orig_string"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="reformatted_2">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="$keyword_orig_end"/>
    <xsl:with-param name="replace" select="$keyword_reformat_end"/>
    <xsl:with-param name="string" select="$reformatted_1"/>
  </xsl:call-template>
</xsl:variable>

<xsl:value-of disable-output-escaping='yes' select="$reformatted_2"/>

</xsl:template>


<!-- **********************************************************************
Helper templates for generating a result item (do not customize)
   ********************************************************************** -->

<!-- *** Miscellaneous: - size - date - cache *** -->
<xsl:template match="C">
  <xsl:param name="stripped_url"/>
  <xsl:param name="escaped_url"/>
  <xsl:param name="query"/>
  <xsl:param name="mime"/>
  <xsl:param name="date"/>
  <xsl:param name="result_num"/>

  <xsl:variable name="docid"><xsl:value-of select="@CID"/></xsl:variable>

  <xsl:if test="$show_res_size != '0'">
  <xsl:if test="not(@SZ='')">
      <span class="index-details">
        <xsl:text> - </xsl:text>
        <xsl:value-of select="@SZ"/>
      </span>
  </xsl:if>
  </xsl:if>

  <xsl:call-template name="showdate">
      <xsl:with-param name="date" select="$date"/>
      <xsl:with-param name="escaped_url" select="$escaped_url"/>
  </xsl:call-template>

  <xsl:if test="$show_res_cache != '0'">
     <span class="index-details">
      <xsl:text> - </xsl:text>
      </span>
      <xsl:variable name="cache_encoding">
        <xsl:choose>
          <xsl:when test="'' != @ENC"><xsl:value-of select="@ENC"/></xsl:when>
          <xsl:otherwise>UTF-8</xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <a ctype="cache" id="cache_link_{$result_num}" class="f"
            href="{$gsa_search_root_path_prefix}?q=cache:{$docid}:{$escaped_url}+{
                  $stripped_search_query}&amp;{$base_url}&amp;oe={$cache_encoding}">
        <xsl:choose>
          <xsl:when test="not($mime)">Cached</xsl:when>
          <xsl:when test="$mime='text/html'">Cached</xsl:when>
          <xsl:when test="$mime='text/plain'">Cached</xsl:when>
          <xsl:otherwise>Text Version</xsl:otherwise>
        </xsl:choose>
      </a>
      <xsl:if test="$show_translation = '1' and $only_apps != '1'">
        <xsl:call-template name="nbsp3"/>
        <a ctype="cache" id="translate_cache_link_{$result_num}" class="f trns-cache-link"
            href="{$gsa_search_root_path_prefix}?q=cache:{$docid}:{$escaped_url}+{
                 $stripped_search_query}&amp;{$base_url}&amp;oe={$cache_encoding}">Translated
        </a>
      </xsl:if>
  </xsl:if>

</xsl:template>

<xsl:template name="showdate">
  <xsl:param name="date"/>
  <xsl:param name="escaped_url"/>

  <xsl:if test="$show_res_date != '0'">
  <xsl:if test="($date != '' and not(contains($escaped_url, 'learn.scu') or contains($escaped_url, 'learn-stage.scu')))">
      <span class="index-details">
      <xsl:text> - </xsl:text>
      <xsl:value-of select="$date"/>
      </span>
  </xsl:if>
  </xsl:if>
</xsl:template>


<!-- **********************************************************************
Google navigation bar in result page (do not customize)
   ********************************************************************** -->
<xsl:template name="google_navigation">
  <xsl:param name="prev"/>
  <xsl:param name="next"/>
  <xsl:param name="view_begin"/>
  <xsl:param name="view_end"/>
  <xsl:param name="guess"/>
  <xsl:param name="navigation_style"/>
  <xsl:param name="dynamic_nav_bar"/>

<!-- *** Override the navigation style to 'simple' type if result estimation
         is not available and the navigation type has been specified
         as 'google'. *** -->
<xsl:variable name="navigation_style_to_use">
  <xsl:choose>
    <xsl:when test="$navigation_style = 'google' and $guess = ''">simple</xsl:when>
    <xsl:otherwise><xsl:value-of select="$navigation_style"/></xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="fontclass">
  <xsl:choose>
    <xsl:when test="$navigation_style_to_use = 'top'
        and $dynamic_nav_bar = '1'">dn-bar-nav</xsl:when>
    <xsl:when test="$navigation_style_to_use = 'top'">s</xsl:when>
    <xsl:otherwise></xsl:otherwise> <!-- changed from 'b' to '' so this can be controlled via CSS more easily -->
  </xsl:choose>
</xsl:variable>

<!-- *** Test to see if we should even show navigation *** -->
<xsl:if test="($prev) or ($next)">

<!-- *** Start Google result navigation bar *** -->

  <xsl:if test="$navigation_style_to_use != 'top'">
    <xsl:text disable-output-escaping="yes">&lt;div class=&quot;n&quot;&gt;</xsl:text>
  </xsl:if>
  <div class="wrapper">
    <div class="gsa-row">
      <!-- *** Show previous navigation, if available *** -->
      <ul class="n-ul">
      <xsl:choose>
        <xsl:when test="$prev">
          <li class="{$fontclass}">
            <a ctype="nav.prev"
               href="{$gsa_search_root_path_prefix}?{$search_url}&amp;start={$view_begin - $num_results - 1}">
            <xsl:if test="$navigation_style_to_use = 'google'">
              <img src="{$gsa_resource_root_path_prefix}/nav_previous.gif" width="68" height="26" alt="Previous" border="0"/>
             </xsl:if>
            <xsl:if test="$navigation_style_to_use = 'top'">
              <xsl:text>&lt;</xsl:text><xsl:call-template name="nbsp"/>
            </xsl:if>
            <xsl:text>Previous</xsl:text>
          </a>
          </li>
        </xsl:when>
      <xsl:otherwise>
        <xsl:if test="$navigation_style_to_use = 'google'">
          <img src="{$gsa_resource_root_path_prefix}/nav_first.png" width="18" height="26" alt="First" border="0"/>
        </xsl:if>
      </xsl:otherwise>
      </xsl:choose>    
      <xsl:if test="($navigation_style_to_use = 'google') or
                    ($navigation_style_to_use = 'link')">
<!-- *** Google result set navigation *** -->
      <xsl:variable name="mod_end">
        <xsl:choose>
          <xsl:when test="$next"><xsl:value-of select="$guess"/></xsl:when>
          <xsl:otherwise><xsl:value-of select="$view_end"/></xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:call-template name="result_nav">
        <xsl:with-param name="start" select="0"/>
        <xsl:with-param name="end" select="$mod_end"/>
        <xsl:with-param name="current_view" select="($view_begin)-1"/>
        <xsl:with-param name="navigation_style" select="$navigation_style_to_use"/>
      </xsl:call-template>
      </xsl:if>

        <!-- *** Show next navigation, if available *** -->
      <xsl:choose>
        <xsl:when test="$next">
          <li class="{$fontclass}">
          <a ctype="nav.next" href="{$gsa_search_root_path_prefix}?{$search_url}&amp;start={$view_begin +
            $num_results - 1}">
            <xsl:if test="$navigation_style_to_use = 'google'">
              <img src="{$gsa_resource_root_path_prefix}/nav_next.png" width="100" height="26" alt="Next" border="0"/>
            </xsl:if>
            <xsl:text>Next</xsl:text>
            <xsl:if test="$navigation_style_to_use = 'top'">
              <xsl:call-template name="nbsp"/><xsl:text>&gt;</xsl:text>
            </xsl:if>
          </a>
          </li>
        </xsl:when>
        <xsl:otherwise>
          <xsl:if test="$navigation_style_to_use = 'google'">
            <img src="{$gsa_resource_root_path_prefix}/nav_last.png" width="46" height="26" alt="Last" border="0"/>
          </xsl:if>
        </xsl:otherwise>
      </xsl:choose>
      </ul>
        <!-- *** End Google result bar *** -->
    </div>
  </div>
  <xsl:if test="$navigation_style_to_use != 'top'">
    <xsl:text disable-output-escaping="yes">&lt;/div&gt;</xsl:text>
  </xsl:if>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Helper templates for generating Google result navigation (do not customize)
 only shows 10 sets up or down from current view
   ********************************************************************** -->
<xsl:template name="result_nav">
<xsl:param name="start" select="'0'"/>
<xsl:param name="end"/>
<xsl:param name="current_view"/>
<xsl:param name="navigation_style"/>

<!-- *** Choose how to show this result set *** -->
<xsl:choose>
  <xsl:when test="($start)&lt;(($current_view)-(10*($num_results)))">
  </xsl:when>
  <xsl:when test="(($current_view)&gt;=($start)) and
                  (($current_view)&lt;(($start)+($num_results)))">
    <li>
      <xsl:if test="$navigation_style = 'google'">
        <img src="{$gsa_resource_root_path_prefix}/nav_current.gif" width="16" height="26" alt="Current"/>
      </xsl:if>
      <span class="i"><xsl:value-of
        select="(($start)div($num_results))+1"/></span>
    </li>
  </xsl:when>
  <xsl:otherwise>
    <li>
      <a ctype="nav.page" href="{$gsa_search_root_path_prefix}?{$search_url}&amp;start={$start}">
      <xsl:if test="$navigation_style = 'google'">
        <img src="{$gsa_resource_root_path_prefix}/nav_page.gif" width="16" height="26" alt="Navigation"
             border="0"/>
      </xsl:if>
      <xsl:value-of select="(($start)div($num_results))+1"/>
      </a>
    </li>
  </xsl:otherwise>
</xsl:choose>

<!-- *** Recursively iterate through result sets to display *** -->
<xsl:if test="((($start)+($num_results))&lt;($end)) and
              ((($start)+($num_results))&lt;(($current_view)+
              (10*($num_results))))">
  <xsl:call-template name="result_nav">
    <xsl:with-param name="start" select="$start+$num_results"/>
    <xsl:with-param name="end" select="$end"/>
    <xsl:with-param name="current_view" select="$current_view"/>
    <xsl:with-param name="navigation_style" select="$navigation_style"/>
  </xsl:call-template>
</xsl:if>

</xsl:template>


<!-- **********************************************************************
Top separation bar (do not customize)
   ********************************************************************** -->
<xsl:template name="top_sep_bar">
<xsl:param name="text"/>
<xsl:param name="show_info"/>
<xsl:param name="time"/>

  <xsl:if test="$show_custom_tabs != '0'">
    <xsl:call-template name="gsa_custom_tabs"/>
  </xsl:if>  

  <div class="wrapper clearfix">
    <div class="gsa-row">
      <div class="col seperator-bar">
         <div class="timing">
         <xsl:if test="$show_info != 0">
          <span class="search-stats">
          <xsl:if test="count(/GSP/RES/R)>0 ">
            <xsl:choose>
              <xsl:when test="(($access = 's' or $access = 'a') and /GSP/RES/M = '')">
                Results <b><xsl:value-of select="RES/@SN"/></b> - <b id="num_results"><xsl:value-of select="RES/@EN"/></b> for <b><xsl:value-of select="$space_normalized_query"/></b>.
              </xsl:when>
              <xsl:otherwise>
                Currently showing <b><xsl:value-of select="RES/@SN"/></b> - <b id="num_results"><xsl:value-of select="RES/@EN"/></b> of about <b><xsl:value-of select="RES/M"/></b> results for <b><xsl:value-of select="$space_normalized_query"/></b>.
              </xsl:otherwise>
            </xsl:choose>
          </xsl:if>
          <xsl:if test="$show_timing_label !=0">
            Search took <span style="font-weight: bold;" id="search_time"><xsl:value-of select="round($time * 100.0) div 100.0"/></span> seconds.
          </xsl:if>
          <xsl:if test="$show_sort_by != '0'">
              <xsl:call-template name="sort_by"/>
          </xsl:if>
          </span>
        </xsl:if>  
         </div>
      </div> 
    </div>
  </div>
  <hr class="z"/>
  <xsl:if test="$choose_sep_bar = 'line'">
    <hr size="1" color="gray"/>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
Analytics script (do not customize)
   ********************************************************************** -->
<xsl:template name="analytics">
<xsl:if test="string-length($analytics_account) != 0">
 <script type="text/javascript" src="{$analytics_script_url}"></script>
 <script type="text/javascript">
   var pageTracker = _gat._getTracker("<xsl:value-of select='$analytics_account'/>");
   pageTracker._trackPageview();
 </script>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Utility function for constructing copyright text (do not customize)
   ********************************************************************** -->
<xsl:template name="copyright">
  <div class="copyright clearfix">
    <span class="powered-by">Powered by Google Search Appliance</span>
  </div>
</xsl:template>


<!-- **********************************************************************
Utility functions for generating html entities
   ********************************************************************** -->
<xsl:template name="nbsp">
<xsl:text disable-output-escaping="yes">&amp;nbsp;</xsl:text>
</xsl:template>
<xsl:template name="nbsp3">
<xsl:call-template name="nbsp"/>
<xsl:call-template name="nbsp"/>
<xsl:call-template name="nbsp"/>
</xsl:template>
<xsl:template name="nbsp4">
<xsl:call-template name="nbsp3"/>
<xsl:call-template name="nbsp"/>
</xsl:template>
<xsl:template name="quot">
<xsl:text disable-output-escaping="yes">&amp;quot;</xsl:text>
</xsl:template>
<xsl:template name="rsaquo">
<dfn><xsl:text disable-output-escaping="yes">&amp;#8250;</xsl:text></dfn>
</xsl:template>
<xsl:template name="endash">
<xsl:text disable-output-escaping="yes">&amp;#8211;</xsl:text>
</xsl:template>
<xsl:template name="copy">
<xsl:text disable-output-escaping="yes">&amp;copy;</xsl:text>
</xsl:template>

<!-- **********************************************************************
Utility functions for generating head elements so that the XSLT processor
won't add a meta tag to the output, since it may specify the wrong
encoding (utf8) in the meta tag.
   ********************************************************************** -->
<xsl:template name="plainHeadStart">
<xsl:text disable-output-escaping="yes">&lt;head&gt;</xsl:text>
<meta name="robots" content="NOINDEX,NOFOLLOW"/>
<xsl:text>
</xsl:text>
</xsl:template>
<xsl:template name="plainHeadEnd">
<xsl:text disable-output-escaping="yes">&lt;/head&gt;</xsl:text>
<xsl:text>
</xsl:text>
</xsl:template>


<!-- **********************************************************************
Utility functions for generating head elements with a meta tag to the output
specifying the character set as requested
   ********************************************************************** -->
<xsl:template name="langHeadStart">
<xsl:if test="$is_embedded_mode != '1'">
<xsl:text disable-output-escaping="yes">&lt;head&gt;</xsl:text>
<meta name="robots" content="NOINDEX,NOFOLLOW"/>
<meta name="viewport" content="width=device-width, target-densitydpi=160dpi, initial-scale=1"/>
<xsl:choose>
  <xsl:when test="PARAM[(@name='oe') and (@value='utf8')]">
    <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='oe') and (@value!='')]">
    <meta http-equiv="content-type" content="text/html; charset={PARAM[@name='oe']/@value}"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-CN')]">
    <meta http-equiv="content-type" content="text/html; charset=GB2312"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-TW')]">
    <meta http-equiv="content-type" content="text/html; charset=Big5"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_cs')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_da')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_nl')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_en')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_et')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_fi')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_fr')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_de')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_el')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-7"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_iw')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-8-I"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_hu')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_is')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_it')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_ja')]">
    <meta http-equiv="content-type" content="text/html; charset=Shift_JIS"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_ko')]">
    <meta http-equiv="content-type" content="text/html; charset=EUC-KR"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_lv')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_lt')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_no')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_pl')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_pt')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_ro')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_ru')]">
    <meta http-equiv="content-type" content="text/html; charset=windows-1251"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_es')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_sv')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:otherwise>
    <meta http-equiv="content-type" content="text/html; charset="/>
  </xsl:otherwise>
</xsl:choose>
</xsl:if>

<!-- UAR v2 - Load the right CSS file for the UAR UI component,
     as required. This should be placed in the head section of the
     document. -->
<xsl:if test="$show_onebox != '0'">
  <xsl:if test="/GSP/ENTOBRESULTS/OBRES/provider = $uar_provider">
  <xsl:choose>
    <xsl:when test="$document_direction = 'rtl'">
      <link rel="stylesheet"
          href="{$gsa_resource_root_path_prefix}/uardesktop_rtl.css"
          type="text/css" />
    </xsl:when>
    <xsl:otherwise>
      <link rel="stylesheet"
          href="{$gsa_resource_root_path_prefix}/uardesktop.css"
          type="text/css" />
    </xsl:otherwise>
  </xsl:choose>
  <!-- Override below styles to change the look and feel of the UAR section by
       adding appropriate CSS style properties. -->
  <style>
    /**
     * Background (default: #f2f7ff) and border-color (default: #ebebeb)
     * property for the UAR section.
     */
    .gsa-uar-container {
    }
    /* Description title color. Default is #555. */
    .gsa-uar-container h2 {
    }
    /* Color of the URL text. Default is #0e774a. */
    .gsa-uar-record cite {
    }
    <xsl:if test="$is_disable_style_in_embedded_mode = '1'">
    .gsa-uar-container {
      background: none;
    }
    .oneboxResults .gsa-uar-url-field, .oneboxResults .gsa-uar-title-field {
      width: 99%;
    }
    </xsl:if>
  </style>
  </xsl:if>
</xsl:if>

<!-- Expert Search - Load the right CSS file for the expert search UI
     component. -->
<xsl:if test="$is_expert_search_configured = '1'">
  <xsl:call-template name="include_expert_search_css">
    <xsl:with-param name="doc_dir" select="$document_direction" />
    <xsl:with-param name="src_prefix" select="$gsa_resource_root_path_prefix" />
  </xsl:call-template>
  
  <xsl:if test="$is_disable_style_in_embedded_mode = '1'">
    <style type="text/css">
      .gsa-exp-container,
      .gsa-exp-header h2,
      .gsa-exp-header a,
      ol.gsa-exp-results li {
        font-size: inherit;
      }
      ol.gsa-exp-pagination a, ol.gsa-exp-pagination span {
        color: inherit;
      }
    </style>
  </xsl:if>
</xsl:if>
<script type="text/javascript">
  /* Returns the root path prefix for full-refresh search requests. */
  function GSA_getSearchRootPathPrefix() {
    return '<xsl:value-of select="$gsa_search_root_path_prefix" />';
  }
  /* Returns the root path prefix for resources. */
  function GSA_getResourceRootPathPrefix() {
    return '<xsl:value-of select="$gsa_resource_root_path_prefix" />';
  }
  /* Checks if the search results is accessed in embedded mode or not. */
  function GSA_isEmbeddedMode() {
    return <xsl:value-of
        select="if ($is_embedded_mode = '1') then 'true' else 'false'" />;
  }
</script>
<xsl:text>
</xsl:text>
</xsl:template>

<xsl:template name="langHeadEnd">
<xsl:if test="$is_embedded_mode != '1'">
<xsl:text disable-output-escaping="yes">&lt;/head&gt;</xsl:text>
</xsl:if>
<xsl:text>
</xsl:text>
</xsl:template>

<!-- *** Generates the <body> section for the search results page. *** -->
<xsl:template name="generate_html_body_for_search_results">
<!-- Import all required JavaScript modules based on enabled features. -->
<xsl:if test="$show_suggest = '1' or $show_res_clusters = '1'">
  <script type="text/javascript"
      src="{$gsa_resource_root_path_prefix}/common.js"></script>
  <script type="text/javascript"
      src="{$gsa_resource_root_path_prefix}/xmlhttp.js"></script>
  <script type="text/javascript"
      src="{$gsa_resource_root_path_prefix}/uri.js"></script>
</xsl:if>
<xsl:if test="$show_res_clusters = '1'">
  <script type="text/javascript"
      src="{$gsa_resource_root_path_prefix}/cluster.js"></script>
</xsl:if>
<!-- Add required JS function calls based on enabled features. -->
<xsl:variable name="ss_load_call">
  <!-- Initialize suggest control. -->
  <xsl:if test="$show_suggest != '0'">
    <xsl:text disable-output-escaping="yes">ss_sf();</xsl:text>
  </xsl:if>
</xsl:variable>
<xsl:variable name="cs_load_call">
  <!-- Initialize results clustering. -->
  <xsl:if test="$show_res_clusters = '1'">
    <xsl:text disable-output-escaping="yes">cs_loadClusters('</xsl:text>
    <xsl:value-of select="$search_url_escaped" />
    <xsl:text disable-output-escaping="yes">', cs_drawClusters);</xsl:text>
  </xsl:if>
</xsl:variable>

<!-- Do not render body tag in embedded mode. -->
<xsl:if test="$is_embedded_mode != '1'">
  <xsl:text disable-output-escaping="yes">&lt;</xsl:text>
  <xsl:text>body class="clearfix" onLoad="resetForms(); fixFileLinks();</xsl:text>
  <xsl:value-of select="$cs_load_call"/>
  <xsl:value-of select="$ss_load_call"/>
  <xsl:text disable-output-escaping="yes">" dir="ltr"&gt;</xsl:text>
  <xsl:text disable-output-escaping="yes">&lt;div id="container" class="schoolpage"&gt;</xsl:text>
  <xsl:call-template name="header_element"/>
  <xsl:call-template name="main_content_wrapper_start"/>
  <xsl:text disable-output-escaping="yes">&lt;div class="main-content"&gt;</xsl:text>
</xsl:if>
<!-- Render search results section. -->
<xsl:call-template name="search_results_body"/>
<!-- Load Suggest script. -->
<xsl:if test="$show_suggest = '1'">
  <xsl:call-template name="gsa_suggest" />
</xsl:if>
<!-- Make required onload JS calls directly when in embedded mode. -->
<xsl:if test="$is_embedded_mode = '1'">
  <script type="text/javascript">
    <xsl:value-of select="$cs_load_call"/>
  </script>
</xsl:if>
<!-- Create the input field element for expert search, if enabled. -->
<xsl:call-template name="include_expert_search_history_input" />
<!-- Initialize side bar if enabled. -->
<xsl:if test="$show_sidebar = '1'">
  <script type="text/javascript">
   initSidebar();
  </script>
</xsl:if>
<xsl:if test="$is_embedded_mode != '1'">
  <xsl:text disable-output-escaping="yes">&lt;/div&gt;</xsl:text>
    <!-- *** Customer's own result page footer *** -->
  <xsl:call-template name="footer_element"/>
  <xsl:call-template name="main_content_wrapper_end"/>
  <xsl:text disable-output-escaping="yes">&lt;/div&gt;</xsl:text>
  <xsl:text disable-output-escaping="yes">&lt;/body&gt;</xsl:text>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Utility functions (do not customize)
   ********************************************************************** -->

<!-- *** Find the substring after the last occurence of a separator *** -->
<xsl:template name="last_substring_after">

<xsl:param name="string"/>
<xsl:param name="separator"/>
<xsl:param name="fallback"/>

<xsl:variable name="newString"
  select="substring-after($string, $separator)"/>

<xsl:choose>
  <xsl:when test="$newString!=''">
    <xsl:call-template name="last_substring_after">
      <xsl:with-param name="string" select="$newString"/>
      <xsl:with-param name="separator" select="$separator"/>
      <xsl:with-param name="fallback" select="$newString"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$fallback"/>
  </xsl:otherwise>
</xsl:choose>

</xsl:template>

<!-- *** Find and replace *** -->
<xsl:template name="replace_string">
<xsl:param name="find"/>
<xsl:param name="replace"/>
<xsl:param name="string"/>
<xsl:choose>
  <xsl:when test="contains($string, $find)">
    <xsl:value-of select="substring-before($string, $find)"/>
    <xsl:value-of select="$replace"/>
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="$find"/>
      <xsl:with-param name="replace" select="$replace"/>
      <xsl:with-param name="string"
        select="substring-after($string, $find)"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$string"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<!-- *** Decode hex encoding *** -->
<xsl:template name="decode_hex">
<xsl:param name="encoded" />

<xsl:variable name="hex" select="'0123456789ABCDEF'" />
<xsl:variable name="ascii"> !"#$%&amp;'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~</xsl:variable>

<xsl:choose>
  <xsl:when test="contains($encoded,'%')">
    <xsl:value-of select="substring-before($encoded,'%')" />
    <xsl:variable name="hexpair" select="translate(substring(substring-after($encoded,'%'),1,2),'abcdef','ABCDEF')" />
    <xsl:variable name="decimal" select="(string-length(substring-before($hex,substring($hexpair,1,1))))*16 + string-length(substring-before($hex,substring($hexpair,2,1)))" />
    <xsl:choose>
      <xsl:when test="$decimal &lt; 127 and $decimal &gt; 31">
        <xsl:value-of select="substring($ascii,$decimal - 31,1)" />
      </xsl:when>
      <xsl:when test="$decimal &gt; 159">
        <xsl:text disable-output-escaping="yes">%</xsl:text>
        <xsl:value-of select="$hexpair" />
      </xsl:when>
      <xsl:otherwise>?</xsl:otherwise>
    </xsl:choose>
    <xsl:call-template name="decode_hex">
      <xsl:with-param name="encoded" select="substring(substring-after($encoded,'%'),3)" />
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$encoded" />
  </xsl:otherwise>
</xsl:choose>

</xsl:template>

<!-- *** Convert UNC *** -->
<xsl:template name="convert_unc">
<xsl:param name="string"/>
<xsl:variable name="slash">/</xsl:variable>
<xsl:variable name="backslash">\</xsl:variable>
<xsl:variable name="escaped_ampersand">&amp;amp;</xsl:variable>
<xsl:variable name="unescaped_ampersand">&amp;</xsl:variable>

<xsl:variable name="converted_1">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find"    select="$slash"/>
    <xsl:with-param name="replace" select="$backslash"/>
    <xsl:with-param name="string"  select="$string"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="converted_2">
  <xsl:call-template name="decode_hex">
    <xsl:with-param name="encoded" select="$converted_1"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="converted_3">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find"    select="$escaped_ampersand"/>
    <xsl:with-param name="replace" select="$unescaped_ampersand"/>
    <xsl:with-param name="string"  select="$converted_2"/>
  </xsl:call-template>
</xsl:variable>

<xsl:value-of disable-output-escaping='yes' select="concat($backslash,$backslash,$converted_3)"/>

</xsl:template>

<!-- **********************************************************************
Display error messages
   ********************************************************************** -->
<xsl:template name="error_page">
<xsl:param name="errorMessage"/>
<xsl:param name="errorDescription"/>

<html>
  <xsl:attribute name="class">
  <xsl:value-of select="$skin_class"/>
  </xsl:attribute>
  <xsl:call-template name="plainHeadStart"/>
    <title><xsl:value-of select="$error_page_title"/></title>
          <xsl:call-template name="style"/>
  <xsl:call-template name="plainHeadEnd"/>
  <body>
    <xsl:attribute name="class">
  <xsl:value-of select="'clearfix'"/>
  </xsl:attribute>
  <xsl:attribute name="dir">ltr</xsl:attribute>
   <div id="container" class="schoolpage">
   <!--HEADER COMPONENTS-->
    <xsl:call-template name="header_element"/>
  <xsl:call-template name="main_content_wrapper_start"/>
    <div class="main-content" role="main">
    <xsl:call-template name="personalization"/>
    <xsl:call-template name="analytics"/>
  <xsl:if test="$show_logo != '0'">
              <table border="0" cellpadding="0" cellspacing="0">
                <tr>
                        <td rowspan="3" valign="top">
                        <xsl:call-template name="logo"/>
                        <xsl:call-template name="nbsp3"/>
                      </td>
                </tr>
              </table>
          </xsl:if>

    <xsl:call-template name="top_sep_bar">
      <xsl:with-param name="text" select="$sep_bar_error_text"/>
              <xsl:with-param name="show_info" select="0"/>
      <xsl:with-param name="time" select="0"/>
    </xsl:call-template>

    <p>
    <table width="99%" border="0" cellpadding="2" cellspacing="0">
      <tr>
        <td><font color="#990000" size="+1">Message:</font></td>
        <td><font color="#990000" size="+1"><xsl:value-of select="$errorMessage"/></font></td>
      </tr>
      <tr>
        <td><font color="#990000">Description:</font></td>
        <td><font color="#990000"><xsl:value-of select="$errorDescription"/></font></td>
      </tr>
      <tr>
        <td><font color="#990000">Details:</font></td>
        <td><font color="#990000"><xsl:copy-of select="/"/></font></td>
      </tr>
    </table>
    </p>

        <hr/>
        <xsl:call-template name="copyright"/>
    </div>
  <xsl:call-template name="footer_element"/>
  <xsl:call-template name="main_content_wrapper_end"/>
  </div>
  </body>
</html>
</xsl:template>


<!-- **********************************************************************
Google Desktop for Enterprise integration templates
   ********************************************************************** -->
<xsl:template name="desktop_tab">

<!-- *** Show the Google tabs *** -->

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.web" href="http://www.google.com/search?q={$qval}">Web</a>
</font>

<xsl:call-template name="nbsp4"/>

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.images"  href="http://images.google.com/images?q={$qval}">Images</a>
</font>

<xsl:call-template name="nbsp4"/>

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.groups" href="http://groups.google.com/groups?q={$qval}">Groups</a>
</font>

<xsl:call-template name="nbsp4"/>

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.news"  href="http://news.google.com/news?q={$qval}">News</a>
</font>

<xsl:call-template name="nbsp4"/>

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.local"  href="http://local.google.com/local?q={$qval}">Local</a>
</font>

<xsl:call-template name="nbsp4"/>

<!-- *** Show the desktop and web tabs *** -->

<xsl:if test="CUSTOM/HOME">
  <xsl:comment>trh2</xsl:comment>
</xsl:if>
<xsl:if test="Q">
  <xsl:comment>trl2</xsl:comment>
</xsl:if>

<!-- *** Show the appliance tab *** -->
<font size="-1"><b><xsl:value-of select="$egds_appliance_tab_label"/></b></font>

</xsl:template>

<xsl:template name="desktop_results">
<xsl:comment>tro2</xsl:comment>
</xsl:template>

<!-- **********************************************************************
OneBox results (if any)
   ********************************************************************** -->
<xsl:template name="onebox">
<xsl:for-each select="/GSP/ENTOBRESULTS">
  <xsl:apply-templates/>
</xsl:for-each>
</xsl:template>

<!-- **********************************************************************
Swallow unmatched elements
   ********************************************************************** -->
<xsl:template match="@*|node()"></xsl:template>

<!-- **********************************************************************
Tabs template
Author: Vinay Joseph (vinay@vinayjoseph.com)
Date: 16th December 2015
Notes: Please be sure to change the site query parameter to match the relevant collections
in a given tab. Also note that the variable frontend has been defined at the top of the stylesheet. 
*************************************************************************** -->
<xsl:template name="gsa_custom_tabs">
  <xsl:variable name="tabs">
    <tabs>
      <tab name="All" col="scu" ctype="All_tab"></tab>
      <tab name="MySCU" col="myscu" ctype="courses_tab"></tab>
      <tab name="Policies" col="policies" ctype="policies_tab"></tab>
      <tab name="Library" col="library" ctype="library_tab"></tab>
      <tab name="People" col="staff_directory" ctype="staff_tab"></tab>
    </tabs>
  </xsl:variable>
<link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/collection_tabs.css"></link>
<div class="container" id="centeredmenu">
  <ul class="search-collection-list desktop"> 
      <xsl:variable name="current_collection" select="/GSP/PARAM[@name='site']/@value" />
      <xsl:for-each select="$tabs/tabs/tab">
          <xsl:variable name="col" select="@col"></xsl:variable>
           <xsl:choose>
            <xsl:when test="$current_collection=$col">
              <li class="search-collection-tab-item {$col}">
                <a href="{$gsa_search_root_path_prefix}?{$custom_tab_url}&amp;site={$col}" ctype="{@ctype}" class="active">                 
                  <xsl:value-of select="@name"></xsl:value-of>
                </a>
              </li>
            </xsl:when>
            <xsl:otherwise>
              <li class="search-collection-tab-item {$col}">
                <a href="{$gsa_search_root_path_prefix}?{$custom_tab_url}&amp;site={$col}" ctype="{@ctype}">
                  <xsl:value-of select="@name"></xsl:value-of> 
                </a>
              </li>
            </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
  </ul>
</div>
</xsl:template>

<!-- SCU XSL FUNCTION -->

</xsl:stylesheet>


<!-- *** END OF STYLESHEET *** -->



              ]]></stylesheet>
              <stylesheet.en><![CDATA[
<!-- *** START OF STYLESHEET *** -->

<!-- **********************************************************************
XSL to format the search output for Google Search Appliance
   ********************************************************************** -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
<xsl:import href="scu_snippets"/>

<!-- **********************************************************************
GSA embedded mode support for websites that wants to display GSA search
experience embedded inside the parent container via  proxying the
request to the GSA. DO NOT EDIT the below part.
*************************************************************************** -->
<!-- Incoming query parameter identifying root path prefix to be used for links
   that should refresh the main page. -->
<xsl:variable name="embedded_mode_root_path_param" select="'emmain'" />
<!-- Incoming query parameter identifying root path prefix to be used for
   resources that should be loaded in isolation e.g. images, CSS, JS,
   AJAX requests etc. over an HTTP connection. -->
<xsl:variable name="embedded_mode_resource_root_path_param"
  select="'emsingleres'" />
<!-- Incoming query parameter for enabling/disabling style for embedded
   mode. -->
<xsl:variable name="embedded_mode_disable_style" select="'emdstyle'" />
<!-- Incoming query parameter specifying the GSA host name to be used for
   documill full preview viewer. -->
<xsl:variable name="embedded_mode_dps_viewer_param" select="'emdvhost'" />
<!-- Root path prefix for full-refresh requests that should be used instead
   of GSA's default "/search" root path prefix. -->
<xsl:variable name="embedded_mode_root_path_prefix"
  select="/GSP/PARAM[@name=$embedded_mode_root_path_param]/@value" />
<!-- Root path prefix for resources (e.g. CSS, images, JavaScript, AJAX requests
   etc.) that should be used instead of GSA's default "/" root path
   prefix. -->
<xsl:variable name="embedded_mode_resource_root_path_prefix"
  select="/GSP/PARAM[@name=$embedded_mode_resource_root_path_param]/@value" />
<!-- The GSA host to be used for documill full preview viewer. -->
<xsl:variable name="embedded_mode_dps_viewer_host"
  select="/GSP/PARAM[@name=$embedded_mode_dps_viewer_param]/@value" />
<!-- Checks if style should be disabled in embedded mode or not. -->
<xsl:variable name="is_disable_style_in_embedded_mode"
select="
if (/GSP/PARAM[@name=$embedded_mode_disable_style]/@value = 'true') then '1'
else '0'" />
<!-- Regex for matching relative path starting with a '/' character
   and not having a following '/' character. -->
<xsl:variable name="relative_path_only_regex">^(/)[^/].*</xsl:variable>
<!-- Checks if the incoming root path prefix arguments are relative paths as
   we don't want to allow absolute paths. -->
<xsl:variable name="invalid_embedded_mode_request" >
<xsl:if test="
    not(matches(
        $embedded_mode_root_path_prefix, $relative_path_only_regex)) or
    not(matches(
        $embedded_mode_resource_root_path_prefix, $relative_path_only_regex))">
  <xsl:value-of select="'1'" />
</xsl:if>
</xsl:variable>
<!-- Flag to signal if current mode is embeddeded or not.
   '1' - yes, '0' - No -->
<xsl:variable name="is_embedded_mode"
  select="if ($embedded_mode_root_path_prefix != '' and
              $invalid_embedded_mode_request != '1') then '1' else '0'" />

<!-- **********************************************************************
Root path prefix variables that should be used for search and static
resources throughout.
********************************************************************** -->
<!-- Root path prefix for search requests that should be used instead of GSA's
   default "/search" root path prefix. -->
<xsl:variable name="gsa_search_root_path_prefix">
<xsl:choose>
  <xsl:when test="$embedded_mode_root_path_prefix != '' and
                  $invalid_embedded_mode_request != '1'">
    <xsl:value-of select="$embedded_mode_root_path_prefix" />
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="'/search'" />
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>
<!-- Root path prefix for resources files (e.g. CSS, images, JavaScript etc.)
   and other HTTP requests that should be processed in isolation
   (e.g. Iframe, AJAX etc.) -->
<xsl:variable name="gsa_resource_root_path_prefix">
<xsl:choose>
  <xsl:when test="$embedded_mode_resource_root_path_prefix != '' and
                  $invalid_embedded_mode_request != '1'">
    <xsl:value-of select="$embedded_mode_resource_root_path_prefix" />
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="''" />
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- SCU Variables -->
<!-- get the environment variables for this front end -->
<xsl:include href="env_variables"/>
<xsl:variable name="app_title">Site Search</xsl:variable>
<!-- Search input placeholder variable -->
<xsl:variable name="q_input_placeholder_text">search site</xsl:variable>

<!-- **********************************************************************
include customer-onebox.xsl, which is auto-generated from the customer's
set of OneBox Module definitions, and in turn invokes either the default
OneBox template, or the customer's:
********************************************************************** -->
<xsl:include href="customer-onebox.xsl"/>

<!--
Expert Search - Include the expert search XSL to get expert search
functionality. Please DO NOT remove this import as template and
variables inside this XSL are being used below. To find all expert search
related changes in this XSL search for "Expert Search" (quotes for clarity)
string.
-->
<xsl:include href="scu_experts"/>

<xsl:output method="html"/>

<!-- **********************************************************************
Logo setup (can be customized)
   - whether to show logo: 0 for FALSE, 1 (or non-zero) for TRUE
   - logo url
   - logo size: '' for default image size
   ********************************************************************** -->
<xsl:variable name="show_logo">0</xsl:variable>
<xsl:variable name="logo_url"><xsl:value-of
  select="$gsa_resource_root_path_prefix" />images/Title_Left.png</xsl:variable>
<xsl:variable name="logo_width">200</xsl:variable>
<xsl:variable name="logo_height">78</xsl:variable>

<!-- **********************************************************************
Global Style variables (can be customized): '' for using browser's default
   ********************************************************************** -->

<xsl:variable name="global_font">arial,sans-serif</xsl:variable>
<xsl:variable name="global_font_size">#000000</xsl:variable>
<xsl:variable name="global_bg_color">#EEF5FF</xsl:variable>
<xsl:variable name="global_text_color">#000000</xsl:variable>
<xsl:variable name="global_link_color">#0000cc</xsl:variable>
<xsl:variable name="global_vlink_color">#551a8b</xsl:variable>
<xsl:variable name="global_alink_color">#ff0000</xsl:variable>


<!-- **********************************************************************
Result page components (can be customized)
   - whether to show a component: 0 for FALSE, non-zero (e.g., 1) for TRUE
   - text and style
   ********************************************************************** -->

<!-- *** choose result page header: '', 'provided', 'mine', or 'both' *** -->
<xsl:variable name="choose_result_page_header">both</xsl:variable>

<!-- *** show custom tabs on the GSA *** -->
<xsl:variable name="show_custom_tabs">1</xsl:variable>

<!-- *** customize provided result page header *** -->
<xsl:variable name="show_swr_link">0</xsl:variable>
<xsl:variable name="swr_search_anchor_text">Search Within Results</xsl:variable>
<xsl:variable name="show_result_page_adv_link">0</xsl:variable>
<xsl:variable name="adv_search_anchor_text">Advanced Search</xsl:variable>
<xsl:variable name="show_result_page_help_link">0</xsl:variable>
<xsl:variable name="search_help_anchor_text">Search Tips</xsl:variable>

<!-- *** search boxes *** -->
<xsl:variable name="show_top_search_box">1</xsl:variable>
<xsl:variable name="show_bottom_search_box">0</xsl:variable>
<xsl:variable name="search_box_size">200</xsl:variable>

<!-- *** choose search button type: 'text' or 'image' *** -->
<xsl:variable name="choose_search_button">image</xsl:variable>
<xsl:variable name="search_button_text"></xsl:variable>
<xsl:variable name="search_button_image_url"><xsl:value-of select="$scu_template_img_path" />/magnifier-grey.png</xsl:variable>
<xsl:variable name="search_collections_xslt"></xsl:variable>

<!-- *** search info bars *** -->
<xsl:variable name="show_search_info">1</xsl:variable>

<!-- *** choose separation bar: 'ltblue', 'blue', 'line', 'nothing' *** -->
<xsl:variable name="choose_sep_bar">ltblue</xsl:variable>
<xsl:variable name="sep_bar_std_text"></xsl:variable>
<xsl:variable name="sep_bar_adv_text">Advanced Search</xsl:variable>
<xsl:variable name="sep_bar_error_text">Error</xsl:variable>

<!-- *** Custom variables created to show or hide elements ***  -->
<xsl:variable name="show_timing_label">0</xsl:variable>

<!-- *** navigation bars: '', 'google', 'link', or 'simple'.
       DO NOT use 'google' as the navigation bar type for secure search
       i.e. when access='a' or access='s', unless corpus estimate is enabled
       for all queries in Serving > Query Settings. Read documentation of
       "secure_bottom_navigation_type" variable below. *** -->
<xsl:variable name="show_top_navigation">0</xsl:variable>
<xsl:variable name="choose_bottom_navigation">link</xsl:variable>
<xsl:variable name="my_nav_align">right</xsl:variable>
<xsl:variable name="my_nav_size">-1</xsl:variable>
<xsl:variable name="my_nav_color">#6f6f6f</xsl:variable>

<!-- ***  navigation bar for secure search: DO NOT change.
   Please keep the navigation type as 'simple' for secure search i.e.
   when access='a' or access='s', unless corpus estimate is enabled
   for all queries in Serving > Query Settings, because otherwise results size
   estimation is not available for generating numbered pagination. *** -->
<xsl:variable name="secure_bottom_navigation_type">simple</xsl:variable>

<!-- *** sort by date/relevance *** -->
<xsl:variable name="show_sort_by">1</xsl:variable>

<!-- *** spelling suggestions *** -->
<xsl:variable name="show_spelling">1</xsl:variable>
<xsl:variable name="spelling_text">Did you mean:</xsl:variable>
<xsl:variable name="spelling_text_color">#cc0000</xsl:variable>

<!-- *** synonyms suggestions *** -->
<xsl:variable name="show_synonyms">1</xsl:variable>
<xsl:variable name="synonyms_text">You could also try:</xsl:variable>
<xsl:variable name="synonyms_text_color">#cc0000</xsl:variable>

<!-- *** keymatch suggestions *** -->
<xsl:variable name="show_keymatch">1</xsl:variable>
<xsl:variable name="keymatch_text">KeyMatch</xsl:variable>
<xsl:variable name="keymatch_text_color">#2255aa</xsl:variable>
<xsl:variable name="keymatch_bg_color">#e8e8ff</xsl:variable>

<!-- *** Google Desktop integration *** -->
<xsl:variable name="egds_show_search_tabs">0</xsl:variable>
<xsl:variable name="egds_appliance_tab_label">Appliance</xsl:variable>
<xsl:variable name="egds_show_desktop_results">1</xsl:variable>

<!-- *** onebox information *** -->
<xsl:variable name="show_onebox">1</xsl:variable>
<xsl:variable name="uar_provider"> GSA User-Added Results </xsl:variable>

<!-- *** analytics information *** -->
<xsl:variable name="analytics_account"></xsl:variable>

<!-- *** ASR enabling *** -->
<xsl:variable name="show_asr">1</xsl:variable>

<!-- *** UAR v2, Expert Search - Document directionality. Global variable to
       hold document directionality for the user language. *** -->
<xsl:variable name="document_direction">ltr</xsl:variable>

<!-- *** Dynamic Navigation *** -->
<xsl:variable name="show_dynamic_navigation">1</xsl:variable>
<xsl:variable name="dyn_nav_max_rows">6</xsl:variable>
<!-- Expert Search - render dynamic navigation if expanded mode with dynamic
   navigation is configured for this frontend. -->
<xsl:variable name="render_dynamic_navigation"><xsl:if
test="($show_dynamic_navigation != '0' or
       $show_expert_search_expanded_results = '1') and
       count(/GSP/RES/PARM) > 0">1</xsl:if>
</xsl:variable>

<!-- *** Show Google Apps results on right side as a sidebar element *** -->
<xsl:variable name="show_apps_segmented_ui">0</xsl:variable>

<!-- *** Google Site Search results *** -->
<xsl:variable name="show_gss_results">0</xsl:variable>
<xsl:variable name="gss_search_engine_id"></xsl:variable>

<!-- *** People Search results *** -->
<xsl:variable name="show_people_search">0</xsl:variable>

<!-- *** Translation Integration *** -->
<xsl:variable name="show_translation">1</xsl:variable>
<xsl:param name="translate_key"/>

<!-- *** Sidebar for holding elements that can load data asynchronously *** -->
<xsl:variable name="show_sidebar">
<xsl:choose>
  <!-- Expert Search - enable sidebar if expert search widget view is
       configured. -->
  <xsl:when test="($show_apps_segmented_ui = '1' or $show_gss_results = '1' or
                   $show_people_search = '1' or
                   $show_expert_search_widget_view = '1') and
                   $show_expert_search_expanded_results != '1' and
                   /GSP/Q != '' and
                   ($show_res_clusters = '0' or $res_cluster_position != 'right')">
    <xsl:value-of select="'1'"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="'0'"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** Document Previews *** -->
<xsl:variable name="show_document_previews">1</xsl:variable>

<!-- **********************************************************************
Result elements (can be customized)
   - whether to show an element ('1' for yes, '0' for no)
   - font/size/color ('' for using style of the context)
   ********************************************************************** -->

<!-- *** result title and snippet *** -->
<xsl:variable name="show_res_title">1</xsl:variable>
<xsl:variable name="res_title_length">65</xsl:variable>
<xsl:variable name="res_title_length_default">65</xsl:variable>
<xsl:variable name="res_title_color">#0000cc</xsl:variable>
<xsl:variable name="res_title_size"></xsl:variable>
<xsl:variable name="show_res_snippet">1</xsl:variable>
<xsl:variable name="res_snippet_size">100%</xsl:variable>

<!-- *** keyword match (in title or snippet) *** -->
<xsl:variable name="res_keyword_color"></xsl:variable>
<xsl:variable name="res_keyword_size"></xsl:variable>
<xsl:variable name="res_keyword_format">b</xsl:variable> <!-- 'b' for bold -->

<!-- *** link URL *** -->
<xsl:variable name="show_res_url">1</xsl:variable>
<xsl:variable name="res_url_color">#008000</xsl:variable>
<xsl:variable name="res_url_size">2%</xsl:variable>
<xsl:variable name="truncate_result_urls">1</xsl:variable>
<xsl:variable name="truncate_result_url_length">60</xsl:variable>

<!-- *** misc elements *** -->
<xsl:variable name="show_ips_in_search_url">1</xsl:variable>
<xsl:variable name="show_meta_tags">0</xsl:variable>
<xsl:variable name="show_res_size">1</xsl:variable>
<xsl:variable name="show_res_date">1</xsl:variable>
<xsl:variable name="show_res_cache">0</xsl:variable>

<!-- *** used in result cache link, similar pages link, and description *** -->
<xsl:variable name="faint_color">#7777cc</xsl:variable>

<!-- *** show secure results radio button *** -->
<xsl:variable name="show_secure_radio">1</xsl:variable>

<!-- *** show suggestions (remote aut-completions) *** -->
<xsl:variable name="show_suggest">1</xsl:variable>

<!-- **********************************************************************
Other variables (can be customized)
   ********************************************************************** -->

<!-- *** page title *** -->
<!-- execute SCU function to replace app name - syntax with blank space -->

<xsl:variable name="scu_title">SCU - <xsl:value-of select="$app_title"/></xsl:variable>
<xsl:variable name="front_page_title"><xsl:value-of select="$scu_title"/> Home</xsl:variable>
<xsl:variable name="result_page_title"><xsl:value-of select="$scu_title"/> Results</xsl:variable>
<xsl:variable name="adv_page_title"><xsl:value-of select="$scu_title"/> Advanced</xsl:variable>
<xsl:variable name="error_page_title"><xsl:value-of select="$scu_title"/> Error</xsl:variable>
<xsl:variable name="swr_page_title"><xsl:value-of select="$scu_title"/> Results</xsl:variable>

<!-- *** choose adv_search page header: '', 'provided', 'mine', or 'both' *** -->
<xsl:variable name="choose_adv_search_page_header">both</xsl:variable>

<!-- *** cached page header text *** -->
<xsl:variable name="cached_page_header_text">This is the cached copy of</xsl:variable>

<!-- *** error message text *** -->
<xsl:variable name="server_error_msg_text">A server error has occurred.</xsl:variable>
<xsl:variable name="server_error_des_text">Check server response code in details.</xsl:variable>
<xsl:variable name="xml_error_msg_text">Unknown XML result type.</xsl:variable>
<xsl:variable name="xml_error_des_text">View page source to see the offending XML.</xsl:variable>

<!-- *** advanced search page panel background color *** -->
<xsl:variable name="adv_search_panel_bgcolor">#cbdced</xsl:variable>

<!-- *** dynamic result cluster options *** -->
<xsl:variable name="show_res_clusters">1</xsl:variable>
<xsl:variable name="res_cluster_position">bottom</xsl:variable>

<!-- *** alerts2 options *** -->
<xsl:variable name="show_alerts2">0</xsl:variable>

<!-- Expert Search - i18n messages used by the expert search UI component. -->
<xsl:variable name="msg_back_to_main_results_action"><![CDATA[Back to main results\]\]\></xsl:variable>
<xsl:variable name="msg_expert_search_no_experts_found"><![CDATA[No expert(s) found.\]\]\></xsl:variable>
<xsl:variable name="msg_expert_search_switch_to_expanded_mode"><![CDATA[Switch to the expert search results expanded mode\]\]\></xsl:variable>
<xsl:variable name="msg_go_to_previous_page"><![CDATA[Go to the previous results page\]\]\></xsl:variable>
<xsl:variable name="msg_go_to_next_page"><![CDATA[Go to the next results page\]\]\></xsl:variable>
<xsl:variable name="msg_loading_expert_results"><![CDATA[Loading results...\]\]\></xsl:variable>
<xsl:variable name="msg_next_page_action"><![CDATA[Next\]\]\></xsl:variable>
<xsl:variable name="msg_previous_page_action"><![CDATA[Prev\]\]\></xsl:variable>
<xsl:variable name="msg_results_page_number_prefix"><![CDATA[Page\]\]\></xsl:variable>

<!-- *** UAR i18n messages *** -->
<xsl:variable name="msg_uar_added_by"><![CDATA[Added by\]\]\></xsl:variable>
<xsl:variable name="msg_uar_edit"><![CDATA[Edit\]\]\></xsl:variable>
<xsl:variable name="msg_uar_title"><![CDATA[Title\]\]\></xsl:variable>
<xsl:variable name="msg_uar_save"><![CDATA[Save\]\]\></xsl:variable>
<xsl:variable name="msg_uar_cancel"><![CDATA[Cancel\]\]\></xsl:variable>
<xsl:variable name="msg_uar_ok"><![CDATA[Ok\]\]\></xsl:variable>
<xsl:variable name="msg_uar_address"><![CDATA[Address\]\]\></xsl:variable>
<xsl:variable name="msg_uar_or"><![CDATA[or\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete"><![CDATA[delete\]\]\></xsl:variable>
<xsl:variable name="msg_uar_username"><![CDATA[UserName\]\]\></xsl:variable>
<xsl:variable name="msg_uar_less"><![CDATA[Less\]\]\></xsl:variable>
<xsl:variable name="msg_uar_more"><![CDATA[More\]\]\></xsl:variable>
<xsl:variable name="msg_uar_add_another_result"><![CDATA[Add another result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_add_a_result"><![CDATA[Add a result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_saving"><![CDATA[Saving\]\]\></xsl:variable>
<xsl:variable name="msg_uar_deleting"><![CDATA[Deleting\]\]\></xsl:variable>
<xsl:variable name="msg_uar_save_failed"><![CDATA[Save failed\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_failed"><![CDATA[Deletion failed\]\]\></xsl:variable>
<xsl:variable name="msg_uar_error_handling_request"><![CDATA[Error handling this request\]\]\></xsl:variable>
<xsl:variable name="msg_uar_error_deleting"><![CDATA[Error deleting this result! Could not create the request\]\]\></xsl:variable>
<xsl:variable name="msg_uar_error_add_or_update"><![CDATA[Problem adding/updating this result: Could not create the request\]\]\></xsl:variable>

<!-- UAR v2 - i18n messages used by the UAR UI component. -->
<xsl:variable name="msg_uar_confirm_delete_title"><![CDATA[Confirm delete\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_delete_text"><![CDATA[Are you sure you want to delete the user added result?\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_delete_moderation_required"><![CDATA[Are you sure you want to delete the user added resultThe selected result will be deleted only after the administrator reviews and approves the same. The result will continue to show until review is done.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_in_progress"><![CDATA[Deleting...\]\]\></xsl:variable>
<xsl:variable name="msg_uar_add_pending_review_title"><![CDATA[New addition - Admin review pending\]\]\></xsl:variable>
<xsl:variable name="msg_uar_add_pending_review_content"><![CDATA[The result that you contributed has been submitted but it will be displayed only after the administrator reviews and approves the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_update_pending_review_title"><![CDATA[Edit - Admin review pending\]\]\></xsl:variable>
<xsl:variable name="msg_uar_update_pending_review_content"><![CDATA[The changes to result that you edited has been submitted but it will be displayed only after the administrator reviews and approves the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_pending_review_title"><![CDATA[Delete - Admin review pending\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_pending_review_content"><![CDATA[The request for deleting the result has been submitted but result will be deleted only after the administrator reviews and approves the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_existing_review_pending_title"><![CDATA[Existing admin review pending\]\]\></xsl:variable>
<xsl:variable name="msg_uar_existing_review_pending_content"><![CDATA[An existing request to update the same result is pending therefore this request is not processed. You can take action only after the administrator reviews the existing request.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_add_title"><![CDATA[Confirm add - Admin review required\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_add_content"><![CDATA[New result contribution will be submitted for administrator review. The result will be displayed only after the administrator will approve the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_update_title"><![CDATA[Confirm edit - Admin review required\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_update_content"><![CDATA[The changes to the result will be submitted for administrator review. The existing result will continue to show until the administrator approves the changes.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_confirm_submit_request"><![CDATA[Are you sure you want to submit this request?\]\]\></xsl:variable>
<xsl:variable name="msg_uar_review_note"><![CDATA[Note that the existing result will continue to show until the review is done.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_discard_changes_title"><![CDATA[Discard changes\]\]\></xsl:variable>
<xsl:variable name="msg_uar_discard_changes_content"><![CDATA[Do you want to discard existing changes?\]\]\></xsl:variable>
<xsl:variable name="msg_uar_no_results"><![CDATA[No results. Consider contributing a result.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_description"><![CDATA[Description\]\]\></xsl:variable>
<xsl:variable name="msg_uar_enter_title_value"><![CDATA[Enter title to be displayed\]\]\></xsl:variable>
<xsl:variable name="msg_uar_enter_url_value"><![CDATA[Enter absolute URL of the document\]\]\></xsl:variable>
<xsl:variable name="msg_uar_enter_username_value"><![CDATA[Enter user name\]\]\></xsl:variable>
<xsl:variable name="msg_uar_edit_this_result"><![CDATA[Edit this result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_delete_this_result"><![CDATA[Delete this result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_view_all_results"><![CDATA[View all results\]\]\></xsl:variable>
<xsl:variable name="msg_uar_hide_few_results"><![CDATA[Hide few results\]\]\></xsl:variable>
<xsl:variable name="msg_uar_contribute_result"><![CDATA[Contribute a result\]\]\></xsl:variable>
<xsl:variable name="msg_uar_loading_settings"><![CDATA[Loading settings. Please try again in a second.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_server_error"><![CDATA[Server error! Please try again.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_authn_required"><![CDATA[Authentication is required.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_username_required"><![CDATA[Username is required. Please specify the same.\]\]\></xsl:variable>
<xsl:variable name="msg_uar_save_in_progress"><![CDATA[Saving...\]\]\></xsl:variable>

<!-- *** Template to sanitize UAR i18n messages *** -->
<xsl:template name="sanitize_uar_i18n_message">
<xsl:param name="uar_message_to_be_sanitized"/>
<xsl:variable name="uar_message_without_apos">
       <xsl:call-template name="replace_string">
         <xsl:with-param name="find" select='"&apos;"'/>
         <xsl:with-param name="replace" select='"\&apos;"'/>
         <xsl:with-param name="string" select="$uar_message_to_be_sanitized"/>
       </xsl:call-template>
</xsl:variable>
<xsl:variable name="uar_message_without_apos_double_quotes">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="$uar_message_without_apos"/>
    </xsl:call-template>
</xsl:variable>
<xsl:variable name="uar_message_without_apos_double_quotes_lt">
       <xsl:call-template name="replace_string">
         <xsl:with-param name="find" select='"&lt;"'/>
         <xsl:with-param name="replace" select='"&amp;lt;"'/>
         <xsl:with-param name="string"
           select="$uar_message_without_apos_double_quotes"/>
       </xsl:call-template>
</xsl:variable>
<xsl:variable name="uar_message_without_apos_double_quotes_lt_gt">
       <xsl:call-template name="replace_string">
         <xsl:with-param name="find" select='"&gt;"'/>
         <xsl:with-param name="replace" select='"&amp;gt;"'/>
         <xsl:with-param name="string"
           select="$uar_message_without_apos_double_quotes_lt"/>
       </xsl:call-template>
</xsl:variable>
<xsl:value-of select="$uar_message_without_apos_double_quotes_lt_gt"/>
</xsl:template>

<!-- *** UAR v2, Expert Search - Template to include the localized messages
       for UAR and Expert Search component. *** -->
<xsl:template name="include_localized_messages_for_uar_expert_search">
<script type="text/javascript">
<xsl:comment>
  // Variable definition included here so that no error is thrown. This will
  // be overriden as soon as the UI component JS library loads.
  var gsa = {'ui': {msg: {}}};

  /**
   * Adds localized messages to be used by the UI component(s).
   */
  function _gsa_addLocalizedMessages() {
    // UAR messages.
    gsa.ui.msg.MSG_CANCEL_BTN =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_cancel"/></xsl:call-template>';
    gsa.ui.msg.MSG_OK_BTN =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_ok"/></xsl:call-template>';
    gsa.ui.msg.MSG_SAVE_BTN =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_save"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_DELETE_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_delete_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_DELETE_TEXT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_delete_text"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_DELETE_MODERATION_REQUIRED =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_delete_moderation_required"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DELETE_IN_PROGRESS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_delete_in_progress"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ADD_PENDING_REVIEW_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_add_pending_review_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ADD_PENDING_REVIEW_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_add_pending_review_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_UPDATE_PENDING_REVIEW_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_update_pending_review_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_UPDATE_PENDING_REVIEW_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_update_pending_review_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DELETE_PENDING_REVIEW_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_delete_pending_review_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DELETE_PENDING_REVIEW_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_delete_pending_review_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_EXISTING_REVIEW_PENDING_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_existing_review_pending_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_EXISTING_REVIEW_PENDING_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_existing_review_pending_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_ADD_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_add_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_ADD_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_add_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_UPDATE_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_update_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_UPDATE_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_update_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONFIRM_SUBMIT_REQUEST =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_confirm_submit_request"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_REVIEW_NOTE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_review_note"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DISCARD_CHANGES_TITLE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_discard_changes_title"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DISCARD_CHANGES_CONTENT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_discard_changes_content"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_NO_RESULTS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_no_results"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ADDED_BY =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_added_by"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DESCRIPTION =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_description"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ENTER_TITLE_VALUE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_enter_title_value"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ENTER_URL_VALUE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_enter_url_value"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_ENTER_USERNAME_VALUE =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_enter_username_value"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_EDIT_THIS_RESULT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_edit_this_result"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_DELETE_THIS_RESULT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_delete_this_result"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_VIEW_ALL_RESULTS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_view_all_results"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_HIDE_FEW_RESULTS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_hide_few_results"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_CONTRIBUTE_RESULT =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_contribute_result"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_LOADING_SETTINGS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_loading_settings"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_SERVER_ERROR =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_server_error"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_AUTHN_REQUIRED =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_authn_required"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_USERNAME_REQUIRED =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_username_required"/></xsl:call-template>';
    gsa.ui.msg.MSG_UAR_SAVE_IN_PROGRESS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_uar_save_in_progress"/></xsl:call-template>';
    // Expert search messages.
    gsa.ui.msg.MSG_LOADING_EXPERT_RESULTS =
        '<xsl:call-template name="sanitize_uar_i18n_message">
          <xsl:with-param name="uar_message_to_be_sanitized"
            select="$msg_loading_expert_results"/></xsl:call-template>';
  }
//</xsl:comment>
</script>
</xsl:template>

<!-- *** UAR v2 - Template to include the JavaScript required for the UAR UI
       component. *** -->
<xsl:template name="include_uar_ui_component">
<script src="{$gsa_resource_root_path_prefix}/uardesktop_compiled.js"
    type="text/javascript">
</script>
<script type="text/javascript">
  gsa.ui.uar.init();
</script>
</xsl:template>

<!-- *** Template to populate the i18n message array which is used by uar.js *** -->
<xsl:template name="populate_uar_i18n_array">
<script type="text/javascript">
<xsl:comment>
  // User added results - i18n messages.
  var uar_i18n_messages = {};
  uar_i18n_messages['ADDED_BY'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                     <xsl:with-param name="uar_message_to_be_sanitized"
                                       select="$msg_uar_added_by"/>
                                   </xsl:call-template>' + ' ';
  uar_i18n_messages['EDIT'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                 <xsl:with-param name="uar_message_to_be_sanitized"
                                   select="$msg_uar_edit"/>
                               </xsl:call-template>';
  uar_i18n_messages['TITLE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                  <xsl:with-param name="uar_message_to_be_sanitized"
                                    select="$msg_uar_title"/>
                                </xsl:call-template>'  + ':';
  uar_i18n_messages['SAVE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                 <xsl:with-param name="uar_message_to_be_sanitized"
                                   select="$msg_uar_save"/>
                               </xsl:call-template>';
  uar_i18n_messages['CANCEL'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                   <xsl:with-param name="uar_message_to_be_sanitized"
                                     select="$msg_uar_cancel"/>
                                 </xsl:call-template>';
  uar_i18n_messages['ADDRESS'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                    <xsl:with-param name="uar_message_to_be_sanitized"
                                      select="$msg_uar_address"/>
                                  </xsl:call-template>'  + ':';
  uar_i18n_messages['OR'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                               <xsl:with-param name="uar_message_to_be_sanitized"
                                 select="$msg_uar_or"/>
                             </xsl:call-template>'  + ' ';
  uar_i18n_messages['DELETE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                   <xsl:with-param name="uar_message_to_be_sanitized"
                                     select="$msg_uar_delete"/>
                                 </xsl:call-template>';
  uar_i18n_messages['USERNAME'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                     <xsl:with-param name="uar_message_to_be_sanitized"
                                       select="$msg_uar_username"/>
                                   </xsl:call-template>'  + ':';
  uar_i18n_messages['LESS'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                 <xsl:with-param name="uar_message_to_be_sanitized"
                                   select="$msg_uar_less"/>
                               </xsl:call-template>';
  uar_i18n_messages['MORE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                 <xsl:with-param name="uar_message_to_be_sanitized"
                                   select="$msg_uar_more"/>
                               </xsl:call-template>';
  uar_i18n_messages['ADD_ANOTHER_RESULT'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                               <xsl:with-param name="uar_message_to_be_sanitized"
                                                 select="$msg_uar_add_another_result"/>
                                             </xsl:call-template>';
  uar_i18n_messages['ADD_A_RESULT'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                         <xsl:with-param name="uar_message_to_be_sanitized"
                                           select="$msg_uar_add_a_result"/>
                                       </xsl:call-template>';
  uar_i18n_messages['SAVING'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                   <xsl:with-param name="uar_message_to_be_sanitized"
                                     select="$msg_uar_saving"/>
                                 </xsl:call-template>'  + '...';
  uar_i18n_messages['DELETING'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                     <xsl:with-param name="uar_message_to_be_sanitized"
                                       select="$msg_uar_deleting"/>
                                   </xsl:call-template>'  + '...';
  uar_i18n_messages['SAVE_FAILED'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                        <xsl:with-param name="uar_message_to_be_sanitized"
                                          select="$msg_uar_save_failed"/>
                                      </xsl:call-template>'  + '!';
  uar_i18n_messages['DELETE_FAILED'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                          <xsl:with-param name="uar_message_to_be_sanitized"
                                            select="$msg_uar_delete_failed"/>
                                        </xsl:call-template>'  + '!';
  uar_i18n_messages['ERROR_HANDLING_REQUEST'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                                   <xsl:with-param name="uar_message_to_be_sanitized"
                                                     select="$msg_uar_error_handling_request"/>
                                                 </xsl:call-template>'  + '.';
  uar_i18n_messages['ERROR_DELETING'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                           <xsl:with-param name="uar_message_to_be_sanitized"
                                             select="$msg_uar_error_deleting"/>
                                         </xsl:call-template>'  + '.';
  uar_i18n_messages['ERROR_ADD_OR_UPDATE'] = '<xsl:call-template name="sanitize_uar_i18n_message">
                                                <xsl:with-param name="uar_message_to_be_sanitized"
                                                  select="$msg_uar_error_add_or_update"/>
                                              </xsl:call-template>'  + '.';
//</xsl:comment>
</script>
</xsl:template>

<!-- *** Previewer i18n messages *** -->
<xsl:variable name="msg_previewer_error"><![CDATA[Transformation error\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_connecting"><![CDATA[Connecting\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_document_too_large"><![CDATA[Document too large\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_hit_page"><![CDATA[Hit page\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_initializing"><![CDATA[Initializing\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_page"><![CDATA[Page\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_pending"><![CDATA[Pending\]\]\></xsl:variable>
<xsl:variable name="msg_previewer_preview_unavailable"><![CDATA[Preview unavailable\]\]\></xsl:variable>



<!-- *** Template to populate the i18n message array which is used by floating previewer widget *** -->
<xsl:template name="populate_previewer_i18n_array">
<script type="text/javascript">
<xsl:comment>
  // Document previews - i18n messages.
  var previewer_i18n_messages = {
    'connecting': '<xsl:value-of select="$msg_previewer_connecting"/>',
    'document_too_large': '<xsl:value-of select="$msg_previewer_document_too_large"/>',
    'hitpage': '<xsl:value-of select="$msg_previewer_hit_page"/>',
    'initializing': '<xsl:value-of select="$msg_previewer_initializing"/>',
    'page': '<xsl:value-of select="$msg_previewer_page"/>',
    'pending': '<xsl:value-of select="$msg_previewer_pending"/>',
    'preview_unavailable': '<xsl:value-of select="$msg_previewer_preview_unavailable"/>',
    'transformation_aborted': '<xsl:value-of select="$msg_previewer_error"/>',
    'transformation_cancelled': '<xsl:value-of select="$msg_previewer_error"/>',
    'transformation_error': '<xsl:value-of select="$msg_previewer_error"/>'
  };
//</xsl:comment>
</script>
</xsl:template>

<!-- **********************************************************************
My global page header/footer (can be customized)
   ********************************************************************** -->
<!-- *** showing up serve-logs in footer *** -->
<xsl:template match="TraceNode">
<div id="TraceNode-div">
  Total time taken
  <span style='font-style: italics;' id='total_time'><xsl:value-of select="(@out-time - @in-time) div 1000000"/></span>
  <xsl:apply-templates select="Record"/>
</div>
</xsl:template>

<xsl:template match="Record">
<div>
  <xsl:value-of select="Stmt/@log"/>
</div>
<div>
  <i><xsl:value-of select="@time-from-start"/></i>
</div>
</xsl:template>

<!-- **********************************************************************
Logo template (can be customized)
   ********************************************************************** -->
<xsl:template name="logo">
  <a ctype='logo' href="{$home_url}"><img src="{$logo_url}"
    width="{$logo_width}" height="{$logo_height}"
    alt="Go to Google Home" border="0" /></a>
</xsl:template>

<!-- **********************************************************************
Search result page header (can be customized): logo and search box
   ********************************************************************** -->
<xsl:template name="result_page_header">
  <input type="hidden" name="security_token" id="token">
    <xsl:attribute name="value">
      <xsl:value-of select="/GSP/SECURITY_TOKEN"/>
    </xsl:attribute>
  </input>
    
  <div id="result_page_header_id"> 
    <xsl:if test="$show_logo != '0'">
      <div id="logo-div">
        <xsl:call-template name="logo"/>
        <xsl:call-template name="nbsp3"/>
      </div>
    </xsl:if>
    <xsl:if test="$show_top_search_box != '0'">
      <div id="search-box-div">
          <xsl:call-template name="search_box">
            <xsl:with-param name="type" select="'std_top'"/>
          </xsl:call-template>
      </div>
    </xsl:if>
    <xsl:if test="/GSP/CT">
      <div id="stopwords-div">
        <br/>
          <xsl:call-template name="stopwords"/>
          <br/></div>
    </xsl:if>
  </div>
</xsl:template>


<!-- **********************************************************************
Search within results page header (can be customized): logo and search box 
   ********************************************************************** -->
<xsl:template name="swr_page_header">
  <div id="swr_page_header_div">
    <xsl:if test="$show_logo != '0'">
          <xsl:call-template name="logo"/>
          <xsl:call-template name="nbsp3"/>
    </xsl:if>
    <xsl:if test="$show_top_search_box != '0'">
         <xsl:call-template name="search_box">
            <xsl:with-param name="type" select="'swr'"/>
          </xsl:call-template>
    </xsl:if>
  </div>
</xsl:template>


<!-- **********************************************************************
Home search page header (can be customized): logo and search box
   ********************************************************************** -->
<xsl:template name="home_page_header">

  <input type="hidden" name="security_token" id="token">
    <xsl:attribute name="value">
      <xsl:value-of select="/GSP/SECURITY_TOKEN"/>
    </xsl:attribute>
  </input>
  <div id="home_page_header">
    <xsl:if test="$show_logo != '0'">
      <div class="pull-left">
        <xsl:call-template name="logo"/>
        <xsl:call-template name="nbsp3"/>
      </div>
    </xsl:if>  
    
    
    <xsl:if test="$show_top_search_box != '0'">
        <xsl:call-template name="search_box">
          <xsl:with-param name="type" select="'home'"/>
        </xsl:call-template>
    </xsl:if>
  </div>
</xsl:template>


<!-- **********************************************************************
Separation bar variables (used in advanced search header and result page)
   ********************************************************************** -->
<xsl:variable name="sep_bar_border_color">
<xsl:choose>
  <xsl:when test="$choose_sep_bar = 'ltblue'">#3366cc</xsl:when>
  <xsl:when test="$choose_sep_bar = 'blue'">#3366cc</xsl:when>
  <xsl:otherwise><xsl:value-of select="$global_bg_color"/></xsl:otherwise>
</xsl:choose>
</xsl:variable>

<xsl:variable name="sep_bar_bg_color">
<xsl:choose>
  <xsl:when test="$is_embedded_mode = '1'">#efefef</xsl:when>
  <xsl:when test="$choose_sep_bar = 'ltblue'">#e5ecf9</xsl:when>
  <xsl:when test="$choose_sep_bar = 'blue'">#3366cc</xsl:when>
  <xsl:otherwise><xsl:value-of select="$global_bg_color"/></xsl:otherwise>
</xsl:choose>
</xsl:variable>

<xsl:variable name="sep_bar_text_color">
<xsl:choose>
  <xsl:when test="$choose_sep_bar = 'ltblue'">#000000</xsl:when>
  <xsl:when test="$choose_sep_bar = 'blue'">#ffffff</xsl:when>
  <xsl:otherwise><xsl:value-of select="$global_text_color"/></xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- **********************************************************************
Advanced search page header HTML (can be customized)
   ********************************************************************** -->
<xsl:template name="advanced_search_header">
    <div id="advanced_search_header_div">
        <xsl:if test="$show_logo != '0'">
              <xsl:call-template name="logo"/>
        </xsl:if>
    </div>
</xsl:template>


<!-- **********************************************************************
Cached page header (can be customized)
   ********************************************************************** -->
<xsl:template name="cached_page_header">
<xsl:param name="cached_page_url"/>
<xsl:variable name="stripped_url" select="substring-after($cached_page_url,
                                                          '://')"/>
<div id="cached_page_header_div">
    <font face="{$global_font}" color="{$global_text_color}" size="-1">
     <xsl:value-of select="$cached_page_header_text"/>
     <xsl:call-template name="nbsp"/>
     <xsl:choose>
      <xsl:when test="starts-with($cached_page_url,
                                  $db_url_protocol)">
       <a ctype="cache" href="{concat('/db/',$stripped_url)}">
       <font color="{$global_link_color}">
       <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
      </xsl:when>
      <xsl:when test="starts-with($cached_page_url,
                                  $nfs_url_protocol)">
       <a ctype="cache" href="{concat('/nfs/',$stripped_url)}">
       <font color="{$global_link_color}">
       <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
      </xsl:when>
      <xsl:when test="starts-with($cached_page_url,
                                  $smb_url_protocol)">
       <a ctype="cache" href="{concat('/smb/',$stripped_url)}">
       <font color="{$global_link_color}">
       <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
      </xsl:when>
      <xsl:when test="starts-with($cached_page_url,
                                  $unc_url_protocol)">
       <xsl:variable name="display_url">
         <xsl:call-template name="convert_unc">
           <xsl:with-param name="string" select="$stripped_url"/>
         </xsl:call-template>
       </xsl:variable>
       <a ctype="cache" href="{concat('file://',$stripped_url)}">
       <font color="{$global_link_color}">
       <xsl:value-of select="$display_url"/></font></a>.<br/>
      </xsl:when>
      <xsl:otherwise>
       <a ctype="cache" href="{$cached_page_url}"><font color="{$global_link_color}">
       <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
      </xsl:otherwise>
     </xsl:choose>
    </font>
</div>
<hr/>
</xsl:template>

<!-- **********************************************************************
Suggest service javascript (do not customize)
   ********************************************************************** -->
<xsl:template name="gsa_suggest">
<xsl:variable name="ss_g_one_name_to_display">Popular Query</xsl:variable>
<xsl:variable name="ss_g_more_names_to_display">Popular Queries</xsl:variable>
<xsl:variable name="ss_non_query_empty_title">No Title</xsl:variable>
<script type="text/javascript">
/**
* HTML element names for the search form, the spellchecking suggestion, and the
* cluster suggestions. The search form must have the following input elements:
* "q" (for search box), "site", "client".
* @type {string}
*/
var ss_form_element = 'suggestion_form'; // search form

/**
* Name of search suggestion drop down.
* @type {string}
*/
var ss_popup_element = 'search_suggest'; // search suggestion drop-down

/**
* Types of suggestions to include.  Just one options now, but reserving the
* code for more types
*   g - suggest server
* Array sequence determines how different suggestion types are shown.
* Empty array would effectively turn off suggestions.
* @type {object}
*/
var ss_seq = [ 'g' ];

/**
* Suggestion type name to display when there is only one suggestion.
* @type {string}
*/
var ss_g_one_name_to_display =
  "<xsl:value-of select="$ss_g_one_name_to_display"/>";

/**
* Suggestion type name to display when there are more than one suggestions.
* @type {string}
*/
var ss_g_more_names_to_display =
  "<xsl:value-of select="$ss_g_more_names_to_display"/>";

/**
* The max suggestions to display for different suggestion types.
* No-positive values are equivalent to unlimited.
* For key matches, -1 means using GSA default (not tagging numgm parameter),
* 0 means unlimited.
* Be aware that GSA has a published max limit of 10 for key matches.
* @type {number}
*/
var ss_g_max_to_display = 10;

/**
* The max suggestions to display for all suggestion types.
* No-positive values are equivalent to unlimited.
* @type {number}
*/
var ss_max_to_display = 12;

/**
* Idling interval for fast typers.
* @type {number}
*/
var ss_wait_millisec = 300;

/**
* Delay time to avoid contention when drawing the suggestion box by various
* parallel processes.
* @type {number}
*/
var ss_delay_millisec = 30;

/**
* Host name or IP address of GSA.
* Null value can be used if the JS code loads from the GSA.
* For local test, use null if there is a &lt;base> tag pointing to the GSA,
* otherwise use the full GSA host name
* @type {string}
*/
var ss_gsa_host = null;

/**
* Constant that represents legacy output format.
* @type {string}
*/
var SS_OUTPUT_FORMAT_LEGACY = 'legacy';

/**
* Constant that represents OpenSearch output format.
* @type {string}
*/
var SS_OUTPUT_FORMAT_OPEN_SEARCH = 'os';

/**
* Constant that represents rich output format.
* @type {string}
*/
var SS_OUTPUT_FORMAT_RICH = 'rich';

/**
* What suggest request API to use.
*   legacy - use current protocol in 6.0
*            Request: /suggest?token=&lt;query>&amp;max_matches=&lt;num>&amp;use_similar=0
*            Response: [ "&lt;term 1>", "&lt;term 2>", ..., "&lt;term n>" ]
*                   or
*                      [] (if no result)
*   os -     use OpenSearch protocol
*            Request: /suggest?q=&lt;query>&amp;max=&lt;num>&amp;site=&lt;collection>&amp;client=&lt;frontend>&amp;access=p&amp;format=os
*            Response: [
*                        "&lt;query>",
*                        [ "&lt;term 1>", "&lt;term 2>", ... "&lt;term n>" ],
*                        [ "&lt;content 1>", "&lt;content 2>", ..., "&lt;content n>" ],
*                        [ "&lt;url 1>", "&lt;url 2>", ..., "&lt;url n>" ]
*                      ] (where the last two elements content and url are optional)
*                   or
*                      [ &lt;query>, [] ] (if no result)
*   rich -   use rich protocol from search-as-you-type
*            Request: /suggest?q=&lt;query>&amp;max=&lt;num>&amp;site=&lt;collection>&amp;client=&lt;frontend>&amp;access=p&amp;format=rich
*            Response: {
*                        "query": "&lt;query>",
*                        "results": [
*                          { "name": "&lt;term 1>", "type": "suggest", "content": "&lt;content 1>", "style": "&lt;style 1>", "moreDetailsUrl": "&lt;url 1>" },
*                          { "name": "&lt;term 2>", "type": "suggest", "content": "&lt;content 2>", "style": "&lt;style 2>", "moreDetailsUrl": "&lt;url 2>" },
*                          ...,
*                          { "name": "&lt;term n>", "type": "suggest", "content": "&lt;content n>", "style": "&lt;style n>", "moreDetailsUrl": "&lt;url n>" }
*                        ]
*                      } (where type, content, style, moreDetailsUrl are optional)
*                   or
*                      { "query": &lt;query>, "results": [] } (if no result)
* If unspecified or null, using legacy protocol.
* @type {string}
*/
var ss_protocol = SS_OUTPUT_FORMAT_RICH;

/**
* Whether to allow non-query suggestion items.
* Setting it to false can bring results from "os" and "rich" responses into
* backward compatible with "legacy".
* @type {boolean}
*/
var ss_allow_non_query = true;

/**
* Default title text when the non-query suggestion item does not have a useful
* title.
* The default display text should be internalionalized.
* @type {string}
*/
var ss_non_query_empty_title =
  "<xsl:value-of select="$ss_non_query_empty_title"/>";

/**
* Whether debugging is allowed.  If so, toggle with F2 key.
* @type {boolean}
*/
var ss_allow_debug = false;
</script>
<script type="text/javascript"
  src="{$gsa_resource_root_path_prefix}/ss.js">
</script>
</xsl:template>


<!-- **********************************************************************
"Search Within Results" search input page (can be customized)
   ********************************************************************** -->
<xsl:template name="swr_search">
<xsl:call-template name="doc_type"/>
<html>
  <xsl:attribute name="class">
  <xsl:value-of select="$skin_class"/>
  </xsl:attribute>
<xsl:call-template name="langHeadStart"/>
  <title><xsl:value-of select="$swr_page_title"/></title>
<xsl:call-template name="style"/>
<xsl:call-template name="langHeadEnd"/>

<body>
   <xsl:attribute name="class">
  <xsl:value-of select="'clearfix'"/>
  </xsl:attribute>
  <xsl:attribute name="dir">ltr</xsl:attribute>
<div id="container" class="schoolpage">
 <xsl:call-template name="header_element"/>
 <xsl:call-template name="main_content_wrapper_start"/>
  <div class="main-content">
      <xsl:call-template name="personalization"/>
      <xsl:call-template name="analytics"/>
      <xsl:call-template name="swr_page_header"/>f
      <hr/>
      <xsl:call-template name="copyright"/>
  </div>
  <xsl:call-template name="footer_element"/>    
  <xsl:call-template name="main_content_wrapper_end"/>
  </div>
</body>
</html>
</xsl:template>


<!-- **********************************************************************
"Front door" search input page (can be customized)
   ********************************************************************** -->
<xsl:template name="front_door">
<xsl:call-template name="doc_type"/>
<html>
  <xsl:attribute name="class">
  <xsl:value-of select="$skin_class"/>
  </xsl:attribute>
<xsl:call-template name="langHeadStart"/>
  <title><xsl:value-of select="$front_page_title"/></title>
<xsl:call-template name="style"/>
<xsl:if test="$show_suggest != '0'">
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/common.js'></script>
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/xmlhttp.js'></script>
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/uri.js'></script>
  <xsl:call-template name="gsa_suggest" />
</xsl:if>
<xsl:call-template name="langHeadEnd"/>

<xsl:choose>
  <xsl:when test="$show_suggest != '0'">
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/common.js'></script>
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/xmlhttp.js'></script>
  <script language='javascript'
      src='{$gsa_resource_root_path_prefix}/uri.js'></script>
    <xsl:call-template name="gsa_suggest" />

    <body onLoad="ss_sf();">
      <xsl:attribute name="class">
    <xsl:value-of select="'clearfix'"/>
    </xsl:attribute>
    <xsl:attribute name="dir">ltr</xsl:attribute>
  <div id="container" class="schoolpage">
    <xsl:call-template name="header_element"/>
    <xsl:call-template name="main_content_wrapper_start"/>
      <div class="main-content">
        <xsl:call-template name="personalization"/>
        <xsl:call-template name="analytics"/>

        <xsl:call-template name="home_page_header"/>
        <div class="home-page-hr">
          <hr/>  
        </div>
        <xsl:call-template name="copyright"/>
      </div>
    <xsl:call-template name="footer_element"/>
    <xsl:call-template name="main_content_wrapper_end"/>
    </div>
    </body>
  </xsl:when>
  <xsl:otherwise>
    <body>
      <xsl:attribute name="class">
    <xsl:value-of select="'clearfix'"/>
    </xsl:attribute>
    <xsl:attribute name="dir">ltr</xsl:attribute>
   <div id="container" class="schoolpage">
    <xsl:call-template name="header_element"/>
    <xsl:call-template name="main_content_wrapper_start"/>
      <div class="main-content">
        <xsl:call-template name="personalization"/>
        <xsl:call-template name="analytics"/>
        <xsl:call-template name="home_page_header"/>
        <hr/>
        <xsl:call-template name="copyright"/> 
      </div>
    <xsl:call-template name="footer_element"/>   
    <xsl:call-template name="main_content_wrapper_end"/>
    </div>
    </body>
  </xsl:otherwise>
</xsl:choose>

</html>
</xsl:template>


<!-- **********************************************************************
Empty result set (can be customized)
   ********************************************************************** -->
<xsl:template name="no_RES">
<xsl:param name="query"/>

<!-- *** Output Google Desktop results (if enabled and any available) *** -->
<xsl:if test="$egds_show_desktop_results != '0'">
  <xsl:call-template name="desktop_results"/>
</xsl:if>
<!-- *** Handle UAR results, if any ***-->
<xsl:if test="$show_onebox != '0'  and $show_sidebar != '1'">
  <xsl:if test="/GSP/ENTOBRESULTS/OBRES/provider = $uar_provider">
      <input type="hidden" name="oneboxloc" value="1261" />
    <xsl:call-template name="onebox"/>
    <script>
    <xsl:comment>
      if (window['populateUarMessages']) {
        populateUarMessages();
      }
    //</xsl:comment>
    </script>
  </xsl:if>
</xsl:if>

<div class="no-results">
<h1>No Results:</h1>
<p>Your search for <strong><xsl:value-of select="$query"/></strong> did not return any results.</p>
<ul>
  <li>Make sure all words are spelled correctly.</li>
  <li>Try different keywords.</li>
  <li>Try another search collection above.</li>
  <xsl:if test="/GSP/PARAM[(@name='access') and(@value='a')]">
    <li>Make sure your security credentials are correct.</li>
  </xsl:if>
  <li>Try more general keywords.</li>
</ul>
</div>

</xsl:template>


<!-- ######################################################################
We do not recommend changes to the following code.  Google Technical
Support Personnel currently do not support customization of XSLT under
these Technical Support Services Guidelines.  Such services may be
provided on a consulting basis, at Google's then-current consulting
services rates under a separate agreement, if Google personnel are
available.  Please ask your Google Account Manager for more details if
you are interested in purchasing consulting services.
   ###################################################################### -->


<!-- **********************************************************************
Global Style (do not customize)
      default font type/size/color, background color, link color
       using HTML CSS (Cascading Style Sheets)
   ********************************************************************** -->
<xsl:template name="style">
<xsl:call-template name="my_page_css"/>
<link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/global.css?version=1.0" />
<xsl:if test="$show_bottom_search_box != '0'">
  <link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/bottom_search_box.css" />
</xsl:if>
<xsl:if test="$show_alerts2 = '1'">
  <link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/show_alerts2.css" />
</xsl:if>


<xsl:if test="$show_res_clusters = '1'">
<xsl:choose>
  <xsl:when test="$res_cluster_position = 'top'">
    <link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/res_cluster_top.css"/>
  </xsl:when>
  <xsl:when test="$res_cluster_position = 'bottom'">
      <!--<link rel="stylesheet" type="text/css" href="{$custom_css_path}/res_cluster_bottom.css"/>-->
  </xsl:when>
  <xsl:when test="$res_cluster_position = 'right'">
      <link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/res_cluster_right.css"/>
  </xsl:when>
</xsl:choose>
<xsl:if test="$is_disable_style_in_embedded_mode = '1'">
<link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/is_disable_style_in_embedded_mode.css"/>
</xsl:if>
</xsl:if>

<xsl:if test="$res_cluster_position = 'right'">
</xsl:if>
<xsl:if test="$show_suggest != '0'">
<!--<link rel="stylesheet" type="text/css" href="{$custom_css_path}/suggestion.css?version=1.0" />-->
</xsl:if>
<xsl:if test="$render_dynamic_navigation = '1'">
<link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/dynamic_nav.css?version=1.0"/>
</xsl:if>
<xsl:if test="$show_sidebar = '1'">
<link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/show_sidebar.css"/>
</xsl:if>
<xsl:if test="$show_document_previews = '1'">
<link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/document_preview.css?version=1.1"/>
</xsl:if>
<xsl:if test="$show_translation = '1' and $only_apps != '1'">
 <link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/translation.css"/>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
URL variables (do not customize)
   ********************************************************************** -->
<!-- *** if this is a test search (help variable)-->
<xsl:variable name="is_test_search"
select="/GSP/PARAM[@name='testSearch']/@value"/>

<!-- *** if this is a search within results search *** -->
<xsl:variable name="swrnum">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[(@name='swrnum') and (@value!='')]">
    <xsl:value-of select="/GSP/PARAM[@name='swrnum']/@value"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="0"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** help_url: search tip URL (html file) *** -->
<xsl:variable name="help_url">/user_help.html</xsl:variable>

<!-- *** base_url: collection info *** -->
<xsl:variable name="base_url">
<xsl:for-each
  select="/GSP/PARAM[@name = 'client' or
                   @name = 'site' or
                   @name = 'num' or
                   @name = 'output' or
                   @name = 'proxystylesheet' or
                   @name = 'access' or
                   @name = 'lr' or
                   @name = 'ie']">
  <xsl:value-of select="@name"/>=<xsl:value-of select="@original_value"/>
  <xsl:if test="position() != last()">&amp;</xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** custom tab base url *** -->
<xsl:variable name="custom_tab_url">
  <xsl:for-each select="/GSP/PARAM[(@name != 'site') and (@name != 'dnavs')]">
    <xsl:choose>
     <xsl:when test="@name = 'q' and /GSP/PARAM[@name='dnavs']">
        <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
        <xsl:value-of select="substring-before(@original_value,
          concat('+', /GSP/PARAM[@name='dnavs']/@original_value))"/>
      </xsl:when>
     <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
     </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="position() != last()">&amp;</xsl:if>
  </xsl:for-each>
</xsl:variable>

<!-- *** home_url: search? + collection info + &proxycustom=<HOME/> *** -->
<xsl:variable name="home_url">
<xsl:value-of select="$gsa_search_root_path_prefix"/>?<xsl:value-of select="$base_url"
/>&amp;proxycustom=&lt;HOME/&gt;</xsl:variable>


<!-- *** synonym_url: does not include q, as_q, and start elements *** -->
<xsl:variable name="synonym_url"><xsl:for-each
select="/GSP/PARAM[(@name != 'q') and
                   (@name != 'as_q') and
                   (@name != 'swrnum') and
                   (@name != 'dnavs') and
                   (@name != $embedded_mode_root_path_param) and
                   (@name != $embedded_mode_resource_root_path_param) and
                   (@name != $embedded_mode_disable_style) and
                   (@name != 'ie') and
                   (@name != 'start') and
                   (@name != 'epoch' or $is_test_search != '') and
                   not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** search_url *** -->
<xsl:variable name="search_url">
<!-- Expert Search - ignore expertsearchasync query param. -->
<xsl:for-each
    select="/GSP/PARAM[(@name != 'start') and
                       (@name != $embedded_mode_root_path_param) and
                       (@name != $embedded_mode_resource_root_path_param) and
                       (@name != $embedded_mode_disable_style) and
                       (@name != 'swrnum') and
                       (@name != 'expertsearchasync') and
                       (@name != 'epoch' or $is_test_search != '') and
                       not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:when test="@name = 'only_apps' and $show_apps_segmented_ui = '1'">
      <xsl:value-of select="'exclude_apps=1'" />
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** search_url minus any dynamic navigation filters *** -->
<xsl:variable name="search_url_no_dnavs">
<xsl:for-each
    select="/GSP/PARAM[(@name != 'start') and
                       (@name != $embedded_mode_root_path_param) and
                       (@name != $embedded_mode_resource_root_path_param) and
                       (@name != $embedded_mode_disable_style) and
                       (@name != 'swrnum') and
                       (@name != 'dnavs') and
                       (@name != 'epoch' or $is_test_search != '') and
                       not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:when test="@name = 'only_apps' and $show_apps_segmented_ui = '1'">
      <xsl:value-of select="'exclude_apps=1'" />
    </xsl:when>
    <xsl:when test="@name = 'q' and /GSP/PARAM[@name='dnavs']">
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="substring-before(@original_value,
        concat('+', /GSP/PARAM[@name='dnavs']/@original_value))"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** url without q and dnavs param *** -->
<xsl:variable name="no_q_dnavs_params">
<xsl:for-each
    select="/GSP/PARAM[(@name != 'start') and
                       (@name != $embedded_mode_root_path_param) and
                       (@name != $embedded_mode_resource_root_path_param) and
                       (@name != $embedded_mode_disable_style) and
                       (@name != 'swrnum') and
                       (@name != 'q') and
                       (@name != 'dnavs') and
                       (@name != 'epoch' or $is_test_search != '') and
                       not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
</xsl:variable>

<!-- *** no_q_dnavs_params_escaped: safe for inclusion in javascript *** -->
<xsl:variable name="no_q_dnavs_params_escaped">
<xsl:call-template name="js_escape">
  <xsl:with-param name="string" select="$no_q_dnavs_params"/>
  <xsl:with-param name="slash_mode" select='"0"'/>
</xsl:call-template>
</xsl:variable>

<!-- *** search_url_escaped: safe for inclusion in javascript *** -->
<xsl:variable name="search_url_escaped">
<xsl:call-template name="js_escape">
  <xsl:with-param name="string" select="$search_url_no_dnavs"/>
  <xsl:with-param name="slash_mode" select='"0"'/>
</xsl:call-template>
</xsl:variable>

<!-- *** filter_url: everything except resetting "filter=" *** -->
<xsl:variable name="filter_url"><xsl:value-of
  select="$gsa_search_root_path_prefix"/>?<xsl:for-each
  select="/GSP/PARAM[(@name != 'filter') and
                     (@name != $embedded_mode_root_path_param) and
                     (@name != $embedded_mode_resource_root_path_param) and
                     (@name != $embedded_mode_disable_style) and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
  <xsl:choose>
    <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
      <!-- do nothing to remove 'ip' from the URL -->
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:if test="position() != last()">
    <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
  </xsl:if>
</xsl:for-each>
<xsl:text disable-output-escaping='yes'>&amp;filter=</xsl:text>
</xsl:variable>

<!-- *** adv_search_url: search? + $search_url + as_q=$q *** -->
<xsl:variable name="adv_search_url"><xsl:value-of
  select="$gsa_search_root_path_prefix"/>?<xsl:value-of
  select="$search_url_no_dnavs"/>&amp;proxycustom=&lt;ADVANCED/&gt;</xsl:variable>

<!-- *** exclude_apps: stores the value of exclude_apps query string argument,
    if present. A value of '1' indicates that segmented UI should be
    displayed. Value of '0' indicates that normal blended results UI should be
    displayed. -->
<xsl:variable name="exclude_apps">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[@name='exclude_apps']">
    <xsl:value-of select="/GSP/PARAM[@name='exclude_apps']/@original_value" />
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="'1'" />
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** only_apps: A value of '1' indicates returning only Google Apps
   results. -->
<xsl:variable name="only_apps">
<xsl:value-of select="/GSP/PARAM[@name='only_apps']/@original_value"/>
</xsl:variable>

<!-- *** db_url_protocol: googledb:// *** -->
<xsl:variable name="db_url_protocol">googledb://</xsl:variable>

<!-- *** googleconnector_protocol: googleconnector:// *** -->
<xsl:variable name="googleconnector_protocol">googleconnector://</xsl:variable>

<!-- *** dbconnector_protocol: dbconnector:// *** -->
<xsl:variable name="dbconnector_protocol">dbconnector://</xsl:variable>

<!-- *** nfs_url_protocol: nfs:// *** -->
<xsl:variable name="nfs_url_protocol">nfs://</xsl:variable>

<!-- *** smb_url_protocol: smb:// *** -->
<xsl:variable name="smb_url_protocol">smb://</xsl:variable>

<!-- *** unc_url_protocol: unc:// *** -->
<xsl:variable name="unc_url_protocol">unc://</xsl:variable>

<!-- *** swr_search_url: search? + $search_url + as_q=$q *** -->
<!-- for secure search no estimates are available(except if Customer enabled them
so we use a sentinel value of -1 for swrnum -->
<xsl:variable name="swr_search_url"><xsl:value-of
  select="$gsa_search_root_path_prefix"/>?<xsl:value-of
  select="$search_url_no_dnavs"/>&amp;swrnum=<xsl:choose>
  <xsl:when test="((($access = 'a') or ($access = 's')) and /GSP/RES/M = '')">
    <xsl:value-of select="-1"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="/GSP/RES/M"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** analytics_script_url: https://www.google-analytics.com/ga.js *** -->
<xsl:variable
name="analytics_script_url">https://www.google-analytics.com/ga.js</xsl:variable>

<!-- **********************************************************************
Search Parameters (do not customize)
   ********************************************************************** -->

<!-- *** num_results: actual num_results per page *** -->
<xsl:variable name="num_results">
<xsl:choose>
  <xsl:when test="count(/GSP/PARAM[(@name='num')]) &gt; 1">
    <xsl:value-of select="/GSP/PARAM[(@name='num')][last()]/@value"/>
  </xsl:when>
  <xsl:when test="/GSP/PARAM[(@name='num') and (@value!='')]">
    <xsl:value-of select="/GSP/PARAM[@name='num']/@value"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="10"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** form_params: parameters carried by the search input form *** -->
<xsl:template name="form_params">
<xsl:for-each
  select="PARAM[@name != 'q' and
                @name != 'ie' and
                not(contains(@name, 'as_')) and
                @name != 'btnG' and
                @name != 'btnG.x' and
                @name != 'btnG.y' and
                @name != 'btnI' and
                @name != 'site' and
                @name != 'filter' and
                @name != 'swrnum' and
                @name != 'start' and
                @name != 'access' and
                @name != $embedded_mode_root_path_param and
                @name != $embedded_mode_resource_root_path_param and
                @name != $embedded_mode_disable_style and
                @name != 'ip' and
                @name != 'entqr' and
                @name != 'entqrm' and
                @name != 'ulang' and
                @name != 'dnavs' and
                @name != 'tlen' and
                @name != 'exclude_apps' and
                @name != 'only_apps_deb' and
                @name != 'requiredfields' and
                @name != 'partialfields' and
                (@name != 'epoch' or $is_test_search != '') and
                not(starts-with(@name ,'metabased_'))]">
      <input type="hidden" name="{@name}" value="{@value}" />

    <xsl:if test="@name = 'oe'">
      <input type="hidden" name="ie" value="{@value}" />
    </xsl:if>
  <xsl:text>
  </xsl:text>
</xsl:for-each>


<xsl:if test="not(/GSP/PARAM[@name='only_apps'])">
  <!-- Always provide a value for the exclude_apps hidden field
       if only_apps param is not present. -->
  <input type="hidden" name="exclude_apps" value="{$exclude_apps}" />
</xsl:if>

<xsl:if test="$search_collections_xslt = '' and PARAM[@name='site']">
  <input type="hidden" name="site" value="{PARAM[@name='site']/@value}"/>
</xsl:if>
<xsl:if test="$res_title_length != $res_title_length_default">
  <input type="hidden" name="tlen" value="{$res_title_length}"/>
</xsl:if>

  <input type="hidden" name="filter" value="0" />

</xsl:template>

<!-- *** original query without any dynamic navigation filters *** -->
<xsl:variable name="qval">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[@name='dnavs']">
    <xsl:value-of select="concat(substring-before(/GSP/Q,
      /GSP/PARAM[@name='dnavs']/@value), ' ', substring-after(/GSP/Q,
      /GSP/PARAM[@name='dnavs']/@value))"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="/GSP/Q"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<xsl:variable name="original_q">
<xsl:choose>
  <xsl:when test="count(/GSP/PARAM[@name='dnavs']) > 0">
    <xsl:value-of
      select="substring-before(/GSP/PARAM[@name='q']/@original_value,
      concat('+', /GSP/PARAM[@name='dnavs']/@original_value))"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="/GSP/PARAM[@name='q']/@original_value"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- *** space_normalized_query: q = /GSP/Q *** -->
<xsl:variable name="space_normalized_query">
<xsl:value-of select="normalize-space($qval)"
  disable-output-escaping="yes"/>
</xsl:variable>

<!-- *** stripped_search_query: q, as_q, ... for cache highlight *** -->
<xsl:variable name="stripped_search_query"><xsl:for-each
select="/GSP/PARAM[(@name = 'q') or
                   (@name = 'as_q') or
                   (@name = 'as_oq') or
                   (@name = 'as_epq')]"><xsl:value-of select="@original_value"
/><xsl:if test="position() != last()"
  ><xsl:text disable-output-escaping="yes">+</xsl:text
   ></xsl:if></xsl:for-each>
</xsl:variable>
<xsl:variable name="stripped_sanitized_search_query">
<xsl:call-template name="js_escape">
  <xsl:with-param name="string" select="$stripped_search_query"/>
  <xsl:with-param name="slash_mode" select='"0"'/>
</xsl:call-template>
</xsl:variable>

<xsl:variable name="access">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[(@name='access') and ((@value='s') or (@value='a'))]">
    <xsl:value-of select="/GSP/PARAM[@name='access']/@original_value"/>
  </xsl:when>
  <xsl:otherwise>p</xsl:otherwise>
</xsl:choose>
</xsl:variable>

<!-- **********************************************************************
Script to get current page.
   ********************************************************************** -->
<xsl:template name="search_home_script">
<script type="text/javascript">
function getHomeUrl() {
  return location.href = "/ealerts?shu=" + escape(document.location.href);
}
</script>
</xsl:template>

<!-- **********************************************************************
Shown sign-in/sign-out links at the top of the /search page
   ********************************************************************** -->

<xsl:template name="sign_in">
  <xsl:call-template name="search_home_script"/>
  <div class="personalization" width="100%" align="right">
   <xsl:text disable-output-escaping='yes'>&lt;a href='javascript:getHomeUrl();'&gt;My Alerts&lt;/a&gt;</xsl:text>
  </div>
</xsl:template>

<xsl:template name="signed_in">
<xsl:call-template name="search_home_script"/>
<div class="personalization" width="100%" align="right">
  <b><xsl:value-of select="/GSP/LOGIN" /></b> |
   <xsl:text disable-output-escaping='yes'>&lt;a href='javascript:getHomeUrl();'&gt;My Alerts&lt;/a&gt;</xsl:text> |
   <xsl:text disable-output-escaping='yes'>&lt;a href='/uam?action=Logout'&gt;Sign Out&lt;/a&gt;</xsl:text>
</div>
</xsl:template>

<xsl:template name="personalization">
<xsl:if test="$show_alerts2 = '1'">
<xsl:choose>
 <xsl:when test="/GSP/PERSONALIZATION">
  <xsl:choose>
    <xsl:when test="/GSP/LOGIN"><xsl:call-template name="signed_in"/></xsl:when>
    <xsl:otherwise><xsl:call-template name="sign_in" /></xsl:otherwise>
  </xsl:choose>
 </xsl:when>
</xsl:choose>
</xsl:if>
</xsl:template>

<xsl:template name="doc_type">
<xsl:text disable-output-escaping="yes">
&lt;!DOCTYPE html&gt;
</xsl:text>
</xsl:template>

<!-- **********************************************************************
Figure out what kind of page this is (do not customize)
   ********************************************************************** -->
<xsl:template match="GSP">
<xsl:choose>
  <!-- Expert Search - return the expert search results for widget view
       if the current query is for the same. -->
  <xsl:when test="$show_expert_search_widget_view_results = '1'">
    <xsl:call-template name="render_expert_search_results">
      <xsl:with-param name="src_prefix"
          select="concat($gsa_search_root_path_prefix, '?')" />
      <xsl:with-param name="current_search_query_args"
          select="$search_url" />
      <xsl:with-param name="msg_expert_search_no_experts_found"
          select="$msg_expert_search_no_experts_found" />
      <xsl:with-param name="msg_expert_search_switch_to_expanded_mode"
          select="$msg_expert_search_switch_to_expanded_mode" />
      <xsl:with-param name="msg_results_page_number_prefix"
          select="$msg_results_page_number_prefix" />
      <xsl:with-param name="msg_go_to_previous_page"
          select="$msg_go_to_previous_page" />
      <xsl:with-param name="msg_go_to_next_page"
          select="$msg_go_to_next_page" />
      <xsl:with-param name="msg_previous_page_action"
          select="$msg_previous_page_action" />
      <xsl:with-param name="msg_next_page_action"
          select="$msg_next_page_action" />
    </xsl:call-template>
  </xsl:when>
  <xsl:when test="$only_apps = '1' and $show_apps_segmented_ui = '1'">
    <xsl:call-template name="apps_only_search_results"/>
  </xsl:when>
  <xsl:when test="Q">
    <xsl:choose>
      <xsl:when test="($swrnum != 0) or
        (($swrnum = '-1') and (($access = 'a') or ($access = 's')))">
        <xsl:call-template name="swr_search"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="search_results"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:when>
  <xsl:when test="CACHE">
    <xsl:choose>
      <xsl:when test="$show_res_cache!='0'">
        <xsl:call-template name="cached_page"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="no_RES"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:when>
  <xsl:when test="CUSTOM/HOME">
    <xsl:call-template name="front_door"/>
  </xsl:when>
  <xsl:when test="CUSTOM/ADVANCED">
    <xsl:call-template name="advanced_search"/>
  </xsl:when>
  <xsl:when test="ERROR">
    <xsl:call-template name="error_page">
      <xsl:with-param name="errorMessage" select="$server_error_msg_text"/>
      <xsl:with-param name="errorDescription" select="$server_error_des_text"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:call-template name="error_page">
      <xsl:with-param name="errorMessage" select="$xml_error_msg_text"/>
      <xsl:with-param name="errorDescription" select="$xml_error_des_text"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<!-- **********************************************************************
Cached page (do not customize)
   ********************************************************************** -->
<xsl:template name="cached_page">
<xsl:variable name="cached_page_url" select="CACHE/CACHE_URL"/>
<xsl:variable name="cached_page_html" select="CACHE/CACHE_HTML"/>

<!-- *** decide whether to load html page or pdf file *** -->
<xsl:if test="'.pdf' != substring($cached_page_url,
            1 + string-length($cached_page_url) - string-length('.pdf')) and
            not(starts-with($cached_page_url, $db_url_protocol)) and
            not(starts-with($cached_page_url, $nfs_url_protocol)) and
            not(starts-with($cached_page_url, $smb_url_protocol)) and
            not(starts-with($cached_page_url, $unc_url_protocol))">
  <base href="{$cached_page_url}"/>
</xsl:if>

<!-- *** display cache page header *** -->
<xsl:call-template name="cached_page_header">
<xsl:with-param name="cached_page_url" select="$cached_page_url"/>
</xsl:call-template>

<!-- *** display cached contents *** -->
<xsl:value-of select="$cached_page_html" disable-output-escaping="yes"/>
</xsl:template>

<xsl:template name="escape_quot">
<xsl:param name="string"/>
<xsl:call-template name="replace_string">
  <xsl:with-param name="find" select="'&quot;'"/>
  <xsl:with-param name="replace" select="'&amp;quot;'"/>
  <xsl:with-param name="string" select="$string"/>
</xsl:call-template>
</xsl:template>

<!-- Escapes single quote, double quotes, < and > characters. -->
<xsl:template name="js_escape">
<xsl:param name="string"/>
<xsl:param name="slash_mode"/>
<xsl:variable name="without_slash">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select='"\"'/>
    <xsl:with-param name="replace" select='"\\"'/>
    <xsl:with-param name="string" select="$string"/>
  </xsl:call-template>
</xsl:variable>
<xsl:choose>
  <xsl:when test="$slash_mode = '1'">
    <xsl:variable name="without_slash_apos">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select='"&apos;"'/>
        <xsl:with-param name="replace" select='"\&apos;"'/>
        <xsl:with-param name="string" select="$without_slash"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="without_slash_apos_double_quotes">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select="'&quot;'"/>
        <xsl:with-param name="replace" select="'\&quot;'"/>
        <xsl:with-param name="string" select="$without_slash_apos"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="without_slash_apos_double_quotes_lt">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select='"&lt;"'/>
        <xsl:with-param name="replace" select='"\&lt;"'/>
        <xsl:with-param name="string"
            select="$without_slash_apos_double_quotes"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select='"&gt;"'/>
      <xsl:with-param name="replace" select='"\&gt;"'/>
      <xsl:with-param name="string"
        select="$without_slash_apos_double_quotes_lt"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:variable name="without_slash_apos">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select='"&apos;"'/>
        <xsl:with-param name="replace" select='"&amp;apos;"'/>
        <xsl:with-param name="string" select="$without_slash"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="without_slash_apos_double_quotes">
      <xsl:call-template name="escape_quot">
        <xsl:with-param name="string" select="$without_slash_apos"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="without_slash_apos_double_quotes_lt">
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select='"&lt;"'/>
        <xsl:with-param name="replace" select='"&amp;lt;"'/>
        <xsl:with-param name="string"
          select="$without_slash_apos_double_quotes"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select='"&gt;"'/>
      <xsl:with-param name="replace" select='"&amp;gt;"'/>
      <xsl:with-param name="string"
        select="$without_slash_apos_double_quotes_lt"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<!-- **********************************************************************
Advanced search page (do not customize)
   ********************************************************************** -->
<xsl:template name="advanced_search">

<xsl:variable name="html_escaped_as_q">
  <xsl:call-template name="escape_quot">
    <xsl:with-param name="string">
      <xsl:choose>
        <xsl:when test="/GSP/PARAM[@name='dnavs']">
          <xsl:value-of select="substring-before(/GSP/PARAM[@name='q']/@value,
            /GSP/PARAM[@name='dnavs']/@value)"/>
        </xsl:when>
        <xsl:otherwise><xsl:value-of select="/GSP/PARAM[@name='q']/@value"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:with-param>
  </xsl:call-template>
  <xsl:if test="/GSP/PARAM[@name='as_q']/@value">
    <xsl:if test="/GSP/PARAM[@name='q']/@value"> 
      <xsl:value-of select="' '"/>
    </xsl:if>
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_q']/@value"/>
    </xsl:call-template>
  </xsl:if>
</xsl:variable>

<xsl:variable name="html_escaped_as_epq">
  <xsl:call-template name="escape_quot">
    <xsl:with-param name="string" select="/GSP/PARAM[@name='as_epq']/@value"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="html_escaped_as_oq">
  <xsl:call-template name="escape_quot">
    <xsl:with-param name="string" select="/GSP/PARAM[@name='as_oq']/@value"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="html_escaped_as_eq">
  <xsl:call-template name="escape_quot">
    <xsl:with-param name="string" select="/GSP/PARAM[@name='as_eq']/@value"/>
  </xsl:call-template>
</xsl:variable>

<html>
<xsl:attribute name="class">
  <xsl:value-of select="$skin_class"/>
</xsl:attribute>
<xsl:call-template name="langHeadStart"/>
<title><xsl:value-of select="$adv_page_title"/></title>
<xsl:call-template name="style"/>

<!-- script type="text/javascript" -->
<script>
<xsl:comment>
function setFocus() {
document.f.as_q.focus(); }
function esc(x){
x = escape(x).replace(/\+/g, "%2b");
if (x.substring(0,2)=="\%u") x="";
return x;
}
function collecturl(target, custom) {
var p = new Array();var i = 0;var url="";var z = document.f;
if (z.as_q.value.length) {p[i++] = 'as_q=' + esc(z.as_q.value);}
if (z.as_epq.value.length) {p[i++] = 'as_epq=' + esc(z.as_epq.value);}
if (z.as_oq.value.length) {p[i++] = 'as_oq=' + esc(z.as_oq.value);}
if (z.as_eq.value.length) {p[i++] = 'as_eq=' + esc(z.as_eq.value);}
if (z.as_sitesearch.value.length)
{p[i++]='as_sitesearch='+esc(z.as_sitesearch.value);}
if (z.as_lq.value.length) {p[i++] = 'as_lq=' + esc(z.as_lq.value);}
if (z.as_occt.options[z.as_occt.selectedIndex].value.length)
{p[i++]='as_occt='+esc(z.as_occt.options[z.as_occt.selectedIndex].value);}
if (z.as_dt.options[z.as_dt.selectedIndex].value.length)
{p[i++]='as_dt='+esc(z.as_dt.options[z.as_dt.selectedIndex].value);}
if (z.lr.options[z.lr.selectedIndex].value != '') {p[i++] = 'lr=' +
z.lr.options[z.lr.selectedIndex].value;}
if (z.num.options[z.num.selectedIndex].value != '10')
{p[i++] = 'num=' + z.num.options[z.num.selectedIndex].value;}
if (z.sort.options[z.sort.selectedIndex].value != '')
{p[i++] = 'sort=' + z.sort.options[z.sort.selectedIndex].value;}
if (typeof(z.client) != 'undefined')
{p[i++] = 'client=' + esc(z.client.value);}
if (typeof(z.site) != 'undefined')
{p[i++] = 'site=' + esc(z.site.value);}
if (typeof(z.output) != 'undefined')
{p[i++] = 'output=' + esc(z.output.value);}
if (typeof(z.proxystylesheet) != 'undefined')
{p[i++] = 'proxystylesheet=' + esc(z.proxystylesheet.value);}
if (typeof(z.ie) != 'undefined')
{p[i++] = 'ie=' + esc(z.ie.value);}
if (typeof(z.oe) != 'undefined')
{p[i++] = 'oe=' + esc(z.oe.value);}

if (typeof(z.access) != 'undefined')
{p[i++] = 'access=' + esc(z.access.value);}
if (custom != '')
{p[i++] = 'proxycustom=' + '&lt;ADVANCED/&gt;';}
if (p.length &gt; 0) {
url = p[0];
for (var j = 1; j &lt; p.length; j++) { url += "&amp;" + p[j]; }}
location.href = target + '?' + url;
}
// </xsl:comment>
</script>

<xsl:call-template name="langHeadEnd"/>

<body onload="setFocus()">
  <xsl:attribute name="class">
  <xsl:value-of select="'clearfix'"/>
  </xsl:attribute>
  <xsl:attribute name="dir">ltr</xsl:attribute>
  <div id="container" class="schoolpage">
  <!-- *** Customer's own advanced search page header *** -->
  <xsl:if test="$choose_adv_search_page_header = 'mine' or
                  $choose_adv_search_page_header = 'both'">
    <xsl:call-template name="header_element"/>
  <xsl:call-template name="main_content_wrapper_start"/>
  </xsl:if>
  <div class="main-content">
  <xsl:call-template name="personalization"/>
  <xsl:call-template name="analytics"/>

  <!--====Advanced Search Header======-->
  <xsl:if test="$choose_adv_search_page_header = 'provided' or
                  $choose_adv_search_page_header = 'both'">
    <xsl:call-template name="advanced_search_header"/>
  </xsl:if>
  <xsl:call-template name="top_sep_bar">
    <xsl:with-param name="text" select="$sep_bar_adv_text"/>
    <xsl:with-param name="show_info" select="0"/>
    <xsl:with-param name="time" select="0"/>
  </xsl:call-template>

  <!--====Carry over Search Parameters======-->
  <form method="get" action="search" name="f">
    <xsl:if test="PARAM[@name='client']">
      <input type="hidden" name="client"
        value="{PARAM[@name='client']/@value}" />
    </xsl:if>
  <!--==== site is carried over in the drop down if the menu is used =====-->
    <xsl:if test="$search_collections_xslt = '' and PARAM[@name='site']">
      <input type="hidden" name="site" value="{PARAM[@name='site']/@value}"/>
    </xsl:if>
    <xsl:if test="PARAM[@name='output']">
      <input type="hidden" name="output"
        value="{PARAM[@name='output']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='proxystylesheet']">
      <input type="hidden" name="proxystylesheet"
        value="{PARAM[@name='proxystylesheet']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='ie']">
      <input type="hidden" name="ie"
        value="{PARAM[@name='ie']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='oe']">
      <input type="hidden" name="oe"
        value="{PARAM[@name='oe']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='hl']">
      <input type="hidden" name="hl"
        value="{PARAM[@name='hl']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='getfields']">
      <input type="hidden" name="getfields"
        value="{PARAM[@name='getfields']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='requiredfields']">
      <input type="hidden" name="requiredfields"
        value="{PARAM[@name='requiredfields']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='partialfields']">
      <input type="hidden" name="partialfields"
        value="{PARAM[@name='partialfields']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='exclude_apps']">
      <input type="hidden" name="exclude_apps"
        value="{PARAM[@name='exclude_apps']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='only_apps']">
      <input type="hidden" name="only_apps"
        value="{PARAM[@name='only_apps']/@value}" />
    </xsl:if>
    <xsl:if test="PARAM[@name='ulang']">
      <input type="hidden" name="ulang"
        value="{PARAM[@name='ulang']/@value}" />
    </xsl:if>

    <!--====Advanced Search Options======-->
    <div id="advanced-search-options-div">
      
    </div>
    <table cellspacing="0" cellpadding="3" border="0" width="100%">
      <tr bgcolor="{$adv_search_panel_bgcolor}">
        <td>
          <table width="100%" cellspacing="0" cellpadding="0" border="0">
            <tr bgcolor="{$adv_search_panel_bgcolor}">
              <td>
                <table width="100%" cellspacing="0" cellpadding="2"
                border="0">
                  <tr>
                    <td valign="top" width="15%"><br />
                    <b>Find results</b></td>

                    <td width="85%">
                      <table width="100%" cellpadding="2"
                      border="0" cellspacing="0">
                        <tr>
                          <td><font size="-1">with <b>all</b> of the words</font></td>

                          <td>
                          <xsl:text disable-output-escaping="yes">
                           &lt;input type=&quot;text&quot;
                           name=&quot;as_q&quot;
                           size=&quot;25&quot; value=&quot;</xsl:text>
                          <xsl:value-of disable-output-escaping="yes"
                           select="$html_escaped_as_q"/>
                          <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>

                          <script type="text/javascript">
                            <xsl:comment>
                              document.f.as_q.focus();
                            // </xsl:comment>
                          </script>
                          </td>

                          <td valign="top" rowspan="4">
                          <font size="-1">
                          <select name="num">
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value!='10')]">
                                <option value="10">10 results</option>
                              </xsl:when>
                              <xsl:otherwise>
                                <option value="10" selected="selected">10 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value='20')]">
                                <option value="20" selected="selected">20 results</option>
                              </xsl:when>
                                <xsl:otherwise>
                                  <option value="20">20 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value='30')]">
                                <option value="30" selected="selected">30 results</option>
                              </xsl:when>
                              <xsl:otherwise>
                                <option value="30">30 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value='50')]">
                                <option value="50" selected="selected">50 results</option>
                              </xsl:when>
                              <xsl:otherwise>
                                <option value="50">50 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                            <xsl:choose>
                              <xsl:when test="PARAM[(@name='num') and (@value='100')]">
                                <option value="100" selected="selected">100 results</option>
                              </xsl:when>
                              <xsl:otherwise>
                                <option value="100">100 results</option>
                              </xsl:otherwise>
                            </xsl:choose>
                          </select>
                          </font>
                          </td>
                          <xsl:call-template name="collection_menu"/>
                          <td>
                          <font size="-1">
                          <input type="submit" name="btnG"
                            value="{$search_button_text}" />
                          </font>
                          </td>
                        </tr>

                        <tr>
                          <td nowrap="nowrap"><font size="-1">with the <b>exact phrase</b></font></td>

                          <td>
                          <xsl:text disable-output-escaping="yes">

                           &lt;input type=&quot;text&quot;
                           name=&quot;as_epq&quot;
                           size=&quot;25&quot; value=&quot;</xsl:text>
                          <xsl:value-of disable-output-escaping="yes"
                           select="$html_escaped_as_epq"/>
                          <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                          </td>
                        </tr>

                        <tr>
                          <td nowrap="nowrap"><font size="-1">with <b>at least one</b> of the words</font></td>

                          <td>
                          <xsl:text disable-output-escaping="yes">

                           &lt;input type=&quot;text&quot;
                           name=&quot;as_oq&quot;
                           size=&quot;25&quot; value=&quot;</xsl:text>
                          <xsl:value-of disable-output-escaping="yes"
                           select="$html_escaped_as_oq"/>
                          <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                          </td>
                        </tr>

                        <tr>
                          <td nowrap="nowrap"><font size="-1"><b>without</b> the words</font></td>

                          <td>
                          <xsl:text disable-output-escaping="yes">

                           &lt;input type=&quot;text&quot;
                           name=&quot;as_eq&quot;
                           size=&quot;25&quot; value=&quot;</xsl:text>
                          <xsl:value-of disable-output-escaping="yes"
                           select="$html_escaped_as_eq"/>
                          <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                          </td>
                        </tr>
                      </table>
                    </td>
                  </tr>
                </table>
              </td>
            </tr>

            <tr bgcolor="{$global_bg_color}">
              <td>
                <table width="100%" cellspacing="0"
                cellpadding="2" border="0">
                  <tr>
                    <td width="15%"><font size="-1"><b>Language</b></font></td>

                    <td width="40%"><font size="-1">Return pages written in</font></td>

                    <td><font size="-1">



                       <xsl:choose>
                      <xsl:when test="PARAM[(@name='oe') and (@value!='')]">
                        <xsl:text disable-output-escaping="yes">&lt;select name=&quot;lr&quot;&gt;</xsl:text>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text disable-output-escaping="yes">&lt;select name=&quot;lr&quot; onchange=&quot;javascript:collecturl('search', 'adv');&quot;&gt;</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>

                      <option value="">any language</option>

                      <!--====IMPORTANT: This is not a Message. This is a placeholder.======-->
                      
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ar')]">
     <option value="lang_ar"
     selected="selected">Arabic</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ar">Arabic</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-CN')]">
     <option value="lang_zh-CN"
     selected="selected">Chinese (Simplified)</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_zh-CN">Chinese (Simplified)</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-TW')]">
     <option value="lang_zh-TW"
     selected="selected">Chinese (Traditional)</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_zh-TW">Chinese (Traditional)</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_cs')]">
     <option value="lang_cs"
     selected="selected">Czech</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_cs">Czech</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_da')]">
     <option value="lang_da"
     selected="selected">Danish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_da">Danish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_nl')]">
     <option value="lang_nl"
     selected="selected">Dutch</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_nl">Dutch</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_en')]">
     <option value="lang_en"
     selected="selected">English</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_en">English</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_et')]">
     <option value="lang_et"
     selected="selected">Estonian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_et">Estonian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_fi')]">
     <option value="lang_fi"
     selected="selected">Finnish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_fi">Finnish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_fr')]">
     <option value="lang_fr"
     selected="selected">French</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_fr">French</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_de')]">
     <option value="lang_de"
     selected="selected">German</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_de">German</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_el')]">
     <option value="lang_el"
     selected="selected">Greek</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_el">Greek</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_iw')]">
     <option value="lang_iw"
     selected="selected">Hebrew</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_iw">Hebrew</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_hu')]">
     <option value="lang_hu"
     selected="selected">Hungarian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_hu">Hungarian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_is')]">
     <option value="lang_is"
     selected="selected">Icelandic</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_is">Icelandic</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_it')]">
     <option value="lang_it"
     selected="selected">Italian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_it">Italian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ja')]">
     <option value="lang_ja"
     selected="selected">Japanese</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ja">Japanese</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ko')]">
     <option value="lang_ko"
     selected="selected">Korean</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ko">Korean</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_lv')]">
     <option value="lang_lv"
     selected="selected">Latvian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_lv">Latvian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_lt')]">
     <option value="lang_lt"
     selected="selected">Lithuanian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_lt">Lithuanian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_no')]">
     <option value="lang_no"
     selected="selected">Norwegian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_no">Norwegian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_pl')]">
     <option value="lang_pl"
     selected="selected">Polish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_pl">Polish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_pt')]">
     <option value="lang_pt"
     selected="selected">Portuguese</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_pt">Portuguese</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ro')]">
     <option value="lang_ro"
     selected="selected">Romanian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ro">Romanian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_ru')]">
     <option value="lang_ru"
     selected="selected">Russian</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_ru">Russian</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_es')]">
     <option value="lang_es"
     selected="selected">Spanish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_es">Spanish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_sv')]">
     <option value="lang_sv"
     selected="selected">Swedish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_sv">Swedish</option>
     </xsl:otherwise>
    </xsl:choose>

    
    <xsl:choose>
     <xsl:when test="PARAM[(@name='lr') and (@value='lang_tr')]">
     <option value="lang_tr"
     selected="selected">Turkish</option>
     </xsl:when>
     <xsl:otherwise>
     <option value="lang_tr">Turkish</option>
     </xsl:otherwise>
    </xsl:choose>


                    <xsl:text disable-output-escaping="yes">&lt;/select&gt;</xsl:text>
                    </font></td>
                  </tr>
                </table>
              </td>
            </tr>

            <tr bgcolor="{$global_bg_color}">
              <td>
                <table width="100%" cellpadding="2"
                cellspacing="0" border="0">
                  <tr>
                    <td width="15%"><font size="-1"><b>File Format</b></font></td>

                    <td width="40%" nowrap="nowrap"><font size="-1"><select name="as_ft">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_ft') and (@value='i')]">
                          <option value="i" selected="selected">Only</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="i">Only</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_ft') and (@value='e')]">
                          <option value="e" selected="selected">Don't</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="e">Don't</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select>return results of the file format</font>
                    </td>

                    <td><font size="-1">
                    <select name="as_filetype">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value!='')]">
                          <option value="">any format</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="" selected="selected">any format</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='pdf')]">
                          <option value="pdf" selected="selected">Adobe Acrobat PDF (.pdf)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="pdf">Adobe Acrobat PDF (.pdf)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='ps')]">
                          <option value="ps" selected="selected">Adobe Postscript (.ps)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="ps">Adobe Postscript (.ps)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='doc')]">
                          <option value="doc" selected="selected">Microsoft Word (.doc)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="doc">Microsoft Word (.doc)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='docx')]">
                          <option value="docx" selected="selected">Microsoft Word (.docx)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="docx">Microsoft Word (.docx)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='xls')]">
                          <option value="xls" selected="selected">Microsoft Excel (.xls)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="xls">Microsoft Excel (.xls)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='xlsx')]">
                          <option value="xlsx" selected="selected">Microsoft Excel (.xlsx)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="xlsx">Microsoft Excel (.xlsx)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='ppt')]">
                          <option value="ppt" selected="selected">Microsoft Powerpoint (.ppt)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="ppt">Microsoft Powerpoint (.ppt)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='pptx')]">
                          <option value="pptx" selected="selected">Microsoft Powerpoint (.pptx)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="pptx">Microsoft Powerpoint (.pptx)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_filetype') and (@value='rtf')]">
                          <option value="rtf" selected="selected">Rich Text Format (.rtf)</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="rtf">Rich Text Format (.rtf)</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select>
                    </font></td>
                  </tr>
                </table>
              </td>
            </tr>

            <tr bgcolor="{$global_bg_color}">
              <td>
                <table width="100%" cellspacing="0"
                cellpadding="2" border="0">
                  <tr>
                    <td width="15%"><font size="-1"><b>Occurrences</b></font></td>

                    <td nowrap="nowrap" width="40%"><font size="-1">Return results where my terms occur</font></td>

                    <td><font size="-1"><select
                    name="as_occt">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_occt') and (@value!='any')]">
                          <option value="any"> anywhere in the page </option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="any" selected="selected">
                            anywhere in the page
                          </option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_occt') and (@value='title')]">
                          <option value="title" selected="selected">in the title of the page</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="title">in the title of the page</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_occt') and (@value='url')]">
                          <option value="url" selected="selected">in the URL of the page</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="url">in the URL of the page</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select></font></td>
                  </tr>
                </table>
              </td>
            </tr>

            <tr bgcolor="{$global_bg_color}">
              <td>
                <table width="100%" cellpadding="2"
                cellspacing="0" border="0">
                  <tr>
                    <td width="15%"><font size="-1"><b>Domain</b></font></td>

                    <td width="40%" nowrap="nowrap"><font size="-1"><select
                    name="as_dt">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_dt') and (@value='i')]">
                          <option value="i" selected="selected">Only</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="i">Only</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='as_dt') and (@value='e')]">
                          <option value="e" selected="selected">Don't</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="e">Don't</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select>return results from the site or domain</font></td>

                    <td>
                      <table cellpadding="0" cellspacing="0"
                      border="0">
                        <tr>
                          <td>
                            <xsl:choose>
                              <xsl:when test="PARAM[@name='as_sitesearch']">
                                <input type="text" size="25"
                                value="{PARAM[@name='as_sitesearch']/@value}"
                                name="as_sitesearch" />
                              </xsl:when>
                              <xsl:otherwise>
                                <input type="text" size="25" value="" name="as_sitesearch" />
                              </xsl:otherwise>
                            </xsl:choose>
                          </td>
                        </tr>

                        <tr>
                          <td valign="top" nowrap="nowrap"><font size="-1">
                            <i>e.g. google.com, .org</i></font></td>
                        </tr>
                      </table>
                    </td>
                  </tr>

                  <!-- Sort by Date feature -->
                  <tr>
                    <td width="15%"><font size="-1"><b>Sort</b></font></td>

                    <td colspan="2" nowrap="nowrap"><font size="-1"><select
                    name="sort">
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='sort') and (@value='')]">
                          <option value="" selected="selected">Sort by relevance</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="">Sort by relevance</option>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="PARAM[(@name='sort') and (@value='date:D:S:d1')]">
                          <option value="date:D:S:d1" selected="selected">Sort by date</option>
                        </xsl:when>
                        <xsl:otherwise>
                          <option value="date:D:S:d1">Sort by date</option>
                        </xsl:otherwise>
                      </xsl:choose>
                    </select></font></td>
                  </tr>
                  <!-- Secure Search feature -->
                  <xsl:if test="$show_secure_radio != '0'">

                  <tr>
                    <td width="15%"><font size="-1"><b>Security</b></font></td>

                    <td colspan="2" nowrap="nowrap"><font size="-1">
                      <xsl:if test="$skin_class = 'skinned'">
                        <xsl:choose>
                        <xsl:when test="$access='p'">
                          <label><input type="radio" name="access" value="p" checked="checked" />Search public content only</label>
                        </xsl:when>
                        <xsl:otherwise>
                          <label><input type="radio" name="access" value="p"/>Search public content only</label>
                        </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="$access='a'">
                            <label><input type="radio" name="access" value="a" checked="checked" />Search public and secure content (login required)</label>
                          </xsl:when>
                        <xsl:otherwise>
                          <label><input type="radio" name="access" value="a"/>Search public and secure content (login required)</label>
                        </xsl:otherwise>
                        </xsl:choose>
                      </xsl:if>
                    </font></td>
                  </tr>
                  </xsl:if>
                </table>
              </td>
            </tr>

          </table>
        </td>
      </tr>
    </table>
    <br />
    <br />

    <!--====Page-Specific Search======-->
    <div id="page-specific-search-div">
      <b>Page-Specific Search</b>
    </div>
    <table cellspacing="0" cellpadding="3" border="0" width="100%">
      <tr bgcolor="{$adv_search_panel_bgcolor}">
        <td>
          <table width="100%" cellpadding="0" cellspacing="0"
          border="0">
            <tr bgcolor="{$adv_search_panel_bgcolor}">
              <td>

                <table width="100%" cellpadding="2"
                cellspacing="0" border="0">
                <form method="get" action="search" name="h">

                  <tr bgcolor="{$global_bg_color}">
                    <td width="15%"><font size="-1"><b>Links</b></font></td>

                    <td width="40%" nowrap="nowrap"><font size="-1">Find pages that link to the page</font> </td>

                    <td nowrap="nowrap">
                        <xsl:choose>
                          <xsl:when test="PARAM[@name='as_lq']">
                            <input type="text" size="30"
                             value="{PARAM[@name='as_lq']/@value}"
                                     name="as_lq" />
                        </xsl:when>
                        <xsl:otherwise>
                          <input type="text" size="30" value="" name="as_lq" />
                        </xsl:otherwise>
                      </xsl:choose>
                      <font size="-1">
                      <input type="submit" name="btnG" value="{$search_button_text}" /></font>
                    </td>
                  </tr>
                </form>
                </table>
              </td>
            </tr>
          </table>
        </td>
      </tr>
    </table>

    <xsl:call-template name="copyright"/>

  </form>

  <!-- *** Customer's own advanced search page footer *** -->
</div>
<xsl:call-template name="footer_element"/>
<!-- *** Customer's own advanced search page header *** -->
  <xsl:if test="$choose_adv_search_page_header = 'mine' or
                  $choose_adv_search_page_header = 'both'">
  <xsl:call-template name="main_content_wrapper_end"/>
  </xsl:if>
</div>
</body>
</html>
</xsl:template>

<!-- **********************************************************************
Resend query with filter=p to disable path_filtering
if there is only one result cluster (do not customize)
   ********************************************************************** -->
<xsl:template name="redirect_if_few_results">
<xsl:variable name="count" select="count(/GSP/RES/R)"/>
<xsl:variable name="start" select="/GSP/RES/@SN"/>
<xsl:variable name="filterall"
  select="count(/GSP/PARAM[@name='filter']) = 0"/>
<xsl:variable name="filter" select="/GSP/PARAM[@name='filter']/@value"/>

</xsl:template>

<!-- **********************************************************************
Google Apps search results (do not customize)
   ********************************************************************** -->
<xsl:template name="apps_only_search_results">
<html>
  <xsl:attribute name="class">
  <xsl:value-of select="$skin_class"/>
  </xsl:attribute>
<script>
  <xsl:comment>
    /**
     * Initializes the Google Apps results section by notifying the parent
     * document containing the iframe container. The results are passed to
     * the parent iframe container so that it can display the same in the
     * 'div' section reserved for Google Apps results section.
     */
    function initGoogleApps() {
      <xsl:choose>
        <xsl:when test="RES/R">
          var isNextRes = '<xsl:value-of select="/GSP/RES/NB/NU" />';
          var isPrevRes = '<xsl:value-of select="/GSP/RES/NB/PU" />';
          var topNavHtml =
              document.getElementById('top-navigation-html').innerHTML;
          var btmNavHtml =
              document.getElementById('bottom-navigation-html').innerHTML;
          var btmSearchBoxHtml =
              document.getElementById('bottom-search-box-html').innerHTML;
          var resultsDiv = document.getElementById('apps-results-container');
          var resultsContent = resultsDiv.innerHTML;
          resultsDiv.innerHTML = '';
          window.parent.displayGoogleAppsResults(
              true, resultsContent, isNextRes, isPrevRes, topNavHtml,
              btmNavHtml, btmSearchBoxHtml);
        </xsl:when>
        <xsl:otherwise>
          window.parent.displayGoogleAppsResults(false);
        </xsl:otherwise>
      </xsl:choose>
    }
  </xsl:comment>
</script>
<xsl:variable name="only_apps_onload">
  <xsl:if test="not(/GSP/PARAM[(@name='only_apps_deb') and (@value='1')])">
    <xsl:text disable-output-escaping="yes">initGoogleApps();</xsl:text>
  </xsl:if>
</xsl:variable>
<body onload="{$only_apps_onload}">
  <xsl:attribute name="class">
  <xsl:value-of select="'clearfix'"/>
  </xsl:attribute>
<div id="container" class="schoolpage">
<div id="apps-results-container main-content">
  <div>
    <div class="sb-r-lbl-apps">Google Apps</div>
    <div>
      <xsl:apply-templates select="RES/R">
        <xsl:with-param name="query" select="Q"/>
      </xsl:apply-templates>

      <xsl:if test="RES/R">
        <div style="display: none;" id="top-navigation-html">
          <xsl:if test="$show_top_navigation != '0'">
            <xsl:call-template name="gen_top_navigation" />
          </xsl:if>
        </div>

        <div style="display: none;" id="bottom-navigation-html">
          <xsl:call-template name="gen_bottom_navigation" />
        </div>

        <div style="display: none;" id="bottom-search-box-html">
          <xsl:if test="$show_bottom_search_box != '0' and RES">
            <xsl:call-template name="bottom_search_box"/>
          </xsl:if>
        </div>
      </xsl:if>
    </div>
  </div>
</div>
</div>
</body>
</html>
</xsl:template>

<!-- **********************************************************************
Search results (do not customize)
   ********************************************************************** -->
<xsl:template name="search_results">
<xsl:call-template name="doc_type"/>
<xsl:if test="$is_embedded_mode != '1'">
<xsl:text disable-output-escaping="yes">&lt;html class=&quot;</xsl:text><xsl:value-of select="$skin_class"/><xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
</xsl:if>

<!-- *** HTML header and style *** -->
<xsl:call-template name="langHeadStart"/>
<xsl:variable name="res_count" select="count(/GSP/RES/R)"/>
  <xsl:call-template name="redirect_if_few_results"/>
  <xsl:choose>
    <xsl:when test="$res_count &gt; 0">
       <title><xsl:value-of select="$result_page_title"/>:
        <xsl:value-of select="$space_normalized_query"/>
      </title>
    </xsl:when>
    <xsl:otherwise>
      <title><xsl:value-of select="$front_page_title"/>:
        <xsl:value-of select="$space_normalized_query"/>
      </title>
    </xsl:otherwise>
  </xsl:choose> 
  <xsl:call-template name="style"/>
  <xsl:choose>
    <xsl:when test="$render_dynamic_navigation = '1' and $show_translation = '1'">
      <script type="text/javascript"
          src="{$gsa_resource_root_path_prefix}/all_js_compiled.js"></script>
    </xsl:when>
    <xsl:when test="$render_dynamic_navigation = '1'">
      <script type="text/javascript"
          src="{$gsa_resource_root_path_prefix}/dyn_nav_compiled.js"></script>
    </xsl:when>
  </xsl:choose>

  <xsl:if test="$render_dynamic_navigation = '1'">
    <script type="text/javascript">
      <xsl:variable name="dnavs_param">
        <xsl:if test="/GSP/PARAM[@name='dnavs']"><xsl:value-of
            select="/GSP/PARAM[@name='dnavs']/@original_value"/></xsl:if>
      </xsl:variable>
      var dynNavMgr = new gsa.search.DynNavManager(
        "<xsl:value-of select="$dnavs_param"/>",
        "<xsl:value-of select="/GSP/PARAM[@name='q']/@original_value"/>",
        "<xsl:value-of select='$original_q'/>",
        "<xsl:value-of select='$no_q_dnavs_params_escaped'/>",
        <xsl:value-of select='/GSP/RES/PARM/PC'/>
      );
    </script>
  </xsl:if>
  <script type="text/javascript">
    <xsl:comment>
      <xsl:if test="$show_sidebar = '1'">
        var LEFT_SIDE_RES_CONTAINER = 'left-side-container';
        var LEFT_BORDER_STYLE = 'sb-r-border';

        /** Container element to hold the sidebar. */
        var SIDEBAR_CONTAINER = 'sidebar-container';
        /** Element for holding all sidebar elements. */
        var SIDEBAR = 'sidebar';
        /** Total elements that should be displayed in the sidebar. */
        var totalSidebarEleToDisplay = 0;
        /** Count of sidebar element(s) that has no results after search. */
        var noResultsFromEleCount = 0;

        /**
         * Initializes the sidebar by loading the appropriate sidebar
         * elements.
         */
        function initSidebar() {
          document.getElementById(SIDEBAR).className = '';
          if (!isLeftResultPresent()) {
            var sidebarContainer = document.getElementById(SIDEBAR_CONTAINER);
            document.getElementById(
                LEFT_SIDE_RES_CONTAINER).style.display = 'none';
            sidebarContainer.className = 'sb-r-alt';
          }
          <xsl:if test="$show_people_search = '1'">
            totalSidebarEleToDisplay++;
          </xsl:if>
          <xsl:if test="$show_apps_segmented_ui = '1'">
            totalSidebarEleToDisplay++;
          </xsl:if>
          <xsl:if test="$show_gss_results = '1'">
            totalSidebarEleToDisplay++;
          </xsl:if>
          // Expert Search - count expert search component as sidebar element.
          <xsl:if test="$is_expert_search_configured = '1'">
            totalSidebarEleToDisplay++;
          </xsl:if>
          // Now bootstrap the actual loading.
          <xsl:if test="$show_people_search = '1'">
            loadPeopleSearchResults();
          </xsl:if>
          <xsl:if test="$show_apps_segmented_ui = '1'">
            loadGoogleAppsResults();
          </xsl:if>
          <xsl:if test="$show_gss_results = '1'">
            loadGssResults();
          </xsl:if>
          // Expert Search - initialize the expert search JS component.
          <xsl:call-template name="include_expert_search_js_init">
            <xsl:with-param name="dom_container"
                select="'exp-results-container'" />
            <xsl:with-param name="script_import" select="'0'" />
          </xsl:call-template>
        }

        /**
         * Notifies that the caller sidebar element is not having results to
         * display.
         */
        function notifyNoResults() {
          noResultsFromEleCount++;
          if (noResultsFromEleCount == totalSidebarEleToDisplay) {
            if (!isLeftResultPresent()) {
              var sidebarContainer =
                  document.getElementById(SIDEBAR_CONTAINER);
              sidebarContainer.style.display = 'none';
              document.getElementById('no-results').style.display = '';
              return true;
            }
          }
          return false;
        }

        /**
         * Notifies that the caller sidebar element is having results to
         * display.
         */
        function notifyResultsPresent() {
          var sidebar = document.getElementById(SIDEBAR);
          if (isLeftResultPresent() &amp;&amp;
              sidebar.className != LEFT_BORDER_STYLE) {
            document.getElementById(SIDEBAR).className = LEFT_BORDER_STYLE;
          }
        }

        /**
         * Checks if the organic results on the left side are present or not.
         */
        function isLeftResultPresent() {
          var leftResContainer = document.getElementById(
              LEFT_SIDE_RES_CONTAINER).getElementsByTagName('div')[0];
          return leftResContainer.childNodes.length != 0 ? true : false;
        }
      </xsl:if>
      <xsl:if test="$show_apps_segmented_ui = '1'">
        var APPS_LOADING_MSG = 'loading-app-results';
        var APPS_RESULTS_CONTAINER = 'apps-results-container';
        var APPS_RESULTS_IFRAME = 'apps-results-iframe';
        var APPS_RESULTS_MSG_CONTAINER = 'apps-results-msg';
        var APPS_RESULTS_SECTION = 'apps-results-section';
        var BOTTOM_SEARCH_BOX = 'bottom-search-box';
        var NEXT_RESULTS_IN_NON_APPS =
            '<xsl:value-of select="/GSP/RES/NB/NU" />';
        var ONLY_APPS_QUERY_PARAM = 'only_apps=1';
        var PREV_RESULTS_IN_NON_APPS =
            '<xsl:value-of select="/GSP/RES/NB/PU" />';

        /**
         * Displays Google Apps results returned from the iframe inside the
         * reserved div. This function is called during the onload event
         * processing of iframe.
         */
        function displayGoogleAppsResults(
            display, opt_resultsContent, opt_isNextRes, opt_isPrevRes,
            opt_topNavHtml, opt_btmNavHtml, opt_btmSearchBoxHtml) {
          document.getElementById(APPS_LOADING_MSG).style.display = 'none';
          if (!display) {
            notifyNoResults();
            return;
          }
          notifyResultsPresent();

          // Replace the existing top/bottom navigation bar if Google Apps
          // is having more results and left side container is having
          // no more results.
          if (!NEXT_RESULTS_IN_NON_APPS &amp;&amp; opt_isNextRes ||
              !PREV_RESULTS_IN_NON_APPS &amp;&amp; opt_isPrevRes) {
            document.getElementById('top-navigation').innerHTML =
                opt_topNavHtml;
            document.getElementById('bottom-navigation').innerHTML =
                opt_btmNavHtml;
          }

          var resultsDiv = document.getElementById(APPS_RESULTS_SECTION);
          resultsDiv.innerHTML = opt_resultsContent;
          resultsDiv.style.display = '';
          if (!isLeftResultPresent()) {
            document.getElementById(BOTTOM_SEARCH_BOX).innerHTML =
                opt_btmSearchBoxHtml;
          }
        }

        /**
         * Loads the Google Apps results if 'exclude_apps' query parameter has
         * been set to '1'. Loading of Google Apps results is done by fetching
         * the results through the hidden iframe 'apps-results-iframe' and
         * setting the returned HTML response in the reserved div
         * 'apps-results-section'.
         */
        function loadGoogleAppsResults() {
          var excludeApps = document.getElementsByName('exclude_apps')[0];
          if (excludeApps.value == '1') {
            var resultsDiv = document.getElementById(APPS_RESULTS_SECTION);
            resultsDiv.style.display = 'none';
            document.getElementById(APPS_LOADING_MSG).style.display = '';
            var appsResContainer =
                document.getElementById(APPS_RESULTS_CONTAINER);
            appsResContainer.style.visibility = 'visible';

            // Compose the URL to be loaded in the Google Apps iframe.
            var url = window.location.href;
            if (url.indexOf('exclude_apps=') > -1) {
              url = url.replace(/exclude_apps=./i, ONLY_APPS_QUERY_PARAM);
            } else {
              url += '&amp;' + ONLY_APPS_QUERY_PARAM;
            }

            document.getElementById(APPS_RESULTS_IFRAME).src = url;
          }
        }
      </xsl:if>
      <xsl:if test="$show_gss_results = '1'">
        var GSS_LOADING_MSG = 'loading-gss-results';
        var GSS_RESULTS_MSG_CONTAINER = 'gss-results-msg';
        var GSS_RESULTS_SECTION = 'gss-results-section';
        
        /**
         * Loads the Google Site Search results if it's enabled.
         */
        function loadGssResults() {
          document.getElementById(GSS_LOADING_MSG).style.display = '';
          if (!GSS_JS_API_LOADED) {
            setTimeout('loadGssResults()', 500);
            return;
          }
          var gssControl = new google.search.CustomSearchControl(
              '<xsl:value-of select="$gss_search_engine_id" />');
          gssControl.setResultSetSize(google.search.Search.SMALL_RESULTSET);
          gssControl.setSearchCompleteCallback(this, gssSearchComplete);
          // Set drawing options to use our hidden input box.
          var drawOptions = new google.search.DrawOptions();
          drawOptions.setInput(document.getElementById('gss-hidden-input'));
          gssControl.draw('gss-results-section', drawOptions);
          gssControl.execute('<xsl:value-of select="Q" />');
        }
        
        /**
         * Enables/disables GSS results view based on whether results were
         * returned from GSS or not. This is a callback function that is
         * invoked post receiving response from GSS.
         */
        function gssSearchComplete(searchControl, searcher) {
          document.getElementById(GSS_LOADING_MSG).style.display = 'none';
          if (!searcher.results.length) {
            notifyNoResults();
            return;
          }
          notifyResultsPresent();
          document.getElementById(GSS_RESULTS_SECTION).style.display = '';
          document.getElementById(
              GSS_RESULTS_MSG_CONTAINER).style.display = '';
        }
      </xsl:if>
      <xsl:if test="$show_people_search = '1'">
        var PS_RESULTS_MSG_CONTAINER = 'ps-results-msg';
        var PS_RESULTS_SECTION = 'ps-results-section';
        var PS_LOADING_MSG = 'loading-ps-results';
        var PS_CONTENT_ID = 'people-search-ele';

        /**
         * Loads the people search results if it's enabled.
         */
        function loadPeopleSearchResults() {
          var psEle = document.getElementById(PS_CONTENT_ID);
          if (!psEle) {
            notifyNoResults();
            return;
          }
          notifyResultsPresent();
          psEle.parentNode.removeChild(psEle);
          document.getElementById(
              PS_RESULTS_MSG_CONTAINER).style.display = '';
          var psRes = document.getElementById(PS_RESULTS_SECTION);
          psRes.appendChild(psEle);
          psEle.style.display = '';
          psRes.style.display = '';
        }
      </xsl:if>

      function resetForms() {
        for (var i = 0; i &lt; document.forms.length; i++ ) {
            document.forms[i].reset();
        }
      }

      /**
       * Converts file links from encoded UTF-8 to Unicode, so that Internet
       * Explorer can follow the links correctly
       */
      function fixFileLinks() {
        for (var l = 0; l &lt; document.links.length; ++l) {
          var link = document.links[l];
          if (link.href.indexOf("file://") != 0) {
            continue;
          }

          var s = unescape(link.href);
          var result = "";
          for (var i = 0; i &lt; s.length; ++i) {
            var c = s.charCodeAt(i);
            if (c &gt;&gt; 4 == 12 || c &gt;&gt; 4 == 13) {
              c = ((c &amp; 0x1F) &lt;&lt; 6)
                  + (s.charCodeAt(++i) &amp; 0x3F);
            } else if (c >> 4 == 14) {
              c = ((c &amp; 0x0F) &lt;&lt; 12)
                  + ((s.charCodeAt(++i) &amp; 0x3F) &lt;&lt; 6)
                  + (s.charCodeAt(++i) &amp; 0x3F);
            } else if (c >> 4 == 15) {
              c = ((c &amp; 0x07) &lt;&lt; 18)
                  + ((s.charCodeAt(++i) &amp; 0x3F) &lt;&lt; 12)
                  + ((s.charCodeAt(++i) &amp; 0x3F) &lt;&lt; 6)
                  + (s.charCodeAt(++i) &amp; 0x3F);
            }
            result += String.fromCharCode(c);
          }
          link.href = result;
        }
      }

      // Search query
      var page_query = &quot;<xsl:value-of select="$stripped_sanitized_search_query"/>&quot;
      // Starting page offset, usually 0 for 1st page, 10 for 2nd, 20 for 3rd.
      var page_start = &quot;<xsl:value-of select="/GSP/PARAM[@name='start']/@value"/>&quot;
      // Front end that served the page.
      var page_site = &quot;<xsl:value-of select="/GSP/PARAM[@name='site']/@value"/>&quot;
      //</xsl:comment>
  </script>
<xsl:call-template name="populate_uar_i18n_array"/>
<xsl:call-template name="langHeadEnd"/>
<xsl:call-template name="generate_html_body_for_search_results"/>
<xsl:if test="$is_embedded_mode != '1'">
<xsl:text disable-output-escaping="yes">&lt;/html&gt;</xsl:text>
</xsl:if>
</xsl:template>

<xsl:template name="search_results_body">
<xsl:call-template name="personalization"/>
<xsl:call-template name="analytics"/>

<!-- Send across form parameters that's used in the GSA search form, if we are
     running in embedded mode. This will be transformed to a hidden form in
     the embedding container page and used with the suggest feature. -->
<xsl:if test="$show_suggest = '1' and $is_embedded_mode = '1'">
  <div id="gsaembedmodeformparams" style="display: none;">
    <input type="hidden" name="q" class="q" value="" />
    <xsl:call-template name="form_params" />
  </div>
</xsl:if>

<!-- *** Result page header *** -->
<xsl:if test="$choose_result_page_header = 'provided' or
              $choose_result_page_header = 'both'">
  <xsl:call-template name="result_page_header" />
</xsl:if>

<!-- *** Top separation bar *** -->
  <xsl:if test="Q != ''">
    <xsl:call-template name="top_sep_bar">
      <xsl:with-param name="text" select="$sep_bar_std_text"/>
        <xsl:with-param name="show_info" select="$show_search_info"/>
      <xsl:with-param name="time" select="TM"/>
    </xsl:call-template>
  </xsl:if>

  <!-- *** Handle results (if any) *** -->
  <xsl:choose>
    <!-- Always allow calling results template when sidebar is enabled. -->
    <xsl:when test="$show_sidebar = '1'">
      <xsl:call-template name="results">
        <xsl:with-param name="query" select="Q"/>
        <xsl:with-param name="time" select="TM"/>
      </xsl:call-template>

      <!-- Generates the no results message container. Display this container
           when there are no results on both left side organic results
           container and sidebar. -->
      <div id="no-results" style="display: none;">
        <xsl:call-template name="no_RES">
          <xsl:with-param name="query" select="Q"/>
        </xsl:call-template>
      </div>
    </xsl:when>
    <xsl:when test="RES or GM or Spelling or Synonyms or CT or
                    (ENTOBRESULTS and
                     not(count(ENTOBRESULTS/OBRES) = 1
                         and ENTOBRESULTS/OBRES/provider = $uar_provider
                         and ENTOBRESULTS/OBRES/count = 0))">
      <xsl:call-template name="results">
        <xsl:with-param name="query" select="Q"/>
        <xsl:with-param name="time" select="TM"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:when test="Q=''">
    </xsl:when>
    <xsl:otherwise>
      <xsl:call-template name="no_RES">
        <xsl:with-param name="query" select="Q"/>
      </xsl:call-template>
    </xsl:otherwise>
  </xsl:choose>

  <!-- *** UAR v2, Expert Search - Add the i18n messages required by the
           UI components. *** -->
  <xsl:if test="(
    $show_onebox != '0' and /GSP/ENTOBRESULTS/OBRES/provider = $uar_provider)
    or $is_expert_search_configured = '1'">
    <xsl:call-template
        name="include_localized_messages_for_uar_expert_search"/>
  </xsl:if>

  <!-- *** UAR v2 - Load the UAR UI component. We make sure that this
           template is called at the end after the results are rendered
           so that UAR onebox data is available for the UI component. *** -->
<!-- Hide UAR since we only want it to add entries to suggestions -->
<!--
           <xsl:if test="$show_onebox != '0'">
    <xsl:if test="/GSP/ENTOBRESULTS/OBRES/provider = $uar_provider">
      <xsl:call-template name="include_uar_ui_component"/>
    </xsl:if>
  </xsl:if>
-->

  <!-- *** Expert Search - include expert search UI JS component. -->
  <xsl:call-template name="include_expert_search_js">
    <xsl:with-param name="src_prefix"
        select="$gsa_resource_root_path_prefix" />
  </xsl:call-template>

  <!-- *** Google footer *** -->
  <xsl:call-template name="copyright"/>

  <xsl:if test="$show_asr != '0'">
    <script type="text/javascript"
        src="{$gsa_resource_root_path_prefix}/clicklog_compiled.js"></script>
  </xsl:if>

  <xsl:if test="$render_dynamic_navigation = '1'">
    <script type="text/javascript">
      dynNavMgr.init();
    </script>
  </xsl:if>

  <!-- *** HTML footer *** -->
</xsl:template>


<!-- **********************************************************************
Collection menu beside the search box
   ********************************************************************** -->
<xsl:template name="collection_menu">
<xsl:if test="$search_collections_xslt != ''">
  <td valign="middle">
      
<select name="site">
<xsl:choose>
<xsl:when test="PARAM[(@name='site') and (@value='default_collection')]">
 <option value="default_collection" selected="selected">default_collection</option>
</xsl:when>
<xsl:otherwise>
 <option value="default_collection">default_collection</option>
</xsl:otherwise>
</xsl:choose>
<xsl:choose>
<xsl:when test="PARAM[(@name='site') and (@value='file_system')]">
 <option value="file_system" selected="selected">file_system</option>
</xsl:when>
<xsl:otherwise>
 <option value="file_system">file_system</option>
</xsl:otherwise>
</xsl:choose>
</select>

  </td>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Search box input form (Types: std_top, std_bottom, home, swr)
   ********************************************************************** -->
<xsl:template name="search_box">
<xsl:param name="type"/>

<xsl:if test="$is_embedded_mode != '1'">
<xsl:choose>
<xsl:when test="$show_suggest = '1' and (($type = 'home') or ($type = 'std_top'))">
<xsl:text disable-output-escaping="yes">&lt;form id="suggestion_form" name="gs" method="GET" action="search" onsubmit="return (this.q.value == '') ? false : true;"&gt;</xsl:text>
</xsl:when>
<xsl:otherwise>
<xsl:text disable-output-escaping="yes">&lt;form name="gs" method="GET" action="search" onsubmit="return (this.q.value == '') ? false : true;"&gt;</xsl:text>
</xsl:otherwise>
</xsl:choose>
</xsl:if>
      <div id="search_box_div">
        <xsl:if test="($egds_show_search_tabs != '0') and (($type = 'home') or ($type = 'std_top'))">
              <div id="desktop_tab_div">
                <xsl:call-template name="desktop_tab"/>  
              </div>
        </xsl:if>
        <xsl:if test="($type = 'swr')">
          <div id="swr_div">
                <xsl:variable name="est_result" select="/GSP/RES/M" />
                <xsl:if test="($est_result != '') and ($est_result > 0)">
                There were about <b><xsl:value-of select="RES/M"/></b> results for <b><xsl:value-of select="$space_normalized_query"/></b>.
                  <br/>
                </xsl:if>
                Use the search box below to search within these results.
          </div>
        </xsl:if>
              <xsl:choose>
                <xsl:when test="($type = 'swr')">
                  <input type="text" name="as_q" size="{$search_box_size}" maxlength="256" value="" class="search-box"/>
                  <input type="hidden" name="q" class="q" value="{$qval}"/>
                  <xsl:choose>
                      <xsl:when test="$choose_search_button = 'image'">
                                <input type="image" name="btnG" src="{$search_button_image_url}"
                               valign="bottom" width="60" height="26"
                               border="0" value="{$search_button_text}"/>
                      </xsl:when>
                    <xsl:otherwise>
                      <input type="submit" name="btnG" value="{$search_button_text}"/>
                    </xsl:otherwise>
                    </xsl:choose>   
                </xsl:when>
                <xsl:when test="$show_suggest = '1' and (($type = 'home') or ($type = 'std_top'))">
                  <div id="query_suggestions_div">
                    <input type="text" placeholder="{$q_input_placeholder_text}" name="q" class="q search-box" size="{$search_box_size}" maxlength="256" value="{$space_normalized_query}" autocomplete="off" />
                  <xsl:choose>
                      <xsl:when test="$choose_search_button = 'image'">
                                <input type="image" name="btnG" src="{$search_button_image_url}"
                               valign="bottom" width="60" height="26"
                               border="0" value="{$search_button_text}" class="glass"/>
                      </xsl:when>
                    <xsl:otherwise>
                      <input type="submit" name="btnG" value="{$search_button_text}"/>
                    </xsl:otherwise>
                    </xsl:choose>  
                  </div>
                </xsl:when>
                <xsl:otherwise>
                  <input type="text" placeholder="{$q_input_placeholder_text}" name="q" class="q search-box" size="{$search_box_size}" maxlength="256" value="{$space_normalized_query}"/>
                </xsl:otherwise>
              </xsl:choose>
        <br/>
        <div class="access-container">
            <xsl:if test="$show_secure_radio != '0'">
                <div class="access-type">
                  <xsl:if test="$skin_class = 'skinned'">
                    <xsl:choose>
                        <xsl:when test="$access='p'">
                          <label><input type="radio" name="access" value="p" checked="checked" />Public Content</label>
                        </xsl:when>
                        <xsl:otherwise>
                          <label><input type="radio" name="access" value="p"/>Public Content</label>
                        </xsl:otherwise>
                      </xsl:choose>
                      <xsl:choose>
                        <xsl:when test="$access='a'">
                          <label><input type="radio" name="access" value="a" checked="checked" />Public and Secure Content</label>
                        </xsl:when>
                        <xsl:otherwise>
                          <label><input type="radio" name="access" value="a"/>Public and Secure Content</label>
                        </xsl:otherwise>
                      </xsl:choose>
                  </xsl:if>
                </div>
            </xsl:if>
        </div>
    </div>
            <xsl:call-template name="form_params"/>
            <xsl:if test="$is_embedded_mode != '1'">
            <xsl:text disable-output-escaping="yes">&lt;/form&gt;</xsl:text>
            </xsl:if>
      </xsl:template>

<!-- **********************************************************************
Bottom search box (do not customized)
   ********************************************************************** -->
<xsl:template name="bottom_search_box">
  <br clear="all"/>
  <br/>
  <div class="bottom-search-box">
    <center><br/>
    <xsl:call-template name="search_box">
    <xsl:with-param name="type" select="'std_bottom'"/>
    </xsl:call-template>
    <br/></center>
  </div>
</xsl:template>


<!-- **********************************************************************
Sort-by criteria: sort by date/relevance
   ********************************************************************** -->
<xsl:template name="sort_by">
<xsl:variable name="sort_by_url"><xsl:for-each
  select="/GSP/PARAM[(@name != 'sort') and
                     (@name != $embedded_mode_root_path_param) and
                     (@name != $embedded_mode_resource_root_path_param) and
                     (@name != $embedded_mode_disable_style) and
                     (@name != 'start') and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
    <xsl:choose>
      <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
        <!-- do nothing to remove 'ip' from the URL -->
      </xsl:when>
      <xsl:when test="@name = 'only_apps' and $show_apps_segmented_ui = '1'">
        <xsl:value-of select="'exclude_apps=1'" />
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
        <xsl:value-of select="@original_value"/>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="position() != last()">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
  </xsl:for-each>
</xsl:variable>

<xsl:variable name="sort_by_relevance_url">
  <xsl:value-of select="$sort_by_url"
    />&amp;sort=date%3AD%3AL%3Ad1</xsl:variable>

<xsl:variable name="sort_by_date_url">
  <xsl:value-of select="$sort_by_url"
    />&amp;sort=date%3AD%3AS%3Ad1</xsl:variable>
<div id="sort_by_div" class="sort-by">
<xsl:choose>
  <xsl:when test="/GSP/PARAM[@name = 'sort' and starts-with(@value,'date:D:S')]">
    <span class="sort-selected">
    <xsl:text>Sort by date / </xsl:text>
    </span>
    <a ctype="sort"
        href="{$gsa_search_root_path_prefix}?{$sort_by_relevance_url}">Sort by relevance</a>
  </xsl:when>
  <xsl:when test="/GSP/PARAM[@name = 'sort' and starts-with(@value,'date:A:S')]">
    <span class="sort-selected">  
    <xsl:text>Sort by date / </xsl:text>
    </span>
    <a ctype="sort"
        href="{$gsa_search_root_path_prefix}?{$sort_by_relevance_url}">Sort by relevance</a>
  </xsl:when>
  <xsl:otherwise>
    <a ctype="sort"
        href="{$gsa_search_root_path_prefix}?{$sort_by_date_url}">Sort by date</a>
    <span class="sort-selected">
    <xsl:text> / Sort by relevance</xsl:text>
    </span>
  </xsl:otherwise>
</xsl:choose>
</div>
</xsl:template>

<xsl:template name="cluster_results">
<div id='clustering'>
  <h2>Narrow your search</h2>

  <span id='cluster_status'>
    <span id='cluster_message' style="display:none">loading...</span>
    <noscript>
      javascript must be enabled for narrowing.
    </noscript>
  </span>

  <xsl:choose>
    <xsl:when test="$res_cluster_position = 'top'">
      <div id="results_cluster_div" class="wrapper">
        <div id="results_cluster_top_div_col1" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label0"></li>
            <li id="cluster_label3"></li>
            <li id="cluster_label6"></li>
            <li id="cluster_label9"></li>
          </ul>
        </div>
        <div id="results_cluster_top_div_col2" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label1"></li>
            <li id="cluster_label4"></li>
            <li id="cluster_label7"></li>
          </ul>
        </div>
        <div id="results_cluster_top_div_col3" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label2"></li>
            <li id="cluster_label5"></li>
            <li id="cluster_label8"></li>
          </ul>
        </div>  
      </div>
    </xsl:when>
    <xsl:when test="$res_cluster_position = 'bottom'">
      <div id="results_cluster_div" class="wrapper">
        <div id="results_cluster_top_div_col1" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label0"></li>
            <li id="cluster_label2"></li>
            <li id="cluster_label4"></li>
            <li id="cluster_label6"></li>
            <li id="cluster_label8"></li>
          </ul>
        </div>
        <div id="results_cluster_top_div_col2" class="cluster_col">
          <ul class="cluster_list cluster-ul">
            <li id="cluster_label1"></li>
            <li id="cluster_label3"></li>
            <li id="cluster_label5"></li>
            <li id="cluster_label7"></li>
            <li id="cluster_label9"></li>
          </ul>
        </div>
      </div>
    </xsl:when>
    <xsl:when test="$res_cluster_position = 'right'">
      <ul class="cluster_list cluster-ul">
        <li id='cluster_label0'></li>
        <li id='cluster_label1'></li>
        <li id='cluster_label2'></li>
        <li id='cluster_label3'></li>
        <li id='cluster_label4'></li>
        <li id='cluster_label5'></li>
        <li id='cluster_label6'></li>
        <li id='cluster_label7'></li>
        <li id='cluster_label8'></li>
        <li id='cluster_label9'></li>
      </ul>
    </xsl:when>
  </xsl:choose>
</div>
</xsl:template>

<!-- Generates search results navigation bar to be placed at the top. -->
<xsl:template name="gen_top_navigation">
<xsl:if test="RES">
  <div class="wrapper">
    <div>
      <xsl:if test="$show_top_navigation != '0'">
        <td align="left">
          <xsl:call-template name="google_navigation">
            <xsl:with-param name="prev" select="RES/NB/PU"/>
            <xsl:with-param name="next" select="RES/NB/NU"/>
            <xsl:with-param name="view_begin" select="RES/@SN"/>
            <xsl:with-param name="view_end" select="RES/@EN"/>
            <xsl:with-param name="guess" select="RES/M"/>
            <xsl:with-param name="navigation_style" select="'top'"/>
          </xsl:call-template>
        </td>
      </xsl:if>
<!-- Removed by Vinay in scu2_frontend.xsl: not sure why -->
<!--      
      <xsl:if test="$show_sort_by != '0'">
        <td align="right">
          <xsl:call-template name="sort_by"/>
        </td>
      </xsl:if>
-->      
    </div>
  </div>
</xsl:if>
</xsl:template>

<!-- Generates search results navigation bar to be placed at the bottom. -->
<xsl:template name="gen_bottom_navigation">
<xsl:if test="RES">
  <xsl:variable name="nav_style">
    <xsl:choose>
      <xsl:when test="($access='s') or ($access='a')"><xsl:value-of select="$secure_bottom_navigation_type"/></xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$choose_bottom_navigation"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <xsl:call-template name="google_navigation">
    <xsl:with-param name="prev" select="RES/NB/PU"/>
    <xsl:with-param name="next" select="RES/NB/NU"/>
    <xsl:with-param name="view_begin" select="RES/@SN"/>
    <xsl:with-param name="view_end" select="RES/@EN"/>
    <xsl:with-param name="guess" select="RES/M"/>
    <xsl:with-param name="navigation_style" select="$nav_style"/>
  </xsl:call-template>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Output all results
   ********************************************************************** -->
<xsl:template name="results">
<xsl:param name="query"/>
<xsl:param name="time"/>

<xsl:choose>
  <xsl:when test="$render_dynamic_navigation = '1'">
    <xsl:call-template name="dynamic_navigation_results">
      <xsl:with-param name="query" select="$query"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <!-- *** Add top navigation/sort-by bar *** -->
    <xsl:if test="$show_top_navigation != '0' or $show_sort_by != '0'">
      <!-- there might be onebox results but no RES  -->
      <xsl:if test="RES or $show_sidebar = '1'">
        <div id="top-navigation">
          <xsl:call-template name="gen_top_navigation" />
        </div>
      </xsl:if>
    </xsl:if>

    <!-- *** Handle OneBox results, if any ***-->
    <xsl:if test="$show_onebox != '0' and count(/GSP/ENTOBRESULTS) &gt; 0 and $show_sidebar != '1'">
      <input type="hidden" name="oneboxloc" value="3909" />
      <xsl:call-template name="onebox"/>

    <script>
    <xsl:comment>
      if (window['populateUarMessages']) {
        populateUarMessages();
      }
    //</xsl:comment>
    </script>
    </xsl:if>

    <!-- *** handle spelling suggestions, if any *** -->
    <xsl:if test="$show_spelling != '0'">
      <xsl:call-template name="spelling"/>
    </xsl:if>

    <!-- *** handle synonyms, if any *** -->
    <xsl:if test="$show_synonyms != '0'">
      <xsl:call-template name="synonyms"/>
    </xsl:if>

    <!-- *** output google desktop results (if enabled and any available) *** -->
    <xsl:if test="$egds_show_desktop_results != '0'">
        <xsl:call-template name="desktop_results"/>
    </xsl:if>



    <!-- main results -->
    <xsl:call-template name="main_results">
      <xsl:with-param name="query" select="$query"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:template name="dynamic_navigation_results">
<xsl:param name="query"/>

<xsl:variable name="dn_tokens"
  select="tokenize(/GSP/PARAM[@name='dnavs']/@original_value, '\+')"/>

<xsl:variable name="div_pos">
  <xsl:choose>
    <xsl:when test="$show_sort_by != '0'">
      <xsl:text>position: relative; width: 100%;</xsl:text>
    </xsl:when>
    <xsl:otherwise>
      <xsl:text>position: relative; width: 100%; margin-top: 10px;</xsl:text>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<div id="main" style="{$div_pos}" class="main-div">
  <div id="dyn_nav">
    <div class="dn-hdr">
      <span style="padding-left: 6px;">
        <strong>Refine Results</strong>
        <span class="collapse"></span>
      </span>
    </div>

    <!-- Expert Search - display go back to main results link if expert
         search expanded mode is configured for this frontend. -->
    <xsl:if test="$show_expert_search_expanded_results = '1'">
      <div class="dn-exp">
        <xsl:call-template name="back_to_widget_view_frontend_link">
          <xsl:with-param name="src_prefix"
              select="concat($gsa_search_root_path_prefix, '?')" />
          <xsl:with-param name="msg_back_to_main_results_action"
              select="$msg_back_to_main_results_action" />
        </xsl:call-template>
      </div>
    </xsl:if>

    <div id="dyn_nav_col" style="height: 100%">
      <xsl:apply-templates select="/GSP/RES/PARM/PMT">
        <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
        <xsl:with-param name="partial_count" select="/GSP/RES/PARM/PC"/>
      </xsl:apply-templates>

      <script type="text/javascript">
        <xsl:for-each select="$dn_tokens">
          dynNavMgr.addSelectedAttr("<xsl:value-of select='.'/>");
        </xsl:for-each>

        <xsl:apply-templates select="/GSP/RES/PARM/PMT" mode="hidden"/>
      </script>
    </div>
  </div>
  <div id="main_res">
   <!-- show sort-by -->
  <xsl:if test="$show_sort_by != '0' or $show_spelling != '0' or $show_synonyms != '0'">
    <xsl:if test="RES"> <!-- there might be onebox results but no RES  -->
      <div class="wrapper">
        <div class="gsa-row">
          <div class="col">
            <xsl:if test="$show_spelling != '0' or $show_synonyms != '0'">
              <td align="left">
                <xsl:choose>
                  <!-- *** handle spelling suggestions, if any *** -->
                  <xsl:when test="$show_spelling != '0'">
                    <xsl:call-template name="spelling"/>
                  </xsl:when>
                  <!-- *** handle synonyms, if any *** -->
                  <xsl:otherwise>
                    <xsl:call-template name="synonyms"/>
                  </xsl:otherwise>
                </xsl:choose>
              </td>
            </xsl:if>
          </div>
        </div>
      </div>
    </xsl:if>
  </xsl:if>
  
  <xsl:if test="$show_spelling != '0' and $show_synonyms != '0'">
    <xsl:call-template name="synonyms"/>
  </xsl:if>
    <xsl:call-template name="main_results">
      <xsl:with-param name="query" select="$query"/>
      <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
    </xsl:call-template>
  </div>
</div>
</xsl:template>

<!-- This template is specifically needed to hide the lag in rendering for the
   dynamic navigation attributes with large set of values. Since only the top
   few values need to be displayed, the rest are added to the dynNavMgr JS
   instance for rendering later on demand ('More' click).
-->
<xsl:template match="PMT" mode="hidden">
<xsl:if test="@IR != 1">
  <xsl:variable name="values">
    [<xsl:for-each select="PV[position() &gt; $dyn_nav_max_rows and @C != '0']">["<xsl:call-template
        name='js_escape'><xsl:with-param name="string"
        select="@V"/><xsl:with-param name="slash_mode" select='"1"'/>
        </xsl:call-template>", <xsl:value-of select='@C'/>]<xsl:if
        test="position() != last()">,</xsl:if></xsl:for-each>]
  </xsl:variable>
  <xsl:variable name="attr_id"><xsl:value-of
      select="concat('attr_', string(position()))"/></xsl:variable>

  dynNavMgr.addAttrValues("<xsl:value-of select='$attr_id'/>", <xsl:value-of select='$values'/>);
</xsl:if>
</xsl:template>

<xsl:template match="PMT">
<xsl:param name="dn_tokens"/>
<xsl:param name="partial_count"/>

<xsl:variable name="name"><xsl:value-of select="normalize-space(@NM)"/></xsl:variable>
<xsl:variable name="pmt_name"><xsl:call-template
    name="term-escape"><xsl:with-param name="val" select="@NM"/></xsl:call-template>
</xsl:variable>

<xsl:choose>
  <xsl:when test="@IR = 1">
    <ul class="dn-attr">
      <li class="dn-attr-hdr"><span class="dn-attr-hdr-txt"><xsl:attribute
          name="title"><xsl:value-of select="@DN" disable-output-escaping="yes"/>
      </xsl:attribute><xsl:value-of select="@DN"/></span></li>
      <xsl:apply-templates select="PV">
        <xsl:with-param name="pmt_name" select="$pmt_name"/>
        <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
        <xsl:with-param name="partial_count" select="$partial_count"/>
      </xsl:apply-templates>
    </ul>
  </xsl:when>

  <xsl:otherwise>
    <xsl:variable name="total" select="count(PV[@C != '0'])"/>
    <xsl:variable name="attr_class">
      <xsl:choose>
        <xsl:when test="$total &lt; $dyn_nav_max_rows + 1">
          <xsl:value-of select="'dn-attr'"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="'dn-attr dn-attr-more'"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>

    <xsl:variable name="attr_id"><xsl:value-of
        select="concat('attr_', string(position()))"/></xsl:variable>
    <ul id="{$attr_id}" class="{$attr_class}">
      <xsl:choose>
        <xsl:when test="$total &lt; $dyn_nav_max_rows + 1">
          <li class="dn-attr-hdr"><span class="dn-attr-hdr-txt"><xsl:attribute
            name="title"><xsl:value-of select="@DN" disable-output-escaping="yes"/>
          </xsl:attribute><xsl:value-of select="@DN"/></span></li>
        </xsl:when>
        <xsl:otherwise>
          <li class="dn-attr-hdr"><div class="dn-zippy-hdr"><div class="dn-zippy-hdr-img"></div>
            <span class="dn-attr-hdr-txt"><xsl:attribute
              name="title"><xsl:value-of select="@DN" disable-output-escaping="yes"/>
            </xsl:attribute><xsl:value-of select="@DN"/></span></div></li>
        </xsl:otherwise>
      </xsl:choose>

      <xsl:apply-templates select="PV[position() &lt; $dyn_nav_max_rows + 1]">
        <xsl:with-param name="pmt_name" select="$pmt_name"/>
        <xsl:with-param name="header" select="@DN"/>
        <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
        <xsl:with-param name="partial_count" select="$partial_count"/>
      </xsl:apply-templates>

      <xsl:if test="$total &gt; $dyn_nav_max_rows">
        <xsl:variable name="total_left" select="$total - $dyn_nav_max_rows"/>
        <li id="{$attr_id}_more_less">
          <a id="more_{$attr_id}" class="dn-link" style="margin-right: 10px; outline-style: none;"
            onclick="dynNavMgr.displayMore('{$attr_id}', true); return false;"
            href="javascript:;">
            <xsl:attribute name="ctype">
                <xsl:text>dynnav.</xsl:text>
                <xsl:value-of select="$name" disable-output-escaping="no"/>
                <xsl:text>.more</xsl:text>
            </xsl:attribute>
            <span class="dn-more-img dn-mimg"></span>
            <span id="disp_{$attr_id}"><xsl:value-of
            select="$total_left"/></span><span> More</span>
          </a>
          <a id="less_{$attr_id}" class="dn-link dn-hidden" style="outline-style: none;"
            onclick="dynNavMgr.displayMore('{$attr_id}', false, {$total_left}); return false;"
            href="javascript:;">
            <xsl:attribute name="ctype">
              <xsl:text>dynnav.</xsl:text>
              <xsl:value-of select="$name" disable-output-escaping="no"/>
              <xsl:text>.less</xsl:text>
            </xsl:attribute>
            <span class="dn-more-img dn-limg"></span>
            <span>Less</span>
          </a>
        </li>
        <label class="dn-hidden dn-id"><xsl:value-of select="$attr_id"/></label>
        <label id="{$attr_id}_escaped" class="dn-hidden"><xsl:value-of
            select="$pmt_name"/></label>
        <label id="{$attr_id}_total" class="dn-hidden"><xsl:value-of
            select="$total"/></label>
        <label id="{$attr_id}_total_left" class="dn-hidden"><xsl:value-of
            select="$total_left"/></label>
      </xsl:if>
    </ul>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:template match="PV">
<xsl:param name="pmt_name"/>
<xsl:param name="header"/>
<xsl:param name="dn_tokens"/>
<xsl:param name="partial_count"/>

<xsl:if test="@C != 0">
  <xsl:apply-templates select="." mode="construct">
    <xsl:with-param name="dn_tokens" select="$dn_tokens"/>
    <xsl:with-param name="header" select="$header"/>
    <xsl:with-param name="partial_count" select="$partial_count"/>
    <xsl:with-param name="current_token">
      <xsl:choose>
        <xsl:when test="../@IR = '1'"><xsl:variable
          name="stripped_l" select="normalize-space(@L)"/><xsl:variable
          name="stripped_h" select="normalize-space(@H)"/>inmeta:<xsl:value-of
          select="$pmt_name"/>:<xsl:choose><xsl:when test="../@T = 3"><xsl:if
          test="$stripped_l != ''">$<xsl:value-of select="$stripped_l"/></xsl:if>..<xsl:if
          test="$stripped_h != ''">$<xsl:value-of
          select="$stripped_h"/></xsl:if></xsl:when><xsl:otherwise><xsl:value-of
          select="$stripped_l"/>..<xsl:value-of select="$stripped_h"/></xsl:otherwise></xsl:choose>
        </xsl:when>
        <xsl:otherwise>inmeta:<xsl:value-of select="$pmt_name"/>%3D<xsl:call-template
            name="term-escape"><xsl:with-param name="val"
            select="@V"/></xsl:call-template></xsl:otherwise>
      </xsl:choose>
    </xsl:with-param>
  </xsl:apply-templates>
</xsl:if>
</xsl:template>

<xsl:template match="PV" mode="construct">
<xsl:param name="dn_tokens"/>
<xsl:param name="header"/>
<xsl:param name="current_token"/>
<xsl:param name="partial_count"/>

<xsl:variable name="dispval">
  <xsl:apply-templates select="." mode="display_value">
    <xsl:with-param name="js_escape" select="'1'"/>
  </xsl:apply-templates>
</xsl:variable>

<xsl:variable name="dispcount">
  <xsl:text>(</xsl:text><xsl:if
     test="$partial_count=1"><xsl:text>&gt; </xsl:text></xsl:if>
    <xsl:value-of select="@C"/><xsl:text>)</xsl:text>
</xsl:variable>

<xsl:variable name="is_selected" select="index-of($dn_tokens, $current_token)"/>
<li class="dn-attr-v">
  <xsl:choose>
    <xsl:when test="exists($is_selected)">
      <xsl:variable name="other_tokens">
        <xsl:value-of select="string-join(remove($dn_tokens, $is_selected[position()=1]), '+')"/>
      </xsl:variable>

      <xsl:variable name="cancel_url">
        <xsl:value-of select="$no_q_dnavs_params"/>&amp;q=<xsl:value-of
          select="$original_q"/><xsl:if test="$other_tokens != ''">+<xsl:value-of
          select="$other_tokens"/>&amp;dnavs=<xsl:value-of select="$other_tokens"/></xsl:if>
      </xsl:variable>

      <a class="dn-img dn-r-img"
          href="{$gsa_search_root_path_prefix}?{$cancel_url}"
          title="Clear">
        <xsl:attribute name="ctype">
          <xsl:text>dynnav.clear.</xsl:text>
          <xsl:value-of select="$header" disable-output-escaping="no"/>
        </xsl:attribute>
      </a>
      <span class="dn-overflow dn-inline-block" style="width: 86%;">
        <xsl:if test="../@IR != 1">
          <xsl:attribute name="title"><xsl:value-of select="$dispval"
              disable-output-escaping="yes"/></xsl:attribute>
        </xsl:if>
        <div class="dn-attr-txt"><xsl:value-of
            select="$dispval" disable-output-escaping="yes"/>
        </div>
        <span class="display-cnt"><xsl:value-of
            select="$dispcount" disable-output-escaping="yes"/>
        </span>
      </span>
    </xsl:when>
    <xsl:otherwise>
      <xsl:variable name="pmts_var">dnavs=<xsl:if test="/GSP/PARAM[@name='dnavs']"><xsl:value-of
          select="/GSP/PARAM[@name='dnavs']/@original_value"/>+</xsl:if><xsl:value-of
          select="$current_token"/>
      </xsl:variable>
      <xsl:variable name="qurl"><xsl:value-of select="$no_q_dnavs_params"/>&amp;q=<xsl:value-of
          select="/GSP/PARAM[@name='q']/@original_value"/>+<xsl:value-of
          select="$current_token"/>&amp;<xsl:value-of select="$pmts_var"/>
      </xsl:variable>
      <div class="dn-attr-txt"><a
        class="dn-attr-a" href="{$gsa_search_root_path_prefix}?{$qurl}">
        <xsl:attribute name="ctype">
          <xsl:text>dynnav.</xsl:text>
          <xsl:value-of select="$header" disable-output-escaping="no"/>
          <xsl:text>.</xsl:text>
          <xsl:value-of select="$dispval" disable-output-escaping="no"/>
        </xsl:attribute>
        <xsl:if test="../@IR != 1">
          <xsl:attribute name="title"><xsl:value-of select="$dispval"
              disable-output-escaping="no"/></xsl:attribute>
        </xsl:if><xsl:value-of
            select="$dispval" disable-output-escaping="yes"/></a>
      </div>
      <span class="dn-attr-c display-cnt"><xsl:value-of select="$dispcount"
          disable-output-escaping="yes"/></span>
    </xsl:otherwise>
  </xsl:choose>
</li>
</xsl:template>

<xsl:template match="PV" mode="display_value">
<xsl:param name="js_escape"/>
<xsl:choose>
  <xsl:when test="../@IR = 1">
    <xsl:variable name="disp_l">
      <xsl:call-template name="pmt_range_display_val">
        <xsl:with-param name="val" select="@L"/>
        <xsl:with-param name="type" select="../@T"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="disp_h">
      <xsl:call-template name="pmt_range_display_val">
        <xsl:with-param name="val" select="@H"/>
        <xsl:with-param name="type" select="../@T"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:choose>
      <xsl:when test="$disp_l = ''">
        <xsl:value-of select="$disp_h"/><xsl:text> </xsl:text>
        <xsl:choose>
          <xsl:when test="../@T = 4">or earlier</xsl:when>
          <xsl:otherwise>or less</xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:when test="$disp_h = ''">
        <xsl:value-of select="$disp_l"/><xsl:text> </xsl:text>
        <xsl:choose>
          <xsl:when test="../@T = 4">or later</xsl:when>
          <xsl:otherwise>or more</xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise><xsl:value-of
        select="$disp_l"/><xsl:text> </xsl:text><xsl:call-template
        name="endash"/><xsl:text> </xsl:text><xsl:value-of select="$disp_h"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:when>
  <xsl:otherwise>
    <xsl:choose>
      <xsl:when test="$js_escape = '1'">
        <xsl:call-template name="js_escape"><xsl:with-param name="string"
          select="@V"/><xsl:with-param name="slash_mode" select='"0"'/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise><xsl:value-of select="@V"/></xsl:otherwise>
    </xsl:choose>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:variable name="hex">0123456789ABCDEF</xsl:variable>
<xsl:template name="term-escape">
<xsl:param name="val"/>
<xsl:variable name="first-char" select="substring($val, 1, 1)"/>
<xsl:variable name="code"
  select="string-to-codepoints($first-char)[position()=1]"/>
<xsl:choose>
  <xsl:when test="not(($code >= 48 and $code &lt;= 57) or
    ($code >= 65 and $code &lt;= 90) or ($code = 95) or
    ($code >= 97 and $code &lt;= 122))">
    <xsl:choose>
      <xsl:when test="$code > 128">
        <xsl:value-of select="encode-for-uri($first-char)"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:variable name="hex-digit1"
          select="substring($hex, floor($code div 16) + 1, 1)"/>
        <xsl:variable name="hex-digit2"
          select="substring($hex, $code mod 16 + 1, 1)"/>
        <xsl:value-of select="concat('%25', $hex-digit1 ,$hex-digit2)"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$first-char"/>
  </xsl:otherwise>
</xsl:choose>
<xsl:if test="string-length($val) > 1">
  <xsl:call-template name="term-escape">
    <xsl:with-param name="val" select="substring($val, 2)"/>
  </xsl:call-template>
</xsl:if>
</xsl:template>

<xsl:template name="pmt_range_display_val">
<xsl:param name="val"/>
<xsl:param name="type"/>
<xsl:choose>
  <xsl:when test="$val != '' and ($type = 2 or $type = 3)">
    <xsl:value-of select="format-number($val, '#.##')"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$val"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<xsl:template name="main_results">
<xsl:param name="query"/>
<xsl:param name="dn_tokens"/>

<xsl:if test="$render_dynamic_navigation = '1'">
  <div class="dn-bar">
    <xsl:variable name="all_results_url"><xsl:value-of
        select="$no_q_dnavs_params"/>&amp;q=<xsl:value-of select="$original_q"/>
    </xsl:variable>

    <!-- Add next/prev navigation -->
    <xsl:if test="$show_top_navigation != '0' and /GSP/RES">
      <span class="dn-bar-rt">
        <xsl:call-template name="google_navigation">
          <xsl:with-param name="prev" select="/GSP/RES/NB/PU"/>
          <xsl:with-param name="next" select="/GSP/RES/NB/NU"/>
          <xsl:with-param name="view_begin" select="/GSP/RES/@SN"/>
          <xsl:with-param name="view_end" select="/GSP/RES/@EN"/>
          <xsl:with-param name="guess" select="/GSP/RES/M"/>
          <xsl:with-param name="navigation_style" select="'top'"/>
          <xsl:with-param name="dynamic_nav_bar" select="'1'"/>
        </xsl:call-template>
      </span>
    </xsl:if>

    <a class="dn-link" style="text-decoration: underline; color: #000;"
      href="{$gsa_search_root_path_prefix}?{$all_results_url}">All results</a>

    <xsl:if test="exists($dn_tokens)">
      <xsl:call-template name="rsaquo"/>
      <xsl:variable name="root_node" select="/GSP"/>
      <xsl:for-each select="$dn_tokens">
        <xsl:variable name="other_pmts_tokens"
          select="string-join(remove($dn_tokens, position()), '+')"/>

        <xsl:variable name="cancel_url">
          <xsl:value-of select="$all_results_url"/>
          <xsl:if test="$other_pmts_tokens != ''">+<xsl:value-of
              select="$other_pmts_tokens"/>&amp;dnavs=<xsl:value-of select="$other_pmts_tokens"/>
          </xsl:if>
        </xsl:variable>

        <div class="dn-inline-block"><a class="dn-link cancel-url dn-bar-link"
            href="{$gsa_search_root_path_prefix}?{$cancel_url}"
            title="Clear">
          <xsl:variable name="range_val" select="substring-after(., ':')"/>
          <xsl:choose>
            <xsl:when test="contains(., '..')">
              <xsl:for-each select="$root_node/RES/PARM/PMT">
                <xsl:variable name="escaped_name"><xsl:call-template name="term-escape">
                  <xsl:with-param name="val" select="@NM"/>
                </xsl:call-template></xsl:variable>
                <xsl:if test="$escaped_name=substring-before($range_val, ':')">
                  <span class="dn-bar-v"><xsl:value-of select="@DN"/>:</span><xsl:call-template
                    name="nbsp"/><xsl:choose>
                    <xsl:when test="@T = '3'">
                      <xsl:for-each select="PV">
                        <xsl:variable name="check_val"><xsl:if
                          test="normalize-space(@L) != ''">$<xsl:value-of
                          select="normalize-space(@L)"/></xsl:if>..<xsl:if
                          test="normalize-space(@H) != ''">$<xsl:value-of
                            select="normalize-space(@H)"/></xsl:if>
                        </xsl:variable>
                        <xsl:if test="$check_val=substring-after($range_val, ':')">
                          <xsl:apply-templates select="current()" mode="display_value">
                            <xsl:with-param name="js_escape" select="'0'"/>
                          </xsl:apply-templates>
                        </xsl:if>
                      </xsl:for-each>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:apply-templates select="PV[concat(normalize-space(@L), '..',
                        normalize-space(@H))=substring-after($range_val, ':')]" mode="display_value">
                        <xsl:with-param name="js_escape" select="'0'"/>
                      </xsl:apply-templates>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:if>
              </xsl:for-each>
            </xsl:when>
            <xsl:otherwise>
              <xsl:for-each select="$root_node/RES/PARM/PMT">
                <xsl:variable name="escaped_name"><xsl:call-template name="term-escape">
                  <xsl:with-param name="val" select="@NM"/>
                </xsl:call-template></xsl:variable>
                <xsl:if test="$escaped_name=substring-before($range_val, '%3D')">
                  <span class="dn-bar-v"><xsl:value-of select="./@DN"/>:</span><xsl:call-template
                    name="nbsp"/><xsl:for-each select="./PV"><xsl:variable
                      name="pv_val"><xsl:call-template name="term-escape">
                        <xsl:with-param name="val" select="./@V"/>
                      </xsl:call-template></xsl:variable>
                      <xsl:if test="$pv_val=substring-after($range_val, '%3D')">
                        <xsl:apply-templates select="." mode="display_value">
                          <xsl:with-param name="js_escape" select="'0'"/>
                        </xsl:apply-templates>
                      </xsl:if>
                  </xsl:for-each>
                </xsl:if>
              </xsl:for-each>
            </xsl:otherwise>
          </xsl:choose>
        </a></div>

        <xsl:if test="position() != last()">
          <xsl:call-template name="rsaquo"/>
        </xsl:if>
      </xsl:for-each>
    </xsl:if>
  </div>
  

  
  <!-- *** Handle OneBox results, if any ***-->
  <xsl:if test="$show_onebox != '0' and count(/GSP/ENTOBRESULTS) &gt; 0 and $show_sidebar != '1'">
      <input type="hidden" name="oneboxloc" value="4486-$show_sidebar" />
    <xsl:call-template name="onebox"/>

    <script>
    <xsl:comment>
      if (window['populateUarMessages']) {
        populateUarMessages();
      }
    //</xsl:comment>
    </script>
  </xsl:if>

  <!-- *** output google desktop results (if enabled and any available) *** -->
  <xsl:if test="$egds_show_desktop_results != '0'">
    <xsl:call-template name="desktop_results"/>
  </xsl:if>
</xsl:if>

<xsl:if test="$show_translation = '1' and $only_apps != '1'">
  <div id="translate_all_div" class="trns-all-div"></div>
</xsl:if>

<xsl:choose>
  <xsl:when test="$show_sidebar = '1'">
          <div class="col sb-r" id="sidebar-container">
            <div id="sidebar">
            <!-- Onebox -->
            <xsl:if test="$show_onebox != '0' and count(/GSP/ENTOBRESULTS) &gt; 0">
                <input type="hidden" name="oneboxloc" value="4514" />
              <xsl:call-template name="onebox"/>

              <script>
              <xsl:comment>
                if (window['populateUarMessages']) {
                  populateUarMessages();
                }
              //</xsl:comment>
              </script>
            </xsl:if>
            
            <!-- Expert Search - sidebar element. -->
            <xsl:if test="$show_expert_search_widget_view = '1'">
              <div id="exp-results-container">
                <xsl:call-template
                  name="render_expert_search_results">
                  <xsl:with-param name="src_prefix"
                      select="concat($gsa_search_root_path_prefix, '?')" />
                  <xsl:with-param name="is_noscript_mode" select="'true'" />
                </xsl:call-template>
              </div>
            </xsl:if>

            <!-- People Search sidebar element. -->
            <xsl:if test="$show_people_search = '1'">
            <div id="ps-results-container">
              <div id="loading-ps-results" class="sb-r-ld-msg-c" style="display: none;">
                <span class="sb-r-lbl">Loading People search results...</span>
              </div>
              <div id="ps-results-msg" class="sb-r-lbl" style="display: none;" >People</div>
              <div id="ps-results-section" class="sb-r-res" style="display:none;">
              </div>
            </div>
            </xsl:if>

            <!-- Google Apps results sidebar element. -->
            <xsl:if test="$show_apps_segmented_ui = '1'">
            <div id="apps-results-container">
              <div id="loading-app-results" class="sb-r-ld-msg-c" style="display: none;">
                <span class="sb-r-lbl">Loading Google Apps results...</span>
              </div>
              <div style="display: none;" id="apps-results-msg" class="sb-r-lbl"></div>
              <div id="apps-results-section" class="sb-r-res" style="display: none;">
              </div>
              <iframe scrolling="no" id="apps-results-iframe" frameborder="0"
                  style="display: none;">
              </iframe>
            </div>
            </xsl:if>

            <!-- Google Site Search sidebar element. -->
            <xsl:if test="$show_gss_results = '1'">
            <div id="gss-results-container">
              <div id="loading-gss-results" class="sb-r-ld-msg-c" style="display: none;">
                <span class="sb-r-lbl">Loading Google Site Search results...</span>
              </div>
              <div id="gss-results-msg" class="sb-r-lbl" style="display: none;" >Google Site Search</div>
              <div id="gss-results-section" class="sb-r-res" style="display:none">
              </div>
              <input style="display:none" id="gss-hidden-input" />
            </div>
            </xsl:if>
          </div>
          </div>
          <div class="col" id="left-side-container">
            <xsl:call-template name="render_main_results">
              <xsl:with-param name="query" select="$query"/>
            </xsl:call-template>  
          </div>

  </xsl:when>
  <xsl:otherwise>
    <xsl:call-template name="render_main_results">
      <xsl:with-param name="query" select="$query"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>

<!-- *** Filter note (if needed) *** -->
<xsl:if test="(RES/FI) and (not(RES/NB/NU))">
  <p>
    <i>
    In order to show you the most relevant results, we have omitted some entries very similar to the <xsl:value-of select="RES/@EN"/> already displayed.<br/>If you like, you can <a href="{$filter_url}0">repeat the search with the omitted results included</a>.
    </i>
  </p>
</xsl:if>
  <!-- *** output results details *** -->
  <xsl:if test="$show_res_clusters = '1'">
    <xsl:call-template name="cluster_results"/>
  </xsl:if>
<!-- *** Add bottom navigation *** -->
<div id="bottom-navigation" class="bottom-nav clearfix">
  <xsl:call-template name="gen_bottom_navigation" />
</div>

<!-- *** Bottom search box *** -->
<div id="bottom-search-box">
  <xsl:if test="$show_bottom_search_box != '0' and RES">
    <xsl:call-template name="bottom_search_box"/>
  </xsl:if>
</div>

<!-- *** Load the JSAPI library if displaying GSS results is enabled. -->
<xsl:if test="$show_gss_results = '1'">
  <script src="https://www.google.com/jsapi" type="text/javascript"></script>
  <script type="text/javascript">
    var GSS_JS_API_LOADED = false;
    /**
     * If you want to use a different Site Search theme you can specify the
     * same through {style: THEME_CONSTANT} property passed as the third
     * parameter to google.load call below. For example:
     * google.load('search', '1', {style: google.loader.themes.ESPRESSO})
     * You can refer API documentation here:
     * http://code.google.com/apis/ajaxsearch/documentation/customsearch/#_themes
     * Optionally, you can override the default stylesheet via custom CSS or
     * customize existing themes via "Look and Feel" option in the control
     * panel.
     */
    google.load('search', '1');
    google.setOnLoadCallback(function(){GSS_JS_API_LOADED = true;});
  </script>
</xsl:if>

<!-- *** Load the Translation JS library, if enabled *** -->
<xsl:if test="$show_translation = '1' and $only_apps != '1'">
  <xsl:variable name="result_contents">
    <xsl:for-each select="/GSP/RES/R">{'id':<xsl:value-of select="@N"/>,'lang':'<xsl:value-of select="LANG"/>'},</xsl:for-each>
  </xsl:variable>
  <xsl:variable name="res_count" select="count(/GSP/RES/R)"/>
  <xsl:variable name="user_lang" select="/GSP/PARAM[@name='ulang']/@value" />
  <xsl:if test="$render_dynamic_navigation != '1'">
    <script src="{$gsa_resource_root_path_prefix}/translation_compiled.js"
        type="text/javascript"></script>
  </xsl:if>
  <script type="text/javascript">
    var translationManager = new gsa.translation.TranslationManager();
    translationManager.initTranslation(<xsl:value-of select="$res_count" />,
        [<xsl:value-of select="substring($result_contents,
        1,string-length($result_contents)-1)" />],
        '<xsl:value-of select="$user_lang"/>');

    function createSectionalElement() {
      new google.translate.SectionalElement({
       sectionalNodeClassName: 'goog-trans-section',
       controlNodeClassName: 'goog-trans-control',
       background: '#ffffff',
       useSecureConnection: true,
       key: '<xsl:value-of select="$translate_key"/>',
       relate: 'id'
      }, 'goog-trans-all');
    }
  </script>
  <script src="https://translate.google.com/translate_a/element.js?cb=createSectionalElement&amp;ug=section&amp;hl={$user_lang}"></script>
</xsl:if>

<!-- *** Load resources for showing document previews, if enabled *** -->
<xsl:if test="$show_document_previews = '1'">
  <xsl:call-template name="populate_previewer_i18n_array"/>
  <script src="{$gsa_resource_root_path_prefix}/dpsjsclient/dps.min.js"
      type="text/javascript"></script>
  <script src="{$gsa_resource_root_path_prefix}/json2.js"
      type="text/javascript"></script>
  <script src="{$scu_template_js_path}/SCUlibs/previewer.js"
      type="text/javascript"></script>
  <xsl:if test="/GSP/PREVIEWS">
    <script type="text/javascript">
      <xsl:value-of select="/GSP/PREVIEWS"/>
    </script>
  </xsl:if>
  <link rel="stylesheet"
    href="{$gsa_resource_root_path_prefix}/dpsjsclient/dps-floating-viewer.css"
    type="text/css">
  </link>
  <xsl:if test="$is_embedded_mode = '1'">
    <script type="text/javascript">
      if (window['DPS']) {
        DPS.forwardingProxy =
            '<xsl:value-of select="$embedded_mode_resource_root_path_prefix" />';
        <xsl:if test="$embedded_mode_dps_viewer_host != ''">
        <xsl:variable name="embedded_mode_dps_viewer_host_to_use"
          select="if (starts-with($embedded_mode_dps_viewer_host, 'http://'))
                  then
                     $embedded_mode_dps_viewer_host
                  else
                     concat('http://', $embedded_mode_dps_viewer_host)" />
        // Disable the full preview mode in SharePoint embedded mode.
        DPS.onPageClick = function() { return false; };
        </xsl:if>
      }
    </script>
    <style type="text/css">
      div.floating-viewer-header .controls {
        background-image: url("<xsl:value-of select="$embedded_mode_resource_root_path_prefix"/>/dpsjsclient/buttons.png");
      }
      div.result-item-hover span.toggle-preview {
        background-image: url("<xsl:value-of select="$embedded_mode_resource_root_path_prefix"/>/preview_on.png") !important;
      }
      body.previews-enabled span.toggle-preview {
        background-image: url("<xsl:value-of select="$embedded_mode_resource_root_path_prefix"/>/preview_off.png");
      }
    </style>
  </xsl:if>
</xsl:if>
</xsl:template>

<xsl:template name="render_main_results">
<xsl:param name="query"/>
<xsl:variable name="main_results_class">
  <xsl:choose>
    <xsl:when test="$render_dynamic_navigation = '1'">main-results</xsl:when>
    <xsl:otherwise>main-results-without-dn</xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<div class="{$main_results_class}">
  <!-- for keymatch results -->
  <xsl:if test="$show_keymatch != '0'">
    <xsl:apply-templates select="/GSP/GM"/>
  </xsl:if>

  <!-- Experty Search - render the expert search results if expanded
       mode is configured for the current frontend. -->
  <xsl:choose>
    <xsl:when test="$show_expert_search_expanded_results = '1'">
      <xsl:if test="$render_dynamic_navigation != '1'">
        <xsl:call-template name="back_to_widget_view_frontend_link">
          <xsl:with-param name="src_prefix"
              select="concat($gsa_search_root_path_prefix, '?')" />
          <xsl:with-param name="msg_back_to_main_results_action"
              select="$msg_back_to_main_results_action" />
        </xsl:call-template>
      </xsl:if>
      <xsl:call-template name="render_expert_search_results">
        <xsl:with-param name="src_prefix"
            select="concat($gsa_search_root_path_prefix, '?')" />
        <xsl:with-param name="current_search_query_args"
            select="$search_url" />
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:apply-templates select="RES/R">
        <xsl:with-param name="query" select="$query"/>
      </xsl:apply-templates>
    </xsl:otherwise>
  </xsl:choose>
</div>
</xsl:template>

<!-- **********************************************************************
Stopwords suggestions in result page (do not customize)
   ********************************************************************** -->
<xsl:template name="stopwords">
<xsl:variable name="stopwords_suggestions1">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="'/help/basics.html#stopwords'"/>
    <xsl:with-param name="replace" select="'user_help.html#stop'"/>
    <xsl:with-param name="string" select="/GSP/CT"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="stopwords_suggestions">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="'/help/basics.html'"/>
    <xsl:with-param name="replace" select="'user_help.html'"/>
    <xsl:with-param name="string" select="$stopwords_suggestions1"/>
  </xsl:call-template>
</xsl:variable>

<xsl:if test="/GSP/CT">
  <font size="-1" color="gray">
    <xsl:value-of disable-output-escaping="yes"
      select="$stopwords_suggestions"/>
  </font>
</xsl:if>
</xsl:template>


<!-- **********************************************************************
Spelling suggestions in result page (do not customize)
   ********************************************************************** -->
<xsl:template name="spelling">
<xsl:if test="/GSP/Spelling/Suggestion">
  <p id="spell-suggest"><span class="p"><xsl:value-of select="$spelling_text"/>
       <xsl:call-template name="nbsp"/>
     </span>
  <xsl:variable name="apps_param">
    <xsl:choose>
      <xsl:when test="/GSP/PARAM[@name='exclude_apps']">
        <xsl:text disable-output-escaping='yes'>&amp;exclude_apps=</xsl:text>
        <xsl:value-of select="/GSP/PARAM[@name='exclude_apps']/@original_value" />
      </xsl:when>
      <xsl:when test="/GSP/PARAM[@name='only_apps']">
        <xsl:text disable-output-escaping='yes'>&amp;only_apps=</xsl:text>
        <xsl:value-of select="/GSP/PARAM[@name='only_apps']/@original_value" />
      </xsl:when>
    </xsl:choose>
  </xsl:variable>
  <a ctype="spell"
    href="{$gsa_search_root_path_prefix}?q={/GSP/Spelling/Suggestion[1]/@qe}&amp;spell=1&amp;{$synonym_url}{$apps_param}">
    <xsl:value-of disable-output-escaping="yes" select="/GSP/Spelling/Suggestion[1]"/>
  </a>
  </p>
</xsl:if>
</xsl:template>


<!-- **********************************************************************
Synonym suggestions in result page (do not customize)
   ********************************************************************** -->
<xsl:template name="synonyms">
<xsl:if test="/GSP/Synonyms/OneSynonym">
  <p><span class="p"><font color="{$synonyms_text_color}">
       <xsl:value-of select="$synonyms_text"/>
       <xsl:call-template name="nbsp"/>
     </font></span>
  <xsl:for-each select="/GSP/Synonyms/OneSynonym">
    <a ctype="synonym" href="{$gsa_search_root_path_prefix}?q={@q}&amp;{$synonym_url}">
      <xsl:value-of disable-output-escaping="yes" select="."/>
    </a><xsl:text> </xsl:text>
  </xsl:for-each>
  </p>
</xsl:if>
</xsl:template>


<!-- **********************************************************************
Truncation functions (do not customize)
   ********************************************************************** -->
<xsl:template name="truncate_url">
<xsl:param name="t_url"/>

<xsl:choose>
  <xsl:when test="string-length($t_url) &lt; $truncate_result_url_length">
    <xsl:value-of select="$t_url"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:variable name="first" select="substring-before($t_url, '/')"/>
    <xsl:variable name="last">
            <xsl:call-template name="truncate_find_last_token">
              <xsl:with-param name="t_url" select="$t_url"/>
            </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="path_limit" select="$truncate_result_url_length - (string-length($first) + string-length($last) + 1)"/>

    <xsl:choose>
            <xsl:when test="$path_limit &lt;= 0">
              <xsl:value-of select="concat(substring($t_url, 1, $truncate_result_url_length), '...')"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:variable name="chopped_path">
                <xsl:call-template name="truncate_chop_path">
                  <xsl:with-param name="path" select="substring($t_url, string-length($first) + 2, string-length($t_url) - (string-length($first) + string-length($last) + 1))"/>
                  <xsl:with-param name="path_limit" select="$path_limit"/>
                </xsl:call-template>
              </xsl:variable>
              <xsl:value-of select="concat($first, '/.../', $chopped_path, $last)"/>
            </xsl:otherwise>
    </xsl:choose>
  </xsl:otherwise>
</xsl:choose>

</xsl:template>

<xsl:template name="truncate_find_last_token">
<xsl:param name="t_url"/>

<xsl:choose>
  <xsl:when test="contains($t_url, '/')">
    <xsl:call-template name="truncate_find_last_token">
          <xsl:with-param name="t_url" select="substring-after($t_url, '/')"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
          <xsl:value-of select="$t_url"/>
  </xsl:otherwise>
</xsl:choose>

</xsl:template>

<xsl:template name="truncate_chop_path">
<xsl:param name="path"/>
<xsl:param name="path_limit"/>

<xsl:choose>
  <xsl:when test="string-length($path) &lt;= $path_limit">
    <xsl:value-of select="$path"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:call-template name="truncate_chop_path">
      <xsl:with-param name="path" select="substring-after($path, '/')"/>
      <xsl:with-param name="path_limit" select="$path_limit"/>
    </xsl:call-template>
  </xsl:otherwise>
</xsl:choose>

</xsl:template>


<!-- **********************************************************************
Google Apps (do not customize)
   ********************************************************************** -->
<xsl:variable
name="sites_icon"
select="'https://www.google.com/sites/images/sites_favicon.ico'"/>
<xsl:variable
name="docs_icon"
select="'https://docs.google.com/images/doclist/icon_doc.gif'"/>
<xsl:variable
name="spreadsheets_icon"
select="'https://docs.google.com/images/doclist/icon_spread.gif'"/>
<xsl:variable
name="presentations_icon"
select="'https://docs.google.com/images/doclist/icon_pres.gif'"/>
<xsl:variable
name="pdf_icon"
select="'https://docs.google.com/images/doclist/icon_6_pdf.gif'"/>
<xsl:variable
name="drawing_icon"
select="'https://docs.google.com/images/doclist/icon_6_drawing.png'"/>
<xsl:variable
name="email_icon"
select="'https://ssl.gstatic.com/ui/v1/icons/mail/images/favicon.ico'"/>

<!-- **********************************************************************
A single result (do not customize)
   ********************************************************************** -->
<xsl:template match="R">
<xsl:param name="query"/>

<xsl:variable name="protocol"     select="substring-before(U, '://')"/>
<xsl:variable name="temp_url"     select="substring-after(U, '://')"/>
<xsl:variable name="display_url1" select="substring-after(UD, '://')"/>
<xsl:variable name="escaped_url"  select="substring-after(UE, '://')"/>

<xsl:variable name="display_url2">
  <xsl:choose>
    <xsl:when test="$display_url1">
      <xsl:value-of select="$display_url1"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$temp_url"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="display_url">
  <xsl:choose>
    <xsl:when test="$protocol='unc'">
      <xsl:call-template name="convert_unc">
        <xsl:with-param name="string" select="$display_url2"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$display_url2"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="stripped_url">
  <xsl:choose>
    <xsl:when test="$truncate_result_urls != '0'">
              <xsl:call-template name="truncate_url">
                <xsl:with-param name="t_url" select="$display_url"/>
              </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
          <xsl:value-of select="$display_url"/>
        </xsl:otherwise>
      </xsl:choose>
</xsl:variable>

<xsl:variable name="crowded_url" select="HN/@U"/>
<xsl:variable name="crowded_display_url1" select="HN"/>
<xsl:variable name="crowded_display_url">
  <xsl:choose>
    <xsl:when test="$protocol='unc'">
      <xsl:call-template name="convert_unc">
        <xsl:with-param name="string" select="substring-after($crowded_display_url1,'://')"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$crowded_display_url1"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="lower" select="'abcdefghijklmnopqrstuvwxyz'"/>
<xsl:variable name="upper" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>

<xsl:variable name="url_indexed" select="not(starts-with($temp_url, 'noindex!/'))"/>

<!-- *** Indent as required (only supports 2 levels) *** -->
<xsl:if test="@L='2'">
  <xsl:text disable-output-escaping="yes">&lt;blockquote class=&quot;g&quot;&gt;</xsl:text>
</xsl:if>

<!-- *** Result Header *** -->
<p class="g">

<xsl:variable name="apps_domain">
  <xsl:if test="starts-with($stripped_url, 'sites.google.com/a/') or
                starts-with($stripped_url, 'docs.google.com/a/') or
                starts-with($stripped_url, 'spreadsheets.google.com/a/')">
    <xsl:value-of
      select="substring-before(substring-after($stripped_url, '/a/'), '/')"/>
  </xsl:if>
</xsl:variable>

<!-- *** Google Sites icon *** -->
<xsl:if test="starts-with($stripped_url, 'sites.google.com/')">
  <img src="{$sites_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google Docs icon *** -->
<xsl:if test="starts-with($stripped_url, concat('docs.google.com/a/', $apps_domain, '/View?')) or
              RF[@NAME='type']/@VALUE='document'">
  <img src="{$docs_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google Spreadsheets icon *** -->
<xsl:if test="starts-with($stripped_url, 'spreadsheets.google.com/') or
               RF[@NAME='type']/@VALUE='spreadsheet'">
  <img src="{$spreadsheets_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google Presentations icon *** -->
<!-- TODO(timg): remove once Docs eliminates SimplePresentaionView URLs -->
<xsl:if test="starts-with($stripped_url,
                          concat('docs.google.com/a/', $apps_domain, '/SimplePresentationView?')) or
              starts-with($stripped_url,
                          concat('docs.google.com/a/', $apps_domain, '/PresentationView?')) or
              RF[@NAME='type']/@VALUE='presentation'">
  <img src="{$presentations_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google PDF viewer icon *** -->
<xsl:if test="RF[@NAME='type']/@VALUE='pdf'">
  <img src="{$pdf_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** Google Drawing icon *** -->
<xsl:if test="RF[@NAME='type']/@VALUE='drawing'">
  <img src="{$drawing_icon}" alt="" height="16" width="16"/><xsl:call-template name="nbsp"/>
</xsl:if>

<!-- *** GMail icon *** -->
<xsl:if test="starts-with($stripped_url, 'mail.google.com') or
              RF[@NAME='type']/@VALUE='mail'">
  <img src="{$email_icon}" alt="" height="16" width="16"/>&#xA0;
</xsl:if>

<!-- *** Translation button -->
<xsl:variable name="res_num" select="@N"/>
<xsl:if test="$show_translation = '1' and $only_apps != '1'">
  <span class="trns-span" id="sec_trns_elem_span_{$res_num}"></span>
</xsl:if>

<!-- *** Result Title (including PDF tag and hyperlink) *** -->
<xsl:if test="$show_res_title != '0'">
  <span class="mime"><strong>
  <xsl:choose>
    <xsl:when test="@MIME='text/html' or @MIME='' or not(@MIME)"></xsl:when>
    <xsl:when test="@MIME='text/plain'">[TEXT]</xsl:when>
    <xsl:when test="@MIME='application/rtf'">[RTF]</xsl:when>
    <xsl:when test="@MIME='application/pdf'">[PDF]</xsl:when>
    <xsl:when test="@MIME='application/postscript'">[PS]</xsl:when>
    <xsl:when test="@MIME='application/vnd.ms-powerpoint' or @MIME='application/vnd.openxmlformats-officedocument.presentationml.presentation'">[MS POWERPOINT]</xsl:when>
    <xsl:when test="@MIME='application/vnd.ms-excel' or @MIME='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'">[MS EXCEL]</xsl:when>
    <xsl:when test="@MIME='application/msword' or @MIME='application/vnd.openxmlformats-officedocument.wordprocessingml.document'">[MS WORD]</xsl:when>
    <xsl:otherwise>
      <xsl:variable name="extension">
        <xsl:call-template name="last_substring_after">
          <xsl:with-param name="string" select="substring-after(
                                                $temp_url,
                                                '/')"/>
          <xsl:with-param name="separator" select="'.'"/>
          <xsl:with-param name="fallback" select="'UNKNOWN'"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:if test="string-length($extension) &lt;= 5">
        [<xsl:value-of select="translate($extension,$lower,$upper)"/>]
      </xsl:if>
    </xsl:otherwise>
  </xsl:choose>
  </strong></span>
  <xsl:text> </xsl:text>

  <xsl:variable name="link"
   select="$url_indexed and not(starts-with(U, $googleconnector_protocol))"/>

  <xsl:if test="$link">

    <xsl:text disable-output-escaping='yes'>&lt;a 
          ctype="c"
    </xsl:text>
          rank=&quot;<xsl:value-of select="position()"/>&quot;
    <xsl:if test="$skin_class != 'skinned'">
      <xsl:text disable-output-escaping='yes'> target="_parent" </xsl:text>
    </xsl:if>
    <xsl:text disable-output-escaping='yes'>
    <!-- has it been called with a potential to be iframed? if so set a base to _parent -->
          href="</xsl:text>

    <xsl:choose>
      <xsl:when test="starts-with(U, $dbconnector_protocol)">
        <xsl:variable name="cache_encoding">
          <xsl:choose>
            <xsl:when test="'' != HAS/C/@ENC"><xsl:value-of select="HAS/C/@ENC"/></xsl:when>
            <xsl:otherwise>UTF-8</xsl:otherwise>
          </xsl:choose>
          </xsl:variable><xsl:value-of select="$gsa_search_root_path_prefix"/>?q=cache:<xsl:value-of select="HAS/C/@CID"/>:<xsl:value-of select="$stripped_url"/>+<xsl:value-of select="$stripped_search_query"/>&amp;<xsl:value-of select="$base_url"/>&amp;oe=<xsl:value-of select="$cache_encoding"/>
      </xsl:when>

      <xsl:when test="starts-with(U, $db_url_protocol)">
        <xsl:value-of disable-output-escaping='yes'
                      select="concat('db/', $temp_url)"/>
      </xsl:when>
      <!-- *** URI for smb or NFS must be escaped because it appears in the URI query *** -->
      <xsl:when test="$protocol='nfs' or $protocol='smb'">
        <xsl:value-of disable-output-escaping='yes'
                      select="concat($protocol,'/',$temp_url)"/>
      </xsl:when>
      <xsl:when test="$protocol='unc'">
        <xsl:value-of disable-output-escaping='yes' select="concat('file://', $display_url2)"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of disable-output-escaping='yes' select="U"/>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:text disable-output-escaping='yes'>"&gt;</xsl:text>
  </xsl:if>
  <span id="title_{$res_num}" class="l">
  <xsl:choose>
    <xsl:when test="T">
      <span class= "goog-trans-section l" transId="gadget_{$res_num}">
        <xsl:call-template name="reformat_keyword">
          <xsl:with-param name="orig_string" select="T"/>
        </xsl:call-template>
      </span>
    </xsl:when>
    <xsl:otherwise><xsl:value-of select="$stripped_url"/></xsl:otherwise>
  </xsl:choose>
  </span>
  <xsl:if test="$link">
      <xsl:text disable-output-escaping='yes'>&lt;/a&gt;</xsl:text>
  </xsl:if>
</xsl:if>


<!-- *** Snippet Box *** -->
<div class="wrapper">
  <div class="gsa-row">
    <div class="col s">
              <xsl:if test="$show_res_snippet != '0' and string-length(S) and
                    $only_apps != '1'">
        <span id="snippet_{$res_num}" class= "goog-trans-section snippet-details" transId="gadget_{$res_num}">
          <xsl:call-template name="reformat_keyword">
            <xsl:with-param name="orig_string" select="S"/>
          </xsl:call-template>
        </span>
      </xsl:if>

      <!-- *** Meta tags *** -->
      <xsl:if test="$show_meta_tags != '0' and $only_apps != '1'">
        <xsl:apply-templates select="MT"/>
      </xsl:if>

      <xsl:if test="$only_apps != '1' and
                    ($show_res_snippet != '0' and string-length(S)) or
                    ($show_meta_tags != '0' and MT[(@N != '') or (@V != '')])">
      <br/>
      </xsl:if>

      <!-- *** URL *** -->
      <xsl:if test="$only_apps != '1' or
                    ($only_apps = '1' and $show_apps_segmented_ui != '1')">
      <span class="index-details">
        <xsl:choose>
          <xsl:when test="not($url_indexed)">
            <xsl:if test="($show_res_size!='0') or
                          ($show_res_date!='0') or
                          ($show_res_cache!='0')">
              <xsl:text>Not Indexed:</xsl:text>
              <xsl:value-of select="$stripped_url"/>:
            </xsl:if>
          </xsl:when>
          <xsl:otherwise>
            <xsl:if test="$show_res_url != '0'">
              <xsl:value-of select="$stripped_url"/>
            </xsl:if>
          </xsl:otherwise>
        </xsl:choose>
      </span>
      </xsl:if>

      <!-- *** Miscellaneous (- size - date - cache) *** -->
      <xsl:if test="$url_indexed">
      <xsl:choose>
        <xsl:when test="'' != HAS/C/@ENC">
         <xsl:apply-templates select="HAS/C">
                       <xsl:with-param name="stripped_url" select="$stripped_url"/>
                       <xsl:with-param name="escaped_url" select="$escaped_url"/>
                       <xsl:with-param name="query" select="$query"/>
                       <xsl:with-param name="mime" select="@MIME"/>
                       <xsl:with-param name="date" select="FS[@NAME='date']/@VALUE"/>
                       <xsl:with-param name="result_num" select="$res_num"/>
         </xsl:apply-templates>
        </xsl:when>
        <xsl:otherwise>
        <xsl:call-template name="showdate">
            <xsl:with-param name="date" select="FS[@NAME='date']/@VALUE"/>
            <xsl:with-param name="escaped_url" select="$escaped_url"/>
        </xsl:call-template>
        </xsl:otherwise>
        </xsl:choose>
      </xsl:if>

      <!-- *** Link to more links from this site *** -->
      <xsl:if test="HN">
        <br/>
        <xsl:choose>
          <xsl:when test="HN/@MDT != ''">
            <xsl:variable name="crowded_metatag" select="HN/@MDT"/>
            <xsl:variable name="crowded_metavalue" select="HN/@MDV"/>
            <xsl:variable name="crowded_matchtype" select="HN/@MCT"/>

            <!-- *** search_url_with_metadata *** -->
            <xsl:variable name="search_url_with_metadata">
              <xsl:for-each
                  select="/GSP/PARAM[(@name != 'start') and
                                     (@name != $embedded_mode_root_path_param) and
                                     (@name != $embedded_mode_resource_root_path_param) and
                                     (@name != $embedded_mode_disable_style) and
                                     (@name != 'swrnum') and
                                     (@name != 'expertsearchasync') and
                                     (@name != 'epoch' or $is_test_search != '') and
                                     not(starts-with(@name, 'metabased_'))]">
                <xsl:choose>
                  <xsl:when test="@name = 'ip' and $show_ips_in_search_url = '0'">
                    <!-- do nothing to remove 'ip' from the URL -->
                  </xsl:when>
                  <xsl:when test="@name = 'q'">
                    <xsl:value-of select="@name"/>
                    <xsl:text>=</xsl:text>
                    <xsl:value-of select="@original_value"/>
                    <xsl:text>+inmeta:</xsl:text>
                    <xsl:call-template name="term-escape">
                      <xsl:with-param name="val" select="$crowded_metatag"/>
                    </xsl:call-template>
                    <xsl:choose>
                      <xsl:when test="$crowded_matchtype = 'inexact'">
                        <xsl:text>~</xsl:text>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text>=</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                    <xsl:call-template name="term-escape">
                      <xsl:with-param name="val" select="$crowded_metavalue"/>
                    </xsl:call-template>
                    <xsl:if test="$crowded_matchtype = 'wildcard'">
                      <xsl:text>*</xsl:text>
                    </xsl:if>
                  </xsl:when>
                  <xsl:when test="@name = 'only_apps' and $show_apps_segmented_ui = '1'">
                    <xsl:value-of select="'exclude_apps=1'" />
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
                    <xsl:value-of select="@original_value"/>
                  </xsl:otherwise>
                </xsl:choose>
                <xsl:if test="position() != last()">
                  <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
                </xsl:if>
              </xsl:for-each>
            </xsl:variable>

            <!-- Show "More results" message depending on the type of metadata match-->
            <xsl:variable name="match_type_msg">
              <xsl:choose>
                <xsl:when test="$crowded_matchtype = 'inexact'">
                  where metatag <xsl:value-of select="$crowded_metatag"/> contains <xsl:value-of select="$crowded_metavalue"/>
                </xsl:when>
                <xsl:otherwise> <!-- Exact match -->
                  that exactly contains metadata <xsl:value-of select="$crowded_metatag"/>=<xsl:value-of select="$crowded_metavalue"/>
                  <xsl:if test = "$crowded_matchtype = 'wildcard'">
                    <xsl:text>*</xsl:text>
                  </xsl:if>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            [
              <a ctype="sitesearch" class="f" href="{$gsa_search_root_path_prefix}?as_sitesearch={$crowded_url}&amp;{$search_url_with_metadata}">
                More results from <xsl:value-of select="$crowded_display_url"/>
                <xsl:value-of select="$match_type_msg" />
              </a>
            ]

          </xsl:when>
          <xsl:otherwise>
            [<a ctype="sitesearch" class="f" href="{$gsa_search_root_path_prefix}?as_sitesearch={$crowded_url}&amp;{
                $search_url}">More results from <xsl:value-of select="$crowded_display_url"/></a>
            ]
          </xsl:otherwise>
        </xsl:choose>
      <!-- *** Link to aggregated results from database source *** -->
      <xsl:if test="starts-with($crowded_url, $db_url_protocol)">
      [
      <a ctype="db" class="f" href="dbaggr?sitesearch={$crowded_url}&amp;{
        $search_url}&amp;filter=0">View all data</a>
          ]
        </xsl:if>
      </xsl:if>


      <!-- *** Result Footer *** -->
    </div>
  </div>
</div>
</p>

<!-- *** End indenting as required (only supports 2 levels) *** -->
<xsl:if test="@L='2'">
  <xsl:text disable-output-escaping="yes">&lt;/blockquote&gt;</xsl:text>
</xsl:if>

</xsl:template>

<!-- **********************************************************************
Meta tag values within a result (do not customize)
   ********************************************************************** -->
<xsl:template match="MT">
<br/>
<span class="f"><xsl:value-of select="@N"/>: </span><xsl:value-of select="@V"/>
</xsl:template>

<!-- **********************************************************************
A single keymatch result (do not customize)
   ********************************************************************** -->
<xsl:template match="GM">
<p>
  <div class="wrapper keymatch">
    <div class="gsa-row">
      <div class="col">
        <a ctype="keymatch" href="{GL}">
          <xsl:value-of select="substring-before(GD,'#')"/>
        </a>
        <span class="keymatch-desc"><xsl:value-of select="substring-after(GD,'#')"/></span>
        <font size="-1" color="{$res_url_color}">
          <span class="a">
             <xsl:value-of select="GL"/>
          </span>
        </font>
      </div>
    </div>
  </div>
</p>
</xsl:template>


<!-- **********************************************************************
Variables for reformatting keyword-match display (do not customize)
   ********************************************************************** -->
<xsl:variable name="keyword_orig_start" select="'&lt;b&gt;'"/>
<xsl:variable name="keyword_orig_end" select="'&lt;/b&gt;'"/>

<xsl:variable name="keyword_reformat_start">
<xsl:if test="$res_keyword_format">
  <xsl:text>&lt;</xsl:text>
  <xsl:value-of select="$res_keyword_format"/>
  <xsl:text>&gt;</xsl:text>
</xsl:if>
<xsl:if test="($res_keyword_size) or ($res_keyword_color)">
<xsl:text>&lt;font</xsl:text>
<xsl:if test="$res_keyword_size">
  <xsl:text> size="</xsl:text>
  <xsl:value-of select="$res_keyword_size"/>
  <xsl:text>"</xsl:text>
</xsl:if>
<xsl:if test="$res_keyword_color">
  <xsl:text> color="</xsl:text>
  <xsl:value-of select="$res_keyword_color"/>
  <xsl:text>"</xsl:text>
</xsl:if>
<xsl:text>&gt;</xsl:text>
</xsl:if>
</xsl:variable>

<xsl:variable name="keyword_reformat_end">
<xsl:if test="($res_keyword_size) or ($res_keyword_color)">
  <xsl:text>&lt;/font&gt;</xsl:text>
</xsl:if>
<xsl:if test="$res_keyword_format">
  <xsl:text>&lt;/</xsl:text>
  <xsl:value-of select="$res_keyword_format"/>
  <xsl:text>&gt;</xsl:text>
</xsl:if>
</xsl:variable>

<!-- **********************************************************************
Reformat the keyword match display in a title/snippet string
   (do not customize)
   ********************************************************************** -->
<xsl:template name="reformat_keyword">
<xsl:param name="orig_string"/>

<xsl:variable name="reformatted_1">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="$keyword_orig_start"/>
    <xsl:with-param name="replace" select="$keyword_reformat_start"/>
    <xsl:with-param name="string" select="$orig_string"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="reformatted_2">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="$keyword_orig_end"/>
    <xsl:with-param name="replace" select="$keyword_reformat_end"/>
    <xsl:with-param name="string" select="$reformatted_1"/>
  </xsl:call-template>
</xsl:variable>

<xsl:value-of disable-output-escaping='yes' select="$reformatted_2"/>

</xsl:template>


<!-- **********************************************************************
Helper templates for generating a result item (do not customize)
   ********************************************************************** -->

<!-- *** Miscellaneous: - size - date - cache *** -->
<xsl:template match="C">
  <xsl:param name="stripped_url"/>
  <xsl:param name="escaped_url"/>
  <xsl:param name="query"/>
  <xsl:param name="mime"/>
  <xsl:param name="date"/>
  <xsl:param name="result_num"/>

  <xsl:variable name="docid"><xsl:value-of select="@CID"/></xsl:variable>

  <xsl:if test="$show_res_size != '0'">
  <xsl:if test="not(@SZ='')">
      <span class="index-details">
        <xsl:text> - </xsl:text>
        <xsl:value-of select="@SZ"/>
      </span>
  </xsl:if>
  </xsl:if>

  <xsl:call-template name="showdate">
      <xsl:with-param name="date" select="$date"/>
      <xsl:with-param name="escaped_url" select="$escaped_url"/>
  </xsl:call-template>

  <xsl:if test="$show_res_cache != '0'">
     <span class="index-details">
      <xsl:text> - </xsl:text>
      </span>
      <xsl:variable name="cache_encoding">
        <xsl:choose>
          <xsl:when test="'' != @ENC"><xsl:value-of select="@ENC"/></xsl:when>
          <xsl:otherwise>UTF-8</xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <a ctype="cache" id="cache_link_{$result_num}" class="f"
            href="{$gsa_search_root_path_prefix}?q=cache:{$docid}:{$escaped_url}+{
                  $stripped_search_query}&amp;{$base_url}&amp;oe={$cache_encoding}">
        <xsl:choose>
          <xsl:when test="not($mime)">Cached</xsl:when>
          <xsl:when test="$mime='text/html'">Cached</xsl:when>
          <xsl:when test="$mime='text/plain'">Cached</xsl:when>
          <xsl:otherwise>Text Version</xsl:otherwise>
        </xsl:choose>
      </a>
      <xsl:if test="$show_translation = '1' and $only_apps != '1'">
        <xsl:call-template name="nbsp3"/>
        <a ctype="cache" id="translate_cache_link_{$result_num}" class="f trns-cache-link"
            href="{$gsa_search_root_path_prefix}?q=cache:{$docid}:{$escaped_url}+{
                 $stripped_search_query}&amp;{$base_url}&amp;oe={$cache_encoding}">Translated
        </a>
      </xsl:if>
  </xsl:if>

</xsl:template>

<xsl:template name="showdate">
  <xsl:param name="date"/>
  <xsl:param name="escaped_url"/>

  <xsl:if test="$show_res_date != '0'">
  <xsl:if test="($date != '' and not(contains($escaped_url, 'learn.scu') or contains($escaped_url, 'learn-stage.scu')))">
      <span class="index-details">
      <xsl:text> - </xsl:text>
      <xsl:value-of select="$date"/>
      </span>
  </xsl:if>
  </xsl:if>
</xsl:template>


<!-- **********************************************************************
Google navigation bar in result page (do not customize)
   ********************************************************************** -->
<xsl:template name="google_navigation">
  <xsl:param name="prev"/>
  <xsl:param name="next"/>
  <xsl:param name="view_begin"/>
  <xsl:param name="view_end"/>
  <xsl:param name="guess"/>
  <xsl:param name="navigation_style"/>
  <xsl:param name="dynamic_nav_bar"/>

<!-- *** Override the navigation style to 'simple' type if result estimation
         is not available and the navigation type has been specified
         as 'google'. *** -->
<xsl:variable name="navigation_style_to_use">
  <xsl:choose>
    <xsl:when test="$navigation_style = 'google' and $guess = ''">simple</xsl:when>
    <xsl:otherwise><xsl:value-of select="$navigation_style"/></xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="fontclass">
  <xsl:choose>
    <xsl:when test="$navigation_style_to_use = 'top'
        and $dynamic_nav_bar = '1'">dn-bar-nav</xsl:when>
    <xsl:when test="$navigation_style_to_use = 'top'">s</xsl:when>
    <xsl:otherwise></xsl:otherwise> <!-- changed from 'b' to '' so this can be controlled via CSS more easily -->
  </xsl:choose>
</xsl:variable>

<!-- *** Test to see if we should even show navigation *** -->
<xsl:if test="($prev) or ($next)">

<!-- *** Start Google result navigation bar *** -->

  <xsl:if test="$navigation_style_to_use != 'top'">
    <xsl:text disable-output-escaping="yes">&lt;div class=&quot;n&quot;&gt;</xsl:text>
  </xsl:if>
  <div class="wrapper">
    <div class="gsa-row">
      <!-- *** Show previous navigation, if available *** -->
      <ul class="n-ul">
      <xsl:choose>
        <xsl:when test="$prev">
          <li class="{$fontclass}">
            <a ctype="nav.prev"
               href="{$gsa_search_root_path_prefix}?{$search_url}&amp;start={$view_begin - $num_results - 1}">
            <xsl:if test="$navigation_style_to_use = 'google'">
              <img src="{$gsa_resource_root_path_prefix}/nav_previous.gif" width="68" height="26" alt="Previous" border="0"/>
             </xsl:if>
            <xsl:if test="$navigation_style_to_use = 'top'">
              <xsl:text>&lt;</xsl:text><xsl:call-template name="nbsp"/>
            </xsl:if>
            <xsl:text>Previous</xsl:text>
          </a>
          </li>
        </xsl:when>
      <xsl:otherwise>
        <xsl:if test="$navigation_style_to_use = 'google'">
          <img src="{$gsa_resource_root_path_prefix}/nav_first.png" width="18" height="26" alt="First" border="0"/>
        </xsl:if>
      </xsl:otherwise>
      </xsl:choose>    
      <xsl:if test="($navigation_style_to_use = 'google') or
                    ($navigation_style_to_use = 'link')">
<!-- *** Google result set navigation *** -->
      <xsl:variable name="mod_end">
        <xsl:choose>
          <xsl:when test="$next"><xsl:value-of select="$guess"/></xsl:when>
          <xsl:otherwise><xsl:value-of select="$view_end"/></xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:call-template name="result_nav">
        <xsl:with-param name="start" select="0"/>
        <xsl:with-param name="end" select="$mod_end"/>
        <xsl:with-param name="current_view" select="($view_begin)-1"/>
        <xsl:with-param name="navigation_style" select="$navigation_style_to_use"/>
      </xsl:call-template>
      </xsl:if>

        <!-- *** Show next navigation, if available *** -->
      <xsl:choose>
        <xsl:when test="$next">
          <li class="{$fontclass}">
          <a ctype="nav.next" href="{$gsa_search_root_path_prefix}?{$search_url}&amp;start={$view_begin +
            $num_results - 1}">
            <xsl:if test="$navigation_style_to_use = 'google'">
              <img src="{$gsa_resource_root_path_prefix}/nav_next.png" width="100" height="26" alt="Next" border="0"/>
            </xsl:if>
            <xsl:text>Next</xsl:text>
            <xsl:if test="$navigation_style_to_use = 'top'">
              <xsl:call-template name="nbsp"/><xsl:text>&gt;</xsl:text>
            </xsl:if>
          </a>
          </li>
        </xsl:when>
        <xsl:otherwise>
          <xsl:if test="$navigation_style_to_use = 'google'">
            <img src="{$gsa_resource_root_path_prefix}/nav_last.png" width="46" height="26" alt="Last" border="0"/>
          </xsl:if>
        </xsl:otherwise>
      </xsl:choose>
      </ul>
        <!-- *** End Google result bar *** -->
    </div>
  </div>
  <xsl:if test="$navigation_style_to_use != 'top'">
    <xsl:text disable-output-escaping="yes">&lt;/div&gt;</xsl:text>
  </xsl:if>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Helper templates for generating Google result navigation (do not customize)
 only shows 10 sets up or down from current view
   ********************************************************************** -->
<xsl:template name="result_nav">
<xsl:param name="start" select="'0'"/>
<xsl:param name="end"/>
<xsl:param name="current_view"/>
<xsl:param name="navigation_style"/>

<!-- *** Choose how to show this result set *** -->
<xsl:choose>
  <xsl:when test="($start)&lt;(($current_view)-(10*($num_results)))">
  </xsl:when>
  <xsl:when test="(($current_view)&gt;=($start)) and
                  (($current_view)&lt;(($start)+($num_results)))">
    <li>
      <xsl:if test="$navigation_style = 'google'">
        <img src="{$gsa_resource_root_path_prefix}/nav_current.gif" width="16" height="26" alt="Current"/>
      </xsl:if>
      <span class="i"><xsl:value-of
        select="(($start)div($num_results))+1"/></span>
    </li>
  </xsl:when>
  <xsl:otherwise>
    <li>
      <a ctype="nav.page" href="{$gsa_search_root_path_prefix}?{$search_url}&amp;start={$start}">
      <xsl:if test="$navigation_style = 'google'">
        <img src="{$gsa_resource_root_path_prefix}/nav_page.gif" width="16" height="26" alt="Navigation"
             border="0"/>
      </xsl:if>
      <xsl:value-of select="(($start)div($num_results))+1"/>
      </a>
    </li>
  </xsl:otherwise>
</xsl:choose>

<!-- *** Recursively iterate through result sets to display *** -->
<xsl:if test="((($start)+($num_results))&lt;($end)) and
              ((($start)+($num_results))&lt;(($current_view)+
              (10*($num_results))))">
  <xsl:call-template name="result_nav">
    <xsl:with-param name="start" select="$start+$num_results"/>
    <xsl:with-param name="end" select="$end"/>
    <xsl:with-param name="current_view" select="$current_view"/>
    <xsl:with-param name="navigation_style" select="$navigation_style"/>
  </xsl:call-template>
</xsl:if>

</xsl:template>


<!-- **********************************************************************
Top separation bar (do not customize)
   ********************************************************************** -->
<xsl:template name="top_sep_bar">
<xsl:param name="text"/>
<xsl:param name="show_info"/>
<xsl:param name="time"/>

  <xsl:if test="$show_custom_tabs != '0'">
    <xsl:call-template name="gsa_custom_tabs"/>
  </xsl:if>  

  <div class="wrapper clearfix">
    <div class="gsa-row">
      <div class="col seperator-bar">
         <div class="timing">
         <xsl:if test="$show_info != 0">
          <span class="search-stats">
          <xsl:if test="count(/GSP/RES/R)>0 ">
            <xsl:choose>
              <xsl:when test="(($access = 's' or $access = 'a') and /GSP/RES/M = '')">
                Results <b><xsl:value-of select="RES/@SN"/></b> - <b id="num_results"><xsl:value-of select="RES/@EN"/></b> for <b><xsl:value-of select="$space_normalized_query"/></b>.
              </xsl:when>
              <xsl:otherwise>
                Currently showing <b><xsl:value-of select="RES/@SN"/></b> - <b id="num_results"><xsl:value-of select="RES/@EN"/></b> of about <b><xsl:value-of select="RES/M"/></b> results for <b><xsl:value-of select="$space_normalized_query"/></b>.
              </xsl:otherwise>
            </xsl:choose>
          </xsl:if>
          <xsl:if test="$show_timing_label !=0">
            Search took <span style="font-weight: bold;" id="search_time"><xsl:value-of select="round($time * 100.0) div 100.0"/></span> seconds.
          </xsl:if>
          <xsl:if test="$show_sort_by != '0'">
              <xsl:call-template name="sort_by"/>
          </xsl:if>
          </span>
        </xsl:if>  
         </div>
      </div> 
    </div>
  </div>
  <hr class="z"/>
  <xsl:if test="$choose_sep_bar = 'line'">
    <hr size="1" color="gray"/>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
Analytics script (do not customize)
   ********************************************************************** -->
<xsl:template name="analytics">
<xsl:if test="string-length($analytics_account) != 0">
 <script type="text/javascript" src="{$analytics_script_url}"></script>
 <script type="text/javascript">
   var pageTracker = _gat._getTracker("<xsl:value-of select='$analytics_account'/>");
   pageTracker._trackPageview();
 </script>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Utility function for constructing copyright text (do not customize)
   ********************************************************************** -->
<xsl:template name="copyright">
  <div class="copyright clearfix">
    <span class="powered-by">Powered by Google Search Appliance</span>
  </div>
</xsl:template>


<!-- **********************************************************************
Utility functions for generating html entities
   ********************************************************************** -->
<xsl:template name="nbsp">
<xsl:text disable-output-escaping="yes">&amp;nbsp;</xsl:text>
</xsl:template>
<xsl:template name="nbsp3">
<xsl:call-template name="nbsp"/>
<xsl:call-template name="nbsp"/>
<xsl:call-template name="nbsp"/>
</xsl:template>
<xsl:template name="nbsp4">
<xsl:call-template name="nbsp3"/>
<xsl:call-template name="nbsp"/>
</xsl:template>
<xsl:template name="quot">
<xsl:text disable-output-escaping="yes">&amp;quot;</xsl:text>
</xsl:template>
<xsl:template name="rsaquo">
<dfn><xsl:text disable-output-escaping="yes">&amp;#8250;</xsl:text></dfn>
</xsl:template>
<xsl:template name="endash">
<xsl:text disable-output-escaping="yes">&amp;#8211;</xsl:text>
</xsl:template>
<xsl:template name="copy">
<xsl:text disable-output-escaping="yes">&amp;copy;</xsl:text>
</xsl:template>

<!-- **********************************************************************
Utility functions for generating head elements so that the XSLT processor
won't add a meta tag to the output, since it may specify the wrong
encoding (utf8) in the meta tag.
   ********************************************************************** -->
<xsl:template name="plainHeadStart">
<xsl:text disable-output-escaping="yes">&lt;head&gt;</xsl:text>
<meta name="robots" content="NOINDEX,NOFOLLOW"/>
<xsl:text>
</xsl:text>
</xsl:template>
<xsl:template name="plainHeadEnd">
<xsl:text disable-output-escaping="yes">&lt;/head&gt;</xsl:text>
<xsl:text>
</xsl:text>
</xsl:template>


<!-- **********************************************************************
Utility functions for generating head elements with a meta tag to the output
specifying the character set as requested
   ********************************************************************** -->
<xsl:template name="langHeadStart">
<xsl:if test="$is_embedded_mode != '1'">
<xsl:text disable-output-escaping="yes">&lt;head&gt;</xsl:text>
<meta name="robots" content="NOINDEX,NOFOLLOW"/>
<meta name="viewport" content="width=device-width, target-densitydpi=160dpi, initial-scale=1"/>
<xsl:choose>
  <xsl:when test="PARAM[(@name='oe') and (@value='utf8')]">
    <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='oe') and (@value!='')]">
    <meta http-equiv="content-type" content="text/html; charset={PARAM[@name='oe']/@value}"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-CN')]">
    <meta http-equiv="content-type" content="text/html; charset=GB2312"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-TW')]">
    <meta http-equiv="content-type" content="text/html; charset=Big5"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_cs')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_da')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_nl')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_en')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_et')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_fi')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_fr')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_de')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_el')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-7"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_iw')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-8-I"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_hu')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_is')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_it')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_ja')]">
    <meta http-equiv="content-type" content="text/html; charset=Shift_JIS"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_ko')]">
    <meta http-equiv="content-type" content="text/html; charset=EUC-KR"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_lv')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_lt')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_no')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_pl')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_pt')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_ro')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_ru')]">
    <meta http-equiv="content-type" content="text/html; charset=windows-1251"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_es')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:when test="PARAM[(@name='lr') and (@value='lang_sv')]">
    <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
  </xsl:when>
  <xsl:otherwise>
    <meta http-equiv="content-type" content="text/html; charset="/>
  </xsl:otherwise>
</xsl:choose>
</xsl:if>

<!-- UAR v2 - Load the right CSS file for the UAR UI component,
     as required. This should be placed in the head section of the
     document. -->
<xsl:if test="$show_onebox != '0'">
  <xsl:if test="/GSP/ENTOBRESULTS/OBRES/provider = $uar_provider">
  <xsl:choose>
    <xsl:when test="$document_direction = 'rtl'">
      <link rel="stylesheet"
          href="{$gsa_resource_root_path_prefix}/uardesktop_rtl.css"
          type="text/css" />
    </xsl:when>
    <xsl:otherwise>
      <link rel="stylesheet"
          href="{$gsa_resource_root_path_prefix}/uardesktop.css"
          type="text/css" />
    </xsl:otherwise>
  </xsl:choose>
  <!-- Override below styles to change the look and feel of the UAR section by
       adding appropriate CSS style properties. -->
  <style>
    /**
     * Background (default: #f2f7ff) and border-color (default: #ebebeb)
     * property for the UAR section.
     */
    .gsa-uar-container {
    }
    /* Description title color. Default is #555. */
    .gsa-uar-container h2 {
    }
    /* Color of the URL text. Default is #0e774a. */
    .gsa-uar-record cite {
    }
    <xsl:if test="$is_disable_style_in_embedded_mode = '1'">
    .gsa-uar-container {
      background: none;
    }
    .oneboxResults .gsa-uar-url-field, .oneboxResults .gsa-uar-title-field {
      width: 99%;
    }
    </xsl:if>
  </style>
  </xsl:if>
</xsl:if>

<!-- Expert Search - Load the right CSS file for the expert search UI
     component. -->
<xsl:if test="$is_expert_search_configured = '1'">
  <xsl:call-template name="include_expert_search_css">
    <xsl:with-param name="doc_dir" select="$document_direction" />
    <xsl:with-param name="src_prefix" select="$gsa_resource_root_path_prefix" />
  </xsl:call-template>
  
  <xsl:if test="$is_disable_style_in_embedded_mode = '1'">
    <style type="text/css">
      .gsa-exp-container,
      .gsa-exp-header h2,
      .gsa-exp-header a,
      ol.gsa-exp-results li {
        font-size: inherit;
      }
      ol.gsa-exp-pagination a, ol.gsa-exp-pagination span {
        color: inherit;
      }
    </style>
  </xsl:if>
</xsl:if>
<script type="text/javascript">
  /* Returns the root path prefix for full-refresh search requests. */
  function GSA_getSearchRootPathPrefix() {
    return '<xsl:value-of select="$gsa_search_root_path_prefix" />';
  }
  /* Returns the root path prefix for resources. */
  function GSA_getResourceRootPathPrefix() {
    return '<xsl:value-of select="$gsa_resource_root_path_prefix" />';
  }
  /* Checks if the search results is accessed in embedded mode or not. */
  function GSA_isEmbeddedMode() {
    return <xsl:value-of
        select="if ($is_embedded_mode = '1') then 'true' else 'false'" />;
  }
</script>
<xsl:text>
</xsl:text>
</xsl:template>

<xsl:template name="langHeadEnd">
<xsl:if test="$is_embedded_mode != '1'">
<xsl:text disable-output-escaping="yes">&lt;/head&gt;</xsl:text>
</xsl:if>
<xsl:text>
</xsl:text>
</xsl:template>

<!-- *** Generates the <body> section for the search results page. *** -->
<xsl:template name="generate_html_body_for_search_results">
<!-- Import all required JavaScript modules based on enabled features. -->
<xsl:if test="$show_suggest = '1' or $show_res_clusters = '1'">
  <script type="text/javascript"
      src="{$gsa_resource_root_path_prefix}/common.js"></script>
  <script type="text/javascript"
      src="{$gsa_resource_root_path_prefix}/xmlhttp.js"></script>
  <script type="text/javascript"
      src="{$gsa_resource_root_path_prefix}/uri.js"></script>
</xsl:if>
<xsl:if test="$show_res_clusters = '1'">
  <script type="text/javascript"
      src="{$gsa_resource_root_path_prefix}/cluster.js"></script>
</xsl:if>
<!-- Add required JS function calls based on enabled features. -->
<xsl:variable name="ss_load_call">
  <!-- Initialize suggest control. -->
  <xsl:if test="$show_suggest != '0'">
    <xsl:text disable-output-escaping="yes">ss_sf();</xsl:text>
  </xsl:if>
</xsl:variable>
<xsl:variable name="cs_load_call">
  <!-- Initialize results clustering. -->
  <xsl:if test="$show_res_clusters = '1'">
    <xsl:text disable-output-escaping="yes">cs_loadClusters('</xsl:text>
    <xsl:value-of select="$search_url_escaped" />
    <xsl:text disable-output-escaping="yes">', cs_drawClusters);</xsl:text>
  </xsl:if>
</xsl:variable>

<!-- Do not render body tag in embedded mode. -->
<xsl:if test="$is_embedded_mode != '1'">
  <xsl:text disable-output-escaping="yes">&lt;</xsl:text>
  <xsl:text>body class="clearfix" onLoad="resetForms(); fixFileLinks();</xsl:text>
  <xsl:value-of select="$cs_load_call"/>
  <xsl:value-of select="$ss_load_call"/>
  <xsl:text disable-output-escaping="yes">" dir="ltr"&gt;</xsl:text>
  <xsl:text disable-output-escaping="yes">&lt;div id="container" class="schoolpage"&gt;</xsl:text>
  <xsl:call-template name="header_element"/>
  <xsl:call-template name="main_content_wrapper_start"/>
  <xsl:text disable-output-escaping="yes">&lt;div class="main-content"&gt;</xsl:text>
</xsl:if>
<!-- Render search results section. -->
<xsl:call-template name="search_results_body"/>
<!-- Load Suggest script. -->
<xsl:if test="$show_suggest = '1'">
  <xsl:call-template name="gsa_suggest" />
</xsl:if>
<!-- Make required onload JS calls directly when in embedded mode. -->
<xsl:if test="$is_embedded_mode = '1'">
  <script type="text/javascript">
    <xsl:value-of select="$cs_load_call"/>
  </script>
</xsl:if>
<!-- Create the input field element for expert search, if enabled. -->
<xsl:call-template name="include_expert_search_history_input" />
<!-- Initialize side bar if enabled. -->
<xsl:if test="$show_sidebar = '1'">
  <script type="text/javascript">
   initSidebar();
  </script>
</xsl:if>
<xsl:if test="$is_embedded_mode != '1'">
  <xsl:text disable-output-escaping="yes">&lt;/div&gt;</xsl:text>
    <!-- *** Customer's own result page footer *** -->
  <xsl:call-template name="footer_element"/>
  <xsl:call-template name="main_content_wrapper_end"/>
  <xsl:text disable-output-escaping="yes">&lt;/div&gt;</xsl:text>
  <xsl:text disable-output-escaping="yes">&lt;/body&gt;</xsl:text>
</xsl:if>
</xsl:template>

<!-- **********************************************************************
Utility functions (do not customize)
   ********************************************************************** -->

<!-- *** Find the substring after the last occurence of a separator *** -->
<xsl:template name="last_substring_after">

<xsl:param name="string"/>
<xsl:param name="separator"/>
<xsl:param name="fallback"/>

<xsl:variable name="newString"
  select="substring-after($string, $separator)"/>

<xsl:choose>
  <xsl:when test="$newString!=''">
    <xsl:call-template name="last_substring_after">
      <xsl:with-param name="string" select="$newString"/>
      <xsl:with-param name="separator" select="$separator"/>
      <xsl:with-param name="fallback" select="$newString"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$fallback"/>
  </xsl:otherwise>
</xsl:choose>

</xsl:template>

<!-- *** Find and replace *** -->
<xsl:template name="replace_string">
<xsl:param name="find"/>
<xsl:param name="replace"/>
<xsl:param name="string"/>
<xsl:choose>
  <xsl:when test="contains($string, $find)">
    <xsl:value-of select="substring-before($string, $find)"/>
    <xsl:value-of select="$replace"/>
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="$find"/>
      <xsl:with-param name="replace" select="$replace"/>
      <xsl:with-param name="string"
        select="substring-after($string, $find)"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$string"/>
  </xsl:otherwise>
</xsl:choose>
</xsl:template>

<!-- *** Decode hex encoding *** -->
<xsl:template name="decode_hex">
<xsl:param name="encoded" />

<xsl:variable name="hex" select="'0123456789ABCDEF'" />
<xsl:variable name="ascii"> !"#$%&amp;'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~</xsl:variable>

<xsl:choose>
  <xsl:when test="contains($encoded,'%')">
    <xsl:value-of select="substring-before($encoded,'%')" />
    <xsl:variable name="hexpair" select="translate(substring(substring-after($encoded,'%'),1,2),'abcdef','ABCDEF')" />
    <xsl:variable name="decimal" select="(string-length(substring-before($hex,substring($hexpair,1,1))))*16 + string-length(substring-before($hex,substring($hexpair,2,1)))" />
    <xsl:choose>
      <xsl:when test="$decimal &lt; 127 and $decimal &gt; 31">
        <xsl:value-of select="substring($ascii,$decimal - 31,1)" />
      </xsl:when>
      <xsl:when test="$decimal &gt; 159">
        <xsl:text disable-output-escaping="yes">%</xsl:text>
        <xsl:value-of select="$hexpair" />
      </xsl:when>
      <xsl:otherwise>?</xsl:otherwise>
    </xsl:choose>
    <xsl:call-template name="decode_hex">
      <xsl:with-param name="encoded" select="substring(substring-after($encoded,'%'),3)" />
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="$encoded" />
  </xsl:otherwise>
</xsl:choose>

</xsl:template>

<!-- *** Convert UNC *** -->
<xsl:template name="convert_unc">
<xsl:param name="string"/>
<xsl:variable name="slash">/</xsl:variable>
<xsl:variable name="backslash">\</xsl:variable>
<xsl:variable name="escaped_ampersand">&amp;amp;</xsl:variable>
<xsl:variable name="unescaped_ampersand">&amp;</xsl:variable>

<xsl:variable name="converted_1">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find"    select="$slash"/>
    <xsl:with-param name="replace" select="$backslash"/>
    <xsl:with-param name="string"  select="$string"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="converted_2">
  <xsl:call-template name="decode_hex">
    <xsl:with-param name="encoded" select="$converted_1"/>
  </xsl:call-template>
</xsl:variable>

<xsl:variable name="converted_3">
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find"    select="$escaped_ampersand"/>
    <xsl:with-param name="replace" select="$unescaped_ampersand"/>
    <xsl:with-param name="string"  select="$converted_2"/>
  </xsl:call-template>
</xsl:variable>

<xsl:value-of disable-output-escaping='yes' select="concat($backslash,$backslash,$converted_3)"/>

</xsl:template>

<!-- **********************************************************************
Display error messages
   ********************************************************************** -->
<xsl:template name="error_page">
<xsl:param name="errorMessage"/>
<xsl:param name="errorDescription"/>

<html>
  <xsl:attribute name="class">
  <xsl:value-of select="$skin_class"/>
  </xsl:attribute>
  <xsl:call-template name="plainHeadStart"/>
    <title><xsl:value-of select="$error_page_title"/></title>
          <xsl:call-template name="style"/>
  <xsl:call-template name="plainHeadEnd"/>
  <body>
    <xsl:attribute name="class">
  <xsl:value-of select="'clearfix'"/>
  </xsl:attribute>
  <xsl:attribute name="dir">ltr</xsl:attribute>
   <div id="container" class="schoolpage">
   <!--HEADER COMPONENTS-->
    <xsl:call-template name="header_element"/>
  <xsl:call-template name="main_content_wrapper_start"/>
    <div class="main-content" role="main">
    <xsl:call-template name="personalization"/>
    <xsl:call-template name="analytics"/>
  <xsl:if test="$show_logo != '0'">
              <table border="0" cellpadding="0" cellspacing="0">
                <tr>
                        <td rowspan="3" valign="top">
                        <xsl:call-template name="logo"/>
                        <xsl:call-template name="nbsp3"/>
                      </td>
                </tr>
              </table>
          </xsl:if>

    <xsl:call-template name="top_sep_bar">
      <xsl:with-param name="text" select="$sep_bar_error_text"/>
              <xsl:with-param name="show_info" select="0"/>
      <xsl:with-param name="time" select="0"/>
    </xsl:call-template>

    <p>
    <table width="99%" border="0" cellpadding="2" cellspacing="0">
      <tr>
        <td><font color="#990000" size="+1">Message:</font></td>
        <td><font color="#990000" size="+1"><xsl:value-of select="$errorMessage"/></font></td>
      </tr>
      <tr>
        <td><font color="#990000">Description:</font></td>
        <td><font color="#990000"><xsl:value-of select="$errorDescription"/></font></td>
      </tr>
      <tr>
        <td><font color="#990000">Details:</font></td>
        <td><font color="#990000"><xsl:copy-of select="/"/></font></td>
      </tr>
    </table>
    </p>

        <hr/>
        <xsl:call-template name="copyright"/>
    </div>
  <xsl:call-template name="footer_element"/>
  <xsl:call-template name="main_content_wrapper_end"/>
  </div>
  </body>
</html>
</xsl:template>


<!-- **********************************************************************
Google Desktop for Enterprise integration templates
   ********************************************************************** -->
<xsl:template name="desktop_tab">

<!-- *** Show the Google tabs *** -->

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.web" href="http://www.google.com/search?q={$qval}">Web</a>
</font>

<xsl:call-template name="nbsp4"/>

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.images"  href="http://images.google.com/images?q={$qval}">Images</a>
</font>

<xsl:call-template name="nbsp4"/>

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.groups" href="http://groups.google.com/groups?q={$qval}">Groups</a>
</font>

<xsl:call-template name="nbsp4"/>

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.news"  href="http://news.google.com/news?q={$qval}">News</a>
</font>

<xsl:call-template name="nbsp4"/>

<font size="-1">
  <a class="q" onClick="return window.qs?qs(this):1" ctype="desk.local"  href="http://local.google.com/local?q={$qval}">Local</a>
</font>

<xsl:call-template name="nbsp4"/>

<!-- *** Show the desktop and web tabs *** -->

<xsl:if test="CUSTOM/HOME">
  <xsl:comment>trh2</xsl:comment>
</xsl:if>
<xsl:if test="Q">
  <xsl:comment>trl2</xsl:comment>
</xsl:if>

<!-- *** Show the appliance tab *** -->
<font size="-1"><b><xsl:value-of select="$egds_appliance_tab_label"/></b></font>

</xsl:template>

<xsl:template name="desktop_results">
<xsl:comment>tro2</xsl:comment>
</xsl:template>

<!-- **********************************************************************
OneBox results (if any)
   ********************************************************************** -->
<xsl:template name="onebox">
<xsl:for-each select="/GSP/ENTOBRESULTS">
  <xsl:apply-templates/>
</xsl:for-each>
</xsl:template>

<!-- **********************************************************************
Swallow unmatched elements
   ********************************************************************** -->
<xsl:template match="@*|node()"></xsl:template>

<!-- **********************************************************************
Tabs template
Author: Vinay Joseph (vinay@vinayjoseph.com)
Date: 16th December 2015
Notes: Please be sure to change the site query parameter to match the relevant collections
in a given tab. Also note that the variable frontend has been defined at the top of the stylesheet. 
*************************************************************************** -->
<xsl:template name="gsa_custom_tabs">
  <xsl:variable name="tabs">
    <tabs>
      <tab name="All" col="scu" ctype="All_tab"></tab>
      <tab name="MySCU" col="myscu" ctype="courses_tab"></tab>
      <tab name="Policies" col="policies" ctype="policies_tab"></tab>
      <tab name="Library" col="library" ctype="library_tab"></tab>
      <tab name="People" col="staff_directory" ctype="staff_tab"></tab>
    </tabs>
  </xsl:variable>
<link rel="stylesheet" type="text/css" href="{$scu_template_css_path}/gsa/collection_tabs.css"></link>
<div class="container" id="centeredmenu">
  <ul class="search-collection-list desktop"> 
      <xsl:variable name="current_collection" select="/GSP/PARAM[@name='site']/@value" />
      <xsl:for-each select="$tabs/tabs/tab">
          <xsl:variable name="col" select="@col"></xsl:variable>
           <xsl:choose>
            <xsl:when test="$current_collection=$col">
              <li class="search-collection-tab-item {$col}">
                <a href="{$gsa_search_root_path_prefix}?{$custom_tab_url}&amp;site={$col}" ctype="{@ctype}" class="active">                 
                  <xsl:value-of select="@name"></xsl:value-of>
                </a>
              </li>
            </xsl:when>
            <xsl:otherwise>
              <li class="search-collection-tab-item {$col}">
                <a href="{$gsa_search_root_path_prefix}?{$custom_tab_url}&amp;site={$col}" ctype="{@ctype}">
                  <xsl:value-of select="@name"></xsl:value-of> 
                </a>
              </li>
            </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
  </ul>
</div>
</xsl:template>

<!-- SCU XSL FUNCTION -->

</xsl:stylesheet>


<!-- *** END OF STYLESHEET *** -->



              ]]></stylesheet.en>
              <synonyms><![CDATA[

              ]]></synonyms>
              <wildcard_wc_filter><![CDATA[
200
              ]]></wildcard_wc_filter>
          </frontend>
          <frontend Name="scu_header2">
              <default_language><![CDATA[
'en'
              ]]></default_language>
              <profile_sheet><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet>
              <profile_sheet.en><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet.en>
              <access_control_allow_origin><![CDATA[


              ]]></access_control_allow_origin>
              <badurls_noreturn><![CDATA[

              ]]></badurls_noreturn>
              <content_type><![CDATA[
text/html
              ]]></content_type>
              <domain_filter><![CDATA[

              ]]></domain_filter>
              <filetype_filter><![CDATA[

              ]]></filetype_filter>
              <good_ips><![CDATA[
0.0.0.0/0

              ]]></good_ips>
              <googlematch><![CDATA[

              ]]></googlematch>
              <lang_filter><![CDATA[

              ]]></lang_filter>
              <metatag_filter><![CDATA[

              ]]></metatag_filter>
              <query_expansion_filter><![CDATA[
QE_FULL

              ]]></query_expansion_filter>
              <query_expansion_meta_filter><![CDATA[
QE_META_NONE

              ]]></query_expansion_meta_filter>
              <scoring_policy_filter><![CDATA[

              ]]></scoring_policy_filter>
              <star_wildcard_default_filter><![CDATA[
1

              ]]></star_wildcard_default_filter>
              <stylesheet><![CDATA[
<!-- *** START OF STYLESHEET *** -->

<!-- **********************************************************************
 XSL to format the search output for Google Search Appliance
     ********************************************************************** -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
<xsl:include href="env_variables"/>

<xsl:template name="my_page_header">
  <!-- *** replace the following with your own xhtml code or replace the text
   between the xsl:text tags with html escaped html code *** -->
  <xsl:text disable-output-escaping="yes">
&lt;header class=&quot;clearfix&quot;&gt;
&lt;nav id=&quot;global-nav&quot; aria-label=&quot;Primary Top&quot; class=&quot;clearfix&quot;&gt;
&lt;ul id=&quot;global-nav-list&quot;&gt;
    &lt;li id=&quot;home&quot; class=&quot;no-expand&quot;&gt;&lt;a onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C1-Home&apos;]);&quot; href=&quot;http://scu.edu.au/&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;&lt;li id=&quot;future&quot;&gt;&lt;a href=&quot;http://scu.edu.au/futurestudents/&quot;&gt;Future Students&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
        &lt;a href=&quot;http://scu.edu.au/futurestudents/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS&apos;]);&quot;&gt;Future students home&lt;/a&gt;
&lt;a href=&quot;http://search.scu.edu.au/courses/#year=2016&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-2016CouOpt&apos;]);&quot;&gt;2016 course options &lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/scuinfodays/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-InfoDays&apos;]);&quot;&gt;SCU Info Days  &lt;sup class=&quot;minilabel&quot; style=&quot;font-size: 8px;&quot;&gt; NEW &lt;/sup&gt;&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/distance/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-DisEdu&apos;]);&quot;&gt;Distance and online&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/howtoapply/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-HowToApp&apos;]);&quot;&gt;How to apply&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/fees/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-Fees&apos;]);&quot;&gt;Fees&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/campustours/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-CamTou&apos;]);&quot;&gt;Campus tours&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/futurestudents/index.php/20/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-Acc&apos;]);&quot;&gt;Accommodation&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/scholarships/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-Sch&apos;]);&quot;&gt;Scholarships&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/scupathways/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-AdvStaPat&apos;]);&quot;&gt;Advanced standing and pathways&lt;/a&gt;
&lt;a href=&quot;http://scucollege.scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-SCUCol&apos;]);&quot;&gt;SCU College&lt;/a&gt;&lt;/div&gt;
    &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://scu.edu.au/international/&quot;&gt;International&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
        &lt;a href=&quot;http://scu.edu.au/international/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int&apos;]);&quot;&gt;International home&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/international/index.php/220/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-1&apos;]);&quot;&gt;International course options  &lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/international/apply/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-2&apos;]);&quot;&gt;How to apply&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/studyabroad/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-InboundStudents&apos;]);&quot;&gt;Inbound students&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/exchange/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-OutboundStudents&apos;]);&quot;&gt;Outbound students&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/international/index.php/186/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-4&apos;]);&quot;&gt;Living in Australia&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/international/agents/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-6&apos;]);&quot;&gt;Agents&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/englishlanguage/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-7&apos;]);&quot;&gt;English programs&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/international/index.php/82/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-8&apos;]);&quot;&gt;International and Enterprise&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://scu.edu.au/students/&quot;&gt;Students&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
&lt;a href=&quot;http://scu.edu.au/students/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS&apos;]);&quot;&gt;Students home&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/gettingstarted/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-NewStu&apos;]);&quot;&gt;New students&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/students/index.php/42/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Enr&apos;]);&quot;&gt;Enrolling&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/students/index.php/4/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-StuAdm&apos;]);&quot;&gt;Student administration&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/students/index.php/47/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-StuRe&apos;]);&quot;&gt;Study resources&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/students/index.php/109/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Ser&apos;]);&quot;&gt;Services and support&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/travel/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Tra&apos;]);&quot;&gt;Travel to SCU&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/activities/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Act&apos;]);&quot;&gt;Culture, sport and recreation&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/students/index.php/108/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Opp&apos;]);&quot;&gt;Opportunities&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/students/index.php/10/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-GraBey&apos;]);&quot;&gt;Graduation and beyond&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/students/contact/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Con&apos;]);&quot;&gt;Contact us&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/research/&quot;&gt;Research&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
&lt;a href=&quot;http://scu.edu.au/research/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res&apos;]);&quot;&gt;Research home&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/graduateschool/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-GradSch&apos;]);&quot;&gt;Graduate School&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/research/index.php/60/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-ResSerGra&apos;]);&quot;&gt;Research services and grants&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/graduateschool/index.php/12/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-HowToApp&apos;]);&quot;&gt;How to apply&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/research/index.php/40/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-Eth&apos;]);&quot;&gt;Ethics&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/research/index.php/66/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-ResCenCRN&apos;]);&quot;&gt;Research centres/CRN&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/geoscience/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-SCGS&apos;]);&quot;&gt;Southern Cross GeoScience&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/scps/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-SCPS&apos;]);&quot;&gt;Southern Cross Plant Science&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://scu.edu.au/space/&quot;&gt;Community&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
&lt;a href=&quot;http://scu.edu.au/space/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com&apos;]);&quot;&gt;Community home&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/sustainability/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-Sus&apos;]);&quot;&gt;Sustainability&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/space/index.php/4/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-ComEng&apos;]);&quot;&gt;Community engagement&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/news/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-SCUnews&apos;]);&quot;&gt;SCU news&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/scunews/index.php/31/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-SCUSocMed&apos;]);&quot;&gt;SCU on social media&lt;/a&gt;
&lt;a href=&quot;http://discover.scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-DisEne&apos;]);&quot;&gt;Discover eNews&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/events/index.php/events/all/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-Eve&apos;]);&quot;&gt;Events&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/alumni/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-Alu&apos;]);&quot;&gt;Alumni&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/experts/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-FinAnExp&apos;]);&quot;&gt;Find an expert&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/risingstars/index.php/4/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-RisStaPro&apos;]);&quot;&gt;Rising Stars program&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;    &lt;li style=&quot;padding-right:11px;&quot;&gt;&lt;a href=&quot;http://scu.edu.au/about/&quot;&gt;About Us&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
&lt;a href=&quot;http://scu.edu.au/about/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab&apos;]);&quot;&gt;About Us home&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/schools/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-AcaSch&apos;]);&quot;&gt;Academic schools&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/campuses/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-Loc&apos;]);&quot;&gt;Locations&lt;/a&gt; &lt;a href=&quot;http://scu.edu.au/jobs/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-Jobs&apos;]);&quot;&gt;Jobs @ SCU&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/about/index.php/46/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-SCUexe&apos;]);&quot;&gt;SCU Executives&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/staffdirectory/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-StaDir&apos;]);&quot;&gt;Staff Directory&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/contact/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-ConUs&apos;]);&quot;&gt;Contact Us&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;&lt;li id=&quot;course-search&quot; class=&quot;hide no-expand&quot; style=&quot;padding-right:14px;padding-left:14px;&quot;&gt;&lt;a href=&quot;http://search.scu.edu.au/courses/#year=2016&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C8-FindACourse&apos;]);&quot;&gt;Find a Course&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;
&lt;/nav&gt;
&lt;div id=&quot;banner&quot; role=&quot;navigation&quot; aria-label=&quot;Secondary Top&quot; class=&quot;shadey&quot;&gt;
&lt;h1 id=&quot;SCU-logo&quot; tabindex=&quot;1&quot;&gt;&lt;a href=&quot;http://scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;,&apos;GH-Logo&apos;,&apos;Click&apos;,&apos;SCU_Logo&apos;]);&quot;&gt;&lt;span class=&quot;printOnly&quot; id=&quot;slogan&quot;&gt;It&apos;s all about U&lt;/span&gt;&lt;img id=&quot;logo-lo&quot; src=&quot;http://www.scu.edu.au/SCU-template/img/logo/SCU-Logo-White.png&quot; alt=&quot;Southern Cross University&quot;&gt;&lt;img id=&quot;logo-hi&quot; src=&quot;http://www.scu.edu.au/SCU-template/img/logo/_SCU_logo@2x.png&quot; alt=&quot;&quot; style=&quot;display: none;&quot;&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;nav id=&quot;head-nav&quot;&gt;
&lt;ul&gt;
&lt;li tabindex=&quot;2&quot;&gt;&lt;a href=&quot;https://learn.scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;01-MySCU&apos;]);&quot;&gt;MySCU&lt;/a&gt;&lt;/li&gt;
&lt;li tabindex=&quot;3&quot;&gt;&lt;a href=&quot;http://email.scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;02-Email&apos;]);&quot;&gt;Email&lt;/a&gt;&lt;/li&gt;
&lt;li tabindex=&quot;4&quot;&gt;&lt;a href=&quot;http://scu.edu.au/library/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;03-Library&apos;]);&quot;&gt;Library&lt;/a&gt;&lt;/li&gt;
&lt;li tabindex=&quot;5&quot;&gt;&lt;a href=&quot;http://scu.edu.au/services/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;04-AZ&apos;]);&quot;&gt;A-Z&lt;/a&gt;&lt;/li&gt;
&lt;li tabindex=&quot;6&quot;&gt;&lt;a href=&quot;http://scu.edu.au/contact/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;05-Contact&apos;]);&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;
&lt;/div&gt;
&lt;/header&gt;

&lt;section id=&quot;quicklinks&quot; aria-labelledby=&quot;quicklinksheading&quot;&gt;
&lt;span class=&quot;quicklinkshd&quot;&gt;&lt;a href=&quot;file:///&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;,&apos;GH-QL&apos;,&apos;Click&apos;,&apos;QL&apos;]);&quot;&gt;Quick Links&lt;/a&gt;&lt;/span&gt;
&lt;nav&gt;
&lt;ul&gt;
&lt;li style=&quot;font-size: 12px;font-weight: bold;text-transform: uppercase;&quot;&gt;General&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/services/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-01&apos;]);&quot;&gt;A-Z of SCU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/academicboard/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-02&apos;]);&quot;&gt;Academic Board&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/schools/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-03&apos;]);&quot;&gt;Academic Schools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/academicskills/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-04&apos;]);&quot;&gt;Academic Skills&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/equity/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-05&apos;]);&quot;&gt;Equity and Diversity Office&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/jobs/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-06&apos;]);&quot;&gt;Jobs @ SCU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/news/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-07&apos;]);&quot;&gt;Media Releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/policy/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-08&apos;]);&quot;&gt;SCU Policy Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/staff/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-09&apos;]);&quot;&gt;Staff Directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/it/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-10&apos;]);&quot;&gt;Technology Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://staff.uat.scu.edu.au/vc/index.php/dds/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-11&apos;]);&quot;&gt;VC&apos;s Weekly Updates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li style=&quot;font-size: 12px;font-weight: bold;text-transform: uppercase;
&quot;&gt;Current Students&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/library/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-Library&apos;]);&quot;&gt;Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/myenrolment/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-MyEnrolment&apos;]);&quot;&gt;My Enrolment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/students/index.php/107/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-Out-of-HoursCrisisSupportLine&apos;]);&quot;&gt;Out-of-Hours Crisis Support Line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/pcfinder/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-PCFinder&apos;]);&quot;&gt;PC Finder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/scheduleofunits&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-ScheduleofUnits&apos;]);&quot;&gt;Schedule of Units&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/handbook/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-StudentHandbook&apos;]);&quot;&gt;Student Handbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/students/index.php/82/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-StudentRepresentation&apos;]);&quot;&gt;Student Representation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/teachingcalendar/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-TeachingCalendar&apos;]);&quot;&gt;Teaching Calendar&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;height:10px !important;&quot;&gt; &lt;/li&gt;
&lt;li style=&quot;font-size: 12px;font-weight: bold;text-transform: uppercase;&quot;&gt;STAFF&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://staff.uat.scu.edu.au/change/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-Change@SCU&apos;]);&quot;&gt;Change @ SCU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/hr/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-HRServices&apos;]);&quot;&gt;HR Services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li style=&quot;font-size: 12px;font-weight: bold;text-transform: uppercase;&quot;&gt;Future Students&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://search.scu.edu.au/courses/#year=2016&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-01&apos;]);&quot;&gt;2016 Course Options  &lt;sup class=&quot;minilabel&quot; style=&quot;font-size: 8px;&quot;&gt;NEW&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/accommodation/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-02&apos;]);&quot;&gt;Accommodation Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/campustours/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-03&apos;]);&quot;&gt;Campus Tours&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/distance/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-04&apos;]);&quot;&gt;Distance and Online Study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/enquiries/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-05&apos;]);&quot;&gt;Enquire Online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/international/index.php/10/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-06&apos;]);&quot;&gt;International Course Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/postgraduate/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-07&apos;]);&quot;&gt;Postgraduate Course Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/preparingforsuccess/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-08&apos;]);&quot;&gt;Preparing for Success Program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/scholarships/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-09&apos;]);&quot;&gt;Scholarships&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scucollege.scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-10&apos;]);&quot;&gt;SCU College&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/nav&gt;
&lt;script src=&quot;https://code.jquery.com/jquery-1.11.3.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;http://uat.scu.edu.au/SCU-template/js/SCUlibs/SCU-template.js?v=1&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;https://s3-ap-southeast-2.amazonaws.com/static-gsa/SCU-gsa.js?v=1.5&quot;&gt;&lt;/script&gt;
&lt;/section&gt;
</xsl:text>
</xsl:template>
<xsl:template name="my_page_css">
<xsl:text disable-output-escaping="yes">
&lt;link rel=&quot;stylesheet&quot; media=&quot;screen&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/style.css?v=3&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;screen&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/search.css?v=3&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;print&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/print.css?v=2&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-width: 480px)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/480.css?v=2&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-width: 768px)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/768.css?v=2&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-width: 992px)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/992.css?v=2&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-width: 1382px)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/1382.css?v=1&quot;&gt;
&lt;!-- For Retina displays --&gt;
&lt;!--[if !(IE)]&gt;&lt;!--&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/2x.css?v=1&quot;&gt;
&lt;!--  For Retina Devices Specific to 480 wide --&gt;
&lt;!--  &lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (max-device-width: 480px) and and (-webkit-min-device-pixel-ratio: 2)&quot; href=&quot;///SCU-template/css/retina-480.css&quot; /&gt;--&gt;
&lt;!--  For Retina Devices Specific to 1024 wide --&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-device-width: 768px) and (max-device-width: 1024px)&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/device-1024.css&quot; /&gt;&lt;!--&lt;![endif]--&gt;
&lt;!--[if lt IE 9]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/ltIE9.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--[if lt IE 7]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/ltIE7.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--[if IE 7 ]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/IE7.css&gt;&lt;![endif]--&gt;
&lt;!--[if IE 8 ]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/IE8.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--[if IE 8 ]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;print&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/IE8_print.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--[if IEMobile 7]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/IEMobile7.css&quot;&gt;&lt;![endif]--&gt;
</xsl:text>
</xsl:template>
<xsl:template name="main_content_wrapper_start">
<xsl:text disable-output-escaping="yes">
&lt;div id=&quot;body-container&quot;&gt;
</xsl:text>
</xsl:template>
<xsl:template name="main_content_wrapper_end">
<xsl:text disable-output-escaping="yes">
&lt;/div&gt;
</xsl:text>
</xsl:template>
</xsl:stylesheet>




              ]]></stylesheet>
              <stylesheet.en><![CDATA[
<!-- *** START OF STYLESHEET *** -->

<!-- **********************************************************************
 XSL to format the search output for Google Search Appliance
     ********************************************************************** -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
<xsl:include href="env_variables"/>

<xsl:template name="my_page_header">
  <!-- *** replace the following with your own xhtml code or replace the text
   between the xsl:text tags with html escaped html code *** -->
  <xsl:text disable-output-escaping="yes">
&lt;header class=&quot;clearfix&quot;&gt;
&lt;nav id=&quot;global-nav&quot; aria-label=&quot;Primary Top&quot; class=&quot;clearfix&quot;&gt;
&lt;ul id=&quot;global-nav-list&quot;&gt;
    &lt;li id=&quot;home&quot; class=&quot;no-expand&quot;&gt;&lt;a onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C1-Home&apos;]);&quot; href=&quot;http://scu.edu.au/&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;&lt;li id=&quot;future&quot;&gt;&lt;a href=&quot;http://scu.edu.au/futurestudents/&quot;&gt;Future Students&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
        &lt;a href=&quot;http://scu.edu.au/futurestudents/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS&apos;]);&quot;&gt;Future students home&lt;/a&gt;
&lt;a href=&quot;http://search.scu.edu.au/courses/#year=2016&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-2016CouOpt&apos;]);&quot;&gt;2016 course options &lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/scuinfodays/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-InfoDays&apos;]);&quot;&gt;SCU Info Days  &lt;sup class=&quot;minilabel&quot; style=&quot;font-size: 8px;&quot;&gt; NEW &lt;/sup&gt;&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/distance/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-DisEdu&apos;]);&quot;&gt;Distance and online&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/howtoapply/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-HowToApp&apos;]);&quot;&gt;How to apply&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/fees/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-Fees&apos;]);&quot;&gt;Fees&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/campustours/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-CamTou&apos;]);&quot;&gt;Campus tours&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/futurestudents/index.php/20/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-Acc&apos;]);&quot;&gt;Accommodation&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/scholarships/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-Sch&apos;]);&quot;&gt;Scholarships&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/scupathways/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-AdvStaPat&apos;]);&quot;&gt;Advanced standing and pathways&lt;/a&gt;
&lt;a href=&quot;http://scucollege.scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-SCUCol&apos;]);&quot;&gt;SCU College&lt;/a&gt;&lt;/div&gt;
    &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://scu.edu.au/international/&quot;&gt;International&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
        &lt;a href=&quot;http://scu.edu.au/international/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int&apos;]);&quot;&gt;International home&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/international/index.php/220/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-1&apos;]);&quot;&gt;International course options  &lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/international/apply/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-2&apos;]);&quot;&gt;How to apply&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/studyabroad/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-InboundStudents&apos;]);&quot;&gt;Inbound students&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/exchange/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-OutboundStudents&apos;]);&quot;&gt;Outbound students&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/international/index.php/186/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-4&apos;]);&quot;&gt;Living in Australia&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/international/agents/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-6&apos;]);&quot;&gt;Agents&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/englishlanguage/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-7&apos;]);&quot;&gt;English programs&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/international/index.php/82/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-8&apos;]);&quot;&gt;International and Enterprise&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://scu.edu.au/students/&quot;&gt;Students&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
&lt;a href=&quot;http://scu.edu.au/students/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS&apos;]);&quot;&gt;Students home&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/gettingstarted/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-NewStu&apos;]);&quot;&gt;New students&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/students/index.php/42/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Enr&apos;]);&quot;&gt;Enrolling&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/students/index.php/4/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-StuAdm&apos;]);&quot;&gt;Student administration&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/students/index.php/47/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-StuRe&apos;]);&quot;&gt;Study resources&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/students/index.php/109/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Ser&apos;]);&quot;&gt;Services and support&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/travel/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Tra&apos;]);&quot;&gt;Travel to SCU&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/activities/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Act&apos;]);&quot;&gt;Culture, sport and recreation&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/students/index.php/108/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Opp&apos;]);&quot;&gt;Opportunities&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/students/index.php/10/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-GraBey&apos;]);&quot;&gt;Graduation and beyond&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/students/contact/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Con&apos;]);&quot;&gt;Contact us&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://scu.edu.au/research/&quot;&gt;Research&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
&lt;a href=&quot;http://scu.edu.au/research/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res&apos;]);&quot;&gt;Research home&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/graduateschool/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-GradSch&apos;]);&quot;&gt;Graduate School&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/research/index.php/60/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-ResSerGra&apos;]);&quot;&gt;Research services and grants&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/graduateschool/index.php/12/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-HowToApp&apos;]);&quot;&gt;How to apply&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/research/index.php/40/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-Eth&apos;]);&quot;&gt;Ethics&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/research/index.php/66/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-ResCenCRN&apos;]);&quot;&gt;Research centres/CRN&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/geoscience/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-SCGS&apos;]);&quot;&gt;Southern Cross GeoScience&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/scps/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-SCPS&apos;]);&quot;&gt;Southern Cross Plant Science&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://scu.edu.au/space/&quot;&gt;Community&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
&lt;a href=&quot;http://scu.edu.au/space/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com&apos;]);&quot;&gt;Community home&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/sustainability/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-Sus&apos;]);&quot;&gt;Sustainability&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/space/index.php/4/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-ComEng&apos;]);&quot;&gt;Community engagement&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/news/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-SCUnews&apos;]);&quot;&gt;SCU news&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/scunews/index.php/31/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-SCUSocMed&apos;]);&quot;&gt;SCU on social media&lt;/a&gt;
&lt;a href=&quot;http://discover.scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-DisEne&apos;]);&quot;&gt;Discover eNews&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/events/index.php/events/all/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-Eve&apos;]);&quot;&gt;Events&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/alumni/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-Alu&apos;]);&quot;&gt;Alumni&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/experts/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-FinAnExp&apos;]);&quot;&gt;Find an expert&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/risingstars/index.php/4/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-RisStaPro&apos;]);&quot;&gt;Rising Stars program&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;    &lt;li style=&quot;padding-right:11px;&quot;&gt;&lt;a href=&quot;http://scu.edu.au/about/&quot;&gt;About Us&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
&lt;a href=&quot;http://scu.edu.au/about/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab&apos;]);&quot;&gt;About Us home&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/schools/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-AcaSch&apos;]);&quot;&gt;Academic schools&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/campuses/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-Loc&apos;]);&quot;&gt;Locations&lt;/a&gt; &lt;a href=&quot;http://scu.edu.au/jobs/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-Jobs&apos;]);&quot;&gt;Jobs @ SCU&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/about/index.php/46/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-SCUexe&apos;]);&quot;&gt;SCU Executives&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/staffdirectory/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-StaDir&apos;]);&quot;&gt;Staff Directory&lt;/a&gt;
&lt;a href=&quot;http://scu.edu.au/contact/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-ConUs&apos;]);&quot;&gt;Contact Us&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;&lt;li id=&quot;course-search&quot; class=&quot;hide no-expand&quot; style=&quot;padding-right:14px;padding-left:14px;&quot;&gt;&lt;a href=&quot;http://search.scu.edu.au/courses/#year=2016&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C8-FindACourse&apos;]);&quot;&gt;Find a Course&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;
&lt;/nav&gt;
&lt;div id=&quot;banner&quot; role=&quot;navigation&quot; aria-label=&quot;Secondary Top&quot; class=&quot;shadey&quot;&gt;
&lt;h1 id=&quot;SCU-logo&quot; tabindex=&quot;1&quot;&gt;&lt;a href=&quot;http://scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;,&apos;GH-Logo&apos;,&apos;Click&apos;,&apos;SCU_Logo&apos;]);&quot;&gt;&lt;span class=&quot;printOnly&quot; id=&quot;slogan&quot;&gt;It&apos;s all about U&lt;/span&gt;&lt;img id=&quot;logo-lo&quot; src=&quot;http://www.scu.edu.au/SCU-template/img/logo/SCU-Logo-White.png&quot; alt=&quot;Southern Cross University&quot;&gt;&lt;img id=&quot;logo-hi&quot; src=&quot;http://www.scu.edu.au/SCU-template/img/logo/_SCU_logo@2x.png&quot; alt=&quot;&quot; style=&quot;display: none;&quot;&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;nav id=&quot;head-nav&quot;&gt;
&lt;ul&gt;
&lt;li tabindex=&quot;2&quot;&gt;&lt;a href=&quot;https://learn.scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;01-MySCU&apos;]);&quot;&gt;MySCU&lt;/a&gt;&lt;/li&gt;
&lt;li tabindex=&quot;3&quot;&gt;&lt;a href=&quot;http://email.scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;02-Email&apos;]);&quot;&gt;Email&lt;/a&gt;&lt;/li&gt;
&lt;li tabindex=&quot;4&quot;&gt;&lt;a href=&quot;http://scu.edu.au/library/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;03-Library&apos;]);&quot;&gt;Library&lt;/a&gt;&lt;/li&gt;
&lt;li tabindex=&quot;5&quot;&gt;&lt;a href=&quot;http://scu.edu.au/services/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;04-AZ&apos;]);&quot;&gt;A-Z&lt;/a&gt;&lt;/li&gt;
&lt;li tabindex=&quot;6&quot;&gt;&lt;a href=&quot;http://scu.edu.au/contact/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;05-Contact&apos;]);&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;
&lt;/div&gt;
&lt;/header&gt;

&lt;section id=&quot;quicklinks&quot; aria-labelledby=&quot;quicklinksheading&quot;&gt;
&lt;span class=&quot;quicklinkshd&quot;&gt;&lt;a href=&quot;file:///&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;,&apos;GH-QL&apos;,&apos;Click&apos;,&apos;QL&apos;]);&quot;&gt;Quick Links&lt;/a&gt;&lt;/span&gt;
&lt;nav&gt;
&lt;ul&gt;
&lt;li style=&quot;font-size: 12px;font-weight: bold;text-transform: uppercase;&quot;&gt;General&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/services/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-01&apos;]);&quot;&gt;A-Z of SCU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/academicboard/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-02&apos;]);&quot;&gt;Academic Board&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/schools/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-03&apos;]);&quot;&gt;Academic Schools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/academicskills/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-04&apos;]);&quot;&gt;Academic Skills&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/equity/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-05&apos;]);&quot;&gt;Equity and Diversity Office&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/jobs/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-06&apos;]);&quot;&gt;Jobs @ SCU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/news/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-07&apos;]);&quot;&gt;Media Releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/policy/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-08&apos;]);&quot;&gt;SCU Policy Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/staff/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-09&apos;]);&quot;&gt;Staff Directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/it/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-10&apos;]);&quot;&gt;Technology Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://staff.uat.scu.edu.au/vc/index.php/dds/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-11&apos;]);&quot;&gt;VC&apos;s Weekly Updates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li style=&quot;font-size: 12px;font-weight: bold;text-transform: uppercase;
&quot;&gt;Current Students&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/library/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-Library&apos;]);&quot;&gt;Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/myenrolment/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-MyEnrolment&apos;]);&quot;&gt;My Enrolment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/students/index.php/107/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-Out-of-HoursCrisisSupportLine&apos;]);&quot;&gt;Out-of-Hours Crisis Support Line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/pcfinder/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-PCFinder&apos;]);&quot;&gt;PC Finder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/scheduleofunits&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-ScheduleofUnits&apos;]);&quot;&gt;Schedule of Units&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/handbook/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-StudentHandbook&apos;]);&quot;&gt;Student Handbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/students/index.php/82/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-StudentRepresentation&apos;]);&quot;&gt;Student Representation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/teachingcalendar/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-TeachingCalendar&apos;]);&quot;&gt;Teaching Calendar&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;height:10px !important;&quot;&gt; &lt;/li&gt;
&lt;li style=&quot;font-size: 12px;font-weight: bold;text-transform: uppercase;&quot;&gt;STAFF&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://staff.uat.scu.edu.au/change/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-Change@SCU&apos;]);&quot;&gt;Change @ SCU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/hr/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-HRServices&apos;]);&quot;&gt;HR Services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li style=&quot;font-size: 12px;font-weight: bold;text-transform: uppercase;&quot;&gt;Future Students&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://search.scu.edu.au/courses/#year=2016&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-01&apos;]);&quot;&gt;2016 Course Options  &lt;sup class=&quot;minilabel&quot; style=&quot;font-size: 8px;&quot;&gt;NEW&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/accommodation/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-02&apos;]);&quot;&gt;Accommodation Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/campustours/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-03&apos;]);&quot;&gt;Campus Tours&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/distance/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-04&apos;]);&quot;&gt;Distance and Online Study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/enquiries/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-05&apos;]);&quot;&gt;Enquire Online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/international/index.php/10/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-06&apos;]);&quot;&gt;International Course Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/postgraduate/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-07&apos;]);&quot;&gt;Postgraduate Course Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/preparingforsuccess/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-08&apos;]);&quot;&gt;Preparing for Success Program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://uat.scu.edu.au/scholarships/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-09&apos;]);&quot;&gt;Scholarships&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scucollege.scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-10&apos;]);&quot;&gt;SCU College&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/nav&gt;
&lt;script src=&quot;https://code.jquery.com/jquery-1.11.3.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;http://uat.scu.edu.au/SCU-template/js/SCUlibs/SCU-template.js?v=1&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;https://s3-ap-southeast-2.amazonaws.com/static-gsa/SCU-gsa.js?v=1.5&quot;&gt;&lt;/script&gt;
&lt;/section&gt;
</xsl:text>
</xsl:template>
<xsl:template name="my_page_css">
<xsl:text disable-output-escaping="yes">
&lt;link rel=&quot;stylesheet&quot; media=&quot;screen&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/style.css?v=3&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;screen&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/search.css?v=3&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;print&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/print.css?v=2&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-width: 480px)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/480.css?v=2&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-width: 768px)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/768.css?v=2&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-width: 992px)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/992.css?v=2&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-width: 1382px)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/1382.css?v=1&quot;&gt;
&lt;!-- For Retina displays --&gt;
&lt;!--[if !(IE)]&gt;&lt;!--&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/2x.css?v=1&quot;&gt;
&lt;!--  For Retina Devices Specific to 480 wide --&gt;
&lt;!--  &lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (max-device-width: 480px) and and (-webkit-min-device-pixel-ratio: 2)&quot; href=&quot;///SCU-template/css/retina-480.css&quot; /&gt;--&gt;
&lt;!--  For Retina Devices Specific to 1024 wide --&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-device-width: 768px) and (max-device-width: 1024px)&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/device-1024.css&quot; /&gt;&lt;!--&lt;![endif]--&gt;
&lt;!--[if lt IE 9]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/ltIE9.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--[if lt IE 7]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/ltIE7.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--[if IE 7 ]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/IE7.css&gt;&lt;![endif]--&gt;
&lt;!--[if IE 8 ]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/IE8.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--[if IE 8 ]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;print&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/IE8_print.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--[if IEMobile 7]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/IEMobile7.css&quot;&gt;&lt;![endif]--&gt;
</xsl:text>
</xsl:template>
<xsl:template name="main_content_wrapper_start">
<xsl:text disable-output-escaping="yes">
&lt;div id=&quot;body-container&quot;&gt;
</xsl:text>
</xsl:template>
<xsl:template name="main_content_wrapper_end">
<xsl:text disable-output-escaping="yes">
&lt;/div&gt;
</xsl:text>
</xsl:template>
</xsl:stylesheet>




              ]]></stylesheet.en>
              <synonyms><![CDATA[

              ]]></synonyms>
              <wildcard_wc_filter><![CDATA[
200

              ]]></wildcard_wc_filter>
          </frontend>
          <frontend Name="scu_snippets">
              <default_language><![CDATA[
'en'
              ]]></default_language>
              <profile_sheet><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet>
              <profile_sheet.en><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet.en>
              <access_control_allow_origin><![CDATA[


              ]]></access_control_allow_origin>
              <badurls_noreturn><![CDATA[

              ]]></badurls_noreturn>
              <content_type><![CDATA[
text/html
              ]]></content_type>
              <domain_filter><![CDATA[

              ]]></domain_filter>
              <filetype_filter><![CDATA[

              ]]></filetype_filter>
              <good_ips><![CDATA[
0.0.0.0/0

              ]]></good_ips>
              <googlematch><![CDATA[

              ]]></googlematch>
              <lang_filter><![CDATA[

              ]]></lang_filter>
              <metatag_filter><![CDATA[

              ]]></metatag_filter>
              <query_expansion_filter><![CDATA[
QE_FULL

              ]]></query_expansion_filter>
              <query_expansion_meta_filter><![CDATA[
QE_META_NONE

              ]]></query_expansion_meta_filter>
              <scoring_policy_filter><![CDATA[

              ]]></scoring_policy_filter>
              <star_wildcard_default_filter><![CDATA[
1

              ]]></star_wildcard_default_filter>
              <stylesheet><![CDATA[
<!-- *** START OF STYLESHEET *** -->

<!-- **********************************************************************
 XSL to format the search output for Google Search Appliance
     ********************************************************************** -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
<xsl:include href="env_variables"/>
<xsl:template name="header_element">
  <!-- *** replace the following with your own xhtml code or replace the text
   between the xsl:text tags with html escaped html code *** -->
  <xsl:text disable-output-escaping="yes">
&lt;header class=&quot;clearfix </xsl:text><xsl:value-of select="$skin_class"/><xsl:text disable-output-escaping="yes">&quot;&gt;
&lt;nav id=&quot;global-nav&quot; aria-label=&quot;Primary Top&quot; class=&quot;clearfix&quot;&gt;
&lt;ul id=&quot;global-nav-list&quot;&gt;
    &lt;li id=&quot;home&quot; class=&quot;no-expand&quot;&gt;&lt;a onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C1-Home&apos;]);&quot; href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;&lt;li id=&quot;future&quot;&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/futurestudents/&quot;&gt;Future Students&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
        &lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/futurestudents/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS&apos;]);&quot;&gt;Future students home&lt;/a&gt;
&lt;a href=&quot;</xsl:text><xsl:value-of select="$course_search_path"/><xsl:text disable-output-escaping="yes">/#year=2017&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-2017CouOpt&apos;]);&quot;&gt;2017 course options &lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/distance/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-DisEdu&apos;]);&quot;&gt;Distance and online&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/howtoapply/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-HowToApp&apos;]);&quot;&gt;How to apply&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/fees/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-Fees&apos;]);&quot;&gt;Fees&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/campustours/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-CamTou&apos;]);&quot;&gt;Campus tours&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/futurestudents/index.php/20/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-Acc&apos;]);&quot;&gt;Accommodation&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scholarships/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-Sch&apos;]);&quot;&gt;Scholarships&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scupathways/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-AdvStaPat&apos;]);&quot;&gt;Advanced standing and pathways&lt;/a&gt;
&lt;a href=&quot;//</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scucollege&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-SCUCol&apos;]);&quot;&gt;SCU College&lt;/a&gt;&lt;/div&gt;
    &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/&quot;&gt;International&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
        &lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int&apos;]);&quot;&gt;International home&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/index.php/220/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-1&apos;]);&quot;&gt;International course options  &lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/apply/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-2&apos;]);&quot;&gt;How to apply&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/studyabroad/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-InboundStudents&apos;]);&quot;&gt;Inbound students&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/exchange/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-OutboundStudents&apos;]);&quot;&gt;Outbound students&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/index.php/186/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-4&apos;]);&quot;&gt;Living in Australia&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/agents/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-6&apos;]);&quot;&gt;Agents&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/englishlanguage/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-7&apos;]);&quot;&gt;English programs&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/index.php/82/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-8&apos;]);&quot;&gt;International and Enterprise&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/&quot;&gt;Students&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS&apos;]);&quot;&gt;Students home&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/gettingstarted/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-NewStu&apos;]);&quot;&gt;New students&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/index.php/42/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Enr&apos;]);&quot;&gt;Enrolling&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/index.php/4/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-StuAdm&apos;]);&quot;&gt;Student administration&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/index.php/47/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-StuRe&apos;]);&quot;&gt;Study resources&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/index.php/109/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Ser&apos;]);&quot;&gt;Services and support&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/travel/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Tra&apos;]);&quot;&gt;Travel to SCU&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/activities/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Act&apos;]);&quot;&gt;Culture, sport and recreation&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/index.php/108/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Opp&apos;]);&quot;&gt;Opportunities&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/index.php/10/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-GraBey&apos;]);&quot;&gt;Graduation and beyond&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/contact/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Con&apos;]);&quot;&gt;Contact us&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/research/&quot;&gt;Research&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/research/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res&apos;]);&quot;&gt;Research home&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/research/index.php/66&quot; onclick=&quot;_gaq.push([&#39;_trackEvent&#39;, &#39;GH-Nav&#39;, &#39;Click&#39;, &#39;C5-OurRes&#39;]);&quot;&gt;Our research&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/graduateschool/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-GradSch&apos;]);&quot;&gt;Graduate School&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/graduateschool/index.php/12/&quot; onclick=&quot;_gaq.push([&#39;_trackEvent&#39;, &#39;GH-Nav&#39;, &#39;Click&#39;, &#39;C5-Res-HowToApp&#39;]);&quot;&gt;HDR applications&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/research/index.php/60/&quot; onclick=&quot;_gaq.push([&#39;_trackEvent&#39;, &#39;GH-Nav&#39;, &#39;Click&#39;, &#39;C5-Res-ResSerGra&#39;]);&quot;&gt;Research funding&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/research/index.php/40/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-Eth&apos;]);&quot;&gt;Research ethics&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/geoscience/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-SCGS&apos;]);&quot;&gt;Southern Cross GeoScience&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scps/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-SCPS&apos;]);&quot;&gt;Southern Cross Plant Science&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/space/&quot;&gt;Community&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/space/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com&apos;]);&quot;&gt;Community home&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/sustainability/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-Sus&apos;]);&quot;&gt;Sustainability&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/space/index.php/4/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-ComEng&apos;]);&quot;&gt;Community engagement&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/news/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-SCUnews&apos;]);&quot;&gt;SCU news&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scunews/index.php/31/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-SCUSocMed&apos;]);&quot;&gt;SCU on social media&lt;/a&gt;
&lt;a href=&quot;http://discover.scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-DisEne&apos;]);&quot;&gt;Discover eNews&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/events/index.php/events/all/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-Eve&apos;]);&quot;&gt;Events&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/alumni/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-Alu&apos;]);&quot;&gt;Alumni&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/experts/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-FinAnExp&apos;]);&quot;&gt;Find an expert&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/risingstars/index.php/4/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-RisStaPro&apos;]);&quot;&gt;Rising Stars program&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;    &lt;li style=&quot;padding-right:11px;&quot;&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/about/&quot;&gt;About Us&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/about/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab&apos;]);&quot;&gt;About Us home&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/schools/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-AcaSch&apos;]);&quot;&gt;Academic schools&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/campuses/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-Loc&apos;]);&quot;&gt;Locations&lt;/a&gt; &lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/jobs/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-Jobs&apos;]);&quot;&gt;Jobs @ SCU&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/about/index.php/46/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-SCUexe&apos;]);&quot;&gt;SCU Executives&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/staffdirectory/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-StaDir&apos;]);&quot;&gt;Staff Directory&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/contact/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-ConUs&apos;]);&quot;&gt;Contact Us&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;&lt;li id=&quot;course-search&quot; class=&quot;hide no-expand&quot;&gt;&lt;a href=&quot;</xsl:text><xsl:value-of select="$course_search_path"/><xsl:text disable-output-escaping="yes">/#year=2017&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C8-FindACourse&apos;]);&quot;&gt;Find a Course&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;
&lt;/nav&gt;
&lt;div id=&quot;banner&quot; role=&quot;navigation&quot; aria-label=&quot;Secondary Top&quot; class=&quot;shadey&quot;&gt;
&lt;h1 id=&quot;SCU-logo&quot; tabindex=&quot;1&quot;&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;,&apos;GH-Logo&apos;,&apos;Click&apos;,&apos;SCU_Logo&apos;]);&quot;&gt;Southern Cross 
&lt;br&gt;
&lt;span class=&quot;second&quot;&gt;University&lt;/span&gt;
&lt;span class=&quot;printOnly&quot; id=&quot;slogan&quot;&gt;It&apos;s all about U&lt;/span&gt;
&lt;img id=&quot;logo-lo&quot; src=&quot;</xsl:text><xsl:value-of select="$global_scu_template_path"/><xsl:text disable-output-escaping="yes">/img/logo/SCU-Logo-White.png&quot; alt=&quot;Southern Cross University&quot;&gt;
&lt;img id=&quot;logo-hi&quot; src=&quot;</xsl:text><xsl:value-of select="$global_scu_template_path"/><xsl:text disable-output-escaping="yes">/img/logo/_SCU_logo@2x.png&quot; alt=&quot;&quot; style=&quot;display: none;&quot;&gt;
&lt;/a&gt;
&lt;/h1&gt;
&lt;nav id=&quot;head-nav&quot;&gt;
&lt;ul&gt;
&lt;li tabindex=&quot;2&quot;&gt;&lt;a href=&quot;//learn.scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;01-MySCU&apos;]);&quot;&gt;MySCU&lt;/a&gt;&lt;/li&gt;
&lt;li tabindex=&quot;3&quot;&gt;&lt;a href=&quot;http://email.scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;02-Email&apos;]);&quot;&gt;Email&lt;/a&gt;&lt;/li&gt;
&lt;li tabindex=&quot;4&quot;&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/library/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;03-Library&apos;]);&quot;&gt;Library&lt;/a&gt;&lt;/li&gt;
&lt;li tabindex=&quot;5&quot;&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/services/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;04-AZ&apos;]);&quot;&gt;A-Z&lt;/a&gt;&lt;/li&gt;
&lt;li tabindex=&quot;6&quot;&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/contact/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;05-Contact&apos;]);&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;
&lt;/div&gt;
&lt;/header&gt;

&lt;section id=&quot;quicklinks&quot; class=&quot;</xsl:text><xsl:value-of select="$skin_class"/><xsl:text disable-output-escaping="yes">&quot; aria-labelledby=&quot;quicklinksheading&quot;&gt;
&lt;span class=&quot;quicklinkshd&quot;&gt;&lt;a href=&quot;/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;,&apos;GH-QL&apos;,&apos;Click&apos;,&apos;QL&apos;]);&quot;&gt;Quick Links&lt;/a&gt;&lt;/span&gt;
&lt;nav&gt;
&lt;ul&gt;
&lt;li style=&quot;font-size: 12px;font-weight: bold;text-transform: uppercase;&quot;&gt;General&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/services/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-01&apos;]);&quot;&gt;A-Z of SCU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/academicboard/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-02&apos;]);&quot;&gt;Academic Board&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/schools/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-03&apos;]);&quot;&gt;Academic Schools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/academicskills/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-04&apos;]);&quot;&gt;Academic Skills&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/equity/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-05&apos;]);&quot;&gt;Equity and Diversity Office&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/jobs/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-06&apos;]);&quot;&gt;Jobs @ SCU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/news/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-07&apos;]);&quot;&gt;Media Releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/policy/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-08&apos;]);&quot;&gt;SCU Policy Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/staff/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-09&apos;]);&quot;&gt;Staff Directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/it/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-10&apos;]);&quot;&gt;Technology Services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li style=&quot;font-size: 12px;font-weight: bold;text-transform: uppercase;
&quot;&gt;Current Students&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/library/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-Library&apos;]);&quot;&gt;Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/myenrolment/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-MyEnrolment&apos;]);&quot;&gt;My Enrolment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/index.php/107/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-Out-of-HoursCrisisSupportLine&apos;]);&quot;&gt;Out-of-Hours Crisis Support Line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/pcfinder/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-PCFinder&apos;]);&quot;&gt;PC Finder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/it/servicedesk/&quot; onclick=&quot;_gaq.push([&#39;_trackEvent&#39;, &#39;GH-QL&#39;, &#39;Click&#39;, &#39;QL-C2-ServiceDesk&#39;]);&quot;&gt;Service Desk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/handbook/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-StudentHandbook&apos;]);&quot;&gt;Student Handbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/index.php/82/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-StudentRepresentation&apos;]);&quot;&gt;Student Representation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/teachingcalendar/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-TeachingCalendar&apos;]);&quot;&gt;Teaching Calendar&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;height:10px !important;&quot;&gt; &lt;/li&gt;
&lt;li style=&quot;font-size: 12px;font-weight: bold;text-transform: uppercase;&quot;&gt;STAFF&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/hr/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-HRServices&apos;]);&quot;&gt;HR Services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li style=&quot;font-size: 12px;font-weight: bold;text-transform: uppercase;&quot;&gt;Future Students&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;</xsl:text><xsl:value-of select="$course_search_path"/><xsl:text disable-output-escaping="yes">/#year=2016&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-01&apos;]);&quot;&gt;2017 Course Options  &lt;sup class=&quot;minilabel&quot; style=&quot;font-size: 8px;&quot;&gt;NEW&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/accommodation/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-02&apos;]);&quot;&gt;Accommodation Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/campustours/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-03&apos;]);&quot;&gt;Campus Tours&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/distance/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-04&apos;]);&quot;&gt;Distance and Online Study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/enquiries/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-05&apos;]);&quot;&gt;Enquire Online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/index.php/10/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-06&apos;]);&quot;&gt;International Course Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/postgraduate/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-07&apos;]);&quot;&gt;Postgraduate Course Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/preparingforsuccess/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-08&apos;]);&quot;&gt;Preparing for Success Program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scholarships/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-09&apos;]);&quot;&gt;Scholarships&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;//</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scucollege&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-10&apos;]);&quot;&gt;SCU College&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;
&lt;script src=&quot;</xsl:text><xsl:value-of select="$scu_template_js_path"/><xsl:text disable-output-escaping="yes">/jquery/jquery-1.11.2.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;</xsl:text><xsl:value-of select="$scu_template_js_path"/><xsl:text disable-output-escaping="yes">/jquery/jquery-ui-1.10.3.custom.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;</xsl:text><xsl:value-of select="$scu_template_js_path"/><xsl:text disable-output-escaping="yes">/SCUlibs/scu.tooltips.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;</xsl:text><xsl:value-of select="$scu_template_js_path"/><xsl:text disable-output-escaping="yes">/SCUlibs/SCU-template.js?v=1&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;</xsl:text><xsl:value-of select="$scu_template_js_path"/><xsl:text disable-output-escaping="yes">/SCUlibs/SCU-gsa.js?v=1.5&quot;&gt;&lt;/script&gt;
&lt;/section&gt;
</xsl:text>
</xsl:template>
<xsl:template name="my_page_css">
<xsl:text disable-output-escaping="yes">
&lt;link rel=&quot;stylesheet&quot; media=&quot;screen&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/style.css?v=3&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;screen&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/search.css?v=3&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;print&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/print.css?v=2&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-width: 480px)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/480.css?v=2&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-width: 768px)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/768.css?v=2&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-width: 992px)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/992.css?v=2&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-width: 1382px)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/1382.css?v=1&quot;&gt;
&lt;!-- For Retina displays --&gt;
&lt;!--[if !(IE)]&gt;&lt;!--&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/2x.css?v=1&quot;&gt;
&lt;!--  For Retina Devices Specific to 480 wide --&gt;
&lt;!--  &lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (max-device-width: 480px) and and (-webkit-min-device-pixel-ratio: 2)&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/retina-480.css&quot; /&gt;--&gt;
&lt;!--  For Retina Devices Specific to 1024 wide --&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-device-width: 768px) and (max-device-width: 1024px)&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/device-1024.css&quot; /&gt;&lt;!--&lt;![endif]--&gt;
&lt;!--[if lt IE 9]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/ltIE9.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--[if lt IE 7]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/ltIE7.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--[if IE 7 ]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/IE7.css&gt;&lt;![endif]--&gt;
&lt;!--[if IE 8 ]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/IE8.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--[if IE 8 ]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;print&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/IE8_print.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--[if IEMobile 7]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/IEMobile7.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--SCU tooltips--&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/mylibs/scu.tooltips.css&quot;&gt;
&lt;!-- For iPhone 4 --&gt;
&lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_img_path"/><xsl:text disable-output-escaping="yes">/h/apple-touch-icon.png&quot;&gt;
&lt;!-- For iPad 1--&gt;
&lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_img_path"/><xsl:text disable-output-escaping="yes">/m/apple-touch-icon.png&quot;&gt;
&lt;!-- For iPhone 3G, iPod Touch and Android --&gt;
&lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_img_path"/><xsl:text disable-output-escaping="yes">/l/apple-touch-icon-precomposed.png&quot;&gt;
&lt;!-- For Nokia
&lt;link rel=&quot;shortcut icon&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_img_path"/><xsl:text disable-output-escaping="yes">/l/apple-touch-icon.png&quot;&gt; CHROME IS USING THIS TOO --&gt;
&lt;!-- For everything else --&gt;
&lt;link rel=&quot;shortcut icon&quot; href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/favicon.ico&quot;&gt;
</xsl:text>
</xsl:template>
<xsl:template name="main_content_wrapper_start">
<xsl:text disable-output-escaping="yes">
&lt;div id=&quot;body-container&quot;&gt;
</xsl:text>
</xsl:template>
<xsl:template name="main_content_wrapper_end">
<xsl:text disable-output-escaping="yes">
&lt;/div&gt;
</xsl:text>
</xsl:template>

<xsl:template name="footer_element">
<xsl:text disable-output-escaping="yes">
&lt;div id=&quot;content-after&quot;&gt;&lt;/div&gt;
&lt;footer role=&quot;contentinfo&quot; class=&quot;clearfix </xsl:text><xsl:value-of select="$skin_class"/><xsl:text disable-output-escaping="yes">&quot;&gt;
&lt;div class=&quot;footer-nav&quot;&gt;
&lt;nav&gt;
&lt;h4&gt;Most popular&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;</xsl:text><xsl:value-of select="$course_search_path"/><xsl:text disable-output-escaping="yes">/#year=2017&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-2017CourseOptions&#039;]);&quot;&gt;2017 course options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://courses.scu.edu.au/search-pages/interational-course-list?year=2017&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-2017InternationalCourseOptions&#039;]);&quot;&gt;2017 international course options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/futurestudents/index.php/20/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-Accommodation&#039;]);&quot;&gt;Accommodation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/distance/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-DistanceOnlineStudy&#039;]);&quot;&gt;Distance and online study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/it/email/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-EmailCalendaring&#039;]);&quot;&gt;Email and calendaring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/jobs/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-Jobs&#039;]);&quot;&gt;Jobs @ SCU&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Important&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/futurestudents/index.php/7/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-Dates&#039;]);&quot;&gt;Key application dates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/myenrolment/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-MyEnrolment&#039;]);&quot;&gt;My Enrolment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/orientation/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-Orientation&#039;]);&quot;&gt;Orientation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scholarships/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-Scholarships&#039;]);&quot;&gt;Scholarships&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/news/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-SCUNews&#039;]);&quot;&gt;SCU News&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt; &lt;nav&gt;
&lt;h4&gt;Courses&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/business-tourism/index.php/3/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-Bus&#039;]);&quot;&gt;Business&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/arts-social-sciences/index.php/2#course_cat_7090&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-CrePerArt&#039;]);&quot;&gt;Creative and Performing Arts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/education/index.php/4/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-Edu&#039;]);&quot;&gt;Education&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/environment-science-engineering/index.php/22/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-ESE&#039;]);&quot;&gt;Environment, Science and Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/health-sciences/index.php/34/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-HHS&#039;]);&quot;&gt;Health and Human Sciences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/arts-social-sciences/index.php/2/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-HSS&#039;]);&quot;&gt;Humanities and Social Sciences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/gnibi-indigenous-studies/index.php/2/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-Ind&#039;]);&quot;&gt;Indigenous Studies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/business-tourism/index.php/3/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-IT&#039;]);&quot;&gt;Information Technology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/law-justice/index.php/5/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-Law&#039;]);&quot;&gt;Law and Justice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;//</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">college.scu.edu.au/index.php/13/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-SCUC&#039;]);&quot;&gt;SCU College and Preparatory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://online.scu.edu.au/&quot; onclick=&quot;_gaq.push([&#39;_trackEvent&#39;, &#39;GF-Nav&#39;, &#39;Click&#39;, &#39;Courses-SCUonlinePG&#39;]);&quot;&gt;SCU Online Postgraduate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/business-tourism/index.php/3/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-THM&#039;]);&quot;&gt;Tourism and Hospitality&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Course information&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/futurestudents/index.php/dds#cat1634/&quot; onclick=&quot;_gaq.push([&#39;_trackEvent&#39;, &#39;GF-Nav&#39;, &#39;Click&#39;, &#39;CI-2017StudyGuide&#39;]);&quot;&gt;2017 study guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/futurestudents/index.php/dds#cat1637/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CI-CourseBrochures&#039;]);&quot;&gt;Course brochures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/courseguide/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CI-CouEnrGui&#039;]);&quot;&gt;Course enrolment guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scuinfodays/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CI-InfoDays&#039;]);&quot;&gt;SCU Info Days&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/nav&gt; &lt;nav&gt;
&lt;h4&gt;Information for&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/alumni/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-Alumni&#039;]);&quot;&gt;Alumni&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/distance/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-DE&#039;]);&quot;&gt;Distance and online study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/futurestudents/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-FS&#039;]);&quot;&gt;Future students&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-IS&#039;]);&quot;&gt;International students&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/postgraduate/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-PostgRes&#039;]);&quot;&gt;Postgraduate and research&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-Students&#039;]);&quot;&gt;SCU students&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/risingstars/index.php/3/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-ScholSupp&#039;]);&quot;&gt;Scholarship supporters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Connect with SCU&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scunews/index.php/31#facebook&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-Facebook&#039;]);&quot;&gt;&lt;img src=&quot;</xsl:text><xsl:value-of select="$global_scu_template_path"/><xsl:text disable-output-escaping="yes">/img/share-sml/facebook-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on Facebook&quot; title=&quot;Southern Cross University on Facebook&quot;&gt; Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scunews/index.php/31#twitter&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-Twitter&#039;]);&quot;&gt;&lt;img src=&quot;</xsl:text><xsl:value-of select="$global_scu_template_path"/><xsl:text disable-output-escaping="yes">/img/share-sml/twitter-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on Twitter&quot; title=&quot;Southern Cross University on Twitter&quot;&gt; Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scunews/index.php/31#linkedin&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-LinkedIn&#039;]);&quot;&gt;&lt;img src=&quot;</xsl:text><xsl:value-of select="$global_scu_template_path"/><xsl:text disable-output-escaping="yes">/img/share-sml/linkedin-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on LinkedIn&quot; title=&quot;Southern Cross University on LinkedIn&quot;&gt; LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scunews/index.php/31#youtube&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-YouTube&#039;]);&quot;&gt;&lt;img src=&quot;</xsl:text><xsl:value-of select="$global_scu_template_path"/><xsl:text disable-output-escaping="yes">/img/share-sml/youtube-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on YouTube&quot; title=&quot;Southern Cross University on YouTube&quot;&gt; YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/itunesu/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-iTunesU&#039;]);&quot;&gt;&lt;img src=&quot;</xsl:text><xsl:value-of select="$global_scu_template_path"/><xsl:text disable-output-escaping="yes">/img/share-sml/itunesu-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on iTunes&quot; title=&quot;Southern Cross University on iTunes&quot;&gt; iTunesU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/enquiries/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-OnlineEnquiry&#039;]);&quot;&gt;Online enquiry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/nav&gt; &lt;nav class=&quot;last&quot;&gt;
&lt;h4&gt;Commercial services&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/eal/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-EAL&#039;]);&quot;&gt;Environmental Analysis Laboratory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://catering.scu.edu.au/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-SCUCater&#039;]);&quot;&gt;SCU Catering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://gymandpool.scu.edu.au/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-SCUGymPool&#039;]);&quot;&gt;SCU Fitness for You&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/healthclinic/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-SCUHC&#039;]);&quot;&gt;SCU Health Clinic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://unibarandcafe.scu.edu.au/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-SCUUniBarCafe&#039;]);&quot;&gt;The Deck (SCU Unibar)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scfc.net.au/&quot; onclick=&quot;_gaq.push([&#39;_trackEvent&#39;, &#39;GF-Nav&#39;, &#39;Click&#39;, &#39;CommServ-SCFC&#39;]);&quot;&gt;Southern Cross Football Centre&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Information about&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/space/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;InfA-CommEng&#039;]);&quot;&gt;Community Engagement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/governance/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;InfA-Gover&#039;]);&quot;&gt;Governance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/docs/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;InfA-PubPol&#039;]);&quot;&gt;Publications and Policies&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;padding-bottom: 10px;&quot;&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/sustainability/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;InfA-Sust&#039;]);&quot;&gt;Sustainability&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;a id=&quot;RUN-link&quot; href=&quot;http://www.run.edu.au/&quot; target=&quot;_blank&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;RUNimg&#039;]);&quot;&gt;&lt;img title=&quot;Regional Universities Network&quot; src=&quot;</xsl:text><xsl:value-of select="$scu_template_img_path"/><xsl:text disable-output-escaping="yes">/RUN_Logo.jpg&quot; alt=&quot;The Regional Universities Network (RUN) is a network of six universities with headquarters in regional Australia and a shared commitment to playing a transformative role in their regions.&quot;&gt;&lt;/a&gt;
&lt;/nav&gt;
&lt;/div&gt;
&lt;div class=&quot;footer-shadow&quot;&gt;&lt;/div&gt;
&lt;p class=&quot;top-link&quot;&gt;&lt;a href=&quot;#&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-Top&#039;]);&quot;&gt;top&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;global-footer&quot;&gt;
&lt;span class=&quot;SCU-copy-title&quot;&gt;&#169; &lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/&quot; title=&quot;Southern Cross University&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-SCU&#039;]);&quot;&gt;Southern Cross University&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;sep titlesep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/wwwadmin/disclaimer/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-Legals&#039;]);&quot;&gt;Legals&lt;/a&gt;&lt;span class=&quot;sep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/privacy/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-Privacy&#039;]);&quot;&gt;Privacy&lt;/a&gt;&lt;span class=&quot;sep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scunews/index.php/72/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-Accessibility&#039;]);&quot;&gt;Accessibility&lt;/a&gt;&lt;span class=&quot;sep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/contact/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-ContactUs&#039;]);&quot;&gt;Contact Us&lt;/a&gt;&lt;span class=&quot;admin-link&quot;&gt;&lt;span class=&quot;sep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://study.scu.edu.au/websys/content/index.php?site_id=50&amp;amp;action=Edit%20Item&amp;amp;page_id=31&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-SiteAdmin&#039;]);&quot;&gt;Site Admin&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;sep abnsep&quot;&gt; | &lt;/span&gt;&lt;span class=&quot;SCU-abn&quot;&gt;ABN: 41 995 651 524&lt;/span&gt;&lt;span class=&quot;sep cricosep&quot;&gt; | &lt;/span&gt;&lt;span class=&quot;SCU-cricos&quot;&gt;CRICOS Provider: 01241G&lt;/span&gt;
&lt;/p&gt;
&lt;/footer&gt;
    </xsl:text>
  <xsl:apply-templates select="TraceNode"/>
</xsl:template>
</xsl:stylesheet>




              ]]></stylesheet>
              <stylesheet.en><![CDATA[
<!-- *** START OF STYLESHEET *** -->

<!-- **********************************************************************
 XSL to format the search output for Google Search Appliance
     ********************************************************************** -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
<xsl:include href="env_variables"/>
<xsl:template name="header_element">
  <!-- *** replace the following with your own xhtml code or replace the text
   between the xsl:text tags with html escaped html code *** -->
  <xsl:text disable-output-escaping="yes">
&lt;header class=&quot;clearfix </xsl:text><xsl:value-of select="$skin_class"/><xsl:text disable-output-escaping="yes">&quot;&gt;
&lt;nav id=&quot;global-nav&quot; aria-label=&quot;Primary Top&quot; class=&quot;clearfix&quot;&gt;
&lt;ul id=&quot;global-nav-list&quot;&gt;
    &lt;li id=&quot;home&quot; class=&quot;no-expand&quot;&gt;&lt;a onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C1-Home&apos;]);&quot; href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;&lt;li id=&quot;future&quot;&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/futurestudents/&quot;&gt;Future Students&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
        &lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/futurestudents/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS&apos;]);&quot;&gt;Future students home&lt;/a&gt;
&lt;a href=&quot;</xsl:text><xsl:value-of select="$course_search_path"/><xsl:text disable-output-escaping="yes">/#year=2017&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-2017CouOpt&apos;]);&quot;&gt;2017 course options &lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/distance/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-DisEdu&apos;]);&quot;&gt;Distance and online&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/howtoapply/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-HowToApp&apos;]);&quot;&gt;How to apply&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/fees/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-Fees&apos;]);&quot;&gt;Fees&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/campustours/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-CamTou&apos;]);&quot;&gt;Campus tours&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/futurestudents/index.php/20/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-Acc&apos;]);&quot;&gt;Accommodation&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scholarships/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-Sch&apos;]);&quot;&gt;Scholarships&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scupathways/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-AdvStaPat&apos;]);&quot;&gt;Advanced standing and pathways&lt;/a&gt;
&lt;a href=&quot;//</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scucollege&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C2-FS-SCUCol&apos;]);&quot;&gt;SCU College&lt;/a&gt;&lt;/div&gt;
    &lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/&quot;&gt;International&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
        &lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int&apos;]);&quot;&gt;International home&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/index.php/220/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-1&apos;]);&quot;&gt;International course options  &lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/apply/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-2&apos;]);&quot;&gt;How to apply&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/studyabroad/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-InboundStudents&apos;]);&quot;&gt;Inbound students&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/exchange/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-OutboundStudents&apos;]);&quot;&gt;Outbound students&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/index.php/186/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-4&apos;]);&quot;&gt;Living in Australia&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/agents/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-6&apos;]);&quot;&gt;Agents&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/englishlanguage/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-7&apos;]);&quot;&gt;English programs&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/index.php/82/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C3-Int-8&apos;]);&quot;&gt;International and Enterprise&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/&quot;&gt;Students&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS&apos;]);&quot;&gt;Students home&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/gettingstarted/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-NewStu&apos;]);&quot;&gt;New students&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/index.php/42/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Enr&apos;]);&quot;&gt;Enrolling&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/index.php/4/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-StuAdm&apos;]);&quot;&gt;Student administration&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/index.php/47/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-StuRe&apos;]);&quot;&gt;Study resources&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/index.php/109/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Ser&apos;]);&quot;&gt;Services and support&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/travel/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Tra&apos;]);&quot;&gt;Travel to SCU&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/activities/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Act&apos;]);&quot;&gt;Culture, sport and recreation&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/index.php/108/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Opp&apos;]);&quot;&gt;Opportunities&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/index.php/10/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-GraBey&apos;]);&quot;&gt;Graduation and beyond&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/contact/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C4-CS-Con&apos;]);&quot;&gt;Contact us&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/research/&quot;&gt;Research&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/research/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res&apos;]);&quot;&gt;Research home&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/research/index.php/66&quot; onclick=&quot;_gaq.push([&#39;_trackEvent&#39;, &#39;GH-Nav&#39;, &#39;Click&#39;, &#39;C5-OurRes&#39;]);&quot;&gt;Our research&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/graduateschool/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-GradSch&apos;]);&quot;&gt;Graduate School&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/graduateschool/index.php/12/&quot; onclick=&quot;_gaq.push([&#39;_trackEvent&#39;, &#39;GH-Nav&#39;, &#39;Click&#39;, &#39;C5-Res-HowToApp&#39;]);&quot;&gt;HDR applications&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/research/index.php/60/&quot; onclick=&quot;_gaq.push([&#39;_trackEvent&#39;, &#39;GH-Nav&#39;, &#39;Click&#39;, &#39;C5-Res-ResSerGra&#39;]);&quot;&gt;Research funding&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/research/index.php/40/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-Eth&apos;]);&quot;&gt;Research ethics&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/geoscience/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-SCGS&apos;]);&quot;&gt;Southern Cross GeoScience&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scps/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C5-Res-SCPS&apos;]);&quot;&gt;Southern Cross Plant Science&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;    &lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/space/&quot;&gt;Community&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/space/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com&apos;]);&quot;&gt;Community home&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/sustainability/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-Sus&apos;]);&quot;&gt;Sustainability&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/space/index.php/4/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-ComEng&apos;]);&quot;&gt;Community engagement&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/news/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-SCUnews&apos;]);&quot;&gt;SCU news&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scunews/index.php/31/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-SCUSocMed&apos;]);&quot;&gt;SCU on social media&lt;/a&gt;
&lt;a href=&quot;http://discover.scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-DisEne&apos;]);&quot;&gt;Discover eNews&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/events/index.php/events/all/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-Eve&apos;]);&quot;&gt;Events&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/alumni/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-Alu&apos;]);&quot;&gt;Alumni&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/experts/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-FinAnExp&apos;]);&quot;&gt;Find an expert&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/risingstars/index.php/4/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C6-Com-RisStaPro&apos;]);&quot;&gt;Rising Stars program&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;    &lt;li style=&quot;padding-right:11px;&quot;&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/about/&quot;&gt;About Us&lt;/a&gt;
        &lt;div class=&quot;global-nav-links no-expand&quot; data-width-mod=&quot;1918&quot; style=&quot;visibility: hidden;&quot;&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/about/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab&apos;]);&quot;&gt;About Us home&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/schools/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-AcaSch&apos;]);&quot;&gt;Academic schools&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/campuses/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-Loc&apos;]);&quot;&gt;Locations&lt;/a&gt; &lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/jobs/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-Jobs&apos;]);&quot;&gt;Jobs @ SCU&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/about/index.php/46/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-SCUexe&apos;]);&quot;&gt;SCU Executives&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/staffdirectory/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-StaDir&apos;]);&quot;&gt;Staff Directory&lt;/a&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/contact/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C7-Ab-ConUs&apos;]);&quot;&gt;Contact Us&lt;/a&gt;
        &lt;/div&gt;
&lt;/li&gt;&lt;li id=&quot;course-search&quot; class=&quot;hide no-expand&quot;&gt;&lt;a href=&quot;</xsl:text><xsl:value-of select="$course_search_path"/><xsl:text disable-output-escaping="yes">/#year=2017&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Nav&apos;, &apos;Click&apos;, &apos;C8-FindACourse&apos;]);&quot;&gt;Find a Course&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;
&lt;/nav&gt;
&lt;div id=&quot;banner&quot; role=&quot;navigation&quot; aria-label=&quot;Secondary Top&quot; class=&quot;shadey&quot;&gt;
&lt;h1 id=&quot;SCU-logo&quot; tabindex=&quot;1&quot;&gt;
&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;,&apos;GH-Logo&apos;,&apos;Click&apos;,&apos;SCU_Logo&apos;]);&quot;&gt;Southern Cross 
&lt;br&gt;
&lt;span class=&quot;second&quot;&gt;University&lt;/span&gt;
&lt;span class=&quot;printOnly&quot; id=&quot;slogan&quot;&gt;It&apos;s all about U&lt;/span&gt;
&lt;img id=&quot;logo-lo&quot; src=&quot;</xsl:text><xsl:value-of select="$global_scu_template_path"/><xsl:text disable-output-escaping="yes">/img/logo/SCU-Logo-White.png&quot; alt=&quot;Southern Cross University&quot;&gt;
&lt;img id=&quot;logo-hi&quot; src=&quot;</xsl:text><xsl:value-of select="$global_scu_template_path"/><xsl:text disable-output-escaping="yes">/img/logo/_SCU_logo@2x.png&quot; alt=&quot;&quot; style=&quot;display: none;&quot;&gt;
&lt;/a&gt;
&lt;/h1&gt;
&lt;nav id=&quot;head-nav&quot;&gt;
&lt;ul&gt;
&lt;li tabindex=&quot;2&quot;&gt;&lt;a href=&quot;//learn.scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;01-MySCU&apos;]);&quot;&gt;MySCU&lt;/a&gt;&lt;/li&gt;
&lt;li tabindex=&quot;3&quot;&gt;&lt;a href=&quot;http://email.scu.edu.au/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;02-Email&apos;]);&quot;&gt;Email&lt;/a&gt;&lt;/li&gt;
&lt;li tabindex=&quot;4&quot;&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/library/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;03-Library&apos;]);&quot;&gt;Library&lt;/a&gt;&lt;/li&gt;
&lt;li tabindex=&quot;5&quot;&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/services/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;04-AZ&apos;]);&quot;&gt;A-Z&lt;/a&gt;&lt;/li&gt;
&lt;li tabindex=&quot;6&quot;&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/contact/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-Icons&apos;, &apos;Click&apos;, &apos;05-Contact&apos;]);&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;
&lt;/div&gt;
&lt;/header&gt;

&lt;section id=&quot;quicklinks&quot; class=&quot;</xsl:text><xsl:value-of select="$skin_class"/><xsl:text disable-output-escaping="yes">&quot; aria-labelledby=&quot;quicklinksheading&quot;&gt;
&lt;span class=&quot;quicklinkshd&quot;&gt;&lt;a href=&quot;/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;,&apos;GH-QL&apos;,&apos;Click&apos;,&apos;QL&apos;]);&quot;&gt;Quick Links&lt;/a&gt;&lt;/span&gt;
&lt;nav&gt;
&lt;ul&gt;
&lt;li style=&quot;font-size: 12px;font-weight: bold;text-transform: uppercase;&quot;&gt;General&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/services/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-01&apos;]);&quot;&gt;A-Z of SCU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/academicboard/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-02&apos;]);&quot;&gt;Academic Board&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/schools/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-03&apos;]);&quot;&gt;Academic Schools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/academicskills/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-04&apos;]);&quot;&gt;Academic Skills&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/equity/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-05&apos;]);&quot;&gt;Equity and Diversity Office&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/jobs/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-06&apos;]);&quot;&gt;Jobs @ SCU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/news/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-07&apos;]);&quot;&gt;Media Releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/policy/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-08&apos;]);&quot;&gt;SCU Policy Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/staff/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-09&apos;]);&quot;&gt;Staff Directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/it/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C3-10&apos;]);&quot;&gt;Technology Services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li style=&quot;font-size: 12px;font-weight: bold;text-transform: uppercase;
&quot;&gt;Current Students&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/library/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-Library&apos;]);&quot;&gt;Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/myenrolment/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-MyEnrolment&apos;]);&quot;&gt;My Enrolment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/index.php/107/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-Out-of-HoursCrisisSupportLine&apos;]);&quot;&gt;Out-of-Hours Crisis Support Line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/pcfinder/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-PCFinder&apos;]);&quot;&gt;PC Finder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/it/servicedesk/&quot; onclick=&quot;_gaq.push([&#39;_trackEvent&#39;, &#39;GH-QL&#39;, &#39;Click&#39;, &#39;QL-C2-ServiceDesk&#39;]);&quot;&gt;Service Desk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/handbook/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-StudentHandbook&apos;]);&quot;&gt;Student Handbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/index.php/82/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-StudentRepresentation&apos;]);&quot;&gt;Student Representation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/teachingcalendar/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-TeachingCalendar&apos;]);&quot;&gt;Teaching Calendar&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;height:10px !important;&quot;&gt; &lt;/li&gt;
&lt;li style=&quot;font-size: 12px;font-weight: bold;text-transform: uppercase;&quot;&gt;STAFF&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/hr/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C2-HRServices&apos;]);&quot;&gt;HR Services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li style=&quot;font-size: 12px;font-weight: bold;text-transform: uppercase;&quot;&gt;Future Students&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;</xsl:text><xsl:value-of select="$course_search_path"/><xsl:text disable-output-escaping="yes">/#year=2016&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-01&apos;]);&quot;&gt;2017 Course Options  &lt;sup class=&quot;minilabel&quot; style=&quot;font-size: 8px;&quot;&gt;NEW&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/accommodation/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-02&apos;]);&quot;&gt;Accommodation Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/campustours/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-03&apos;]);&quot;&gt;Campus Tours&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/distance/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-04&apos;]);&quot;&gt;Distance and Online Study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/enquiries/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-05&apos;]);&quot;&gt;Enquire Online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/index.php/10/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-06&apos;]);&quot;&gt;International Course Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/postgraduate/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-07&apos;]);&quot;&gt;Postgraduate Course Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/preparingforsuccess/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-08&apos;]);&quot;&gt;Preparing for Success Program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scholarships/&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-09&apos;]);&quot;&gt;Scholarships&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;//</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scucollege&quot; onclick=&quot;_gaq.push([&apos;_trackEvent&apos;, &apos;GH-QL&apos;, &apos;Click&apos;, &apos;QL-C1-10&apos;]);&quot;&gt;SCU College&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;
&lt;script src=&quot;</xsl:text><xsl:value-of select="$scu_template_js_path"/><xsl:text disable-output-escaping="yes">/jquery/jquery-1.11.2.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;</xsl:text><xsl:value-of select="$scu_template_js_path"/><xsl:text disable-output-escaping="yes">/jquery/jquery-ui-1.10.3.custom.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;</xsl:text><xsl:value-of select="$scu_template_js_path"/><xsl:text disable-output-escaping="yes">/SCUlibs/scu.tooltips.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;</xsl:text><xsl:value-of select="$scu_template_js_path"/><xsl:text disable-output-escaping="yes">/SCUlibs/SCU-template.js?v=1&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;</xsl:text><xsl:value-of select="$scu_template_js_path"/><xsl:text disable-output-escaping="yes">/SCUlibs/SCU-gsa.js?v=1.5&quot;&gt;&lt;/script&gt;
&lt;/section&gt;
</xsl:text>
</xsl:template>
<xsl:template name="my_page_css">
<xsl:text disable-output-escaping="yes">
&lt;link rel=&quot;stylesheet&quot; media=&quot;screen&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/style.css?v=3&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;screen&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/search.css?v=3&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;print&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/print.css?v=2&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-width: 480px)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/480.css?v=2&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-width: 768px)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/768.css?v=2&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-width: 992px)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/992.css?v=2&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-width: 1382px)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/1382.css?v=1&quot;&gt;
&lt;!-- For Retina displays --&gt;
&lt;!--[if !(IE)]&gt;&lt;!--&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2)&quot; type=&quot;text/css&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/2x.css?v=1&quot;&gt;
&lt;!--  For Retina Devices Specific to 480 wide --&gt;
&lt;!--  &lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (max-device-width: 480px) and and (-webkit-min-device-pixel-ratio: 2)&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/retina-480.css&quot; /&gt;--&gt;
&lt;!--  For Retina Devices Specific to 1024 wide --&gt;
&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen and (min-device-width: 768px) and (max-device-width: 1024px)&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/device-1024.css&quot; /&gt;&lt;!--&lt;![endif]--&gt;
&lt;!--[if lt IE 9]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/ltIE9.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--[if lt IE 7]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/ltIE7.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--[if IE 7 ]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/IE7.css&gt;&lt;![endif]--&gt;
&lt;!--[if IE 8 ]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/IE8.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--[if IE 8 ]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;print&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/IE8_print.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--[if IEMobile 7]&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/ie/IEMobile7.css&quot;&gt;&lt;![endif]--&gt;
&lt;!--SCU tooltips--&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;only screen&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_css_path"/><xsl:text disable-output-escaping="yes">/mylibs/scu.tooltips.css&quot;&gt;
&lt;!-- For iPhone 4 --&gt;
&lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;114x114&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_img_path"/><xsl:text disable-output-escaping="yes">/h/apple-touch-icon.png&quot;&gt;
&lt;!-- For iPad 1--&gt;
&lt;link rel=&quot;apple-touch-icon-precomposed&quot; sizes=&quot;72x72&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_img_path"/><xsl:text disable-output-escaping="yes">/m/apple-touch-icon.png&quot;&gt;
&lt;!-- For iPhone 3G, iPod Touch and Android --&gt;
&lt;link rel=&quot;apple-touch-icon-precomposed&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_img_path"/><xsl:text disable-output-escaping="yes">/l/apple-touch-icon-precomposed.png&quot;&gt;
&lt;!-- For Nokia
&lt;link rel=&quot;shortcut icon&quot; href=&quot;</xsl:text><xsl:value-of select="$scu_template_img_path"/><xsl:text disable-output-escaping="yes">/l/apple-touch-icon.png&quot;&gt; CHROME IS USING THIS TOO --&gt;
&lt;!-- For everything else --&gt;
&lt;link rel=&quot;shortcut icon&quot; href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/favicon.ico&quot;&gt;
</xsl:text>
</xsl:template>
<xsl:template name="main_content_wrapper_start">
<xsl:text disable-output-escaping="yes">
&lt;div id=&quot;body-container&quot;&gt;
</xsl:text>
</xsl:template>
<xsl:template name="main_content_wrapper_end">
<xsl:text disable-output-escaping="yes">
&lt;/div&gt;
</xsl:text>
</xsl:template>

<xsl:template name="footer_element">
<xsl:text disable-output-escaping="yes">
&lt;div id=&quot;content-after&quot;&gt;&lt;/div&gt;
&lt;footer role=&quot;contentinfo&quot; class=&quot;clearfix </xsl:text><xsl:value-of select="$skin_class"/><xsl:text disable-output-escaping="yes">&quot;&gt;
&lt;div class=&quot;footer-nav&quot;&gt;
&lt;nav&gt;
&lt;h4&gt;Most popular&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;</xsl:text><xsl:value-of select="$course_search_path"/><xsl:text disable-output-escaping="yes">/#year=2017&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-2017CourseOptions&#039;]);&quot;&gt;2017 course options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://courses.scu.edu.au/search-pages/interational-course-list?year=2017&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-2017InternationalCourseOptions&#039;]);&quot;&gt;2017 international course options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/futurestudents/index.php/20/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-Accommodation&#039;]);&quot;&gt;Accommodation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/distance/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-DistanceOnlineStudy&#039;]);&quot;&gt;Distance and online study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/it/email/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-EmailCalendaring&#039;]);&quot;&gt;Email and calendaring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/jobs/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-Jobs&#039;]);&quot;&gt;Jobs @ SCU&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Important&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/futurestudents/index.php/7/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-Dates&#039;]);&quot;&gt;Key application dates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/myenrolment/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-MyEnrolment&#039;]);&quot;&gt;My Enrolment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/orientation/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-Orientation&#039;]);&quot;&gt;Orientation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scholarships/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Imp-Scholarships&#039;]);&quot;&gt;Scholarships&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/news/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;MP-SCUNews&#039;]);&quot;&gt;SCU News&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt; &lt;nav&gt;
&lt;h4&gt;Courses&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/business-tourism/index.php/3/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-Bus&#039;]);&quot;&gt;Business&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/arts-social-sciences/index.php/2#course_cat_7090&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-CrePerArt&#039;]);&quot;&gt;Creative and Performing Arts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/education/index.php/4/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-Edu&#039;]);&quot;&gt;Education&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/environment-science-engineering/index.php/22/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-ESE&#039;]);&quot;&gt;Environment, Science and Engineering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/health-sciences/index.php/34/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-HHS&#039;]);&quot;&gt;Health and Human Sciences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/arts-social-sciences/index.php/2/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-HSS&#039;]);&quot;&gt;Humanities and Social Sciences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/gnibi-indigenous-studies/index.php/2/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-Ind&#039;]);&quot;&gt;Indigenous Studies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/business-tourism/index.php/3/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-IT&#039;]);&quot;&gt;Information Technology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/law-justice/index.php/5/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-Law&#039;]);&quot;&gt;Law and Justice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;//</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">college.scu.edu.au/index.php/13/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-SCUC&#039;]);&quot;&gt;SCU College and Preparatory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://online.scu.edu.au/&quot; onclick=&quot;_gaq.push([&#39;_trackEvent&#39;, &#39;GF-Nav&#39;, &#39;Click&#39;, &#39;Courses-SCUonlinePG&#39;]);&quot;&gt;SCU Online Postgraduate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/business-tourism/index.php/3/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Courses-THM&#039;]);&quot;&gt;Tourism and Hospitality&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Course information&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/futurestudents/index.php/dds#cat1634/&quot; onclick=&quot;_gaq.push([&#39;_trackEvent&#39;, &#39;GF-Nav&#39;, &#39;Click&#39;, &#39;CI-2017StudyGuide&#39;]);&quot;&gt;2017 study guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/futurestudents/index.php/dds#cat1637/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CI-CourseBrochures&#039;]);&quot;&gt;Course brochures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/courseguide/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CI-CouEnrGui&#039;]);&quot;&gt;Course enrolment guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scuinfodays/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CI-InfoDays&#039;]);&quot;&gt;SCU Info Days&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/nav&gt; &lt;nav&gt;
&lt;h4&gt;Information for&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/alumni/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-Alumni&#039;]);&quot;&gt;Alumni&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/distance/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-DE&#039;]);&quot;&gt;Distance and online study&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/futurestudents/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-FS&#039;]);&quot;&gt;Future students&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/international/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-IS&#039;]);&quot;&gt;International students&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/postgraduate/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-PostgRes&#039;]);&quot;&gt;Postgraduate and research&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/students/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-Students&#039;]);&quot;&gt;SCU students&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/risingstars/index.php/3/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Info-ScholSupp&#039;]);&quot;&gt;Scholarship supporters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Connect with SCU&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scunews/index.php/31#facebook&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-Facebook&#039;]);&quot;&gt;&lt;img src=&quot;</xsl:text><xsl:value-of select="$global_scu_template_path"/><xsl:text disable-output-escaping="yes">/img/share-sml/facebook-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on Facebook&quot; title=&quot;Southern Cross University on Facebook&quot;&gt; Facebook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scunews/index.php/31#twitter&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-Twitter&#039;]);&quot;&gt;&lt;img src=&quot;</xsl:text><xsl:value-of select="$global_scu_template_path"/><xsl:text disable-output-escaping="yes">/img/share-sml/twitter-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on Twitter&quot; title=&quot;Southern Cross University on Twitter&quot;&gt; Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scunews/index.php/31#linkedin&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-LinkedIn&#039;]);&quot;&gt;&lt;img src=&quot;</xsl:text><xsl:value-of select="$global_scu_template_path"/><xsl:text disable-output-escaping="yes">/img/share-sml/linkedin-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on LinkedIn&quot; title=&quot;Southern Cross University on LinkedIn&quot;&gt; LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scunews/index.php/31#youtube&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-YouTube&#039;]);&quot;&gt;&lt;img src=&quot;</xsl:text><xsl:value-of select="$global_scu_template_path"/><xsl:text disable-output-escaping="yes">/img/share-sml/youtube-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on YouTube&quot; title=&quot;Southern Cross University on YouTube&quot;&gt; YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/itunesu/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-iTunesU&#039;]);&quot;&gt;&lt;img src=&quot;</xsl:text><xsl:value-of select="$global_scu_template_path"/><xsl:text disable-output-escaping="yes">/img/share-sml/itunesu-share-sml.png&quot; height=&quot;17&quot; width=&quot;17&quot; alt=&quot;Southern Cross University on iTunes&quot; title=&quot;Southern Cross University on iTunes&quot;&gt; iTunesU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/enquiries/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;Connect-OnlineEnquiry&#039;]);&quot;&gt;Online enquiry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/nav&gt; &lt;nav class=&quot;last&quot;&gt;
&lt;h4&gt;Commercial services&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/eal/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-EAL&#039;]);&quot;&gt;Environmental Analysis Laboratory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://catering.scu.edu.au/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-SCUCater&#039;]);&quot;&gt;SCU Catering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://gymandpool.scu.edu.au/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-SCUGymPool&#039;]);&quot;&gt;SCU Fitness for You&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/healthclinic/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-SCUHC&#039;]);&quot;&gt;SCU Health Clinic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://unibarandcafe.scu.edu.au/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;CommServ-SCUUniBarCafe&#039;]);&quot;&gt;The Deck (SCU Unibar)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://scfc.net.au/&quot; onclick=&quot;_gaq.push([&#39;_trackEvent&#39;, &#39;GF-Nav&#39;, &#39;Click&#39;, &#39;CommServ-SCFC&#39;]);&quot;&gt;Southern Cross Football Centre&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Information about&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/space/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;InfA-CommEng&#039;]);&quot;&gt;Community Engagement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/governance/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;InfA-Gover&#039;]);&quot;&gt;Governance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/docs/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;InfA-PubPol&#039;]);&quot;&gt;Publications and Policies&lt;/a&gt;&lt;/li&gt;
&lt;li style=&quot;padding-bottom: 10px;&quot;&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/sustainability/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;InfA-Sust&#039;]);&quot;&gt;Sustainability&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;a id=&quot;RUN-link&quot; href=&quot;http://www.run.edu.au/&quot; target=&quot;_blank&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Nav&#039;, &#039;Click&#039;, &#039;RUNimg&#039;]);&quot;&gt;&lt;img title=&quot;Regional Universities Network&quot; src=&quot;</xsl:text><xsl:value-of select="$scu_template_img_path"/><xsl:text disable-output-escaping="yes">/RUN_Logo.jpg&quot; alt=&quot;The Regional Universities Network (RUN) is a network of six universities with headquarters in regional Australia and a shared commitment to playing a transformative role in their regions.&quot;&gt;&lt;/a&gt;
&lt;/nav&gt;
&lt;/div&gt;
&lt;div class=&quot;footer-shadow&quot;&gt;&lt;/div&gt;
&lt;p class=&quot;top-link&quot;&gt;&lt;a href=&quot;#&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-Top&#039;]);&quot;&gt;top&lt;/a&gt;&lt;/p&gt;
&lt;p class=&quot;global-footer&quot;&gt;
&lt;span class=&quot;SCU-copy-title&quot;&gt;&#169; &lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/&quot; title=&quot;Southern Cross University&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-SCU&#039;]);&quot;&gt;Southern Cross University&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;sep titlesep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/wwwadmin/disclaimer/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-Legals&#039;]);&quot;&gt;Legals&lt;/a&gt;&lt;span class=&quot;sep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/privacy/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-Privacy&#039;]);&quot;&gt;Privacy&lt;/a&gt;&lt;span class=&quot;sep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/scunews/index.php/72/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-Accessibility&#039;]);&quot;&gt;Accessibility&lt;/a&gt;&lt;span class=&quot;sep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://</xsl:text><xsl:value-of select="$env"/><xsl:text disable-output-escaping="yes">.edu.au/contact/&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-ContactUs&#039;]);&quot;&gt;Contact Us&lt;/a&gt;&lt;span class=&quot;admin-link&quot;&gt;&lt;span class=&quot;sep&quot;&gt; | &lt;/span&gt;&lt;a href=&quot;http://study.scu.edu.au/websys/content/index.php?site_id=50&amp;amp;action=Edit%20Item&amp;amp;page_id=31&quot; onclick=&quot;_gaq.push([&#039;_trackEvent&#039;, &#039;GF-Links&#039;, &#039;Click&#039;, &#039;GF-Links-SiteAdmin&#039;]);&quot;&gt;Site Admin&lt;/a&gt;&lt;/span&gt;&lt;span class=&quot;sep abnsep&quot;&gt; | &lt;/span&gt;&lt;span class=&quot;SCU-abn&quot;&gt;ABN: 41 995 651 524&lt;/span&gt;&lt;span class=&quot;sep cricosep&quot;&gt; | &lt;/span&gt;&lt;span class=&quot;SCU-cricos&quot;&gt;CRICOS Provider: 01241G&lt;/span&gt;
&lt;/p&gt;
&lt;/footer&gt;
    </xsl:text>
  <xsl:apply-templates select="TraceNode"/>
</xsl:template>
</xsl:stylesheet>




              ]]></stylesheet.en>
              <synonyms><![CDATA[

              ]]></synonyms>
              <wildcard_wc_filter><![CDATA[
200

              ]]></wildcard_wc_filter>
          </frontend>
          <frontend Name="servicedesk_frontend">
              <default_language><![CDATA[
'en'
              ]]></default_language>
              <profile_sheet><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'link', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'line', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'lucida grande,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '', 'logo_url': '', 'logo_width': '', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': '', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '0', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '0', 'search_button_image_url': '', 'search_button_text': '', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '0', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '1', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '0', 'show_people_search_results': '0', 'show_res_cache': '0', 'show_res_clusters': '0', 'show_res_date': '0', 'show_res_description': '1', 'show_res_size': '0', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '0', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '1', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '0', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet>
              <profile_sheet.en><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'link', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'line', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'lucida grande,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '', 'logo_url': '', 'logo_width': '', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': '', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '0', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '0', 'search_button_image_url': '', 'search_button_text': '', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '0', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '1', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '0', 'show_people_search_results': '0', 'show_res_cache': '0', 'show_res_clusters': '0', 'show_res_date': '0', 'show_res_description': '1', 'show_res_size': '0', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '0', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '1', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '0', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet.en>
              <access_control_allow_origin><![CDATA[


              ]]></access_control_allow_origin>
              <badurls_noreturn><![CDATA[

              ]]></badurls_noreturn>
              <content_type><![CDATA[
text/html
              ]]></content_type>
              <domain_filter><![CDATA[

              ]]></domain_filter>
              <filetype_filter><![CDATA[

              ]]></filetype_filter>
              <good_ips><![CDATA[
0.0.0.0/0

              ]]></good_ips>
              <googlematch><![CDATA[

              ]]></googlematch>
              <lang_filter><![CDATA[

              ]]></lang_filter>
              <metatag_filter><![CDATA[
OR,REQUIREDFIELDS,gsaentity_Services,Technology

              ]]></metatag_filter>
              <query_expansion_filter><![CDATA[
QE_FULL
              ]]></query_expansion_filter>
              <query_expansion_meta_filter><![CDATA[
QE_META_NONE
              ]]></query_expansion_meta_filter>
              <scoring_policy_filter><![CDATA[

              ]]></scoring_policy_filter>
              <star_wildcard_default_filter><![CDATA[
1
              ]]></star_wildcard_default_filter>
              <stylesheet><![CDATA[
<!-- *** START OF STYLESHEET *** -->

<!-- **********************************************************************
 XSL to format the search output for Google Search Appliance
     ********************************************************************** -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">

<!-- **********************************************************************
 include customer-onebox.xsl, which is auto-generated from the customer's
 set of OneBox Module definitions, and in turn invokes either the default
 OneBox template, or the customer's:
********************************************************************** -->
<xsl:include href="customer-onebox.xsl"/>

<xsl:output method="html"/>

<!-- **********************************************************************
 Logo setup (can be customized)
     - whether to show logo: 0 for FALSE, 1 (or non-zero) for TRUE
     - logo url
     - logo size: '' for default image size
     ********************************************************************** -->
<xsl:variable name="show_logo">0</xsl:variable>
<xsl:variable name="logo_url">images/Title_Left.gif</xsl:variable>
<xsl:variable name="logo_width">200</xsl:variable>
<xsl:variable name="logo_height">78</xsl:variable>

<!-- **********************************************************************
 Global Style variables (can be customized): '' for using browser's default
     ********************************************************************** -->

<xsl:variable name="global_font">lucida grande,sans-serif</xsl:variable>
<xsl:variable name="global_font_size"></xsl:variable>
<xsl:variable name="global_bg_color">#ffffff</xsl:variable>
<xsl:variable name="global_text_color">#000000</xsl:variable>
<xsl:variable name="global_link_color">#0000cc</xsl:variable>
<xsl:variable name="global_vlink_color">#551a8b</xsl:variable>
<xsl:variable name="global_alink_color">#ff0000</xsl:variable>


<!-- **********************************************************************
 Result page components (can be customized)
     - whether to show a component: 0 for FALSE, non-zero (e.g., 1) for TRUE
     - text and style
     ********************************************************************** -->

<!-- *** choose result page header: '', 'provided', 'mine', or 'both' *** -->
<xsl:variable name="choose_result_page_header">both</xsl:variable>

<!-- *** customize provided result page header *** -->
<xsl:variable name="show_swr_link">1</xsl:variable>
<xsl:variable name="swr_search_anchor_text">Search Within Results</xsl:variable>
<xsl:variable name="show_result_page_adv_link">1</xsl:variable>
<xsl:variable name="adv_search_anchor_text">Advanced Search</xsl:variable>
<xsl:variable name="show_result_page_help_link">1</xsl:variable>
<xsl:variable name="search_help_anchor_text">Search Tips</xsl:variable>
<xsl:variable name="show_alerts_link">0</xsl:variable>
<xsl:variable name="alerts_anchor_text">Alerts</xsl:variable>

<!-- *** search boxes *** -->
<xsl:variable name="show_top_search_box">0</xsl:variable>
<xsl:variable name="show_bottom_search_box">0</xsl:variable>
<xsl:variable name="search_box_size">32</xsl:variable>

<!-- *** choose search button type: 'text' or 'image' *** -->
<xsl:variable name="choose_search_button">text</xsl:variable>
<xsl:variable name="search_button_text">Search</xsl:variable>
<xsl:variable name="search_button_image_url"></xsl:variable>
<xsl:variable name="search_collections_xslt"></xsl:variable>

<!-- *** search info bars *** -->
<xsl:variable name="show_search_info">1</xsl:variable>

<!-- *** choose separation bar: 'ltblue', 'blue', 'line', 'nothing' *** -->
<xsl:variable name="choose_sep_bar">ltblue</xsl:variable>
<xsl:variable name="sep_bar_std_text"></xsl:variable>
<xsl:variable name="sep_bar_adv_text">Advanced Search</xsl:variable>
<xsl:variable name="sep_bar_error_text">Error</xsl:variable>

<!-- *** navigation bars: '', 'google', 'link', or 'simple'*** -->
<xsl:variable name="show_top_navigation">0</xsl:variable>
<xsl:variable name="choose_bottom_navigation">link</xsl:variable>
<xsl:variable name="my_nav_align">right</xsl:variable>
<xsl:variable name="my_nav_size">-1</xsl:variable>
<xsl:variable name="my_nav_color">#003399</xsl:variable>

<!-- *** sort by date/relevance *** -->
<xsl:variable name="show_sort_by">0</xsl:variable>

<!-- *** spelling suggestions *** -->
<xsl:variable name="show_spelling">1</xsl:variable>
<xsl:variable name="spelling_text">Did you mean:</xsl:variable>
<xsl:variable name="spelling_text_color">#cc0000</xsl:variable>

<!-- *** synonyms suggestions *** -->
<xsl:variable name="show_synonyms">1</xsl:variable>
<xsl:variable name="synonyms_text">You could also try:</xsl:variable>
<xsl:variable name="synonyms_text_color">#cc0000</xsl:variable>

<!-- *** keymatch suggestions *** -->
<xsl:variable name="show_keymatch">1</xsl:variable>
<xsl:variable name="keymatch_text">KeyMatch</xsl:variable>
<xsl:variable name="keymatch_text_color">#2255aa</xsl:variable>
<xsl:variable name="keymatch_bg_color">#e8e8ff</xsl:variable>

<!-- *** Google Desktop integration *** -->
<xsl:variable name="egds_show_search_tabs">1</xsl:variable>
<xsl:variable name="egds_appliance_tab_label">Appliance</xsl:variable>
<xsl:variable name="egds_show_desktop_results">1</xsl:variable>

<!-- *** onebox information *** -->
<xsl:variable name="show_onebox">1</xsl:variable>

<!-- *** analytics information *** -->
<xsl:variable name="analytics_account">UA-3033761-1</xsl:variable>

<!-- **********************************************************************
 Result elements (can be customized)
     - whether to show an element ('1' for yes, '0' for no)
     - font/size/color ('' for using style of the context)
     ********************************************************************** -->

<!-- *** result title and snippet *** -->
<xsl:variable name="show_res_title">1</xsl:variable>
<xsl:variable name="res_title_color">#003399</xsl:variable>
<xsl:variable name="res_title_size">100%</xsl:variable>
<xsl:variable name="show_res_snippet">1</xsl:variable>
<xsl:variable name="res_snippet_size">80%</xsl:variable>

<!-- *** keyword match (in title or snippet) *** -->
<xsl:variable name="res_keyword_color">#003399</xsl:variable>
<xsl:variable name="res_keyword_size"></xsl:variable>
<xsl:variable name="res_keyword_format">b</xsl:variable> <!-- 'b' for bold -->

<!-- *** link URL *** -->
<xsl:variable name="show_res_url">0</xsl:variable>
<xsl:variable name="res_url_color">#008000</xsl:variable>
<xsl:variable name="res_url_size">-1</xsl:variable>
<xsl:variable name="truncate_result_urls">1</xsl:variable>
<xsl:variable name="truncate_result_url_length">100</xsl:variable>

<!-- *** misc elements *** -->
<xsl:variable name="show_meta_tags">0</xsl:variable>
<xsl:variable name="show_res_size">0</xsl:variable>
<xsl:variable name="show_res_date">0</xsl:variable>
<xsl:variable name="show_res_cache">0</xsl:variable>

<!-- *** used in result cache link, similar pages link, and description *** -->
<xsl:variable name="faint_color">#7777cc</xsl:variable>

<!-- *** show secure results radio button *** -->
<xsl:variable name="show_secure_radio">1</xsl:variable>

<!-- **********************************************************************
 Other variables (can be customized)
     ********************************************************************** -->

<!-- *** page title *** -->
<xsl:variable name="front_page_title"></xsl:variable>
<xsl:variable name="result_page_title">Results</xsl:variable>
<xsl:variable name="adv_page_title">Advanced Search</xsl:variable>
<xsl:variable name="error_page_title">Error</xsl:variable>
<xsl:variable name="swr_page_title">Search Within Results</xsl:variable>

<!-- *** choose adv_search page header: '', 'provided', 'mine', or 'both' *** -->
<xsl:variable name="choose_adv_search_page_header">both</xsl:variable>

<!-- *** cached page header text *** -->
<xsl:variable name="cached_page_header_text">This is the cached copy of</xsl:variable>

<!-- *** error message text *** -->
<xsl:variable name="server_error_msg_text">A server error has occurred.</xsl:variable>
<xsl:variable name="server_error_des_text">Check server response code in details.</xsl:variable>
<xsl:variable name="xml_error_msg_text">Unknown XML result type.</xsl:variable>
<xsl:variable name="xml_error_des_text">View page source to see the offending XML.</xsl:variable>

<!-- *** advanced search page panel background color *** -->
<xsl:variable name="adv_search_panel_bgcolor">#cbdced</xsl:variable>

<!-- *** dyanmic result cluster options *** -->
<xsl:variable name="show_res_clusters">0</xsl:variable>
<xsl:variable name="res_cluster_position">right</xsl:variable>

<!-- **********************************************************************
 My global page header/footer (can be customized)
     ********************************************************************** -->
<xsl:template name="my_page_header">
  <!-- *** replace the following with your own xhtml code or replace the text
   between the xsl:text tags with html escaped html code *** -->
  <xsl:text disable-output-escaping="yes"></xsl:text>
</xsl:template>

<xsl:template name="my_page_footer">
  <span class="p">
    <xsl:text disable-output-escaping="yes"> &lt;!-- Please enter html code below. --&gt;</xsl:text>
  </span>
</xsl:template>


<!-- **********************************************************************
 Logo template (can be customized)
     ********************************************************************** -->
<xsl:template name="logo">
    <a href="{$home_url}"><img src="{$logo_url}"
      width="{$logo_width}" height="{$logo_height}"
      alt="Go to Google Home" border="0" /></a>
</xsl:template>


<!-- **********************************************************************
 Search result page header (can be customized): logo and search box
     ********************************************************************** -->
<xsl:template name="result_page_header">
    <table border="0" cellpadding="0" cellspacing="0">
      <xsl:if test="$show_logo != '0'">
        <tr>
          <td rowspan="3" valign="top">
            <xsl:call-template name="logo"/>
            <xsl:call-template name="nbsp3"/>
          </td>
        </tr>
      </xsl:if>
      <xsl:if test="$show_top_search_box != '0'">
        <tr>
          <td valign="middle">
            <xsl:call-template name="search_box">
              <xsl:with-param name="type" select="'std_top'"/>
            </xsl:call-template>
          </td>
        </tr>
      </xsl:if>
      <xsl:if test="/GSP/CT">
                <tr>
          <td valign="top">
            <br/>
            <xsl:call-template name="stopwords"/>
            <br/>
          </td>
        </tr>
      </xsl:if>
    </table>
</xsl:template>


<!-- **********************************************************************
 Search within results page header (can be customized): logo and search box
     ********************************************************************** -->
<xsl:template name="swr_page_header">
    <table border="0" cellpadding="0" cellspacing="0">
      <xsl:if test="$show_logo != '0'">
        <tr>
          <td rowspan="3" valign="top">
            <xsl:call-template name="logo"/>
            <xsl:call-template name="nbsp3"/>
          </td>
        </tr>
      </xsl:if>
      <xsl:if test="$show_top_search_box != '0'">
        <tr>
          <td valign="middle">
            <xsl:call-template name="search_box">
              <xsl:with-param name="type" select="'swr'"/>
            </xsl:call-template>
          </td>
        </tr>
      </xsl:if>
    </table>
</xsl:template>


<!-- **********************************************************************
 Home search page header (can be customized): logo and search box
     ********************************************************************** -->
<xsl:template name="home_page_header">
    <table border="0" cellpadding="0" cellspacing="0">
      <xsl:if test="$show_logo != '0'">
        <tr>
          <td rowspan="3" valign="top">
            <xsl:call-template name="logo"/>
            <xsl:call-template name="nbsp3"/>
          </td>
        </tr>
      </xsl:if>
      <xsl:if test="$show_top_search_box != '0'">
        <tr>
          <td valign="middle">
            <xsl:call-template name="search_box">
              <xsl:with-param name="type" select="'home'"/>
            </xsl:call-template>
          </td>
        </tr>
      </xsl:if>
    </table>
</xsl:template>


<!-- **********************************************************************
 Separation bar variables (used in advanced search header and result page)
     ********************************************************************** -->
<xsl:variable name="sep_bar_border_color">
  <xsl:choose>
    <xsl:when test="$choose_sep_bar = 'ltblue'">#3366cc</xsl:when>
    <xsl:when test="$choose_sep_bar = 'blue'">#3366cc</xsl:when>
    <xsl:otherwise><xsl:value-of select="$global_bg_color"/></xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="sep_bar_bg_color">
  <xsl:choose>
    <xsl:when test="$choose_sep_bar = 'ltblue'">#e5ecf9</xsl:when>
    <xsl:when test="$choose_sep_bar = 'blue'">#3366cc</xsl:when>
    <xsl:otherwise><xsl:value-of select="$global_bg_color"/></xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:variable name="sep_bar_text_color">
  <xsl:choose>
    <xsl:when test="$choose_sep_bar = 'ltblue'">#000000</xsl:when>
    <xsl:when test="$choose_sep_bar = 'blue'">#ffffff</xsl:when>
    <xsl:otherwise><xsl:value-of select="$global_text_color"/></xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- **********************************************************************
 Advanced search page header HTML (can be customized)
     ********************************************************************** -->
<xsl:template name="advanced_search_header">
      <table border="0" cellpadding="0" cellspacing="0">

        <tr>

          <td valign="top">
            <xsl:if test="$show_logo != '0'">
                  <xsl:call-template name="logo"/>
            </xsl:if>
          </td>
        </tr>
      </table>
</xsl:template>


<!-- **********************************************************************
 Cached page header (can be customized)
     ********************************************************************** -->
<xsl:template name="cached_page_header">
  <xsl:param name="cached_page_url"/>
  <xsl:variable name="stripped_url" select="substring-after($cached_page_url,
                                                            '://')"/>
<table border="1" width="100%">
  <tr>
    <td>
      <table border="1" width="100%" cellpadding="10" cellspacing="0"
        bgcolor="{$global_bg_color}" color="{$global_bg_color}">
        <tr>
          <td>
            <font face="{$global_font}" color="{$global_text_color}" size="-1">
             <xsl:value-of select="$cached_page_header_text"/>
             <xsl:call-template name="nbsp"/>
             <xsl:choose>
              <xsl:when test="starts-with($cached_page_url,
                                          $db_url_protocol)">
               <a href="{concat('/db/',$stripped_url)}">
               <font color="{$global_link_color}">
               <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
              </xsl:when>
              <xsl:when test="starts-with($cached_page_url,
                                          $nfs_url_protocol)">
               <a href="{concat('/nfs/',$stripped_url)}">
               <font color="{$global_link_color}">
               <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
              </xsl:when>
              <xsl:when test="starts-with($cached_page_url,
                                          $smb_url_protocol)">
               <a href="{concat('/smb/',$stripped_url)}">
               <font color="{$global_link_color}">
               <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
              </xsl:when>
              <xsl:when test="starts-with($cached_page_url,
                                          $unc_url_protocol)">
               <xsl:variable name="display_url">
                 <xsl:call-template name="convert_unc">
                   <xsl:with-param name="string" select="$stripped_url"/>
                 </xsl:call-template>
               </xsl:variable>
               <a href="{concat('file://',$stripped_url)}">
               <font color="{$global_link_color}">
               <xsl:value-of select="$display_url"/></font></a>.<br/>
              </xsl:when>
              <xsl:otherwise>
               <a href="{$cached_page_url}"><font color="{$global_link_color}">
               <xsl:value-of select="$cached_page_url"/></font></a>.<br/>
              </xsl:otherwise>
             </xsl:choose>
            </font>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<hr/>
</xsl:template>


<!-- **********************************************************************
 "Search Within Results" search input page (can be customized)
     ********************************************************************** -->
<xsl:template name="swr_search">
<html>
  <xsl:call-template name="langHeadStart"/>
    <title><xsl:value-of select="$swr_page_title"/></title>
  <xsl:call-template name="style"/>
  <xsl:call-template name="langHeadEnd"/>

  <body dir="ltr">
  <xsl:call-template name="analytics"/>

  <xsl:call-template name="my_page_header"/>
  <xsl:call-template name="swr_page_header"/>
  <hr/>
  <xsl:call-template name="copyright"/>
  <xsl:call-template name="my_page_footer"/>

  </body>
</html>
</xsl:template>


<!-- **********************************************************************
 "Front door" search input page (can be customized)
     ********************************************************************** -->
<xsl:template name="front_door">
<html>
  <xsl:call-template name="langHeadStart"/>
    <title><xsl:value-of select="$front_page_title"/></title>
  <xsl:call-template name="style"/>
  <xsl:call-template name="langHeadEnd"/>

  <body dir="ltr">
  <xsl:call-template name="analytics"/>

  <xsl:call-template name="my_page_header"/>
  <xsl:call-template name="home_page_header"/>
  <hr/>
  <xsl:call-template name="copyright"/>
  <xsl:call-template name="my_page_footer"/>

  </body>
</html>
</xsl:template>


<!-- **********************************************************************
 Empty result set (can be customized)
     ********************************************************************** -->
<xsl:template name="no_RES">
  <xsl:param name="query"/>

  <!-- *** Output Google Desktop results (if enabled and any available) *** -->
  <xsl:if test="$egds_show_desktop_results != '0'">
    <xsl:call-template name="desktop_results"/>
  </xsl:if>

  <span class="p">
  <br/>
  Your search - <b><xsl:value-of select="$query"/></b> - did not match any documents.
  <br/>
  No pages were found containing <b>"<xsl:value-of select="$query"/>"</b>.
  <br/>
  <br/>
  Suggestions:
  <ul>
    <li>Make sure all words are spelled correctly.</li>
    <li>Try different keywords.</li>
    <xsl:if test="/GSP/PARAM[(@name='access') and(@value='a')]">
      <li>Make sure your security credentials are correct.</li>
    </xsl:if>
    <li>Try more general keywords.</li>
  </ul>
  </span>

</xsl:template>


<!-- ######################################################################
 We do not recommend changes to the following code.  Google Technical
 Support Personnel currently do not support customization of XSLT under
 these Technical Support Services Guidelines.  Such services may be
 provided on a consulting basis, at Google's then-current consulting
 services rates under a separate agreement, if Google personnel are
 available.  Please ask your Google Account Manager for more details if
 you are interested in purchasing consulting services.
     ###################################################################### -->


<!-- **********************************************************************
 Global Style (do not customize)
        default font type/size/color, background color, link color
         using HTML CSS (Cascading Style Sheets)
     ********************************************************************** -->
<xsl:template name="style">
<style>
<xsl:comment>
body,td,div,.p,a,.d,.s{font-family:<xsl:value-of select="$global_font"/>}
body,td,div,.p,a,.d{font-size: <xsl:value-of select="$global_font_size"/>}
body,div,td,.p,.s{color:<xsl:value-of select="$global_text_color"/>}
body,.d,.p,.s{background-color:<xsl:value-of select="$global_bg_color"/>}
.s{font-size: <xsl:value-of select="$res_snippet_size"/>}
.g{margin-top: 1em; margin-bottom: 1em}
.s td{width:34em}
.l{font-size: <xsl:value-of select="$res_title_size"/>}
.l{color: <xsl:value-of select="$res_title_color"/>}
a:link,.w,.w a:link{color:<xsl:value-of select="$global_link_color"/>}
.f,.f:link,.f a:link{color:<xsl:value-of select="$faint_color"/>}
a:visited,.f a:visited{color:<xsl:value-of select="$global_vlink_color"/>}
a:active,.f a:active{color:<xsl:value-of select="$global_alink_color"/>}
.t{color:<xsl:value-of select="$sep_bar_text_color"/>}
.t{background-color:<xsl:value-of select="$sep_bar_bg_color"/>}
.z{display:none}
.i,.i:link{color:#a90a08}
.a,.a:link{color:<xsl:value-of select="$res_url_color"/>}
div.n {margin-top: 1ex}
.n a{font-size: 10pt; color:<xsl:value-of select="$global_text_color"/>}
.n .i{font-size: 10pt; font-weight:bold}
.q a:visited,.q a:link,.q a:active,.q {color:#0000cc;}
.b,.b a{font-size: 12pt; color:#0000cc; font-weight:bold}
.d{margin-right:1em; margin-left:1em;}
div.oneboxResults {max-height:150px;overflow:hidden;}
<xsl:if test="$show_res_clusters = '1'">
  <xsl:choose>
    <xsl:when test="$res_cluster_position = 'top'">
div#clustering {font-size: 84%; line-height: 140%; min-height: 4.6em; _height: 4.6em; margin-top: 1em;}
div#clustering h3 {font-size: 100%; font-weight: bold; margin: 0; padding: 0;}
div#clustering table {margin-left: 2em; font-size: 100%;} 
div#clustering table a {white-space: nowrap;}
div#clustering table td {padding-right: 1em;}
div#clustering #cluster_status {color: #666666; margin-left: 2em;}
</xsl:when>
    <xsl:when test="$res_cluster_position = 'right'">
div#clustering {font-size: 84%; line-height: 140%; float: right; width: 15em; margin: 2em 0 0 1em; padding-left: 1em; border-left: 1px solid #cccccc;}
div#clustering h3 {font-size: 100%; font-weight: bold; margin: 0 0 0.6em 0; padding: 0;}
div#clustering ul {list-style: none; margin: 0; padding: 0;}
div#clustering li {margin-left: 2em; text-indent: -2em;}
div#clustering #cluster_status {color: #666666;}
</xsl:when>
  </xsl:choose>
</xsl:if>

</xsl:comment>
</style>
</xsl:template>

<!-- **********************************************************************
 URL variables (do not customize)
     ********************************************************************** -->
<!-- *** if this is a test search (help variable)-->
<xsl:variable name="is_test_search"
  select="/GSP/PARAM[@name='testSearch']/@value"/>

<!-- *** if this is a search within results search *** -->
<xsl:variable name="swrnum">
  <xsl:choose>
    <xsl:when test="/GSP/PARAM[(@name='swrnum') and (@value!='')]">
      <xsl:value-of select="/GSP/PARAM[@name='swrnum']/@value"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="0"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- *** help_url: search tip URL (html file) *** -->
<xsl:variable name="help_url">/user_help.html</xsl:variable>

<!-- *** alerts_url: Alerts URL (html file) *** -->
<xsl:variable name="alerts_url">/alerts</xsl:variable>

<!-- *** base_url: collection info *** -->
<xsl:variable name="base_url">
  <xsl:for-each
    select="/GSP/PARAM[@name = 'client' or

                     @name = 'site' or
                     @name = 'num' or
                     @name = 'output' or
                     @name = 'proxystylesheet' or
                     @name = 'access' or
                     @name = 'lr' or
                     @name = 'ie']">
    <xsl:value-of select="@name"/>=<xsl:value-of select="@original_value"/>
    <xsl:if test="position() != last()">&amp;</xsl:if>
  </xsl:for-each>
</xsl:variable>

<!-- *** home_url: search? + collection info + &proxycustom=<HOME/> *** -->
<xsl:variable name="home_url">search?<xsl:value-of select="$base_url"
  />&amp;proxycustom=&lt;HOME/&gt;</xsl:variable>


<!-- *** synonym_url: does not include q, as_q, and start elements *** -->
<xsl:variable name="synonym_url"><xsl:for-each
  select="/GSP/PARAM[(@name != 'q') and
                     (@name != 'as_q') and
                     (@name != 'swrnum') and

		     (@name != 'ie') and
                     (@name != 'start') and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
    <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
    <xsl:value-of select="@original_value"/>
    <xsl:if test="position() != last()">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
  </xsl:for-each>
</xsl:variable>

<!-- *** search_url *** -->
<xsl:variable name="search_url">
  <xsl:for-each select="/GSP/PARAM[(@name != 'start') and
                                   (@name != 'swrnum') and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
    <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
    <xsl:value-of select="@original_value"/>
    <xsl:if test="position() != last()">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
  </xsl:for-each>
</xsl:variable>

<!-- *** filter_url: everything except resetting "filter=" *** -->
<xsl:variable name="filter_url">search?<xsl:for-each
  select="/GSP/PARAM[(@name != 'filter') and
                     (@name != 'epoch' or $is_test_search != '') and
                     not(starts-with(@name, 'metabased_'))]">
    <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
    <xsl:value-of select="@original_value"/>
    <xsl:if test="position() != last()">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
  </xsl:for-each>
  <xsl:text disable-output-escaping='yes'>&amp;filter=</xsl:text>
</xsl:variable>

<!-- *** adv_search_url: search? + $search_url + as_q=$q *** -->
<xsl:variable name="adv_search_url">search?<xsl:value-of
  select="$search_url"/>&amp;proxycustom=&lt;ADVANCED/&gt;</xsl:variable>

<!-- *** db_url_protocol: googledb:// *** -->
<xsl:variable name="db_url_protocol">googledb://</xsl:variable>

<!-- *** googleconnector_protocol: googleconnector:// *** -->
<xsl:variable name="googleconnector_protocol">googleconnector://</xsl:variable>

<!-- *** nfs_url_protocol: nfs:// *** -->
<xsl:variable name="nfs_url_protocol">nfs://</xsl:variable>

<!-- *** smb_url_protocol: smb:// *** -->
<xsl:variable name="smb_url_protocol">smb://</xsl:variable>

<!-- *** unc_url_protocol: unc:// *** -->
<xsl:variable name="unc_url_protocol">unc://</xsl:variable>

<!-- *** swr_search_url: search? + $search_url + as_q=$q *** -->
<xsl:variable name="swr_search_url">search?<xsl:value-of
  select="$search_url"/>&amp;swrnum=<xsl:value-of select="/GSP/RES/M"/></xsl:variable>

<!-- *** analytics_script_url: http://www.google-analytics.com/urchin.js *** -->
<xsl:variable
 name="analytics_script_url">http://www.google-analytics.com/urchin.js</xsl:variable>

<!-- **********************************************************************
 Search Parameters (do not customize)
     ********************************************************************** -->

<!-- *** num_results: actual num_results per page *** -->
<xsl:variable name="num_results">
  <xsl:choose>
    <xsl:when test="/GSP/PARAM[(@name='num') and (@value!='')]">
      <xsl:value-of select="/GSP/PARAM[@name='num']/@value"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="10"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- *** form_params: parameters carried by the search input form *** -->
<xsl:template name="form_params">
  <xsl:for-each
    select="PARAM[@name != 'q' and
                  @name != 'ie' and
                  not(contains(@name, 'as_')) and
                  @name != 'btnG' and
                  @name != 'btnI' and
                  @name != 'site' and
                  @name != 'filter' and
                  @name != 'swrnum' and
                  @name != 'start' and
                  @name != 'access' and
                  @name != 'ip' and
                  (@name != 'epoch' or $is_test_search != '') and
                  not(starts-with(@name ,'metabased_'))]">
        <input type="hidden" name="{@name}" value="{@value}" />

      <xsl:if test="@name = 'oe'">
        <input type="hidden" name="ie" value="{@value}" />
      </xsl:if>
    <xsl:text>
    </xsl:text>
  </xsl:for-each>
  <xsl:if test="$search_collections_xslt = '' and PARAM[@name='site']">
    <input type="hidden" name="site" value="{PARAM[@name='site']/@value}"/>
  </xsl:if>
</xsl:template>

<!-- *** space_normalized_query: q = /GSP/Q *** -->
<xsl:variable name="qval">
  <xsl:value-of select="/GSP/Q"/>
</xsl:variable>

<xsl:variable name="space_normalized_query">
  <xsl:value-of select="normalize-space($qval)"
    disable-output-escaping="yes"/>
</xsl:variable>

<!-- *** stripped_search_query: q, as_q, ... for cache highlight *** -->
<xsl:variable name="stripped_search_query"><xsl:for-each
  select="/GSP/PARAM[(@name = 'q') or
                     (@name = 'as_q') or
                     (@name = 'as_oq') or
                     (@name = 'as_epq')]"><xsl:value-of select="@original_value"
  /><xsl:if test="position() != last()"
    ><xsl:text disable-output-escaping="yes">+</xsl:text
     ></xsl:if></xsl:for-each>
</xsl:variable>

<xsl:variable name="access">
  <xsl:choose>
    <xsl:when test="/GSP/PARAM[(@name='access') and ((@value='s') or (@value='a'))]">
      <xsl:value-of select="/GSP/PARAM[@name='access']/@original_value"/>
    </xsl:when>
    <xsl:otherwise>p</xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<!-- **********************************************************************
 Figure out what kind of page this is (do not customize)
     ********************************************************************** -->
<xsl:template match="GSP">
  <xsl:choose>
    <xsl:when test="Q">
      <xsl:choose>
        <xsl:when test="$swrnum != 0">
          <xsl:call-template name="swr_search"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:call-template name="search_results"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:when>
    <xsl:when test="CACHE">
      <xsl:call-template name="cached_page"/>
    </xsl:when>
    <xsl:when test="CUSTOM/HOME">
      <xsl:call-template name="front_door"/>
    </xsl:when>
    <xsl:when test="CUSTOM/ADVANCED">
      <xsl:call-template name="advanced_search"/>
    </xsl:when>
    <xsl:when test="ERROR">
      <xsl:call-template name="error_page">
        <xsl:with-param name="errorMessage" select="$server_error_msg_text"/>
        <xsl:with-param name="errorDescription" select="$server_error_des_text"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:call-template name="error_page">
        <xsl:with-param name="errorMessage" select="$xml_error_msg_text"/>
        <xsl:with-param name="errorDescription" select="$xml_error_des_text"/>
      </xsl:call-template>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- **********************************************************************
 Cached page (do not customize)
     ********************************************************************** -->
<xsl:template name="cached_page">
<xsl:variable name="cached_page_url" select="CACHE/CACHE_URL"/>
<xsl:variable name="cached_page_html" select="CACHE/CACHE_HTML"/>

<!-- *** decide whether to load html page or pdf file *** -->
<xsl:if test="'.pdf' != substring($cached_page_url,
              1 + string-length($cached_page_url) - string-length('.pdf')) and
              not(starts-with($cached_page_url, $db_url_protocol)) and
              not(starts-with($cached_page_url, $nfs_url_protocol)) and
              not(starts-with($cached_page_url, $smb_url_protocol)) and
              not(starts-with($cached_page_url, $unc_url_protocol))">
    <base href="{$cached_page_url}"/>
</xsl:if>

<!-- *** display cache page header *** -->
<xsl:call-template name="cached_page_header">
  <xsl:with-param name="cached_page_url" select="$cached_page_url"/>
</xsl:call-template>

<!-- *** display cached contents *** -->
<xsl:value-of select="$cached_page_html" disable-output-escaping="yes"/>
</xsl:template>

<xsl:template name="escape_quot">
  <xsl:param name="string"/>
  <xsl:call-template name="replace_string">
    <xsl:with-param name="find" select="'&quot;'"/>
    <xsl:with-param name="replace" select="'&amp;quot;'"/>
    <xsl:with-param name="string" select="$string"/>
  </xsl:call-template>
</xsl:template>

<!-- **********************************************************************
 Advanced search page (do not customize)
     ********************************************************************** -->
<xsl:template name="advanced_search">

<xsl:variable name="html_escaped_as_q">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='q']/@value"/>
    </xsl:call-template>
    <xsl:value-of select="' '"/>
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_q']/@value"/>
    </xsl:call-template>
</xsl:variable>

<xsl:variable name="html_escaped_as_epq">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_epq']/@value"/>
    </xsl:call-template>
</xsl:variable>

<xsl:variable name="html_escaped_as_oq">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_oq']/@value"/>
    </xsl:call-template>
</xsl:variable>

<xsl:variable name="html_escaped_as_eq">
    <xsl:call-template name="escape_quot">
      <xsl:with-param name="string" select="/GSP/PARAM[@name='as_eq']/@value"/>
    </xsl:call-template>
</xsl:variable>

<html>
<xsl:call-template name="langHeadStart"/>
<title><xsl:value-of select="$adv_page_title"/></title>
<xsl:call-template name="style"/>

<!-- script type="text/javascript" -->
<script>
<xsl:comment>
function setFocus() {
document.f.as_q.focus(); }
function esc(x){
x = escape(x).replace(/\+/g, "%2b");
if (x.substring(0,2)=="\%u") x="";
return x;
}
function collecturl(target, custom) {
var p = new Array();var i = 0;var url="";var z = document.f;
if (z.as_q.value.length) {p[i++] = 'as_q=' + esc(z.as_q.value);}
if (z.as_epq.value.length) {p[i++] = 'as_epq=' + esc(z.as_epq.value);}
if (z.as_oq.value.length) {p[i++] = 'as_oq=' + esc(z.as_oq.value);}
if (z.as_eq.value.length) {p[i++] = 'as_eq=' + esc(z.as_eq.value);}
if (z.as_sitesearch.value.length)
  {p[i++]='as_sitesearch='+esc(z.as_sitesearch.value);}
if (z.as_lq.value.length) {p[i++] = 'as_lq=' + esc(z.as_lq.value);}
if (z.as_occt.options[z.as_occt.selectedIndex].value.length)
  {p[i++]='as_occt='+esc(z.as_occt.options[z.as_occt.selectedIndex].value);}
if (z.as_dt.options[z.as_dt.selectedIndex].value.length)
  {p[i++]='as_dt='+esc(z.as_dt.options[z.as_dt.selectedIndex].value);}
if (z.lr.options[z.lr.selectedIndex].value != '') {p[i++] = 'lr=' +
  z.lr.options[z.lr.selectedIndex].value;}
if (z.num.options[z.num.selectedIndex].value != '10')
  {p[i++] = 'num=' + z.num.options[z.num.selectedIndex].value;}
if (z.sort.options[z.sort.selectedIndex].value != '')
  {p[i++] = 'sort=' + z.sort.options[z.sort.selectedIndex].value;}
if (typeof(z.client) != 'undefined')
  {p[i++] = 'client=' + esc(z.client.value);}
if (typeof(z.site) != 'undefined')
  {p[i++] = 'site=' + esc(z.site.value);}
if (typeof(z.output) != 'undefined')
  {p[i++] = 'output=' + esc(z.output.value);}
if (typeof(z.proxystylesheet) != 'undefined')
  {p[i++] = 'proxystylesheet=' + esc(z.proxystylesheet.value);}
if (typeof(z.ie) != 'undefined')
  {p[i++] = 'ie=' + esc(z.ie.value);}
if (typeof(z.oe) != 'undefined')
  {p[i++] = 'oe=' + esc(z.oe.value);}

if (typeof(z.access) != 'undefined')
  {p[i++] = 'access=' + esc(z.access.value);}
if (custom != '')
  {p[i++] = 'proxycustom=' + '&lt;ADVANCED/&gt;';}
if (p.length &gt; 0) {
url = p[0];
for (var j = 1; j &lt; p.length; j++) { url += "&amp;" + p[j]; }}
 location.href = target + '?' + url;
}
// </xsl:comment>
</script>

  <xsl:call-template name="langHeadEnd"/>

  <body onload="setFocus()" dir="ltr">
    <xsl:call-template name="analytics"/>

    <!-- *** Customer's own advanced search page header *** -->
    <xsl:if test="$choose_adv_search_page_header = 'mine' or
                    $choose_adv_search_page_header = 'both'">
      <xsl:call-template name="my_page_header"/>
    </xsl:if>

    <!--====Advanced Search Header======-->
    <xsl:if test="$choose_adv_search_page_header = 'provided' or
                    $choose_adv_search_page_header = 'both'">
      <xsl:call-template name="advanced_search_header"/>
    </xsl:if>

    <xsl:call-template name="top_sep_bar">
      <xsl:with-param name="text" select="$sep_bar_adv_text"/>
      <xsl:with-param name="show_info" select="0"/>
      <xsl:with-param name="time" select="0"/>
    </xsl:call-template>

    <!--====Carry over Search Parameters======-->
    <form method="get" action="search" name="f">
      <xsl:if test="PARAM[@name='client']">
        <input type="hidden" name="client"
          value="{PARAM[@name='client']/@value}" />
      </xsl:if>
    <!--==== site is carried over in the drop down if the menu is used =====-->
      <xsl:if test="$search_collections_xslt = '' and PARAM[@name='site']">
        <input type="hidden" name="site" value="{PARAM[@name='site']/@value}"/>
      </xsl:if>
      <xsl:if test="PARAM[@name='output']">
        <input type="hidden" name="output"
          value="{PARAM[@name='output']/@value}" />
      </xsl:if>
      <xsl:if test="PARAM[@name='proxystylesheet']">
        <input type="hidden" name="proxystylesheet"
          value="{PARAM[@name='proxystylesheet']/@value}" />
      </xsl:if>
      <xsl:if test="PARAM[@name='ie']">
        <input type="hidden" name="ie"
          value="{PARAM[@name='ie']/@value}" />
      </xsl:if>
      <xsl:if test="PARAM[@name='oe']">
        <input type="hidden" name="oe"
          value="{PARAM[@name='oe']/@value}" />
      </xsl:if>
      <xsl:if test="PARAM[@name='hl']">
        <input type="hidden" name="hl"
          value="{PARAM[@name='hl']/@value}" />
      </xsl:if>
      <xsl:if test="PARAM[@name='getfields']">
        <input type="hidden" name="getfields"
          value="{PARAM[@name='getfields']/@value}" />
      </xsl:if>
      <xsl:if test="PARAM[@name='requiredfields']">
        <input type="hidden" name="requiredfields"
          value="{PARAM[@name='requiredfields']/@value}" />
      </xsl:if>
      <xsl:if test="PARAM[@name='partialfields']">
        <input type="hidden" name="partialfields"
          value="{PARAM[@name='partialfields']/@value}" />
      </xsl:if>

      <!--====Advanced Search Options======-->

      <table cellspacing="0" cellpadding="3" border="0" width="100%">
        <tr bgcolor="{$adv_search_panel_bgcolor}">
          <td>
            <table width="100%" cellspacing="0" cellpadding="0" border="0">
              <tr bgcolor="{$adv_search_panel_bgcolor}">
                <td>
                  <table width="100%" cellspacing="0" cellpadding="2"
                  border="0">
                    <tr>
                      <td valign="top" width="15%"><font size="-1"><br />
                      <b>Find results</b></font> </td>

                      <td width="85%">
                        <table width="100%" cellpadding="2"
                        border="0" cellspacing="0">
                          <tr>
                            <td><font size="-1">with <b>all</b> of the words</font></td>

                            <td>
                            <xsl:text disable-output-escaping="yes">
                             &lt;input type=&quot;text&quot;
                             name=&quot;as_q&quot;
                             size=&quot;25&quot; value=&quot;</xsl:text>
                            <xsl:value-of disable-output-escaping="yes"
                             select="$html_escaped_as_q"/>
                            <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>

                            <script type="text/javascript">
                              <xsl:comment>
                                document.f.as_q.focus();
                              // </xsl:comment>
                            </script>
                            </td>

                            <td valign="top" rowspan="4">
                            <font size="-1">
                            <select name="num">
                              <xsl:choose>
                                <xsl:when test="PARAM[(@name='num') and (@value!='10')]">
                                  <option value="10">10 results</option>
                                </xsl:when>
                                <xsl:otherwise>
                                  <option value="10" selected="selected">10 results</option>
                                </xsl:otherwise>
                              </xsl:choose>
                              <xsl:choose>
                                <xsl:when test="PARAM[(@name='num') and (@value='20')]">
                                  <option value="20" selected="selected">20 results</option>
                                </xsl:when>
                                  <xsl:otherwise>
                                    <option value="20">20 results</option>
                                </xsl:otherwise>
                              </xsl:choose>
                              <xsl:choose>
                                <xsl:when test="PARAM[(@name='num') and (@value='30')]">
                                  <option value="30" selected="selected">30 results</option>
                                </xsl:when>
                                <xsl:otherwise>
                                  <option value="30">30 results</option>
                                </xsl:otherwise>
                              </xsl:choose>
                              <xsl:choose>
                                <xsl:when test="PARAM[(@name='num') and (@value='50')]">
                                  <option value="50" selected="selected">50 results</option>
                                </xsl:when>
                                <xsl:otherwise>
                                  <option value="50">50 results</option>
                                </xsl:otherwise>
                              </xsl:choose>
                              <xsl:choose>
                                <xsl:when test="PARAM[(@name='num') and (@value='100')]">
                                  <option value="100" selected="selected">100 results</option>
                                </xsl:when>
                                <xsl:otherwise>
                                  <option value="100">100 results</option>
                                </xsl:otherwise>
                              </xsl:choose>
                            </select>
                            </font>
                            </td>
                            <xsl:call-template name="collection_menu"/>
                            <td>
                            <font size="-1">
                            <input type="submit" name="btnG"
                              value="{$search_button_text}" />
                            </font>
                            </td>
                          </tr>

                          <tr>
                            <td nowrap="nowrap"><font size="-1">with the <b>exact phrase</b></font></td>

                            <td>
                            <xsl:text disable-output-escaping="yes">

                             &lt;input type=&quot;text&quot;
                             name=&quot;as_epq&quot;
                             size=&quot;25&quot; value=&quot;</xsl:text>
                            <xsl:value-of disable-output-escaping="yes"
                             select="$html_escaped_as_epq"/>
                            <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                            </td>
                          </tr>

                          <tr>
                            <td nowrap="nowrap"><font size="-1">with <b>at least one</b> of the words</font></td>

                            <td>
                            <xsl:text disable-output-escaping="yes">

                             &lt;input type=&quot;text&quot;
                             name=&quot;as_oq&quot;
                             size=&quot;25&quot; value=&quot;</xsl:text>
                            <xsl:value-of disable-output-escaping="yes"
                             select="$html_escaped_as_oq"/>
                            <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                            </td>
                          </tr>

                          <tr>
                            <td nowrap="nowrap"><font size="-1"><b>without</b> the words</font></td>

                            <td>
                            <xsl:text disable-output-escaping="yes">

                             &lt;input type=&quot;text&quot;
                             name=&quot;as_eq&quot;
                             size=&quot;25&quot; value=&quot;</xsl:text>
                            <xsl:value-of disable-output-escaping="yes"
                             select="$html_escaped_as_eq"/>
                            <xsl:text disable-output-escaping="yes">&quot;&gt;</xsl:text>
                            </td>
                          </tr>
                        </table>
                      </td>
                    </tr>
                  </table>
                </td>
              </tr>

              <tr bgcolor="{$global_bg_color}">
                <td>
                  <table width="100%" cellspacing="0"
                  cellpadding="2" border="0">
                    <tr>
                      <td width="15%"><font size="-1"><b>Language</b></font></td>

                      <td width="40%"><font size="-1">Return pages written in</font></td>

                      <td><font size="-1">



                         <xsl:choose>
                        <xsl:when test="PARAM[(@name='oe') and (@value!='')]">
                          <xsl:text disable-output-escaping="yes">&lt;select name=&quot;lr&quot;&gt;</xsl:text>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:text disable-output-escaping="yes">&lt;select name=&quot;lr&quot; onchange=&quot;javascript:collecturl('search', 'adv');&quot;&gt;</xsl:text>
                        </xsl:otherwise>
                      </xsl:choose>

                        <option value="">any language</option>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_ar')]">
                            <option value="lang_ar"
                              selected="selected">Arabic</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_ar">Arabic</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-CN')]">
                            <option value="lang_zh-CN"
                              selected="selected">Chinese (Simplified)</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_zh-CN">Chinese (Simplified)</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-TW')]">
                            <option value="lang_zh-TW"
                              selected="selected">Chinese (Traditional)</option>
                          </xsl:when>
                          <xsl:otherwise>
                              <option value="lang_zh-TW">Chinese (Traditional)</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_cs')]">
                            <option value="lang_cs" selected="selected">Czech</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_cs">Czech</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_da')]">
                            <option value="lang_da" selected="selected">Danish</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_da">Danish</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_nl')]">
                            <option value="lang_nl" selected="selected">Dutch</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_nl">Dutch</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_en')]">
                            <option value="lang_en" selected="selected">English</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_en">English</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_et')]">
                            <option value="lang_et" selected="selected">Estonian</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_et">Estonian</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_fi')]">
                            <option value="lang_fi" selected="selected">Finnish</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_fi">Finnish</option>
                          </xsl:otherwise>
                        </xsl:choose>

                         <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_fr')]">
                            <option value="lang_fr" selected="selected">French</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_fr">French</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_de')]">
                            <option value="lang_de" selected="selected">German</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_de">German</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_el')]">
                            <option value="lang_el" selected="selected">Greek</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_el">Greek</option>
                          </xsl:otherwise>
                        </xsl:choose>

                         <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_iw')]">
                            <option value="lang_iw" selected="selected">Hebrew</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_iw">Hebrew</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_hu')]">
                            <option value="lang_hu" selected="selected">Hungarian</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_hu">Hungarian</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_is')]">
                            <option value="lang_is" selected="selected">Icelandic</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_is">Icelandic</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_it')]">
                            <option value="lang_it" selected="selected">Italian</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_it">Italian</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_ja')]">
                            <option value="lang_ja" selected="selected">Japanese</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_ja">Japanese</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_ko')]">
                            <option value="lang_ko" selected="selected">Korean</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_ko">Korean</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_lv')]">
                            <option value="lang_lv" selected="selected">Latvian</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_lv">Latvian</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_lt')]">
                            <option value="lang_lt" selected="selected">Lithuanian</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_lt">Lithuanian</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_no')]">
                            <option value="lang_no" selected="selected">Norwegian</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_no">Norwegian</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_pl')]">
                            <option value="lang_pl" selected="selected">Polish</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_pl">Polish</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_pt')]">
                            <option value="lang_pt" selected="selected">Portuguese</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_pt">Portuguese</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_ro')]">
                            <option value="lang_ro" selected="selected">Romanian</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_ro">Romanian</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_ru')]">
                            <option value="lang_ru" selected="selected">Russian</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_ru">Russian</option>
                          </xsl:otherwise>
                        </xsl:choose>

                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_es')]">
                            <option value="lang_es" selected="selected">Spanish</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_es">Spanish</option>
                          </xsl:otherwise>
                        </xsl:choose>

                         <xsl:choose>
                          <xsl:when test="PARAM[(@name='lr') and (@value='lang_sv')]">
                            <option value="lang_sv" selected="selected">Swedish</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="lang_sv">Swedish</option>
                          </xsl:otherwise>
                        </xsl:choose>
                      <xsl:text disable-output-escaping="yes">&lt;/select&gt;</xsl:text>
                      </font></td>
                    </tr>
                  </table>
                </td>
              </tr>

              <tr bgcolor="{$global_bg_color}">
                <td>
                  <table width="100%" cellpadding="2"
                  cellspacing="0" border="0">
                    <tr>
                      <td width="15%"><font size="-1"><b>File Format</b></font></td>

                      <td width="40%" nowrap="nowrap"><font size="-1"><select name="as_ft">
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_ft') and (@value='i')]">
                            <option value="i" selected="selected">Only</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="i">Only</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_ft') and (@value='e')]">
                            <option value="e" selected="selected">Don't</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="e">Don't</option>
                          </xsl:otherwise>
                        </xsl:choose>
                      </select>return results of the file format</font>
                      </td>

                      <td><font size="-1">
                      <select name="as_filetype">
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_filetype') and (@value!='')]">
                            <option value="">any format</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="" selected="selected">any format</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_filetype') and (@value='pdf')]">
                            <option value="pdf" selected="selected">Adobe Acrobat PDF (.pdf)</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="pdf">Adobe Acrobat PDF (.pdf)</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_filetype') and (@value='ps')]">
                            <option value="ps" selected="selected">Adobe Postscript (.ps)</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="ps">Adobe Postscript (.ps)</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_filetype') and (@value='doc')]">
                            <option value="doc" selected="selected">Microsoft Word (.doc)</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="doc">Microsoft Word (.doc)</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_filetype') and (@value='xls')]">
                            <option value="xls" selected="selected">Microsoft Excel (.xls)</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="xls">Microsoft Excel (.xls)</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_filetype') and (@value='ppt')]">
                            <option value="ppt" selected="selected">Microsoft Powerpoint (.ppt)</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="ppt">Microsoft Powerpoint (.ppt)</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_filetype') and (@value='rtf')]">
                            <option value="rtf" selected="selected">Rich Text Format (.rtf)</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="rtf">Rich Text Format (.rtf)</option>
                          </xsl:otherwise>
                        </xsl:choose>
                      </select>
                      </font></td>
                    </tr>
                  </table>
                </td>
              </tr>

              <tr bgcolor="{$global_bg_color}">
                <td>
                  <table width="100%" cellspacing="0"
                  cellpadding="2" border="0">
                    <tr>
                      <td width="15%"><font size="-1"><b>Occurrences</b></font></td>

                      <td nowrap="nowrap" width="40%"><font size="-1">Return results where my terms occur</font></td>

                      <td><font size="-1"><select
                      name="as_occt">
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_occt') and (@value!='any')]">
                            <option value="any"> anywhere in the page </option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="any" selected="selected">
                              anywhere in the page
                            </option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_occt') and (@value='title')]">
                            <option value="title" selected="selected">in the title of the page</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="title">in the title of the page</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_occt') and (@value='url')]">
                            <option value="url" selected="selected">in the URL of the page</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="url">in the URL of the page</option>
                          </xsl:otherwise>
                        </xsl:choose>
                      </select></font></td>
                    </tr>
                  </table>
                </td>
              </tr>

              <tr bgcolor="{$global_bg_color}">
                <td>
                  <table width="100%" cellpadding="2"
                  cellspacing="0" border="0">
                    <tr>
                      <td width="15%"><font size="-1"><b>Domain</b></font></td>

                      <td width="40%" nowrap="nowrap"><font size="-1"><select
                      name="as_dt">
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_dt') and (@value='i')]">
                            <option value="i" selected="selected">Only</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="i">Only</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='as_dt') and (@value='e')]">
                            <option value="e" selected="selected">Don't</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="e">Don't</option>
                          </xsl:otherwise>
                        </xsl:choose>
                      </select>return results from the site or domain</font></td>

                      <td>
                        <table cellpadding="0" cellspacing="0"
                        border="0">
                          <tr>
                            <td>
                              <xsl:choose>
                                <xsl:when test="PARAM[@name='as_sitesearch']">
                                  <input type="text" size="25"
                                  value="{PARAM[@name='as_sitesearch']/@value}"
                                  name="as_sitesearch" />
                                </xsl:when>
                                <xsl:otherwise>
                                  <input type="text" size="25" value="" name="as_sitesearch" />
                                </xsl:otherwise>
                              </xsl:choose>
                            </td>
                          </tr>

                          <tr>
                            <td valign="top" nowrap="nowrap"><font size="-1">
                              <i>e.g. google.com, .org</i></font></td>
                          </tr>
                        </table>
                      </td>
                    </tr>

                    <!-- Sort by Date feature -->
                    <tr>
                      <td width="15%"><font size="-1"><b>Sort</b></font></td>

                      <td colspan="2" nowrap="nowrap"><font size="-1"><select
                      name="sort">
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='sort') and (@value='')]">
                            <option value="" selected="selected">Sort by relevance</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="">Sort by relevance</option>
                          </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="PARAM[(@name='sort') and (@value='date:D:S:d1')]">
                            <option value="date:D:S:d1" selected="selected">Sort by date</option>
                          </xsl:when>
                          <xsl:otherwise>
                            <option value="date:D:S:d1">Sort by date</option>
                          </xsl:otherwise>
                        </xsl:choose>
                      </select></font></td>
                    </tr>
                    <!-- Secure Search feature -->
                    <xsl:if test="$show_secure_radio != '0'">

                    <tr>
                      <td width="15%"><font size="-1"><b>Security</b></font></td>


                      <td colspan="2" nowrap="nowrap"><font size="-1">
                        <xsl:choose>
                          <xsl:when test="$access='p'">
                            <label><input type="radio" name="access" value="p" checked="checked" />Search public content only</label>
                          </xsl:when>
                        <xsl:otherwise>
                          <label><input type="radio" name="access" value="p"/>Search public content only</label>
                        </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                          <xsl:when test="$access='a'">
                            <label><input type="radio" name="access" value="a" checked="checked" />Search public and secure content (login required)</label>
                          </xsl:when>
                        <xsl:otherwise>
                          <label><input type="radio" name="access" value="a"/>Search public and secure content (login required)</label>
                        </xsl:otherwise>
                        </xsl:choose>
                      </font></td>
                    </tr>
                    </xsl:if>
                  </table>
                </td>
              </tr>

            </table>
          </td>
        </tr>
      </table>
      <br />
      <br />

      <!--====Page-Specific Search======-->
      <table cellpadding="6" cellspacing="0" border="0">
        <tr>
          <td><b>Page-Specific Search</b></td>
        </tr>
      </table>

      <table cellspacing="0" cellpadding="3" border="0" width="100%">
        <tr bgcolor="{$adv_search_panel_bgcolor}">
          <td>
            <table width="100%" cellpadding="0" cellspacing="0"
            border="0">
              <tr bgcolor="{$adv_search_panel_bgcolor}">
                <td>

                  <table width="100%" cellpadding="2"
                  cellspacing="0" border="0">
                  <form method="get" action="search" name="h">

                    <tr bgcolor="{$global_bg_color}">
                      <td width="15%"><font size="-1"><b>Links</b></font></td>

                      <td width="40%" nowrap="nowrap"><font size="-1">Find pages that link to the page</font> </td>

                      <td nowrap="nowrap">
                          <xsl:choose>
                            <xsl:when test="PARAM[@name='as_lq']">
                              <input type="text" size="30"
                               value="{PARAM[@name='as_lq']/@value}"
                                       name="as_lq" />
                          </xsl:when>
                          <xsl:otherwise>
                            <input type="text" size="30" value="" name="as_lq" />
                          </xsl:otherwise>
                        </xsl:choose>
                        <font size="-1">
                        <input type="submit" name="btnG" value="{$search_button_text}" /></font>
                      </td>
                    </tr>
                  </form>
                  </table>
                </td>
              </tr>
            </table>
          </td>
        </tr>
      </table>

      <xsl:call-template name="copyright"/>

    </form>

    <!-- *** Customer's own advanced search page footer *** -->
    <xsl:call-template name="my_page_footer"/>

  </body>
</html>
</xsl:template>

<!-- **********************************************************************
 Resend query with filter=p to disable path_filtering
 if there is only one result cluster (do not customize)
     ********************************************************************** -->
<xsl:template name="redirect_if_few_results">
  <xsl:variable name="count" select="count(/GSP/RES/R)"/>
  <xsl:variable name="start" select="/GSP/RES/@SN"/>
  <xsl:variable name="filterall"
    select="count(/GSP/PARAM[@name='filter']) = 0"/>
  <xsl:variable name="filter" select="/GSP/PARAM[@name='filter']/@value"/>

</xsl:template>

<!-- **********************************************************************
 Search results (do not customize)
     ********************************************************************** -->
<xsl:template name="search_results">
<html>

  <!-- *** HTML header and style *** -->
  <xsl:call-template name="langHeadStart"/>
    <xsl:call-template name="redirect_if_few_results"/>
    <title><xsl:value-of select="$result_page_title"/>:
      <xsl:value-of select="$space_normalized_query"/>
    </title>
    <xsl:call-template name="style"/>
    <script type="text/javascript">
      <xsl:comment>
        function resetForms() {
          for (var i = 0; i &lt; document.forms.length; i++ ) {
              document.forms[i].reset();
          }
        }
      //</xsl:comment>
    </script>
  <xsl:call-template name="langHeadEnd"/>

  <xsl:choose>
    <xsl:when test="$show_res_clusters = '1'">
      <script language='javascript' src='common.js'></script>
      <script language='javascript' src='xmlhttp.js'></script>
      <script language='javascript' src='uri.js'></script>
      <script language='javascript' src='cluster.js'></script>

      <body onLoad="resetForms(); cs_loadClusters('{$search_url}', cs_drawClusters);" dir="ltr">
        <xsl:call-template name="search_results_body"/>
      </body>
    </xsl:when>
    <xsl:otherwise>
      <body onLoad="resetForms()" dir="ltr">
        <xsl:call-template name="search_results_body"/>
      </body>
    </xsl:otherwise>
  </xsl:choose>

</html>
</xsl:template>

<xsl:template name="search_results_body">
  <xsl:call-template name="analytics"/>

  <!-- *** Customer's own result page header *** -->
  <xsl:if test="$choose_result_page_header = 'mine' or
                $choose_result_page_header = 'both'">
    <xsl:call-template name="my_page_header"/>
  </xsl:if>

  <!-- *** Result page header *** -->
  <xsl:if test="$choose_result_page_header = 'provided' or
                $choose_result_page_header = 'both'">
    <xsl:call-template name="result_page_header" />
  </xsl:if>

  <!-- *** Top separation bar *** -->
    <xsl:if test="Q != ''">
      <xsl:call-template name="top_sep_bar">
        <xsl:with-param name="text" select="$sep_bar_std_text"/>
          <xsl:with-param name="show_info" select="$show_search_info"/>
        <xsl:with-param name="time" select="TM"/>
      </xsl:call-template>
    </xsl:if>

    <!-- *** Handle results (if any) *** -->
    <xsl:choose>
      <xsl:when test="RES or GM or Spelling or Synonyms or CT or /GSP/ENTOBRESULTS">
        <xsl:call-template name="results">
          <xsl:with-param name="query" select="Q"/>
          <xsl:with-param name="time" select="TM"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:when test="Q=''">
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="no_RES">
          <xsl:with-param name="query" select="Q"/>
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>

    <!-- *** Google footer *** -->
    <xsl:call-template name="copyright"/>

    <!-- *** Customer's own result page footer *** -->
    <xsl:call-template name="my_page_footer"/>

    <!-- *** HTML footer *** -->
</xsl:template>


<!-- **********************************************************************
  Collection menu beside the search box
     ********************************************************************** -->
<xsl:template name="collection_menu">
  <xsl:if test="$search_collections_xslt != ''">
    <td valign="middle">
        
<select name="site">
 <xsl:choose>
  <xsl:when test="PARAM[(@name='site') and (@value='default_collection')]">
   <option value="default_collection" selected="selected">default_collection</option>
  </xsl:when>
  <xsl:otherwise>
   <option value="default_collection">default_collection</option>
  </xsl:otherwise>
 </xsl:choose>
</select>

    </td>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
  Search box input form (Types: std_top, std_bottom, home, swr)
     ********************************************************************** -->
<xsl:template name="search_box">
  <xsl:param name="type"/>

  <form name="gs" method="GET" action="search">
        <table border="0" cellpadding="0" cellspacing="0">
          <xsl:if test="($egds_show_search_tabs != '0') and (($type = 'home') or ($type = 'std_top'))">
          <tr><td>
                <table cellpadding="4" cellspacing="0">
                  <tr><td>
                        <xsl:call-template name="desktop_tab"/>
                  </td></tr>
                </table>
          </td></tr>
          </xsl:if>
          <xsl:if test="($type = 'swr')">
          <tr><td>
                <table cellpadding="4" cellspacing="0">
                  <tr><td>
                    There were about <b><xsl:value-of select="RES/M"/></b> results for <b><xsl:value-of select="$space_normalized_query"/></b>.
                      <br/>
                    Use the search box below to search within these results.
                  </td></tr>
                </table>
          </td></tr>
          </xsl:if>
          <tr><td>
          <table cellpadding="0" cellspacing="0">
        <tr>
          <td valign="middle">
          <font size="-1">
            <xsl:choose>
              <xsl:when test="($type = 'swr')">
                <input type="text" name="as_q" size="{$search_box_size}" maxlength="256" value=""/>
                <input type="hidden" name="q" value="{$qval}"/>
              </xsl:when>
              <xsl:otherwise>
                <input type="text" name="q" size="{$search_box_size}" maxlength="256" value="{$space_normalized_query}"/>
                          </xsl:otherwise>
                        </xsl:choose>
          </font>
          </td>
          <xsl:call-template name="collection_menu"/>
          <td valign="middle">
          <font size="-1">
            <xsl:call-template name="nbsp"/>
              <xsl:choose>
              <xsl:when test="$choose_search_button = 'image'">
                        <input type="image" name="btnG" src="{$search_button_image_url}"
                       valign="bottom" width="60" height="26"
                       border="0" value="{$search_button_text}"/>
              </xsl:when>
              <xsl:otherwise>
                <input type="submit" name="btnG" value="{$search_button_text}"/>
              </xsl:otherwise>
              </xsl:choose>
          </font>
          </td>
                  <td nowrap="1">
                        <font size="-2">
                        <xsl:if test="(/GSP/RES/M > 0) and ($show_swr_link != '0') and ($type = 'std_bottom')">
                                <xsl:call-template name="nbsp"/>
                                <xsl:call-template name="nbsp"/>
                                <a href="{$swr_search_url}">
                                        <xsl:value-of select="$swr_search_anchor_text"/>
                                </a>
                                <br/>
                        </xsl:if>
                        <xsl:if test="$show_result_page_adv_link != '0'">
                                <xsl:call-template name="nbsp"/>
                                <xsl:call-template name="nbsp"/>
                                <a href="{$adv_search_url}">
                                        <xsl:value-of select="$adv_search_anchor_text"/>
                                </a>
                                <br/>
                        </xsl:if>
                        <xsl:if test="$show_alerts_link != '0'">
                                <xsl:call-template name="nbsp"/>
                                <xsl:call-template name="nbsp"/>
                                <a href="{$alerts_url}">
                                        <xsl:value-of select="$alerts_anchor_text"/>
                                </a>
                                <br/>
                        </xsl:if>
                        <xsl:if test="$show_result_page_help_link != '0'">
                                <xsl:call-template name="nbsp"/>
                                <xsl:call-template name="nbsp"/>
                                <a href="{$help_url}">
                                        <xsl:value-of select="$search_help_anchor_text"/>
                                </a>
                        </xsl:if>
                        <br/>
                        </font>
                  </td>
        </tr>
        <xsl:if test="$show_secure_radio != '0'">
        <tr>
          <td colspan="2">
          <font size="-1">Search:
            <xsl:choose>
              <xsl:when test="$access='p'">
                <label><input type="radio" name="access" value="p" checked="checked" />public content</label>
              </xsl:when>
              <xsl:otherwise>
                <label><input type="radio" name="access" value="p"/>public content</label>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="$access='a'">
                <label><input type="radio" name="access" value="a" checked="checked" />public and secure content</label>
              </xsl:when>
              <xsl:otherwise>
                <label><input type="radio" name="access" value="a"/>public and secure content</label>
              </xsl:otherwise>
            </xsl:choose>
          </font>
          </td>
        </tr>
        </xsl:if>
      </table>
  </td></tr>
</table>
    <xsl:text>
    </xsl:text>
    <xsl:call-template name="form_params"/>
  </form>
</xsl:template>


<!-- **********************************************************************
  Bottom search box (do not customized)
     ********************************************************************** -->
<xsl:template name="bottom_search_box">
    <br clear="all"/>
    <br/>
    <table width="100%" border="0" cellpadding="0" cellspacing="0">
      <tr>
        <td bgcolor="{$sep_bar_border_color}"><img width="1" height="1" alt=""/></td>
      </tr>
    </table>
    <table width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="{$sep_bar_bg_color}">
      <tr>
        <td nowrap="1" bgcolor="{$sep_bar_bg_color}" align="center">
        <br/>
          <xsl:call-template name="search_box">
            <xsl:with-param name="type" select="'std_bottom'"/>
          </xsl:call-template>
        <br/>
        </td>
      </tr>
    </table>
    <table width="100%" border="0" cellpadding="0" cellspacing="0">
      <tr>
        <td bgcolor="{$sep_bar_border_color}"><img width="1" height="1" alt=""/></td>
      </tr>
    </table>
</xsl:template>


<!-- **********************************************************************
 Sort-by criteria: sort by date/relevance
     ********************************************************************** -->
<xsl:template name="sort_by">
  <xsl:variable name="sort_by_url"><xsl:for-each
    select="/GSP/PARAM[(@name != 'sort') and
                       (@name != 'start') and
                       (@name != 'epoch' or $is_test_search != '') and
                       not(starts-with(@name, 'metabased_'))]">
      <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
      <xsl:value-of select="@original_value"/>
      <xsl:if test="position() != last()">
        <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
      </xsl:if>
    </xsl:for-each>
  </xsl:variable>

  <xsl:variable name="sort_by_relevance_url">
    <xsl:value-of select="$sort_by_url"
      />&amp;sort=date%3AD%3AL%3Ad1</xsl:variable>

  <xsl:variable name="sort_by_date_url">
    <xsl:value-of select="$sort_by_url"
      />&amp;sort=date%3AD%3AS%3Ad1</xsl:variable>

  <table><tr valign='top'><td>
  <span class="s">
  <xsl:choose>
    <xsl:when test="/GSP/PARAM[@name = 'sort' and starts-with(@value,'date:D:S')]">
      <font color="{$global_text_color}">
      <xsl:text>Sort by date / </xsl:text>
      </font>
      <a href="search?{$sort_by_relevance_url}">Sort by relevance</a>
    </xsl:when>
    <xsl:when test="/GSP/PARAM[@name = 'sort' and starts-with(@value,'date:A:S')]">
      <font color="{$global_text_color}">
      <xsl:text>Sort by date / </xsl:text>
      </font>
      <a href="search?{$sort_by_relevance_url}">Sort by relevance</a>
    </xsl:when>
    <xsl:otherwise>
      <a href="search?{$sort_by_date_url}">Sort by date</a>
      <font color="{$global_text_color}">
      <xsl:text> / Sort by relevance</xsl:text>
      </font>
    </xsl:otherwise>
  </xsl:choose>
  </span>
  </td></tr></table>
</xsl:template>

<!-- **********************************************************************
 Output all results
     ********************************************************************** -->
<xsl:template name="results">
  <xsl:param name="query"/>
  <xsl:param name="time"/>

  <!-- *** Add top navigation/sort-by bar *** -->
  <xsl:if test="($show_top_navigation != '0') or ($show_sort_by != '0')">
    <xsl:if test="RES"> <!-- there might be onebox results but no RES  -->
      <table width="100%">
      <tr>
      <xsl:if test="$show_top_navigation != '0'">
      <td align="left">
        <xsl:call-template name="google_navigation">
        <xsl:with-param name="prev" select="RES/NB/PU"/>
        <xsl:with-param name="next" select="RES/NB/NU"/>
        <xsl:with-param name="view_begin" select="RES/@SN"/>
        <xsl:with-param name="view_end" select="RES/@EN"/>
        <xsl:with-param name="guess" select="RES/M"/>
        <xsl:with-param name="navigation_style" select="'top'"/>
        </xsl:call-template>
      </td>
      </xsl:if>
      <xsl:if test="$show_sort_by != '0'">
      <td align="right">
      <xsl:call-template name="sort_by"/>
      </td>
      </xsl:if>
      </tr>
    </table>
    </xsl:if>
  </xsl:if>

  <!-- *** Handle OneBox results, if any ***-->
  <xsl:if test="$show_onebox != '0'">
    <xsl:if test="/GSP/ENTOBRESULTS">
      <xsl:call-template name="onebox"/>
    </xsl:if>
  </xsl:if>

  <!-- *** Handle spelling suggestions, if any *** -->
    <xsl:if test="$show_spelling != '0'">
      <xsl:call-template name="spelling"/>
    </xsl:if>

  <!-- *** Handle synonyms, if any *** -->
    <xsl:if test="$show_synonyms != '0'">
      <xsl:call-template name="synonyms"/>
    </xsl:if>

  <!-- *** Output Google Desktop results (if enabled and any available) *** -->
        <xsl:if test="$egds_show_desktop_results != '0'">
            <xsl:call-template name="desktop_results"/>
        </xsl:if>

  <!-- *** Output results details *** -->

    <xsl:if test="$show_res_clusters = '1'">
      <div id='clustering'>
        <h3>Narrow your search</h3>

        <span id='cluster_status'>
          <span id='cluster_message' style="display:none">Loading...</span>
          <noscript>
            Javascript must be enabled for narrowing.
          </noscript>
        </span>

        <xsl:choose>
          <xsl:when test="$res_cluster_position = 'top'">
            <table>
              <tr>
                <td id='cluster_label0'></td>
                <td id='cluster_label2'></td>
                <td id='cluster_label4'></td>
                <td id='cluster_label6'></td>
                <td id='cluster_label8'></td>
              </tr>
              <tr>
                <td id='cluster_label1'></td>
                <td id='cluster_label3'></td>
                <td id='cluster_label5'></td>
                <td id='cluster_label7'></td>
                <td id='cluster_label9'></td>
              </tr>
            </table>
          </xsl:when>
          <xsl:when test="$res_cluster_position = 'right'">
            <ul>
              <li id='cluster_label0'></li>
              <li id='cluster_label1'></li>
              <li id='cluster_label2'></li>
              <li id='cluster_label3'></li>
              <li id='cluster_label4'></li>
              <li id='cluster_label5'></li>
              <li id='cluster_label6'></li>
              <li id='cluster_label7'></li>
              <li id='cluster_label8'></li>
              <li id='cluster_label9'></li>
            </ul>
          </xsl:when>
        </xsl:choose>
      </div>
    </xsl:if>

    <div>
    <!-- for keymatch results -->
    <xsl:if test="$show_keymatch != '0'">
      <xsl:apply-templates select="/GSP/GM"/>
    </xsl:if>

    <!-- for real results -->
    <xsl:apply-templates select="RES/R">
      <xsl:with-param name="query" select="$query"/>
    </xsl:apply-templates>

  <!-- *** Filter note (if needed) *** -->
    <xsl:if test="(RES/FI) and (not(RES/NB/NU))">
      <p>
        <i>
        In order to show you the most relevant results,    we have omitted some entries very similar to the <xsl:value-of select="RES/@EN"/> already    displayed.<br/>If you like, you can <a href="{$filter_url}0">    repeat the search with the omitted results included</a>.
        </i>
      </p>
    </xsl:if>
    </div>

  <!-- *** Add bottom navigation *** -->
    <xsl:variable name="nav_style">
      <xsl:choose>
        <xsl:when test="($access='s') or ($access='a')">simple</xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="$choose_bottom_navigation"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>

    <xsl:call-template name="google_navigation">
      <xsl:with-param name="prev" select="RES/NB/PU"/>
      <xsl:with-param name="next" select="RES/NB/NU"/>
      <xsl:with-param name="view_begin" select="RES/@SN"/>
      <xsl:with-param name="view_end" select="RES/@EN"/>
      <xsl:with-param name="guess" select="RES/M"/>
      <xsl:with-param name="navigation_style" select="$nav_style"/>
    </xsl:call-template>

  <!-- *** Bottom search box *** -->
    <xsl:if test="$show_bottom_search_box != '0'">
      <xsl:call-template name="bottom_search_box"/>
    </xsl:if>

</xsl:template>


<!-- **********************************************************************
 Stopwords suggestions in result page (do not customize)
     ********************************************************************** -->
<xsl:template name="stopwords">
  <xsl:variable name="stopwords_suggestions1">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="'/help/basics.html#stopwords'"/>
      <xsl:with-param name="replace" select="'user_help.html#stop'"/>
      <xsl:with-param name="string" select="/GSP/CT"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="stopwords_suggestions">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="'/help/basics.html'"/>
      <xsl:with-param name="replace" select="'user_help.html'"/>
      <xsl:with-param name="string" select="$stopwords_suggestions1"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:if test="/GSP/CT">
    <font size="-1" color="gray">
      <xsl:value-of disable-output-escaping="yes"
        select="$stopwords_suggestions"/>
    </font>
  </xsl:if>
</xsl:template>


<!-- **********************************************************************
 Spelling suggestions in result page (do not customize)
     ********************************************************************** -->
<xsl:template name="spelling">
  <xsl:if test="/GSP/Spelling/Suggestion">
    <p><span class="p"><font color="{$spelling_text_color}">
         <xsl:value-of select="$spelling_text"/>
         <xsl:call-template name="nbsp"/>
       </font></span>
       <a href="search?q={/GSP/Spelling/Suggestion[1]/@qe}&amp;spell=1&amp;{$base_url}">
       <xsl:value-of disable-output-escaping="yes"
         select="/GSP/Spelling/Suggestion[1]"/>
      </a>
    </p>
  </xsl:if>
</xsl:template>


<!-- **********************************************************************
 Synonym suggestions in result page (do not customize)
     ********************************************************************** -->
<xsl:template name="synonyms">
  <xsl:if test="/GSP/Synonyms/OneSynonym">
    <p><span class="p"><font color="{$synonyms_text_color}">
         <xsl:value-of select="$synonyms_text"/>
         <xsl:call-template name="nbsp"/>
       </font></span>
    <xsl:for-each select="/GSP/Synonyms/OneSynonym">
      <a href="search?q={@q}&amp;{$synonym_url}">
        <xsl:value-of disable-output-escaping="yes" select="."/>
      </a><xsl:text> </xsl:text>
    </xsl:for-each>
    </p>
  </xsl:if>
</xsl:template>


<!-- **********************************************************************
 Truncation functions (do not customize)
     ********************************************************************** -->
<xsl:template name="truncate_url">
  <xsl:param name="t_url"/>

  <xsl:choose>
    <xsl:when test="string-length($t_url) &lt; $truncate_result_url_length">
      <xsl:value-of select="$t_url"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:variable name="first" select="substring-before($t_url, '/')"/>
      <xsl:variable name="last">
              <xsl:call-template name="truncate_find_last_token">
                <xsl:with-param name="t_url" select="$t_url"/>
              </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="path_limit" select="$truncate_result_url_length - (string-length($first) + string-length($last) + 1)"/>

      <xsl:choose>
              <xsl:when test="$path_limit &lt;= 0">
                <xsl:value-of select="concat(substring($t_url, 1, $truncate_result_url_length), '...')"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:variable name="chopped_path">
                  <xsl:call-template name="truncate_chop_path">
                    <xsl:with-param name="path" select="substring($t_url, string-length($first) + 2, string-length($t_url) - (string-length($first) + string-length($last) + 1))"/>
                    <xsl:with-param name="path_limit" select="$path_limit"/>
                  </xsl:call-template>
                </xsl:variable>
                <xsl:value-of select="concat($first, '/.../', $chopped_path, $last)"/>
              </xsl:otherwise>
      </xsl:choose>
    </xsl:otherwise>
  </xsl:choose>

</xsl:template>

<xsl:template name="truncate_find_last_token">
  <xsl:param name="t_url"/>

  <xsl:choose>
    <xsl:when test="contains($t_url, '/')">
      <xsl:call-template name="truncate_find_last_token">
            <xsl:with-param name="t_url" select="substring-after($t_url, '/')"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
            <xsl:value-of select="$t_url"/>
    </xsl:otherwise>
  </xsl:choose>

</xsl:template>

<xsl:template name="truncate_chop_path">
  <xsl:param name="path"/>
  <xsl:param name="path_limit"/>

  <xsl:choose>
    <xsl:when test="string-length($path) &lt;= $path_limit">
      <xsl:value-of select="$path"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:call-template name="truncate_chop_path">
        <xsl:with-param name="path" select="substring-after($path, '/')"/>
        <xsl:with-param name="path_limit" select="$path_limit"/>
      </xsl:call-template>
    </xsl:otherwise>
  </xsl:choose>

</xsl:template>


<!-- **********************************************************************
  A single result (do not customize)
     ********************************************************************** -->
<xsl:template match="R">
  <xsl:param name="query"/>

  <xsl:variable name="protocol"     select="substring-before(U, '://')"/>
  <xsl:variable name="temp_url"     select="substring-after(U, '://')"/>
  <xsl:variable name="display_url1" select="substring-after(UD, '://')"/>
  <xsl:variable name="escaped_url"  select="substring-after(UE, '://')"/>

  <xsl:variable name="display_url2">
    <xsl:choose>
      <xsl:when test="$display_url1">
        <xsl:value-of select="$display_url1"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$temp_url"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <xsl:variable name="display_url">
    <xsl:choose>
      <xsl:when test="$protocol='unc'">
        <xsl:call-template name="convert_unc">
          <xsl:with-param name="string" select="$display_url2"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$display_url2"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <xsl:variable name="stripped_url">
    <xsl:choose>
      <xsl:when test="$truncate_result_urls != '0'">
                <xsl:call-template name="truncate_url">
                  <xsl:with-param name="t_url" select="$display_url"/>
                </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
            <xsl:value-of select="$display_url"/>
          </xsl:otherwise>
        </xsl:choose>
  </xsl:variable>

  <xsl:variable name="crowded_url" select="HN/@U"/>
  <xsl:variable name="crowded_display_url1" select="HN"/>
  <xsl:variable name="crowded_display_url">
    <xsl:choose>
      <xsl:when test="$protocol='unc'">
        <xsl:call-template name="convert_unc">
          <xsl:with-param name="string" select="substring-after($crowded_display_url1,'://')"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$crowded_display_url1"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <xsl:variable name="lower" select="'abcdefghijklmnopqrstuvwxyz'"/>
  <xsl:variable name="upper" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>

  <xsl:variable name="url_indexed" select="not(starts-with($temp_url, 'noindex!/'))"/>

  <!-- *** Indent as required (only supports 2 levels) *** -->
  <xsl:if test="@L='2'">
    <xsl:text disable-output-escaping="yes">&lt;blockquote class=&quot;g&quot;&gt;</xsl:text>
  </xsl:if>

<!--Include image from meta tag in results list-->

<xsl:for-each select="MT">
    <xsl:if test="@N='product-image' and @V!=''">
        <a href="{$protocol}://{$escaped_url}"><img align="left" height="60" width="80" src="{@V}"/></a>
    </xsl:if>
</xsl:for-each>

  <!-- *** Result Header *** -->
  <p class="g" target="_parent">

  <!-- *** Result Title (including PDF tag and hyperlink) *** -->
  <xsl:if test="$show_res_title != '0'">
    <font size="-2"><b>
    <xsl:choose>
      <xsl:when test="@MIME='text/html' or @MIME='' or not(@MIME)"></xsl:when>
      <xsl:when test="@MIME='text/plain'">[TEXT]</xsl:when>
      <xsl:when test="@MIME='application/rtf'">[RTF]</xsl:when>
      <xsl:when test="@MIME='application/pdf'">[PDF]</xsl:when>
      <xsl:when test="@MIME='application/postscript'">[PS]</xsl:when>
      <xsl:when test="@MIME='application/vnd.ms-powerpoint'">[MS POWERPOINT]</xsl:when>
      <xsl:when test="@MIME='application/vnd.ms-excel'">[MS EXCEL]</xsl:when>
      <xsl:when test="@MIME='application/msword'">[MS WORD]</xsl:when>
      <xsl:otherwise>
        <xsl:variable name="extension">
          <xsl:call-template name="last_substring_after">
            <xsl:with-param name="string" select="substring-after(
                                                  $temp_url,
                                                  '/')"/>
            <xsl:with-param name="separator" select="'.'"/>
            <xsl:with-param name="fallback" select="'UNKNOWN'"/>
          </xsl:call-template>
        </xsl:variable>
        [<xsl:value-of select="translate($extension,$lower,$upper)"/>]
      </xsl:otherwise>
    </xsl:choose>
    </b></font>
    <xsl:text> </xsl:text>

    <xsl:variable name="link"
     select="$url_indexed and not(starts-with(U, $googleconnector_protocol))"/>

    <xsl:if test="$link">

      <xsl:text disable-output-escaping='yes'>&lt;a target="_parent" href="</xsl:text>

      <xsl:choose>
        <xsl:when test="starts-with(U, $db_url_protocol)">
          <xsl:value-of disable-output-escaping='yes'
                        select="concat('db/', $temp_url)"/>
        </xsl:when>
	<!-- *** URI for smb or NFS must be escaped because it appears in the URI query *** -->
        <xsl:when test="$protocol='nfs' or $protocol='smb'">
	  <xsl:value-of disable-output-escaping='yes'
	                select="concat($protocol,'/',$temp_url)"/>
        </xsl:when>
        <xsl:when test="$protocol='unc'">
          <xsl:value-of disable-output-escaping='yes' select="concat('file://', $display_url2)"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of disable-output-escaping='yes' select="U"/>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:text disable-output-escaping='yes'>"&gt;</xsl:text>
    </xsl:if>
    <span class="l">
    <xsl:choose>
      <xsl:when test="T">
        <xsl:call-template name="reformat_keyword">
          <xsl:with-param name="orig_string" select="T"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise><xsl:value-of select="$stripped_url"/></xsl:otherwise>
    </xsl:choose>
    </span>
    <xsl:if test="$link">
        <xsl:text disable-output-escaping='yes'>&lt;/a&gt;</xsl:text>
    </xsl:if>
  </xsl:if>


  <!-- *** Snippet Box *** -->
  <table cellpadding="0" cellspacing="0" border="0">
    <tr>
      <td class="s">
      
      <!--Use description meta tag, if non-empty, in place of snippet-->

      <xsl:choose>
        <xsl:when test="MT/@N='description' and MT/@V!=''">
          <xsl:value-of select="MT[@N = 'description']/@V"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:call-template name="reformat_keyword">
            <xsl:with-param name="orig_string" select="S"/>
          </xsl:call-template>
        </xsl:otherwise>
      </xsl:choose>

                  <!-- *** Meta tags *** -->
                  <xsl:if test="$show_meta_tags != '0'">
                    <xsl:apply-templates select="MT"/>
                  </xsl:if>

                  <!-- *** URL *** -->
            <br/>
            <font color="{$res_url_color}" size="{$res_url_size}">
              <xsl:choose>
          <xsl:when test="not($url_indexed)">
            <xsl:if test="($show_res_size!='0') or
                        ($show_res_date!='0') or
                        ($show_res_cache!='0')">
              <xsl:text>Not Indexed:</xsl:text>
              <xsl:value-of select="$stripped_url"/>
            </xsl:if>
                    </xsl:when>
          <xsl:otherwise>
            <xsl:if test="$show_res_url != '0'">
              <xsl:value-of select="$stripped_url"/>
            </xsl:if>
          </xsl:otherwise>
        </xsl:choose>
        </font>

                  <!-- *** Miscellaneous (- size - date - cache) *** -->
        <xsl:if test="$url_indexed">
          <xsl:apply-templates select="HAS/C">
                        <xsl:with-param name="stripped_url" select="$stripped_url"/>
                        <xsl:with-param name="escaped_url" select="$escaped_url"/>
                        <xsl:with-param name="query" select="$query"/>
                        <xsl:with-param name="mime" select="@MIME"/>
                        <xsl:with-param name="date" select="FS[@NAME='date']/@VALUE"/>
          </xsl:apply-templates>
        </xsl:if>


                  <!-- *** Link to more links from this site *** -->
        <xsl:if test="HN">
          <br/>
          [
          <a class="f" href="search?as_sitesearch={$crowded_url}&amp;{
            $search_url}">More results from <xsl:value-of select="$crowded_display_url"/></a>
          ]



  <!-- *** Link to aggregated results from database source *** -->
       <xsl:if test="starts-with($crowded_url, $db_url_protocol)">
        [
        <a class="f" href="dbaggr?sitesearch={$crowded_url}&amp;{
          $search_url}">View all data</a>
            ]
          </xsl:if>
        </xsl:if>


  <!-- *** Result Footer *** -->
      </td>
    </tr>
  </table>
  </p>

  <!-- *** End indenting as required (only supports 2 levels) *** -->
  <xsl:if test="@L='2'">
    <xsl:text disable-output-escaping="yes">&lt;/blockquote&gt;</xsl:text>
  </xsl:if>

</xsl:template>

<!-- **********************************************************************
  Meta tag values within a result (do not customize)
     ********************************************************************** -->
<xsl:template match="MT">
  <br/>
  <span class="f"><xsl:value-of select="@N"/>: </span><xsl:value-of select="@V"/>
</xsl:template>

<!-- **********************************************************************
  A single keymatch result (do not customize)
     ********************************************************************** -->
<xsl:template match="GM">
  <p>
    <table cellpadding="4" cellspacing="0" border="0" height="40" width="100%">
      <tr>
        <td nowrap="0" bgcolor="{$keymatch_bg_color}" height="40">
          <a href="{GL}">
            <xsl:value-of select="GD"/>
          </a>
          <br/>
          <font size="-1" color="{$res_url_color}">
            <span class="a">
               <xsl:value-of select="GL"/>
            </span>
          </font>
        </td>
        <td bgcolor="{$keymatch_bg_color}" height="40"
          align="right" valign="top">
          <b>
          <font size="-1" color="{$keymatch_text_color}">
            <xsl:value-of select="$keymatch_text"/>
          </font>
          </b>
        </td>
      </tr>
    </table>
  </p>
</xsl:template>


<!-- **********************************************************************
  Variables for reformatting keyword-match display (do not customize)
     ********************************************************************** -->
<xsl:variable name="keyword_orig_start" select="'&lt;b&gt;'"/>
<xsl:variable name="keyword_orig_end" select="'&lt;/b&gt;'"/>

<xsl:variable name="keyword_reformat_start">
  <xsl:if test="$res_keyword_format">
    <xsl:text>&lt;</xsl:text>
    <xsl:value-of select="$res_keyword_format"/>
    <xsl:text>&gt;</xsl:text>
  </xsl:if>
  <xsl:if test="($res_keyword_size) or ($res_keyword_color)">
  <xsl:text>&lt;font</xsl:text>
  <xsl:if test="$res_keyword_size">
    <xsl:text> size="</xsl:text>
    <xsl:value-of select="$res_keyword_size"/>
    <xsl:text>"</xsl:text>
  </xsl:if>
  <xsl:if test="$res_keyword_color">
    <xsl:text> color="</xsl:text>
    <xsl:value-of select="$res_keyword_color"/>
    <xsl:text>"</xsl:text>
  </xsl:if>
  <xsl:text>&gt;</xsl:text>
  </xsl:if>
</xsl:variable>

<xsl:variable name="keyword_reformat_end">
  <xsl:if test="($res_keyword_size) or ($res_keyword_color)">
    <xsl:text>&lt;/font&gt;</xsl:text>
  </xsl:if>
  <xsl:if test="$res_keyword_format">
    <xsl:text>&lt;/</xsl:text>
    <xsl:value-of select="$res_keyword_format"/>
    <xsl:text>&gt;</xsl:text>
  </xsl:if>
</xsl:variable>

<!-- **********************************************************************
  Reformat the keyword match display in a title/snippet string
     (do not customize)
     ********************************************************************** -->
<xsl:template name="reformat_keyword">
  <xsl:param name="orig_string"/>

  <xsl:variable name="reformatted_1">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="$keyword_orig_start"/>
      <xsl:with-param name="replace" select="$keyword_reformat_start"/>
      <xsl:with-param name="string" select="$orig_string"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="reformatted_2">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find" select="$keyword_orig_end"/>
      <xsl:with-param name="replace" select="$keyword_reformat_end"/>
      <xsl:with-param name="string" select="$reformatted_1"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:value-of disable-output-escaping='yes' select="$reformatted_2"/>

</xsl:template>


<!-- **********************************************************************
  Helper templates for generating a result item (do not customize)
     ********************************************************************** -->

<!-- *** Miscellaneous: - size - date - cache *** -->
<xsl:template match="C">
    <xsl:param name="stripped_url"/>
    <xsl:param name="escaped_url"/>
    <xsl:param name="query"/>
    <xsl:param name="mime"/>
    <xsl:param name="date"/>

    <xsl:variable name="docid"><xsl:value-of select="@CID"/></xsl:variable>

    <xsl:if test="$show_res_size != '0'">
    <xsl:if test="not(@SZ='')">
        <font color="{$res_url_color}" size="{$res_url_size}">
          <xsl:text> - </xsl:text>
          <xsl:value-of select="@SZ"/>
        </font>
    </xsl:if>
    </xsl:if>

    <xsl:if test="$show_res_date != '0'">
    <xsl:if test="($date != '') and
                  (translate($date, '-', '') &gt; 19500000) and
                  (translate($date, '-', '') &lt; 21000000)">
        <font color="{$res_url_color}" size="{$res_url_size}">
        <xsl:text> - </xsl:text>
        <xsl:value-of select="$date"/>
        </font>
    </xsl:if>
    </xsl:if>

    <xsl:if test="$show_res_cache != '0'">
        <font color="{$res_url_color}" size="{$res_url_size}">
        <xsl:text> - </xsl:text>
        </font>
        <xsl:variable name="cache_encoding">
          <xsl:choose>
            <xsl:when test="'' != @ENC"><xsl:value-of select="@ENC"/></xsl:when>
            <xsl:otherwise>UTF-8</xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <a class="f" href="search?q=cache:{$docid}:{$escaped_url}+{
                           $stripped_search_query}&amp;{$base_url}&amp;oe={
                           $cache_encoding}">
          <xsl:choose>
            <xsl:when test="not($mime)">Cached</xsl:when>
            <xsl:when test="$mime='text/html'">Cached</xsl:when>
            <xsl:when test="$mime='text/plain'">Cached</xsl:when>
            <xsl:otherwise>Text Version</xsl:otherwise>
          </xsl:choose>
        </a>
    </xsl:if>

</xsl:template>


<!-- **********************************************************************
 Google navigation bar in result page (do not customize)
     ********************************************************************** -->
<xsl:template name="google_navigation">
    <xsl:param name="prev"/>
    <xsl:param name="next"/>
    <xsl:param name="view_begin"/>
    <xsl:param name="view_end"/>
    <xsl:param name="guess"/>
    <xsl:param name="navigation_style"/>

  <xsl:variable name="fontclass">
    <xsl:choose>
      <xsl:when test="$navigation_style = 'top'">s</xsl:when>
      <xsl:otherwise>b</xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <!-- *** Test to see if we should even show navigation *** -->
  <xsl:if test="($prev) or ($next)">

  <!-- *** Start Google result navigation bar *** -->

    <xsl:if test="$navigation_style != 'top'">
      <xsl:text disable-output-escaping="yes">&lt;center&gt;
        &lt;div class=&quot;n&quot;&gt;</xsl:text>
    </xsl:if>

    <table border="0" cellpadding="0" width="1%" cellspacing="0">
      <tr align="center" valign="top">
        <xsl:if test="$navigation_style != 'top'">
        <td valign="bottom" nowrap="1">
          <font size="-1">
            Result Page<xsl:call-template name="nbsp"/>
          </font>
        </td>
        </xsl:if>


  <!-- *** Show previous navigation, if available *** -->
        <xsl:choose>
          <xsl:when test="$prev">
            <td nowrap="1">

              <span class="{$fontclass}">
              <a href="search?{$search_url}&amp;start={$view_begin -
                      $num_results - 1}">
                <xsl:if test="$navigation_style = 'google'">

                  <img src="/nav_previous.gif" width="68" height="26"
                    alt="Previous" border="0"/>
                  <br/>
                 </xsl:if>
                <xsl:if test="$navigation_style = 'top'">
                  <xsl:text>&lt;</xsl:text>
                </xsl:if>
                <xsl:text>Previous</xsl:text>
              </a>
              </span>
              <xsl:if test="$navigation_style != 'google'">
                  <xsl:call-template name="nbsp"/>
              </xsl:if>
            </td>
          </xsl:when>
          <xsl:otherwise>
            <td nowrap="1">
              <xsl:if test="$navigation_style = 'google'">
                <img src="/nav_first.gif" width="18" height="26"
                  alt="First" border="0"/>
                <br/>
              </xsl:if>
            </td>
          </xsl:otherwise>
        </xsl:choose>

        <xsl:if test="($navigation_style = 'google') or
                      ($navigation_style = 'link')">
  <!-- *** Google result set navigation *** -->
        <xsl:variable name="mod_end">
          <xsl:choose>
            <xsl:when test="$next"><xsl:value-of select="$guess"/></xsl:when>
            <xsl:otherwise><xsl:value-of select="$view_end"/></xsl:otherwise>
          </xsl:choose>
        </xsl:variable>

        <xsl:call-template name="result_nav">
          <xsl:with-param name="start" select="0"/>
          <xsl:with-param name="end" select="$mod_end"/>
          <xsl:with-param name="current_view" select="($view_begin)-1"/>
          <xsl:with-param name="navigation_style" select="$navigation_style"/>
        </xsl:call-template>
        </xsl:if>

  <!-- *** Show next navigation, if available *** -->
        <xsl:choose>
          <xsl:when test="$next">
            <td nowrap="1">
              <xsl:if test="$navigation_style != 'google'">
                  <xsl:call-template name="nbsp"/>
              </xsl:if>
              <span class="{$fontclass}">
              <a href="search?{$search_url}&amp;start={$view_begin +
                $num_results - 1}">
                <xsl:if test="$navigation_style = 'google'">

                  <img src="/nav_next.gif" width="100" height="26"

                    alt="Next" border="0"/>
                  <br/>
                </xsl:if>
                <xsl:text>Next</xsl:text>
                <xsl:if test="$navigation_style = 'top'">
                  <xsl:text>&gt;</xsl:text>
                </xsl:if>
              </a>
              </span>
            </td>
          </xsl:when>
          <xsl:otherwise>
            <td nowrap="1">
              <xsl:if test="$navigation_style != 'google'">
                <xsl:call-template name="nbsp"/>
              </xsl:if>
              <xsl:if test="$navigation_style = 'google'">
                <img src="/nav_last.gif" width="46" height="26"

                  alt="Last" border="0"/>
                <br/>
              </xsl:if>
            </td>
          </xsl:otherwise>
        </xsl:choose>

  <!-- *** End Google result bar *** -->
      </tr>
    </table>

    <xsl:if test="$navigation_style != 'top'">
      <xsl:text disable-output-escaping="yes">&lt;/div&gt;
        &lt;/center&gt;</xsl:text>
    </xsl:if>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Helper templates for generating Google result navigation (do not customize)
   only shows 10 sets up or down from current view
     ********************************************************************** -->
<xsl:template name="result_nav">
  <xsl:param name="start" select="'0'"/>
  <xsl:param name="end"/>
  <xsl:param name="current_view"/>
  <xsl:param name="navigation_style"/>

  <!-- *** Choose how to show this result set *** -->
  <xsl:choose>
    <xsl:when test="($start)&lt;(($current_view)-(10*($num_results)))">
    </xsl:when>
    <xsl:when test="(($current_view)&gt;=($start)) and
                    (($current_view)&lt;(($start)+($num_results)))">
      <td>
        <xsl:if test="$navigation_style = 'google'">
          <img src="/nav_current.gif" width="16" height="26" alt="Current"/>
          <br/>
        </xsl:if>
        <xsl:if test="$navigation_style = 'link'">
          <xsl:call-template name="nbsp"/>
        </xsl:if>
        <span class="i"><xsl:value-of
          select="(($start)div($num_results))+1"/></span>
        <xsl:if test="$navigation_style = 'link'">
          <xsl:call-template name="nbsp"/>
        </xsl:if>
      </td>
    </xsl:when>
    <xsl:otherwise>
      <td>
        <xsl:if test="$navigation_style = 'link'">
            <xsl:call-template name="nbsp"/>
        </xsl:if>
        <a href="search?{$search_url}&amp;start={$start}">
        <xsl:if test="$navigation_style = 'google'">
          <img src="/nav_page.gif" width="16" height="26" alt="Navigation"
               border="0"/>
          <br/>
        </xsl:if>
        <xsl:value-of select="(($start)div($num_results))+1"/>
        </a>
        <xsl:if test="$navigation_style = 'link'">
           <xsl:call-template name="nbsp"/>
        </xsl:if>
      </td>
    </xsl:otherwise>
  </xsl:choose>

  <!-- *** Recursively iterate through result sets to display *** -->
  <xsl:if test="((($start)+($num_results))&lt;($end)) and
                ((($start)+($num_results))&lt;(($current_view)+
                (10*($num_results))))">
    <xsl:call-template name="result_nav">
      <xsl:with-param name="start" select="$start+$num_results"/>
      <xsl:with-param name="end" select="$end"/>
      <xsl:with-param name="current_view" select="$current_view"/>
      <xsl:with-param name="navigation_style" select="$navigation_style"/>
    </xsl:call-template>
  </xsl:if>

</xsl:template>


<!-- **********************************************************************
 Top separation bar (do not customize)
     ********************************************************************** -->
<xsl:template name="top_sep_bar">
  <xsl:param name="text"/>
  <xsl:param name="show_info"/>
  <xsl:param name="time"/>


    <table width="100%" border="0" cellpadding="0" cellspacing="0">
      <tr>
        <td bgcolor="{$sep_bar_border_color}"><img width="1" height="1" alt=""/></td>
      </tr>
    </table>
    <table width="100%" cellpadding="0" cellspacing="0" border="0" bgcolor="{$sep_bar_bg_color}">
      <tr>
        <td nowrap="1" width="1%" bgcolor="{$sep_bar_bg_color}">
           <font size="+1">
                   <xsl:call-template name="nbsp"/><b><xsl:value-of select="$text"/></b>
           </font>
         </td>
        <td nowrap="1" align="right" bgcolor="{$sep_bar_bg_color}">
          <xsl:if test="$show_info != '0'">
            <font size="-1">
            <xsl:if test="count(/GSP/RES/R)>0 ">
              <xsl:choose>
                <xsl:when test="$access = 's' or $access = 'a'">
                  Results <b><xsl:value-of select="RES/@SN"/></b> - <b><xsl:value-of select="RES/@EN"/></b> for <b><xsl:value-of select="$space_normalized_query"/></b>.
                </xsl:when>
                <xsl:otherwise>
                  Results <b><xsl:value-of select="RES/@SN"/></b> - <b><xsl:value-of select="RES/@EN"/></b> of about <b><xsl:value-of select="RES/M"/></b> for <b><xsl:value-of select="$space_normalized_query"/></b>.
                </xsl:otherwise>
              </xsl:choose>
            </xsl:if>
              Search took <b><xsl:value-of select="round($time * 100.0) div 100.0"/></b> seconds.
            </font>
          </xsl:if>
        </td>
      </tr>
    </table>
    <hr class="z"/>
    <xsl:if test="$choose_sep_bar = 'line'">
      <hr size="1" color="gray"/>
    </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Analytics script (do not customize)
     ********************************************************************** -->
<xsl:template name="analytics">
  <xsl:if test="string-length($analytics_account) != '0'">
    <script src="{$analytics_script_url}" type="text/javascript"></script>
    <script type="text/javascript">
      <xsl:comment>
      _uacct = "<xsl:value-of select='$analytics_account'/>";
      urchinTracker();
      //</xsl:comment>
    </script>
  </xsl:if>
</xsl:template>

<!-- **********************************************************************
 Utility function for constructing copyright text (do not customize)
     ********************************************************************** -->
<xsl:template name="copyright">
  <center>
  </center>
</xsl:template>


<!-- **********************************************************************
 Utility functions for generating html entities
     ********************************************************************** -->
<xsl:template name="nbsp">
  <xsl:text disable-output-escaping="yes">&amp;nbsp;</xsl:text>
</xsl:template>
<xsl:template name="nbsp3">
  <xsl:call-template name="nbsp"/>
  <xsl:call-template name="nbsp"/>
  <xsl:call-template name="nbsp"/>
</xsl:template>
<xsl:template name="nbsp4">
  <xsl:call-template name="nbsp3"/>
  <xsl:call-template name="nbsp"/>
</xsl:template>
<xsl:template name="quot">
  <xsl:text disable-output-escaping="yes">&amp;quot;</xsl:text>
</xsl:template>
<xsl:template name="copy">
  <xsl:text disable-output-escaping="yes">&amp;copy;</xsl:text>
</xsl:template>

<!-- **********************************************************************
 Utility functions for generating head elements so that the XSLT processor
 won't add a meta tag to the output, since it may specify the wrong
 encoding (utf8) in the meta tag.
     ********************************************************************** -->
<xsl:template name="plainHeadStart">
  <xsl:text disable-output-escaping="yes">&lt;head&gt;</xsl:text>
  <meta name="robots" content="NOINDEX,NOFOLLOW"/>
  <xsl:text>
  </xsl:text>
</xsl:template>
<xsl:template name="plainHeadEnd">
  <xsl:text disable-output-escaping="yes">&lt;/head&gt;</xsl:text>
  <xsl:text>
  </xsl:text>
</xsl:template>


<!-- **********************************************************************
 Utility functions for generating head elements with a meta tag to the output
 specifying the character set as requested
     ********************************************************************** -->
<xsl:template name="langHeadStart">
  <xsl:text disable-output-escaping="yes">&lt;head&gt;</xsl:text>
  <meta name="robots" content="NOINDEX,NOFOLLOW"/>
     <xsl:choose>
    <xsl:when test="PARAM[(@name='oe') and (@value='utf8')]">
      <meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='oe') and (@value!='')]">
      <meta http-equiv="content-type" content="text/html; charset={PARAM[@name='oe']/@value}"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-CN')]">
      <meta http-equiv="content-type" content="text/html; charset=GB2312"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_zh-TW')]">
      <meta http-equiv="content-type" content="text/html; charset=Big5"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_cs')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_da')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_nl')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_en')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_et')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_fi')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_fr')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_de')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_el')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-7"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_iw')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-8-I"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_hu')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_is')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_it')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_ja')]">
      <meta http-equiv="content-type" content="text/html; charset=Shift_JIS"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_ko')]">
      <meta http-equiv="content-type" content="text/html; charset=EUC-KR"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_lv')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_lt')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_no')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_pl')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_pt')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_ro')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-2"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_ru')]">
      <meta http-equiv="content-type" content="text/html; charset=windows-1251"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_es')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:when test="PARAM[(@name='lr') and (@value='lang_sv')]">
      <meta http-equiv="content-type" content="text/html; charset=ISO-8859-1"/>
    </xsl:when>
    <xsl:otherwise>
      <meta http-equiv="content-type" content="text/html; charset="/>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:text>
  </xsl:text>
</xsl:template>

<xsl:template name="langHeadEnd">
  <xsl:text disable-output-escaping="yes">&lt;/head&gt;</xsl:text>
  <xsl:text>
  </xsl:text>
</xsl:template>


<!-- **********************************************************************
 Utility functions (do not customize)
     ********************************************************************** -->

<!-- *** Find the substring after the last occurence of a separator *** -->
<xsl:template name="last_substring_after">

  <xsl:param name="string"/>
  <xsl:param name="separator"/>
  <xsl:param name="fallback"/>

  <xsl:variable name="newString"
    select="substring-after($string, $separator)"/>

  <xsl:choose>
    <xsl:when test="$newString!=''">
      <xsl:call-template name="last_substring_after">
        <xsl:with-param name="string" select="$newString"/>
        <xsl:with-param name="separator" select="$separator"/>
        <xsl:with-param name="fallback" select="$newString"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$fallback"/>
    </xsl:otherwise>
  </xsl:choose>

</xsl:template>

<!-- *** Find and replace *** -->
<xsl:template name="replace_string">
  <xsl:param name="find"/>
  <xsl:param name="replace"/>
  <xsl:param name="string"/>
  <xsl:choose>
    <xsl:when test="contains($string, $find)">
      <xsl:value-of select="substring-before($string, $find)"/>
      <xsl:value-of select="$replace"/>
      <xsl:call-template name="replace_string">
        <xsl:with-param name="find" select="$find"/>
        <xsl:with-param name="replace" select="$replace"/>
        <xsl:with-param name="string"
          select="substring-after($string, $find)"/>
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$string"/>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<!-- *** Decode hex encoding *** -->
<xsl:template name="decode_hex">
  <xsl:param name="encoded" />

  <xsl:variable name="hex" select="'0123456789ABCDEF'" />
  <xsl:variable name="ascii"> !"#$%&amp;'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~</xsl:variable>

  <xsl:choose>
    <xsl:when test="contains($encoded,'%')">
      <xsl:value-of select="substring-before($encoded,'%')" />
      <xsl:variable name="hexpair" select="translate(substring(substring-after($encoded,'%'),1,2),'abcdef','ABCDEF')" />
      <xsl:variable name="decimal" select="(string-length(substring-before($hex,substring($hexpair,1,1))))*16 + string-length(substring-before($hex,substring($hexpair,2,1)))" />
      <xsl:choose>
        <xsl:when test="$decimal &lt; 127 and $decimal &gt; 31">
          <xsl:value-of select="substring($ascii,$decimal - 31,1)" />
        </xsl:when>
        <xsl:when test="$decimal &gt; 159">
          <xsl:text disable-output-escaping="yes">%</xsl:text>
          <xsl:value-of select="$hexpair" />
        </xsl:when>
        <xsl:otherwise>?</xsl:otherwise>
      </xsl:choose>
      <xsl:call-template name="decode_hex">
        <xsl:with-param name="encoded" select="substring(substring-after($encoded,'%'),3)" />
      </xsl:call-template>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="$encoded" />
    </xsl:otherwise>
  </xsl:choose>

</xsl:template>

<!-- *** Convert UNC *** -->
<xsl:template name="convert_unc">
  <xsl:param name="string"/>
  <xsl:variable name="slash">/</xsl:variable>
  <xsl:variable name="backslash">\</xsl:variable>
  <xsl:variable name="escaped_ampersand">&amp;amp;</xsl:variable>
  <xsl:variable name="unescaped_ampersand">&amp;</xsl:variable>

  <xsl:variable name="converted_1">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find"    select="$slash"/>
      <xsl:with-param name="replace" select="$backslash"/>
      <xsl:with-param name="string"  select="$string"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="converted_2">
    <xsl:call-template name="decode_hex">
      <xsl:with-param name="encoded" select="$converted_1"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="converted_3">
    <xsl:call-template name="replace_string">
      <xsl:with-param name="find"    select="$escaped_ampersand"/>
      <xsl:with-param name="replace" select="$unescaped_ampersand"/>
      <xsl:with-param name="string"  select="$converted_2"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:value-of disable-output-escaping='yes' select="concat($backslash,$backslash,$converted_3)"/>

</xsl:template>

<!-- **********************************************************************
 Display error messages
     ********************************************************************** -->
<xsl:template name="error_page">
  <xsl:param name="errorMessage"/>
  <xsl:param name="errorDescription"/>

  <html>
    <xsl:call-template name="plainHeadStart"/>
      <title><xsl:value-of select="$error_page_title"/></title>
            <xsl:call-template name="style"/>
    <xsl:call-template name="plainHeadEnd"/>
    <body dir="ltr">
      <xsl:call-template name="analytics"/>

            <xsl:call-template name="my_page_header"/>

            <xsl:if test="$show_logo != '0'">
                <table border="0" cellpadding="0" cellspacing="0">
                  <tr>
                          <td rowspan="3" valign="top">
                          <xsl:call-template name="logo"/>
                          <xsl:call-template name="nbsp3"/>
                        </td>
                  </tr>
                </table>
            </xsl:if>

      <xsl:call-template name="top_sep_bar">
        <xsl:with-param name="text" select="$sep_bar_error_text"/>
                <xsl:with-param name="show_info" select="0"/>
        <xsl:with-param name="time" select="0"/>
      </xsl:call-template>

      <p>
      <table width="99%" border="0" cellpadding="2" cellspacing="0">
        <tr>
          <td><font color="#990000" size="+1">Message:</font></td>
          <td><font color="#990000" size="+1"><xsl:value-of select="$errorMessage"/></font></td>
        </tr>
        <tr>
          <td><font color="#990000">Description:</font></td>
          <td><font color="#990000"><xsl:value-of select="$errorDescription"/></font></td>
        </tr>
        <tr>
          <td><font color="#990000">Details:</font></td>
          <td><font color="#990000"><xsl:copy-of select="/"/></font></td>
        </tr>
      </table>
      </p>

          <hr/>
          <xsl:call-template name="copyright"/>
          <xsl:call-template name="my_page_footer"/>

    </body>
  </html>
</xsl:template>


<!-- **********************************************************************
 Google Desktop for Enterprise integration templates
     ********************************************************************** -->
<xsl:template name="desktop_tab">

  <!-- *** Show the Google tabs *** -->

  <font size="-1">
    <a class="q" onClick="return window.qs?qs(this):1" href="http://www.google.com/search?q={$qval}">Web</a>
  </font>

  <xsl:call-template name="nbsp4"/>

  <font size="-1">
    <a class="q" onClick="return window.qs?qs(this):1" href="http://images.google.com/images?q={$qval}">Images</a>
  </font>

  <xsl:call-template name="nbsp4"/>

  <font size="-1">
    <a class="q" onClick="return window.qs?qs(this):1" href="http://groups.google.com/groups?q={$qval}">Groups</a>
  </font>

  <xsl:call-template name="nbsp4"/>

  <font size="-1">
    <a class="q" onClick="return window.qs?qs(this):1" href="http://news.google.com/news?q={$qval}">News</a>
  </font>

  <xsl:call-template name="nbsp4"/>

  <font size="-1">
    <a class="q" onClick="return window.qs?qs(this):1" href="http://local.google.com/local?q={$qval}">Local</a>
  </font>

  <xsl:call-template name="nbsp4"/>

  <!-- *** Show the desktop and web tabs *** -->

  <xsl:if test="CUSTOM/HOME">
    <xsl:comment>trh2</xsl:comment>
  </xsl:if>
  <xsl:if test="Q">
    <xsl:comment>trl2</xsl:comment>
  </xsl:if>

  <!-- *** Show the appliance tab *** -->
  <font size="-1"><b><xsl:value-of select="$egds_appliance_tab_label"/></b></font>

</xsl:template>

<xsl:template name="desktop_results">
  <xsl:comment>tro2</xsl:comment>
</xsl:template>

<!-- **********************************************************************
  OneBox results (if any)
     ********************************************************************** -->
<xsl:template name="onebox">
     <xsl:for-each select="/GSP/ENTOBRESULTS">
       <xsl:apply-templates/>
     </xsl:for-each>
</xsl:template>

<!-- **********************************************************************
 Swallow unmatched elements
     ********************************************************************** -->
<xsl:template match="@*|node()"/>
</xsl:stylesheet>


<!-- *** END OF STYLESHEET *** -->
              ]]></stylesheet>
              <synonyms><![CDATA[

              ]]></synonyms>
              <wildcard_wc_filter><![CDATA[
200
              ]]></wildcard_wc_filter>
          </frontend>
          <frontend Name="xslt_tester">
              <default_language><![CDATA[
'en'
              ]]></default_language>
              <profile_sheet><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet>
              <profile_sheet.en><![CDATA[
{'adv_page_title': 'Advanced Search', 'adv_search_anchor_text': 'Advanced Search', 'adv_search_panel_bgcolor': '#cbdced', 'alerts_anchor_text': 'Alerts', 'analytics_account': '', 'cached_page_header_text': 'This is the cached copy of', 'category_text_color': '#808080', 'choose_adv_search_page_header': 'both', 'choose_bottom_navigation': 'google', 'choose_result_page_header': 'both', 'choose_search_button': 'text', 'choose_sep_bar': 'ltblue', 'error_page_title': 'Error', 'faint_color': '#7777cc', 'front_page_title': 'Search Home', 'global_alink_color': '#ff0000', 'global_bg_color': '#ffffff', 'global_font': 'arial,sans-serif', 'global_font_size': '', 'global_link_color': '#0000cc', 'global_text_color': '#000000', 'global_vlink_color': '#551a8b', 'gss_search_engine_id': '', 'keymatch_bg_color': '#e8e8ff', 'keymatch_text': 'KeyMatch', 'keymatch_text_color': '#2255aa', 'logo_height': '78', 'logo_url': 'images/Title_Left.png', 'logo_width': '200', 'my_nav_align': 'right', 'my_nav_color': '#6f6f6f', 'my_nav_size': '-1', 'my_page_footer': ' <!-- Please enter html code below. -->', 'my_page_header': ' <!-- Please enter html code below. -->', 'res_cluster_position': 'right', 'res_keyword_color': '', 'res_keyword_format': 'b', 'res_keyword_size': '', 'res_title_color': '#0000cc', 'res_title_length': '70', 'res_title_size': '', 'res_url_color': '#008000', 'res_url_size': '-1', 'result_page_title': 'Search Results', 'search_box_size': '32', 'search_button_image_url': '', 'search_button_text': 'Google Search', 'search_help_anchor_text': 'Search Tips', 'search_subcollections_xslt': '', 'select_encoding': 'no_encoding', 'select_language': 'no_language', 'show_alerts2': '0', 'show_alerts_link': '0', 'show_apps_segmented_ui': '0', 'show_asr': '1', 'show_bottom_search_box': '1', 'show_category': '1', 'show_document_previews': '0', 'show_dynamic_navigation': '0', 'show_gss_results': '0', 'show_keymatch': '1', 'show_logo': '1', 'show_people_search_results': '0', 'show_res_cache': '1', 'show_res_clusters': '0', 'show_res_date': '1', 'show_res_description': '1', 'show_res_size': '1', 'show_res_snippet': '1', 'show_res_title': '1', 'show_res_url': '1', 'show_result_page_adv_link': '1', 'show_result_page_help_link': '1', 'show_search_info': '1', 'show_secure_radio_button': '1', 'show_sort_by': '1', 'show_spelling': '1', 'show_subcollections': '0', 'show_suggest': '0', 'show_synonyms': '1', 'show_top_navigation': '1', 'show_top_search_box': '1', 'show_translation': '0', 'show_twitter_results': '0', 'spelling_text': 'Did you mean:', 'spelling_text_color': '#cc0000', 'stylesheet_is_edited': '1', 'synonyms_text': 'You could also try:', 'synonyms_text_color': '#cc0000', 'twitter_search_operators': '', 'xml_error_des_text': 'View page source to see the offending XML.', 'xml_error_msg_text': 'Unknown XML result type.'}
              ]]></profile_sheet.en>
              <access_control_allow_origin><![CDATA[


              ]]></access_control_allow_origin>
              <badurls_noreturn><![CDATA[

              ]]></badurls_noreturn>
              <content_type><![CDATA[
text/html
              ]]></content_type>
              <domain_filter><![CDATA[

              ]]></domain_filter>
              <filetype_filter><![CDATA[

              ]]></filetype_filter>
              <good_ips><![CDATA[
0.0.0.0/0

              ]]></good_ips>
              <googlematch><![CDATA[

              ]]></googlematch>
              <lang_filter><![CDATA[

              ]]></lang_filter>
              <metatag_filter><![CDATA[

              ]]></metatag_filter>
              <query_expansion_filter><![CDATA[
QE_FULL

              ]]></query_expansion_filter>
              <query_expansion_meta_filter><![CDATA[
QE_META_NONE

              ]]></query_expansion_meta_filter>
              <scoring_policy_filter><![CDATA[

              ]]></scoring_policy_filter>
              <star_wildcard_default_filter><![CDATA[
1

              ]]></star_wildcard_default_filter>
              <stylesheet><![CDATA[
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">

 <xsl:variable name="resAvails" select="';;PG2;R1;;PG2;R3;;L;11;;L;12;;L;13;;CH;11;;CH;12;;GCB;12;;GCB;13;;NZ;11;;NZ;12;;SP1;R3;;SP1;YL;;U;R2;;U;R4;;U;12;;U;13;;'"/>
 <xsl:variable name="olAvails" select="';;OL;21;;OL;23;;OL;25;;OL;26;;'"/>
 <xsl:variable name="sesAvails" select="';;GCB;12;;MEL;12;;MEL;13;;S;12;;S;13;;U;12;;U;13;;'"/>
 <xsl:variable name="ylAvails" select="';;HK;YL;;NZ;YL;;SP1;YL;;U;YL;;'"/>
<xsl:variable name="hTitle" select="'intakes'"/>
<!-- SCU Variables -->
<!-- get the environment variables for this front end -->

<xsl:template name="getAvailabilities">
      <xsl:param name="regex" />
      <xsl:param name="tar" />
      <availabilities>
         <xsl:analyze-string select="$tar" regex="{$regex}">
            <xsl:matching-substring>
               <loc>
                  <xsl:value-of select="$global_location_cds/locations/location[@cd = regex-group(1)]/desc" />
               </loc>
               <availability>
                  <xsl:value-of select="regex-group(2)" />
               </availability>
            </xsl:matching-substring>
         </xsl:analyze-string>
      </availabilities>
 </xsl:template>

<xsl:include href="env_variables"/>

  <xsl:template match="/">
<!--<xsl:copy-of select="$resSemTypeOneTest"/><br/>-->
<!--<xsl:value-of select="$resSemTypeOneTest[1]/availability[1]"/><br/>-->
 
 <xsl:call-template name="transformAvailCombo">
  <xsl:with-param name="availCombo" select="$resAvails"/>
 </xsl:call-template>
   

  </xsl:template>

<xsl:template name="transformAvailCombo">
      <xsl:param name="availCombo" />
      <xsl:param name="headTitle" />
      <xsl:variable name="resSemTypeOne" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(R[1|3]+)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctRSLoc" select="distinct-values($resSemTypeOne[1]/loc)" />
      <xsl:variable name="resSemTypeTwo" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(R[2|4]+)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctRSLocTwo" select="distinct-values($resSemTypeTwo[1]/loc)" />
      <xsl:variable name="sesTypes" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(1\d+)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctSesLoc" select="distinct-values($sesTypes[1]/loc)" />
      <xsl:variable name="stPrdTypes" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(2\d+)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctStPrdLoc" select="distinct-values($stPrdTypes[1]/loc)" />
      <xsl:variable name="ylType" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(YL)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctYlLoc" select="distinct-values($ylType[1]/loc)" />
<!--       <xsl:value-of select="$resSemTypeOne" />
      <br />
      <xsl:value-of select="$resSemTypeTwo" />
      <br />
      <xsl:value-of select="$sesTypes" />
      <br />
      <xsl:value-of select="$ylType" />
      <br /> -->
      <xsl:if test="$resSemTypeOne/availability">
         <table cellspacing="0">
            <thead>
               <tr>
                  <td>
                     <xsl:value-of select="$headTitle" />
                  </td>
                  <td>
                     <strong>Research Semester 1</strong>
                  </td>
                  <td>
                     <strong>Research Semester 2</strong>
                  </td>
               </tr>
            </thead>
            <xsl:call-template name="renderAvails">
               <xsl:with-param name="distincts" select="$distinctRSLoc" />
               <xsl:with-param name="avails" select="$resSemTypeOne" />
            </xsl:call-template>
         </table>
      </xsl:if>
      <xsl:if test="$resSemTypeTwo/availability">
         <table cellspacing="0">
            <thead>
               <tr>
                  <td>
                     <xsl:value-of select="$headTitle" />
                  </td>
                  <td>
                     <strong>Research Semester 3</strong>
                  </td>
                  <td>
                     <strong>Research Semester 4</strong>
                  </td>
               </tr>
            </thead>
            <xsl:call-template name="renderAvails">
               <xsl:with-param name="distincts" select="$distinctRSLocTwo" />
               <xsl:with-param name="avails" select="$resSemTypeTwo" />
            </xsl:call-template>
         </table>
      </xsl:if>
      <xsl:if test="$sesTypes/availability">
         <table cellspacing="0">
            <thead>
               <tr>
                  <td>
                     <xsl:value-of select="$headTitle" />
                  </td>
                  <td>
                     <strong>Session 1</strong>
                  </td>
                  <td>
                     <strong>Session 2</strong>
                  </td>
                  <td>
                     <strong>Session 3</strong>
                  </td>
               </tr>
            </thead>
            <xsl:call-template name="renderAvails">
               <xsl:with-param name="distincts" select="$distinctSesLoc" />
               <xsl:with-param name="avails" select="$sesTypes" />
            </xsl:call-template>
         </table>
      </xsl:if>
      <xsl:if test="$stPrdTypes/availability">
         <table cellspacing="0">
            <thead>
               <tr>
                  <td>
                     <xsl:value-of select="$headTitle" />
                  </td>
                  <td colspan="6">
                     <span style="font-size: 0.9em">Available in Study Periods</span>
                  </td>
               </tr>
            </thead>
            <xsl:call-template name="renderAvails">
               <xsl:with-param name="distincts" select="$distinctStPrdLoc" />
               <xsl:with-param name="avails" select="$stPrdTypes" />
            </xsl:call-template>
         </table>
      </xsl:if>
      <xsl:if test="$ylType/availability">
         <table cellspacing="0">
            <thead>
               <tr>
                  <td>
                     <xsl:value-of select="$headTitle" />
                  </td>
                  <td>
                     <strong>Year Long</strong>
                  </td>
               </tr>
            </thead>
            <xsl:call-template name="renderAvails">
               <xsl:with-param name="distincts" select="$distinctYlLoc" />
               <xsl:with-param name="avails" select="$ylType" />
            </xsl:call-template>
         </table>
         <p>
            <span class="pronounce">*</span>
            Year Long availabilities are normally offered in 5 week blocks throughout the year.  Students may enrol in 1 to 50 weeks depending on their English language proficiency on entry and the level aimed for at completion.
         </p>
      </xsl:if>
      <xsl:if test="not($resSemTypeOne/availability) and not($resSemTypeTwo/availability) and not($sesTypes/availability) and not($stPrdTypes/availability) and not($ylType/availability)">
       <table cellspacing="0">
        <thead>
        <tr>
          <td><strong>Availability information to be confirmed.</strong></td>
        </tr>
      </thead>
      </table>
      </xsl:if>
   </xsl:template>

<xsl:template name="renderAvails">
      <xsl:param name="avails" />
      <xsl:param name="distincts" />
      <xsl:param name="classOverload" />

      <tbody>
         <xsl:for-each select="$distincts">
            <xsl:sort select="."/>
            <xsl:variable name="desc" select="." />
            <xsl:variable name="availChild">
               <xsl:copy-of select="$avails/loc[text() = $desc]/following-sibling::availability[1]" />
            </xsl:variable>
            <tr>
               <xsl:attribute name="class" select="$global_location_cds/locations/location/desc[text() = $desc]/class" />
               <td>
                  <strong>
                     <xsl:value-of select="$desc"/>
                  </strong>
               </td>
               <xsl:if test="$availChild">
                  <xsl:for-each select="$availChild/availability">
                     <!-- array variables -->
                     <xsl:variable name="secondaryVals" select="('12','R3','R4')" />
                     <xsl:variable name="tertiaryVals" select="('13')" />
                     <xsl:variable name="followedVals" select="('11', '12', 'R1', 'R2')" />
                     <xsl:variable name="followerVals" select="('12', '13', 'R3', 'R4')" />
                     <!-- omnipotent values -->
                     <xsl:variable name="omniVals" select="('YL', 'YL2')" />
                     <!-- logical variables -->
                     <xsl:variable name="isStudyPeriod" select="boolean(matches(text(), '^2'))" />
                     <xsl:variable name="isSecondaryVal" select="boolean(text() = $secondaryVals)" />
                     <xsl:variable name="hasImmediateFollower" select="boolean(following-sibling::availability/text() = $followerVals)" />
                     <xsl:variable name="hasPrecSecondaryVal" select="boolean(preceding-sibling::availability/text() = $secondaryVals)" />
                     <xsl:variable name="isTertiaryVal" select="boolean(text() = $tertiaryVals)" />
                     <xsl:variable name="isOmniVal" select="boolean(text() = $omniVals)" />
                     <xsl:if test="not($isStudyPeriod)">
                        <xsl:choose>
                           <xsl:when test="($isSecondaryVal and position() = 1) or ($isTertiaryVal and position() = 2 and not($hasPrecSecondaryVal))">
                              <td>&#160;</td>
                           </xsl:when>
                           <xsl:when test="($isTertiaryVal and position() = 1)">
                              <td>&#160;</td>
                              <td>&#160;</td>
                           </xsl:when>
                        </xsl:choose>
                     </xsl:if>
                     <td>
                        <xsl:choose>
                           <xsl:when test="$isOmniVal">
                              <xsl:text>&#42;</xsl:text>
                           </xsl:when>
                           <xsl:when test="$isStudyPeriod">
                              <xsl:value-of select="replace(text(), '^2', '')" />
                              <xsl:if test="not(position() = last())">
                                 <xsl:text>,</xsl:text>
                              </xsl:if>
                           </xsl:when>
                           <xsl:otherwise>
                              <xsl:text>&#10003;</xsl:text>
                           </xsl:otherwise>
                        </xsl:choose>
                     </td>
                     <xsl:choose>
                      <xsl:when test="text() = ('11') and position() = last()">
                        <td>&#160;</td>
                        <td>&#160;</td>
                      </xsl:when>
                      <xsl:when test="(text() = $followedVals and not($hasImmediateFollower))">
                        <td>&#160;</td>
                      </xsl:when>
                     </xsl:choose>
                  </xsl:for-each>
                  <!--<xsl:copy-of select="$avails/loc[text() = $loc]/following-sibling::availability[1]"/>-->
               </xsl:if>
            </tr>
         </xsl:for-each>
      </tbody>
   </xsl:template>
</xsl:stylesheet>
              ]]></stylesheet>
              <stylesheet.en><![CDATA[
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">

 <xsl:variable name="resAvails" select="';;PG2;R1;;PG2;R3;;L;11;;L;12;;L;13;;CH;11;;CH;12;;GCB;12;;GCB;13;;NZ;11;;NZ;12;;SP1;R3;;SP1;YL;;U;R2;;U;R4;;U;12;;U;13;;'"/>
 <xsl:variable name="olAvails" select="';;OL;21;;OL;23;;OL;25;;OL;26;;'"/>
 <xsl:variable name="sesAvails" select="';;GCB;12;;MEL;12;;MEL;13;;S;12;;S;13;;U;12;;U;13;;'"/>
 <xsl:variable name="ylAvails" select="';;HK;YL;;NZ;YL;;SP1;YL;;U;YL;;'"/>
<xsl:variable name="hTitle" select="'intakes'"/>
<!-- SCU Variables -->
<!-- get the environment variables for this front end -->

<xsl:template name="getAvailabilities">
      <xsl:param name="regex" />
      <xsl:param name="tar" />
      <availabilities>
         <xsl:analyze-string select="$tar" regex="{$regex}">
            <xsl:matching-substring>
               <loc>
                  <xsl:value-of select="$global_location_cds/locations/location[@cd = regex-group(1)]/desc" />
               </loc>
               <availability>
                  <xsl:value-of select="regex-group(2)" />
               </availability>
            </xsl:matching-substring>
         </xsl:analyze-string>
      </availabilities>
 </xsl:template>

<xsl:include href="env_variables"/>

  <xsl:template match="/">
<!--<xsl:copy-of select="$resSemTypeOneTest"/><br/>-->
<!--<xsl:value-of select="$resSemTypeOneTest[1]/availability[1]"/><br/>-->
 
 <xsl:call-template name="transformAvailCombo">
  <xsl:with-param name="availCombo" select="$resAvails"/>
 </xsl:call-template>
   

  </xsl:template>

<xsl:template name="transformAvailCombo">
      <xsl:param name="availCombo" />
      <xsl:param name="headTitle" />
      <xsl:variable name="resSemTypeOne" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(R[1|3]+)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctRSLoc" select="distinct-values($resSemTypeOne[1]/loc)" />
      <xsl:variable name="resSemTypeTwo" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(R[2|4]+)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctRSLocTwo" select="distinct-values($resSemTypeTwo[1]/loc)" />
      <xsl:variable name="sesTypes" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(1\d+)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctSesLoc" select="distinct-values($sesTypes[1]/loc)" />
      <xsl:variable name="stPrdTypes" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(2\d+)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctStPrdLoc" select="distinct-values($stPrdTypes[1]/loc)" />
      <xsl:variable name="ylType" as="element(availabilities)">
         <xsl:call-template name="getAvailabilities">
            <xsl:with-param name="regex" select="'([A-Z-0-9]+);(YL)'" />
            <xsl:with-param name="tar" select="$availCombo" />
         </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="distinctYlLoc" select="distinct-values($ylType[1]/loc)" />
<!--       <xsl:value-of select="$resSemTypeOne" />
      <br />
      <xsl:value-of select="$resSemTypeTwo" />
      <br />
      <xsl:value-of select="$sesTypes" />
      <br />
      <xsl:value-of select="$ylType" />
      <br /> -->
      <xsl:if test="$resSemTypeOne/availability">
         <table cellspacing="0">
            <thead>
               <tr>
                  <td>
                     <xsl:value-of select="$headTitle" />
                  </td>
                  <td>
                     <strong>Research Semester 1</strong>
                  </td>
                  <td>
                     <strong>Research Semester 2</strong>
                  </td>
               </tr>
            </thead>
            <xsl:call-template name="renderAvails">
               <xsl:with-param name="distincts" select="$distinctRSLoc" />
               <xsl:with-param name="avails" select="$resSemTypeOne" />
            </xsl:call-template>
         </table>
      </xsl:if>
      <xsl:if test="$resSemTypeTwo/availability">
         <table cellspacing="0">
            <thead>
               <tr>
                  <td>
                     <xsl:value-of select="$headTitle" />
                  </td>
                  <td>
                     <strong>Research Semester 3</strong>
                  </td>
                  <td>
                     <strong>Research Semester 4</strong>
                  </td>
               </tr>
            </thead>
            <xsl:call-template name="renderAvails">
               <xsl:with-param name="distincts" select="$distinctRSLocTwo" />
               <xsl:with-param name="avails" select="$resSemTypeTwo" />
            </xsl:call-template>
         </table>
      </xsl:if>
      <xsl:if test="$sesTypes/availability">
         <table cellspacing="0">
            <thead>
               <tr>
                  <td>
                     <xsl:value-of select="$headTitle" />
                  </td>
                  <td>
                     <strong>Session 1</strong>
                  </td>
                  <td>
                     <strong>Session 2</strong>
                  </td>
                  <td>
                     <strong>Session 3</strong>
                  </td>
               </tr>
            </thead>
            <xsl:call-template name="renderAvails">
               <xsl:with-param name="distincts" select="$distinctSesLoc" />
               <xsl:with-param name="avails" select="$sesTypes" />
            </xsl:call-template>
         </table>
      </xsl:if>
      <xsl:if test="$stPrdTypes/availability">
         <table cellspacing="0">
            <thead>
               <tr>
                  <td>
                     <xsl:value-of select="$headTitle" />
                  </td>
                  <td colspan="6">
                     <span style="font-size: 0.9em">Available in Study Periods</span>
                  </td>
               </tr>
            </thead>
            <xsl:call-template name="renderAvails">
               <xsl:with-param name="distincts" select="$distinctStPrdLoc" />
               <xsl:with-param name="avails" select="$stPrdTypes" />
            </xsl:call-template>
         </table>
      </xsl:if>
      <xsl:if test="$ylType/availability">
         <table cellspacing="0">
            <thead>
               <tr>
                  <td>
                     <xsl:value-of select="$headTitle" />
                  </td>
                  <td>
                     <strong>Year Long</strong>
                  </td>
               </tr>
            </thead>
            <xsl:call-template name="renderAvails">
               <xsl:with-param name="distincts" select="$distinctYlLoc" />
               <xsl:with-param name="avails" select="$ylType" />
            </xsl:call-template>
         </table>
         <p>
            <span class="pronounce">*</span>
            Year Long availabilities are normally offered in 5 week blocks throughout the year.  Students may enrol in 1 to 50 weeks depending on their English language proficiency on entry and the level aimed for at completion.
         </p>
      </xsl:if>
      <xsl:if test="not($resSemTypeOne/availability) and not($resSemTypeTwo/availability) and not($sesTypes/availability) and not($stPrdTypes/availability) and not($ylType/availability)">
       <table cellspacing="0">
        <thead>
        <tr>
          <td><strong>Availability information to be confirmed.</strong></td>
        </tr>
      </thead>
      </table>
      </xsl:if>
   </xsl:template>

<xsl:template name="renderAvails">
      <xsl:param name="avails" />
      <xsl:param name="distincts" />
      <xsl:param name="classOverload" />

      <tbody>
         <xsl:for-each select="$distincts">
            <xsl:sort select="."/>
            <xsl:variable name="desc" select="." />
            <xsl:variable name="availChild">
               <xsl:copy-of select="$avails/loc[text() = $desc]/following-sibling::availability[1]" />
            </xsl:variable>
            <tr>
               <xsl:attribute name="class" select="$global_location_cds/locations/location/desc[text() = $desc]/class" />
               <td>
                  <strong>
                     <xsl:value-of select="$desc"/>
                  </strong>
               </td>
               <xsl:if test="$availChild">
                  <xsl:for-each select="$availChild/availability">
                     <!-- array variables -->
                     <xsl:variable name="secondaryVals" select="('12','R3','R4')" />
                     <xsl:variable name="tertiaryVals" select="('13')" />
                     <xsl:variable name="followedVals" select="('11', '12', 'R1', 'R2')" />
                     <xsl:variable name="followerVals" select="('12', '13', 'R3', 'R4')" />
                     <!-- omnipotent values -->
                     <xsl:variable name="omniVals" select="('YL', 'YL2')" />
                     <!-- logical variables -->
                     <xsl:variable name="isStudyPeriod" select="boolean(matches(text(), '^2'))" />
                     <xsl:variable name="isSecondaryVal" select="boolean(text() = $secondaryVals)" />
                     <xsl:variable name="hasImmediateFollower" select="boolean(following-sibling::availability/text() = $followerVals)" />
                     <xsl:variable name="hasPrecSecondaryVal" select="boolean(preceding-sibling::availability/text() = $secondaryVals)" />
                     <xsl:variable name="isTertiaryVal" select="boolean(text() = $tertiaryVals)" />
                     <xsl:variable name="isOmniVal" select="boolean(text() = $omniVals)" />
                     <xsl:if test="not($isStudyPeriod)">
                        <xsl:choose>
                           <xsl:when test="($isSecondaryVal and position() = 1) or ($isTertiaryVal and position() = 2 and not($hasPrecSecondaryVal))">
                              <td>&#160;</td>
                           </xsl:when>
                           <xsl:when test="($isTertiaryVal and position() = 1)">
                              <td>&#160;</td>
                              <td>&#160;</td>
                           </xsl:when>
                        </xsl:choose>
                     </xsl:if>
                     <td>
                        <xsl:choose>
                           <xsl:when test="$isOmniVal">
                              <xsl:text>&#42;</xsl:text>
                           </xsl:when>
                           <xsl:when test="$isStudyPeriod">
                              <xsl:value-of select="replace(text(), '^2', '')" />
                              <xsl:if test="not(position() = last())">
                                 <xsl:text>,</xsl:text>
                              </xsl:if>
                           </xsl:when>
                           <xsl:otherwise>
                              <xsl:text>&#10003;</xsl:text>
                           </xsl:otherwise>
                        </xsl:choose>
                     </td>
                     <xsl:choose>
                      <xsl:when test="text() = ('11') and position() = last()">
                        <td>&#160;</td>
                        <td>&#160;</td>
                      </xsl:when>
                      <xsl:when test="(text() = $followedVals and not($hasImmediateFollower))">
                        <td>&#160;</td>
                      </xsl:when>
                     </xsl:choose>
                  </xsl:for-each>
                  <!--<xsl:copy-of select="$avails/loc[text() = $loc]/following-sibling::availability[1]"/>-->
               </xsl:if>
            </tr>
         </xsl:for-each>
      </tbody>
   </xsl:template>
</xsl:stylesheet>
              ]]></stylesheet.en>
              <synonyms><![CDATA[

              ]]></synonyms>
              <wildcard_wc_filter><![CDATA[
200

              ]]></wildcard_wc_filter>
          </frontend>
      </frontends>
      <globalparams>
          <_google_apps_domain><![CDATA[
''
          ]]></_google_apps_domain>
          <acl_inheritance_ser_ascii><![CDATA[
0
          ]]></acl_inheritance_ser_ascii>
          <active_language_bundle><![CDATA[
''
          ]]></active_language_bundle>
          <admin_console_auth_mode><![CDATA[
1
          ]]></admin_console_auth_mode>
          <admin_http_enable><![CDATA[
1
          ]]></admin_http_enable>
          <alerts2><![CDATA[
0
          ]]></alerts2>
          <alerts_footer_email><![CDATA[
''
          ]]></alerts_footer_email>
          <alerts_header_email><![CDATA[
''
          ]]></alerts_header_email>
          <auth_domains><![CDATA[
{
  "version": 7,
  "CGs": [
    {
      "name": "Default",
      "displayName": "Default",
      "requiresUsername": true,
      "requiresPassword": false,
      "isOptional": false,
      "mechanisms": [
        {
          "timeout": -1,
          "trustDuration": 1200000,
          "name": "Default_groups_99c6d9a6511becf1ef7328b1aad538a8",
          "typeName": "AuthnMechGroups"
        },
        {
          "entityId": "https://idp.scu.edu.au/idp/shibboleth",
          "timeout": -1,
          "trustDuration": 1800000,
          "name": "SAML-Default",
          "typeName": "AuthnMechSaml"
        }
      ]
    }
  ],
  "params": {
    "ACL_GROUPS_FILENAME": "../../../../conf/acls/acl_groups.enterprise",
    "ACL_URLS_FILENAME": "../../../../conf/acls/acl_urls.enterprise",
    "GROUPS_FEED_FILENAME": "../../../../../data/feeds/groups_feed.enterprise",
    "CERTIFICATE_AUTHORITIES_FILENAME": "../../../../conf/certs/cacerts.jks",
    "CHECK_SERVER_CERTIFICATE": false,
    "CONNECTOR_MANAGER_INFO": {
      "entries": [
        {
          "name": "ConnectorManager0",
          "url": "http://ent1:7886/connector-manager"
        }
      ]
    },
    "DENY_RULES_FILENAME": "../../../../conf/deny_rules.enterprise",
    "PROXY_CONF_FILENAME": "../../../../conf/proxies.enterprise",
    "TRUST_FILENAME": "../../../../conf/trust.enterprise",
    "GLOBAL_BATCH_REQUEST_TIMEOUT": 5.0,
    "GLOBAL_SINGLE_REQUEST_TIMEOUT": 2.5,
    "LATE_BINDING_ACL": false,
    "SAML_METADATA_FILENAME": "../../../../conf/saml-metadata.xml",
    "SERVER_CERTIFICATE_FILENAME": "../../../../conf/certs/server.jks",
    "SIGNING_CERTIFICATE_FILENAME": "/etc/google/certs/server.crt",
    "SIGNING_KEY_FILENAME": "/etc/google/certs/server.key",
    "SLOW_HOST_EMBARGO_PERIOD": 600,
    "SLOW_HOST_NUMBER_OF_TIMEOUTS": 100,
    "SLOW_HOST_SAMPLE_PERIOD": 300,
    "SLOW_HOST_TRACKER_ENABLED": false,
    "SLOW_HOST_TRACKER_SIZE": 100,
    "STUNNEL_PORT": 7843,
    "AUTHZ_CONFIG_FILENAME": "../../../../conf/FlexAuthz.xml",
    "CONNECTOR_MANAGER_URLS": {
      "contents": []
    }
  },
  "flexAuthz": {
    "entries": [
      {
        "urlPattern": "/",
        "authzRule": {
          "authnId": "",
          "authzMechType": "PER_URL_ACL",
          "displayName": "0",
          "timeout": -1
        },
        "uniqueRowId": "ddbb7733-d044-4012-83b5-827bea1a35a2"
      },
      {
        "urlPattern": "/",
        "authzRule": {
          "authnId": "",
          "authzMechType": "CACHE",
          "displayName": "1",
          "timeout": -1
        },
        "uniqueRowId": "04fc3208-5d23-47ef-8335-7b093df4a52c"
      },
      {
        "urlPattern": "/",
        "authzRule": {
          "authnId": "Default",
          "authzMechType": "POLICY",
          "displayName": "2",
          "timeout": -1
        },
        "uniqueRowId": "54db28bf-64bc-41f9-953e-2af5d5321662"
      },
      {
        "urlPattern": "^googleconnector://",
        "authzRule": {
          "authnId": "Default",
          "authzMechType": "CONNECTOR",
          "connectorName": "",
          "displayName": "3",
          "timeout": -1
        },
        "uniqueRowId": "a7985b36-ca45-40f6-899c-6b8ed5004071"
      },
      {
        "urlPattern": "/",
        "authzRule": {
          "authnId": "Default",
          "authzMechType": "HEADREQUEST",
          "displayName": "4",
          "timeout": -1
        },
        "uniqueRowId": "84d9c7dd-22cc-48a8-8115-3f263a16a487"
      },
      {
        "urlPattern": "/",
        "authzRule": {
          "authnId": "Default",
          "authzMechType": "FILE_SYSTEM",
          "displayName": "5",
          "timeout": -1
        },
        "uniqueRowId": "f2f58914-86ba-402a-be5a-fb14753f86aa"
      }
    ]
  }
}
          ]]></auth_domains>
          <authenticate_client_cert><![CDATA[
0
          ]]></authenticate_client_cert>
          <authenticate_onebox_server_cert><![CDATA[
0
          ]]></authenticate_onebox_server_cert>
          <authenticate_server_cert><![CDATA[
1
          ]]></authenticate_server_cert>
          <authn_artifact_service_url><![CDATA[
''
          ]]></authn_artifact_service_url>
          <authn_login_Url><![CDATA[
''
          ]]></authn_login_Url>
          <authz_service_url><![CDATA[
''
          ]]></authz_service_url>
          <autocomplete_off><![CDATA[
0
          ]]></autocomplete_off>
          <backoff_remove_index_info><![CDATA[
state {
  name: "unreachable"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 5
  backoff_interval: 24
  backoff_interval: 120
  backoff_interval: 504
}
state {
  name: "return_code_500"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 5
  backoff_interval: 24
  backoff_interval: 120
  backoff_interval: 504
}
state {
  name: "dns_perm_failure"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 5
  backoff_interval: 24
  backoff_interval: 120
  backoff_interval: 504
}
state {
  name: "dns_temp_failure"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 5
  backoff_interval: 24
  backoff_interval: 120
  backoff_interval: 504
}
state {
  name: "robots_failure"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 5
  backoff_interval: 24
  backoff_interval: 120
  backoff_interval: 504
}
state {
  name: "cookies_failure"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 5
  backoff_interval: 24
  backoff_interval: 120
  backoff_interval: 504
}
state {
  name: "robots_exclusion"
  remove_immediately: true
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 5
  backoff_interval: 24
  backoff_interval: 120
  backoff_interval: 720
}
state {
  name: "considered_duplicate"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 168
  backoff_interval: 720
  backoff_interval: 2160
}
state {
  name: "return_code_other_4xx"
  remove_immediately: true
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "not_found"
  remove_immediately: true
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "empty_doc_body"
  remove_immediately: true
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "robots_no_index"
  remove_immediately: true
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "source_of_permanent_redirect"
  remove_immediately: true
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "download_error"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "authentication_failed"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "cookie_url_too_long"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "unhandled_protocol"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "url_too_long"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "connection_failure"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "connection_reset"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "connection_closed"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "file_size_over_limit"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "redirect_no_location"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "long_redirect_chain"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "disallowed_off_domain_redirect"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "return_code_0"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "no_converter_found"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "conversion_timeout"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "conversion_error"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "unhandled_content_type"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "converter_no_body"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "indexing_error"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "remote_cookie_server_failure"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "remote_cookie_server_url_failed"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}
state {
  name: "remote_cookie_server_no_valid_cookies"
  remove_immediately: false
  failures_to_delete_from_index: 3
  edited: false
  backoff_interval: 24
  backoff_interval: 72
  backoff_interval: 168
  backoff_interval: 504
}

          ]]></backoff_remove_index_info>
          <bad_urls><![CDATA[
#blackboard webapp cmsmain
regexp:learn.*/webapps/(cms|blackboard)
#root pcfinder app
regexp:pcfinder/$
#bad document links
regexp:scu.edu.*(Awesome|Desktop|Learning%20Resources|STAFF%|Templates|rreynold|test-assets|staff.scu.ad|aejne|scu.edu.au|AppData|Cluster-|DEVsites|www.perettlaver.com)
#course.scu feeds
contains:courses.scu.edu.au/feeds
#if index.php is in the url more than once
regexp:(index.php.+){2}
#zendesk exclusions
regexp:/hc/en-us/(signin?|search)
#squiz GA php captcha exclusions
regexp:_admin$|utm_|securimage_show.php|si_websys_show.php
#pulse form control exclusions
regexp:pulse/[\?].*
contains:academicskills/numeracy/
contains:form=login
regexp:index.php/[0-9]+/[0-9]+
contains:function.ldap
contains:function.ociplogon
contains:www.scu.edu.au/www.scu.edu.au/www.scu.edu.au
contains:scu.edu.au/scu.edu.au/scu.edu.au/scu.edu.au
scu.edu.au/news/media.php?action=show_item&amp;print=on
scu.edu.au/news/monitoring.php
scu.edu.au/studyIT
http://learn.scu.edu.au/
http://staff.scu.edu.au/risk_register/
http://staff.scu.edu.au/course_units/
http://staff.scu.edu.au/news/events.php
http://staff.scu.edu.au/news/media.php
http://study.scu.edu.au/logout.php
http://studydev.scu.edu.au/logout.php
http://www.scu.edu.au/temp/
http://www.scu.edu.au/library/fulltext/detail.php
http://staff.scu.edu.au/cms/
http://staff.scu.edu.au/websys/
http://staff.scu.edu.au/it/webstats/
http://study.scu.edu.au/websys/
http://study.scu.edu.au/BBtest/
http://www.scu.edu.au/2010handbook/2010handbook-courses/
http://epubs.scu.edu.au/era/
scu.edu.au/staffdirectory/person_detail.php?person_id=
#http://study.scu.edu.au/bulletins/
#
contains:/print.php?ref=http://
regexp:coursesin[0-9]{4}/(.+)[\?]action=unit&command=load_unit
regexp:coursesin[0-9]{4}/(.+)[\?]action=matrix&command=matrix_temp_load
contains:index.php/events/
#contains:/cgi/
#.cgi$
#.pl$
#contains:/lists/
#contains:/local/
#contains:/classifieds/
contains:/frameset.php
regexpIgnoreCase:framesets\\.php$
#
#
# The following rss are from epubs
contains:/recent.rss
contains:/gallery.rss
#
#
#
# The following are popular filetype extensions - uncomment the lines to
# disable crawling them
# Microsoft Word
#regexpIgnoreCase:\\.doc$
# Microsoft Excel
#regexpIgnoreCase:\\.xls$
#regexpIgnoreCase:\\.xlw$
# Microsoft Powerpoint
#regexpIgnoreCase:\\.ppt$
# Microsoft Access
#regexpIgnoreCase:\\.mdb$
# DBase / Xbase
#regexpIgnoreCase:\\.dbf$
# Adobe Portable Document Format (PDF)
#regexpIgnoreCase:\\.pdf$
# Rich Text Format (RTF)
#regexpIgnoreCase:\\.rtf$
#Text Format (TXT)
regexpIgnoreCase:\\.txt$
# The following are some typical Microsoft SharePoint patterns that you
# may not want to crawl - uncomment the lines to disable crawling them.
#contains:_layouts
#contains:_vti_bin
#WebFldr.aspx$
#Upload.aspx$
#EditForm.aspx$
# These patterns prevent crawling of repetitive URLs
# prevents http://example.com/foo/foo/foo/.....
regexp:/([^/]*)/\\1/\\1/
# prevents http://example.com/foo/bar/foo/bar/....
regexp:/([^/]*)/([^/]*)/\\1/\\2/
# prevents http://example.com/foo?bar=1&bar=1&bar=1...
regexp:&([^&]*)&\\1&\\1
##############################################
# Filetypes we don't crawl
# Images
.gif$
.jpg$
.jpeg$
.png$
# Used instead of jpeg sometimes
.jpe$
.pcx$
.tif$
.tiff$
.bmp$
.ico$
# Binaries/Executables
regexpIgnoreCase:\\.dll$
regexpIgnoreCase:\\.exe$
.a$
.o$
.obj$
.pyc$
.pdb$
.so$
.bin$
.class$
.jnilib$
# Font types
# true type font
.ttf$
.pfb$
.pfm$
.afm$
# Mac files
.hqx$
.sea$
.dmg$
# Adobe
#.ps$
#.ps.gz$
#.ps.Z$
.eps$
.ai$
.psd$
# Media
.ram$
.wav$
.avi$
.mid$
.mov$
.mpg$
.mpeg$
.mp3$
.ogg$
.3gp$
.m4a$
.m4v$
.wma$
.wmv$
.wrl$
# Databases
.dat$
.dta$
.log$
.lst$
# Archives, except .ps.gz, .ps.Z
.arc$
.bz2$
.jar$
.war$
.ear$
.arj$
.cab$
.rar$
.rpm$
.deb$
.tar$
.zip$
.tar.gz$
.upp$
.tgz$
.sdd$
regexpIgnoreCase:([^.]..|[^p].|[^s])[.]z$
regexpIgnoreCase:([^.]..|[^p].|[^s])[.]gz$
.lzh$
.msi$
# Linux distribution files
.hdr$
.iso$
.img$
.gpg$
# Google
.gg$
.kml$
.kmz$
.skb$
.skp$
# Others
.gbk$
.fac$
.ghg$
.mdic$
.chm$
.mht$
# Apache directory listings
/?S=A$
/?S=D$
/?D=A$
/?D=D$
/?M=A$
/?M=D$
/?N=A$
/?N=D$
/?C=N&O=A$
/?C=M&O=A$
/?C=S&O=A$
/?C=D&O=A$
/?C=N&O=D$
/?C=M&O=D$
/?C=S&O=D$
/?C=D&O=D$
/?C=N;O=A$
/?C=M;O=A$
/?C=S;O=A$
/?C=D;O=A$
/?C=N;O=D$
/?C=M;O=D$
/?C=S;O=D$
/?C=D;O=D$
# Invalid characters
contains:\001
contains:\002
contains:\003
contains:\004
contains:\005
contains:\006
contains:\007
contains:\010
contains:\011
contains:\012
contains:\013
contains:\014
contains:\015
contains:\016
contains:\017
contains:\020
contains:\021
contains:\022
contains:\023
contains:\024
contains:\025
contains:\026
contains:\027
contains:\030
contains:\031
contains:\032
contains:\033
contains:\034
contains:\035
contains:\036
contains:\037
contains:\040
contains:\177
# Invalid endings
.html/$
.htm/$
.phtml/$
.ghtml/$
.asp/$
.jsp/$
.shtml/$
# Invalid endings
!/
"/
$/
%/
&/
'/
(/
)/
+/
,/
./
</
=/
>/
{/
|/
}/
~/
[/
unc:///
]/
^/
`/

          ]]></bad_urls>
          <basic_auth_challenge_tpye><![CDATA[
'auto'
          ]]></basic_auth_challenge_tpye>
          <batch_crawl_mode><![CDATA[
0
          ]]></batch_crawl_mode>
          <batch_crawl_schedule><![CDATA[
jA0EBwMCgOv6jPF+gzTB0jUBURl9eNKYci8vcY9Orig1ypKuqTHs7Dff5j7T3EK4
/jn1GsAmB1Wvr8LhubOsYMfbAhdqKA==
=0fFH

          ]]></batch_crawl_schedule>
          <batch_crawl_schedule_bitmap><![CDATA[
jA0EBwMCShR4M+n9weXB0lIBwaTD23osFQofGZac6ZllRCARv00uD8lZJWS+nyeL
SPv7kn8N0hFAHqV+aVuoQ4m4WRkWhNrKbyYZ6yvTzQMu/ScPnXh8nKbjqbxuG9Kc
AQF9
=B5E6

          ]]></batch_crawl_schedule_bitmap>
          <blacklist_max_size><![CDATA[
8388608
          ]]></blacklist_max_size>
          <case_of_stored_entities><![CDATA[
'AsAppears'
          ]]></case_of_stored_entities>
          <cert_protected_docs_public><![CDATA[
1
          ]]></cert_protected_docs_public>
          <certificates Count="217">
              <file Name="00673b5b.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEIDCCAwigAwIBAgIQNE7VVyDV7exJ9C/ON9srbTANBgkqhkiG9w0BAQUFADCBqTELMAkGA1UE
BhMCVVMxFTATBgNVBAoTDHRoYXd0ZSwgSW5jLjEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2
aWNlcyBEaXZpc2lvbjE4MDYGA1UECxMvKGMpIDIwMDYgdGhhd3RlLCBJbmMuIC0gRm9yIGF1dGhv
cml6ZWQgdXNlIG9ubHkxHzAdBgNVBAMTFnRoYXd0ZSBQcmltYXJ5IFJvb3QgQ0EwHhcNMDYxMTE3
MDAwMDAwWhcNMzYwNzE2MjM1OTU5WjCBqTELMAkGA1UEBhMCVVMxFTATBgNVBAoTDHRoYXd0ZSwg
SW5jLjEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lvbjE4MDYGA1UECxMv
KGMpIDIwMDYgdGhhd3RlLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxHzAdBgNVBAMT
FnRoYXd0ZSBQcmltYXJ5IFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCs
oPD7gFnUnMekz52hWXMJEEUMDSxuaPFsW0hoSVk3/AszGcJ3f8wQLZU0HObrTQmnHNK4yZc2AreJ
1CRfBsDMRJSUjQJib+ta3RGNKJpchJAQeg29dGYvajig4tVUROsdB58Hum/u6f1OCyn1PoSgAfGc
q/gcfomk6KHYcWUNo1F77rzSImANuVud37r8UVsLr5iy6S7pBOhih94ryNdOwUxkHt3Ph1i6Sk/K
aAcdHJ1KxtUvkcx8cXIcxcBn6zL9yZJclNqFwJu/U30rCfSMnZEfl2pSy94JNqR32HuHUETVPm4p
afs5SSYeCaWAe0At6+gnhcn+Yf1+5nyXHdWdAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYD
VR0PAQH/BAQDAgEGMB0GA1UdDgQWBBR7W0XPr87Lev0xkhpqtvNG61dIUDANBgkqhkiG9w0BAQUF
AAOCAQEAeRHAS7ORtvzw6WfUDW5FvlXok9LOAz/t2iWwHVfLHjp2oEzsUHboZHIMpKnxuIvW1oeE
uzLlQRHAd9mzYJ3rG9XRbkREqaYB7FViHXe4XI5ISXycO1cRrK1zN44veFyQaEfZYGDm/Ac9IiAX
xPcW6cTYcvnIc3zfFi8VqT79aie2oetaupgf1eNNZAqdE8hhuvU5HIe6uL17In/2/qxAeeWsEG89
jxt5dovEN7MhGITlNgDrYyCZuen+MwS7QcjBAvlEYyCegc5C09Y/LHbTY5xZ3Y+m4Q6gLkH3LpVH
z7z9M/P2C2F+fpErgUfCJzDupxBdN49cOSvkBPB7jVaMaA==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="02b73561.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEPzCCAyegAwIBAgIBATANBgkqhkiG9w0BAQUFADB+MQswCQYDVQQGEwJHQjEbMBkGA1UECAwS
R3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRowGAYDVQQKDBFDb21vZG8gQ0Eg
TGltaXRlZDEkMCIGA1UEAwwbU2VjdXJlIENlcnRpZmljYXRlIFNlcnZpY2VzMB4XDTA0MDEwMTAw
MDAwMFoXDTI4MTIzMTIzNTk1OVowfjELMAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFu
Y2hlc3RlcjEQMA4GA1UEBwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxJDAi
BgNVBAMMG1NlY3VyZSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZIhvcNAQEBBQADggEP
ADCCAQoCggEBAMBxM4KK0HDrc4eCQNUd5MvJDkKQ+d40uaG6EfQlhfPMcm3ye5drswfxdySRXyWP
9nQ95IDC+DwN879A6vfIUtFyb+/Iq0G4bi4XKpVpDM3SHpR7LZQdqnXXs5jLrLxkU0C8j6ysNstc
rbvd4JQX7NFc0L/vpZXJkMWwrPsbQ996CF23uPJAGysnnlDOXmWCiIxe004MeuoIkbY2qitC++rC
oznl2yY4rYsK7hljxxwk3wN42ubqwUcaCwtGCd0C/N7Lh1/XMGNooa7cMqG6vv5Eq2i2pRcV/b3V
p6ea5EQz6YiO/O1R65NxTq0B50SOqy3LqP4BSUjwwN3HaNiS/j0CAwEAAaOBxzCBxDAdBgNVHQ4E
FgQUPNiTiMLAggnMAZkGkyDpnnAJY08wDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8w
gYEGA1UdHwR6MHgwO6A5oDeGNWh0dHA6Ly9jcmwuY29tb2RvY2EuY29tL1NlY3VyZUNlcnRpZmlj
YXRlU2VydmljZXMuY3JsMDmgN6A1hjNodHRwOi8vY3JsLmNvbW9kby5uZXQvU2VjdXJlQ2VydGlm
aWNhdGVTZXJ2aWNlcy5jcmwwDQYJKoZIhvcNAQEFBQADggEBAIcBbSMdflsXfcFhMs+P5/OKlFlm
4J4oqF7Tt/Q05qo5spcWxYJvMqTpjOev/e/C6LlLqqP05tqNZSH7uoDrJiiFGv45jN5bBAS0VPmj
Z55B+glSzAVIqMk/IQQezkhr/IXownuvf7fM+F86/TXGDe+X3EyrEeFryzHRbPtIgKvcnDe4IRRL
DXE97IMzbtFuMhbsmMcWi1mmNKsFVy2T96oTy9IT4rcuO81rUBcJaD61JlfutuC23bkpgHl9j6Pw
pCikFcSF9CfUa7/lXORlAnZUtOM3ZiTTGWHIUhDlizeauan5Hb/qmZJhlv8BzaFfDbxxvA6sCx1H
RR3B7Hzs/Sk=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="03f2b8cf.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFWDCCA0CgAwIBAgIQUHBrzdgT/BtOOzNy0hFIjTANBgkqhkiG9w0BAQsFADBGMQswCQYDVQQG
EwJDTjEaMBgGA1UEChMRV29TaWduIENBIExpbWl0ZWQxGzAZBgNVBAMMEkNBIOayg+mAmuagueiv
geS5pjAeFw0wOTA4MDgwMTAwMDFaFw0zOTA4MDgwMTAwMDFaMEYxCzAJBgNVBAYTAkNOMRowGAYD
VQQKExFXb1NpZ24gQ0EgTGltaXRlZDEbMBkGA1UEAwwSQ0Eg5rKD6YCa5qC56K+B5LmmMIICIjAN
BgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA0EkhHiX8h8EqwqzbdoYGTufQdDTc7WU1/FDWiD+k
8H/rD195L4mx/bxjWDeTmzj4t1up+thxx7S8gJeNbEvxUNUqKaqoGXqW5pWOdO2XCld19AXbbQs5
uQF/qvbW2mzmBeCkTVL829B0txGMe41P/4eDrv8FAxNXUDf+jJZSEExfv5RxadmWPgxDT74wwJ85
dE8GRV2j1lY5aAfMh09Qd5Nx2UQIsYo06Yms25tO4dnkUkWMLhQfkWsZHWgpLFbE4h4TV2TwYeO5
Ed+w4VegG63XX9Gv2ystP9Bojg/qnw+LNVgbExz03jWhCl3W6t8Sb8D7aQdGctyB9gQjF+BNdeFy
b7Ao65vh4YOhn0pdr8yb+gIgthhid5E7o9Vlrdx8kHccREGkSovrlXLp9glk3Kgtn3R46MGiCWOc
76DbT52VqyBPt7D3h1ymoOQ3OMdc4zUPLK2jgKLsLl3Az+2LBcLmc272idX10kaO6m1jGx6KyX2m
+Jzr5dVjhU1zZmkR/sgO9MHHZklTfuQZa/HpelmjbX7FF+Ynxu8b22/8DU0GAbQOXDBGVWCvOGU6
yke6rCzMRh+yRpY/8+0mBe53oWprfi1tWFxK1I5nuPHa1UaKJ/kR8slC/k7e3x9cxKSGhxYzoacX
GKUN5AXlK8IrC6KVkLn9YDxOiT7nnO4fuwECAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgEGMA8GA1Ud
EwEB/wQFMAMBAf8wHQYDVR0OBBYEFOBNv9ybQV0T6GTwp+kVpOGBwboxMA0GCSqGSIb3DQEBCwUA
A4ICAQBqinA4WbbaixjIvirTthnVZil6Xc1bL3McJk6jfW+rtylNpumlEYOnOXOvEESS5iVdT2H6
yAa+Tkvv/vMx/sZ8cApBWNromUuWyXi8mHwCKe0JgOYKOoICKuLJL8hWGSbueBwj/feTZU7n85iY
r83d2Z5AiDEoOqsuC7CsDCT6eiaY8xJhEPRdF/d+4niXVOKM6Cm6jBAyvd0zaziGfjk9DgNyp115
j0WKWa5bIW4xRtVZjc8VX90xJc/bYNaBRHIpAlf2ltTW/+op2znFuCyKGo3Oy+dCMYYFaA6eFN0A
kLppRQjbbpCBhqcqBT/mhDn4t/lXX0ykeVoQDF7Va/81XwVRHmyjdanPUIPTfPRm94KNPQx96N97
qA4bLJyuQHCH2u2nFoJavjVsIE4iYdm8UXrNemHcSxH5/mc0zy4EZmFcV5cjjPOGG0jfKq+nwf/Y
jj4Du9gqsPoUJbJRa4ZDhS4HIxaAjUz7tGM7zMN07RujHv41D198HRaG9Q7DlfEvr10lO1Hm13ZB
ONFLAzkopR6RctR9q5czxNM+4Gm2KHmgCY0c0f9BckgG/Jou5yD5m6Leie2uPAmvylezkolwQOQv
T8Jwg0DXJCxr5wkf09XHwQj02w47HAcLQxGEIYbpgNR12KvxAmLBsX5VYc8T1yaw15zLKYs4SgsO
kI26oQ==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="0481cb65.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIF5jCCA86gAwIBAgIBATANBgkqhkiG9w0BAQUFADCBgzELMAkGA1UEBhMCVVMx
HTAbBgNVBAoTFEFPTCBUaW1lIFdhcm5lciBJbmMuMRwwGgYDVQQLExNBbWVyaWNh
IE9ubGluZSBJbmMuMTcwNQYDVQQDEy5BT0wgVGltZSBXYXJuZXIgUm9vdCBDZXJ0
aWZpY2F0aW9uIEF1dGhvcml0eSAyMB4XDTAyMDUyOTA2MDAwMFoXDTM3MDkyODIz
NDMwMFowgYMxCzAJBgNVBAYTAlVTMR0wGwYDVQQKExRBT0wgVGltZSBXYXJuZXIg
SW5jLjEcMBoGA1UECxMTQW1lcmljYSBPbmxpbmUgSW5jLjE3MDUGA1UEAxMuQU9M
IFRpbWUgV2FybmVyIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgMjCCAiIw
DQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBALQ3WggWmRToVbEbJGv8x4vmh6mJ
7ouZzU9AhqS2TcnZsdw8TQ2FTBVsRotSeJ/4I/1n9SQ6aF3Q92RhQVSji6UI0ilb
m2BPJoPRYxJWSXakFsKlnUWsi4SVqBax7J/qJBrvuVdcmiQhLE0OcR+mrF1FdAOY
xFSMFkpBd4aVdQxHAWZg/BXxD+r1FHjHDtdugRxev17nOirYlxcwfACtCJ0zr7iZ
YYCLqJV+FNwSbKTQ2O9ASQI2+W6p1h2WVgSysy0WVoaP2SBXgM1nEG2wTPDaRrbq
JS5Gr42whTg0ixQmgiusrpkLjhTXUr2eacOGAgvqdnUxCc4zGSGFQ+aJLZ8lN2fx
I2rSAG2X+Z/nKcrdH9cG6rjJuQkhn8g/BsXS6RJGAE57COtCPStIbp1n3UsC5ETz
kxmlJ85per5n0/xQpCyrw2u544BMzwVhSyvcG7mm0tCq9Stz+86QNZ8MUhy/XCFh
EVsVS6kkUfykXPcXnbDS+gfpj1bkGoxoigTTfFrjnqKhynFbotSg5ymFXQNoKk/S
Btc9+cMDLz9l+WceR0DTYw/j1Y75hauXTLPXJuuWCpTehTacyH+BCQJJKg71ZDIM
gtG6aoIbs0t0EfOMd9afv9w3pKdVBC/UMejTRrkDfNoSTllkt1ExMVCgyhwn2RAu
rda9EGYrw7AiShJbAgMBAAGjYzBhMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE
FE9pbQN+nZ8HGEO8txBO1b+pxCAoMB8GA1UdIwQYMBaAFE9pbQN+nZ8HGEO8txBO
1b+pxCAoMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQUFAAOCAgEAO/Ouyugu
h4X7ZVnnrREUpVe8WJ8kEle7+z802u6teio0cnAxa8cZmIDJgt43d15Ui47y6mdP
yXSEkVYJ1eV6moG2gcKtNuTxVBFT8zRFASbI5Rq8NEQh3q0l/HYWdyGQgJhXnU7q
7C+qPBR7V8F+GBRn7iTGvboVsNIYvbdVgaxTwOjdaRITQrcCtQVBynlQboIOcXKT
RuidDV29rs4prWPVVRaAMCf/drr3uNZK49m1+VLQTkCpx+XCMseqdiThawVQ68W/
ClTluUI8JPu3B5wwn3la5uBAUhX0/Kr0VvlEl4ftDmVyXr4m+02kLQgH3thcoNyB
M5kYJRF3p+v9WAksmWsbivNSPxpNSGDxoPYzAlOL7SUJuA0t7Zdz7NeWH45gDtoQ
my8YJPamTQr5O8t1wswvziRpyQoijlmn94IM19drNZxDAGrElWe6nEXLuA4399xO
AU++CrYD062KRffaJ00psUjf5BHklka9bAI+1lHIlRcBFanyqqryvy9lG2/QuRqT
9Y41xICHPpQvZuTpqP9BnHAqTyo5GJUefvthATxRCC4oGKQWDzH9OmwjkyB24f0H
hdFbP9IcczLd+rn4jM8Ch3qaluTtT4mNU0OrDhPAARW0eTjb/G49nlG2uBOLZ8/5
fNkiHfZdxRwBL5joeiQYvITX+txyW/fBOmg=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="052e396b.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEHjCCAwagAwIBAgIBATANBgkqhkiG9w0BAQUFADBnMQswCQYDVQQGEwJTRTEUMBIGA1UEChML
QWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3b3JrMSMwIQYDVQQDExpBZGRU
cnVzdCBRdWFsaWZpZWQgQ0EgUm9vdDAeFw0wMDA1MzAxMDQ0NTBaFw0yMDA1MzAxMDQ0NTBaMGcx
CzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRkVHJ1c3QgVFRQ
IE5ldHdvcmsxIzAhBgNVBAMTGkFkZFRydXN0IFF1YWxpZmllZCBDQSBSb290MIIBIjANBgkqhkiG
9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5B6a/twJWoekn0e+EV+vhDTbYjx5eLfpMLXsDBwqxBb/4Oxx
64r1EW7tTw2R0hIYLUkVAcKkIhPHEWT/IhKauY5cLwjPcWqzZwFZ8V1G87B4pfYOQnrjfxvM0PC3
KP0q6p6zsLkEqv32x7SxuCqg+1jxGaBvcCV+PmlKfw8i2O+tCBGaKZnhqkRFmhJePp1tUvznoD1o
L/BLcHwTOK28FSXx1s6rosAx1i+f4P8UWfyEk9mHfExUE+uf0S0R+Bg6Ot4l2ffTQO2kBhLEO+GR
wVY18BTcZTYJbqukB8c10cIDMzZbdSZtQvESa0NvS3GU+jQd7RNuyoB/mC9suWXY6QIDAQABo4HU
MIHRMB0GA1UdDgQWBBQ5lYtii1zJ1IC6WA+XPxUIQ8yYpzALBgNVHQ8EBAMCAQYwDwYDVR0TAQH/
BAUwAwEB/zCBkQYDVR0jBIGJMIGGgBQ5lYtii1zJ1IC6WA+XPxUIQ8yYp6FrpGkwZzELMAkGA1UE
BhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMR0wGwYDVQQLExRBZGRUcnVzdCBUVFAgTmV0d29y
azEjMCEGA1UEAxMaQWRkVHJ1c3QgUXVhbGlmaWVkIENBIFJvb3SCAQEwDQYJKoZIhvcNAQEFBQAD
ggEBABmrder4i2VhlRO6aQTvhsoToMeqT2QbPxj2qC0sVY8FtzDqQmodwCVRLae/DLPt7wh/bDxG
GuoYQ992zPlmhpwsaPXpF/gxsxjE1kh9I0xowX67ARRvxdlu3rsEQmr49lx95dr6h+sNNVJn0J6X
dgWTP5XHAeZpVTh/EGGZyeNfpso+gmNIquIISD6q8rKFYqa0p9m9N5xotS1WfbC3P6CxB9bpT9ze
RXEwMn8bLgn5v1Kh7sKAPgZcLlVAwRv1cEWw3F369nJad9Jjzc9YiQBCYz95OdBEsIJuQRno3eDB
iFrRHnGTHyQwdOUeqN48Jzd/g66ed8/wMLH/S5noxqE=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="08aef7bb.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEvTCCA6WgAwIBAgIBATANBgkqhkiG9w0BAQUFADCBhTELMAkGA1UEBhMCVVMxIDAeBgNVBAoM
F1dlbGxzIEZhcmdvIFdlbGxzU2VjdXJlMRwwGgYDVQQLDBNXZWxscyBGYXJnbyBCYW5rIE5BMTYw
NAYDVQQDDC1XZWxsc1NlY3VyZSBQdWJsaWMgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcN
MDcxMjEzMTcwNzU0WhcNMjIxMjE0MDAwNzU0WjCBhTELMAkGA1UEBhMCVVMxIDAeBgNVBAoMF1dl
bGxzIEZhcmdvIFdlbGxzU2VjdXJlMRwwGgYDVQQLDBNXZWxscyBGYXJnbyBCYW5rIE5BMTYwNAYD
VQQDDC1XZWxsc1NlY3VyZSBQdWJsaWMgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDub7S9eeKPCCGeOARBJe+rWxxTkqxtnt3CxC5FlAM1
iGd0V+PfjLindo8796jE2yljDpFoNoqXjopxaAkH5OjUDk/41itMpBb570OYj7OeUt9tkTmPOL13
i0Nj67eT/DBMHAGTthP796EfvyXhdDcsHqRePGj4S78NuR4uNuip5Kf4D8uCdXw1LSLWwr8L87T8
bJVhHlfXBIEyg1J55oNjz7fLY4sR4r1e6/aN7ZVyKLSsEmLpSjPmgzKuBXWVvYSV2ypcm44uDLiB
K0HmOFafSZtsdvqKXfcBeYF8wYNABf5x/Qw/zE5gCQ5lRxAvAcAFP4/4s0HvWkJ+We/SlwxlAgMB
AAGjggE0MIIBMDAPBgNVHRMBAf8EBTADAQH/MDkGA1UdHwQyMDAwLqAsoCqGKGh0dHA6Ly9jcmwu
cGtpLndlbGxzZmFyZ28uY29tL3dzcHJjYS5jcmwwDgYDVR0PAQH/BAQDAgHGMB0GA1UdDgQWBBQm
lRkQ2eihl5H/3BnZtQQ+0nMKajCBsgYDVR0jBIGqMIGngBQmlRkQ2eihl5H/3BnZtQQ+0nMKaqGB
i6SBiDCBhTELMAkGA1UEBhMCVVMxIDAeBgNVBAoMF1dlbGxzIEZhcmdvIFdlbGxzU2VjdXJlMRww
GgYDVQQLDBNXZWxscyBGYXJnbyBCYW5rIE5BMTYwNAYDVQQDDC1XZWxsc1NlY3VyZSBQdWJsaWMg
Um9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHmCAQEwDQYJKoZIhvcNAQEFBQADggEBALkVsUSRzCPI
K0134/iaeycNzXK7mQDKfGYZUMbVmO2rvwNa5U3lHshPcZeG1eMd/ZDJPHV3V3p9+N701NX3leZ0
bh08rnyd2wIDBSxxSyU+B+NemvVmFymIGjifz6pBA4SXa5M4esowRBskRDPQ5NHcKDj0E0M1NSlj
qHyita04pO2t/caaH/+Xc/77szWnk4bGdpEA5qxRFsQnMlzbc9qlk1eOPm01JghZ1edE13YgY+es
E2fDbbFwRnzVlhE9iW9dqKHrjQrawx0zbKPqZxmamX9LPYNRKh3KL4YMon4QLSvUFpULB6ouFJJJ
tylv2G0xffX8oRAHh84vWdw+WNs=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="0c364b2d.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIE7TCCBFagAwIBAgIEOAOR7jANBgkqhkiG9w0BAQQFADCByTELMAkGA1UEBhMC
VVMxFDASBgNVBAoTC0VudHJ1c3QubmV0MUgwRgYDVQQLFD93d3cuZW50cnVzdC5u
ZXQvQ2xpZW50X0NBX0luZm8vQ1BTIGluY29ycC4gYnkgcmVmLiBsaW1pdHMgbGlh
Yi4xJTAjBgNVBAsTHChjKSAxOTk5IEVudHJ1c3QubmV0IExpbWl0ZWQxMzAxBgNV
BAMTKkVudHJ1c3QubmV0IENsaWVudCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAe
Fw05OTEwMTIxOTI0MzBaFw0xOTEwMTIxOTU0MzBaMIHJMQswCQYDVQQGEwJVUzEU
MBIGA1UEChMLRW50cnVzdC5uZXQxSDBGBgNVBAsUP3d3dy5lbnRydXN0Lm5ldC9D
bGllbnRfQ0FfSW5mby9DUFMgaW5jb3JwLiBieSByZWYuIGxpbWl0cyBsaWFiLjEl
MCMGA1UECxMcKGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDEzMDEGA1UEAxMq
RW50cnVzdC5uZXQgQ2xpZW50IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIGdMA0G
CSqGSIb3DQEBAQUAA4GLADCBhwKBgQDIOpleMRffrCdvkHvkGf9FozTC28GoT/Bo
6oT9n3V5z8GKUZSvx1cDR2SerYIbWtp/N3hHuzeYEpbOxhN979IMMFGpOZ5V+Pux
5zDeg7K6PvHViTs7hbqqdCz+PzFur5GVbgbUB01LLFZHGARS2g4Qk79jkJvh34zm
AqTmT173iwIBA6OCAeAwggHcMBEGCWCGSAGG+EIBAQQEAwIABzCCASIGA1UdHwSC
ARkwggEVMIHkoIHhoIHepIHbMIHYMQswCQYDVQQGEwJVUzEUMBIGA1UEChMLRW50
cnVzdC5uZXQxSDBGBgNVBAsUP3d3dy5lbnRydXN0Lm5ldC9DbGllbnRfQ0FfSW5m
by9DUFMgaW5jb3JwLiBieSByZWYuIGxpbWl0cyBsaWFiLjElMCMGA1UECxMcKGMp
IDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDEzMDEGA1UEAxMqRW50cnVzdC5uZXQg
Q2xpZW50IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MQ0wCwYDVQQDEwRDUkwxMCyg
KqAohiZodHRwOi8vd3d3LmVudHJ1c3QubmV0L0NSTC9DbGllbnQxLmNybDArBgNV
HRAEJDAigA8xOTk5MTAxMjE5MjQzMFqBDzIwMTkxMDEyMTkyNDMwWjALBgNVHQ8E
BAMCAQYwHwYDVR0jBBgwFoAUxPucKXuXzUyW/O5bs8qZdIuV6kwwHQYDVR0OBBYE
FMT7nCl7l81MlvzuW7PKmXSLlepMMAwGA1UdEwQFMAMBAf8wGQYJKoZIhvZ9B0EA
BAwwChsEVjQuMAMCBJAwDQYJKoZIhvcNAQEEBQADgYEAP66K8ddmAwWePvrqHEa7
pFuPeJoSSJn59DXeDDYHAmsQOokUgZwxpnyyQbJq5wcBoUv5nyU7lsqZwz6hURzz
wy5E97BnRqqS5TvaHBkUODDV4qIxJS7x7EU47fgGWANzYrAQMY9Av2TgXD7FTx/a
EkP/TOYGJqibGapEPHayXOw=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="0d188d89.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDtjCCAp6gAwIBAgIQRJmNPMADJ72cdpW56tustTANBgkqhkiG9w0BAQUFADB1MQswCQYDVQQG
EwJUUjEoMCYGA1UEChMfRWxla3Ryb25payBCaWxnaSBHdXZlbmxpZ2kgQS5TLjE8MDoGA1UEAxMz
ZS1HdXZlbiBLb2sgRWxla3Ryb25payBTZXJ0aWZpa2EgSGl6bWV0IFNhZ2xheWljaXNpMB4XDTA3
MDEwNDExMzI0OFoXDTE3MDEwNDExMzI0OFowdTELMAkGA1UEBhMCVFIxKDAmBgNVBAoTH0VsZWt0
cm9uaWsgQmlsZ2kgR3V2ZW5saWdpIEEuUy4xPDA6BgNVBAMTM2UtR3V2ZW4gS29rIEVsZWt0cm9u
aWsgU2VydGlmaWthIEhpem1ldCBTYWdsYXlpY2lzaTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
AQoCggEBAMMSIJ6wXgBljU5Gu4Bc6SwGl9XzcslwuedLZYDBS75+PNdUMZTe1RK6UxYC6lhj71vY
8+0qGqpxSKPcEC1fX+tcS5yWCEIlKBHMilpiAVDV6wlTL/jDj/6z/P2douNffb7tC+Bg62nsM+3Y
jfsSSYMAyYuXjDtzKjKzEve5TfL0TW3H5tYmNwjy2f1rXKPlSFxYvEK+A1qBuhw1DADT9SN+cTAI
JjjcJRFHLfO6IxClv7wC90Nex/6wN1CZew+TzuZDLMN+DfIcQ2Zgy2ExR4ejT669VmxMvLz4Bcpk
9Ok0oSy1c+HCPujIyTQlCFzz7abHlJ+tiEMl1+E5YP6sOVkCAwEAAaNCMEAwDgYDVR0PAQH/BAQD
AgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFJ/uRLOU1fqRTy7ZVZoEVtstxNulMA0GCSqG
SIb3DQEBBQUAA4IBAQB/X7lTW2M9dTLn+sR0GstG30ZpHFLPqk/CaOv/gKlR6D1id4k9CnU58W5d
F4dvaAXBlGzZXd/aslnLpRCKysw5zZ/rTt5S/wzw9JKp8mxTq5vSR6AfdPebmvEvFZ96ZDAYBzwq
D2fK/A+JYZ1lpTzlvBNbCNvj/+27BrtqBrF6T2XGgv0enIu1De5Iu7i9qgi0+6N8y5/NkHZchpZ4
Vwpm+Vganf2XKWDeEaaQHBkc7gGWIjQ0LpH5t8Qn0Xvmv/uARFoW5evg1Ao4vOSR49XrXMGs3xtq
fJ7lddK2l4fbzIcrQzqECK+rPNv3PGYxhrCdU3nt+CPeQuMtgvEP5fqX
-----END CERTIFICATE-----

              ]]></file>
              <file Name="0dbd0096.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIID5jCCAs6gAwIBAgIBATANBgkqhkiG9w0BAQUFADCBgzELMAkGA1UEBhMCVVMx
HTAbBgNVBAoTFEFPTCBUaW1lIFdhcm5lciBJbmMuMRwwGgYDVQQLExNBbWVyaWNh
IE9ubGluZSBJbmMuMTcwNQYDVQQDEy5BT0wgVGltZSBXYXJuZXIgUm9vdCBDZXJ0
aWZpY2F0aW9uIEF1dGhvcml0eSAxMB4XDTAyMDUyOTA2MDAwMFoXDTM3MTEyMDE1
MDMwMFowgYMxCzAJBgNVBAYTAlVTMR0wGwYDVQQKExRBT0wgVGltZSBXYXJuZXIg
SW5jLjEcMBoGA1UECxMTQW1lcmljYSBPbmxpbmUgSW5jLjE3MDUGA1UEAxMuQU9M
IFRpbWUgV2FybmVyIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgMTCCASIw
DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJnej8Mlo2k06AX3dLm/WpcZuS+U
0pPlLYnKhHw/EEMbjIt8hFj4JHxIzyr9wBXZGH6EGhfT257XyuTZ16pYUYfw8ItI
TuLCxFlpMGK2MKKMCxGZYTVtfu/FsRkGIBKOQuHfD5YQUqjPnF+VFNivO3ULMSAf
RC+iYkGzuxgh28pxPIzstrkNn+9R7017EvILDOGsQI93f7DKeHEMXRZxcKLXwjqF
zQ6axOAAsNUl6twr5JQtOJyJQVdkKGUZHLZEtMgxa44Be3ZZJX8VHIQIfHNlIAqh
BC4aMqiaILGcLCFZ5/vP7nAtCMpjPiybkxlqpMKX/7eGV4iFbJ4VFitNLLMCAwEA
AaNjMGEwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUoTYwFsuGkABFgFOxj8jY
PXy+XxIwHwYDVR0jBBgwFoAUoTYwFsuGkABFgFOxj8jYPXy+XxIwDgYDVR0PAQH/
BAQDAgGGMA0GCSqGSIb3DQEBBQUAA4IBAQCKIBilvrMvtKaEAEAwKfq0FHNMeUWn
9nDg6H5kHgqVfGphwu9OH77/yZkfB2FK4V1Mza3u0FIy2VkyvNp5ctZ7CegCgTXT
Ct8RHcl5oIBN/lrXVtbtDyqvpxh1MwzqwWEFT2qaifKNuZ8u77BfWgDrvq2g+EQF
Z7zLBO+eZMXpyD8Fv8YvBxzDNnGGyjhmSs3WuEvGbKeXO/oTLW4jYYehY0KswsuX
n2Fozy1MBJ3XJU8KDk2QixhWqJNIV9xvrr2eZ1d3iVCzvhGbRWeDhhmH05i9CBoW
H1iCC+GWaQVLjuyDUTEH1dSf/1l7qG6Fz9NLqUmwX7A5KGgOc90lmt4S
-----END CERTIFICATE-----

              ]]></file>
              <file Name="0e82f83a.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDITCCAoqgAwIBAgIBADANBgkqhkiG9w0BAQQFADCByzELMAkGA1UEBhMCWkEx
FTATBgNVBAgTDFdlc3Rlcm4gQ2FwZTESMBAGA1UEBxMJQ2FwZSBUb3duMRowGAYD
VQQKExFUaGF3dGUgQ29uc3VsdGluZzEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBT
ZXJ2aWNlcyBEaXZpc2lvbjEhMB8GA1UEAxMYVGhhd3RlIFBlcnNvbmFsIEJhc2lj
IENBMSgwJgYJKoZIhvcNAQkBFhlwZXJzb25hbC1iYXNpY0B0aGF3dGUuY29tMB4X
DTk2MDEwMTAwMDAwMFoXDTIwMTIzMTIzNTk1OVowgcsxCzAJBgNVBAYTAlpBMRUw
EwYDVQQIEwxXZXN0ZXJuIENhcGUxEjAQBgNVBAcTCUNhcGUgVG93bjEaMBgGA1UE
ChMRVGhhd3RlIENvbnN1bHRpbmcxKDAmBgNVBAsTH0NlcnRpZmljYXRpb24gU2Vy
dmljZXMgRGl2aXNpb24xITAfBgNVBAMTGFRoYXd0ZSBQZXJzb25hbCBCYXNpYyBD
QTEoMCYGCSqGSIb3DQEJARYZcGVyc29uYWwtYmFzaWNAdGhhd3RlLmNvbTCBnzAN
BgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAvLyTU23AUE+CFeZIlDWmWr5vQvoPR+53
dXLdjUmbllegeNTKP1GzaQuRdhciB5dqxFGTS+CN7zeVoQxN2jSQHReJl+A1OFdK
wPQIcOk8RHtQfmGakOMj04gRRif1CwcOu93RfyAKiLlWCy4cgNrx454p7xS9CkT7
G1sY0b8jkyECAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQQF
AAOBgQAt4plrsD16iddZopQBHyvdEktTwq1/qqcAXJFAVyVKOKqEcLnZgA+le1z7
c8a914phXAPjLSeoF+CEhULcXpvGt7Jtu3Sv5D/Lp7ew4F2+eIMllNLbgQ95B21P
9DkVWlIBe94y1k049hJcBlDfBVu9FEuh3ym6O0GN92NWod8isQ==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="10531352.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIID7zCCAtegAwIBAgIBADANBgkqhkiG9w0BAQsFADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgT
B0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9s
b2dpZXMsIEluYy4xOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRl
IEF1dGhvcml0eSAtIEcyMB4XDTA5MDkwMTAwMDAwMFoXDTM3MTIzMTIzNTk1OVowgZgxCzAJBgNV
BAYTAlVTMRAwDgYDVQQIEwdBcml6b25hMRMwEQYDVQQHEwpTY290dHNkYWxlMSUwIwYDVQQKExxT
dGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTswOQYDVQQDEzJTdGFyZmllbGQgU2VydmljZXMg
Um9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
AQoCggEBANUMOsQq+U7i9b4Zl1+OiFOxHz/Lz58gE20pOsgPfTz3a3Y4Y9k2YKibXlwAgLIvWX/2
h/klQ4bnaRtSmpDhcePYLQ1Ob/bISdm28xpWriu2dBTrz/sm4xq6HZYuajtYlIlHVv8loJNwU4Pa
hHQUw2eeBGg6345AWh1KTs9DkTvnVtYAcMtS7nt9rjrnvDH5RfbCYM8TWQIrgMw0R9+53pBlbQLP
LJGmpufehRhJfGZOozptqbXuNC66DQO4M99H67FrjSXZm86B0UVGMpZwh94CDklDhbZsc7tk6mFB
rMnUVN+HL8cisibMn1lUaJ/8viovxFUcdUBgF4UCVTmLfwUCAwEAAaNCMEAwDwYDVR0TAQH/BAUw
AwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMA0GCSqG
SIb3DQEBCwUAA4IBAQBLNqaEd2ndOxmfZyMIbw5hyf2E3F/YNoHN2BtBLZ9g3ccaaNnRbobhiCPP
E95Dz+I0swSdHynVv/heyNXBve6SbzJ08pGCL72CQnqtKrcgfU28elUSwhXqvfdqlS5sdJ/PHLTy
xQGjhdByPq1zqwubdQxtRbeOlKyWN7Wg0I8VRw7j6IPdj/3vQQF3zCepYoUz8jcI73HPdwbeyBkd
iEDPfUYd/x7H4c7/I9vG+o1VTqkC50cRRj70/b17KSa7qWFiNyi2LSr2EIZkyXCn0q23KXB56jza
YyWf/Wi3MOxw+3WKt21gZ7IeyLnp2KhvAotnDU0mV3HaIPzBSlCNsSi6
-----END CERTIFICATE-----

              ]]></file>
              <file Name="111e6273.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDujCCAqKgAwIBAgILBAAAAAABD4Ym5g0wDQYJKoZIhvcNAQEFBQAwTDEgMB4GA1UECxMXR2xv
YmFsU2lnbiBSb290IENBIC0gUjIxEzARBgNVBAoTCkdsb2JhbFNpZ24xEzARBgNVBAMTCkdsb2Jh
bFNpZ24wHhcNMDYxMjE1MDgwMDAwWhcNMjExMjE1MDgwMDAwWjBMMSAwHgYDVQQLExdHbG9iYWxT
aWduIFJvb3QgQ0EgLSBSMjETMBEGA1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2ln
bjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKbPJA6+Lm8omUVCxKs+IVSbC9N/hHD6
ErPLv4dfxn+G07IwXNb9rfF73OX4YJYJkhD10FPe+3t+c4isUoh7SqbKSaZeqKeMWhG8eoLrvozp
s6yWJQeXSpkqBy+0Hne/ig+1AnwblrjFuTosvNYSuetZfeLQBoZfXklqtTleiDTsvHgMCJiEbKjN
S7SgfQx5TfC4LcshytVsW33hoCmEofnTlEnLJGKRILzdC9XZzPnqJworc5HGnRusyMvo4KD0L5CL
TfuwNhv2GXqF4G3yYROIXJ/gkwpRl4pazq+r1feqCapgvdzZX99yqWATXgAByUr6P6TqBwMhAo6C
ygPCm48CAwEAAaOBnDCBmTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4E
FgQUm+IHV2ccHsBqBt5ZtJot39wZhi4wNgYDVR0fBC8wLTAroCmgJ4YlaHR0cDovL2NybC5nbG9i
YWxzaWduLm5ldC9yb290LXIyLmNybDAfBgNVHSMEGDAWgBSb4gdXZxwewGoG3lm0mi3f3BmGLjAN
BgkqhkiG9w0BAQUFAAOCAQEAmYFThxxol4aR7OBKuEQLq4GsJ0/WwbgcQ3izDJr86iw8bmEbTUsp
9Z8FHSbBuOmDAGJFtqkIk7mpM0sYmsL4h4hO291xNBrBVNpGP+DTKqttVCL1OmLNIG+6KYnX3ZHu
01yiPqFbQfXf5WRDLenVOavSot+3i9DAgBkcRcAtjOj4LaR0VknFBbVPFd5uRHg5h6h+u/N5GJG7
9G+dwfCMNYxdAfvDbbnvRG15RjF+Cv6pgsH/76tuIMRQyV+dTZsXjAzlAcmgQWpzU/qlULRuJQ/7
TBj0/VLZjmmx6BEP3ojY+x1J96relc8geMJgEtslQIxq/H5COEBkEveegeGTLg==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="119afc2e.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIE5jCCA86gAwIBAgIEO45L/DANBgkqhkiG9w0BAQUFADBdMRgwFgYJKoZIhvcNAQkBFglwa2lA
c2suZWUxCzAJBgNVBAYTAkVFMSIwIAYDVQQKExlBUyBTZXJ0aWZpdHNlZXJpbWlza2Vza3VzMRAw
DgYDVQQDEwdKdXVyLVNLMB4XDTAxMDgzMDE0MjMwMVoXDTE2MDgyNjE0MjMwMVowXTEYMBYGCSqG
SIb3DQEJARYJcGtpQHNrLmVlMQswCQYDVQQGEwJFRTEiMCAGA1UEChMZQVMgU2VydGlmaXRzZWVy
aW1pc2tlc2t1czEQMA4GA1UEAxMHSnV1ci1TSzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
ggEBAIFxNj4zB9bjMI0TfncyRsvPGbJgMUaXhvSYRqTCZUXP00B841oiqBB4M8yIsdOBSvZiF3tf
TQou0M+LI+5PAk676w7KvRhj6IAcjeEcjT3g/1tf6mTll+g/mX8MCgkzABpTpyHhOEvWgxutr2TC
+Rx6jGZITWYfGAriPrsfB2WThbkasLnE+w0R9vXW+RvHLCu3GFH+4Hv2qEivbDtPL+/40UceJlfw
UR0zlv/vWT3aTdEVNMfqPxZIe5EcgEMPPbgFPtGzlc3Yyg/CQ2fbt5PgIoIuvvVoKIO5wTtpeyDa
Tpxt4brNj3pssAki14sL2xzVWiZbDcDq5WDQn/413z8CAwEAAaOCAawwggGoMA8GA1UdEwEB/wQF
MAMBAf8wggEWBgNVHSAEggENMIIBCTCCAQUGCisGAQQBzh8BAQEwgfYwgdAGCCsGAQUFBwICMIHD
HoHAAFMAZQBlACAAcwBlAHIAdABpAGYAaQBrAGEAYQB0ACAAbwBuACAAdgDkAGwAagBhAHMAdABh
AHQAdQBkACAAQQBTAC0AaQBzACAAUwBlAHIAdABpAGYAaQB0AHMAZQBlAHIAaQBtAGkAcwBrAGUA
cwBrAHUAcwAgAGEAbABhAG0ALQBTAEsAIABzAGUAcgB0AGkAZgBpAGsAYQBhAHQAaQBkAGUAIABr
AGkAbgBuAGkAdABhAG0AaQBzAGUAawBzMCEGCCsGAQUFBwIBFhVodHRwOi8vd3d3LnNrLmVlL2Nw
cy8wKwYDVR0fBCQwIjAgoB6gHIYaaHR0cDovL3d3dy5zay5lZS9qdXVyL2NybC8wHQYDVR0OBBYE
FASqekej5ImvGs8KQKcYP2/v6X2+MB8GA1UdIwQYMBaAFASqekej5ImvGs8KQKcYP2/v6X2+MA4G
A1UdDwEB/wQEAwIB5jANBgkqhkiG9w0BAQUFAAOCAQEAe8EYlFOiCfP+JmeaUOTDBS8rNXiRTHyo
ERF5TElZrMj3hWVcRrs7EKACr81Ptcw2Kuxd/u+gkcm2k298gFTsxwhwDY77guwqYHhpNjbRxZyL
abVAyJRld/JXIWY7zoVAtjNjGr95HvxcHdMdkxuLDF2FvZkwMhgJkVLpfKG6/2SSmuz+Ne6ML678
IIbsSt4beDI3poHSna9aEhbKmVv8b20OxaAehsmR0FyYgl9jDIpaq9iVpszLita/ZEuOyoqysOkh
Mp6qqIWYNIE5ITuoOlIyPfZrN4YGWhWY3PARZv40ILcD9EEQfTmEeZZyY7aWAuVrua0ZTbvGRNs2
yyqcjg==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="11a09b38.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFGTCCBAGgAwIBAgIEPki9xDANBgkqhkiG9w0BAQUFADAxMQswCQYDVQQGEwJE
SzEMMAoGA1UEChMDVERDMRQwEgYDVQQDEwtUREMgT0NFUyBDQTAeFw0wMzAyMTEw
ODM5MzBaFw0zNzAyMTEwOTA5MzBaMDExCzAJBgNVBAYTAkRLMQwwCgYDVQQKEwNU
REMxFDASBgNVBAMTC1REQyBPQ0VTIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A
MIIBCgKCAQEArGL2YSCyz8DGhdfjeebM7fI5kqSXLmSjhFuHnEz9pPPEXyG9VhDr
2y5h7JNp46PMvZnDBfwGuMo2HP6QjklMxFaaL1a8z3sM8W9Hpg1DTeLpHTk0zY0s
2RKY+ePhwUp8hjjEqcRhiNJerxomTdXkoCJHhNlktxmW/OwZ5LKXJk5KTMuPJItU
GBxIYXvViGjaXbXqzRowwYCDdlCqT9HU3Tjw7xb04QxQBr/q+3pJoSgrHPb8FTKj
dGqPqcNiKXEx5TukYBdedObaE+3pHx8b0bJoc8YQNHVGEBDjkAB2QMuLt0MJIf+r
TpPGWOmlgtt3xDqZsXKVSQTwtyv6e1mO3QIDAQABo4ICNzCCAjMwDwYDVR0TAQH/
BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwgewGA1UdIASB5DCB4TCB3gYIKoFQgSkB
AQEwgdEwLwYIKwYBBQUHAgEWI2h0dHA6Ly93d3cuY2VydGlmaWthdC5kay9yZXBv
c2l0b3J5MIGdBggrBgEFBQcCAjCBkDAKFgNUREMwAwIBARqBgUNlcnRpZmlrYXRl
ciBmcmEgZGVubmUgQ0EgdWRzdGVkZXMgdW5kZXIgT0lEIDEuMi4yMDguMTY5LjEu
MS4xLiBDZXJ0aWZpY2F0ZXMgZnJvbSB0aGlzIENBIGFyZSBpc3N1ZWQgdW5kZXIg
T0lEIDEuMi4yMDguMTY5LjEuMS4xLjARBglghkgBhvhCAQEEBAMCAAcwgYEGA1Ud
HwR6MHgwSKBGoESkQjBAMQswCQYDVQQGEwJESzEMMAoGA1UEChMDVERDMRQwEgYD
VQQDEwtUREMgT0NFUyBDQTENMAsGA1UEAxMEQ1JMMTAsoCqgKIYmaHR0cDovL2Ny
bC5vY2VzLmNlcnRpZmlrYXQuZGsvb2Nlcy5jcmwwKwYDVR0QBCQwIoAPMjAwMzAy
MTEwODM5MzBagQ8yMDM3MDIxMTA5MDkzMFowHwYDVR0jBBgwFoAUYLWF7FZkfhIZ
J2cdUBVLc647+RIwHQYDVR0OBBYEFGC1hexWZH4SGSdnHVAVS3OuO/kSMB0GCSqG
SIb2fQdBAAQQMA4bCFY2LjA6NC4wAwIEkDANBgkqhkiG9w0BAQUFAAOCAQEACrom
JkbTc6gJ82sLMJn9iuFXehHTuJTXCRBuo7E4A9G28kNBKWKnctj7fAXmMXAnVBhO
inxO5dHKjHiIzxvTkIvmI/gLDjNDfZziChmPyQE+dF10yYscA+UYyAFMP8uXBV2Y
caaYb7Z8vTd/vuGTJW1v8AqtFxjhA7wHKcitJuj4YfD9IQl+mo6paH1IYnK9AOoB
mbgGglGBTvH1tJFUuSN6AJqfXY3gPGS5GhKSKseCRHI53OI8xthV9RVOyAUO28bQ
YqbsFbS1AoLbrIyigfCbmTH1ICCoiGEKB5+U/NDXG8wuF/MEJ3Zn61SD/aSQfgY9
BKNDLdr8C2LqL19iUw==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="11f154d6.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEGjCCAwICEQCLW3VWhFSFCwDPrzhIzrGkMA0GCSqGSIb3DQEBBQUAMIHKMQsw
CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl
cmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWdu
LCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT
aWduIENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3Jp
dHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQswCQYD
VQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT
aWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJ
bmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWdu
IENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg
LSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAN2E1Lm0+afY8wR4
nN493GwTFtl63SRRZsDHJlkNrAYIwpTRMx/wgzUfbhvI3qpuFU5UJ+/EbRrsC+MO
8ESlV8dAWB6jRx9x7GD2bZTIGDnt/kIYVt/kTEkQeE4BdjVjEjbdZrwBBDajVWjV
ojYJrKshJlQGrT/KFOCsyq0GHZXi+J3x4GD/wn91K0zM2v6HmSHquv4+VNfSWXjb
PG7PoBMAGrgnoeS+Z5bKoMWznN3JdZ7rMJpfo83ZrngZPyPpXNspva1VyBtUjGP2
6KbqxzcSXKMpHgLZ2x87tNcPVkeBFQRKr4Mn0cVYiMHd9qqnoxjaaKptEVHhv2Vr
n5Z20T0CAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAq2aN17O6x5q25lXQBfGfMY1a
qtmqRiYPce2lrVNWYgFHKkTp/j90CxObufRNG7LRX7K20ohcs5/Ny9Sn2WCVhDr4
wTcdYcrnsMXlkdpUpqwxga6X3s0IrLjAl4B/bnKk52kTlWUfxJM8/XmPBNQ+T+r3
ns7NZ3xPZQL/kYVUc8f/NveGLezQXk//EZ9yBta4GvFMDSZl4kSAHsef493oCtrs
pSCAaWihT37ha88HQfqDjrw43bAuEbFrskLMmrz5SCJ5ShkPshw+IHTZasO+8ih4
E1Z5T21Q6huwtVexN2ZYI/PcD98Kh8TvhgXVOBRgmaNL3gaWcSzy27YfpO8/7g==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="124bbd54.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEQzCCAyugAwIBAgIBATANBgkqhkiG9w0BAQUFADB/MQswCQYDVQQGEwJHQjEbMBkGA1UECAwS
R3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRowGAYDVQQKDBFDb21vZG8gQ0Eg
TGltaXRlZDElMCMGA1UEAwwcVHJ1c3RlZCBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczAeFw0wNDAxMDEw
MDAwMDBaFw0yODEyMzEyMzU5NTlaMH8xCzAJBgNVBAYTAkdCMRswGQYDVQQIDBJHcmVhdGVyIE1h
bmNoZXN0ZXIxEDAOBgNVBAcMB1NhbGZvcmQxGjAYBgNVBAoMEUNvbW9kbyBDQSBMaW1pdGVkMSUw
IwYDVQQDDBxUcnVzdGVkIENlcnRpZmljYXRlIFNlcnZpY2VzMIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEA33FvNlhTWvI2VFeAxHQIIO0Yfyod5jWaHiWsnOWWfnJSoBVC21ndZHoa0Lh7
3TkVvFVIxO06AOoxEbrycXQaZ7jPM8yoMa+j49d/vzMtTGo87IvDktJTdyR0nAducPy9C1t2ul/y
/9c3S0pgePfw+spwtOpZqqPOSC+pw7ILfhdyFgymBwwbOM/JYrc/oJOlh0Hyt3BAd9i+FHzjqMB6
juljatEPmsbS9Is6FARW1O24zG71++IsWL1/T2sr92AkWCTOJu80kTrV44HQsvAEAtdbtz6SrGsS
ivnkBbA7kUlcsutT6vifR4buv5XAwAaf0lteERv0xwQ1KdJVXOTt6wIDAQABo4HJMIHGMB0GA1Ud
DgQWBBTFe1i97doladL3WRaoszLAeydb9DAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB
/zCBgwYDVR0fBHwwejA8oDqgOIY2aHR0cDovL2NybC5jb21vZG9jYS5jb20vVHJ1c3RlZENlcnRp
ZmljYXRlU2VydmljZXMuY3JsMDqgOKA2hjRodHRwOi8vY3JsLmNvbW9kby5uZXQvVHJ1c3RlZENl
cnRpZmljYXRlU2VydmljZXMuY3JsMA0GCSqGSIb3DQEBBQUAA4IBAQDIk4E7ibSvuIQSTI3S8Ntw
uleGFTQQuS9/HrCoiWChisJ3DFBKmwCL2Iv0QeLQg4pKHBQGsKNoBXAxMKdTmw7pSqBYaWcOrp32
pSxBvzwGa+RZzG0Q8ZZvH9/0BAKkn0U+yNj6NkZEUD+Cl5EfKNsYEYwq5GWDVxISjBc/lDb+XbDA
BHcTuPQV1T84zJQ6VdCsmPW6AF/ghhmBeC8owH7TzEIK9a5QoNE+xqFx7D+gIIxmOom0jtTYsU0l
R+4viMi14QVFwL4Ucd56/Y57fU0IlqUSc/AtyjcndBInTMu2l+nZrghtWjlA3QVHdWpaIbOjGM9O
9y5Xt5hwXsjEeLBi
-----END CERTIFICATE-----

              ]]></file>
              <file Name="128b9c8d.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIID2DCCAsACEQDQHkCLAAACfAAAAAIAAAABMA0GCSqGSIb3DQEBBQUAMIGpMQsw
CQYDVQQGEwJ1czENMAsGA1UECBMEVXRhaDEXMBUGA1UEBxMOU2FsdCBMYWtlIENp
dHkxJDAiBgNVBAoTG0RpZ2l0YWwgU2lnbmF0dXJlIFRydXN0IENvLjERMA8GA1UE
CxMIRFNUQ0EgWDExFjAUBgNVBAMTDURTVCBSb290Q0EgWDExITAfBgkqhkiG9w0B
CQEWEmNhQGRpZ3NpZ3RydXN0LmNvbTAeFw05ODEyMDExODE4NTVaFw0wODExMjgx
ODE4NTVaMIGpMQswCQYDVQQGEwJ1czENMAsGA1UECBMEVXRhaDEXMBUGA1UEBxMO
U2FsdCBMYWtlIENpdHkxJDAiBgNVBAoTG0RpZ2l0YWwgU2lnbmF0dXJlIFRydXN0
IENvLjERMA8GA1UECxMIRFNUQ0EgWDExFjAUBgNVBAMTDURTVCBSb290Q0EgWDEx
ITAfBgkqhkiG9w0BCQEWEmNhQGRpZ3NpZ3RydXN0LmNvbTCCASIwDQYJKoZIhvcN
AQEBBQADggEPADCCAQoCggEBANLGJrbnpT3BxGjVUG9TxW9JEwm4ryxIjRRqoxdf
WvnTLnUv2Chi0ZMv/E3Uq4flCMeZ55I/db3rJbQVwZsZPdJEjdd0IG03Ao9pk1uK
xBmd9LIO/BZsubEFkoPRhSxglD5FVaDZqwgh5mDoO3TymVBRaNADLbGAvqPYUrBE
zUNKcI5YhZXhTizWLUFv1oTnyJhEykfbLCSlaSbPa7gnYsP0yXqSI+0TZ4KuRS5F
5X5yP4WdlGIQ5jyRoa13AOAV7POEgHJ6jm5gl8ckWRA0g1vhpaRptlc1HHhZxtMv
OnNn7pTKBBMFYgZwI7P0fO5F2WQLW0mqpEPOJsREEmy43XkCAwEAATANBgkqhkiG
9w0BAQUFAAOCAQEAojeyP2n714Z5VEkxlTMr89EJFEliYIalsBHiUMIdBlc+Legz
ZL6bqq1fG03UmZWii5rJYnK1aerZWKs17RWiQ9a2vAd5ZWRzfdd5ynvVWlHG4VME
lo04z6MXrDlxawHDi1M8Y+nuecDkvpIyZHqzH5eUYr3qsiAVlfuX8ngvYzZAOONG
Dx3drJXK50uQe7FLqdTF65raqtWjlBRGjS0f8zrWkzr2Pnn86Oawde3uPclwx12q
gUtGJRzHbBXjlU4PqjI3lAoXJJIThFjSY28r9+ZbYgsTF7ANUkz+/m9c4pFuHf2k
Ytdo+o56T9II2pPc8JIRetDccpMMc5NihWjQ9A==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="12d55845.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDSjCCAjKgAwIBAgIQRK+wgNajJ7qJMDmGLvhAazANBgkqhkiG9w0BAQUFADA/MSQwIgYDVQQK
ExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMTDkRTVCBSb290IENBIFgzMB4X
DTAwMDkzMDIxMTIxOVoXDTIxMDkzMDE0MDExNVowPzEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1
cmUgVHJ1c3QgQ28uMRcwFQYDVQQDEw5EU1QgUm9vdCBDQSBYMzCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAN+v6ZdQCINXtMxiZfaQguzH0yxrMMpb7NnDfcdAwRgUi+DoM3ZJKuM/IUmT
rE4Orz5Iy2Xu/NMhD2XSKtkyj4zl93ewEnu1lcCJo6m67XMuegwGMoOifooUMM0RoOEqOLl5CjH9
UL2AZd+3UWODyOKIYepLYYHsUmu5ouJLGiifSKOeDNoJjj4XLh7dIN9bxiqKqy69cK3FCxolkHRy
xXtqqzTWMIn/5WgTe1QLyNau7Fqckh49ZLOMxt+/yUFw7BZy1SbsOFU5Q9D8/RhcQPGX69Wam40d
utolucbY38EVAjqr2m7xPi71XAicPNaDaeQQmxkqtilX4+U9m5/wAl0CAwEAAaNCMEAwDwYDVR0T
AQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFMSnsaR7LHH62+FLkHX/xBVghYkQ
MA0GCSqGSIb3DQEBBQUAA4IBAQCjGiybFwBcqR7uKGY3Or+Dxz9LwwmglSBd49lZRNI+DT69ikug
dB/OEIKcdBodfpga3csTS7MgROSR6cz8faXbauX+5v3gTt23ADq1cEmv8uXrAvHRAosZy5Q6XkjE
GB5YGV8eAlrwDPGxrancWYaLbumR9YbK+rlmM6pZW87ipxZzR8srzJmwN0jP41ZL9c8PDHIyh8bw
RLtTcm1D9SZImlJnt1ir/md2cXjbDaJWFBM5JDGFoqgCWjBH4d1QB7wCCZAA62RjYJsWvIjJEubS
fZGL+T0yjWW06XyxV3bqxbYoOb8VZRzI9neWagqNdwvYkQsEjgfbKbYK7p2CNTUQ
-----END CERTIFICATE-----

              ]]></file>
              <file Name="1676090a.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIID9zCCAt+gAwIBAgIESJ8AATANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCQ04xMjAwBgNV
BAoMKUNoaW5hIEludGVybmV0IE5ldHdvcmsgSW5mb3JtYXRpb24gQ2VudGVyMUcwRQYDVQQDDD5D
aGluYSBJbnRlcm5ldCBOZXR3b3JrIEluZm9ybWF0aW9uIENlbnRlciBFViBDZXJ0aWZpY2F0ZXMg
Um9vdDAeFw0xMDA4MzEwNzExMjVaFw0zMDA4MzEwNzExMjVaMIGKMQswCQYDVQQGEwJDTjEyMDAG
A1UECgwpQ2hpbmEgSW50ZXJuZXQgTmV0d29yayBJbmZvcm1hdGlvbiBDZW50ZXIxRzBFBgNVBAMM
PkNoaW5hIEludGVybmV0IE5ldHdvcmsgSW5mb3JtYXRpb24gQ2VudGVyIEVWIENlcnRpZmljYXRl
cyBSb290MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAm35z7r07eKpkQ0H1UN+U8i6y
jUqORlTSIRLIOTJCBumD1Z9S7eVnAztUwYyZmczpwA//DdmEEbK40ctb3B75aDFk4Zv6dOtouSCV
98YPjUesWgbdYavi7NifFy2cyjw1l1VxzUOFsUcW9SxTgHbP0wBkvUCZ3czY28Sf1hNfQYOL+Q2H
klY0bBoQCxfVWhyXWIQ8hBouXJE0bhlffxdpxWXvayHG1VA6v2G5BY3vbzQ6sm8UY78WO5upKv23
KzhmBsUs4qpnHkWnjQRmQvaPK++IIGmPMowUc9orhpFjIpryp9vOiYurXccUwVswah+xt54ugQEC
7c+WXmPbqOY4twIDAQABo2MwYTAfBgNVHSMEGDAWgBR8cks5x8DbYqVPm6oYNJKiyoOCWTAPBgNV
HRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUfHJLOcfA22KlT5uqGDSSosqD
glkwDQYJKoZIhvcNAQEFBQADggEBACrDx0M3j92tpLIM7twUbY8opJhJywyA6vPtI2Z1fcXTIWd5
0XPFtQO3WKwMVC/GVhMPMdoG52U7HW8228gd+f2ABsqjPWYWqJ1MFn3AlUa1UeTiH9fqBk1jjZaM
7+czV0I664zBechNdn3e9rG3geCg+aF4RhcaVpjwTj2rHO3sOdwHSPdj/gauwqRcalsyiMXHM4Ws
ZkJHwlgkmeHlPuV1LI5D1l08eB6olYIpUNHRFrrvwb562bTYzB5MRuF3sTGrvSrIzo9uoV1/A3U0
5K2JRVRevq4opbs/eHnrc7MKDf2+yfdWrPa37S+bISnHOLaVxATywy39FCqQmbkHzJ8=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="17b51fe6.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDkjCCAnqgAwIBAgIRAIW9S/PY2uNp9pTXX8OlRCMwDQYJKoZIhvcNAQEFBQAwPTELMAkGA1UE
BhMCRlIxETAPBgNVBAoTCENlcnRwbHVzMRswGQYDVQQDExJDbGFzcyAyIFByaW1hcnkgQ0EwHhcN
OTkwNzA3MTcwNTAwWhcNMTkwNzA2MjM1OTU5WjA9MQswCQYDVQQGEwJGUjERMA8GA1UEChMIQ2Vy
dHBsdXMxGzAZBgNVBAMTEkNsYXNzIDIgUHJpbWFyeSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP
ADCCAQoCggEBANxQltAS+DXSCHh6tlJw/W/uz7kRy1134ezpfgSN1sxvc0NXYKwzCkTsA18cgCSR
5aiRVhKC9+Ar9NuuYS6JEI1rbLqzAr3VNsVINyPi8Fo3UjMXEuLRYE2+L0ER4/YXJQyLkcAbmXuZ
Vg2v7tK8R1fjeUl7NIknJITesezpWE7+Tt9avkGtrAjFGA7v0lPubNCdEgETjdyAYveVqUSISnFO
YFWe2yMZeVYHDD9jC1yw4r5+FfyUM1hBOHTE4Y+L3yasH7WLO7dDWWuwJKZtkIvEcupdM5i3y95e
e++U8Rs+yskhwcWYAqqi9lt3m/V+llU0HGdpwPFC40es/CgcZlUCAwEAAaOBjDCBiTAPBgNVHRME
CDAGAQH/AgEKMAsGA1UdDwQEAwIBBjAdBgNVHQ4EFgQU43Mt38sOKAze3bOkynm4jrvoMIkwEQYJ
YIZIAYb4QgEBBAQDAgEGMDcGA1UdHwQwMC4wLKAqoCiGJmh0dHA6Ly93d3cuY2VydHBsdXMuY29t
L0NSTC9jbGFzczIuY3JsMA0GCSqGSIb3DQEBBQUAA4IBAQCnVM+IRBnL39R/AN9WM2K191EBkOvD
P9GIROkkXe/nFL0gt5o8AP5tn9uQ3Nf0YtaLcF3n5QRIqWh8yfFC82x/xXp8HVGIutIKPidd3i1R
TtMTZGnkLuPT55sJmabglZvOGtd/vjzOUrMRFcEPF80Du5wlFbqidon8BvEY0JNLDnyCt6X09l/+
7UCmnYR0ObncHoUW2ikbhiMAybuJfm6AiB4vFLQDJKgybwOaRywwvlbGp0ICcBvqQNi6BQNwB6SW
//1IMwrh3KWBkJtN3X3n57LNXMhqlfil9o3EXXgIvnsG1knPGTZQIy4I5p4FTUcY1Rbpsda2ENW7
l7+ijrRU
-----END CERTIFICATE-----

              ]]></file>
              <file Name="19899da5.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIElTCCA/6gAwIBAgIEOJsRPDANBgkqhkiG9w0BAQQFADCBujEUMBIGA1UEChML
RW50cnVzdC5uZXQxPzA9BgNVBAsUNnd3dy5lbnRydXN0Lm5ldC9TU0xfQ1BTIGlu
Y29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTElMCMGA1UECxMcKGMpIDIwMDAg
RW50cnVzdC5uZXQgTGltaXRlZDE6MDgGA1UEAxMxRW50cnVzdC5uZXQgU2VjdXJl
IFNlcnZlciBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wMDAyMDQxNzIwMDBa
Fw0yMDAyMDQxNzUwMDBaMIG6MRQwEgYDVQQKEwtFbnRydXN0Lm5ldDE/MD0GA1UE
CxQ2d3d3LmVudHJ1c3QubmV0L1NTTF9DUFMgaW5jb3JwLiBieSByZWYuIChsaW1p
dHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMjAwMCBFbnRydXN0Lm5ldCBMaW1pdGVk
MTowOAYDVQQDEzFFbnRydXN0Lm5ldCBTZWN1cmUgU2VydmVyIENlcnRpZmljYXRp
b24gQXV0aG9yaXR5MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDHwV9OcfHO
8GCGD9JYf9Mzly0XonUwtZZkJi9ow0SrqHXmAGc0V55lxyKbc+bT3QgON1WqJUaB
bL3+qPZ1V1eMkGxKwz6LS0MKyRFWmponIpnPVZ5h2QLifLZ8OAfc439PmrkDQYC2
dWcTC5/oVzbIXQA23mYU2m52H083jIITiQIDAQABo4IBpDCCAaAwEQYJYIZIAYb4
QgEBBAQDAgAHMIHjBgNVHR8EgdswgdgwgdWggdKggc+kgcwwgckxFDASBgNVBAoT
C0VudHJ1c3QubmV0MT8wPQYDVQQLFDZ3d3cuZW50cnVzdC5uZXQvU1NMX0NQUyBp
bmNvcnAuIGJ5IHJlZi4gKGxpbWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAyMDAw
IEVudHJ1c3QubmV0IExpbWl0ZWQxOjA4BgNVBAMTMUVudHJ1c3QubmV0IFNlY3Vy
ZSBTZXJ2ZXIgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxDTALBgNVBAMTBENSTDEw
KwYDVR0QBCQwIoAPMjAwMDAyMDQxNzIwMDBagQ8yMDIwMDIwNDE3NTAwMFowCwYD
VR0PBAQDAgEGMB8GA1UdIwQYMBaAFMtswGvjuz7L/CKc/vuLkpyw8m4iMB0GA1Ud
DgQWBBTLbMBr47s+y/winP77i5KcsPJuIjAMBgNVHRMEBTADAQH/MB0GCSqGSIb2
fQdBAAQQMA4bCFY1LjA6NC4wAwIEkDANBgkqhkiG9w0BAQQFAAOBgQBi24GRzsia
d0Iv7L0no1MPUBvqTpLwqa+poLpIYcvvyQbvH9X07t9WLebKahlzqlO+krNQAraF
JnJj2HVQYnUUt7NQGj/KEQALhUVpbbalrlHhStyCP2yMNLJ3a9kC9n8O6mUE8c1U
yrrJzOCE98g+EZfTYAkYvAX/bIkz8OwVDw==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="1dac3003.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIECTCCAvGgAwIBAgIQDV6ZCtadt3js2AdWO4YV2TANBgkqhkiG9w0BAQUFADBbMQswCQYDVQQG
EwJVUzEgMB4GA1UEChMXRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QxETAPBgNVBAsTCERTVCBBQ0VT
MRcwFQYDVQQDEw5EU1QgQUNFUyBDQSBYNjAeFw0wMzExMjAyMTE5NThaFw0xNzExMjAyMTE5NTha
MFsxCzAJBgNVBAYTAlVTMSAwHgYDVQQKExdEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdDERMA8GA1UE
CxMIRFNUIEFDRVMxFzAVBgNVBAMTDkRTVCBBQ0VTIENBIFg2MIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEAuT31LMmU3HWKlV1j6IR3dma5WZFcRt2SPp/5DgO0PWGSvSMmtWPuktKe1jzI
DZBfZIGxqAgNTNj50wUoUrQBJcWVHAx+PhCEdc/BGZFjz+iokYi5Q1K7gLFViYsx+tC3dr5BPTCa
pCIlF3PoHuLTrCq9Wzgh1SpL11V94zpVvddtawJXa+ZHfAjIgrrep4c9oW24MFbCswKBXy314pow
GCi4ZtPLAZZv6opFVdbgnf9nKxcCpk4aahELfrd755jWjHZvwTvbUJN+5dCOHze4vbrGn2zpfDPy
MjwmR/onJALJfh1biEITajV8fTXpLmaRcpPVMibEdPVTo7NdmvYJywIDAQABo4HIMIHFMA8GA1Ud
EwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgHGMB8GA1UdEQQYMBaBFHBraS1vcHNAdHJ1c3Rkc3Qu
Y29tMGIGA1UdIARbMFkwVwYKYIZIAWUDAgEBATBJMEcGCCsGAQUFBwIBFjtodHRwOi8vd3d3LnRy
dXN0ZHN0LmNvbS9jZXJ0aWZpY2F0ZXMvcG9saWN5L0FDRVMtaW5kZXguaHRtbDAdBgNVHQ4EFgQU
CXIGThhDD+XWzMNqizF7eI+og7gwDQYJKoZIhvcNAQEFBQADggEBAKPYjtay284F5zLNAdMEA+V2
5FYrnJmQ6AgwbN99Pe7lv7UkQIRJ4dEorsTCOlMwiPH1d25Ryvr/ma8kXxug/fKshMrfqfBfBC6t
Fr8hlxCBPeP/h40y3JTlR4peahPJlJU90u7INJXQgNStMgiAVDzgvVJT11J8smk/f3rPanTK+gQq
nExaBqXpIK1FZg9p8d2/6eMyi/rgwYZNcjwu2JN4Cir42NInPRmJX1p7ijvMDNpRrscL9yuwNwXs
vFcj4jjSm2jzVhKIT0J8uDHEtdvkyCE06UgRNe76x5JXxZ805Mf29w4LTJxoeHtxMcfrHuBnQfO3
oKfN5XozNmr6mis=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="1dcd6f4c.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFcjCCA1qgAwIBAgIQH51ZWtcvwgZEpYAIaeNe9jANBgkqhkiG9w0BAQUFADA/MQswCQYDVQQG
EwJUVzEwMC4GA1UECgwnR292ZXJubWVudCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4X
DTAyMTIwNTEzMjMzM1oXDTMyMTIwNTEzMjMzM1owPzELMAkGA1UEBhMCVFcxMDAuBgNVBAoMJ0dv
dmVybm1lbnQgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCAiIwDQYJKoZIhvcNAQEBBQAD
ggIPADCCAgoCggIBAJoluOzMonWoe/fOW1mKydGGEghU7Jzy50b2iPN86aXfTEc2pBsBHH8eV4qN
w8XRIePaJD9IK/ufLqGU5ywck9G/GwGHU5nOp/UKIXZ3/6m3xnOUT0b3EEk3+qhZSV1qgQdW8or5
BtD3cCJNtLdBuTK4sfCxw5w/cP1T3YGq2GN49thTbqGsaoQkclSGxtKyyhwOeYHWtXBiCAEuTk8O
1RGvqa/lmr/czIdtJuTJV6L7lvnM4T9TjGxMfptTCAtsF/tnyMKtsc2AtJfcdgEWFelq16TheEfO
htX7MfP6Mb40qij7cEwdScevLJ1tZqa2jWR+tSBqnTuBto9AAGdLiYa4zGX+FVPpBMHWXx1E1wov
J5pGfaENda1UhhXcSTvxls4Pm6Dso3pdvtUqdULle96ltqqvKKyskKw4t9VoNSZ63Pc78/1Fm9G7
Q3hub/FCVGqY8A2tl+lSXunVanLeavcbYBT0peS2cWeqH+riTcFCQP5nRhc4L0c/cZyu5SHKYS1t
B6iEfC3uUSXxY5Ce/eFXiGvviiNtsea9P63RPZYLhY3Naye7twWb7LuRqQoHEgKXTiCQ8P8NHuJB
O9NAOueNXdpm5AKwB1KYXA6OM5zCppX7VRluTI6uSw+9wThNXo+EHWbNxWCWtFJaBYmOlXqYwZE8
lSOyDvR5tMl8wUohAgMBAAGjajBoMB0GA1UdDgQWBBTMzO/MKWCkO7GStjz6MmKPrCUVOzAMBgNV
HRMEBTADAQH/MDkGBGcqBwAEMTAvMC0CAQAwCQYFKw4DAhoFADAHBgVnKgMAAAQUA5vwIhP/lSg2
09yewDL7MTqKUWUwDQYJKoZIhvcNAQEFBQADggIBAECASvomyc5eMN1PhnR2WPWus4MzeKR6dBcZ
TulStbngCnRiqmjKeKBMmo4sIy7VahIkv9Ro04rQ2JyftB8M3jh+Vzj8jeJPXgyfqzvS/3WXy6Tj
Zwj/5cAWtUgBfen5Cv8b5Wppv3ghqMKnI6mGq3ZW6A4M9hPdKmaKZEk9GhiHkASfQlK3T8v+R0F2
Ne//AHY2RTKbxkaFXeIksB7jSJaYV0eUVXoPQbFEJPPB/hprv4j9wabak2BegUqZIJxIZhm1AHlU
D7gsL0u8qV1bYH+Mh6XgUmMqvtg7hUAV/h62ZT/FS9p+tXo1KaMuephgIqP0fSdOLeq0dDzpD6Qz
DxARvBMB1uUO07+1EqLhRSPAzAhuYbeJq4PjJB7mXQfnHyA+z2fI56wwbSdLaG5LKlwCCDTb+Hbk
Z6MmnD+iMsJKxYEYMRBWqoTvLQr/uB930r+lWKBi5NdLkXWNiYCYfm3LU05er/ayl4WXudpVBrkk
7tfGOB5jGxI7leFYrPLfhNVfmS8NVVvmONsuP3LpSIXLuykTjx44VbnzssQwmSNOXfJIoRIM3BKQ
CZBUkQM8R+XVyWXgt0t97EfTsws+rZ7QdAAO671RrcDeLMDDav7v3Aun+kbfYNucpllQdSNpc5Oy
+fwC00fmcc4QAu4njIT/rEUNE1yDMuAlpYYsfPQS
-----END CERTIFICATE-----

              ]]></file>
              <file Name="1df5a75f.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEMzCCAxugAwIBAgIDCYPzMA0GCSqGSIb3DQEBCwUAME0xCzAJBgNVBAYTAkRFMRUwEwYDVQQK
DAxELVRydXN0IEdtYkgxJzAlBgNVBAMMHkQtVFJVU1QgUm9vdCBDbGFzcyAzIENBIDIgMjAwOTAe
Fw0wOTExMDUwODM1NThaFw0yOTExMDUwODM1NThaME0xCzAJBgNVBAYTAkRFMRUwEwYDVQQKDAxE
LVRydXN0IEdtYkgxJzAlBgNVBAMMHkQtVFJVU1QgUm9vdCBDbGFzcyAzIENBIDIgMjAwOTCCASIw
DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANOySs96R+91myP6Oi/WUEWJNTrGa9v+2wBoqOAD
ER03UAifTUpolDWzU9GUY6cgVq/eUXjsKj3zSEhQPgrfRlWLJ23DEE0NkVJD2IfgXU42tSHKXzlA
BF9bfsyjxiupQB7ZNoTWSPOSHjRGICTBpFGOShrvUD9pXRl/RcPHAY9RySPocq60vFYJfxLLHLGv
KZAKyVXMD9O0Gu1HNVpK7ZxzBCHQqr0ME7UAyiZsxGsMlFqVlNpQmvH/pStmMaTJOKDfHR+4CS7z
p+hnUquVH+BGPtikw8paxTGA6Eian5Rp/hnd2HN8gcqW3o7tszIFZYQ05ub9VxC1X3a/L7AQDcUC
AwEAAaOCARowggEWMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFP3aFMSfMN4hvR5COfyrYyNJ
4PGEMA4GA1UdDwEB/wQEAwIBBjCB0wYDVR0fBIHLMIHIMIGAoH6gfIZ6bGRhcDovL2RpcmVjdG9y
eS5kLXRydXN0Lm5ldC9DTj1ELVRSVVNUJTIwUm9vdCUyMENsYXNzJTIwMyUyMENBJTIwMiUyMDIw
MDksTz1ELVRydXN0JTIwR21iSCxDPURFP2NlcnRpZmljYXRlcmV2b2NhdGlvbmxpc3QwQ6BBoD+G
PWh0dHA6Ly93d3cuZC10cnVzdC5uZXQvY3JsL2QtdHJ1c3Rfcm9vdF9jbGFzc18zX2NhXzJfMjAw
OS5jcmwwDQYJKoZIhvcNAQELBQADggEBAH+X2zDI36ScfSF6gHDOFBJpiBSVYEQBrLLpME+bUMJm
2H6NMLVwMeniacfzcNsgFYbQDfC+rAF1hM5+n02/t2A7nPPKHeJeaNijnZflQGDSNiH+0LS4F9p0
o3/U37CYAqxva2ssJSRyoWXuJVrl5jLn8t+rSfrzkGkj2wTZ51xY/GXUl77M/C4KzCUqNQT4YJEV
dT1B/yMfGchs64JTBKbkTCJNjYy6zltz7GRUUG3RnFX7acM2w4y8PIWmawomDeCTmGCufsYkl4ph
X5GOZpIJhzbNi5stPvZR1FDUWSi9g/LMKHtThm3YJohw1+qRzT65ysCQblrGXnRl11z+o+I=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="1e1eab7c.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDwzCCAqugAwIBAgIBATANBgkqhkiG9w0BAQsFADCBgjELMAkGA1UEBhMCREUxKzApBgNVBAoM
IlQtU3lzdGVtcyBFbnRlcnByaXNlIFNlcnZpY2VzIEdtYkgxHzAdBgNVBAsMFlQtU3lzdGVtcyBU
cnVzdCBDZW50ZXIxJTAjBgNVBAMMHFQtVGVsZVNlYyBHbG9iYWxSb290IENsYXNzIDMwHhcNMDgx
MDAxMTAyOTU2WhcNMzMxMDAxMjM1OTU5WjCBgjELMAkGA1UEBhMCREUxKzApBgNVBAoMIlQtU3lz
dGVtcyBFbnRlcnByaXNlIFNlcnZpY2VzIEdtYkgxHzAdBgNVBAsMFlQtU3lzdGVtcyBUcnVzdCBD
ZW50ZXIxJTAjBgNVBAMMHFQtVGVsZVNlYyBHbG9iYWxSb290IENsYXNzIDMwggEiMA0GCSqGSIb3
DQEBAQUAA4IBDwAwggEKAoIBAQC9dZPwYiJvJK7genasfb3ZJNW4t/zN8ELg63iIVl6bmlQdTQyK
9tPPcPRStdiTBONGhnFBSivwKixVA9ZIw+A5OO3yXDw/RLyTPWGrTs0NvvAgJ1gORH8EGoel15YU
NpDQSXuhdfsaa3Ox+M6pCSzyU9XDFES4hqX2iys52qMzVNn6chr3IhUciJFrf2blw2qAsCTz34ZF
iP0Zf3WHHx+xGwpzJFu5ZeAsVMhg02YXP+HMVDNzkQI6pn97djmiH5a2OK61yJN0HZ65tOVgnS9W
0eDrXltMEnAMbEQgqxHY9Bn20pxSN+f6tsIxO0rUFJmtxxr1XV/6B7h8DR/Wgx6zAgMBAAGjQjBA
MA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBS1A/d2O2GCahKqGFPr
AyGUv/7OyjANBgkqhkiG9w0BAQsFAAOCAQEAVj3vlNW92nOyWL6ukK2YJ5f+AbGwUgC4TeQbIXQb
fsDuXmkqJa9c1h3a0nnJ85cp4IaH3gRZD/FZ1GSFS5mvJQQeyUapl96Cshtwn5z2r3Ex3XsFpSzT
ucpH9sry9uetuUg/vBa3wW306gmv7PO15wWeph6KU1HWk4HMdJP2udqmJQV0eVp+QD6CSyYRMG7h
P0HHRwA11fXT91Q+gT3aSWqas+8QPebrb9HIIkfLzM8BMZLZGOMivgkeGj5asuRrDFR6fUNOuIml
e9eiPZaGzPImNC1qkp2aGtAw4l1OBLBfiyB+d8E9lYLRRpo7PHi4b6HQDWSieB4pTpPDpFQUWw==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="1e8e7201.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDXzCCAkegAwIBAgILBAAAAAABIVhTCKIwDQYJKoZIhvcNAQELBQAwTDEgMB4GA1UECxMXR2xv
YmFsU2lnbiBSb290IENBIC0gUjMxEzARBgNVBAoTCkdsb2JhbFNpZ24xEzARBgNVBAMTCkdsb2Jh
bFNpZ24wHhcNMDkwMzE4MTAwMDAwWhcNMjkwMzE4MTAwMDAwWjBMMSAwHgYDVQQLExdHbG9iYWxT
aWduIFJvb3QgQ0EgLSBSMzETMBEGA1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2ln
bjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMwldpB5BngiFvXAg7aEyiie/QV2EcWt
iHL8RgJDx7KKnQRfJMsuS+FggkbhUqsMgUdwbN1k0ev1LKMPgj0MK66X17YUhhB5uzsTgHeMCOFJ
0mpiLx9e+pZo34knlTifBtc+ycsmWQ1z3rDI6SYOgxXG71uL0gRgykmmKPZpO/bLyCiR5Z2KYVc3
rHQU3HTgOu5yLy6c+9C7v/U9AOEGM+iCK65TpjoWc4zdQQ4gOsC0p6Hpsk+QLjJg6VfLuQSSaGjl
OCZgdbKfd/+RFO+uIEn8rUAVSNECMWEZXriX7613t2Saer9fwRPvm2L7DWzgVGkWqQPabumDk3F2
xmmFghcCAwEAAaNCMEAwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE
FI/wS3+oLkUkrk1Q+mOai97i3Ru8MA0GCSqGSIb3DQEBCwUAA4IBAQBLQNvAUKr+yAzv95ZURUm7
lgAJQayzE4aGKAczymvmdLm6AC2upArT9fHxD4q/c2dKg8dEe3jgr25sbwMpjjM5RcOO5LlXbKr8
EpbsU8Yt5CRsuZRj+9xTaGdWPoO4zzUhw8lo/s7awlOqzJCK6fBdRoyV3XpYKBovHd7NADdBj+1E
bddTKJd+82cEHhXXipa0095MJ6RMG3NzdvQXmcIfeg7jLQitChws/zyrVQ4PkX4268NXSb7hLi18
YIvDQVETI53O9zJrlAGomecsMx86OyXShkDOOyyGeMlhLxS67ttVb9+E7gUJTb0o2HLO02JQZR7r
kpeDMdmztcpHWD9f
-----END CERTIFICATE-----

              ]]></file>
              <file Name="1eb37bdf.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIHTzCCBTegAwIBAgIJAKPaQn6ksa7aMA0GCSqGSIb3DQEBBQUAMIGuMQswCQYDVQQGEwJFVTFD
MEEGA1UEBxM6TWFkcmlkIChzZWUgY3VycmVudCBhZGRyZXNzIGF0IHd3dy5jYW1lcmZpcm1hLmNv
bS9hZGRyZXNzKTESMBAGA1UEBRMJQTgyNzQzMjg3MRswGQYDVQQKExJBQyBDYW1lcmZpcm1hIFMu
QS4xKTAnBgNVBAMTIENoYW1iZXJzIG9mIENvbW1lcmNlIFJvb3QgLSAyMDA4MB4XDTA4MDgwMTEy
Mjk1MFoXDTM4MDczMTEyMjk1MFowga4xCzAJBgNVBAYTAkVVMUMwQQYDVQQHEzpNYWRyaWQgKHNl
ZSBjdXJyZW50IGFkZHJlc3MgYXQgd3d3LmNhbWVyZmlybWEuY29tL2FkZHJlc3MpMRIwEAYDVQQF
EwlBODI3NDMyODcxGzAZBgNVBAoTEkFDIENhbWVyZmlybWEgUy5BLjEpMCcGA1UEAxMgQ2hhbWJl
cnMgb2YgQ29tbWVyY2UgUm9vdCAtIDIwMDgwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoIC
AQCvAMtwNyuAWko6bHiUfaN/Gh/2NdW928sNRHI+JrKQUrpjOyhYb6WzbZSm891kDFX29ufyIiKA
XuFixrYp4YFs8r/lfTJqVKAyGVn+H4vXPWCGhSRv4xGzdz4gljUha7MI2XAuZPeEklPWDrCQiorj
h40G072QDuKZoRuGDtqaCrsLYVAGUvGef3bsyw/QHg3PmTA9HMRFEFis1tPo1+XqxQEHd9ZR5gN/
ikilTWh1uem8nk4ZcfUyS5xtYBkL+8ydddy/Js2Pk3g5eXNeJQ7KXOt3EgfLZEFHcpOrUMPrCXZk
NNI5t3YRCQ12RcSprj1qr7V9ZS+UWBDsXHyvfuK2GNnQm05aSd+pZgvMPMZ4fKecHePOjlO+Bd5g
D2vlGts/4+EhySnB8esHnFIbAURRPHsl18TlUlRdJQfKFiC4reRB7noI/plvg6aRArBsNlVq5331
lubKgdaX8ZSD6e2wsWsSaR6s+12pxZjptFtYer49okQ6Y1nUCyXeG0+95QGezdIp1Z8XGQpvvwyQ
0wlf2eOKNcx5Wk0ZN5K3xMGtr/R5JJqyAQuxr1yW84Ay+1w9mPGgP0revq+ULtlVmhduYJ1jbLhj
ya6BXBg14JC7vjxPNyK5fuvPnnchpj04gftI2jE9K+OJ9dC1vX7gUMQSibMjmhAxhduub+84Mxh2
EQIDAQABo4IBbDCCAWgwEgYDVR0TAQH/BAgwBgEB/wIBDDAdBgNVHQ4EFgQU+SSsD7K1+HnA+mCI
G8TZTQKeFxkwgeMGA1UdIwSB2zCB2IAU+SSsD7K1+HnA+mCIG8TZTQKeFxmhgbSkgbEwga4xCzAJ
BgNVBAYTAkVVMUMwQQYDVQQHEzpNYWRyaWQgKHNlZSBjdXJyZW50IGFkZHJlc3MgYXQgd3d3LmNh
bWVyZmlybWEuY29tL2FkZHJlc3MpMRIwEAYDVQQFEwlBODI3NDMyODcxGzAZBgNVBAoTEkFDIENh
bWVyZmlybWEgUy5BLjEpMCcGA1UEAxMgQ2hhbWJlcnMgb2YgQ29tbWVyY2UgUm9vdCAtIDIwMDiC
CQCj2kJ+pLGu2jAOBgNVHQ8BAf8EBAMCAQYwPQYDVR0gBDYwNDAyBgRVHSAAMCowKAYIKwYBBQUH
AgEWHGh0dHA6Ly9wb2xpY3kuY2FtZXJmaXJtYS5jb20wDQYJKoZIhvcNAQEFBQADggIBAJASryI1
wqM58C7e6bXpeHxIvj99RZJe6dqxGfwWPJ+0W2aeaufDuV2I6A+tzyMP3iU6XsxPpcG1Lawk0lgH
3qLPaYRgM+gQDROpI9CF5Y57pp49chNyM/WqfcZjHwj0/gF/JM8rLFQJ3uIrbZLGOU8W6jx+ekbU
RWpGqOt1glanq6B8aBMz9p0w8G8nOSQjKpD9kCk18pPfNKXG9/jvjA9iSnyu0/VU+I22mlaHFoI6
M6taIgj3grrqLuBHmrS1RaMFO9ncLkVAO+rcf+g769HsJtg1pDDFOqxXnrN2pSB7+R5KBWIBpih1
YJeSDW4+TTdDDZIVnBgizVGZoCkaPF+KMjNbMMeJL0eYD6MDxvbxrN8y8NmBGuScvfaAFPDRLLmF
9dijscilIeUcE5fuDr3fKanvNFNb0+RqE4QGtjICxFKuItLcsiFCGtpA8CnJ7AoMXOLQusxI0zcK
zBIKinmwPQN/aUv0NCB9szTqjktk9T79syNnFQ0EuPAtwQlRPLJsFfClI9eDdOTlLsn+mCdCxqvG
nrDQWzilm1DefhiYtUU79nm06PcaewaD+9CL2rvHvRirCG88gGtAPxkZumWK5r7VXNM21+9AUiRg
OGcEMeyP84LG3rlV8zsxkVrctQgVrXYlCg17LofiDKYGvCYQbTed7N14jHyAxfDZd0jQ
-----END CERTIFICATE-----

              ]]></file>
              <file Name="1f58a078.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFYDCCA0igAwIBAgIURFc0JFuBiZs18s64KztbpybwdSgwDQYJKoZIhvcNAQELBQAwSDELMAkG
A1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxHjAcBgNVBAMTFVF1b1ZhZGlzIFJv
b3QgQ0EgMiBHMzAeFw0xMjAxMTIxODU5MzJaFw00MjAxMTIxODU5MzJaMEgxCzAJBgNVBAYTAkJN
MRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMR4wHAYDVQQDExVRdW9WYWRpcyBSb290IENBIDIg
RzMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQChriWyARjcV4g/Ruv5r+LrI3HimtFh
ZiFfqq8nUeVuGxbULX1QsFN3vXg6YOJkApt8hpvWGo6t/x8Vf9WVHhLL5hSEBMHfNrMWn4rjyduY
NM7YMxcoRvynyfDStNVNCXJJ+fKH46nafaF9a7I6JaltUkSs+L5u+9ymc5GQYaYDFCDy54ejiK2t
oIz/pgslUiXnFgHVy7g1gQyjO/Dh4fxaXc6AcW34Sas+O7q414AB+6XrW7PFXmAqMaCvN+ggOp+o
MiwMzAkd056OXbxMmO7FGmh77FOm6RQ1o9/NgJ8MSPsc9PG/Srj61YxxSscfrf5BmrODXfKEVu+l
V0POKa2Mq1W/xPtbAd0jIaFYAI7D0GoT7RPjEiuA3GfmlbLNHiJuKvhB1PLKFAeNilUSxmn1uIZo
L1NesNKqIcGY5jDjZ1XHm26sGahVpkUG0CM62+tlXSoREfA7T8pt9DTEceT/AFr2XK4jYIVz8eQQ
sSWu1ZK7E8EM4DnatDlXtas1qnIhO4M15zHfeiFuuDIIfR0ykRVKYnLP43ehvNURG3YBZwjgQQvD
6xVu+KQZ2aKrr+InUlYrAoosFCT5v0ICvybIxo/gbjh9Uy3l7ZizlWNof/k19N+IxWA1ksB8aRxh
lRbQ694Lrz4EEEVlWFA4r0jyWbYW8jwNkALGcC4BrTwV1wIDAQABo0IwQDAPBgNVHRMBAf8EBTAD
AQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQU7edvdlq/YOxJW8ald7tyFnGbxD0wDQYJKoZI
hvcNAQELBQADggIBAJHfgD9DCX5xwvfrs4iP4VGyvD11+ShdyLyZm3tdquXK4Qr36LLTn91nMX66
AarHakE7kNQIXLJgapDwyM4DYvmL7ftuKtwGTTwpD4kWilhMSA/ohGHqPHKmd+RCroijQ1h5fq7K
pVMNqT1wvSAZYaRsOPxDMuHBR//47PERIjKWnML2W2mWeyAMQ0GaW/ZZGYjeVYg3UQt4XAoeo0L9
x52ID8DyeAIkVJOviYeIyUqAHerQbj5hLja7NQ4nlv1mNDthcnPxFlxHBlRJAHpYErAK74X9sbgz
dWqTHBLmYF5vHX/JHyPLhGGfHoJE+V+tYlUkmlKY7VHnoX6XOuYvHxHaU4AshZ6rNRDbIl9qxV6X
U/IyAgkwo1jwDQHVcsaxfGl7w/U2Rcxhbl5MlMVerugOXou/983g7aEOGzPuVBj+D77vfoRrQ+Nw
mNtddbINWQeFFSM51vHfqSYP1kjHs6Yi9TM3WpVHn3u6GBVv/9YUZINJ0gpnIdsPNWNgKCLjsZWD
zYWm3S8P52dSbrsvhXz1SnPnxT7AvSESBT/8twNJAlvIJebiVDj1eYeMHVOyToV7BjjHLPj4sHKN
JeV3UvQDHEimUF+IIDBu8oJDqz2XhOdT+yHBTw8imoa4WSr2Rz0ZiC3oheGe7IUIarFsNMkd7Egr
O3jtZsSOeWmD3n+M
-----END CERTIFICATE-----

              ]]></file>
              <file Name="21855f49.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFaTCCA1GgAwIBAgIJAMMDmu5QkG4oMA0GCSqGSIb3DQEBBQUAMFIxCzAJBgNVBAYTAlNLMRMw
EQYDVQQHEwpCcmF0aXNsYXZhMRMwEQYDVQQKEwpEaXNpZyBhLnMuMRkwFwYDVQQDExBDQSBEaXNp
ZyBSb290IFIxMB4XDTEyMDcxOTA5MDY1NloXDTQyMDcxOTA5MDY1NlowUjELMAkGA1UEBhMCU0sx
EzARBgNVBAcTCkJyYXRpc2xhdmExEzARBgNVBAoTCkRpc2lnIGEucy4xGTAXBgNVBAMTEENBIERp
c2lnIFJvb3QgUjEwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCqw3j33Jijp1pedxiy
3QRkD2P9m5YJgNXoqqXinCaUOuiZc4yd39ffg/N4T0Dhf9Kn0uXKE5Pn7cZ3Xza1lK/oOI7bm+V8
u8yN63Vz4STN5qctGS7Y1oprFOsIYgrY3LMATcMjfF9DCCMyEtztDK3AfQ+lekLZWnDZv6fXARz2
m6uOt0qGeKAeVjGu74IKgEH3G8muqzIm1Cxr7X1r5OJeIgpFy4QxTaz+29FHuvlglzmxZcfe+5nk
CiKxLU3lSCZpq+Kq8/v8kiky6bM+TR8noc2OuRf7JT7JbvN32g0S9l3HuzYQ1VTW8+DiR0jm3hTa
YVKvJrT1cU/J19IG32PK/yHoWQbgCNWEFVP3Q+V8xaCJmGtzxmjOZd69fwX3se72V6FglcXM6pM6
vpmumwKjrckWtc7dXpl4fho5frLABaTAgqWjR56M6ly2vGfb5ipN0gTco65F97yLnByn1tUD3AjL
LhbKXEAz6GfDLuemROoRRRw1ZS0eRWEkG4IupZ0zXWX4Qfkuy5Q/H6MMMSRE7cderVC6xkGbrPAX
ZcD4XW9boAo0PO7X6oifmPmvTiT6l7Jkdtqr9O3jw2Dv1fkCyC2fg69naQanMVXVz0tv/wQFx1is
XxYb5dKj6zHbHzMVTdDypVP1y+E9Tmgt2BLdqvLmTZtJ5cUoobqwWsagtQIDAQABo0IwQDAPBgNV
HRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUiQq0OJMa5qvum5EY+fU8PjXQ
04IwDQYJKoZIhvcNAQEFBQADggIBADKL9p1Kyb4U5YysOMo6CdQbzoaz3evUuii+Eq5FLAR0rBNR
xVgYZk2C2tXck8An4b58n1KeElb21Zyp9HWc+jcSjxyT7Ff+Bw+r1RL3D65hXlaASfX8MPWbTx9B
LxyE04nH4toCdu0Jz2zBuByDHBb6lM19oMgY0sidbvW9adRtPTXoHqJPYNcHKfyyo6SdbhWSVhlM
CrDpfNIZTUJG7L399ldb3Zh+pE3McgODWF3vkzpBemOqfDqo9ayk0d2iLbYq/J8BjuIQscTK5Gfb
VSUZP/3oNn6z4eGBrxEWi1CXYBmCAMBrTXO40RMHPuq2MU/wQppt4hF05ZSsjYSVPCGvxdpHyN85
YmLLW1AL14FABZyb7bq2ix4Eb5YgOe2kfSnbSM6C3NQCjR0EMVrHS/BsYVLXtFHCgWzN4funodKS
ds+xDzdYpPJScWc/DIh4gInByLUfkmO+p3qKViwaqKactV2zY9ATIKHrkWzQjX2v3wvkF7mGnjix
lAxYjOBVqjtjbZqJYLhkKpLGN/R+Q0O3c+gB53+XD9fyexn9GtePyfqFa3qdnom2piiZk4hA9z7N
UaPK6u95RyG1/jLix8NRb76AdPCkwzryT+lf3xkK8jsTQ6wxpLPn6/wY1gGp8yqPNg7rtLG8t0zJ
a7+h89n07eLw4+1knj0vllJPgFOL
-----END CERTIFICATE-----

              ]]></file>
              <file Name="219d9499.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEADCCAuigAwIBAgIBADANBgkqhkiG9w0BAQUFADBjMQswCQYDVQQGEwJVUzEhMB8GA1UEChMY
VGhlIEdvIERhZGR5IEdyb3VwLCBJbmMuMTEwLwYDVQQLEyhHbyBEYWRkeSBDbGFzcyAyIENlcnRp
ZmljYXRpb24gQXV0aG9yaXR5MB4XDTA0MDYyOTE3MDYyMFoXDTM0MDYyOTE3MDYyMFowYzELMAkG
A1UEBhMCVVMxITAfBgNVBAoTGFRoZSBHbyBEYWRkeSBHcm91cCwgSW5jLjExMC8GA1UECxMoR28g
RGFkZHkgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASAwDQYJKoZIhvcNAQEBBQAD
ggENADCCAQgCggEBAN6d1+pXGEmhW+vXX0iG6r7d/+TvZxz0ZWizV3GgXne77ZtJ6XCAPVYYYwhv
2vLM0D9/AlQiVBDYsoHUwHU9S3/Hd8M+eKsaA7Ugay9qK7HFiH7Eux6wwdhFJ2+qN1j3hybX2C32
qRe3H3I2TqYXP2WYktsqbl2i/ojgC95/5Y0V4evLOtXiEqITLdiOr18SPaAIBQi2XKVlOARFmR6j
YGB0xUGlcmIbYsUfb18aQr4CUWWoriMYavx4A6lNf4DD+qta/KFApMoZFv6yyO9ecw3ud72a9nmY
vLEHZ6IVDd2gWMZEewo+YihfukEHU1jPEX44dMX4/7VpkI+EdOqXG68CAQOjgcAwgb0wHQYDVR0O
BBYEFNLEsNKR1EwRcbNhyz2h/t2oatTjMIGNBgNVHSMEgYUwgYKAFNLEsNKR1EwRcbNhyz2h/t2o
atTjoWekZTBjMQswCQYDVQQGEwJVUzEhMB8GA1UEChMYVGhlIEdvIERhZGR5IEdyb3VwLCBJbmMu
MTEwLwYDVQQLEyhHbyBEYWRkeSBDbGFzcyAyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5ggEAMAwG
A1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBADJL87LKPpH8EsahB4yOd6AzBhRckB4Y9wim
PQoZ+YeAEW5p5JYXMP80kWNyOO7MHAGjHZQopDH2esRU1/blMVgDoszOYtuURXO1v0XJJLXVggKt
I3lpjbi2Tc7PTMozI+gciKqdi0FuFskg5YmezTvacPd+mSYgFFQlq25zheabIZ0KbIIOqPjCDPoQ
HmyW74cNxA9hi63ugyuV+I6ShHI56yDqg+2DzZduCLzrTia2cyvk0/ZM/iZx4mERdEr/VxqHD3VI
Ls9RaRegAhJhldXRQLIQTO7ErBBDpqWeCtWVYpoNz4iCxTIM5CufReYNnyicsbkqWletNw+vHX/b
vZ8=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="23f4c490.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEDzCCAvegAwIBAgIBADANBgkqhkiG9w0BAQUFADBoMQswCQYDVQQGEwJVUzElMCMGA1UEChMc
U3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjEyMDAGA1UECxMpU3RhcmZpZWxkIENsYXNzIDIg
Q2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDQwNjI5MTczOTE2WhcNMzQwNjI5MTczOTE2WjBo
MQswCQYDVQQGEwJVUzElMCMGA1UEChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjEyMDAG
A1UECxMpU3RhcmZpZWxkIENsYXNzIDIgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggEgMA0GCSqG
SIb3DQEBAQUAA4IBDQAwggEIAoIBAQC3Msj+6XGmBIWtDBFk385N78gDGIc/oav7PKaf8MOh2tTY
bitTkPskpD6E8J7oX+zlJ0T1KKY/e97gKvDIr1MvnsoFAZMej2YcOadN+lq2cwQlZut3f+dZxkqZ
JRRU6ybH838Z1TBwj6+wRir/resp7defqgSHo9T5iaU0X9tDkYI22WY8sbi5gv2cOj4QyDvvBmVm
epsZGD3/cVE8MC5fvj13c7JdBmzDI1aaK4UmkhynArPkPw2vCHmCuDY96pzTNbO8acr1zJ3o/WSN
F4Azbl5KXZnJHoe0nRrA1W4TNSNe35tfPe/W93bC6j67eA0cQmdrBNj41tpvi/JEoAGrAgEDo4HF
MIHCMB0GA1UdDgQWBBS/X7fRzt0fhvRbVazc1xDCDqmI5zCBkgYDVR0jBIGKMIGHgBS/X7fRzt0f
hvRbVazc1xDCDqmI56FspGowaDELMAkGA1UEBhMCVVMxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNo
bm9sb2dpZXMsIEluYy4xMjAwBgNVBAsTKVN0YXJmaWVsZCBDbGFzcyAyIENlcnRpZmljYXRpb24g
QXV0aG9yaXR5ggEAMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBAAWdP4id0ckaVaGs
afPzWdqbAYcaT1epoXkJKtv3L7IezMdeatiDh6GX70k1PncGQVhiv45YuApnP+yz3SFmH8lU+nLM
PUxA2IGvd56Deruix/U0F47ZEUD0/CwqTRV/p2JdLiXTAAsgGh1o+Re49L2L7ShZ3U0WixeDyLJl
xy16paq8U4Zt3VekyvggQQto8PT7dL5WXXp59fkdheMtlb71cZBDzI0fmgAKhynpVSJYACPq4xJD
KVtHCN2MQWplBqjlIapBtJUhlbl90TSrE9atvNziPTnNvT51cKEYWQPJIrSPnNVeKtelttQKbfi3
QBFGmh95DmK/D5fs4C8fF5Q=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="243eed3d.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEMDCCA5mgAwIBAgIBADANBgkqhkiG9w0BAQQFADCBxzELMAkGA1UEBhMCVVMx
FzAVBgNVBAgTDk5vcnRoIENhcm9saW5hMR8wHQYDVQQHExZSZXNlYXJjaCBUcmlh
bmdsZSBQYXJrMRYwFAYDVQQKEw1SZWQgSGF0LCBJbmMuMSEwHwYDVQQLExhSZWQg
SGF0IE5ldHdvcmsgU2VydmljZXMxIzAhBgNVBAMTGlJITlMgQ2VydGlmaWNhdGUg
QXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9yaG5zQHJlZGhhdC5jb20wHhcNMDAw
ODIzMjI0NTU1WhcNMDMwODI4MjI0NTU1WjCBxzELMAkGA1UEBhMCVVMxFzAVBgNV
BAgTDk5vcnRoIENhcm9saW5hMR8wHQYDVQQHExZSZXNlYXJjaCBUcmlhbmdsZSBQ
YXJrMRYwFAYDVQQKEw1SZWQgSGF0LCBJbmMuMSEwHwYDVQQLExhSZWQgSGF0IE5l
dHdvcmsgU2VydmljZXMxIzAhBgNVBAMTGlJITlMgQ2VydGlmaWNhdGUgQXV0aG9y
aXR5MR4wHAYJKoZIhvcNAQkBFg9yaG5zQHJlZGhhdC5jb20wgZ8wDQYJKoZIhvcN
AQEBBQADgY0AMIGJAoGBAMBoKxIw4iEtIsZycVu/F6CTEOmb48mNOy2sxLuVO+DK
VTLclcIQswSyUfvohWEWNKW0HWdcp3f08JLatIuvlZNi82YprsCIt2SEDkiQYPhg
PgB/VN0XpqwY4ELefL6Qgff0BYUKCMzV8p/8JIt3pT3pSKnvDztjo/6mg0zo3At3
AgMBAAGjggEoMIIBJDAdBgNVHQ4EFgQUVBXNnyz37A0f0qi+TAesiD77mwowgfQG
A1UdIwSB7DCB6YAUVBXNnyz37A0f0qi+TAesiD77mwqhgc2kgcowgccxCzAJBgNV
BAYTAlVTMRcwFQYDVQQIEw5Ob3J0aCBDYXJvbGluYTEfMB0GA1UEBxMWUmVzZWFy
Y2ggVHJpYW5nbGUgUGFyazEWMBQGA1UEChMNUmVkIEhhdCwgSW5jLjEhMB8GA1UE
CxMYUmVkIEhhdCBOZXR3b3JrIFNlcnZpY2VzMSMwIQYDVQQDExpSSE5TIENlcnRp
ZmljYXRlIEF1dGhvcml0eTEeMBwGCSqGSIb3DQEJARYPcmhuc0ByZWRoYXQuY29t
ggEAMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEEBQADgYEAkwGIiGdnkYye0BIU
kHESh1UK8lIbrfLTBx2vcJm7sM2AI8ntK3PpY7HQs4xgxUJkpsGVVpDFNQYDWPWO
K9n5qaAQqZn3FUKSpVDXEQfxAtXgcORVbirOJfhdzQsvEGH49iBCzMOJ+IpPgiQS
zzl/IagsjVKXUsX3X0KlhwlmsMw=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="256fd83b.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDXDCCAsWgAwIBAgICA+owDQYJKoZIhvcNAQEEBQAwgbwxCzAJBgNVBAYTAkRF
MRAwDgYDVQQIEwdIYW1idXJnMRAwDgYDVQQHEwdIYW1idXJnMTowOAYDVQQKEzFU
QyBUcnVzdENlbnRlciBmb3IgU2VjdXJpdHkgaW4gRGF0YSBOZXR3b3JrcyBHbWJI
MSIwIAYDVQQLExlUQyBUcnVzdENlbnRlciBDbGFzcyAyIENBMSkwJwYJKoZIhvcN
AQkBFhpjZXJ0aWZpY2F0ZUB0cnVzdGNlbnRlci5kZTAeFw05ODAzMDkxMTU5NTla
Fw0xMTAxMDExMTU5NTlaMIG8MQswCQYDVQQGEwJERTEQMA4GA1UECBMHSGFtYnVy
ZzEQMA4GA1UEBxMHSGFtYnVyZzE6MDgGA1UEChMxVEMgVHJ1c3RDZW50ZXIgZm9y
IFNlY3VyaXR5IGluIERhdGEgTmV0d29ya3MgR21iSDEiMCAGA1UECxMZVEMgVHJ1
c3RDZW50ZXIgQ2xhc3MgMiBDQTEpMCcGCSqGSIb3DQEJARYaY2VydGlmaWNhdGVA
dHJ1c3RjZW50ZXIuZGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBANo46O0y
AClxgwENv4wB3NrGrTmkqYov1YtcaF9QxmL1Zr3KkSLsqh1R1z2zUbKDTl3LSbDw
TFXlay3HhQswHJJOgtTKAu33b77c4OMUuAVT8pr0VotanoWT0bSCVq5Nu6hLVxa8
/vhYnvgpjbB7zXjJT6yLZwzxnPv8V5tXXE8NAgMBAAGjazBpMA8GA1UdEwEB/wQF
MAMBAf8wDgYDVR0PAQH/BAQDAgGGMDMGCWCGSAGG+EIBCAQmFiRodHRwOi8vd3d3
LnRydXN0Y2VudGVyLmRlL2d1aWRlbGluZXMwEQYJYIZIAYb4QgEBBAQDAgAHMA0G
CSqGSIb3DQEBBAUAA4GBAIRS+yjf/x91AbwBvgRWl2p0QiQxg/lGsQaKic+WLDO/
jLVfenKhhQbOhvgFjuj5Jcrag4wGrOs2bYWRNAQ29ELw+HkuCkhcq8xRT3h2oNms
Gb0q0WkEKJHKNhAngFdb0lz1wlurZIFjdFH0l7/NEij3TWZ/p/AcASZ4smZHcFFk
-----END CERTIFICATE-----

              ]]></file>
              <file Name="27af790d.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIICrjCCAjWgAwIBAgIQPLL0SAoA4v7rJDteYD7DazAKBggqhkjOPQQDAzCBmDELMAkGA1UEBhMC
VVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xOTA3BgNVBAsTMChjKSAyMDA3IEdlb1RydXN0IElu
Yy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTE2MDQGA1UEAxMtR2VvVHJ1c3QgUHJpbWFyeSBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcyMB4XDTA3MTEwNTAwMDAwMFoXDTM4MDExODIzNTk1
OVowgZgxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTkwNwYDVQQLEzAoYykg
MjAwNyBHZW9UcnVzdCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxNjA0BgNVBAMTLUdl
b1RydXN0IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMjB2MBAGByqGSM49AgEG
BSuBBAAiA2IABBWx6P0DFUPlrOuHNxFi79KDNlJ9RVcLSo17VDs6bl8VAsBQps8lL33KSLjHUGMc
KiEIfJo22Av+0SbFWDEwKCXzXV2juLaltJLtbCyf691DiaI8S0iRHVDsJt/WYC69IaNCMEAwDwYD
VR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFBVfNVdRVfslsq0DafwBo/q+
EVXVMAoGCCqGSM49BAMDA2cAMGQCMGSWWaboCd6LuvpaiIjwH5HTRqjySkwCY/tsXzjbLkGTqQ7m
ndwxHLKgpxgceeHHNgIwOlavmnRs9vuD4DPTCF+hnMJbn0bWtsuRBmOiBuczrD6ogRLQy7rQkgu2
npaqBA+K
-----END CERTIFICATE-----

              ]]></file>
              <file Name="2afc57aa.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEqjCCA5KgAwIBAgIOLmoAAQACH9dSISwRXDswDQYJKoZIhvcNAQEFBQAwdjELMAkGA1UEBhMC
REUxHDAaBgNVBAoTE1RDIFRydXN0Q2VudGVyIEdtYkgxIjAgBgNVBAsTGVRDIFRydXN0Q2VudGVy
IENsYXNzIDIgQ0ExJTAjBgNVBAMTHFRDIFRydXN0Q2VudGVyIENsYXNzIDIgQ0EgSUkwHhcNMDYw
MTEyMTQzODQzWhcNMjUxMjMxMjI1OTU5WjB2MQswCQYDVQQGEwJERTEcMBoGA1UEChMTVEMgVHJ1
c3RDZW50ZXIgR21iSDEiMCAGA1UECxMZVEMgVHJ1c3RDZW50ZXIgQ2xhc3MgMiBDQTElMCMGA1UE
AxMcVEMgVHJ1c3RDZW50ZXIgQ2xhc3MgMiBDQSBJSTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
AQoCggEBAKuAh5uO8MN8h9foJIIRszzdQ2Lu+MNF2ujhoF/RKrLqk2jftMjWQ+nEdVl//OEd+DFw
IxuInie5e/060smp6RQvkL4DUsFJzfb95AhmC1eKokKguNV/aVyQMrKXDcpK3EY+AlWJU+MaWss2
xgdW94zPEfRMuzBwBJWl9jmM/XOBCH2JXjIeIqkiRUuwZi4wzJ9l/fzLganx4Duvo4bRierERXlQ
Xa7pIXSSTYtZgo+U4+lK8edJsBTj9WLL1XK9H7nSn6DNqPoByNkN39r8R52zyFTfSUrxIan+GE7u
SNQZu+995OKdy1u2bv/jzVrndIIFuoAlOMvkaZ6vQaoahPUCAwEAAaOCATQwggEwMA8GA1UdEwEB
/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBTjq1RMgKHbVkO3kUrL84J6E1wIqzCB
7QYDVR0fBIHlMIHiMIHfoIHcoIHZhjVodHRwOi8vd3d3LnRydXN0Y2VudGVyLmRlL2NybC92Mi90
Y19jbGFzc18yX2NhX0lJLmNybIaBn2xkYXA6Ly93d3cudHJ1c3RjZW50ZXIuZGUvQ049VEMlMjBU
cnVzdENlbnRlciUyMENsYXNzJTIwMiUyMENBJTIwSUksTz1UQyUyMFRydXN0Q2VudGVyJTIwR21i
SCxPVT1yb290Y2VydHMsREM9dHJ1c3RjZW50ZXIsREM9ZGU/Y2VydGlmaWNhdGVSZXZvY2F0aW9u
TGlzdD9iYXNlPzANBgkqhkiG9w0BAQUFAAOCAQEAjNfffu4bgBCzg/XbEeprS6iSGNn3Bzn1LL4G
dXpoUxUc6krtXvwjshOg0wn/9vYua0Fxec3ibf2uWWuFHbhOIprtZjluS5TmVfwLG4t3wVMTZonZ
KNaL80VKY7f9ewthXbhtvsPcW3nS7Yblok2+XnR8au0WOB9/WIFaGusyiC2y8zl3gK9etmF1Kdsj
TYjKUCjLhdLTEKJZbtOTVAB6okaVhgWcqRmY5TFyDADiZ9lA4CQze28suVyrZZ0srHbqNZn1l7kP
JOzHdiEoZa5X6AeIdUpWoNIFOqTmjZKILPPy4cHGYdtBxceb9w4aUUXCYWvcZCcXjFq32nQozZfk
vQ==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="2d9dafe4.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFWTCCA0GgAwIBAgIBAjANBgkqhkiG9w0BAQsFADBOMQswCQYDVQQGEwJOTzEdMBsGA1UECgwU
QnV5cGFzcyBBUy05ODMxNjMzMjcxIDAeBgNVBAMMF0J1eXBhc3MgQ2xhc3MgMyBSb290IENBMB4X
DTEwMTAyNjA4Mjg1OFoXDTQwMTAyNjA4Mjg1OFowTjELMAkGA1UEBhMCTk8xHTAbBgNVBAoMFEJ1
eXBhc3MgQVMtOTgzMTYzMzI3MSAwHgYDVQQDDBdCdXlwYXNzIENsYXNzIDMgUm9vdCBDQTCCAiIw
DQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAKXaCpUWUOOV8l6ddjEGMnqb8RB2uACatVI2zSRH
sJ8YZLya9vrVediQYkwiL944PdbgqOkcLNt4EemOaFEVcsfzM4fkoF0LXOBXByow9c3EN3coTRiR
5r/VUv1xLXA+58bEiuPwKAv0dpihi4dVsjoT/Lc+JzeOIuOoTyrvYLs9tznDDgFHmV0ST9tD+leh
7fmdvhFHJlsTmKtdFoqwNxxXnUX/iJY2v7vKB3tvh2PX0DJq1l1sDPGzbjniazEuOQAnFN44wOwZ
ZoYS6J1yFhNkUsepNxz9gjDthBgd9K5c/3ATAOux9TN6S9ZV+AWNS2mw9bMoNlwUxFFzTWsL8TQH
2xc519woe2v1n/MuwU8XKhDzzMro6/1rqy6any2CbgTUUgGTLT2G/H783+9CHaZr77kgxve9oKeV
/afmiSTYzIw0bOIjL9kSGiG5VZFvC5F5GQytQIgLcOJ60g7YaEi7ghM5EFjp2CoHxhLbWNvSO1UQ
RwUVZ2J+GGOmRj8JDlQyXr8NYnon74Do29lLBlo3WiXQCBJ31G8JUJc9yB3D34xFMFbG02SrZvPA
Xpacw8Tvw3xrizp5f7NJzz3iiZ+gMEuFuZyUJHmPfWupRWgPK9Dx2hzLabjKSWJtyNBjYt1gD1iq
j6G8BaVmos8bdrKEZLFMOVLAMLrwjEsCsLa3AgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYD
VR0OBBYEFEe4zf/lb+74suwvTg75JbCOPGvDMA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQsF
AAOCAgEAACAjQTUEkMJAYmDv4jVM1z+s4jSQuKFvdvoWFqRINyzpkMLyPPgKn9iB5btb2iUspKdV
cSQy9sgL8rxq+JOssgfCX5/bzMiKqr5qb+FJEMwx14C7u8jYog5kV+qi9cKpMRXSIGrs/CIBKM+G
uIAeqcwRpTzyFrNHnfzSgCHEy9BHcEGhyoMZCCxt8l13nIoUE9Q2HJLw5QY33KbmkJs4j1xrG0aG
Q0JfPgEHU1RdZX33inOhmlRaHylDFCfChQ+1iHsaO5S3HWCntZznKWlXWpuTekMwGwPXYshApqr8
ZORK15FTAaggiG6cX0S5y2CBNOxv033aSF/rtJC8LakcC6wc1aJoIIAE1vyxjy+7SjENSoYc6+I2
KSb12tjE8nVhz36udmNKekBlk4f4HoCMhuWG1o8O/FMsYOgWYRqiPkN7zTlgVGr18okmAWiDSKIz
6MkEkbIRNBE+6tBDGR8Dk5AM/1E9V/RBbuHLoL7ryWPNbczk+DaqaJ3tvV2XcEQNtg413OEMXbug
UZTLfhbrES+jkkXITHHZvMmZUldGL1DPvTVp9D0VzgalLA8+9oG6lLvDu79leNKGef9JOxqDDPDe
eOzI8k1MGt6CKfjBWtrt7uYnXuhF0J0cUahoq0Tj0Itq4/g7u9xN12TyUb7mqqta6THuBrxzvxNi
Cp/HuZc=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="2edf7016.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIICPTCCAaYCEQDNun9W8N/kvFT+IqyzcqpVMA0GCSqGSIb3DQEBAgUAMF8xCzAJ
BgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE3MDUGA1UECxMuQ2xh
c3MgMSBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw05
NjAxMjkwMDAwMDBaFw0yODA4MDEyMzU5NTlaMF8xCzAJBgNVBAYTAlVTMRcwFQYD
VQQKEw5WZXJpU2lnbiwgSW5jLjE3MDUGA1UECxMuQ2xhc3MgMSBQdWJsaWMgUHJp
bWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCBnzANBgkqhkiG9w0BAQEFAAOB
jQAwgYkCgYEA5Rm/baNWYS2ZSHH2Z965jeu3noaACpEO+jglr0aIguVzqKCbJF0N
H8xlbgyw0FaEGIeaBpsQoXPftFg5a27B9hXVqKg/qhIGjTGsf7A01480Z4gJzRQR
4k5FVmkfeAKA2txHkSm7NsljXMXg1y2He6G3MrB7MLoqLzGq7qNn2tsCAwEAATAN
BgkqhkiG9w0BAQIFAAOBgQBMP7iLxmjf7kMzDl3ppssHhE16M/+SG/Q2rdiVIjZo
EWx8QszznC7EBz8UsA9P/5CSdvnivErpj82ggAr3xSnxgiJduLHdgSOjeyUVRjB5
FvjqBUuUfx3CHMjjt/QQQDwTw18fU+hI5Ia0e6E1sHslurjTjqs/OJ0ANACY89Fx
lA==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="2fa87019.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIID5jCCAs6gAwIBAgIQV8szb8JcFuZHFhfjkDFo4DANBgkqhkiG9w0BAQUFADBiMQswCQYDVQQG
EwJVUzEhMB8GA1UEChMYTmV0d29yayBTb2x1dGlvbnMgTC5MLkMuMTAwLgYDVQQDEydOZXR3b3Jr
IFNvbHV0aW9ucyBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDYxMjAxMDAwMDAwWhcNMjkxMjMx
MjM1OTU5WjBiMQswCQYDVQQGEwJVUzEhMB8GA1UEChMYTmV0d29yayBTb2x1dGlvbnMgTC5MLkMu
MTAwLgYDVQQDEydOZXR3b3JrIFNvbHV0aW9ucyBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDkvH6SMG3G2I4rC7xGzuAnlt7e+foS0zwzc7MEL7xx
jOWftiJgPl9dzgn/ggwbmlFQGiaJ3dVhXRncEg8tCqJDXRfQNJIg6nPPOCwGJgl6cvf6UDL4wpPT
aaIjzkGxzOTVHzbRijr4jGPiFFlp7Q3Tf2vouAPlT2rlmGNpSAW+Lv8ztumXWWn4Zxmuk2GWRBXT
crA/vGp97Eh/jcOrqnErU2lBUzS1sLnFBgrEsEX1QV1uiUV7PTsmjHTC5dLRfbIR1PtYMiKagMnc
/Qzpf14Dl847ABSHJ3A4qY5usyd2mFHgBeMhqxrVhSI8KbWaFsWAqPS7azCPL0YCorEMIuDTAgMB
AAGjgZcwgZQwHQYDVR0OBBYEFCEwyfsA106Y2oeqKtCnLrFAMadMMA4GA1UdDwEB/wQEAwIBBjAP
BgNVHRMBAf8EBTADAQH/MFIGA1UdHwRLMEkwR6BFoEOGQWh0dHA6Ly9jcmwubmV0c29sc3NsLmNv
bS9OZXR3b3JrU29sdXRpb25zQ2VydGlmaWNhdGVBdXRob3JpdHkuY3JsMA0GCSqGSIb3DQEBBQUA
A4IBAQC7rkvnt1frf6ott3NHhWrB5KUd5Oc86fRZZXe1eltajSU24HqXLjjAV2CDmAaDn7l2em5Q
4LqILPxFzBiwmZVRDuwduIj/h1AcgsLj4DKAv6ALR8jDMe+ZZzKATxcheQxpXN5eNK4CtSbqUN9/
GGUsyfJj4akH/nxxH2szJGoeBfcFaMBqEssuXmHLrijTfsK0ZpEmXzwuJF/LWA/rKOyvEZbz3Htv
wKeI8lN3s2Berq4o2jUsbzRF0ybh3uxbTydrFny9RAQYgrOJeRcQcT16ohZO9QHNpGxlaKFJdlxD
ydi8NmdspZS11My5vWo1ViHe2MPr+8ukYEywVaCge1ey
-----END CERTIFICATE-----

              ]]></file>
              <file Name="2fb1850a.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFpDCCA4ygAwIBAgIBATANBgkqhkiG9w0BAQUFADBjMQswCQYDVQQGEwJVUzEcMBoGA1UEChMT
QW1lcmljYSBPbmxpbmUgSW5jLjE2MDQGA1UEAxMtQW1lcmljYSBPbmxpbmUgUm9vdCBDZXJ0aWZp
Y2F0aW9uIEF1dGhvcml0eSAyMB4XDTAyMDUyODA2MDAwMFoXDTM3MDkyOTE0MDgwMFowYzELMAkG
A1UEBhMCVVMxHDAaBgNVBAoTE0FtZXJpY2EgT25saW5lIEluYy4xNjA0BgNVBAMTLUFtZXJpY2Eg
T25saW5lIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgMjCCAiIwDQYJKoZIhvcNAQEBBQAD
ggIPADCCAgoCggIBAMxBRR3pPU0Q9oyxQcngXssNt79Hc9PwVU3dxgz6sWYFas14tNwC206B89en
fHG8dWOgXeMHDEjsJcQDIPT/DjsS/5uN4cbVG7RtIuOx238hZK+GvFciKtZHgVdEglZTvYYUAQv8
f3SkWq7xuhG1m1hagLQ3eAkzfDJHA1zEpYNI9FdWboE2JxhP7JsowtS013wMPgwr38oE18aO6lhO
qKSlGBxsRZijQdEt0sdtjRnxrXm3gT+9BoInLRBYBbV4Bbkv2wxrkJB+FFk4u5QkE+XRnRTf04JN
RvCAOVIyD+OEsnpD8l7eXz8d3eOyG6ChKiMDbi4BFYdcpnV1x5dhvt6G3NRI270qv0pV2uh9UPu0
gBe4lL8BPeraunzgWGcXuVjgiIZGZ2ydEEdYMtA1fHkqkKJaEBEjNa0vzORKW6fIJ/KD3l67Xnfn
6KVuY8INXWHQjNJsWiEOyiijzirplcdIz5ZvHZIlyMbGwcEMBawmxNJ10uEqZ8A9W6Wa6897Gqid
FEXlD6CaZd4vKL3Ob5Rmg0gp2OpljK+T2WSfVVcmv2/LNzGZo2C7HK2JNDJiuEMhBnIMoVxtRsX6
Kc8w3onccVvdtjc+31D1uAclJuW8tf48ArO3+L5DwYcRlJ4jbBeKuIonDFRH8KmzwICMoCfrHRnj
B453cMor9H124HhnAgMBAAGjYzBhMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFE1FwWg4u3Op
aaEg5+31IqEjFNeeMB8GA1UdIwQYMBaAFE1FwWg4u3OpaaEg5+31IqEjFNeeMA4GA1UdDwEB/wQE
AwIBhjANBgkqhkiG9w0BAQUFAAOCAgEAZ2sGuV9FOypLM7PmG2tZTiLMubekJcmnxPBUlgtk87FY
T15R/LKXeydlwuXK5w0MJXti4/qftIe3RUavg6WXSIylvfEWK5t2LHo1YGwRgJfMqZJS5ivmae2p
+DYtLHe/YUjRYwu5W1LtGLBDQiKmsXeu3mnFzcccobGlHBD7GL4acN3Bkku+KVqdPzW+5X1R+FXg
JXUjhx5c3LqdsKyzadsXg8n33gy8CNyRnqjQ1xU3c6U1uPx+xURABsPr+CKAXEfOAuMRn0T//Zoy
zH1kUQ7rVyZ2OuMeIjzCpjbdGe+n/BLzJsBZMYVMnNjP36TMzCmT/5RtdlwTCJfy7aULTd3oyWgO
ZtMADjMSW7yV5TKQqLPGbIOtd+6Lfn6xqavT4fG2wLHqiMDn05DpKJKUe2h7lyoKZy2FAjgQ5ANh
1NolNscIWC2hp1GvMApJ9aZphwctREZ2jirlmjvXGKL8nDgQzMY70rUXOm/9riW99XJZZLF0Kjhf
GEzfz3EEWjbUvy+ZnOjZurGV5gJLIaFb1cFPj65pbVPbAZO1XB4Y3WRayhgoPmMEEf0cjQAPuDff
Z4qdZqkCapH/E8ovXYO8h5Ns3CRRFgQlZvqz2cK6Kb6aSDiCmfS/O0oxGfm/jiEzFMpPVF/7zvuP
cX/9XhmgD0uRuMRUvAawRY8mkaKO/qk=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="31044350.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFLDCCBBSgAwIBAgIEOU99hzANBgkqhkiG9w0BAQUFADBaMQswCQYDVQQGEwJX
VzESMBAGA1UEChMJYmVUUlVTVGVkMRswGQYDVQQDExJiZVRSVVNUZWQgUm9vdCBD
QXMxGjAYBgNVBAMTEWJlVFJVU1RlZCBSb290IENBMB4XDTAwMDYyMDE0MjEwNFoX
DTEwMDYyMDEzMjEwNFowWjELMAkGA1UEBhMCV1cxEjAQBgNVBAoTCWJlVFJVU1Rl
ZDEbMBkGA1UEAxMSYmVUUlVTVGVkIFJvb3QgQ0FzMRowGAYDVQQDExFiZVRSVVNU
ZWQgUm9vdCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANS0c3oT
CjhVAb6JVuGUntS+WutKNHUbYSnE4a0IYCF4SP+00PpeQY1hRIfo7clY+vyTmt9P
6j41ffgzeubx181vSUs9Ty1uDoM6GHh3o8/n9E1z2Jo7Gh2+lVPPIJfCzz4kUmwM
jmVZxXH/YgmPqsWPzGCgc0rXOD8Vcr+il7dw6K/ifhYGTPWqZCZyByWtNfwYsSbX
2P8ZDoMbjNx4RWc0PfSvHI3kbWvtILNnmrRhyxdviTX/507AMhLn7uzf/5cwdO2N
R47rtMNE5qdMf1ZD6Li8tr76g5fmu/vEtpO+GRg+jIG5c4gW9JZDnGdzF5DYCW5j
rEq2I8QBoa2k5MUCAwEAAaOCAfgwggH0MA8GA1UdEwEB/wQFMAMBAf8wggFZBgNV
HSAEggFQMIIBTDCCAUgGCisGAQQBsT4BAAAwggE4MIIBAQYIKwYBBQUHAgIwgfQa
gfFSZWxpYW5jZSBvbiB0aGlzIGNlcnRpZmljYXRlIGJ5IGFueSBwYXJ0eSBhc3N1
bWVzIGFjY2VwdGFuY2Ugb2YgdGhlIHRoZW4gYXBwbGljYWJsZSBzdGFuZGFyZCB0
ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB1c2UsIGFuZCBjZXJ0aWZpY2F0aW9uIHBy
YWN0aWNlIHN0YXRlbWVudCwgd2hpY2ggY2FuIGJlIGZvdW5kIGF0IGJlVFJVU1Rl
ZCdzIHdlYiBzaXRlLCBodHRwczovL3d3dy5iZVRSVVNUZWQuY29tL3ZhdWx0L3Rl
cm1zMDEGCCsGAQUFBwIBFiVodHRwczovL3d3dy5iZVRSVVNUZWQuY29tL3ZhdWx0
L3Rlcm1zMDQGA1UdHwQtMCswKaAnoCWkIzAhMRIwEAYDVQQKEwliZVRSVVNUZWQx
CzAJBgNVBAYTAldXMB0GA1UdDgQWBBQquZtpLjub2M3eKjEENGvKBxirZzAfBgNV
HSMEGDAWgBQquZtpLjub2M3eKjEENGvKBxirZzAOBgNVHQ8BAf8EBAMCAf4wDQYJ
KoZIhvcNAQEFBQADggEBAHlh26Nebhax6nZR+csVm8tpvuaBa58oH2U+3RGFktTo
Qb9+M70j5/Egv6S0phkBxoyNNXxlpE8JpNbYIxUFE6dDea/bow6be3ga8wSGWsb2
jCBHOElQBp1yZzrwmAOtlmdE/D8QDYZN5AA7KXvOOzuZhmElQITcE2K3+spZ1gMe
1lMBzW1MaFVA4e5rxyoAAEiCswoBw2AqDPeCNe5IhpbkdNQ96gFxugR1QKepfzk5
mlWXKWWuGVUlBXJH0+gY3Ljpr0NzARJ0o+FcXxVdJPP55PS2Z2cS52QiivalQaYc
tmBjRYoQtLpGEK5BV2VsPyMQPyEQWbfkQN0mDCP2qq4=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="33815e15.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIHhzCCBW+gAwIBAgIBLTANBgkqhkiG9w0BAQsFADB9MQswCQYDVQQGEwJJTDEWMBQGA1UEChMN
U3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJlIERpZ2l0YWwgQ2VydGlmaWNhdGUgU2lnbmlu
ZzEpMCcGA1UEAxMgU3RhcnRDb20gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDYwOTE3MTk0
NjM3WhcNMzYwOTE3MTk0NjM2WjB9MQswCQYDVQQGEwJJTDEWMBQGA1UEChMNU3RhcnRDb20gTHRk
LjErMCkGA1UECxMiU2VjdXJlIERpZ2l0YWwgQ2VydGlmaWNhdGUgU2lnbmluZzEpMCcGA1UEAxMg
U3RhcnRDb20gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAw
ggIKAoICAQDBiNsJvGxGfHiflXu1M5DycmLWwTYgIiRezul38kMKogZkpMyONvg45iPwbm2xPN1y
o4UcodM9tDMr0y+v/uqwQVlntsQGfQqedIXWeUyAN3rfOQVSWff0G0ZDpNKFhdLDcfN1YjS6LIp/
Ho/u7TTQEceWzVI9ujPW3U3eCztKS5/CJi/6tRYccjV3yjxd5srhJosaNnZcAdt0FCX+7bWgiA/d
eMotHweXMAEtcnn6RtYTKqi5pquDSR3l8u/d5AGOGAqPY1MWhWKpDhk6zLVmpsJrdAfkK+F2PrRt
2PZE4XNiHzvEvqBTViVsUQn3qqvKv3b9bZvzndu/PWa8DFaqr5hIlTpL36dYUNk4dalb6kMMAv+Z
6+hsTXBbKWWc3apdzK8BMewM69KN6Oqce+Zu9ydmDBpI125C4z/eIT574Q1w+2OqqGwaVLRcJXrJ
osmLFqa7LH4XXgVNWG4SHQHuEhANxjJ/GP/89PrNbpHoNkm+Gkhpi8KWTRoSsmkXwQqQ1vp5Iki/
untp+HDH+no32NgN0nZPV/+Qt+OR0t3vwmC3Zzrd/qqc8NSLf3Iizsafl7b4r4qgEKjZ+xjGtrVc
UjyJthkqcwEKDwOzEmDyei+B26Nu/yYwl/WL3YlXtq09s68rxbd2AvCl1iuahhQqcvbjM4xdCUsT
37uMdBNSSwIDAQABo4ICEDCCAgwwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYD
VR0OBBYEFE4L7xqkQFulF2mHMMo0aEPQQa7yMB8GA1UdIwQYMBaAFE4L7xqkQFulF2mHMMo0aEPQ
Qa7yMIIBWgYDVR0gBIIBUTCCAU0wggFJBgsrBgEEAYG1NwEBATCCATgwLgYIKwYBBQUHAgEWImh0
dHA6Ly93d3cuc3RhcnRzc2wuY29tL3BvbGljeS5wZGYwNAYIKwYBBQUHAgEWKGh0dHA6Ly93d3cu
c3RhcnRzc2wuY29tL2ludGVybWVkaWF0ZS5wZGYwgc8GCCsGAQUFBwICMIHCMCcWIFN0YXJ0IENv
bW1lcmNpYWwgKFN0YXJ0Q29tKSBMdGQuMAMCAQEagZZMaW1pdGVkIExpYWJpbGl0eSwgcmVhZCB0
aGUgc2VjdGlvbiAqTGVnYWwgTGltaXRhdGlvbnMqIG9mIHRoZSBTdGFydENvbSBDZXJ0aWZpY2F0
aW9uIEF1dGhvcml0eSBQb2xpY3kgYXZhaWxhYmxlIGF0IGh0dHA6Ly93d3cuc3RhcnRzc2wuY29t
L3BvbGljeS5wZGYwEQYJYIZIAYb4QgEBBAQDAgAHMDgGCWCGSAGG+EIBDQQrFilTdGFydENvbSBG
cmVlIFNTTCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTANBgkqhkiG9w0BAQsFAAOCAgEAjo/n3JR5
fPGFf59Jb2vKXfuM/gTFwWLRfUKKvFO3lANmMD+x5wqnUCBVJX92ehQN6wQOQOY+2IirByeDqXWm
N3PH/UvSTa0XQMhGvjt/UfzDtgUx3M2FIk5xt/JxXrAaxrqTi3iSSoX4eA+D/i+tLPfkpLst0OcN
Org+zvZ49q5HJMqjNTbOx8aHmNrs++myziebiMMEofYLWWivydsQD032ZGNcpRJvkrKTlMeIFw6T
tn5ii5B/q06f/ON1FE8qMt9bDeD1e5MNq6HPh+GlBEXoPBKlCcWw0bdT82AUuoVpaiF8H3VhFyAX
e2w7QSlc4axa0c2Mm+tgHRns9+Ww2vl5GKVFP0lDV9LdJNUso/2RjSe15esUBppMeyG7Oq0wBhjA
2MFrLH9ZXF2RsXAiV+uKa0hK1Q8p7MZAwC+ITGgBF3f0JBlPvfrhsiAhS90a2Cl9qrjeVOwhVYBs
HvUwyKMQ5bLmKhQxw4UtjJixhlpPiVktucf3HMiKf8CdBUrmQk9io20ppB+Fq9vlgcitKj1MXVuE
JnHEhV5xJMqlG2zYYdMa4FTbzrqpMrUi9nNBCV24F10OD5mQ1kfabwo6YigUZ4LZ8dCAWZvLMdib
D4x3TrVoivJs9iQOLWxwxXPR3hTQcY+203sC9uO41Alua551hDnmfyWl8kgAwKQB2j8=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="343eb6cb.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDoTCCAomgAwIBAgILBAAAAAABD4WqLUgwDQYJKoZIhvcNAQEFBQAwOzEYMBYGA1UEChMPQ3li
ZXJ0cnVzdCwgSW5jMR8wHQYDVQQDExZDeWJlcnRydXN0IEdsb2JhbCBSb290MB4XDTA2MTIxNTA4
MDAwMFoXDTIxMTIxNTA4MDAwMFowOzEYMBYGA1UEChMPQ3liZXJ0cnVzdCwgSW5jMR8wHQYDVQQD
ExZDeWJlcnRydXN0IEdsb2JhbCBSb290MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
+Mi8vRRQZhP/8NN57CPytxrHjoXxEnOmGaoQ25yiZXRadz5RfVb23CO21O1fWLE3TdVJDm71aofW
0ozSJ8bi/zafmGWgE07GKmSb1ZASzxQG9Dvj1Ci+6A74q05IlG2OlTEQXO2iLb3VOm2yHLtgwEZL
AfVJrn5GitB0jaEMAs7u/OePuGtm839EAL9mJRQr3RAwHQeWP032a7iPt3sMpTjr3kfb1V05/Iin
89cqdPHoWqI7n1C6poxFNcJQZZXcY4Lv3b93TZxiyWNzFtApD0mpSPCzqrdsxacwOUBdrsTiXSZT
8M4cIwhhqJQZugRiQOwfOHB3EgZxpzAYXSUnpQIDAQABo4GlMIGiMA4GA1UdDwEB/wQEAwIBBjAP
BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBS2CHsNesysIEyGVjJez6tuhS1wVzA/BgNVHR8EODA2
MDSgMqAwhi5odHRwOi8vd3d3Mi5wdWJsaWMtdHJ1c3QuY29tL2NybC9jdC9jdHJvb3QuY3JsMB8G
A1UdIwQYMBaAFLYIew16zKwgTIZWMl7Pq26FLXBXMA0GCSqGSIb3DQEBBQUAA4IBAQBW7wojoFRO
lZfJ+InaRcHUowAl9B8Tq7ejhVhpwjCt2BWKLePJzYFa+HMjWqd8BfP9IjsO0QbE2zZMcwSO5bAi
5MXzLqXZI+O4Tkogp24CJJ8iYGd7ix1yCcUxXOl5n4BHPa2hCwcUPUf/A2kaDAtE52Mlp3+yybh2
hO0j9n0Hq0V+09+zv+mKts2oomcrUtW3ZfA5TGOgkXmTUg9U3YO7n9GPp1Nzw8v/MOx8BLjYRB+T
X3EJIrduPuocA06dGiBh+4E37F78CkWr1+cXVdCg6mCbpvbjjFspwgZgFJ0tl0ypkxWdYcQBX0jW
WL1WMRJOEcgh4LMRkWXbtKaIOM5V
-----END CERTIFICATE-----

              ]]></file>
              <file Name="399e7759.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBhMQswCQYDVQQG
EwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSAw
HgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBDQTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAw
MDAwMDBaMGExCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3
dy5kaWdpY2VydC5jb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IENBMIIBIjANBgkq
hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKPC3eQyaKl7hLOllsBCSDMAZOn
TjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3YnFo97nh6Vfe63SKMI2tavegw5
BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt43C/dxC//AH2hdmoRBBYMql1GNXRor5H
4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7PT19sdl6gSzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y
7vrTC0LUq7dBMtoM1O/4gdW7jVg/tRvoSSiicNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQAB
o2MwYTAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbRTLtm
8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvDl7I90VUwDQYJKoZIhvcNAQEF
BQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/EsrhMAtudXH/vTBH1jLuG2cenTnmCmr
EbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIt
tep3Sp+dWOIrWcBAI+0tKIJFPnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886
UAb3LujEV0lsYSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQk
CAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="3a3b02ce.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIID8TCCAtmgAwIBAgIQQT1yx/RrH4FDffHSKFTfmjANBgkqhkiG9w0BAQUFADCBijELMAkGA1UE
BhMCQ0gxEDAOBgNVBAoTB1dJU2VLZXkxGzAZBgNVBAsTEkNvcHlyaWdodCAoYykgMjAwNTEiMCAG
A1UECxMZT0lTVEUgRm91bmRhdGlvbiBFbmRvcnNlZDEoMCYGA1UEAxMfT0lTVEUgV0lTZUtleSBH
bG9iYWwgUm9vdCBHQSBDQTAeFw0wNTEyMTExNjAzNDRaFw0zNzEyMTExNjA5NTFaMIGKMQswCQYD
VQQGEwJDSDEQMA4GA1UEChMHV0lTZUtleTEbMBkGA1UECxMSQ29weXJpZ2h0IChjKSAyMDA1MSIw
IAYDVQQLExlPSVNURSBGb3VuZGF0aW9uIEVuZG9yc2VkMSgwJgYDVQQDEx9PSVNURSBXSVNlS2V5
IEdsb2JhbCBSb290IEdBIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAy0+zAJs9
Nt350UlqaxBJH+zYK7LG+DKBKUOVTJoZIyEVRd7jyBxRVVuuk+g3/ytr6dTqvirdqFEr12bDYVxg
Asj1znJ7O7jyTmUIms2kahnBAbtzptf2w93NvKSLtZlhuAGio9RN1AU9ka34tAhxZK9w8RxrfvbD
d50kc3vkDIzh2TbhmYsFmQvtRTEJysIA2/dyoJaqlYfQjse2YXMNdmaM3Bu0Y6Kff5MTMPGhJ9vZ
/yxViJGg4E8HsChWjBgbl0SOid3gF27nKu+POQoxhILYQBRJLnpB5Kf+42TMwVlxSywhp1t94B3R
LoGbw9ho972WG6xwsRYUC9tguSYBBQIDAQABo1EwTzALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUw
AwEB/zAdBgNVHQ4EFgQUswN+rja8sHnR3JQmthG+IbJphpQwEAYJKwYBBAGCNxUBBAMCAQAwDQYJ
KoZIhvcNAQEFBQADggEBAEuh/wuHbrP5wUOxSPMowB0uyQlB+pQAHKSkq0lPjz0e701vvbyk9vIm
MMkQyh2I+3QZH4VFvbBsUfk2ftv1TDI6QU9bR8/oCy22xBmddMVHxjtqD6wU2zz0c5ypBd8A3HR4
+vg1YFkCExh8vPtNsCBtQ7tgMHpnM1zFmdH4LTlSc/uMqpclXHLZCB6rTjzjgTGfA6b7wP4piFXa
hNVQA7bihKOmNqoROgHhGEvWRGizPflTdISzRpFGlgC3gCy24eMQ4tui5yiPAZZiFj4A4xylNoEY
okxSdsARo27mHbrjWr42U8U+dY+GaSlYU7Wcu2+fXMUY7N0v4ZjJ/L7fCg0=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="3ad48a91.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDdzCCAl+gAwIBAgIEAgAAuTANBgkqhkiG9w0BAQUFADBaMQswCQYDVQQGEwJJRTESMBAGA1UE
ChMJQmFsdGltb3JlMRMwEQYDVQQLEwpDeWJlclRydXN0MSIwIAYDVQQDExlCYWx0aW1vcmUgQ3li
ZXJUcnVzdCBSb290MB4XDTAwMDUxMjE4NDYwMFoXDTI1MDUxMjIzNTkwMFowWjELMAkGA1UEBhMC
SUUxEjAQBgNVBAoTCUJhbHRpbW9yZTETMBEGA1UECxMKQ3liZXJUcnVzdDEiMCAGA1UEAxMZQmFs
dGltb3JlIEN5YmVyVHJ1c3QgUm9vdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKME
uyKrmD1X6CZymrV51Cni4eiVgLGw41uOKymaZN+hXe2wCQVt2yguzmKiYv60iNoS6zjrIZ3AQSsB
UnuId9Mcj8e6uYi1agnnc+gRQKfRzMpijS3ljwumUNKoUMMo6vWrJYeKmpYcqWe4PwzV9/lSEy/C
G9VwcPCPwBLKBsua4dnKM3p31vjsufFoREJIE9LAwqSuXmD+tqYF/LTdB1kC1FkYmGP1pWPgkAx9
XbIGevOF6uvUA65ehD5f/xXtabz5OTZydc93Uk3zyZAsuT3lySNTPx8kmCFcB5kpvcY67Oduhjpr
l3RjM71oGDHweI12v/yejl0qhqdNkNwnGjkCAwEAAaNFMEMwHQYDVR0OBBYEFOWdWTCCR1jMrPoI
VDaGezq1BE3wMBIGA1UdEwEB/wQIMAYBAf8CAQMwDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEB
BQUAA4IBAQCFDF2O5G9RaEIFoN27TyclhAO992T9Ldcw46QQF+vaKSm2eT929hkTI7gQCvlYpNRh
cL0EYWoSihfVCr3FvDB81ukMJY2GQE/szKN+OMY3EU/t3WgxjkzSswF07r51XgdIGn9w/xZchMB5
hbgF/X++ZRGjD8ACtPhSNzkE1akxehi/oCr0Epn3o0WC4zxe9Z2etciefC7IpJ5OCBRLbf1wbWsa
Y71k5h+3zvDyny67G7fyUIhzksLi4xaNmjICq44Y3ekQEe5+NauQrz4wlHrQMz2nZQ/1/I6eYs9H
RCwBXbsdtTLSR9I4LtD+gdwyah617jzV/OeBHRnDJELqYzmp
-----END CERTIFICATE-----

              ]]></file>
              <file Name="3c58f906.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIENjCCAx6gAwIBAgIBATANBgkqhkiG9w0BAQUFADBvMQswCQYDVQQGEwJTRTEUMBIGA1UEChML
QWRkVHJ1c3QgQUIxJjAkBgNVBAsTHUFkZFRydXN0IEV4dGVybmFsIFRUUCBOZXR3b3JrMSIwIAYD
VQQDExlBZGRUcnVzdCBFeHRlcm5hbCBDQSBSb290MB4XDTAwMDUzMDEwNDgzOFoXDTIwMDUzMDEw
NDgzOFowbzELMAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMSYwJAYDVQQLEx1BZGRU
cnVzdCBFeHRlcm5hbCBUVFAgTmV0d29yazEiMCAGA1UEAxMZQWRkVHJ1c3QgRXh0ZXJuYWwgQ0Eg
Um9vdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALf3GjPm8gAELTngTlvtH7xsD821
+iO2zt6bETOXpClMfZOfvUq8k+0DGuOPz+VtUFrWlymUWoCwSXrbLpX9uMq/NzgtHj6RQa1wVsfw
Tz/oMp50ysiQVOnGXw94nZpAPA6sYapeFI+eh6FqUNzXmk6vBbOmcZSccbNQYArHE504B4YCqOmo
aSYYkKtMsE8jqzpPhNjfzp/haW+710LXa0Tkx63ubUFfclpxCDezeWWkWaCUN/cALw3CknLa0Dhy
2xSoRcRdKn23tNbE7qzNE0S3ySvdQwAl+mG5aWpYIxG3pzOPVnVZ9c0p10a3CitlttNCbxWyuHv7
7+ldU9U0WicCAwEAAaOB3DCB2TAdBgNVHQ4EFgQUrb2YejS0Jvf6xCZU7wO94CTLVBowCwYDVR0P
BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wgZkGA1UdIwSBkTCBjoAUrb2YejS0Jvf6xCZU7wO94CTL
VBqhc6RxMG8xCzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRUcnVzdCBBQjEmMCQGA1UECxMdQWRk
VHJ1c3QgRXh0ZXJuYWwgVFRQIE5ldHdvcmsxIjAgBgNVBAMTGUFkZFRydXN0IEV4dGVybmFsIENB
IFJvb3SCAQEwDQYJKoZIhvcNAQEFBQADggEBALCb4IUlwtYj4g+WBpKdQZic2YR5gdkeWxQHIzZl
j7DYd7usQWxHYINRsPkyPef89iYTx4AWpb9a/IfPeHmJIZriTAcKhjW88t5RxNKWt9x+Tu5w/Rw5
6wwCURQtjr0W4MHfRnXnJK3s9EK0hZNwEGe6nQY1ShjTK3rMUUKhemPR5ruhxSvCNr4TDea9Y355
e6cJDUCrat2PisP29owaQgVR1EX1n6diIWgVIEM8med8vSTYqZEXc4g/VhsxOBi0cQ+azcgOno4u
G+GMmIPLHzHxREzGBHNJdmAPx/i9F4BrLunMTA5amnkPIAou1Z5jJh5VkpTYghdae9C8x49OhgQ=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="3c860d51.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFujCCA6KgAwIBAgIJALtAHEP1Xk+wMA0GCSqGSIb3DQEBBQUAMEUxCzAJBgNVBAYTAkNIMRUw
EwYDVQQKEwxTd2lzc1NpZ24gQUcxHzAdBgNVBAMTFlN3aXNzU2lnbiBHb2xkIENBIC0gRzIwHhcN
MDYxMDI1MDgzMDM1WhcNMzYxMDI1MDgzMDM1WjBFMQswCQYDVQQGEwJDSDEVMBMGA1UEChMMU3dp
c3NTaWduIEFHMR8wHQYDVQQDExZTd2lzc1NpZ24gR29sZCBDQSAtIEcyMIICIjANBgkqhkiG9w0B
AQEFAAOCAg8AMIICCgKCAgEAr+TufoskDhJuqVAtFkQ7kpJcyrhdhJJCEyq8ZVeCQD5XJM1QiyUq
t2/876LQwB8CJEoTlo8jE+YoWACjR8cGp4QjK7u9lit/VcyLwVcfDmJlD909Vopz2q5+bbqBHH5C
jCA12UNNhPqE21Is8w4ndwtrvxEvcnifLtg+5hg3Wipy+dpikJKVyh+c6bM8K8vzARO/Ws/BtQpg
vd21mWRTuKCWs2/iJneRjOBiEAKfNA+k1ZIzUd6+jbqEemA8atufK+ze3gE/bk3lUIbLtK/tREDF
ylqM2tIrfKjuvqblCqoOpd8FUrdVxyJdMmqXl2MT28nbeTZ7hTpKxVKJ+STnnXepgv9VHKVxaSvR
AiTysybUa9oEVeXBCsdtMDeQKuSeFDNeFhdVxVu1yzSJkvGdJo+hB9TGsnhQ2wwMC3wLjEHXuend
jIj3o02yMszYF9rNt85mndT9Xv+9lz4pded+p2JYryU0pUHHPbwNUMoDAw8IWh+Vc3hiv69yFGkO
peUDDniOJihC8AcLYiAQZzlG+qkDzAQ4embvIIO1jEpWjpEA/I5cgt6IoMPiaG59je883WX0XaxR
7ySArqpWl2/5rX3aYT+YdzylkbYcjCbaZaIJbcHiVOO5ykxMgI93e2CaHt+28kgeDrpOVG2Y4OGi
GqJ3UM/EY5LsRxmd6+ZrzsECAwEAAaOBrDCBqTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUw
AwEB/zAdBgNVHQ4EFgQUWyV7lqRlUX64OfPAeGZe6Drn8O4wHwYDVR0jBBgwFoAUWyV7lqRlUX64
OfPAeGZe6Drn8O4wRgYDVR0gBD8wPTA7BglghXQBWQECAQEwLjAsBggrBgEFBQcCARYgaHR0cDov
L3JlcG9zaXRvcnkuc3dpc3NzaWduLmNvbS8wDQYJKoZIhvcNAQEFBQADggIBACe645R88a7A3hfm
5djV9VSwg/S7zV4Fe0+fdWavPOhWfvxyeDgD2StiGwC5+OlgzczOUYrHUDFu4Up+GC9pWbY9ZIEr
44OE5iKHjn3g7gKZYbge9LgriBIWhMIxkziWMaa5O1M/wySTVltpkuzFwbs4AOPsF6m43Md8AYOf
Mke6UiI0HTJ6CVanfCU2qT1L2sCCbwq7EsiHSycR+R4tx5M/nttfJmtS2S6K8RTGRI0Vqbe/vd6m
Gu6uLftIdxf+u+yvGPUqUfA5hJeVbG4bwyvEdGB5JbAKJ9/fXtI5z0V9QkvfsywexcZdylU6oJxp
mo/a77KwPJ+HbBIrZXAVUjEaJM9vMSNQH4xPjyPDdEFjHFWoFN0+4FFQz/EbMFYOkrCChdiDyyJk
vC24JdVUorgG6q2SpCSgwYa1ShNqR88uC1aVVMvOmttqtKay20EIhid392qgQmwLOM7XdVAyksLf
KzAiSNDVQTglXaTpXZ/GlHXQRf0wl0OPkKsKx4ZzYEppLd6leNcG2mqeSz53OiATIgHQv2ieY2Br
NU0LbbqhPcCT4H8js1WtciVORvnSFu+wZMEBnunKoGqYDs/YYPIvSbjkQuE4NRb0yG5P94FW6Lqj
viOvrv1vA+ACOzB2+httQc8Bsem4yWb02ybzOqR08kkkW8mw0FfB+j564ZfJ
-----END CERTIFICATE-----

              ]]></file>
              <file Name="3c9a4d3b.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIH0zCCBbugAwIBAgIIXsO3pkN/pOAwDQYJKoZIhvcNAQEFBQAwQjESMBAGA1UEAwwJQUNDVlJB
SVoxMRAwDgYDVQQLDAdQS0lBQ0NWMQ0wCwYDVQQKDARBQ0NWMQswCQYDVQQGEwJFUzAeFw0xMTA1
MDUwOTM3MzdaFw0zMDEyMzEwOTM3MzdaMEIxEjAQBgNVBAMMCUFDQ1ZSQUlaMTEQMA4GA1UECwwH
UEtJQUNDVjENMAsGA1UECgwEQUNDVjELMAkGA1UEBhMCRVMwggIiMA0GCSqGSIb3DQEBAQUAA4IC
DwAwggIKAoICAQCbqau/YUqXry+XZpp0X9DZlv3P4uRm7x8fRzPCRKPfmt4ftVTdFXxpNRFvu8gM
jmoYHtiP2Ra8EEg2XPBjs5BaXCQ316PWywlxufEBcoSwfdtNgM3802/J+Nq2DoLSRYWoG2ioPej0
RGy9ocLLA76MPhMAhN9KSMDjIgro6TenGEyxCQ0jVn8ETdkXhBilyNpAlHPrzg5XPAOBOp0KoVdD
aaxXbXmQeOW1tDvYvEyNKKGno6e6Ak4l0Squ7a4DIrhrIA8wKFSVf+DuzgpmndFALW4ir50awQUZ
0m/A8p/4e7MCQvtQqR0tkw8jq8bBD5L/0KIV9VMJcRz/RROE5iZe+OCIHAr8Fraocwa48GOEAqDG
WuzndN9wrqODJerWx5eHk6fGioozl2A3ED6XPm4pFdahD9GILBKfb6qkxkLrQaLjlUPTAYVtjrs7
8yM2x/474KElB0iryYl0/wiPgL/AlmXz7uxLaL2diMMxs0Dx6M/2OLuc5NF/1OVYm3z61PMOm3WR
5LpSLhl+0fXNWhn8ugb2+1KoS5kE3fj5tItQo05iifCHJPqDQsGH+tUtKSpacXpkatcnYGMN285J
9Y0fkIkyF/hzQ7jSWpOGYdbhdQrqeWZ2iE9x6wQl1gpaepPluUsXQA+xtrn13k/c4LOsOxFwYIRK
Q26ZIMApcQrAZQIDAQABo4ICyzCCAscwfQYIKwYBBQUHAQEEcTBvMEwGCCsGAQUFBzAChkBodHRw
Oi8vd3d3LmFjY3YuZXMvZmlsZWFkbWluL0FyY2hpdm9zL2NlcnRpZmljYWRvcy9yYWl6YWNjdjEu
Y3J0MB8GCCsGAQUFBzABhhNodHRwOi8vb2NzcC5hY2N2LmVzMB0GA1UdDgQWBBTSh7Tj3zcnk1X2
VuqB5TbMjB4/vTAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFNKHtOPfNyeTVfZW6oHlNsyM
Hj+9MIIBcwYDVR0gBIIBajCCAWYwggFiBgRVHSAAMIIBWDCCASIGCCsGAQUFBwICMIIBFB6CARAA
QQB1AHQAbwByAGkAZABhAGQAIABkAGUAIABDAGUAcgB0AGkAZgBpAGMAYQBjAGkA8wBuACAAUgBh
AO0AegAgAGQAZQAgAGwAYQAgAEEAQwBDAFYAIAAoAEEAZwBlAG4AYwBpAGEAIABkAGUAIABUAGUA
YwBuAG8AbABvAGcA7QBhACAAeQAgAEMAZQByAHQAaQBmAGkAYwBhAGMAaQDzAG4AIABFAGwAZQBj
AHQAcgDzAG4AaQBjAGEALAAgAEMASQBGACAAUQA0ADYAMAAxADEANQA2AEUAKQAuACAAQwBQAFMA
IABlAG4AIABoAHQAdABwADoALwAvAHcAdwB3AC4AYQBjAGMAdgAuAGUAczAwBggrBgEFBQcCARYk
aHR0cDovL3d3dy5hY2N2LmVzL2xlZ2lzbGFjaW9uX2MuaHRtMFUGA1UdHwROMEwwSqBIoEaGRGh0
dHA6Ly93d3cuYWNjdi5lcy9maWxlYWRtaW4vQXJjaGl2b3MvY2VydGlmaWNhZG9zL3JhaXphY2N2
MV9kZXIuY3JsMA4GA1UdDwEB/wQEAwIBBjAXBgNVHREEEDAOgQxhY2N2QGFjY3YuZXMwDQYJKoZI
hvcNAQEFBQADggIBAJcxAp/n/UNnSEQU5CmH7UwoZtCPNdpNYbdKl02125DgBS4OxnnQ8pdpD70E
R9m+27Up2pvZrqmZ1dM8MJP1jaGo/AaNRPTKFpV8M9xii6g3+CfYCS0b78gUJyCpZET/LtZ1qmxN
YEAZSUNUY9rizLpm5U9EelvZaoErQNV/+QEnWCzI7UiRfD+mAM/EKXMRNt6GGT6d7hmKG9Ww7Y49
nCrADdg9ZuM8Db3VlFzi4qc1GwQA9j9ajepDvV+JHanBsMyZ4k0ACtrJJ1vnE5Bc5PUzolVt3OAJ
TS+xJlsndQAJxGJ3KQhfnlmstn6tn1QwIgPBHnFk/vk4CpYY3QIUrCPLBhwepH2NDd4nQeit2hW3
sCPdK6jT2iWH7ehVRE2I9DZ+hJp4rPcOVkkO1jMl1oRQQmwgEh0q1b688nCBpHBgvgW1m54ERL5h
I6zppSSMEYCUWqKiuUnSwdzRp+0xESyeGabu4VXhwOrPDYTkF7eifKXeVSUG7szAh1xA2syVP1Xg
Nce4hL60Xc16gwFy7ofmXx2utYXGJt/mwZrpHgJHnyqobalbz+xFd3+YJ5oyXSrjhO7FmGYvliAd
3djDJ9ew+f7Zfc3Qn48LFFhRny+Lwzgt3uiP1o2HpPVWQxaZLPSkVrQ0uGE3ycJYgBugl6H8WY3p
EfbRD0tVNEYqi4Y7
-----END CERTIFICATE-----

              ]]></file>
              <file Name="3d441de8.0"><![CDATA[
-----BEGIN CERTIFICATE-----
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
66+KAQ==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="3e7271e8.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEKjCCAxKgAwIBAgIEOGPe+DANBgkqhkiG9w0BAQUFADCBtDEUMBIGA1UEChMLRW50cnVzdC5u
ZXQxQDA+BgNVBAsUN3d3dy5lbnRydXN0Lm5ldC9DUFNfMjA0OCBpbmNvcnAuIGJ5IHJlZi4gKGxp
bWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAxOTk5IEVudHJ1c3QubmV0IExpbWl0ZWQxMzAxBgNV
BAMTKkVudHJ1c3QubmV0IENlcnRpZmljYXRpb24gQXV0aG9yaXR5ICgyMDQ4KTAeFw05OTEyMjQx
NzUwNTFaFw0yOTA3MjQxNDE1MTJaMIG0MRQwEgYDVQQKEwtFbnRydXN0Lm5ldDFAMD4GA1UECxQ3
d3d3LmVudHJ1c3QubmV0L0NQU18yMDQ4IGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTEl
MCMGA1UECxMcKGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDEzMDEGA1UEAxMqRW50cnVzdC5u
ZXQgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgKDIwNDgpMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A
MIIBCgKCAQEArU1LqRKGsuqjIAcVFmQqK0vRvwtKTY7tgHalZ7d4QMBzQshowNtTK91euHaYNZOL
Gp18EzoOH1u3Hs/lJBQesYGpjX24zGtLA/ECDNyrpUAkAH90lKGdCCmziAv1h3edVc3kw37XamSr
hRSGlVuXMlBvPci6Zgzj/L24ScF2iUkZ/cCovYmjZy/Gn7xxGWC4LeksyZB2ZnuU4q941mVTXTzW
nLLPKQP5L6RQstRIzgUyVYr9smRMDuSYB3Xbf9+5CFVghTAp+XtIpGmG4zU/HoZdenoVve8AjhUi
VBcAkCaTvA5JaJG/+EfTnZVCwQ5N328mz8MYIWJmQ3DW1cAH4QIDAQABo0IwQDAOBgNVHQ8BAf8E
BAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUVeSB0RGAvtiJuQijMfmhJAkWuXAwDQYJ
KoZIhvcNAQEFBQADggEBADubj1abMOdTmXx6eadNl9cZlZD7Bh/KM3xGY4+WZiT6QBshJ8rmcnPy
T/4xmf3IDExoU8aAghOY+rat2l098c5u9hURlIIM7j+VrxGrD9cv3h8Dj1csHsm7mhpElesYT6Yf
zX1XEC+bBAlahLVu2B064dae0Wx5XnkcFMXj0EyTO2U87d89vqbllRrDtRnDvV5bu/8j72gZyxKT
J1wDLW8w0B62GqzeWvfRqqgnpv55gcR5mTNXuhKwqeBCbJPKVt7+bYQLCIt+jerXmCHG8+c8eS9e
nNFMFY3h7CI3zJpDC5fcgJCNs2ebb0gIFVbPv/ErfF6adulZkMV8gzURZVE=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="40dc992e.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEMTCCAxmgAwIBAgIBADANBgkqhkiG9w0BAQUFADCBlTELMAkGA1UEBhMCR1IxRDBCBgNVBAoT
O0hlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJjaCBJbnN0aXR1dGlvbnMgQ2VydC4gQXV0aG9y
aXR5MUAwPgYDVQQDEzdIZWxsZW5pYyBBY2FkZW1pYyBhbmQgUmVzZWFyY2ggSW5zdGl0dXRpb25z
IFJvb3RDQSAyMDExMB4XDTExMTIwNjEzNDk1MloXDTMxMTIwMTEzNDk1MlowgZUxCzAJBgNVBAYT
AkdSMUQwQgYDVQQKEztIZWxsZW5pYyBBY2FkZW1pYyBhbmQgUmVzZWFyY2ggSW5zdGl0dXRpb25z
IENlcnQuIEF1dGhvcml0eTFAMD4GA1UEAxM3SGVsbGVuaWMgQWNhZGVtaWMgYW5kIFJlc2VhcmNo
IEluc3RpdHV0aW9ucyBSb290Q0EgMjAxMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
AKlTAOMupvaO+mDYLZU++CwqVE7NuYRhlFhPjz2L5EPzdYmNUeTDN9KKiE15HrcS3UN4SoqS5tdI
1Q+kOilENbgH9mgdVc04UfCMJDGFr4PJfel3r+0ae50X+bOdOFAPplp5kYCvN66m0zH7tSYJnTxa
71HFK9+WXesyHgLacEnsbgzImjeN9/E2YEsmLIKe0HjzDQ9jpFEw4fkrJxIH2Oq9GGKYsFk3fb7u
8yBRQlqD75O6aRXxYp2fmTmCobd0LovUxQt7L/DICto9eQqakxylKHJzkUOap9FNhYS5qXSPFEDH
3N6sQWRstBmbAmNtJGSPRLIl6s5ddAxjMlyNh+UCAwEAAaOBiTCBhjAPBgNVHRMBAf8EBTADAQH/
MAsGA1UdDwQEAwIBBjAdBgNVHQ4EFgQUppFC/RNhSiOeCKQp5dgTBCPuQSUwRwYDVR0eBEAwPqA8
MAWCAy5ncjAFggMuZXUwBoIELmVkdTAGggQub3JnMAWBAy5ncjAFgQMuZXUwBoEELmVkdTAGgQQu
b3JnMA0GCSqGSIb3DQEBBQUAA4IBAQAf73lB4XtuP7KMhjdCSk4cNx6NZrokgclPEg8hwAOXhiVt
XdMiKahsog2p6z0GW5k6x8zDmjR/qw7IThzh+uTczQ2+vyT+bOdrwg3IBp5OjWEopmr95fZi6hg8
TqBTnbI6nOulnJEWtk2C4AwFSKls9cz4y51JtPACpf1wA+2KIaWuE4ZJwzNzvoc7dIsXRSZMFpGD
/md9zU1jZ/rzAxKWeAaNsWftjj++n08C9bMJL/NMh98qy5V8AcysNnq/onN694/BtZqhFLKPM58N
7yLcZnuEvUUXBj08yrl3NI/K6s8/MT7jiOOASSXIl7WdmplNsDz4SgCbZN2fOUvRJ9e4
-----END CERTIFICATE-----

              ]]></file>
              <file Name="412bea73.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDKTCCApKgAwIBAgIBADANBgkqhkiG9w0BAQQFADCBzzELMAkGA1UEBhMCWkEx
FTATBgNVBAgTDFdlc3Rlcm4gQ2FwZTESMBAGA1UEBxMJQ2FwZSBUb3duMRowGAYD
VQQKExFUaGF3dGUgQ29uc3VsdGluZzEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBT
ZXJ2aWNlcyBEaXZpc2lvbjEjMCEGA1UEAxMaVGhhd3RlIFBlcnNvbmFsIFByZW1p
dW0gQ0ExKjAoBgkqhkiG9w0BCQEWG3BlcnNvbmFsLXByZW1pdW1AdGhhd3RlLmNv
bTAeFw05NjAxMDEwMDAwMDBaFw0yMDEyMzEyMzU5NTlaMIHPMQswCQYDVQQGEwJa
QTEVMBMGA1UECBMMV2VzdGVybiBDYXBlMRIwEAYDVQQHEwlDYXBlIFRvd24xGjAY
BgNVBAoTEVRoYXd0ZSBDb25zdWx0aW5nMSgwJgYDVQQLEx9DZXJ0aWZpY2F0aW9u
IFNlcnZpY2VzIERpdmlzaW9uMSMwIQYDVQQDExpUaGF3dGUgUGVyc29uYWwgUHJl
bWl1bSBDQTEqMCgGCSqGSIb3DQEJARYbcGVyc29uYWwtcHJlbWl1bUB0aGF3dGUu
Y29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDJZtn4B0TPuYwu8KHvE0Vs
Bd/eJxZRNkERbGw77f4QfRKe5ZtCmv5gMcNmt3M6SK5O0DI3lIi1DbbZ8/JE2dWI
Et12TfIa/G8jHnrx2JhFTgcQ7xZC0EN1bUre4qrJMf8fAHB8Zs8QJQi6+u4A6UYD
ZicRFTuqW/KY3TZCstqIdQIDAQABoxMwETAPBgNVHRMBAf8EBTADAQH/MA0GCSqG
SIb3DQEBBAUAA4GBAGk2ifc0KjNyL2071CKyuG+axTZmDhs8obF1Wub9NdP4qPIH
b4Vnjt4rueIXsDqg8A6iAJrf8xQVbrvIhVqYgPn/vnQdPfP+MCXRNzRn+qVxeTBh
KXLA4CxM+1bkOqhv5TJZUtt1KFBZDPgLGeSs2a+WjS9Q2wfD6h+rM+D1KzGJ
-----END CERTIFICATE-----

              ]]></file>
              <file Name="4166ec0c.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIICXDCCAcWgAwIBAgIQCgEBAQAAAnwAAAALAAAAAjANBgkqhkiG9w0BAQUFADA6
MRkwFwYDVQQKExBSU0EgU2VjdXJpdHkgSW5jMR0wGwYDVQQLExRSU0EgU2VjdXJp
dHkgMTAyNCBWMzAeFw0wMTAyMjIyMTAxNDlaFw0yNjAyMjIyMDAxNDlaMDoxGTAX
BgNVBAoTEFJTQSBTZWN1cml0eSBJbmMxHTAbBgNVBAsTFFJTQSBTZWN1cml0eSAx
MDI0IFYzMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDV3f5mCc8kPD6ugU5O
isRpgFtZO9+5TUzKtS3DJy08rwBCbbwoppbPf9dYrIMKo1W1exeQFYRMiu4mmdxY
78c4pqqv0I5CyGLXq6yp+0p9v+r+Ek3d/yYtbzZUaMjShFbuklNhCbM/OZuoyZu9
zp9+1BlqFikYvtc6adwlWzMaUQIDAQABo2MwYTAPBgNVHRMBAf8EBTADAQH/MA4G
A1UdDwEB/wQEAwIBBjAfBgNVHSMEGDAWgBTEwBykB5T9zU0B1FTapQxf3q4FWjAd
BgNVHQ4EFgQUxMAcpAeU/c1NAdRU2qUMX96uBVowDQYJKoZIhvcNAQEFBQADgYEA
Py1q4yZDlX2Jl2X7deRyHUZXxGFraZ8SmyzVWujAovBDleMf6XbN3Ou8k6BlCsdN
T1+nr6JGFLkM88y9am63nd4lQtBU/55oc2PcJOsiv6hy8l4A4Q1OOkNumU4/iXgD
mMrzVcydro7BqkWY+o8aoI2II/EVQQ2lRj6RP4vr93E=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="4184de39.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIIODCCB6GgAwIBAgIBADANBgkqhkiG9w0BAQUFADCCAR4xCzAJBgNVBAYTAkVT
MRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UE
ChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjErMCkGA1UE
ChQiaXBzQG1haWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjE0MDIGA1UECxMr
SVBTIENBIFRpbWVzdGFtcGluZyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTE0MDIG
A1UEAxMrSVBTIENBIFRpbWVzdGFtcGluZyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0
eTEeMBwGCSqGSIb3DQEJARYPaXBzQG1haWwuaXBzLmVzMB4XDTAxMTIyOTAxMTAx
OFoXDTI1MTIyNzAxMTAxOFowggEeMQswCQYDVQQGEwJFUzESMBAGA1UECBMJQmFy
Y2Vsb25hMRIwEAYDVQQHEwlCYXJjZWxvbmExLjAsBgNVBAoTJUlQUyBJbnRlcm5l
dCBwdWJsaXNoaW5nIFNlcnZpY2VzIHMubC4xKzApBgNVBAoUImlwc0BtYWlsLmlw
cy5lcyBDLkkuRi4gIEItNjA5Mjk0NTIxNDAyBgNVBAsTK0lQUyBDQSBUaW1lc3Rh
bXBpbmcgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxNDAyBgNVBAMTK0lQUyBDQSBU
aW1lc3RhbXBpbmcgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxHjAcBgkqhkiG9w0B
CQEWD2lwc0BtYWlsLmlwcy5lczCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
vLjuVqWajOY2ycJioGaBjRrVetJznw6EZLqVtJCneK/K/lRhW86yIFcBrkSSQxA4
Efdo/BdApWgnMjvEp+ZCccWZ73b/K5Uk9UmSGGjKALWkWi9uy9YbLA1UZ2t6KaFY
q6JaANZbuxjC3/YeE1Z2m6Vo4pjOxgOKNNtMg0GmqaMCAwEAAaOCBIAwggR8MB0G
A1UdDgQWBBSL0BBQCYHynQnVDmB4AyKiP8jKZjCCAVAGA1UdIwSCAUcwggFDgBSL
0BBQCYHynQnVDmB4AyKiP8jKZqGCASakggEiMIIBHjELMAkGA1UEBhMCRVMxEjAQ
BgNVBAgTCUJhcmNlbG9uYTESMBAGA1UEBxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJ
UFMgSW50ZXJuZXQgcHVibGlzaGluZyBTZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJp
cHNAbWFpbC5pcHMuZXMgQy5JLkYuICBCLTYwOTI5NDUyMTQwMgYDVQQLEytJUFMg
Q0EgVGltZXN0YW1waW5nIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MTQwMgYDVQQD
EytJUFMgQ0EgVGltZXN0YW1waW5nIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MR4w
HAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXOCAQAwDAYDVR0TBAUwAwEB/zAM
BgNVHQ8EBQMDB/+AMGsGA1UdJQRkMGIGCCsGAQUFBwMBBggrBgEFBQcDAgYIKwYB
BQUHAwMGCCsGAQUFBwMEBggrBgEFBQcDCAYKKwYBBAGCNwIBFQYKKwYBBAGCNwIB
FgYKKwYBBAGCNwoDAQYKKwYBBAGCNwoDBDARBglghkgBhvhCAQEEBAMCAAcwGgYD
VR0RBBMwEYEPaXBzQG1haWwuaXBzLmVzMBoGA1UdEgQTMBGBD2lwc0BtYWlsLmlw
cy5lczBHBglghkgBhvhCAQ0EOhY4VGltZXN0YW1waW5nIENBIENlcnRpZmljYXRl
IGlzc3VlZCBieSBodHRwOi8vd3d3Lmlwcy5lcy8wKQYJYIZIAYb4QgECBBwWGmh0
dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvMEAGCWCGSAGG+EIBBAQzFjFodHRwOi8v
d3d3Lmlwcy5lcy9pcHMyMDAyL2lwczIwMDJUaW1lc3RhbXBpbmcuY3JsMEUGCWCG
SAGG+EIBAwQ4FjZodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL3Jldm9jYXRpb25U
aW1lc3RhbXBpbmcuaHRtbD8wQgYJYIZIAYb4QgEHBDUWM2h0dHA6Ly93d3cuaXBz
LmVzL2lwczIwMDIvcmVuZXdhbFRpbWVzdGFtcGluZy5odG1sPzBABglghkgBhvhC
AQgEMxYxaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9wb2xpY3lUaW1lc3RhbXBp
bmcuaHRtbDB/BgNVHR8EeDB2MDegNaAzhjFodHRwOi8vd3d3Lmlwcy5lcy9pcHMy
MDAyL2lwczIwMDJUaW1lc3RhbXBpbmcuY3JsMDugOaA3hjVodHRwOi8vd3d3YmFj
ay5pcHMuZXMvaXBzMjAwMi9pcHMyMDAyVGltZXN0YW1waW5nLmNybDAvBggrBgEF
BQcBAQQjMCEwHwYIKwYBBQUHMAGGE2h0dHA6Ly9vY3NwLmlwcy5lcy8wDQYJKoZI
hvcNAQEFBQADgYEAZbrBzAAalZHK6Ww6vzoeFAh8+4Pua2JR0zORtWB5fgTYXXk3
6MNbsMRnLWhasl8OCvrNPzpFoeo2zyYepxEoxZSPhExTCMWTs/zif/WN87GphV+I
3pGW7hdbrqXqcGV4LCFkAZXOzkw+UPS2Wctjjba9GNSHSl/c7+lW8AoM6HU=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="418595b9.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFFzCCA/+gAwIBAgIBETANBgkqhkiG9w0BAQUFADCCASsxCzAJBgNVBAYTAlRSMRgwFgYDVQQH
DA9HZWJ6ZSAtIEtvY2FlbGkxRzBFBgNVBAoMPlTDvHJraXllIEJpbGltc2VsIHZlIFRla25vbG9q
aWsgQXJhxZ90xLFybWEgS3VydW11IC0gVMOcQsSwVEFLMUgwRgYDVQQLDD9VbHVzYWwgRWxla3Ry
b25payB2ZSBLcmlwdG9sb2ppIEFyYcWfdMSxcm1hIEVuc3RpdMO8c8O8IC0gVUVLQUUxIzAhBgNV
BAsMGkthbXUgU2VydGlmaWthc3lvbiBNZXJrZXppMUowSAYDVQQDDEFUw5xCxLBUQUsgVUVLQUUg
S8O2ayBTZXJ0aWZpa2EgSGl6bWV0IFNhxJ9sYXnEsWPEsXPEsSAtIFPDvHLDvG0gMzAeFw0wNzA4
MjQxMTM3MDdaFw0xNzA4MjExMTM3MDdaMIIBKzELMAkGA1UEBhMCVFIxGDAWBgNVBAcMD0dlYnpl
IC0gS29jYWVsaTFHMEUGA1UECgw+VMO8cmtpeWUgQmlsaW1zZWwgdmUgVGVrbm9sb2ppayBBcmHF
n3TEsXJtYSBLdXJ1bXUgLSBUw5xCxLBUQUsxSDBGBgNVBAsMP1VsdXNhbCBFbGVrdHJvbmlrIHZl
IEtyaXB0b2xvamkgQXJhxZ90xLFybWEgRW5zdGl0w7xzw7wgLSBVRUtBRTEjMCEGA1UECwwaS2Ft
dSBTZXJ0aWZpa2FzeW9uIE1lcmtlemkxSjBIBgNVBAMMQVTDnELEsFRBSyBVRUtBRSBLw7ZrIFNl
cnRpZmlrYSBIaXptZXQgU2HEn2xhecSxY8Sxc8SxIC0gU8O8csO8bSAzMIIBIjANBgkqhkiG9w0B
AQEFAAOCAQ8AMIIBCgKCAQEAim1L/xCIOsP2fpTo6iBkcK4hgb46ezzb8R1Sf1n68yJMlaCQvEhO
Eav7t7WNeoMojCZG2E6VQIdhn8WebYGHV2yKO7Rm6sxA/OOqbLLLAdsyv9Lrhc+hDVXDWzhXcLh1
xnnRFDDtG1hba+818qEhTsXOfJlfbLm4IpNQp81McGq+agV/E5wrHur+R84EpW+sky58K5+eeROR
6Oqeyjh1jmKwlZMq5d/pXpduIF9fhHpEORlAHLpVK/swsoHvhOPc7Jg4OQOFCKlUAwUp8MmPi+oL
hmUZEdPpCSPeaJMDyTYcIW7OjGbxmTDY17PDHfiBLqi9ggtm/oLL4eAagsNAgQIDAQABo0IwQDAd
BgNVHQ4EFgQUvYiHyY/2pAoLquvF/pEjnatKijIwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF
MAMBAf8wDQYJKoZIhvcNAQEFBQADggEBAB18+kmPNOm3JpIWmgV050vQbTlswyb2zrgxvMTfvCr4
N5EY3ATIZJkrGG2AA1nJrvhY0D7twyOfaTyGOBye79oneNGEN3GKPEs5z35FBtYt2IpNeBLWrcLT
y9LQQfMmNkqblWwM7uXRQydmwYj3erMgbOqwaSvHIOgMA8RBBZniP+Rr+KCGgceExh/VS4ESshYh
LBOhgLJeDEoTniDYYkCrkOpkSi+sDQESeUWoL4cZaMjihccwsnX5OD+ywJO0a+IDRM5noN+J1q2M
dqMTw5RhK2vZbMEHCiIHhWyFJEapvj+LeISCfiQMnf2BN+MlqO02TpUsyZyQ2uypQjyttgI=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="450c6e38.0"><![CDATA[
-----BEGIN CERTIFICATE-----
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
5OfNeOI5wSsSnqaeG8XmDtkx2Q==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="4643210f.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIID2DCCAsACEQDQHkCLAAB3bQAAAAEAAAAEMA0GCSqGSIb3DQEBBQUAMIGpMQsw
CQYDVQQGEwJ1czENMAsGA1UECBMEVXRhaDEXMBUGA1UEBxMOU2FsdCBMYWtlIENp
dHkxJDAiBgNVBAoTG0RpZ2l0YWwgU2lnbmF0dXJlIFRydXN0IENvLjERMA8GA1UE
CxMIRFNUQ0EgWDIxFjAUBgNVBAMTDURTVCBSb290Q0EgWDIxITAfBgkqhkiG9w0B
CQEWEmNhQGRpZ3NpZ3RydXN0LmNvbTAeFw05ODExMzAyMjQ2MTZaFw0wODExMjcy
MjQ2MTZaMIGpMQswCQYDVQQGEwJ1czENMAsGA1UECBMEVXRhaDEXMBUGA1UEBxMO
U2FsdCBMYWtlIENpdHkxJDAiBgNVBAoTG0RpZ2l0YWwgU2lnbmF0dXJlIFRydXN0
IENvLjERMA8GA1UECxMIRFNUQ0EgWDIxFjAUBgNVBAMTDURTVCBSb290Q0EgWDIx
ITAfBgkqhkiG9w0BCQEWEmNhQGRpZ3NpZ3RydXN0LmNvbTCCASIwDQYJKoZIhvcN
AQEBBQADggEPADCCAQoCggEBANx18IzAdZaawGIfJvfE4Zrq4FZzW5nNAUSoCLbV
p9oaBBg5kkp4o4HC9Xd6ULRw/5qrxsfKboNPQpj7Jgva3G3WqZlVUmfpKAOS3OWw
BZoPFflrWXJW8vo5/Kpo7g8fEIMv/J36F5bdguPmRX3AS4BEH+0s4IT9kVySVGkl
5WJp3OXuAFK9MwutdQKFp2RQLcUZGTDAJtvJ0/0uma1ZtQtN1EGuhUhDWdy3qOKi
3sOP17ihYqZoUFLkzzGnlIXan0YyF1bl8utmPRL/Q9uY73fPy4GNNLHGUEom0eQ+
QVCvbK4iNC7Va26Dunm4dmVI2gkpZGMiuftHdoWMhkTLCdsCAwEAATANBgkqhkiG
9w0BAQUFAAOCAQEAtTYOXeFhKFoRZcA/gwN5Tb4opgsHAlKFzfiR0BBstWogWxyQ
2TA8xkieil5k+aFxd+8EJx8H6+Qm93N0yUQYGmbT4EOvkTvRyyzYdFQ6HE3K1GjN
I3wdEJ5F6fYAbqbNGf9PLCmPV03Ed5K+4EwJ+11EhmYhqLkyolbV6YyDfFk/xPEL
553snr2cGA4+wjl5KLcDDQjLxufZATdQEOzMYRZA1K8xdHv8PzGn0EdzMzkbzE5q
10mDEQb+64JYMzJM8FasHpwvVpp7wUocpf1VNs78lk30sPDst2yC7S8xmUJMqbIN
uBVd8d+6ybVK1GSYsyapMMj9puyrliGtf8J4tg==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="47996b5c.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIGUTCCBTmgAwIBAgIEPLVPQDANBgkqhkiG9w0BAQUFADBmMRIwEAYDVQQKEwli
ZVRSVVNUZWQxGzAZBgNVBAsTEmJlVFJVU1RlZCBSb290IENBczEzMDEGA1UEAxMq
YmVUUlVTVGVkIFJvb3QgQ0EgLSBFbnRydXN0IEltcGxlbWVudGF0aW9uMB4XDTAy
MDQxMTA4MjQyN1oXDTIyMDQxMTA4NTQyN1owZjESMBAGA1UEChMJYmVUUlVTVGVk
MRswGQYDVQQLExJiZVRSVVNUZWQgUm9vdCBDQXMxMzAxBgNVBAMTKmJlVFJVU1Rl
ZCBSb290IENBIC0gRW50cnVzdCBJbXBsZW1lbnRhdGlvbjCCASIwDQYJKoZIhvcN
AQEBBQADggEPADCCAQoCggEBALr0RAOqEmq1Q+xVkrYwfTVXDNvzDSduTPdQqJtO
K2/b9a0cS12zqcH+e0TrW6MFDR/FNCswACnxeECypP869AGIF37m1CbTukzqMvtD
d5eHI8XbQ6P1KqNRXuE70mVpflUVm3rnafdE4Fe1FehmYA8NA/uCjqPoEXtsvsdj
DheT389Lrm5zdeDzqrmkwAkbhepxKYhBMvnwKg5sCfJ0a2ZsUhMfGLzUPvfYbiCe
yv78IZTuEyhL11xeDGbu6bsPwTSxfwh28z0mcMmLJR1iJAzqHHVOwBLkuhMdMCkt
VjMFu5dZfsZJT4nXLySotohAtWSSU1Yk5KKghbNekLQSM80CAwEAAaOCAwUwggMB
MIIBtwYDVR0gBIIBrjCCAaowggGmBg8rBgEEAbE+AAACCSiDkTEwggGRMIIBSQYI
KwYBBQUHAgIwggE7GoIBN1JlbGlhbmNlIG9uIG9yIHVzZSBvZiB0aGlzIENlcnRp
ZmljYXRlIGNyZWF0ZXMgYW4gYWNrbm93bGVkZ21lbnQgYW5kIGFjY2VwdGFuY2Ug
b2YgdGhlIHRoZW4gYXBwbGljYWJsZSBzdGFuZGFyZCB0ZXJtcyBhbmQgY29uZGl0
aW9ucyBvZiB1c2UsIHRoZSBDZXJ0aWZpY2F0aW9uIFByYWN0aWNlIFN0YXRlbWVu
dCBhbmQgdGhlIFJlbHlpbmcgUGFydHkgQWdyZWVtZW50LCB3aGljaCBjYW4gYmUg
Zm91bmQgYXQgdGhlIGJlVFJVU1RlZCB3ZWIgc2l0ZSwgaHR0cHM6Ly93d3cuYmV0
cnVzdGVkLmNvbS9wcm9kdWN0c19zZXJ2aWNlcy9pbmRleC5odG1sMEIGCCsGAQUF
BwIBFjZodHRwczovL3d3dy5iZXRydXN0ZWQuY29tL3Byb2R1Y3RzX3NlcnZpY2Vz
L2luZGV4Lmh0bWwwEQYJYIZIAYb4QgEBBAQDAgAHMIGJBgNVHR8EgYEwfzB9oHug
eaR3MHUxEjAQBgNVBAoTCWJlVFJVU1RlZDEbMBkGA1UECxMSYmVUUlVTVGVkIFJv
b3QgQ0FzMTMwMQYDVQQDEypiZVRSVVNUZWQgUm9vdCBDQSAtIEVudHJ1c3QgSW1w
bGVtZW50YXRpb24xDTALBgNVBAMTBENSTDEwKwYDVR0QBCQwIoAPMjAwMjA0MTEw
ODI0MjdagQ8yMDIyMDQxMTA4NTQyN1owCwYDVR0PBAQDAgEGMB8GA1UdIwQYMBaA
FH1w5a44iwY/qhwaj/nPJDCqhIQWMB0GA1UdDgQWBBR9cOWuOIsGP6ocGo/5zyQw
qoSEFjAMBgNVHRMEBTADAQH/MB0GCSqGSIb2fQdBAAQQMA4bCFY2LjA6NC4wAwIE
kDANBgkqhkiG9w0BAQUFAAOCAQEAKrgXzh8QlOu4mre5X+za95IkrNySO8cgjfKZ
5V04ocI07cUTWVwFtStPYZuR+0H8/NU8TZh2BvWBfevdkObRVlTa4y0MnxEylCIB
evZsLHRnBMylj44ss0O1lKLQfelifwa+JwGDnjr9iu6YQ0pr17WXOzq/T220Y/oz
ADQuLW2WyXvKmWO6vvT2MKAtmJbpVkQFqUSjYRDrgqFnXbxdJ3Wqiig2KjiS2d2k
XgClzMx8KSreKJCrt+G2/30lC0DYqjSjLd4H61/OCt3Kfjp9JsFiaDrmLzfzgYYh
xKlkqu9FNtEaZnz46TfW1mG+oq1I59/mdP7TbX3SJdysYlep9w==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="48a195d8.0"><![CDATA[
-----BEGIN CERTIFICATE-----
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
-----END CERTIFICATE-----

              ]]></file>
              <file Name="4d654d1d.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIICWjCCAcMCAgGlMA0GCSqGSIb3DQEBBAUAMHUxCzAJBgNVBAYTAlVTMRgwFgYDVQQKEw9HVEUg
Q29ycG9yYXRpb24xJzAlBgNVBAsTHkdURSBDeWJlclRydXN0IFNvbHV0aW9ucywgSW5jLjEjMCEG
A1UEAxMaR1RFIEN5YmVyVHJ1c3QgR2xvYmFsIFJvb3QwHhcNOTgwODEzMDAyOTAwWhcNMTgwODEz
MjM1OTAwWjB1MQswCQYDVQQGEwJVUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMScwJQYDVQQL
Ex5HVEUgQ3liZXJUcnVzdCBTb2x1dGlvbnMsIEluYy4xIzAhBgNVBAMTGkdURSBDeWJlclRydXN0
IEdsb2JhbCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCVD6C28FCc6HrHiM3dFw4u
sJTQGz0O9pTAipTHBsiQl8i4ZBp6fmw8U+E3KHNgf7KXUwefU/ltWJTSr41tiGeA5u2ylc9yMcql
HHK6XALnZELn+aks1joNrI1CqiQBOeacPwGFVw1Yh0X404Wqk2kmhXBIgD8SFcd5tB8FLztimQID
AQABMA0GCSqGSIb3DQEBBAUAA4GBAG3rGwnpXtlR22ciYaQqPEh346B8pt5zohQDhT37qw4wxYMW
M4ETCJ57NE7fQMh017l93PR2VX2bY1QY6fDq81yx2YtCHrnAlU66+tXifPVoYb+O7AWXX1uw16OF
NMQkpw0PlZPvy5TYnh+dXIVtx6quTx8itc2VrbqnzPmrC3p/
-----END CERTIFICATE-----

              ]]></file>
              <file Name="4e18c148.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDnzCCAoegAwIBAgIBJjANBgkqhkiG9w0BAQUFADBxMQswCQYDVQQGEwJERTEcMBoGA1UEChMT
RGV1dHNjaGUgVGVsZWtvbSBBRzEfMB0GA1UECxMWVC1UZWxlU2VjIFRydXN0IENlbnRlcjEjMCEG
A1UEAxMaRGV1dHNjaGUgVGVsZWtvbSBSb290IENBIDIwHhcNOTkwNzA5MTIxMTAwWhcNMTkwNzA5
MjM1OTAwWjBxMQswCQYDVQQGEwJERTEcMBoGA1UEChMTRGV1dHNjaGUgVGVsZWtvbSBBRzEfMB0G
A1UECxMWVC1UZWxlU2VjIFRydXN0IENlbnRlcjEjMCEGA1UEAxMaRGV1dHNjaGUgVGVsZWtvbSBS
b290IENBIDIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCrC6M14IspFLEUha88EOQ5
bzVdSq7d6mGNlUn0b2SjGmBmpKlAIoTZ1KXleJMOaAGtuU1cOs7TuKhCQN/Po7qCWWqSG6wcmtoI
KyUn+WkjR/Hg6yx6m/UTAtB+NHzCnjwAWav12gz1MjwrrFDa1sPeg5TKqAyZMg4ISFZbavva4VhY
AUlfckE8FQYBjl2tqriTtM2e66foai1SNNs671x1Udrb8zH57nGYMsRUFUQM+ZtV7a3fGAigo4aK
Se5TBY8ZTNXeWHmb0mocQqvF1afPaA+W5OFhmHZhyJF81j4A4pFQh+GdCuatl9Idxjp9y7zaAzTV
jlsB9WoHtxa2bkp/AgMBAAGjQjBAMB0GA1UdDgQWBBQxw3kbuvVT1xfgiXotF2wKsyudMzAPBgNV
HRMECDAGAQH/AgEFMA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQUFAAOCAQEAlGRZrTlk5ynr
E/5aw4sTV8gEJPB0d8Bg42f76Ymmg7+Wgnxu1MM9756AbrsptJh6sTtU6zkXR34ajgv8HzFZMQSy
zhfzLMdiNlXiItiJVbSYSKpk+tYcNthEeFpaIzpXl/V6ME+un2pMSyuOoAPjPuCp1NJ70rOo4nI8
rZ7/gFnkm0W09juwzTkZmDLl6iFhkOQxIY40sfcvNUqFENrnijchvllj4PKFiDFT1FQUhXB59C4G
dyd1Lx+4ivn+xbrYNuSD7Odlt79jWvNGr4GUN9RBjNYj1h7P9WgbRGOiWrqnNVmh5XAFmw4jV5mU
Cm26OWMohpLzGITY+9HPBVZkVw==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="4fbd6bfa.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEXjCCA0agAwIBAgIQRL4Mi1AAIbQR0ypoBqmtaTANBgkqhkiG9w0BAQUFADCBkzELMAkGA1UE
BhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2UgQ2l0eTEeMBwGA1UEChMVVGhl
IFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExhodHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xGzAZ
BgNVBAMTElVUTiAtIERBVEFDb3JwIFNHQzAeFw05OTA2MjQxODU3MjFaFw0xOTA2MjQxOTA2MzBa
MIGTMQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQxFzAVBgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4w
HAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cudXNlcnRy
dXN0LmNvbTEbMBkGA1UEAxMSVVROIC0gREFUQUNvcnAgU0dDMIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEA3+5YEKIrblXEjr8uRgnn4AgPLit6E5Qbvfa2gI5lBZMAHryv4g+OGQ0SR+ys
raP6LnD43m77VkIVni5c7yPeIbkFdicZD0/Ww5y0vpQZY/KmEQrrU0icvvIpOxboGqBMpsn0GFlo
wHDyUwDAXlCCpVZvNvlK4ESGoE1O1kduSUrLZ9emxAW5jh70/P/N5zbgnAVssjMiFdC04MwXwLLA
9P4yPykqlXvY8qdOD1R8oQ2AswkDwf9c3V6aPryuvEeKaq5xyh+xKrhfQgUL7EYw0XILyulWbfXv
33i+Ybqypa4ETLyorGkVl73v67SMvzX41MPRKA5cOp9wGDMgd8SirwIDAQABo4GrMIGoMAsGA1Ud
DwQEAwIBxjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRTMtGzz3/64PGgXYVOktKeRR20TzA9
BgNVHR8ENjA0MDKgMKAuhixodHRwOi8vY3JsLnVzZXJ0cnVzdC5jb20vVVROLURBVEFDb3JwU0dD
LmNybDAqBgNVHSUEIzAhBggrBgEFBQcDAQYKKwYBBAGCNwoDAwYJYIZIAYb4QgQBMA0GCSqGSIb3
DQEBBQUAA4IBAQAnNZcAiosovcYzMB4p/OL31ZjUQLtgyr+rFywJNn9Q+kHcrpY6CiM+iVnJowft
Gzet/Hy+UUla3joKVAgWRcKZsYfNjGjgaQPpxE6YsjuMFrMOoAyYUJuTqXAJyCyjj98C5OBxOvG0
I3KgqgHf35g+FFCgMSa9KOlaMCZ1+XtgHI3zzVAmbQQnmt/VDUVHKWss5nbZqSl9Mt3JNjy9rjXx
EZ4du5A/EkdOjtd+D2JzHVImOBwYSf0wdJrE5SIv2MCN7ZF6TACPcn9d2t0bi0Vr591pl6jFVkwP
DPafepE39peC4N1xaf92P2BNPM/3mfnGV/TJVTl4uix5yaaIK/QI
-----END CERTIFICATE-----

              ]]></file>
              <file Name="5021a0a2.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIID3TCCAsWgAwIBAgIOHaIAAQAC7LdggHiNtgYwDQYJKoZIhvcNAQEFBQAweTELMAkGA1UEBhMC
REUxHDAaBgNVBAoTE1RDIFRydXN0Q2VudGVyIEdtYkgxJDAiBgNVBAsTG1RDIFRydXN0Q2VudGVy
IFVuaXZlcnNhbCBDQTEmMCQGA1UEAxMdVEMgVHJ1c3RDZW50ZXIgVW5pdmVyc2FsIENBIEkwHhcN
MDYwMzIyMTU1NDI4WhcNMjUxMjMxMjI1OTU5WjB5MQswCQYDVQQGEwJERTEcMBoGA1UEChMTVEMg
VHJ1c3RDZW50ZXIgR21iSDEkMCIGA1UECxMbVEMgVHJ1c3RDZW50ZXIgVW5pdmVyc2FsIENBMSYw
JAYDVQQDEx1UQyBUcnVzdENlbnRlciBVbml2ZXJzYWwgQ0EgSTCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAKR3I5ZEr5D0MacQ9CaHnPM42Q9e3s9B6DGtxnSRJJZ4Hgmgm5qVSkr1YnwC
qMqs+1oEdjneX/H5s7/zA1hV0qq34wQi0fiU2iIIAI3TfCZdzHd55yx4Oagmcw6iXSVphU9VDprv
xrlE4Vc93x9UIuVvZaozhDrzznq+VZeujRIPFDPiUHDDSYcTvFHe15gSWu86gzOSBnWLknwSaHtw
ag+1m7Z3W0hZneTvWq3zwZ7U10VOylY0Ibw+F1tvdwxIAUMpsN0/lm7mlaoMwCC2/T42J5zjXM9O
gdwZu5GQfezmlwQek8wiSdeXhrYTCjxDI3d+8NzmzSQfO4ObNDqDNOMCAwEAAaNjMGEwHwYDVR0j
BBgwFoAUkqR1LKSevoFE63n8isWVpesQdXMwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC
AYYwHQYDVR0OBBYEFJKkdSyknr6BROt5/IrFlaXrEHVzMA0GCSqGSIb3DQEBBQUAA4IBAQAo0uCG
1eb4e/CX3CJrO5UUVg8RMKWaTzqwOuAGy2X17caXJ/4l8lfmXpWMPmRgFVp/Lw0BxbFg/UU1z/Cy
vwbZ71q+s2IhtNerNXxTPqYn8aEt2hojnczd7Dwtnic0XQ/CNnm8yUpiLe1r2X1BQ3y2qsrtYbE3
ghUJGooWMNjsydZHcnhLEEYUjl8Or+zHL6sQ17bxbuyGssLoDZJz3KL0Dzq/YSMQiZxIQG5wALPT
ujdEWBF6AmqI8Dc08BnprNRlc/ZpjGSUOnmFKbAWKwyCPwacx/0QK54PLLae4xW/2TYcuiUaUj0a
7CIMHOCkoj3w6DnPgcB77V0fb8XQC9eY
-----END CERTIFICATE-----

              ]]></file>
              <file Name="5046c355.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFvTCCA6WgAwIBAgIITxvUL1S7L0swDQYJKoZIhvcNAQEFBQAwRzELMAkGA1UEBhMCQ0gxFTAT
BgNVBAoTDFN3aXNzU2lnbiBBRzEhMB8GA1UEAxMYU3dpc3NTaWduIFNpbHZlciBDQSAtIEcyMB4X
DTA2MTAyNTA4MzI0NloXDTM2MTAyNTA4MzI0NlowRzELMAkGA1UEBhMCQ0gxFTATBgNVBAoTDFN3
aXNzU2lnbiBBRzEhMB8GA1UEAxMYU3dpc3NTaWduIFNpbHZlciBDQSAtIEcyMIICIjANBgkqhkiG
9w0BAQEFAAOCAg8AMIICCgKCAgEAxPGHf9N4Mfc4yfjDmUO8x/e8N+dOcbpLj6VzHVxumK4DV644
N0MvFz0fyM5oEMF4rhkDKxD6LHmD9ui5aLlV8gREpzn5/ASLHvGiTSf5YXu6t+WiE7brYT7QbNHm
+/pe7R20nqA1W6GSy/BJkv6FCgU+5tkL4k+73JU3/JHpMjUi0R86TieFnbAVlDLaYQ1HTWBCrpJH
6INaUFjpiou5XaHc3ZlKHzZnu0jkg7Y360g6rw9njxcH6ATK72oxh9TAtvmUcXtnZLi2kUpCe2Uu
MGoM9ZDulebyzYLs2aFK7PayS+VFheZteJMELpyCbTapxDFkH4aDCyr0NQp4yVXPQbBH6TCfmb5h
qAaEuSh6XzjZG6k4sIN/c8HDO0gqgg8hm7jMqDXDhBuDsz6+pJVpATqJAHgE2cn0mRmrVn5bi4Y5
FZGkECwJMoBgs5PAKrYYC51+jUnyEEp/+dVGLxmSo5mnJqy7jDzmDrxHB9xzUfFwZC8I+bRHHTBs
ROopN4WSaGa8gzj+ezku01DwH/teYLappvonQfGbGHLy9YR0SslnxFSuSGTfjNFusB3hB48IHpmc
celM2KX3RxIfdNFRnobzwqIjQAtz20um53MGjMGg6cFZrEb65i/4z3GcRm25xBWNOHkDRUjvxF3X
CO6HOSKGsg0PWEP3calILv3q1h8CAwEAAaOBrDCBqTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/
BAUwAwEB/zAdBgNVHQ4EFgQUF6DNweRBtjpbO8tFnb0cwpj6hlgwHwYDVR0jBBgwFoAUF6DNweRB
tjpbO8tFnb0cwpj6hlgwRgYDVR0gBD8wPTA7BglghXQBWQEDAQEwLjAsBggrBgEFBQcCARYgaHR0
cDovL3JlcG9zaXRvcnkuc3dpc3NzaWduLmNvbS8wDQYJKoZIhvcNAQEFBQADggIBAHPGgeAn0i0P
4JUw4ppBf1AsX19iYamGamkYDHRJ1l2E6kFSGG9YrVBWIGrGvShpWJHckRE1qTodvBqlYJ7YH39F
kWnZfrt4csEGDyrOj4VwYaygzQu4OSlWhDJOhrs9xCrZ1x9y7v5RoSJBsXECYxqCsGKrXlcSH9/L
3XWgwF15kIwb4FDm3jH+mHtwX6WQ2K34ArZv02DdQEsixT2tOnqfGhpHkXkzuoLcMmkDlm4fS/Bx
/uNncqCxv1yL5PqZIseEuRuNI5c/7SXgz2W79WEE790eslpBIlqhn10s6FvJbakMDHiqYMZWjwFa
DGi8aRl5xB9+lwW/xekkUV7U1UtT7dkjWjYDZaPBA61BMPNGG4WQr2W11bHkFlt4dR2Xem1ZqSqP
e97Dh4kQmUlzeMg9vVE1dCrV8X5pGyq7O70luJpaPXJhkGaH7gzWTdQRdAtq/gsD/KNVV4n+Ssuu
WxcFyPKNIzFTONItaj+CuY0IavdeQXRuwxF+B6wpYJE/OMpXEA29MC/HpeZBoNquBYeaoKRlbEwJ
DIm6uNO5wJOKMPqN5ZprFQFOZ6raYlY+hAhm0sQ2fac+EPyI4NSA5QC9qvNOBqN6avlicuMJT+ub
DgEj8Z+7fNzcbBGXJbLytGMU0gYqZ4yD9c7qB9iaah7s5Aq7KkzrCWA5zspi2C5u
-----END CERTIFICATE-----

              ]]></file>
              <file Name="524d9b43.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEuTCCA6GgAwIBAgIQQBrEZCGzEyEDDrvkEhrFHTANBgkqhkiG9w0BAQsFADCBvTELMAkGA1UE
BhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBO
ZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwOCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVk
IHVzZSBvbmx5MTgwNgYDVQQDEy9WZXJpU2lnbiBVbml2ZXJzYWwgUm9vdCBDZXJ0aWZpY2F0aW9u
IEF1dGhvcml0eTAeFw0wODA0MDIwMDAwMDBaFw0zNzEyMDEyMzU5NTlaMIG9MQswCQYDVQQGEwJV
UzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdv
cmsxOjA4BgNVBAsTMShjKSAyMDA4IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNl
IG9ubHkxODA2BgNVBAMTL1ZlcmlTaWduIFVuaXZlcnNhbCBSb290IENlcnRpZmljYXRpb24gQXV0
aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx2E3XrEBNNti1xWb/1hajCMj
1mCOkdeQmIN65lgZOIzF9uVkhbSicfvtvbnazU0AtMgtc6XHaXGVHzk8skQHnOgO+k1KxCHfKWGP
MiJhgsWHH26MfF8WIFFE0XBPV+rjHOPMee5Y2A7Cs0WTwCznmhcrewA3ekEzeOEz4vMQGn+HLL72
9fdC4uW/h2KJXwBL38Xd5HVEMkE6HnFuacsLdUYI0crSK5XQz/u5QGtkjFdN/BMReYTtXlT2NJ8I
AfMQJQYXStrxHXpma5hgZqTZ79IugvHw7wnqRMkVauIDbjPTrJ9VAMf2CGqUuV/c4DPxhGD5WycR
tPwW8rtWaoAljQIDAQABo4GyMIGvMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMG0G
CCsGAQUFBwEMBGEwX6FdoFswWTBXMFUWCWltYWdlL2dpZjAhMB8wBwYFKw4DAhoEFI/l0xqGrI2O
a8PPgGrUSBgsexkuMCUWI2h0dHA6Ly9sb2dvLnZlcmlzaWduLmNvbS92c2xvZ28uZ2lmMB0GA1Ud
DgQWBBS2d/ppSEefUxLVwuoHMnYH0ZcHGTANBgkqhkiG9w0BAQsFAAOCAQEASvj4sAPmLGd75JR3
Y8xuTPl9Dg3cyLk1uXBPY/ok+myDjEedO2Pzmvl2MpWRsXe8rJq+seQxIcaBlVZaDrHC1LGmWazx
Y8u4TB1ZkErvkBYoH1quEPuBUDgMbMzxPcP1Y+Oz4yHJJDnp/RVmRvQbEdBNc6N9Rvk97ahfYtTx
P/jgdFcrGJ2BtMQo2pSXpXDrrB2+BxHw1dvd5Yzw1TKwg+ZX4o+/vqGqvz0dtdQ46tewXDpPaj+P
wGZsY6rp2aQW9IHRlRQOfc2VNNnSj3BzgXucfr2YYdhFh5iQxeuGMMY1v/D/w1WIg0vvBZIGcfK4
mJO37M2CYfE45k+XmCpajQ==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="52b525c7.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFYDCCA0igAwIBAgIUeFhfLq0sGUvjNwc1NBMotZbUZZMwDQYJKoZIhvcNAQELBQAwSDELMAkG
A1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxHjAcBgNVBAMTFVF1b1ZhZGlzIFJv
b3QgQ0EgMSBHMzAeFw0xMjAxMTIxNzI3NDRaFw00MjAxMTIxNzI3NDRaMEgxCzAJBgNVBAYTAkJN
MRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMR4wHAYDVQQDExVRdW9WYWRpcyBSb290IENBIDEg
RzMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCgvlAQjunybEC0BJyFuTHK3C3kEakE
PBtVwedYMB0ktMPvhd6MLOHBPd+C5k+tR4ds7FtJwUrVu4/sh6x/gpqG7D0DmVIB0jWerNrwU8lm
PNSsAgHaJNM7qAJGr6Qc4/hzWHa39g6QDbXwz8z6+cZM5cOGMAqNF34168Xfuw6cwI2H44g4hWf6
Pser4BOcBRiYz5P1sZK0/CPTz9XEJ0ngnjybCKOLXSoh4Pw5qlPafX7PGglTvF0FBM+hSo+LdoIN
ofjSxxR3W5A2B4GbPgb6Ul5jxaYA/qXpUhtStZI5cgMJYr2wYBZupt0lwgNm3fME0UDiTouG9G/l
g6AnhF4EwfWQvTA9xO+oabw4m6SkltFi2mnAAZauy8RRNOoMqv8hjlmPSlzkYZqn0ukqeI1RPToV
7qJZjqlc3sX5kCLliEVx3ZGZbHqfPT2YfF72vhZooF6uCyP8Wg+qInYtyaEQHeTTRCOQiJ/GKubX
9ZqzWB4vMIkIG1SitZgj7Ah3HJVdYdHLiZxfokqRmu8hqkkWCKi9YSgxyXSthfbZxbGL0eUQMk1f
iyA6PEkfM4VZDdvLCXVDaXP7a3F98N/ETH3Goy7IlXnLc6KOTk0k+17kBL5yG6YnLUlamXrXXAkg
t3+UuU/xDRxeiEIbEbfnkduebPRq34wGmAOtzCjvpUfzUwIDAQABo0IwQDAPBgNVHRMBAf8EBTAD
AQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUo5fW816iEOGrRZ88F2Q87gFwnMwwDQYJKoZI
hvcNAQELBQADggIBABj6W3X8PnrHX3fHyt/PX8MSxEBd1DKquGrX1RUVRpgjpeaQWxiZTOOtQqOC
MTaIzen7xASWSIsBx40Bz1szBpZGZnQdT+3Btrm0DWHMY37XLneMlhwqI2hrhVd2cDMT/uFPpiN3
GPoajOi9ZcnPP/TJF9zrx7zABC4tRi9pZsMbj/7sPtPKlL92CiUNqXsCHKnQO18LwIE6PWThv6ct
Tr1NxNgpxiIY0MWscgKCP6o6ojoilzHdCGPDdRS5YCgtW2jgFqlmgiNR9etT2DGbe+m3nUvriBbP
+V04ikkwj+3x6xn0dxoxGE1nVGwvb2X52z3sIexe9PSLymBlVNFxZPT5pqOBMzYzcfCkeF9OrYMh
3jRJjehZrJ3ydlo28hP0r+AJx2EqbPfgna67hkooby7utHnNkDPDs3b69fBsnQGQ+p6Q9pxyz0fa
wx/kNSBT8lTR32GDpgLiJTjehTItXnOQUl1CxM49S+H5GYQd1aJQzEH7QRTDvdbJWqNjZgKAvQU6
O0ec7AAmTPWIUb+oI38YB7AL7YsmoWTTYUrrXJ/es69nA7Mf3W1daWhpq1467HxpvMc7hU6eFbm0
FU/DlXpY18ls6Wy58yljXrQs8C097Vpl4KlbQMJImYFtnh8GKjwStIsPm6Ik8KaN1nrgS7ZklmOV
hMJKzRwuJIczYOXD
-----END CERTIFICATE-----

              ]]></file>
              <file Name="54edfa5d.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDXDCCAsWgAwIBAgICA+swDQYJKoZIhvcNAQEEBQAwgbwxCzAJBgNVBAYTAkRF
MRAwDgYDVQQIEwdIYW1idXJnMRAwDgYDVQQHEwdIYW1idXJnMTowOAYDVQQKEzFU
QyBUcnVzdENlbnRlciBmb3IgU2VjdXJpdHkgaW4gRGF0YSBOZXR3b3JrcyBHbWJI
MSIwIAYDVQQLExlUQyBUcnVzdENlbnRlciBDbGFzcyAzIENBMSkwJwYJKoZIhvcN
AQkBFhpjZXJ0aWZpY2F0ZUB0cnVzdGNlbnRlci5kZTAeFw05ODAzMDkxMTU5NTla
Fw0xMTAxMDExMTU5NTlaMIG8MQswCQYDVQQGEwJERTEQMA4GA1UECBMHSGFtYnVy
ZzEQMA4GA1UEBxMHSGFtYnVyZzE6MDgGA1UEChMxVEMgVHJ1c3RDZW50ZXIgZm9y
IFNlY3VyaXR5IGluIERhdGEgTmV0d29ya3MgR21iSDEiMCAGA1UECxMZVEMgVHJ1
c3RDZW50ZXIgQ2xhc3MgMyBDQTEpMCcGCSqGSIb3DQEJARYaY2VydGlmaWNhdGVA
dHJ1c3RjZW50ZXIuZGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBALa0wTUF
Lg2N7KBAahwOJ6ZQkmtQGwfeLud2zODa/ISoXoxjaitN2U4CdhHBC/KNecoAtvGw
Dtf7pBc9r6tpepYnv68zoZoqWarEtTcI8hKlMbZD9TKWcSgoq40oht+77uMMfTDW
w1Krj10nnGvAo+cFa1dJRLNu6mTP0o56UHd3AgMBAAGjazBpMA8GA1UdEwEB/wQF
MAMBAf8wDgYDVR0PAQH/BAQDAgGGMDMGCWCGSAGG+EIBCAQmFiRodHRwOi8vd3d3
LnRydXN0Y2VudGVyLmRlL2d1aWRlbGluZXMwEQYJYIZIAYb4QgEBBAQDAgAHMA0G
CSqGSIb3DQEBBAUAA4GBABY9xs3Bu4VxhUafPiCPUSiZ7C1FIWMjWwS7TJC4iJIE
Tb19AaM/9uzO8d7+feXhPrvGq14L3T2WxMup1Pkm5gZOngylerpuw3yCGdHHsbHD
2w2Om0B8NwvxXej9H5CIpQ5ON2QhqE6NtJ/x3kit1VYYUimLRzQSCdS7kjXvD9s0
-----END CERTIFICATE-----

              ]]></file>
              <file Name="56b8a0b6.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEPDCCAySgAwIBAgIBATANBgkqhkiG9w0BAQUFADCBvjE/MD0GA1UEAww2VMOcUktUUlVTVCBF
bGVrdHJvbmlrIFNlcnRpZmlrYSBIaXptZXQgU2HEn2xhecSxY8Sxc8SxMQswCQYDVQQGEwJUUjEP
MA0GA1UEBwwGQW5rYXJhMV0wWwYDVQQKDFRUw5xSS1RSVVNUIEJpbGdpIMSwbGV0acWfaW0gdmUg
QmlsacWfaW0gR8O8dmVubGnEn2kgSGl6bWV0bGVyaSBBLsWeLiAoYykgS2FzxLFtIDIwMDUwHhcN
MDUxMTA3MTAwNzU3WhcNMTUwOTE2MTAwNzU3WjCBvjE/MD0GA1UEAww2VMOcUktUUlVTVCBFbGVr
dHJvbmlrIFNlcnRpZmlrYSBIaXptZXQgU2HEn2xhecSxY8Sxc8SxMQswCQYDVQQGEwJUUjEPMA0G
A1UEBwwGQW5rYXJhMV0wWwYDVQQKDFRUw5xSS1RSVVNUIEJpbGdpIMSwbGV0acWfaW0gdmUgQmls
acWfaW0gR8O8dmVubGnEn2kgSGl6bWV0bGVyaSBBLsWeLiAoYykgS2FzxLFtIDIwMDUwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCpNn7DkUNMwxmYCMjHWHtPFoylzkkBH3MOrHUTpvqe
LCDe2JAOCtFp0if7qnefJ1Il4std2NiDUBd9irWCPwSOtNXwSadktx4uXyCcUHVPr+G1QRT0mJKI
x+XlZEdhR3n9wFHxwZnn3M5q+6+1ATDcRhzviuyV79z/rxAc653YsKpqhRgNF8k+v/Gb0AmJQv2g
QrSdiVFVKc8bcLyEVK3BEx+Y9C52YItdP5qtygy/p1Zbj3e41Z55SZI/4PGXJHpsmxcPbe9TmJEr
5A++WXkHeLuXlfSfadRYhwqp48y2WBmfJiGxxFmNskF1wK1pzpwACPI2/z7woQ8arBT9pmAPAgMB
AAGjQzBBMB0GA1UdDgQWBBTZN7NOBf3Zz58SFq62iS/rJTqIHDAPBgNVHQ8BAf8EBQMDBwYAMA8G
A1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBAHJglrfJ3NgpXiOFX7KzLXb7iNcX/ntt
Rbj2hWyfIvwqECLsqrkw9qtY1jkQMZkpAL2JZkH7dN6RwRgLn7Vhy506vvWolKMiVW4XSf/SKfE4
Jl3vpao6+XF75tpYHdN0wgH6PmlYX63LaL4ULptswLbcoCb6dxriJNoaN+BnrdFzgw2lGh1uEpJ+
hGIAF728JRhX8tepb1mIvDS3LoV4nZbcFMMsilKbloxSZj2GFotHuFEJjOp9zYhys2AzsfAKRO8P
9Qk3iCQOLGsgOqL6EfJANZxEaGM7rDNvY7wsu/LSy3Z9fYjYHcgFHW68lKlmjHdxx/qR+i9Rnuk5
UrbnBEI=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="57692373.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDZjCCAk6gAwIBAgIBATANBgkqhkiG9w0BAQUFADBEMQswCQYDVQQGEwJVUzEWMBQGA1UEChMN
R2VvVHJ1c3QgSW5jLjEdMBsGA1UEAxMUR2VvVHJ1c3QgR2xvYmFsIENBIDIwHhcNMDQwMzA0MDUw
MDAwWhcNMTkwMzA0MDUwMDAwWjBEMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5j
LjEdMBsGA1UEAxMUR2VvVHJ1c3QgR2xvYmFsIENBIDIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
ggEKAoIBAQDvPE1APRDfO1MA4Wf+lGAVPoWI8YkNkMgoI5kF6CsgncbzYEbYwbLVjDHZ3CB5JIG/
NTL8Y2nbsSpr7iFY8gjpeMtvy/wWUsiRxP89c96xPqfCfWbB9X5SJBri1WeR0IIQ13hLTytCOb1k
LUCgsBDTOEhGiKEMuzozKmKY+wCdE1l/bztyqu6mD4b5BWHqZ38MN5aL5mkWRxHCJ1kDs6ZgwiFA
Vvqgx306E+PsV8ez1q6diYD3Aecs9pYrEw15LNnA5IZ7S4wMcoKK+xfNAGw6EzywhIdLFnopsk/b
HdQL82Y3vdj2V7teJHq4PIu5+pIaGoSe2HSPqht/XvT+RSIhAgMBAAGjYzBhMA8GA1UdEwEB/wQF
MAMBAf8wHQYDVR0OBBYEFHE4NvICMVNHK266ZUapEBVYIAUJMB8GA1UdIwQYMBaAFHE4NvICMVNH
K266ZUapEBVYIAUJMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQUFAAOCAQEAA/e1K6tdEPx7
srJerJsOflN4WT5CBP51o62sgU7XAotexC3IUnbHLB/8gTKY0UvGkpMzNTEv/NgdRN3ggX+d6Yvh
ZJFiCzkIjKx0nVnZellSlxG5FntvRdOW2TF9AjYPnDtuzywNA0ZF66D0f0hExghAzN4bcLUprbqL
OzRldRtxIR0sFAqwlpW41uryZfspuk/qkZN0abby/+Ea0AzRdoXLiiW9l14sbxWZJue2Kf8i7MkC
x1YAzUm5s2x7UwQa4qjJqhIFI8LO57sEAszAR6LkxCkvW0VXiVHuPOtSCP8HNR6fNWpHSlaY0VqF
H4z1Ir+rzoPz4iIprn2DQKi6bA==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="58a44af1.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEAjCCAuqgAwIBAgIFORFFEJQwDQYJKoZIhvcNAQEFBQAwgYUxCzAJBgNVBAYTAkZSMQ8wDQYD
VQQIEwZGcmFuY2UxDjAMBgNVBAcTBVBhcmlzMRAwDgYDVQQKEwdQTS9TR0ROMQ4wDAYDVQQLEwVE
Q1NTSTEOMAwGA1UEAxMFSUdDL0ExIzAhBgkqhkiG9w0BCQEWFGlnY2FAc2dkbi5wbS5nb3V2LmZy
MB4XDTAyMTIxMzE0MjkyM1oXDTIwMTAxNzE0MjkyMlowgYUxCzAJBgNVBAYTAkZSMQ8wDQYDVQQI
EwZGcmFuY2UxDjAMBgNVBAcTBVBhcmlzMRAwDgYDVQQKEwdQTS9TR0ROMQ4wDAYDVQQLEwVEQ1NT
STEOMAwGA1UEAxMFSUdDL0ExIzAhBgkqhkiG9w0BCQEWFGlnY2FAc2dkbi5wbS5nb3V2LmZyMIIB
IjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsh/R0GLFMzvABIaIs9z4iPf930Pfeo2aSVz2
TqrMHLmh6yeJ8kbpO0px1R2OLc/mratjUMdUC24SyZA2xtgv2pGqaMVy/hcKshd+ebUyiHDKcMCW
So7kVc0dJ5S/znIq7Fz5cyD+vfcuiWe4u0dzEvfRNWk68gq5rv9GQkaiv6GFGvm/5P9JhfejcIYy
HF2fYPepraX/z9E0+X1bF8bc1g4oa8Ld8fUzaJ1O/Id8NhLWo4DoQw1VYZTqZDdH6nfK0LJYBcNd
frGoRpAxVs5wKpayMLh35nnAvSk7/ZR3TL0gzUEl4C7HG7vupARB0l2tEmqKm0f7yd1GQOGdPDPQ
tQIDAQABo3cwdTAPBgNVHRMBAf8EBTADAQH/MAsGA1UdDwQEAwIBRjAVBgNVHSAEDjAMMAoGCCqB
egF5AQEBMB0GA1UdDgQWBBSjBS8YYFDCiQrdKyFP/45OqDAxNjAfBgNVHSMEGDAWgBSjBS8YYFDC
iQrdKyFP/45OqDAxNjANBgkqhkiG9w0BAQUFAAOCAQEABdwm2Pp3FURo/C9mOnTgXeQp/wYHE4RK
q89toB9RlPhJy3Q2FLwV3duJL92PoF189RLrn544pEfMs5bZvpwlqwN+Mw+VgQ39FuCIvjfwbF3Q
MZsyK10XZZOYYLxuj7GoPB7ZHPOpJkL5ZB3C55L29B5aqhlSXa/oovdgoPaN8In1buAKBQGVyYsg
Crpa/JosPL3Dt8ldeCUFP1YUmwza+zpI/pdpXsoQhvdOlgQITeywvl3cO45Pwf2aNjSaTFR+FwNI
lQgRHAdvhQh+XU3Endv7rs6y0bO4g2wdsrN58dhwmX7wEwLOXt1R0982gaEbeC9xs/FZTEYYKKuF
0mBWWg==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="594f1775.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDIDCCAomgAwIBAgIENd70zzANBgkqhkiG9w0BAQUFADBOMQswCQYDVQQGEwJVUzEQMA4GA1UE
ChMHRXF1aWZheDEtMCsGA1UECxMkRXF1aWZheCBTZWN1cmUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5
MB4XDTk4MDgyMjE2NDE1MVoXDTE4MDgyMjE2NDE1MVowTjELMAkGA1UEBhMCVVMxEDAOBgNVBAoT
B0VxdWlmYXgxLTArBgNVBAsTJEVxdWlmYXggU2VjdXJlIENlcnRpZmljYXRlIEF1dGhvcml0eTCB
nzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAwV2xWGcIYu6gmi0fCG2RFGiYCh7+2gRvE4RiIcPR
fM6fBeC4AfBONOziipUEZKzxa1NfBbPLZ4C/QgKO/t0BCezhABRP/PvwDN1Dulsr4R+AcJkVV5MW
8Q+XarfCaCMczE1ZMKxRHjuvK9buY0V7xdlfUNLjUA86iOe/FP3gx7kCAwEAAaOCAQkwggEFMHAG
A1UdHwRpMGcwZaBjoGGkXzBdMQswCQYDVQQGEwJVUzEQMA4GA1UEChMHRXF1aWZheDEtMCsGA1UE
CxMkRXF1aWZheCBTZWN1cmUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MQ0wCwYDVQQDEwRDUkwxMBoG
A1UdEAQTMBGBDzIwMTgwODIyMTY0MTUxWjALBgNVHQ8EBAMCAQYwHwYDVR0jBBgwFoAUSOZo+SvS
spXXR9gjIBBPM5iQn9QwHQYDVR0OBBYEFEjmaPkr0rKV10fYIyAQTzOYkJ/UMAwGA1UdEwQFMAMB
Af8wGgYJKoZIhvZ9B0EABA0wCxsFVjMuMGMDAgbAMA0GCSqGSIb3DQEBBQUAA4GBAFjOKer89961
zgK5F7WF0bnj4JXMJTENAKaSbn+2kmOeUJXRmm/kEd5jhW6Y7qj/WsjTVbJmcVfewCHrPSqnI0kB
BIZCe/zuf6IWUrVnZ9NA2zsmWLIodz2uFHdh1voqZiegDfqnc1zqcPGUIWVEX/r87yloqaKHee95
70+sB3c4
-----END CERTIFICATE-----

              ]]></file>
              <file Name="5a3f0ff8.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEHTCCAwWgAwIBAgIQToEtioJl4AsC7j41AkblPTANBgkqhkiG9w0BAQUFADCBgTELMAkGA1UE
BhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgG
A1UEChMRQ09NT0RPIENBIExpbWl0ZWQxJzAlBgNVBAMTHkNPTU9ETyBDZXJ0aWZpY2F0aW9uIEF1
dGhvcml0eTAeFw0wNjEyMDEwMDAwMDBaFw0yOTEyMzEyMzU5NTlaMIGBMQswCQYDVQQGEwJHQjEb
MBkGA1UECBMSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFD
T01PRE8gQ0EgTGltaXRlZDEnMCUGA1UEAxMeQ09NT0RPIENlcnRpZmljYXRpb24gQXV0aG9yaXR5
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0ECLi3LjkRv3UcEbVASY06m/weaKXTuH
+7uIzg3jLz8GlvCiKVCZrts7oVewdFFxze1CkU1B/qnI2GqGd0S7WWaXUF601CxwRM/aN5VCaTww
xHGzUvAhTaHYujl8HJ6jJJ3ygxaYqhZ8Q5sVW7euNJH+1GImGEaaP+vB+fGQV+useg2L23IwambV
4EajcNxo2f8ESIl33rXp+2dtQem8Ob0y2WIC8bGoPW43nOIv4tOiJovGuFVDiOEjPqXSJDlqR6sA
1KGzqSX+DT+nHbrTUcELpNqsOO9VUCQFZUaTNE8tja3G1CEZ0o7KBWFxB3NH5YoZEr0ETc5OnKVI
rLsm9wIDAQABo4GOMIGLMB0GA1UdDgQWBBQLWOWLxkwVN6RAqTCpIb5HNlpW/zAOBgNVHQ8BAf8E
BAMCAQYwDwYDVR0TAQH/BAUwAwEB/zBJBgNVHR8EQjBAMD6gPKA6hjhodHRwOi8vY3JsLmNvbW9k
b2NhLmNvbS9DT01PRE9DZXJ0aWZpY2F0aW9uQXV0aG9yaXR5LmNybDANBgkqhkiG9w0BAQUFAAOC
AQEAPpiem/Yb6dc5t3iuHXIYSdOH5EOC6z/JqvWote9VfCFSZfnVDeFs9D6Mk3ORLgLETgdxb8CP
OGEIqB6BCsAvIC9Bi5HcSEW88cbeunZrM8gALTFGTO3nnc+IlP8zwFboJIYmuNg4ON8qa90SzMc/
RxdMosIGlgnW2/4/PEZB31jiVg88O8EckzXZOFKs7sjsLjBOlDW0JB9LeGna8gI4zJVSk/BwJVmc
IGfE7vmLV2H0knZ9P4SNVbfo5azV8fUZVqZa+5Acr5Pr5RzUZ5ddBA6+C4OmF4O5MBKgxTMVBbkN
+8cFduPYSo38NBejxiEovjBFMR7HeL5YYTisO+IBZQ==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="5a5372fc.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFSzCCBLSgAwIBAgIBaTANBgkqhkiG9w0BAQQFADCBmTELMAkGA1UEBhMCSFUx
ETAPBgNVBAcTCEJ1ZGFwZXN0MScwJQYDVQQKEx5OZXRMb2NrIEhhbG96YXRiaXp0
b25zYWdpIEtmdC4xGjAYBgNVBAsTEVRhbnVzaXR2YW55a2lhZG9rMTIwMAYDVQQD
EylOZXRMb2NrIFV6bGV0aSAoQ2xhc3MgQikgVGFudXNpdHZhbnlraWFkbzAeFw05
OTAyMjUxNDEwMjJaFw0xOTAyMjAxNDEwMjJaMIGZMQswCQYDVQQGEwJIVTERMA8G
A1UEBxMIQnVkYXBlc3QxJzAlBgNVBAoTHk5ldExvY2sgSGFsb3phdGJpenRvbnNh
Z2kgS2Z0LjEaMBgGA1UECxMRVGFudXNpdHZhbnlraWFkb2sxMjAwBgNVBAMTKU5l
dExvY2sgVXpsZXRpIChDbGFzcyBCKSBUYW51c2l0dmFueWtpYWRvMIGfMA0GCSqG
SIb3DQEBAQUAA4GNADCBiQKBgQCx6gTsIKAjwo84YM/HRrPVG/77uZmeBNwcf4xK
gZjupNTKihe5In+DCnVMm8Bp2GQ5o+2So/1bXHQawEfKOml2mrriRBf8TKPV/riX
iK+IA4kfpPIEPsgHC+b5sy96YhQJRhTKZPWLgLViqNhr1nGTLbO/CVRY7QbrqHvc
Q7GhaQIDAQABo4ICnzCCApswEgYDVR0TAQH/BAgwBgEB/wIBBDAOBgNVHQ8BAf8E
BAMCAAYwEQYJYIZIAYb4QgEBBAQDAgAHMIICYAYJYIZIAYb4QgENBIICURaCAk1G
SUdZRUxFTSEgRXplbiB0YW51c2l0dmFueSBhIE5ldExvY2sgS2Z0LiBBbHRhbGFu
b3MgU3pvbGdhbHRhdGFzaSBGZWx0ZXRlbGVpYmVuIGxlaXJ0IGVsamFyYXNvayBh
bGFwamFuIGtlc3p1bHQuIEEgaGl0ZWxlc2l0ZXMgZm9seWFtYXRhdCBhIE5ldExv
Y2sgS2Z0LiB0ZXJtZWtmZWxlbG9zc2VnLWJpenRvc2l0YXNhIHZlZGkuIEEgZGln
aXRhbGlzIGFsYWlyYXMgZWxmb2dhZGFzYW5hayBmZWx0ZXRlbGUgYXogZWxvaXJ0
IGVsbGVub3J6ZXNpIGVsamFyYXMgbWVndGV0ZWxlLiBBeiBlbGphcmFzIGxlaXJh
c2EgbWVndGFsYWxoYXRvIGEgTmV0TG9jayBLZnQuIEludGVybmV0IGhvbmxhcGph
biBhIGh0dHBzOi8vd3d3Lm5ldGxvY2submV0L2RvY3MgY2ltZW4gdmFneSBrZXJo
ZXRvIGF6IGVsbGVub3J6ZXNAbmV0bG9jay5uZXQgZS1tYWlsIGNpbWVuLiBJTVBP
UlRBTlQhIFRoZSBpc3N1YW5jZSBhbmQgdGhlIHVzZSBvZiB0aGlzIGNlcnRpZmlj
YXRlIGlzIHN1YmplY3QgdG8gdGhlIE5ldExvY2sgQ1BTIGF2YWlsYWJsZSBhdCBo
dHRwczovL3d3dy5uZXRsb2NrLm5ldC9kb2NzIG9yIGJ5IGUtbWFpbCBhdCBjcHNA
bmV0bG9jay5uZXQuMA0GCSqGSIb3DQEBBAUAA4GBAATbrowXr/gOkDFOzT4JwG06
sPgzTEdM43WIEJessDgVkcYplswhwG08pXTP2IKlOcNl40JwuyKQ433bNXbhoLXa
n3BukxowOR0w2y7jfLKRstE3Kfq51hdcR0/jHTjrn9V7lagonhVK0dHQKwCXoOKS
NitjrFgBazMpUIaD8QFI
-----END CERTIFICATE-----

              ]]></file>
              <file Name="5cf9d536.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIF0DCCBLigAwIBAgIEOrZQizANBgkqhkiG9w0BAQUFADB/MQswCQYDVQQGEwJCTTEZMBcGA1UE
ChMQUXVvVmFkaXMgTGltaXRlZDElMCMGA1UECxMcUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0
eTEuMCwGA1UEAxMlUXVvVmFkaXMgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wMTAz
MTkxODMzMzNaFw0yMTAzMTcxODMzMzNaMH8xCzAJBgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRp
cyBMaW1pdGVkMSUwIwYDVQQLExxSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MS4wLAYDVQQD
EyVRdW9WYWRpcyBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEAv2G1lVO6V/z68mcLOhrfEYBklbTRvM16z/Ypli4kVEAkOPcahdxYTMuk
J0KX0J+DisPkBgNbAKVRHnAEdOLB1Dqr1607BxgFjv2DrOpm2RgbaIr1VxqYuvXtdj182d6UajtL
F8HVj71lODqV0D1VNk7feVcxKh7YWWVJWCCYfqtffp/p1k3sg3Spx2zY7ilKhSoGFPlU5tPaZQeL
YzcS19Dsw3sgQUSj7cugF+FxZc4dZjH3dgEZyH0DWLaVSR2mEiboxgx24ONmy+pdpibu5cxfvWen
AScOospUxbF6lR1xHkopigPcakXBpBlebzbNw6Kwt/5cOOJSvPhEQ+aQuwIDAQABo4ICUjCCAk4w
PQYIKwYBBQUHAQEEMTAvMC0GCCsGAQUFBzABhiFodHRwczovL29jc3AucXVvdmFkaXNvZmZzaG9y
ZS5jb20wDwYDVR0TAQH/BAUwAwEB/zCCARoGA1UdIASCAREwggENMIIBCQYJKwYBBAG+WAABMIH7
MIHUBggrBgEFBQcCAjCBxxqBxFJlbGlhbmNlIG9uIHRoZSBRdW9WYWRpcyBSb290IENlcnRpZmlj
YXRlIGJ5IGFueSBwYXJ0eSBhc3N1bWVzIGFjY2VwdGFuY2Ugb2YgdGhlIHRoZW4gYXBwbGljYWJs
ZSBzdGFuZGFyZCB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB1c2UsIGNlcnRpZmljYXRpb24gcHJh
Y3RpY2VzLCBhbmQgdGhlIFF1b1ZhZGlzIENlcnRpZmljYXRlIFBvbGljeS4wIgYIKwYBBQUHAgEW
Fmh0dHA6Ly93d3cucXVvdmFkaXMuYm0wHQYDVR0OBBYEFItLbe3TKbkGGew5Oanwl4Rqy+/fMIGu
BgNVHSMEgaYwgaOAFItLbe3TKbkGGew5Oanwl4Rqy+/foYGEpIGBMH8xCzAJBgNVBAYTAkJNMRkw
FwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMSUwIwYDVQQLExxSb290IENlcnRpZmljYXRpb24gQXV0
aG9yaXR5MS4wLAYDVQQDEyVRdW9WYWRpcyBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5ggQ6
tlCLMA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQUFAAOCAQEAitQUtf70mpKnGdSkfnIYj9lo
fFIk3WdvOXrEql494liwTXCYhGHoG+NpGA7O+0dQoE7/8CQfvbLO9Sf87C9TqnN7Az10buYWnuul
LsS/VidQK2K6vkscPFVcQR0kvoIgR13VRH56FmjffU1RcHhXHTMe/QKZnAzNCgVPx7uOpHX6Sm2x
gI4JVrmcGmD+XcHXetwReNDWXcG31a0ymQM6isxUJTkxgXsTIlG6Rmyhu576BGxJJnSP0nPrzDCi
5upZIof4l/UO/erMkqQWxFIY6iHOsfHmhIHluqmGKPJDWl0Snawe2ajlCmqnf6CHKc/yiU3U7MXi
5nrQNiOKSnQ2+Q==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="5e4e69e7.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDhDCCAwqgAwIBAgIQL4D+I4wOIg9IZxIokYesszAKBggqhkjOPQQDAzCByjELMAkGA1UEBhMC
VVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3
b3JrMTowOAYDVQQLEzEoYykgMjAwNyBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVz
ZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmlj
YXRpb24gQXV0aG9yaXR5IC0gRzQwHhcNMDcxMTA1MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCByjEL
MAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBU
cnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNyBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRo
b3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5
IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzQwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAASnVnp8
Utpkmw4tXNherJI9/gHmGUo9FANL+mAnINmDiWn6VMaaGF5VKmTeBvaNSjutEDxlPZCIBIngMGGz
rl0Bp3vefLK+ymVhAIau2o970ImtTR1ZmkGxvEeA3J5iw/mjgbIwga8wDwYDVR0TAQH/BAUwAwEB
/zAOBgNVHQ8BAf8EBAMCAQYwbQYIKwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJaW1hZ2UvZ2lmMCEw
HzAHBgUrDgMCGgQUj+XTGoasjY5rw8+AatRIGCx7GS4wJRYjaHR0cDovL2xvZ28udmVyaXNpZ24u
Y29tL3ZzbG9nby5naWYwHQYDVR0OBBYEFLMWkf3upm7ktS5Jj4d4gYDs5bG1MAoGCCqGSM49BAMD
A2gAMGUCMGYhDBgmYFo4e1ZC4Kf8NoRRkSAsdk1DPcQdhCPQrNZ8NQbOzWm9kA3bbEhCHQ6qQgIx
AJw9SDkjOVgaFRJZap7v1VmyHVIsmXHNxynfGyphe3HR3vPA5Q06Sqotp9iGKt0uEA==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="5efd7c6e.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFTDCCAzSgAwIBAgIUSJgt4qkssznhyPkzNYJ10+T4glUwDQYJKoZIhvcNAQEL
BQAwRTELMAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxGzAZ
BgNVBAMTElF1b1ZhZGlzIFJvb3QgQ0EgMjAeFw0xMzA2MDExMzM1MDVaFw0yMzA2
MDExMzM1MDVaME0xCzAJBgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBMaW1p
dGVkMSMwIQYDVQQDExpRdW9WYWRpcyBHbG9iYWwgU1NMIElDQSBHMjCCASIwDQYJ
KoZIhvcNAQEBBQADggEPADCCAQoCggEBAOHhhWmUwI9X+jT+wbho5JmQqYh6zle3
0OS1VMIYfdDDGeipY4D3t9zSGaNasGDZdrQdMlY18WyjnEKhi4ojNZdBewVphCiO
zh5Ni2Ak8bSI/sBQ9sKPrpd0+UCqbvaGs6Tpx190ZRT0Pdy+TqOYZF/jBmzBj7Yf
XJmWxlfCy62UiQ6tvv+4C6W2OPu1R4HUD8oJ8Qo7Eg0cD+GFsBM2w8soffyl+Dc6
pKtARmOClUC7EqyWP0V9953lA34kuJZlYxxdgghBTn9rWoaQw/Lr5Fn0Xgd7fYS3
/zGhmXYvVsuAxIn8Gk+YaeoLZ8H9tUvnDD3lEHzvIsMPxqtd7IgcVaMCAwEAAaOC
ASowggEmMBIGA1UdEwEB/wQIMAYBAf8CAQAwEQYDVR0gBAowCDAGBgRVHSAAMHIG
CCsGAQUFBwEBBGYwZDAqBggrBgEFBQcwAYYeaHR0cDovL29jc3AucXVvdmFkaXNn
bG9iYWwuY29tMDYGCCsGAQUFBzAChipodHRwOi8vdHJ1c3QucXVvdmFkaXNnbG9i
YWwuY29tL3F2cmNhMi5jcnQwDgYDVR0PAQH/BAQDAgEGMB8GA1UdIwQYMBaAFBqE
YrxITDMlBNTu0PYDxBlG0ZRrMDkGA1UdHwQyMDAwLqAsoCqGKGh0dHA6Ly9jcmwu
cXVvdmFkaXNnbG9iYWwuY29tL3F2cmNhMi5jcmwwHQYDVR0OBBYEFJEZYq1bF6cw
+/DeOSWxvYy5uFEnMA0GCSqGSIb3DQEBCwUAA4ICAQB8CmCCAEG1Lcw55fTba84A
ipwMieZydFO5bcIh5UyXWgWZ6OP4jb/6LaifEMLjRCC0mU14G6PrPU+iZQiIae7X
5EavhmETEA8JbLICjiD4c9Y6+bgMt4szEPiZ2SALOQj10Br4HKQfy/OvbedRbLax
p9qlDG4qJgSt3uikDIJSarx6mpgEQXu00UZNkiEYUfeO8hXGXrZbtDnkuaiVDtM6
s9yYpcoyFxFOrORrEgViaI7P3EJaDYmI6IDUIPaSBM6GrVMiaINYEMBL1v2jZi8r
XDY0yVsZ/0DAIQiCBNNvT1NjQ5Sn1E+O+ZBiqDD+rBvBoPsI6ydfdKtJur5YL+Oo
kJK2eLrce8287awIcd8FMRDcZw/NX1bc8uKye5OCtwpQ0d4jL4emuXwFv8TqUbZh
2xJShyy57cqw3qWoBOs/WWza29/Hun8PXkQoZepwY/xc+9nI1NaKM8NqhSqJNTJl
vXj7zb3mdpbe3YR9BkSXProlN7l5KOx54gJ7kJ7r6qJYJux03HyPM11Kp4wfdn1R
sC2UQ5awC6fg/3XE2HZVkyqJjKwqh4nFaiK5EMV7DHQ4oJx9ckmDw6pBvDaoPokX
yzdfJ72n+1JfHGP+workciKNldgqYX6J4jPrCIEIBrtDta4QxP10Tyd9RFu13XmE
8SYi/VXvrf3nriQfAZ/nSA==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="5f47b495.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFuzCCA6OgAwIBAgIIVwoRl0LE48wwDQYJKoZIhvcNAQELBQAwazELMAkGA1UEBhMCSVQxDjAM
BgNVBAcMBU1pbGFuMSMwIQYDVQQKDBpBY3RhbGlzIFMucC5BLi8wMzM1ODUyMDk2NzEnMCUGA1UE
AwweQWN0YWxpcyBBdXRoZW50aWNhdGlvbiBSb290IENBMB4XDTExMDkyMjExMjIwMloXDTMwMDky
MjExMjIwMlowazELMAkGA1UEBhMCSVQxDjAMBgNVBAcMBU1pbGFuMSMwIQYDVQQKDBpBY3RhbGlz
IFMucC5BLi8wMzM1ODUyMDk2NzEnMCUGA1UEAwweQWN0YWxpcyBBdXRoZW50aWNhdGlvbiBSb290
IENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAp8bEpSmkLO/lGMWwUKNvUTufClrJ
wkg4CsIcoBh/kbWHuUA/3R1oHwiD1S0eiKD4j1aPbZkCkpAW1V8IbInX4ay8IMKx4INRimlNAJZa
by/ARH6jDuSRzVju3PvHHkVH3Se5CAGfpiEd9UEtL0z9KK3giq0itFZljoZUj5NDKd45RnijMCO6
zfB9E1fAXdKDa0hMxKufgFpbOr3JpyI/gCczWw63igxdBzcIy2zSekciRDXFzMwujt0q7bd9Zg1f
YVEiVRvjRuPjPdA1YprbrxTIW6HMiRvhMCb8oJsfgadHHwTrozmSBp+Z07/T6k9QnBn+locePGX2
oxgkg4YQ51Q+qDp2JE+BIcXjDwL4k5RHILv+1A7TaLndxHqEguNTVHnd25zS8gebLra8Pu2Fbe8l
EfKXGkJh90qX6IuxEAf6ZYGyojnP9zz/GPvG8VqLWeICrHuS0E4UT1lF9gxeKF+w6D9Fz8+vm2/7
hNN3WpVvrJSEnu68wEqPSpP4RCHiMUVhUE4Q2OM1fEwZtN4Fv6MGn8i1zeQf1xcGDXqVdFUNaBr8
EBtiZJ1t4JWgw5QHVw0U5r0F+7if5t+L4sbnfpb2U8WANFAoWPASUHEXMLrmeGO89LKtmyuy/uE5
jF66CyCU3nuDuP/jVo23Eek7jPKxwV2dpAtMK9myGPW1n0sCAwEAAaNjMGEwHQYDVR0OBBYEFFLY
iDrIn3hm7YnzezhwlMkCAjbQMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAUUtiIOsifeGbt
ifN7OHCUyQICNtAwDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQALe3KHwGCmSUyI
WOYdiPcUZEim2FgKDk8TNd81HdTtBjHIgT5q1d07GjLukD0R0i70jsNjLiNmsGe+b7bAEzlgqqI0
JZN1Ut6nna0Oh4lScWoWPBkdg/iaKWW+9D+a2fDzWochcYBNy+A4mz+7+uAwTc+G02UQGRjRlwKx
K3JCaKygvU5a2hi/a5iB0P2avl4VSM0RFbnAKVy06Ij3Pjaut2L9HmLecHgQHEhb2rykOLpn7VU+
Xlff1ANATIGk0k9jpwlCCRT8AKnCgHNPLsBA2RF7SOp6AsDT6ygBJlh0wcBzIm2Tlf05fbsq4/aC
4yyXX04fkZT6/iyj2HYauE2yOE+b+h1IYHkm4vP9qdCa6HCPSXrW5b0KDtst842/6+OkfcvHlXHo
2qN8xcL4dJIEG4aspCJTQLas/kx2z/uUMsA1n3Y/buWQbqCmJqK4LL7RK4X9p2jIugErsWx0Hbhz
lefut8cl8ABMALJ+tguLHPPAUJ4lueAI3jZm/zel0btUZCzJJ7VLkn5l/9Mt4blOvH+kQSGQQXem
OR/qnuOf0GZvBeyqdn6/axag67XH/JJULysRJyU3eExRarDzzFhdFPFqSBX/wge2sY0PjlxQRrM9
vwGYT7JZVEc+NHt4bVaTLnPqZih4zR0Uv6CPLy64Lo7yFIrM6bV8+2ydDKXhlg==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="5f5e5caa.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDnzCCAwygAwIBAgIRAP9F1SddJPuzwjkkU1fhT94wDQYJKoZIhvcNAQEFBQAw
XzELMAkGA1UEBhMCVVMxIDAeBgNVBAoTF1JTQSBEYXRhIFNlY3VyaXR5LCBJbmMu
MS4wLAYDVQQLEyVTZWN1cmUgU2VydmVyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5
MB4XDTAwMDgwNDAwMDAwMFoXDTA0MDgwMzIzNTk1OVowgZ4xFzAVBgNVBAoTDlZl
cmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTsw
OQYDVQQLEzJUZXJtcyBvZiB1c2UgYXQgaHR0cHM6Ly93d3cudmVyaXNpZ24uY29t
L1JQQSAoYykwMDElMCMGA1UEAxMcU2VjdXJlIFNlcnZlciBPQ1NQIFJlc3BvbmRl
cjCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAuFGZZIUO7rMKaPC/Y3YdU/X8
oXiMM+6f9L452psPTUepjyDoS0S9zs17kNEw6JDEJXuJKN699pMd/7n/krWpjeSu
zOLDB4Nqo3IQASdiIqY1Jjktns9gDPxHpNfQQninHWzQy08VpykKtJVFxLHnWgnX
OZXYHTWewr2zXcEMSx8CAwEAAaOCAR0wggEZMCAGA1UdEQQZMBekFTATMREwDwYD
VQQDEwhPQ1NQIDEtNDA+BgNVHR8ENzA1MDOgMaAvhi1odHRwOi8vY3JsLnZlcmlz
aWduLmNvbS9SU0FTZWN1cmVTZXJ2ZXItcC5jcmwwEwYDVR0lBAwwCgYIKwYBBQUH
AwkwQgYIKwYBBQUHAQEENjA0MDIGCCsGAQUFBzABpiYWJGh0dHA6Ly9vY3NwLnZl
cmlzaWduLmNvbS9vY3NwL3N0YXR1czBEBgNVHSAEPTA7MDkGC2CGSAGG+EUBBwEB
MCowKAYIKwYBBQUHAgEWHGh0dHBzOi8vd3d3LnZlcmlzaWduLmNvbS9SUEEwCQYD
VR0TBAIwADALBgNVHQ8EBAMCB4AwDQYJKoZIhvcNAQEFBQADfgAAsxBTZpxJky4x
oAJC0lhXfmah/huKYRhQQCweK0Gl1tv/rAgcWgVtAlwqtpZPR9u+TtvOzLqGuBjO
sRKRX2P380g+zPFNE+RtCZR4AJLLoyCdBgtqoEMHztEZbI8YdZqfFzP9qSa44+Le
wqjEWop/mNYHBmvMVp6GcM7U7w==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="60afe812.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEFTCCAv2gAwIBAgIGSUEs5AAQMA0GCSqGSIb3DQEBCwUAMIGnMQswCQYDVQQGEwJIVTERMA8G
A1UEBwwIQnVkYXBlc3QxFTATBgNVBAoMDE5ldExvY2sgS2Z0LjE3MDUGA1UECwwuVGFuw7pzw610
dsOhbnlraWFkw7NrIChDZXJ0aWZpY2F0aW9uIFNlcnZpY2VzKTE1MDMGA1UEAwwsTmV0TG9jayBB
cmFueSAoQ2xhc3MgR29sZCkgRsWRdGFuw7pzw610dsOhbnkwHhcNMDgxMjExMTUwODIxWhcNMjgx
MjA2MTUwODIxWjCBpzELMAkGA1UEBhMCSFUxETAPBgNVBAcMCEJ1ZGFwZXN0MRUwEwYDVQQKDAxO
ZXRMb2NrIEtmdC4xNzA1BgNVBAsMLlRhbsO6c8OtdHbDoW55a2lhZMOzayAoQ2VydGlmaWNhdGlv
biBTZXJ2aWNlcykxNTAzBgNVBAMMLE5ldExvY2sgQXJhbnkgKENsYXNzIEdvbGQpIEbFkXRhbsO6
c8OtdHbDoW55MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxCRec75LbRTDofTjl5Bu
0jBFHjzuZ9lk4BqKf8owyoPjIMHj9DrTlF8afFttvzBPhCf2nx9JvMaZCpDyD/V/Q4Q3Y1GLeqVw
/HpYzY6b7cNGbIRwXdrzAZAj/E4wqX7hJ2Pn7WQ8oLjJM2P+FpD/sLj916jAwJRDC7bVWaaeVtAk
H3B5r9s5VA1lddkVQZQBr17s9o3x/61k/iCa11zr/qYfCGSji3ZVrR47KGAuhyXoqq8fxmRGILdw
fzzeSNuWU7c5d+Qa4scWhHaXWy+7GRWF+GmF9ZmnqfI0p6m2pgP8b4Y9VHx2BJtr+UBdADTHLpl1
neWIA6pN+APSQnbAGwIDAKiLo0UwQzASBgNVHRMBAf8ECDAGAQH/AgEEMA4GA1UdDwEB/wQEAwIB
BjAdBgNVHQ4EFgQUzPpnk/C2uNClwB7zU/2MU9+D15YwDQYJKoZIhvcNAQELBQADggEBAKt/7hwW
qZw8UQCgwBEIBaeZ5m8BiFRhbvG5GK1Krf6BQCOUL/t1fC8oS2IkgYIL9WHxHG64YTjrgfpioTta
YtOUZcTh5m2C+C8lcLIhJsFyUR+MLMOEkMNaj7rP9KdlpeuY0fsFskZ1FSNqb4VjMIDw1Z4fKRzC
bLBQWV2QWzuoDTDPv31/zvGdg73JRm4gpvlhUbohL3u+pRVjodSVh/GeufOJ8z2FuLjbvrW5Kfna
NwUASZQDhETnv0Mxz3WLJdH0pmT1kvarBes96aULNmLazAZfNou2XjG4Kvte9nHfRCaexOYNkbQu
dZWAUWpLMKawYqGT8ZvYzsRjdT9ZR7E=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="61186c44.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIE/jCCA+agAwIBAgIUbXqPf3Zd6Mt/jsim7txwSfK7n5UwDQYJKoZIhvcNAQEL
BQAwTTELMAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxIzAh
BgNVBAMTGlF1b1ZhZGlzIEdsb2JhbCBTU0wgSUNBIEcyMB4XDTE0MTIxOTAxMDQ1
OFoXDTE3MTIxOTAxMDQ1NVowgYYxCzAJBgNVBAYTAkFVMQwwCgYDVQQIEwNOU1cx
FTATBgNVBAcTDEVhc3QgTGlzbW9yZTEiMCAGA1UEChMZU291dGhlcm4gQ3Jvc3Mg
VW5pdmVyc2l0eTENMAsGA1UECxMESVRUUzEfMB0GA1UEAxMWbGVhcm4tc3RhZ2Uu
c2N1LmVkdS5hdTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL5QCU71
ObexhczV/gsj6eltbjk8v1Ksnd/egO/ixWNEAoIW5Fv/0BKEoI6PwFplhOODdQC0
usfy3mNzX8pqoAjnDF/R97yeik4BARGrmq7mRqwaoUuyr0sSG5AJ1pSIFlpgvd18
t58fHAthl3BQeuJl3ILOlVNJDXi77BzOJ88z7gZvdF+8QvCUifTBdVxb2EXBDft0
g/bY1FBSE9qUCgpJQ6gW09fFqmI0ghAAYd6b65miJdRIMi3gAxwkgQrUinkedLOj
VLb1OZsOAtEDQ3ezBpXrUorJJolPZhe1B5akjBhFsCcpggptjfqLq4J+RGGuj0nD
+CAWzH6vqFv2rHsCAwEAAaOCAZowggGWMHMGCCsGAQUFBwEBBGcwZTAqBggrBgEF
BQcwAYYeaHR0cDovL29jc3AucXVvdmFkaXNnbG9iYWwuY29tMDcGCCsGAQUFBzAC
hitodHRwOi8vdHJ1c3QucXVvdmFkaXNnbG9iYWwuY29tL3F2c3NsZzIuY3J0MCEG
A1UdEQQaMBiCFmxlYXJuLXN0YWdlLnNjdS5lZHUuYXUwUQYDVR0gBEowSDBGBgwr
BgEEAb5YAAJkAQEwNjA0BggrBgEFBQcCARYoaHR0cDovL3d3dy5xdW92YWRpc2ds
b2JhbC5jb20vcmVwb3NpdG9yeTAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYI
KwYBBQUHAwEGCCsGAQUFBwMCMB8GA1UdIwQYMBaAFJEZYq1bF6cw+/DeOSWxvYy5
uFEnMDoGA1UdHwQzMDEwL6AtoCuGKWh0dHA6Ly9jcmwucXVvdmFkaXNnbG9iYWwu
Y29tL3F2c3NsZzIuY3JsMB0GA1UdDgQWBBSBQ1h6oUb00d5IthXHnfvHSNCNkjAN
BgkqhkiG9w0BAQsFAAOCAQEAsqYQH7x7dIfIOrai1a5v+ysycOTa3rU1d7A/jPeR
Ko2nbNe2zT/YP6iMe0DY7hhggl1B4Sv6CDhodZz1/7uoL7RFaT561YfWfpcBlbMn
s19BK2hrM+KO0ML7P50jpYHQPfdythJ+5DpkjN6pPZY9q1a3g6bUNe2TrtNoSJq7
IdoKFp6sjzvLiJkFO91icnbo070ITH5JKo0BtBI8Md560sxXSTeZPTcEDrUFVAew
gNOmTw7giC6BTF8M80RxJKDVXUCtT6XKzT42MIIy+aO/RkVyhaDyP4gyMwiK4HrJ
laiMEMU/p7dIFR9e1+WWOeVS5OukOR7QrNBHB7tSZDLRgw==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="61f6c934.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDnjCCAwegAwIBAgIQCUYX5h3Y1BygDKBi6HmKpzANBgkqhkiG9w0BAQUFADBf
MQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xNzA1BgNVBAsT
LkNsYXNzIDIgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkw
HhcNMDAwODAxMDAwMDAwWhcNMDQwNzMxMjM1OTU5WjCBpzEXMBUGA1UEChMOVmVy
aVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdvcmsxOzA5
BgNVBAsTMlRlcm1zIG9mIHVzZSBhdCBodHRwczovL3d3dy52ZXJpc2lnbi5jb20v
UlBBIChjKTAwMS4wLAYDVQQDEyVDbGFzcyAyIFB1YmxpYyBQcmltYXJ5IE9DU1Ag
UmVzcG9uZGVyMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDQymMxYX9ENHwF
fQs9apDLeUt3Cj9LxyPlwGItfpx+PoiHkdCs6E1Jh6KWkIrdBKUCP4yb6Yn+YqDi
Wr3I3bR45qVCkwhnAcAgTddc9F3as+M3plIaLExlTYqH2aij8UlUuzxcgFFoxvtJ
/wtVqxXd+5rBuR10DbKMRF2J/J/5gwIDAQABo4IBEDCCAQwwIAYDVR0RBBkwF6QV
MBMxETAPBgNVBAMTCE9DU1AgMS0yMDEGA1UdHwQqMCgwJqAkoCKGIGh0dHA6Ly9j
cmwudmVyaXNpZ24uY29tL3BjYTIuY3JsMBMGA1UdJQQMMAoGCCsGAQUFBwMJMEIG
CCsGAQUFBwEBBDYwNDAyBggrBgEFBQcwAaYmFiRodHRwOi8vb2NzcC52ZXJpc2ln
bi5jb20vb2NzcC9zdGF0dXMwRAYDVR0gBD0wOzA5BgtghkgBhvhFAQcBATAqMCgG
CCsGAQUFBwIBFhxodHRwczovL3d3dy52ZXJpc2lnbi5jb20vUlBBMAkGA1UdEwQC
MAAwCwYDVR0PBAQDAgeAMA0GCSqGSIb3DQEBBQUAA4GBAB99CW4kRnUEnPMmm+M5
bhfvvL2iG9IChIar0ECXLMRDiDcZayKoA3FQnSDcNmAgmnMtc1VsWJsswrQ0LHoz
QsqR2elDr88e4PXEeqs/cmMeqTfhWzuIsxOGgpBXy1f/9Fa+It3jl6jhvCJDwt1N
2/aBnpIUnjkPE1TegtjAXjSN
-----END CERTIFICATE-----

              ]]></file>
              <file Name="635ccfd5.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFTzCCBLigAwIBAgIBaDANBgkqhkiG9w0BAQQFADCBmzELMAkGA1UEBhMCSFUx
ETAPBgNVBAcTCEJ1ZGFwZXN0MScwJQYDVQQKEx5OZXRMb2NrIEhhbG96YXRiaXp0
b25zYWdpIEtmdC4xGjAYBgNVBAsTEVRhbnVzaXR2YW55a2lhZG9rMTQwMgYDVQQD
EytOZXRMb2NrIEV4cHJlc3N6IChDbGFzcyBDKSBUYW51c2l0dmFueWtpYWRvMB4X
DTk5MDIyNTE0MDgxMVoXDTE5MDIyMDE0MDgxMVowgZsxCzAJBgNVBAYTAkhVMREw
DwYDVQQHEwhCdWRhcGVzdDEnMCUGA1UEChMeTmV0TG9jayBIYWxvemF0Yml6dG9u
c2FnaSBLZnQuMRowGAYDVQQLExFUYW51c2l0dmFueWtpYWRvazE0MDIGA1UEAxMr
TmV0TG9jayBFeHByZXNzeiAoQ2xhc3MgQykgVGFudXNpdHZhbnlraWFkbzCBnzAN
BgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA6+ywbGGKIyWvYCDj2Z/8kwvbXY2wobNA
OoLO/XXgeDIDhlqGlZHtU/qdQPzm6N3ZW3oDvV3zOwzDUXmbrVWg6dADEK8KuhRC
2VImESLH0iDMgqSaqf64gXadarfSNnU+sYYJ9m5tfk63euyucYT2BDMIJTLrdKwW
RMbkQJMdf60CAwEAAaOCAp8wggKbMBIGA1UdEwEB/wQIMAYBAf8CAQQwDgYDVR0P
AQH/BAQDAgAGMBEGCWCGSAGG+EIBAQQEAwIABzCCAmAGCWCGSAGG+EIBDQSCAlEW
ggJNRklHWUVMRU0hIEV6ZW4gdGFudXNpdHZhbnkgYSBOZXRMb2NrIEtmdC4gQWx0
YWxhbm9zIFN6b2xnYWx0YXRhc2kgRmVsdGV0ZWxlaWJlbiBsZWlydCBlbGphcmFz
b2sgYWxhcGphbiBrZXN6dWx0LiBBIGhpdGVsZXNpdGVzIGZvbHlhbWF0YXQgYSBO
ZXRMb2NrIEtmdC4gdGVybWVrZmVsZWxvc3NlZy1iaXp0b3NpdGFzYSB2ZWRpLiBB
IGRpZ2l0YWxpcyBhbGFpcmFzIGVsZm9nYWRhc2FuYWsgZmVsdGV0ZWxlIGF6IGVs
b2lydCBlbGxlbm9yemVzaSBlbGphcmFzIG1lZ3RldGVsZS4gQXogZWxqYXJhcyBs
ZWlyYXNhIG1lZ3RhbGFsaGF0byBhIE5ldExvY2sgS2Z0LiBJbnRlcm5ldCBob25s
YXBqYW4gYSBodHRwczovL3d3dy5uZXRsb2NrLm5ldC9kb2NzIGNpbWVuIHZhZ3kg
a2VyaGV0byBheiBlbGxlbm9yemVzQG5ldGxvY2submV0IGUtbWFpbCBjaW1lbi4g
SU1QT1JUQU5UISBUaGUgaXNzdWFuY2UgYW5kIHRoZSB1c2Ugb2YgdGhpcyBjZXJ0
aWZpY2F0ZSBpcyBzdWJqZWN0IHRvIHRoZSBOZXRMb2NrIENQUyBhdmFpbGFibGUg
YXQgaHR0cHM6Ly93d3cubmV0bG9jay5uZXQvZG9jcyBvciBieSBlLW1haWwgYXQg
Y3BzQG5ldGxvY2submV0LjANBgkqhkiG9w0BAQQFAAOBgQAQrX/XDDKACtiG8XmY
ta3UzbM2xJZIwVzNmtkFLp++UOv0JhQQLdRmF/iewSf98e3ke0ugbLWrmldwpu2g
pO0u9f38vf5NNwgMvOOWgyL1SRt/Syu0VMGAfJlOHdCM7tCs5ZL6dVb+ZKATj7i4
Fp1hBWeAyNDYpQcCNJgEjTME1A==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="63a2c897.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFODCCAyCgAwIBAgIRAJW+FqD3LkbxezmCcvqLzZYwDQYJKoZIhvcNAQEFBQAwNzEUMBIGA1UE
CgwLVGVsaWFTb25lcmExHzAdBgNVBAMMFlRlbGlhU29uZXJhIFJvb3QgQ0EgdjEwHhcNMDcxMDE4
MTIwMDUwWhcNMzIxMDE4MTIwMDUwWjA3MRQwEgYDVQQKDAtUZWxpYVNvbmVyYTEfMB0GA1UEAwwW
VGVsaWFTb25lcmEgUm9vdCBDQSB2MTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMK+
6yfwIaPzaSZVfp3FVRaRXP3vIb9TgHot0pGMYzHw7CTww6XScnwQbfQ3t+XmfHnqjLWCi65ItqwA
3GV17CpNX8GH9SBlK4GoRz6JI5UwFpB/6FcHSOcZrr9FZ7E3GwYq/t75rH2D+1665I+XZ75Ljo1k
B1c4VWk0Nj0TSO9P4tNmHqTPGrdeNjPUtAa9GAH9d4RQAEX1jF3oI7x+/jXh7VB7qTCNGdMJjmhn
Xb88lxhTuylixcpecsHHltTbLaC0H2kD7OriUPEMPPCs81Mt8Bz17Ww5OXOAFshSsCPN4D7c3TxH
oLs1iuKYaIu+5b9y7tL6pe0S7fyYGKkmdtwoSxAgHNN/Fnct7W+A90m7UwW7XWjH1Mh1Fj+JWov3
F0fUTPHSiXk+TT2YqGHeOh7S+F4D4MHJHIzTjU3TlTazN19jY5szFPAtJmtTfImMMsJu7D0hADnJ
oWjiUIMusDor8zagrC/kb2HCUQk5PotTubtn2txTuXZZNp1D5SDgPTJghSJRt8czu90VL6R4pgd7
gUY2BIbdeTXHlSw7sKMXNeVzH7RcWe/a6hBle3rQf5+ztCo3O3CLm1u5K7fsslESl1MpWtTwEhDc
TwK7EpIvYtQ/aUN8Ddb8WHUBiJ1YFkveupD/RwGJBmr2X7KQarMCpgKIv7NHfirZ1fpoeDVNAgMB
AAGjPzA9MA8GA1UdEwEB/wQFMAMBAf8wCwYDVR0PBAQDAgEGMB0GA1UdDgQWBBTwj1k4ALP1j5qW
DNXr+nuqF+gTEjANBgkqhkiG9w0BAQUFAAOCAgEAvuRcYk4k9AwI//DTDGjkk0kiP0Qnb7tt3oNm
zqjMDfz1mgbldxSR651Be5kqhOX//CHBXfDkH1e3damhXwIm/9fH907eT/j3HEbAek9ALCI18Bmx
0GtnLLCo4MBANzX2hFxc469CeP6nyQ1Q6g2EdvZR74NTxnr/DlZJLo961gzmJ1TjTQpgcmLNkQfW
pb/ImWvtxBnmq0wROMVvMeJuScg/doAmAyYp4Db29iBT4xdwNBedY2gea+zDTYa4EzAvXUYNR0PV
G6pZDrlcjQZIrXSHX8f8MVRBE+LHIQ6e4B4N4cB7Q4WQxYpYxmUKeFfyxiMPAdkgS94P+5KFdSpc
c41teyWRyu5FrgZLAMzTsVlQ2jqIOylDRl6XK1TOU2+NSueW+r9xDkKLfP0ooNBIytrEgUy7onOT
JsjrDNYmiLbAJM+7vVvrdX3pCI6GMyx5dwlppYn8s3CQh3aP0yK7Qs69cwsgJirQmz1wHiRszYd2
qReWt88NkvuOGKmYSdGe/mBEciG5Ge3C9THxOUiIkCR1VBatzvT4aRRkOfujuLpwQMcnHL/EVlP6
Y2XQ8xwOFvVrhlhNGNTkDY6lnVuR3HYkUD/GKvvZt5y11ubQ2egZixVxSK236thZiNSQvxaz2ems
WWFUyBy6ysHK4bkgTI86k4mloMy/0/Z1pHWWbVY=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="67495436.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEKjCCAxKgAwIBAgIQYAGXt0an6rS0mtZLL/eQ+zANBgkqhkiG9w0BAQsFADCBrjELMAkGA1UE
BhMCVVMxFTATBgNVBAoTDHRoYXd0ZSwgSW5jLjEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2
aWNlcyBEaXZpc2lvbjE4MDYGA1UECxMvKGMpIDIwMDggdGhhd3RlLCBJbmMuIC0gRm9yIGF1dGhv
cml6ZWQgdXNlIG9ubHkxJDAiBgNVBAMTG3RoYXd0ZSBQcmltYXJ5IFJvb3QgQ0EgLSBHMzAeFw0w
ODA0MDIwMDAwMDBaFw0zNzEyMDEyMzU5NTlaMIGuMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMdGhh
d3RlLCBJbmMuMSgwJgYDVQQLEx9DZXJ0aWZpY2F0aW9uIFNlcnZpY2VzIERpdmlzaW9uMTgwNgYD
VQQLEy8oYykgMjAwOCB0aGF3dGUsIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTEkMCIG
A1UEAxMbdGhhd3RlIFByaW1hcnkgUm9vdCBDQSAtIEczMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A
MIIBCgKCAQEAsr8nLPvb2FvdeHsbnndmgcs+vHyu86YnmjSjaDFxODNi5PNxZnmxqWWjpYvVj2At
P0LMqmsywCPLLEHd5N/8YZzic7IilRFDGF/Eth9XbAoFWCLINkw6fKXRz4aviKdEAhN0cXMKQlkC
+BsUa0Lfb1+6a4KinVvnSr0eAXLbS3ToO39/fR8EtCab4LRarEc9VbjXsCZSKAExQGbY2SS99irY
7CFJXJv2eul/VTV+lmuNk5Mny5K76qxAwJ/C+IDPXfRa3M50hqY+bAtTyr2SzhkGcuYMXDhpxwTW
vGzOW/b3aJzcJRVIiKHpqfiYnODz1TEoYRFsZ5aNOZnLwkUkOQIDAQABo0IwQDAPBgNVHRMBAf8E
BTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUrWyqlGCc7eT/+j4KdCtjA/e2Wb8wDQYJ
KoZIhvcNAQELBQADggEBABpA2JVlrAmSicY59BDlqQ5mU1143vokkbvnRFHfxhY0Cu9qRFHqKweK
A3rD6z8KLFIWoCtDuSWQP3CpMyVtRRooOyfPqsMpQhvfO0zAMzRbQYi/aytlryjvsvXDqmbOe1bu
t8jLZ8HJnBoYuMTDSQPxYA5QzUbF83d597YV4Djbxy8ooAw/dyZ02SUS2jHaGh7cKUGRIjxpp7sC
8rZcJwOJ9Abqm+RyguOhCcHpABnTPtRwa7pxpqpYrvS76Wy274fMm7v/OeZWYdMKp8RcTGB7BXcm
er/YB1IsYvdwY9k5vG8cwnncdimvzsUsZAReiDZuMdRAGmI0Nj81Aa6sY6A=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="6789af56.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIE9DCCA9ygAwIBAgIUZHSqvGZlJHZC8+3ReV0NyT2m5+kwDQYJKoZIhvcNAQEL
BQAwTTELMAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxIzAh
BgNVBAMTGlF1b1ZhZGlzIEdsb2JhbCBTU0wgSUNBIEcyMB4XDTE1MDYwMjIzNDQ1
MFoXDTE2MDYwMjIzNDQzOVowgYExCzAJBgNVBAYTAkFVMQwwCgYDVQQIEwNOU1cx
FTATBgNVBAcTDEVhc3QgTGlzbW9yZTEiMCAGA1UEChMZU291dGhlcm4gQ3Jvc3Mg
VW5pdmVyc2l0eTENMAsGA1UECxMESVRUUzEaMBgGA1UEAxMRaWRwZGV2LnNjdS5l
ZHUuYXUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDRlYgqHmZGDWsu
111r6CaubxRYip3p/iXPDk7UCZ7wVCs1V3QJIjEcrO2hubAUE2fG/wWdB/Usc79/
PackVCkQznriRBNY9LvUHLC+9jnyB4vdWdqFBkR58MQn7nxgx/fhLx4KjmSYJsUe
4z+rc7Epnqbw0nJyyDrtGO8/8vkoKGUwPvkvVOSrvYnGCUGpzKaCDnGSU9n8h813
vggil2dxvOUUG1/3OV1uzyHfpe7sm6kDnqyj9XvxlqM9IF79QAnohg/qwOs5aFjz
610luLY+nsk5jIx2X1f778FjmULASA0/mbOrvVDJtZfjCtIzlh85XN0yLIwxKLXd
5NbNTIT7AgMBAAGjggGVMIIBkTBzBggrBgEFBQcBAQRnMGUwKgYIKwYBBQUHMAGG
Hmh0dHA6Ly9vY3NwLnF1b3ZhZGlzZ2xvYmFsLmNvbTA3BggrBgEFBQcwAoYraHR0
cDovL3RydXN0LnF1b3ZhZGlzZ2xvYmFsLmNvbS9xdnNzbGcyLmNydDAcBgNVHREE
FTATghFpZHBkZXYuc2N1LmVkdS5hdTBRBgNVHSAESjBIMEYGDCsGAQQBvlgAAmQB
ATA2MDQGCCsGAQUFBwIBFihodHRwOi8vd3d3LnF1b3ZhZGlzZ2xvYmFsLmNvbS9y
ZXBvc2l0b3J5MA4GA1UdDwEB/wQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAQYI
KwYBBQUHAwIwHwYDVR0jBBgwFoAUkRlirVsXpzD78N45JbG9jLm4UScwOgYDVR0f
BDMwMTAvoC2gK4YpaHR0cDovL2NybC5xdW92YWRpc2dsb2JhbC5jb20vcXZzc2xn
Mi5jcmwwHQYDVR0OBBYEFGpJCtYXQxPZCmszuaNMkiStJD2wMA0GCSqGSIb3DQEB
CwUAA4IBAQBrw85LcmYC+tsbob448QiJHZ6lxYpWADic5TMPTolWTgMBq7MSyZBp
sjW0uYQT31+bF7Yo43L8zP4xcck0/Fedx+BQBXBG7tJ2LyVn/37ibasOe3HGSGc3
cnh7u/KTyf7nU3ar/sbczApGmgntXAzqSSDqoMbgdJ/0t83cZTB5NKo2bjtn1L7W
azPqnW39ZUW1J5dpvvF4n8xNMYsOfYNI9EKN/Y+wMMojq+yiRDoSQb5RqoHBC+eX
F7V4TlXph1hAoL94aFywEllXdORNHKw6ROw5BvhnFKMnrfer9PSoWPaw93KW7pn/
15iDxQpXGWHh7n+PDGIBe/0Isrf16U9i
-----END CERTIFICATE-----

              ]]></file>
              <file Name="69105f4f.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDtzCCAp+gAwIBAgIQDOfg5RfYRv6P5WD8G/AwOTANBgkqhkiG9w0BAQUFADBlMQswCQYDVQQG
EwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSQw
IgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgQ0EwHhcNMDYxMTEwMDAwMDAwWhcNMzEx
MTEwMDAwMDAwWjBlMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQL
ExB3d3cuZGlnaWNlcnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgQ0Ew
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCtDhXO5EOAXLGH87dg+XESpa7cJpSIqvTO
9SA5KFhgDPiA2qkVlTJhPLWxKISKityfCgyDF3qPkKyK53lTXDGEKvYPmDI2dsze3Tyoou9q+yHy
UmHfnyDXH+Kx2f4YZNISW1/5WBg1vEfNoTb5a3/UsDg+wRvDjDPZ2C8Y/igPs6eD1sNuRMBhNZYW
/lmci3Zt1/GiSw0r/wty2p5g0I6QNcZ4VYcgoc/lbQrISXwxmDNsIumH0DJaoroTghHtORedmTpy
oeb6pNnVFzF1roV9Iq4/AUaG9ih5yLHa5FcXxH4cDrC0kqZWs72yl+2qp/C3xag/lRbQ/6GW6whf
GHdPAgMBAAGjYzBhMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRF
66Kv9JLLgjEtUYunpyGd823IDzAfBgNVHSMEGDAWgBRF66Kv9JLLgjEtUYunpyGd823IDzANBgkq
hkiG9w0BAQUFAAOCAQEAog683+Lt8ONyc3pklL/3cmbYMuRCdWKuh+vy1dneVrOfzM4UKLkNl2Bc
EkxY5NM9g0lFWJc1aRqoR+pWxnmrEthngYTffwk8lOa4JiwgvT2zKIn3X/8i4peEH+ll74fg38Fn
SbNd67IJKusm7Xi+fT8r87cmNW1fiQG2SVufAQWbqz0lwcy2f8Lxb4bG+mRo64EtlOtCt/qMHt1i
8b5QZ7dsvfPxH2sMNgcWfzd8qVttevESRmCD1ycEvkvOl77DZypoEd+A5wwzZr8TDRRu838fYxAe
+o0bJW1sj6W3YQGx0qMmoRBxna3iw/nDmVG3KwcIzi7mULKn+gpFL6Lw8g==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="6c55cf77.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDojCCAwugAwIBAgIQLpaev7ZibOx76XPM42zBhDANBgkqhkiG9w0BAQUFADBf
MQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xNzA1BgNVBAsT
LkNsYXNzIDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkw
HhcNMDAwODA0MDAwMDAwWhcNMDQwODAzMjM1OTU5WjCBpzEXMBUGA1UEChMOVmVy
aVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdvcmsxOzA5
BgNVBAsTMlRlcm1zIG9mIHVzZSBhdCBodHRwczovL3d3dy52ZXJpc2lnbi5jb20v
UlBBIChjKTAwMS4wLAYDVQQDEyVDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IE9DU1Ag
UmVzcG9uZGVyMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDx5AgOg7t140jl
uNum8Lmr6Txix141W9ACVBHYydFWuXZLuat65s269gwE1n7WsAplrE454/H3LaMl
Oe+wi8++2wxdbnD0B81w9zrAPjUW7XiMQ8/CJi5H1oZ9nPG+1mcMIiWkymXmH3p4
KC8/BdsEIb/hRWb+PLeC7Vq4FhW5VQIDAQABo4IBFDCCARAwIAYDVR0RBBkwF6QV
MBMxETAPBgNVBAMTCE9DU1AgMS0zMDUGA1UdHwQuMCwwKqAooCaGJGh0dHA6Ly9j
cmwudmVyaXNpZ24uY29tL3BjYTMuMS4xLmNybDATBgNVHSUEDDAKBggrBgEFBQcD
CTBCBggrBgEFBQcBAQQ2MDQwMgYIKwYBBQUHMAGmJhYkaHR0cDovL29jc3AudmVy
aXNpZ24uY29tL29jc3Avc3RhdHVzMEQGA1UdIAQ9MDswOQYLYIZIAYb4RQEHAQEw
KjAoBggrBgEFBQcCARYcaHR0cHM6Ly93d3cudmVyaXNpZ24uY29tL1JQQTAJBgNV
HRMEAjAAMAsGA1UdDwQEAwIHgDANBgkqhkiG9w0BAQUFAAOBgQAC9lNjwKke8tCL
MzCPSJtMsFa0g3FKvtxQ2PW24AvbvXhP6c8JNNopSZ0Bc1qRkYJULBMK03cjzzf8
Y96n4/a3tWlFKEnDkdyqRxypiJksBSqNjYr6YuJatwAgXTnEKMLL/J6oia5bPY4S
6jKy/OsU1wkVGsDNG9W1FU5B1ZbjTg==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="6e8bf996.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDDDCCAfSgAwIBAgIDAQAgMA0GCSqGSIb3DQEBBQUAMD4xCzAJBgNVBAYTAlBMMRswGQYDVQQK
ExJVbml6ZXRvIFNwLiB6IG8uby4xEjAQBgNVBAMTCUNlcnR1bSBDQTAeFw0wMjA2MTExMDQ2Mzla
Fw0yNzA2MTExMDQ2MzlaMD4xCzAJBgNVBAYTAlBMMRswGQYDVQQKExJVbml6ZXRvIFNwLiB6IG8u
by4xEjAQBgNVBAMTCUNlcnR1bSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM6x
wS7TT3zNJc4YPk/EjG+AanPIW1H4m9LcuwBcsaD8dQPugfCI7iNS6eYVM42sLQnFdvkrOYCJ5JdL
kKWoePhzQ3ukYbDYWMzhbGZ+nPMJXlVjhNWo7/OxLjBos8Q82KxujZlakE403Daaj4GIULdtlkIJ
89eVgw1BS7Bqa/j8D35in2fE7SZfECYPCE/wpFcozo+47UX2bu4lXapuOb7kky/ZR6By6/qmW6/K
Uz/iDsaWVhFu9+lmqSbYf5VT7QqFiLpPKaVCjF62/IUgAKpoC6EahQGcxEZjgoi2IrHu/qpGWX7P
NSzVttpd90gzFFS269lvzs2I1qsb2pY7HVkCAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zANBgkq
hkiG9w0BAQUFAAOCAQEAuI3O7+cUus/usESSbLQ5PqKEbq24IXfS1HeCh+YgQYHu4vgRt2PRFze+
GXYkHAQaTOs9qmdvLdTN/mUxcMUbpgIKumB7bVjCmkn+YzILa+M6wKyrO7Do0wlRjBCDxjTgxSvg
GrZgFCdsMneMvLJymM/NzD+5yCRCFNZX/OYmQ6kd5YCQzgNUKD73P9P4Te1qCjqTE5s7FCMTY5w/
0YcneeVMUeMBrYVdGjux1XMQpNPyvG5k9VpWkKjHDkx0Dy5xO/fIR/RpbxXyEV6DHpx8Uq79AtoS
qFlnGNu8cN2bsWntgM6JQEhqDjXKKWYVIZQs6GAqm4VKQPNriiTsBhYscw==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="6fcc125d.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDojCCAoqgAwIBAgIQE4Y1TR0/BvLB+WUF1ZAcYjANBgkqhkiG9w0BAQUFADBrMQswCQYDVQQG
EwJVUzENMAsGA1UEChMEVklTQTEvMC0GA1UECxMmVmlzYSBJbnRlcm5hdGlvbmFsIFNlcnZpY2Ug
QXNzb2NpYXRpb24xHDAaBgNVBAMTE1Zpc2EgZUNvbW1lcmNlIFJvb3QwHhcNMDIwNjI2MDIxODM2
WhcNMjIwNjI0MDAxNjEyWjBrMQswCQYDVQQGEwJVUzENMAsGA1UEChMEVklTQTEvMC0GA1UECxMm
VmlzYSBJbnRlcm5hdGlvbmFsIFNlcnZpY2UgQXNzb2NpYXRpb24xHDAaBgNVBAMTE1Zpc2EgZUNv
bW1lcmNlIFJvb3QwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvV95WHm6h2mCxlCfL
F9sHP4CFT8icttD0b0/Pmdjh28JIXDqsOTPHH2qLJj0rNfVIsZHBAk4ElpF7sDPwsRROEW+1QK8b
RaVK7362rPKgH1g/EkZgPI2h4H3PVz4zHvtH8aoVlwdVZqW1LS7YgFmypw23RuwhY/81q6UCzyr0
TP579ZRdhE2o8mCP2w4lPJ9zcc+U30rq299yOIzzlr3xF7zSujtFWsan9sYXiwGd/BmoKoMWuDpI
/k4+oKsGGelT84ATB+0tvz8KPFUgOSwsAGl0lUq8ILKpeeUYiZGo3BxN77t+Nwtd/jmliFKMAGzs
GHxBvfaLdXe6YJ2E5/4tAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEG
MB0GA1UdDgQWBBQVOIMPPyw/cDMezUb+B4wg4NfDtzANBgkqhkiG9w0BAQUFAAOCAQEAX/FBfXxc
CLkr4NWSR/pnXKUTwwMhmytMiUbPWU3J/qVAtmPN3XEolWcRzCSs00Rsca4BIGsDoo8Ytyk6feUW
YFN4PMCvFYP3j1IzJL1kk5fui/fbGKhtcbP3LBfQdCVp9/5rPJS+TUtBjE7ic9DjkCJzQ83z7+pz
zkWKsKZJ/0x9nXGIxHYdkFsd7v3M9+79YKWxehZx0RbQfBI8bGmX265fOZpwLwU8GUYEmSA20GBu
YQa7FkKMcPcw++DbZqMAAb3mLNqRX6BGi01qnD093QVG/na/oAo85ADmJ7f/hC3euiInlhBx6yLt
398znM/jra6O1I7mT1GvFpLgXPYHDw==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="709afd2b.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDLTCCApagAwIBAgIBADANBgkqhkiG9w0BAQQFADCB0TELMAkGA1UEBhMCWkEx
FTATBgNVBAgTDFdlc3Rlcm4gQ2FwZTESMBAGA1UEBxMJQ2FwZSBUb3duMRowGAYD
VQQKExFUaGF3dGUgQ29uc3VsdGluZzEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBT
ZXJ2aWNlcyBEaXZpc2lvbjEkMCIGA1UEAxMbVGhhd3RlIFBlcnNvbmFsIEZyZWVt
YWlsIENBMSswKQYJKoZIhvcNAQkBFhxwZXJzb25hbC1mcmVlbWFpbEB0aGF3dGUu
Y29tMB4XDTk2MDEwMTAwMDAwMFoXDTIwMTIzMTIzNTk1OVowgdExCzAJBgNVBAYT
AlpBMRUwEwYDVQQIEwxXZXN0ZXJuIENhcGUxEjAQBgNVBAcTCUNhcGUgVG93bjEa
MBgGA1UEChMRVGhhd3RlIENvbnN1bHRpbmcxKDAmBgNVBAsTH0NlcnRpZmljYXRp
b24gU2VydmljZXMgRGl2aXNpb24xJDAiBgNVBAMTG1RoYXd0ZSBQZXJzb25hbCBG
cmVlbWFpbCBDQTErMCkGCSqGSIb3DQEJARYccGVyc29uYWwtZnJlZW1haWxAdGhh
d3RlLmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA1GnX1LCUZFtx6UfY
DFG26nKRsIRefS0Nj3sS34UldSh0OkIsYyeflXtL734Zhx2G6qPduc6WZBrCFG5E
rHzmj+hND3EfQDimAKOHePb5lIZererAXnbr2RSjXW56fAylS1V/Bhkpf56aJtVq
uzgkCGqYx7Hao5iR/Xnb5VrEHLkCAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zAN
BgkqhkiG9w0BAQQFAAOBgQDH7JJ+Tvj1lqVnYiqk8E0RYNBvjWBYYawmu1I1XAjP
MPuoSpaKH2JCI4wXD/S6ZJwXrEcp352YXtJsYHFcoqzceePnbgBHH7UNKOgCneSa
/RP0ptl8sfjcXyMmCZGAc9AUG95DqYMl8uacLxXK/qarigd1iwzdUYRr5PjRznei
gQ==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="72bf6a04.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIH9zCCB2CgAwIBAgIBADANBgkqhkiG9w0BAQUFADCCARQxCzAJBgNVBAYTAkVT
MRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UE
ChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjErMCkGA1UE
ChQiaXBzQG1haWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEvMC0GA1UECxMm
SVBTIENBIENMQVNFQTMgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxLzAtBgNVBAMT
JklQUyBDQSBDTEFTRUEzIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MR4wHAYJKoZI
hvcNAQkBFg9pcHNAbWFpbC5pcHMuZXMwHhcNMDExMjI5MDEwNzUwWhcNMjUxMjI3
MDEwNzUwWjCCARQxCzAJBgNVBAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQ
BgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UEChMlSVBTIEludGVybmV0IHB1Ymxpc2hp
bmcgU2VydmljZXMgcy5sLjErMCkGA1UEChQiaXBzQG1haWwuaXBzLmVzIEMuSS5G
LiAgQi02MDkyOTQ1MjEvMC0GA1UECxMmSVBTIENBIENMQVNFQTMgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkxLzAtBgNVBAMTJklQUyBDQSBDTEFTRUEzIENlcnRpZmlj
YXRpb24gQXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXMw
gZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAO6AAPYaZC6tasiDsYun7o/ZttvN
G7uGBiJ2MwwSbUhWYdLcgiViL5/SaTBlA0IjWLxH3GvWdV0XPOH/8lhneaDBgbHU
VqLyjRGZ/fZ98cfEXgIqmuJKtROKAP2Md4bm15T1IHUuDky/dMQ/gT6DtKM4Ninn
6Cr1jIhBqoCm42zvAgMBAAGjggRTMIIETzAdBgNVHQ4EFgQUHp9XUEe2YZM50yz8
2l09BXW3mQIwggFGBgNVHSMEggE9MIIBOYAUHp9XUEe2YZM50yz82l09BXW3mQKh
ggEcpIIBGDCCARQxCzAJBgNVBAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQ
BgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UEChMlSVBTIEludGVybmV0IHB1Ymxpc2hp
bmcgU2VydmljZXMgcy5sLjErMCkGA1UEChQiaXBzQG1haWwuaXBzLmVzIEMuSS5G
LiAgQi02MDkyOTQ1MjEvMC0GA1UECxMmSVBTIENBIENMQVNFQTMgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkxLzAtBgNVBAMTJklQUyBDQSBDTEFTRUEzIENlcnRpZmlj
YXRpb24gQXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXOC
AQAwDAYDVR0TBAUwAwEB/zAMBgNVHQ8EBQMDB/+AMGsGA1UdJQRkMGIGCCsGAQUF
BwMBBggrBgEFBQcDAgYIKwYBBQUHAwMGCCsGAQUFBwMEBggrBgEFBQcDCAYKKwYB
BAGCNwIBFQYKKwYBBAGCNwIBFgYKKwYBBAGCNwoDAQYKKwYBBAGCNwoDBDARBglg
hkgBhvhCAQEEBAMCAAcwGgYDVR0RBBMwEYEPaXBzQG1haWwuaXBzLmVzMBoGA1Ud
EgQTMBGBD2lwc0BtYWlsLmlwcy5lczBCBglghkgBhvhCAQ0ENRYzQ0xBU0VBMyBD
QSBDZXJ0aWZpY2F0ZSBpc3N1ZWQgYnkgaHR0cDovL3d3dy5pcHMuZXMvMCkGCWCG
SAGG+EIBAgQcFhpodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyLzA7BglghkgBhvhC
AQQELhYsaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9pcHMyMDAyQ0xBU0VBMy5j
cmwwQAYJYIZIAYb4QgEDBDMWMWh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcmV2
b2NhdGlvbkNMQVNFQTMuaHRtbD8wPQYJYIZIAYb4QgEHBDAWLmh0dHA6Ly93d3cu
aXBzLmVzL2lwczIwMDIvcmVuZXdhbENMQVNFQTMuaHRtbD8wOwYJYIZIAYb4QgEI
BC4WLGh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcG9saWN5Q0xBU0VBMy5odG1s
MHUGA1UdHwRuMGwwMqAwoC6GLGh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvaXBz
MjAwMkNMQVNFQTMuY3JsMDagNKAyhjBodHRwOi8vd3d3YmFjay5pcHMuZXMvaXBz
MjAwMi9pcHMyMDAyQ0xBU0VBMy5jcmwwLwYIKwYBBQUHAQEEIzAhMB8GCCsGAQUF
BzABhhNodHRwOi8vb2NzcC5pcHMuZXMvMA0GCSqGSIb3DQEBBQUAA4GBAEo9IEca
2on0eisxeewBwMwB9dbB/MjD81ACUZBYKp/nNQlbMAqBACVHr9QPDp5gJqiVp4MI
3y2s6Q73nMify5NF8bpqxmdRSmlPa/59Cy9SKcJQrSRE7SOzSMtEQMEDlQwKeAYS
AfWRMS1Jjbs/RU4s4OjNtckUFQzjB4ObJnXv
-----END CERTIFICATE-----

              ]]></file>
              <file Name="72f369af.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDUzCCAjugAwIBAgIBATANBgkqhkiG9w0BAQUFADBLMQswCQYDVQQGEwJOTzEdMBsGA1UECgwU
QnV5cGFzcyBBUy05ODMxNjMzMjcxHTAbBgNVBAMMFEJ1eXBhc3MgQ2xhc3MgMiBDQSAxMB4XDTA2
MTAxMzEwMjUwOVoXDTE2MTAxMzEwMjUwOVowSzELMAkGA1UEBhMCTk8xHTAbBgNVBAoMFEJ1eXBh
c3MgQVMtOTgzMTYzMzI3MR0wGwYDVQQDDBRCdXlwYXNzIENsYXNzIDIgQ0EgMTCCASIwDQYJKoZI
hvcNAQEBBQADggEPADCCAQoCggEBAIs8B0XY9t/mx8q6jUPFR42wWsE425KEHK8T1A9vNkYgxC7M
cXA0ojTTNy7Y3Tp3L8DrKehc0rWpkTSHIln+zNvnma+WwajHQN2lFYxuyHyXA8vmIPLXl18xoS83
0r7uvqmtqEyeIWZDO6i88wmjONVZJMHCR3axiFyCO7srpgTXjAePzdVBHfCuuCkslFJgNJQ72uA4
0Z0zPhX0kzLFANq1KWYOOngPIVJfAuWSeyXTkh4vFZ2B5J2O6O+JzhRMVB0cgRJNcKi+EAUXfh/R
uFdV7c27UsKwHnjCTTZoy1YmwVLBvXb3WNVyfh9EdrsAiR0WnVE1703CVu9r4Iw7DekCAwEAAaNC
MEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUP42aWYv8e3uco684sDntkHGA1sgwDgYDVR0P
AQH/BAQDAgEGMA0GCSqGSIb3DQEBBQUAA4IBAQAVGn4TirnoB6NLJzKyQJHyIdFkhb5jatLPgcIV
1Xp+DCmsNx4cfHZSldq1fyOhKXdlyTKdqC5Wq2B2zha0jX94wNWZUYN/Xtm+DKhQ7SLHrQVMdvvt
7h5HZPb3J31cKA9FxVxiXqaakZG3Uxcu3K1gnZZkOb1naLKuBctN518fV4bVIJwo+28TOPX2EZL2
fZleHwzoq0QkKXJAPTZSr4xYkHPB7GEseaHsh7U/2k3ZIQAw3pDaDtMaSKk+hQsUi4y8QZ5q9w5w
wDX3OaJdZtB7WZ+oRxKaJyOkLY4ng5IgodcVf/EuGO70SH8vf/GhGLWhC5SgYiAynB321O+/TIho
-----END CERTIFICATE-----

              ]]></file>
              <file Name="72fa7371.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDAjCCAmsCEH3Z/gfPqB63EHln+6eJNMYwDQYJKoZIhvcNAQEFBQAwgcExCzAJBgNVBAYTAlVT
MRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgMyBQdWJsaWMgUHJpbWFy
eSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcyMTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2ln
biwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVz
dCBOZXR3b3JrMB4XDTk4MDUxODAwMDAwMFoXDTI4MDgwMTIzNTk1OVowgcExCzAJBgNVBAYTAlVT
MRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgMyBQdWJsaWMgUHJpbWFy
eSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcyMTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2ln
biwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVz
dCBOZXR3b3JrMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMXtERXVxp0KvTuWpMmR9ZmDCO
FoUgRm1HP9SFIIThbbP4pO0M8RcPO/mn+SXXwc+EY/J8Y8+iR/LGWzOOZEAEaMGAuWQcRXfH2G71
lSk8UOg013gfqLptQ5GVj0VXXn7F+8qkBOvqlzdUMG+7AUcyM83cV5tkaWH4mx0ciU9cZwIDAQAB
MA0GCSqGSIb3DQEBBQUAA4GBAFFNzb5cy5gZnBWyATl4Lk0PZ3BwmcYQWpSkU01UbSuvDV1Ai2TT
1+7eVmGSX6bEHRBhNtMsJzzoKQm5EWR0zLVznxxIqbxhAe7iF6YM40AIOw7n60RzKprxaZLvcRTD
Oaxxp5EJb+RxBrO6WVcmeQD2+A2iMzAo1KpYoJ2daZH9
-----END CERTIFICATE-----

              ]]></file>
              <file Name="74c26bd0.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIICkDCCAfmgAwIBAgIBATANBgkqhkiG9w0BAQQFADBaMQswCQYDVQQGEwJVUzEcMBoGA1UEChMT
RXF1aWZheCBTZWN1cmUgSW5jLjEtMCsGA1UEAxMkRXF1aWZheCBTZWN1cmUgR2xvYmFsIGVCdXNp
bmVzcyBDQS0xMB4XDTk5MDYyMTA0MDAwMFoXDTIwMDYyMTA0MDAwMFowWjELMAkGA1UEBhMCVVMx
HDAaBgNVBAoTE0VxdWlmYXggU2VjdXJlIEluYy4xLTArBgNVBAMTJEVxdWlmYXggU2VjdXJlIEds
b2JhbCBlQnVzaW5lc3MgQ0EtMTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAuucXkAJlsTRV
PEnCUdXfp9E3j9HngXNBUmCbnaEXJnitx7HoJpQytd4zjTov2/KaelpzmKNc6fuKcxtc58O/gGzN
qfTWK8D3+ZmqY6KxRwIP1ORROhI8bIpaVIRw28HFkM9yRcuoWcDNM50/o5brhTMhHD4ePmBudpxn
hcXIw2ECAwEAAaNmMGQwEQYJYIZIAYb4QgEBBAQDAgAHMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0j
BBgwFoAUvqigdHJQa0S3ySPY+6j/s1draGwwHQYDVR0OBBYEFL6ooHRyUGtEt8kj2Puo/7NXa2hs
MA0GCSqGSIb3DQEBBAUAA4GBADDiAVGqx+pf2rnQZQ8w1j7aDRRJbpGTJxQx78T3LUX47Me/okEN
I7SS+RkAZ70Br83gcfxaz2TE4JaY0KNA4gGK7ycH8WUBikQtBmV1UsCGECAhX2xrD2yuCRyv8qIY
NMR1pHMc8Y3c7635s3a0kr/clRAevsvIO1qEYBlWlKlV
-----END CERTIFICATE-----

              ]]></file>
              <file Name="755f7420.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDIDCCAgigAwIBAgIBJDANBgkqhkiG9w0BAQUFADA5MQswCQYDVQQGEwJGSTEP
MA0GA1UEChMGU29uZXJhMRkwFwYDVQQDExBTb25lcmEgQ2xhc3MxIENBMB4XDTAx
MDQwNjEwNDkxM1oXDTIxMDQwNjEwNDkxM1owOTELMAkGA1UEBhMCRkkxDzANBgNV
BAoTBlNvbmVyYTEZMBcGA1UEAxMQU29uZXJhIENsYXNzMSBDQTCCASIwDQYJKoZI
hvcNAQEBBQADggEPADCCAQoCggEBALWJHytPZwp5/8Ue+H887dF+2rDNbS82rDTG
29lkFwhjMDMiikzujrsPDUJVyZ0upe/3p4zDq7mXy47vPxVnqIJyY1MPQYx9EJUk
oVqlBvqSV536pQHydekfvFYmUk54GWVYVQNYwBSujHxVX3BbdyMGNpfzJLWaRpXk
3w0LBUXl0fIdgrvGE+D+qnr9aTCU89JFhfzyMlsy3uhsXR/LpCJ0sICOXZT3BgBL
qdReLjVQCfOAl/QMF6452F/NM8EcyonCIvdFEu1eEpOdY6uCLrnrQkFEy0oaAIIN
nvmLVz5MxxftLItyM19yejhW1ebZrgUaHXVFsculJRwSVzb9IjcCAwEAAaMzMDEw
DwYDVR0TAQH/BAUwAwEB/zARBgNVHQ4ECgQIR+IMi/ZTiFIwCwYDVR0PBAQDAgEG
MA0GCSqGSIb3DQEBBQUAA4IBAQCLGrLJXWG04bkruVPRsoWdd44W7hE928Jj2VuX
ZfsSZ9gqXLar5V7DtxYvyOirHYr9qxp81V9jz9yw3Xe5qObSIjiHBxTZ/75Wtf0H
DjxVyhbMp6Z3N/vbXB9OWQaHowND9Rart4S9Tu+fMTfwRvFAttEMpWT4Y14h21VO
TzF2nBBhjrZTOqMRvq9tfB69ri3iDGnHhVNoomG6xT60eVR4ngrHAr5i0RGCS2Uv
kVrCqIexVmiUefkl98HVrhq4uz2PqYo4Ffdz0Fpg0YCw8NzVUM1O7pJIae2yIx4w
zMiUyLb1O4Z/P6Yun/Y+LLWSlj7fLJOK/4GMDw9ZIRlXvVWa
-----END CERTIFICATE-----

              ]]></file>
              <file Name="75680d2e.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEMjCCAxqgAwIBAgIBATANBgkqhkiG9w0BAQUFADB7MQswCQYDVQQGEwJHQjEbMBkGA1UECAwS
R3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRowGAYDVQQKDBFDb21vZG8gQ0Eg
TGltaXRlZDEhMB8GA1UEAwwYQUFBIENlcnRpZmljYXRlIFNlcnZpY2VzMB4XDTA0MDEwMTAwMDAw
MFoXDTI4MTIzMTIzNTk1OVowezELMAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hl
c3RlcjEQMA4GA1UEBwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxITAfBgNV
BAMMGEFBQSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
ggEBAL5AnfRu4ep2hxxNRUSOvkbIgwadwSr+GB+O5AL686tdUIoWMQuaBtDFcCLNSS1UY8y2bmhG
C1Pqy0wkwLxyTurxFa70VJoSCsN6sjNg4tqJVfMiWPPe3M/vg4aijJRPn2jymJBGhCfHdr/jzDUs
i14HZGWCwEiwqJH5YZ92IFCokcdmtet4YgNW8IoaE+oxox6gmf049vYnMlhvB/VruPsUK6+3qszW
Y19zjNoFmag4qMsXeDZRrOme9Hg6jc8P2ULimAyrL58OAd7vn5lJ8S3frHRNG5i1R8XlKdH5kBjH
Ypy+g8cmez6KJcfA3Z3mNWgQIJ2P2N7Sw4ScDV7oL8kCAwEAAaOBwDCBvTAdBgNVHQ4EFgQUoBEK
Iz6W8Qfs4q8p74Klf9AwpLQwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wewYDVR0f
BHQwcjA4oDagNIYyaHR0cDovL2NybC5jb21vZG9jYS5jb20vQUFBQ2VydGlmaWNhdGVTZXJ2aWNl
cy5jcmwwNqA0oDKGMGh0dHA6Ly9jcmwuY29tb2RvLm5ldC9BQUFDZXJ0aWZpY2F0ZVNlcnZpY2Vz
LmNybDANBgkqhkiG9w0BAQUFAAOCAQEACFb8AvCb6P+k+tZ7xkSAzk/ExfYAWMymtrwUSWgEdujm
7l3sAg9g1o1QGE8mTgHj5rCl7r+8dFRBv/38ErjHT1r0iWAFf2C3BUrz9vHCv8S5dIa2LX1rzNLz
Rt0vxuBqw8M0Ayx9lt1awg6nCpnBBYurDC/zXDrPbDdVCYfeU0BsWO/8tqtlbgT2G9w84FoVxp7Z
8VlIMCFlA2zs6SFz7JsDoeA3raAVGI/6ugLOpyypEBMs1OUIJqsil2D4kF501KKaU73yqWjgom7C
12yxow+ev+to51byrvLjKzg6CYG1a4XXvi3tPxq3smPi9WIsgtRqAEFQ8TmDn5XpNpaYbg==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="7651b327.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIICPDCCAaUCEDyRMcsf9tAbDpq40ES/Er4wDQYJKoZIhvcNAQEFBQAwXzELMAkG
A1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMTcwNQYDVQQLEy5DbGFz
cyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTk2
MDEyOTAwMDAwMFoXDTI4MDgwMjIzNTk1OVowXzELMAkGA1UEBhMCVVMxFzAVBgNV
BAoTDlZlcmlTaWduLCBJbmMuMTcwNQYDVQQLEy5DbGFzcyAzIFB1YmxpYyBQcmlt
YXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIGfMA0GCSqGSIb3DQEBAQUAA4GN
ADCBiQKBgQDJXFme8huKARS0EN8EQNvjV69qRUCPhAwL0TPZ2RHP7gJYHyX3KqhE
BarsAx94f56TuZoAqiN91qyFomNFx3InzPRMxnVx0jnvT0Lwdd8KkMaOIG+YD/is
I19wKTakyYbnsZogy1Olhec9vn2a/iRFM9x2Fe0PonFkTGUugWhFpwIDAQABMA0G
CSqGSIb3DQEBBQUAA4GBABByUqkFFBkyCEHwxWsKzH4PIRnN5GfcX6kb5sroc50i
2JhucwNhkcV8sEVAbkSdjbCxlnRhLQ2pRdKkkirWmnWXbj9T/UWZYB2oK0z5XqcJ
2HUw19JlYD1n1khVdWk/kfVIC0dpImmClr7JyDiGSnoscxlIaU5rfGW/D/xwzoiQ
-----END CERTIFICATE-----

              ]]></file>
              <file Name="76579174.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEMDCCAxigAwIBAgIQUJRs7Bjq1ZxN1ZfvdY+grTANBgkqhkiG9w0BAQUFADCBgjELMAkGA1UE
BhMCVVMxHjAcBgNVBAsTFXd3dy54cmFtcHNlY3VyaXR5LmNvbTEkMCIGA1UEChMbWFJhbXAgU2Vj
dXJpdHkgU2VydmljZXMgSW5jMS0wKwYDVQQDEyRYUmFtcCBHbG9iYWwgQ2VydGlmaWNhdGlvbiBB
dXRob3JpdHkwHhcNMDQxMTAxMTcxNDA0WhcNMzUwMTAxMDUzNzE5WjCBgjELMAkGA1UEBhMCVVMx
HjAcBgNVBAsTFXd3dy54cmFtcHNlY3VyaXR5LmNvbTEkMCIGA1UEChMbWFJhbXAgU2VjdXJpdHkg
U2VydmljZXMgSW5jMS0wKwYDVQQDEyRYUmFtcCBHbG9iYWwgQ2VydGlmaWNhdGlvbiBBdXRob3Jp
dHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCYJB69FbS638eMpSe2OAtp87ZOqCwu
IR1cRN8hXX4jdP5efrRKt6atH67gBhbim1vZZ3RrXYCPKZ2GG9mcDZhtdhAoWORlsH9KmHmf4MMx
foArtYzAQDsRhtDLooY2YKTVMIJt2W7QDxIEM5dfT2Fa8OT5kavnHTu86M/0ay00fOJIYRyO82FE
zG+gSqmUsE3a56k0enI4qEHMPJQRfevIpoy3hsvKMzvZPTeL+3o+hiznc9cKV6xkmxnr9A8ECIqs
AxcZZPRaJSKNNCyy9mgdEm3Tih4U2sSPpuIjhdV6Db1q4Ons7Be7QhtnqiXtRYMh/MHJfNViPvry
xS3T/dRlAgMBAAGjgZ8wgZwwEwYJKwYBBAGCNxQCBAYeBABDAEEwCwYDVR0PBAQDAgGGMA8GA1Ud
EwEB/wQFMAMBAf8wHQYDVR0OBBYEFMZPoj0GY4QJnM5i5ASsjVy16bYbMDYGA1UdHwQvMC0wK6Ap
oCeGJWh0dHA6Ly9jcmwueHJhbXBzZWN1cml0eS5jb20vWEdDQS5jcmwwEAYJKwYBBAGCNxUBBAMC
AQEwDQYJKoZIhvcNAQEFBQADggEBAJEVOQMBG2f7Shz5CmBbodpNl2L5JFMn14JkTpAuw0kbK5rc
/Kh4ZzXxHfARvbdI4xD2Dd8/0sm2qlWkSLoC295ZLhVbO50WfUfXN+pfTXYSNrsf16GBBEYgoyxt
qZ4Bfj8pzgCT3/3JknOJiWSe5yvkHJEs0rnOfc5vMZnT5r7SHpDwCRR5XCOrTdLaIR9NmXmd4c8n
nxCbHIgNsIpkQTG4DmyQJKSbXHGPurt+HBvbaoAPIbzp26a3QPSyi6mx5O+aGtA9aZnuqCij4Tyz
8LIRnM98QObd50N9otg6tamN8jSZxNQQ4Qb9CYQQO+7ETPTsJ3xCwnR8gooJybQDJbw=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="7672ac4b.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFnDCCA4SgAwIBAgIBATANBgkqhkiG9w0BAQUFADBjMQswCQYDVQQGEwJGUjETMBEGA1UEChMK
Q2VydGlub21pczEXMBUGA1UECxMOMDAwMiA0MzM5OTg5MDMxJjAkBgNVBAMMHUNlcnRpbm9taXMg
LSBBdXRvcml0w6kgUmFjaW5lMB4XDTA4MDkxNzA4Mjg1OVoXDTI4MDkxNzA4Mjg1OVowYzELMAkG
A1UEBhMCRlIxEzARBgNVBAoTCkNlcnRpbm9taXMxFzAVBgNVBAsTDjAwMDIgNDMzOTk4OTAzMSYw
JAYDVQQDDB1DZXJ0aW5vbWlzIC0gQXV0b3JpdMOpIFJhY2luZTCCAiIwDQYJKoZIhvcNAQEBBQAD
ggIPADCCAgoCggIBAJ2Fn4bT46/HsmtuM+Cet0I0VZ35gb5j2CN2DpdUzZlMGvE5x4jYF1AMnmHa
wE5V3udauHpOd4cN5bjr+p5eex7Ezyh0x5P1FMYiKAT5kcOrJ3NqDi5N8y4oH3DfVS9O7cdxbwly
Lu3VMpfQ8Vh30WC8Tl7bmoT2R2FFK/ZQpn9qcSdIhDWerP5pqZ56XjUl+rSnSTV3lqc2W+HN3yNw
2F1MpQiD8aYkOBOo7C+ooWfHpi2GR+6K/OybDnT0K0kCe5B1jPyZOQE51kqJ5Z52qz6WKDgmi92N
jMD2AR5vpTESOH2VwnHu7XSu5DaiQ3XV8QCb4uTXzEIDS3h65X27uK4uIJPT5GHfceF2Z5c/tt9q
c1pkIuVC28+BA5PY9OMQ4HL2AHCs8MF6DwV/zzRpRbWT5BnbUhYjBYkOjUjkJW+zeL9i9Qf6lSTC
lrLooyPCXQP8w9PlfMl1I9f09bze5N/NgL+RiH2nE7Q5uiy6vdFrzPOlKO1Enn1So2+WLhl+HPNb
xxaOu2B9d2ZHVIIAEWBsMsGoOBvrbpgT1u449fCfDu/+MYHB0iSVL1N6aaLwD4ZFjliCK0wi1F6g
530mJ0jfJUaNSih8hp75mxpZuWW/Bd22Ql095gBIgl4g9xGC3srYn+Y3RyYe63j3YcNBZFgCQfna
4NH4+ej9Uji29YnfAgMBAAGjWzBZMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0G
A1UdDgQWBBQNjLZh2kS40RR9w759XkjwzspqsDAXBgNVHSAEEDAOMAwGCiqBegFWAgIAAQEwDQYJ
KoZIhvcNAQEFBQADggIBACQ+YAZ+He86PtvqrxyaLAEL9MW12Ukx9F1BjYkMTv9sov3/4gbIOZ/x
WqndIlgVqIrTseYyCYIDbNc/CMf4uboAbbnW/FIyXaR/pDGUu7ZMOH8oMDX/nyNTt7buFHAAQCva
R6s0fl6nVjBhK4tDrP22iCj1a7Y+YEq6QpA0Z43q619FVDsXrIvkxmUP7tCMXWY5zjKn2BCXwH40
nJ+U8/aGH88bc62UeYdocMMzpXDn2NU4lG9jeeu/Cg4I58UvD0KgKxRA/yHgBcUn4YQRE7rWhh1B
CxMjidPJC+iKunqjo3M3NYB9Ergzd0A4wPpeMNLytqOx1qKVl4GbUu1pTP+A5FPbVFsDbVRfsbjv
JL1vnxHDx2TCDyhihWZeGnuyt++uNckZM6i4J9szVb9o4XVIRFb7zdNIu0eJOqxp9YDG5ERQL1TE
qkPFMTFYvZbF6nVsmnWxTfj3l/+WFvKXTej28xH5On2KOG4Ey+HTRRWqpdEdnV1j6CTmNhTih60b
WfVEm/vXd3wfAXBioSAaosUaKPQhA+4u2cGA6rnZgtZbdsLLO7XSAPCjDuGtbkD326C00EauFddE
wk01+dIL8hf2rGbVJLJP0RyZwG71fet0BLj5TXcJ17TPBzAJ8bgAVtkXFhYKK4bfjwEZGuW7gmP/
vgt2Fl43N+bYdJeimUV5
-----END CERTIFICATE-----

              ]]></file>
              <file Name="788c9bfc.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDgDCCAmigAwIBAgICAx4wDQYJKoZIhvcNAQEFBQAwYTELMAkGA1UEBhMCVVMx
DTALBgNVBAoTBFZJU0ExLzAtBgNVBAsTJlZpc2EgSW50ZXJuYXRpb25hbCBTZXJ2
aWNlIEFzc29jaWF0aW9uMRIwEAYDVQQDEwlHUCBSb290IDIwHhcNMDAwODE2MjI1
MTAwWhcNMjAwODE1MjM1OTAwWjBhMQswCQYDVQQGEwJVUzENMAsGA1UEChMEVklT
QTEvMC0GA1UECxMmVmlzYSBJbnRlcm5hdGlvbmFsIFNlcnZpY2UgQXNzb2NpYXRp
b24xEjAQBgNVBAMTCUdQIFJvb3QgMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
AQoCggEBAKkBcLWqxEDwq2omYXkZAPy/mzdZDK9vZBv42pWUJGkzEXDK41Z0ohdX
ZFwgBuHW73G3O/erwWnQSaSxBNf0V2KJXLB1LRckaeNCYOTudNargFbYiCjh+20i
/SN8RnNPflRzHqgsVVh1t0zzWkWlAhr62p3DRcMiXvOL8WAp0sdftAw6UYPvMPjU
58fy+pmjIlC++QU3o63tmsPm7IgbthknGziLgE3sucfFicv8GjLtI/C1AVj59o/g
halMCXI5Etuz9c9OYmTaxhkVOmMd6RdVoUwiPDQyRvhlV7or7zaMavrZ2UT0qt2E
1w0cslSsMoW0ZA3eQbuxNMYBhjJk1Z8CAwEAAaNCMEAwHQYDVR0OBBYEFJ59SzS/
ca3CBfYDdYDOqU8axCRMMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEG
MA0GCSqGSIb3DQEBBQUAA4IBAQAhpXYUVfmtJ3CPPPTVbMjMCqujmAuKBiPFyWHb
mQdpNSYx/scuhMKZYdQN6X0uEyt8joW2hcdLzzW2LEc9zikv2G+fiRxkk78IvXbQ
kIqUs38oW26sTTMs7WXcFsziza6kPWKSBpUmv9+55CCmc2rBvveURNZNbyoLaxhN
dBA2aGpawWqn3TYpjLgwi08hPwAuVDAHOrqK5MOeyti12HvOdUVmB/RtLdh6yumJ
ivIj2C/LbgA2T/vwLwHMD8AiZfSr4k5hLQOCfZEWtTDVFN5ex5D8ofyrEK9ca3Cn
B+8phuiyJccg/ybdd+95RBTEvd07xQObdyPsoOy7Wjm1zK0G
-----END CERTIFICATE-----

              ]]></file>
              <file Name="7999be0d.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDVDCCAjygAwIBAgIDAjRWMA0GCSqGSIb3DQEBBQUAMEIxCzAJBgNVBAYTAlVTMRYwFAYDVQQK
Ew1HZW9UcnVzdCBJbmMuMRswGQYDVQQDExJHZW9UcnVzdCBHbG9iYWwgQ0EwHhcNMDIwNTIxMDQw
MDAwWhcNMjIwNTIxMDQwMDAwWjBCMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5j
LjEbMBkGA1UEAxMSR2VvVHJ1c3QgR2xvYmFsIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
CgKCAQEA2swYYzD99BcjGlZ+W988bDjkcbd4kdS8odhM+KhDtgPpTSEHCIjaWC9mOSm9BXiLnTjo
BbdqfnGk5sRgprDvgOSJKA+eJdbtg/OtppHHmMlCGDUUna2YRpIuT8rxh0PBFpVXLVDviS2Aelet
8u5fa9IAjbkU+BQVNdnARqN7csiRv8lVK83Qlz6cJmTM386DGXHKTubU1XupGc1V3sjs0l44U+Vc
T4wt/lAjNvxm5suOpDkZALeVAjmRCw7+OC7RHQWa9k0+bw8HHa8sHo9gOeL6NlMTOdReJivbPagU
vTLrGAMoUgRx5aszPeE4uwc2hGKceeoWMPRfwCvocWvk+QIDAQABo1MwUTAPBgNVHRMBAf8EBTAD
AQH/MB0GA1UdDgQWBBTAephojYn7qwVkDBF9qn1luMrMTjAfBgNVHSMEGDAWgBTAephojYn7qwVk
DBF9qn1luMrMTjANBgkqhkiG9w0BAQUFAAOCAQEANeMpauUvXVSOKVCUn5kaFOSPeCpilKInZ57Q
zxpeR+nBsqTP3UEaBU6bS+5Kb1VSsyShNwrrZHYqLizz/Tt1kL/6cdjHPTfStQWVYrmm3ok9Nns4
d0iXrKYgjy6myQzCsplFAMfOEVEiIuCl6rYVSAlk6l5PdPcFPseKUgzbFbS9bZvlxrFUaKnjaZC2
mqUPuLk/IH2uSrW4nOQdtqvmlKXBx4Ot2/Unhw4EbNX/3aBd7YdStysVAq45pmp06drE57xNNB6p
XE0zX5IJL4hmXXeXxx12E6nV5fEWCRE11azbJHFwLJhWC9kXtNHjUStedejV0NxPNO3CBWaAocvm
Mw==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="7a481e66.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEqjCCA5KgAwIBAgIOSkcAAQAC5aBd1j8AUb8wDQYJKoZIhvcNAQEFBQAwdjELMAkGA1UEBhMC
REUxHDAaBgNVBAoTE1RDIFRydXN0Q2VudGVyIEdtYkgxIjAgBgNVBAsTGVRDIFRydXN0Q2VudGVy
IENsYXNzIDMgQ0ExJTAjBgNVBAMTHFRDIFRydXN0Q2VudGVyIENsYXNzIDMgQ0EgSUkwHhcNMDYw
MTEyMTQ0MTU3WhcNMjUxMjMxMjI1OTU5WjB2MQswCQYDVQQGEwJERTEcMBoGA1UEChMTVEMgVHJ1
c3RDZW50ZXIgR21iSDEiMCAGA1UECxMZVEMgVHJ1c3RDZW50ZXIgQ2xhc3MgMyBDQTElMCMGA1UE
AxMcVEMgVHJ1c3RDZW50ZXIgQ2xhc3MgMyBDQSBJSTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
AQoCggEBALTgu1G7OVyLBMVMeRwjhjEQY0NVJz/GRcekPewJDRoeIMJWHt4bNwcwIi9v8Qbxq63W
yKthoy9DxLCyLfzDlml7forkzMA5EpBCYMnMNWju2l+QVl/NHE1bWEnrDgFPZPosPIlY2C8u4rBo
6SI7dYnWRBpl8huXJh0obazovVkdKyT21oQDZogkAHhg8fir/gKya/si+zXmFtGt9i4S5Po1auUZ
uV3bOx4a+9P/FRQI2AlqukWdFHlgfa9Aigdzs5OW03Q0jTo3Kd5c7PXuLjHCINy+8U9/I1LZW+Jk
2ZyqBwi1Rb3R0DHBq1SfqdLDYmAD8bs5SpJKPQq5ncWg/jcCAwEAAaOCATQwggEwMA8GA1UdEwEB
/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBTUovyfs8PYA9NXXAek0CSnwPIA1DCB
7QYDVR0fBIHlMIHiMIHfoIHcoIHZhjVodHRwOi8vd3d3LnRydXN0Y2VudGVyLmRlL2NybC92Mi90
Y19jbGFzc18zX2NhX0lJLmNybIaBn2xkYXA6Ly93d3cudHJ1c3RjZW50ZXIuZGUvQ049VEMlMjBU
cnVzdENlbnRlciUyMENsYXNzJTIwMyUyMENBJTIwSUksTz1UQyUyMFRydXN0Q2VudGVyJTIwR21i
SCxPVT1yb290Y2VydHMsREM9dHJ1c3RjZW50ZXIsREM9ZGU/Y2VydGlmaWNhdGVSZXZvY2F0aW9u
TGlzdD9iYXNlPzANBgkqhkiG9w0BAQUFAAOCAQEANmDkcPcGIEPZIxpC8vijsrlNirTzwppVMXzE
O2eatN9NDoqTSheLG43KieHPOh6sHfGcMrSOWXaiQYUlN6AT0PV8TtXqluJucsG7Kv5sbviRmEb8
yRtXW+rIGjs/sFGYPAfaLFkB2otE6OF0/ado3VS6g0bsyEa1+K+XwDsJHI/OcpY9M1ZwvJbL2NV9
IJqDnxrcOfHFcqMRA/07QlIp2+gB95tejNaNhk4Z+rwcvsUhpYeeeC422wlxo3I0+GzjBgnyXlal
092Y+tTmBvTwtiBjS+opvaqCZh77gaqnN60TGOaSw4HBM7uIHqHn4rS9MWwOUT1v+5ZWgOI2F9Hc
5A==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="7a819ef2.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFtzCCA5+gAwIBAgICBQkwDQYJKoZIhvcNAQEFBQAwRTELMAkGA1UEBhMCQk0x
GTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxGzAZBgNVBAMTElF1b1ZhZGlzIFJv
b3QgQ0EgMjAeFw0wNjExMjQxODI3MDBaFw0zMTExMjQxODIzMzNaMEUxCzAJBgNV
BAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMRswGQYDVQQDExJRdW9W
YWRpcyBSb290IENBIDIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCa
GMpLlA0ALa8DKYrwD4HIrkwZhR0In6spRIXzL4GtMh6QRr+jhiYaHv5+HBg6XJxg
Fyo6dIMzMH1hVBHL7avg5tKifvVrbxi3Cgst/ek+7wrGsxDp3MJGF/hd/aTa/55J
WpzmM+Yklvc/ulsrHHo1wtZn/qtmUIttKGAr79dgw8eTvI02kfN/+NsRE8Scd3bB
rrcCaoF6qUWD4gXmuVbBlDePSHFjIuwXZQeVikvfj8ZaCuWw419eaxGrDPmF60Tp
+ARz8un+XJiM9XOva7R+zdRcAitMOeGylZUtQofX1bOQQ7dsE/He3fbE+Ik/0XX1
ksOR1YqI0JDs3G3eicJlcZaLDQP9nL9bFqyS2+r+eXyt66/3FsvbzSUr5R/7mp/i
Ucw6UwxI5g69ybR2BlLmEROFcmMDBOAENisgGQLodKcftslWZvB1JdxnwQ5hYIiz
PtGo/KPaHbDRsSNU30R2be1B2MGyIrZTHN81Hdyhdyox5C315eXbyOD/5YDXC2Og
/zOhD7osFRXql7PSorW+8oyWHhqPHWykYTe5hnMz15eWniN9gqRMgeKh0bpnX5UH
oycR7hYQe7xFSkyyBNKr79X9DFHOUGoIMfmR2gyPZFwDwzqLID9ujWc9Otb+fVuI
yV77zGHcizN300QyNQliBJIWENieJ0f7OyHj+OsdWwIDAQABo4GwMIGtMA8GA1Ud
EwEB/wQFMAMBAf8wCwYDVR0PBAQDAgEGMB0GA1UdDgQWBBQahGK8SEwzJQTU7tD2
A8QZRtGUazBuBgNVHSMEZzBlgBQahGK8SEwzJQTU7tD2A8QZRtGUa6FJpEcwRTEL
MAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxGzAZBgNVBAMT
ElF1b1ZhZGlzIFJvb3QgQ0EgMoICBQkwDQYJKoZIhvcNAQEFBQADggIBAD4KFk2f
BluornFdLwUvZ+YTRYPENvbzwCYMDbVHZF34tHLJRqUDGCdViXh9duqWNIAXINzn
g/iN/Ae42l9NLmeyhP3ZRPx3UIHmfLTJDQtyU/h2BwdBR5YM++CCJpNVjP4iH2Bl
fF/nJrP3MpCYUNQ3cVX2kiF495V5+vgtJodmVjB3pjd4M1IQWK4/YY7yarHvGH5K
WWPKjaJW1acvvFYfzznB4vsKqBUsfU16Y8Zsl0Q80m/DShcK+JDSV6IZUaUtl0Ha
B0+pUNqQjZRG4T7wlP0QADj1O+hA4bRuVhogzG9Yje0uRY/W6ZM/57Es3zrWIozc
hLsib9D45MY56QSIPMO661V6bYCZJPVsAfv4l7CUW+v90m/xd2gNNWQjrLhVoQPR
TUIZ3Ph1WVaj+ahJefivDrkRoHy3au000LYmYjgahwz46P0u05B/B5EqHdZ+XIWD
mbA4CD/pXvk1B+TJYm5Xf6dQlfe6yJvmjqIBxdZmv3lh8zwc4bmCXF2gw+nYSL0Z
ohEUGW6yhhtoPkg3Goi3XZZenMfvJ2II4pEZXNLxId26F0KCl3GBUzGpn/Z9Yr9y
4aOTHcyKJloJONDO1w2AFrR4pTqHTI2KpdVGl/IsELm8VCLAAVBpQ570su9t+Oza
8eOx79+Rj1QqCyXBJhnEUhAFZdWCEOrCMc0u
-----END CERTIFICATE-----

              ]]></file>
              <file Name="7d3cd826.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIC5zCCAlACAQEwDQYJKoZIhvcNAQEFBQAwgbsxJDAiBgNVBAcTG1ZhbGlDZXJ0
IFZhbGlkYXRpb24gTmV0d29yazEXMBUGA1UEChMOVmFsaUNlcnQsIEluYy4xNTAz
BgNVBAsTLFZhbGlDZXJ0IENsYXNzIDMgUG9saWN5IFZhbGlkYXRpb24gQXV0aG9y
aXR5MSEwHwYDVQQDExhodHRwOi8vd3d3LnZhbGljZXJ0LmNvbS8xIDAeBgkqhkiG
9w0BCQEWEWluZm9AdmFsaWNlcnQuY29tMB4XDTk5MDYyNjAwMjIzM1oXDTE5MDYy
NjAwMjIzM1owgbsxJDAiBgNVBAcTG1ZhbGlDZXJ0IFZhbGlkYXRpb24gTmV0d29y
azEXMBUGA1UEChMOVmFsaUNlcnQsIEluYy4xNTAzBgNVBAsTLFZhbGlDZXJ0IENs
YXNzIDMgUG9saWN5IFZhbGlkYXRpb24gQXV0aG9yaXR5MSEwHwYDVQQDExhodHRw
Oi8vd3d3LnZhbGljZXJ0LmNvbS8xIDAeBgkqhkiG9w0BCQEWEWluZm9AdmFsaWNl
cnQuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDjmFGWHOjVsQaBalfD
cnWTq8+epvzzFlLWLU2fNUSoLgRNB0mKOCn1dzfnt6td3zZxFJmP3MKS8edgkpfs
2Ejcv8ECIMYkpChMMFp2bbFc893enhBxoYjHW5tBbcqwuI4V7q0zK89HBFx1cQqY
JJgpp0lZpd34t0NiYfPT4tBVPwIDAQABMA0GCSqGSIb3DQEBBQUAA4GBAFa7AliE
Zwgs3x/be0kz9dNnnfS0ChCzycUs4pJqcXgn8nCDQtM+z6lU9PHYkhaM0QTLS6vJ
n0WuPIqpsHEzXcjFV9+vqDWzf4mH6eglkrh/hXqu1rweN1gqZ8mRzyqBPu3GOd/A
PhmcGcwTTYJBtYze4D1gCCAPRX5ron+jjBXu
-----END CERTIFICATE-----

              ]]></file>
              <file Name="7d453d8f.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEGjCCAwICEQCbfgZJoz5iudXukEhxKe9XMA0GCSqGSIb3DQEBBQUAMIHKMQswCQYDVQQGEwJV
UzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdv
cmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNl
IG9ubHkxRTBDBgNVBAMTPFZlcmlTaWduIENsYXNzIDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQsw
CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRy
dXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhv
cml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWduIENsYXNzIDMgUHVibGljIFByaW1hcnkg
Q2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
ggEBAMu6nFL8eB8aHm8bN3O9+MlrlBIwT/A2R/XQkQr1F8ilYcEWQE37imGQ5XYgwREGfassbqb1
EUGO+i2tKmFZpGcmTNDovFJbcCAEWNF6yaRpvIMXZK0Fi7zQWM6NjPXr8EJJC52XJ2cybuGukxUc
cLwgTS8Y3pKI6GyFVxEa6X7jJhFUokWWVYPKMIno3Nij7SqAP395ZVc+FSBmCC+Vk7+qRy+oRpfw
EuL+wgorUeZ25rdGt+INpsyow0xZVYnm6FNcHOqd8GIWC6fJXwzw3sJ2zq/3avL6QaaiMxTJ5Xpj
055iN9WFZZ4O5lMkdBteHRJTW8cs54NJOxWuimi5V5cCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEA
ERSWwauSCPc/L8my/uRan2Te2yFPhpk0djZX3dAVL8WtfxUfN2JzPtTnX84XA9s1+ivbrmAJXx5f
j267Cz3qWhMeDGBvtcC1IyIuBwvLqXTLR7sdwdela8wv0kL9Sd2nic9TutoAWii/gt/4uhMdUIaC
/Y4wjylGsB49Ndo4YhYYSq3mtlFs3q9i6wHQHiT+eo8SGhJouPtmmRQURVyu565pF4ErWjfJXir0
xuKhXFSbplQAz/DxwceYMBo7Nhbbo27q/a2ywtrvAkcTisDxszGtTxzhT5yvDwyd93gN2PQ1VoDa
t20Xj50egWTh/sVFuq1ruQp6Tk9LhO5L8X3dEQ==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="81b9768f.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDxTCCAq2gAwIBAgIQAqxcJmoLQJuPC3nyrkYldzANBgkqhkiG9w0BAQUFADBsMQswCQYDVQQG
EwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSsw
KQYDVQQDEyJEaWdpQ2VydCBIaWdoIEFzc3VyYW5jZSBFViBSb290IENBMB4XDTA2MTExMDAwMDAw
MFoXDTMxMTExMDAwMDAwMFowbDELMAkGA1UEBhMCVVMxFTATBgNVBAoTDERpZ2lDZXJ0IEluYzEZ
MBcGA1UECxMQd3d3LmRpZ2ljZXJ0LmNvbTErMCkGA1UEAxMiRGlnaUNlcnQgSGlnaCBBc3N1cmFu
Y2UgRVYgUm9vdCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMbM5XPm+9S75S0t
Mqbf5YE/yc0lSbZxKsPVlDRnogocsF9ppkCxxLeyj9CYpKlBWTrT3JTWPNt0OKRKzE0lgvdKpVMS
OO7zSW1xkX5jtqumX8OkhPhPYlG++MXs2ziS4wblCJEMxChBVfvLWokVfnHoNb9Ncgk9vjo4UFt3
MRuNs8ckRZqnrG0AFFoEt7oT61EKmEFBIk5lYYeBQVCmeVyJ3hlKV9Uu5l0cUyx+mM0aBhakaHPQ
NAQTXKFx01p8VdteZOE3hzBWBOURtCmAEvF5OYiiAhF8J2a3iLd48soKqDirCmTCv2ZdlYTBoSUe
h10aUAsgEsxBu24LUTi4S8sCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQFMAMB
Af8wHQYDVR0OBBYEFLE+w2kD+L9HAdSYJhoIAu9jZCvDMB8GA1UdIwQYMBaAFLE+w2kD+L9HAdSY
JhoIAu9jZCvDMA0GCSqGSIb3DQEBBQUAA4IBAQAcGgaX3NecnzyIZgYIVyHbIUf4KmeqvxgydkAQ
V8GK83rZEWWONfqe/EW1ntlMMUu4kehDLI6zeM7b41N5cdblIZQB2lWHmiRk9opmzN6cN82oNLFp
myPInngiK3BD41VHMWEZ71jFhS9OMPagMRYjyOfiZRYzy78aG6A9+MpeizGLYAiJLQwGXFK3xPkK
mNEVX58Svnw2Yzi9RKR/5CYrCsSXaQ3pjOLAEFe4yHYSkVXySGnYvCoCWw9E1CAx2/S6cCZdkGCe
vEsXCS+0yx5DaMkHJ8HSXPfqIbloEpw8nL+e/IBcm2PN7EeqJSdnoDfzAIJ9VNep+OkuE6N36B9K
-----END CERTIFICATE-----

              ]]></file>
              <file Name="82223c44.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFWTCCA0GgAwIBAgIBAjANBgkqhkiG9w0BAQsFADBOMQswCQYDVQQGEwJOTzEdMBsGA1UECgwU
QnV5cGFzcyBBUy05ODMxNjMzMjcxIDAeBgNVBAMMF0J1eXBhc3MgQ2xhc3MgMiBSb290IENBMB4X
DTEwMTAyNjA4MzgwM1oXDTQwMTAyNjA4MzgwM1owTjELMAkGA1UEBhMCTk8xHTAbBgNVBAoMFEJ1
eXBhc3MgQVMtOTgzMTYzMzI3MSAwHgYDVQQDDBdCdXlwYXNzIENsYXNzIDIgUm9vdCBDQTCCAiIw
DQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANfHXvfBB9R3+0Mh9PT1aeTuMgHbo4Yf5FkNuud1
g1Lr6hxhFUi7HQfKjK6w3Jad6sNgkoaCKHOcVgb/S2TwDCo3SbXlzwx87vFKu3MwZfPVL4O2fuPn
9Z6rYPnT8Z2SdIrkHJasW4DptfQxh6NR/Md+oW+OU3fUl8FVM5I+GC911K2GScuVr1QGbNgGE41b
/+EmGVnAJLqBcXmQRFBoJJRfuLMR8SlBYaNByyM21cHxMlAQTn/0hpPshNOOvEu/XAFOBz3cFIqU
CqTqc/sLUegTBxj6DvEr0VQVfTzh97QZQmdiXnfgolXsttlpF9U6r0TtSsWe5HonfOV116rLJeff
awrbD02TTqigzXsu8lkBarcNuAeBfos4GzjmCleZPe4h6KP1DBbdi+w0jpwqHAAVF41og9JwnxgI
zRFo1clrUs3ERo/ctfPYV3Me6ZQ5BL/T3jjetFPsaRyifsSP5BtwrfKi+fv3FmRmaZ9JUaLiFRhn
Bkp/1Wy1TbMz4GHrXb7pmA8y1x1LPC5aAVKRCfLf6o3YBkBjqhHk/sM3nhRSP/TizPJhk9H9Z2vX
Uq6/aKtAQ6BXNVN48FP4YUIHZMbXb5tMOA1jrGKvNouicwoN9SG9dKpN6nIDSdvHXx1iY8f93ZHs
M+71bbRuMGjeyNYmsHVee7QHIJihdjK4TWxPAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYD
VR0OBBYEFMmAd+BikoL1RpzzuvdMw964o605MA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQsF
AAOCAgEAU18h9bqwOlI5LJKwbADJ784g7wbylp7ppHR/ehb8t/W2+xUbP6umwHJdELFx7rxP462s
A20ucS6vxOOto70MEae0/0qyexAQH6dXQbLArvQsWdZHEIjzIVEpMMpghq9Gqx3tOluwlN5E40EI
osHsHdb9T7bWR9AUC8rmyrV7d35BH16Dx7aMOZawP5aBQW9gkOLo+fsicdl9sz1Gv7SEr5AcD48S
aq/v7h56rgJKihcrdv6sVIkkLE8/trKnToyokZf7KcZ7XC25y2a2t6hbElGFtQl+Ynhw/qlqYLYd
DnkM/crqJIByw5c/8nerQyIKx+u2DISCLIBrQYoIwOula9+ZEsuK1V6ADJHgJgg2SMX6OBE1/yWD
LfJ6v9r9jv6ly0UsH8SIU653DtmadsWOLB2jutXsMq7Aqqz30XpN69QH4kj3Io6wpJ9qzo6ysmD0
oyLQI+uUWnpp3Q+/QFesa1lQ2aOZ4W7+jQF5JyMV3pKdewlNWudLSDBaGOYKbeaP4NK75t98biGC
wWg5TbSYWGZizEqQXsP6JwSxeRV0mcy+rSDeJmAc61ZRpqPq5KM/p/9h3PFaTWwyI0PurKju7koS
CTxdccK+efrCh2gdC/1cacwG0Jp9VJkqyTkaGa9LKkPzY11aWOIv4x3kqdbQCtCev9eBCfHJxyYN
rJgWVqA=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="8317b10c.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIG0TCCBbmgAwIBAgIBezANBgkqhkiG9w0BAQUFADCByTELMAkGA1UEBhMCSFUx
ETAPBgNVBAcTCEJ1ZGFwZXN0MScwJQYDVQQKEx5OZXRMb2NrIEhhbG96YXRiaXp0
b25zYWdpIEtmdC4xGjAYBgNVBAsTEVRhbnVzaXR2YW55a2lhZG9rMUIwQAYDVQQD
EzlOZXRMb2NrIE1pbm9zaXRldHQgS296amVneXpvaSAoQ2xhc3MgUUEpIFRhbnVz
aXR2YW55a2lhZG8xHjAcBgkqhkiG9w0BCQEWD2luZm9AbmV0bG9jay5odTAeFw0w
MzAzMzAwMTQ3MTFaFw0yMjEyMTUwMTQ3MTFaMIHJMQswCQYDVQQGEwJIVTERMA8G
A1UEBxMIQnVkYXBlc3QxJzAlBgNVBAoTHk5ldExvY2sgSGFsb3phdGJpenRvbnNh
Z2kgS2Z0LjEaMBgGA1UECxMRVGFudXNpdHZhbnlraWFkb2sxQjBABgNVBAMTOU5l
dExvY2sgTWlub3NpdGV0dCBLb3pqZWd5em9pIChDbGFzcyBRQSkgVGFudXNpdHZh
bnlraWFkbzEeMBwGCSqGSIb3DQEJARYPaW5mb0BuZXRsb2NrLmh1MIIBIjANBgkq
hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAx1Ilstg91IRVCacbvWy5FPSKAtt2/Goq
eKvld/Bu4IwjZ9ulZJm53QE+b+8tmjwi8F3JV6BVQX/yQ15YglMxZc4e8ia6AFQe
r7C8HORSjKAyr7c3sVNnaHRnUPYtLmTeriZ539+Zhqurf4XsoPuAzPS4DB6TRWO5
3Lhbm+1bOdRfYrCnjnxmOCyqsQhjF2d9zL2z8cM/z1A57dEZgxXbhxInlrfa6uWd
vLrqOU+L73Sa58XQ0uqGURzk/mQIKAR5BevKxXEOC++r6uwSEaEYBTJp0QwsGj0l
mT+1fMptsK6ZmfoIYOcZwvK9UdPM0wKswREMgM6r3JSda6M5UzrWhQIDAMV9o4IC
wDCCArwwEgYDVR0TAQH/BAgwBgEB/wIBBDAOBgNVHQ8BAf8EBAMCAQYwggJ1Bglg
hkgBhvhCAQ0EggJmFoICYkZJR1lFTEVNISBFemVuIHRhbnVzaXR2YW55IGEgTmV0
TG9jayBLZnQuIE1pbm9zaXRldHQgU3pvbGdhbHRhdGFzaSBTemFiYWx5emF0YWJh
biBsZWlydCBlbGphcmFzb2sgYWxhcGphbiBrZXN6dWx0LiBBIG1pbm9zaXRldHQg
ZWxla3Ryb25pa3VzIGFsYWlyYXMgam9naGF0YXMgZXJ2ZW55ZXN1bGVzZW5laywg
dmFsYW1pbnQgZWxmb2dhZGFzYW5hayBmZWx0ZXRlbGUgYSBNaW5vc2l0ZXR0IFN6
b2xnYWx0YXRhc2kgU3phYmFseXphdGJhbiwgYXogQWx0YWxhbm9zIFN6ZXJ6b2Rl
c2kgRmVsdGV0ZWxla2JlbiBlbG9pcnQgZWxsZW5vcnplc2kgZWxqYXJhcyBtZWd0
ZXRlbGUuIEEgZG9rdW1lbnR1bW9rIG1lZ3RhbGFsaGF0b2sgYSBodHRwczovL3d3
dy5uZXRsb2NrLmh1L2RvY3MvIGNpbWVuIHZhZ3kga2VyaGV0b2sgYXogaW5mb0Bu
ZXRsb2NrLm5ldCBlLW1haWwgY2ltZW4uIFdBUk5JTkchIFRoZSBpc3N1YW5jZSBh
bmQgdGhlIHVzZSBvZiB0aGlzIGNlcnRpZmljYXRlIGFyZSBzdWJqZWN0IHRvIHRo
ZSBOZXRMb2NrIFF1YWxpZmllZCBDUFMgYXZhaWxhYmxlIGF0IGh0dHBzOi8vd3d3
Lm5ldGxvY2suaHUvZG9jcy8gb3IgYnkgZS1tYWlsIGF0IGluZm9AbmV0bG9jay5u
ZXQwHQYDVR0OBBYEFAlqYhaSsFq7VQ7LdTI6MuWyIckoMA0GCSqGSIb3DQEBBQUA
A4IBAQCRalCc23iBmz+LQuM7/KbD7kPgz/PigDVJRXYC4uMvBcXxKufAQTPGtpvQ
MznNwNuhrWw3AkxYQTvyl5LGSKjN5Yo5iWH5Upfpvfb5lHTocQ68d4bDBsxafEp+
NFAwLvt/MpqNPfMgW/hqyobzMUwsWYACff44yTB1HLdV47yfuqhthCgFdbOLDcCR
VCHnpgu0mfVRQdzNo0ci2ccBgcTcR08m6h/t280NmPSjnLRzMkqWmf68f8glWPhY
83ZmiVSkpj7EUFy6iRiCdUgh0k8T6GB+B3bbELVR5qq5aKrN9p2QdRLqOBrKROi3
macqaJVmlaut74nLYKkGEsaUR+ko
-----END CERTIFICATE-----

              ]]></file>
              <file Name="8470719d.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDYTCCAkmgAwIBAgIQCgEBAQAAAnwAAAAKAAAAAjANBgkqhkiG9w0BAQUFADA6MRkwFwYDVQQK
ExBSU0EgU2VjdXJpdHkgSW5jMR0wGwYDVQQLExRSU0EgU2VjdXJpdHkgMjA0OCBWMzAeFw0wMTAy
MjIyMDM5MjNaFw0yNjAyMjIyMDM5MjNaMDoxGTAXBgNVBAoTEFJTQSBTZWN1cml0eSBJbmMxHTAb
BgNVBAsTFFJTQSBTZWN1cml0eSAyMDQ4IFYzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC
AQEAt49VcdKA3XtpeafwGFAyPGJn9gqVB93mG/Oe2dJBVGutn3y+Gc37RqtBaB4Y6lXIL5F4iSj7
Jylg/9+PjDvJSZu1pJTOAeo+tWN7fyb9Gd3AIb2E0S1PRsNO3Ng3OTsor8udGuorryGlwSMiuLgb
WhOHV4PR8CDn6E8jQrAApX2J6elhc5SYcSa8LWrg903w8bYqODGBDSnhAMFRD0xS+ARaqn1y07iH
KrtjEAMqs6FPDVpeRrc9DvV07Jmf+T0kgYim3WBU6JU2PcYJk5qjEoAAVZkZR73QpXzDuvsf9/UP
+Ky5tfQ3mBMY3oVbtwyCO4dvlTlYMNpuAWgXIszACwIDAQABo2MwYTAPBgNVHRMBAf8EBTADAQH/
MA4GA1UdDwEB/wQEAwIBBjAfBgNVHSMEGDAWgBQHw1EwpKrpRa41JPr/JCwz0LGdjDAdBgNVHQ4E
FgQUB8NRMKSq6UWuNST6/yQsM9CxnYwwDQYJKoZIhvcNAQEFBQADggEBAF8+hnZuuDU8TjYcHnmY
v/3VEhF5Ug7uMYm83X/50cYVIeiKAVQNOvtUudZj1LGqlk2iQk3UUx+LEN5/Zb5gEydxiKRz44Rj
0aRV4VCT5hsOedBnvEbIvz8XDZXmxpBp3ue0L96VfdASPz0+f00/FGj1EVDVwfSQpQgdMWD/YIwj
VAqv/qFuxdF6Kmh4zx6CCiC0H63lhbJqaHVOrSU3lIW+vaHU6rcMSzyd6BIA8F+sDeGscGNz9395
nzIlQnQFgCi/vcEkllgVsRch6YlL2weIZ/QVrXA+L02FO8K32/6YaCOJ4XQP3vTFhGMpG8zLB8kA
pKnXwiJPZ9d37CAFYd4=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="84cba82f.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIID+zCCAuOgAwIBAgIBATANBgkqhkiG9w0BAQUFADCBtzE/MD0GA1UEAww2VMOcUktUUlVTVCBF
bGVrdHJvbmlrIFNlcnRpZmlrYSBIaXptZXQgU2HEn2xhecSxY8Sxc8SxMQswCQYDVQQGDAJUUjEP
MA0GA1UEBwwGQU5LQVJBMVYwVAYDVQQKDE0oYykgMjAwNSBUw5xSS1RSVVNUIEJpbGdpIMSwbGV0
acWfaW0gdmUgQmlsacWfaW0gR8O8dmVubGnEn2kgSGl6bWV0bGVyaSBBLsWeLjAeFw0wNTA1MTMx
MDI3MTdaFw0xNTAzMjIxMDI3MTdaMIG3MT8wPQYDVQQDDDZUw5xSS1RSVVNUIEVsZWt0cm9uaWsg
U2VydGlmaWthIEhpem1ldCBTYcSfbGF5xLFjxLFzxLExCzAJBgNVBAYMAlRSMQ8wDQYDVQQHDAZB
TktBUkExVjBUBgNVBAoMTShjKSAyMDA1IFTDnFJLVFJVU1QgQmlsZ2kgxLBsZXRpxZ9pbSB2ZSBC
aWxpxZ9pbSBHw7x2ZW5sacSfaSBIaXptZXRsZXJpIEEuxZ4uMIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEAylIF1mMD2Bxf3dJ7XfIMYGFbazt0K3gNfUW9InTojAPBxhEqPZW8qZSwu5GX
yGl8hMW0kWxsE2qkVa2kheiVfrMArwDCBRj1cJ02i67L5BuBf5OI+2pVu32Fks66WJ/bMsW9Xe8i
Si9BB35JYbOG7E6mQW6EvAPs9TscyB/C7qju6hJKjRTP8wrgUDn5CDX4EVmt5yLqS8oUBt5CurKZ
8y1UiBAG6uEaPj1nH/vO+3yC6BFdSsG5FOpU2WabfIl9BJpiyelSPJ6c79L1JuTm5Rh8i27fbMx4
W09ysstcP4wFjdFMjK2Sx+F4f2VsSQZQLJ4ywtdKxnWKWU51b0dewQIDAQABoxAwDjAMBgNVHRME
BTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQAV9VX/N5aAWSGk/KEVTCD21F/aAyT8z5Aa9CEKmu46
sWrv7/hg0Uw2ZkUd82YCdAR7kjCo3gp2D++Vbr3JN+YaDayJSFvMgzbC9UZcWYJWtNX+I7TYVBxE
q8Sn5RTOPEFhfEPmzcSBCYsk+1Ql1haolgxnB2+zUEfjHCQo3SqYpGH+2+oSN7wBGjSFvW5P55Fy
B0SFHljKVETd96y5y4khctuPwGkplyqjrhgjlxxBKot8KsF8kOipKMDTkcatKIdAaLX/7KfS0zgY
nNN9aV3wxqUeJBujR/xpB2jn5Jq07Q+hh4cCzofSSE7hvP/L8XKSRGQDJereW26fyfJOrN3H
-----END CERTIFICATE-----

              ]]></file>
              <file Name="85cde254.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIID3TCCAsWgAwIBAgIBADANBgkqhkiG9w0BAQsFADCBjzELMAkGA1UEBhMCVVMxEDAOBgNVBAgT
B0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9s
b2dpZXMsIEluYy4xMjAwBgNVBAMTKVN0YXJmaWVsZCBSb290IENlcnRpZmljYXRlIEF1dGhvcml0
eSAtIEcyMB4XDTA5MDkwMTAwMDAwMFoXDTM3MTIzMTIzNTk1OVowgY8xCzAJBgNVBAYTAlVTMRAw
DgYDVQQIEwdBcml6b25hMRMwEQYDVQQHEwpTY290dHNkYWxlMSUwIwYDVQQKExxTdGFyZmllbGQg
VGVjaG5vbG9naWVzLCBJbmMuMTIwMAYDVQQDEylTdGFyZmllbGQgUm9vdCBDZXJ0aWZpY2F0ZSBB
dXRob3JpdHkgLSBHMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL3twQP89o/8ArFv
W59I2Z154qK3A2FWGMNHttfKPTUuiUP3oWmb3ooa/RMgnLRJdzIpVv257IzdIvpy3Cdhl+72WoTs
bhm5iSzchFvVdPtrX8WJpRBSiUZV9Lh1HOZ/5FSuS/hVclcCGfgXcVnrHigHdMWdSL5stPSksPNk
N3mSwOxGXn/hbVNMYq/NHwtjuzqd+/x5AJhhdM8mgkBj87JyahkNmcrUDnXMN/uLicFZ8WJ/X7Nf
ZTD4p7dNdloedl40wOiWVpmKs/B/pM293DIxfJHP4F8R+GuqSVzRmZTRouNjWwl2tVZi4Ut0HZbU
JtQIBFnQmA4O5t78w+wfkPECAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC
AQYwHQYDVR0OBBYEFHwMMh+n2TB/xH1oo2Kooc6rB1snMA0GCSqGSIb3DQEBCwUAA4IBAQARWfol
TwNvlJk7mh+ChTnUdgWUXuEok21iXQnCoKjUsHU48TRqneSfioYmUeYs0cYtbpUgSpIB7LiKZ3sx
4mcujJUDJi5DnUox9g61DLu34jd/IroAow57UvtruzvE03lRTs2Q9GcHGcg8RnoNAX3FWOdt5oUw
F5okxBDgBPfg8n/Uqgr/Qh037ZTlZFkSIHc40zI+OIF1lnP6aI+xy84fxez6nH7PfrHxBy22/L/K
pL/QlwVKvOoYKAKQvVR4CSFx09F9HdkWsKlhPdAKACL8x3vLCWRFCztAgfd9fDL1mMpYjn0q7pBZ
c2T5NnReJaH1ZgUufzkVqSr7UIuOhWn0
-----END CERTIFICATE-----

              ]]></file>
              <file Name="86212b19.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDTDCCAjSgAwIBAgIIfE8EORzUmS0wDQYJKoZIhvcNAQEFBQAwRDELMAkGA1UEBhMCVVMxFDAS
BgNVBAoMC0FmZmlybVRydXN0MR8wHQYDVQQDDBZBZmZpcm1UcnVzdCBOZXR3b3JraW5nMB4XDTEw
MDEyOTE0MDgyNFoXDTMwMTIzMTE0MDgyNFowRDELMAkGA1UEBhMCVVMxFDASBgNVBAoMC0FmZmly
bVRydXN0MR8wHQYDVQQDDBZBZmZpcm1UcnVzdCBOZXR3b3JraW5nMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEAtITMMxcua5Rsa2FSoOujz3mUTOWUgJnLVWREZY9nZOIG41w3SfYvm4SE
Hi3yYJ0wTsyEheIszx6e/jarM3c1RNg1lho9Nuh6DtjVR6FqaYvZ/Ls6rnla1fTWcbuakCNrmreI
dIcMHl+5ni36q1Mr3Lt2PpNMCAiMHqIjHNRqrSK6mQEubWXLviRmVSRLQESxG9fhwoXA3hA/Pe24
/PHxI1Pcv2WXb9n5QHGNfb2V1M6+oF4nI979ptAmDgAp6zxG8D1gvz9Q0twmQVGeFDdCBKNwV6gb
h+0t+nvujArjqWaJGctB+d1ENmHP4ndGyH329JKBNv3bNPFyfvMMFr20FQIDAQABo0IwQDAdBgNV
HQ4EFgQUBx/S55zawm6iQLSwelAQUHTEyL0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC
AQYwDQYJKoZIhvcNAQEFBQADggEBAIlXshZ6qML91tmbmzTCnLQyFE2npN/svqe++EPbkTfOtDIu
UFUaNU52Q3Eg75N3ThVwLofDwR1t3Mu1J9QsVtFSUzpE0nPIxBsFZVpikpzuQY0x2+c06lkh1QF6
12S4ZDnNye2v7UsDSKegmQGA3GWjNq5lWUhPgkvIZfFXHeVZLgo/bNjR9eUJtGxUAArgFU2HdW23
WJZa3W3SAKD0m0i+wzekujbgfIeFlxoVot4uolu9rxj5kFDNcFn4J2dHy8egBzp90SxdbBk6ZrV9
/ZFvgrG+CJPbFEfxojfHRZ48x3evZKiT3/Zpg4Jg8klCNO1aAFSFHBY2kgxc+qatv9s=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="86f32474.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIH6jCCB1OgAwIBAgIBADANBgkqhkiG9w0BAQUFADCCARIxCzAJBgNVBAYTAkVT
MRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UE
ChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjErMCkGA1UE
ChQiaXBzQG1haWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEuMCwGA1UECxMl
SVBTIENBIENMQVNFMyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEuMCwGA1UEAxMl
SVBTIENBIENMQVNFMyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEeMBwGCSqGSIb3
DQEJARYPaXBzQG1haWwuaXBzLmVzMB4XDTAxMTIyOTAxMDE0NFoXDTI1MTIyNzAx
MDE0NFowggESMQswCQYDVQQGEwJFUzESMBAGA1UECBMJQmFyY2Vsb25hMRIwEAYD
VQQHEwlCYXJjZWxvbmExLjAsBgNVBAoTJUlQUyBJbnRlcm5ldCBwdWJsaXNoaW5n
IFNlcnZpY2VzIHMubC4xKzApBgNVBAoUImlwc0BtYWlsLmlwcy5lcyBDLkkuRi4g
IEItNjA5Mjk0NTIxLjAsBgNVBAsTJUlQUyBDQSBDTEFTRTMgQ2VydGlmaWNhdGlv
biBBdXRob3JpdHkxLjAsBgNVBAMTJUlQUyBDQSBDTEFTRTMgQ2VydGlmaWNhdGlv
biBBdXRob3JpdHkxHjAcBgkqhkiG9w0BCQEWD2lwc0BtYWlsLmlwcy5lczCBnzAN
BgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAqxf+DrDGaBtT8FK+n/ra+osTBLsBjzLZ
H49NzjaY2uQARIwo2BNEKqRrThckQpzTiKRBgtYj+4vJhuW5qYIF3PHeH+AMmVWY
8jjsbJ0gA8DvqqPGZARRLXgNo9KoOtYkTOmWehisEyMiG3zoMRGzXwmqMHBxRiVr
SXGAK5UBsh8CAwEAAaOCBEowggRGMB0GA1UdDgQWBBS4k/8uy9wsjqLnev42USGj
mFsMNDCCAUQGA1UdIwSCATswggE3gBS4k/8uy9wsjqLnev42USGjmFsMNKGCARqk
ggEWMIIBEjELMAkGA1UEBhMCRVMxEjAQBgNVBAgTCUJhcmNlbG9uYTESMBAGA1UE
BxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJUFMgSW50ZXJuZXQgcHVibGlzaGluZyBT
ZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJpcHNAbWFpbC5pcHMuZXMgQy5JLkYuICBC
LTYwOTI5NDUyMS4wLAYDVQQLEyVJUFMgQ0EgQ0xBU0UzIENlcnRpZmljYXRpb24g
QXV0aG9yaXR5MS4wLAYDVQQDEyVJUFMgQ0EgQ0xBU0UzIENlcnRpZmljYXRpb24g
QXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXOCAQAwDAYD
VR0TBAUwAwEB/zAMBgNVHQ8EBQMDB/+AMGsGA1UdJQRkMGIGCCsGAQUFBwMBBggr
BgEFBQcDAgYIKwYBBQUHAwMGCCsGAQUFBwMEBggrBgEFBQcDCAYKKwYBBAGCNwIB
FQYKKwYBBAGCNwIBFgYKKwYBBAGCNwoDAQYKKwYBBAGCNwoDBDARBglghkgBhvhC
AQEEBAMCAAcwGgYDVR0RBBMwEYEPaXBzQG1haWwuaXBzLmVzMBoGA1UdEgQTMBGB
D2lwc0BtYWlsLmlwcy5lczBBBglghkgBhvhCAQ0ENBYyQ0xBU0UzIENBIENlcnRp
ZmljYXRlIGlzc3VlZCBieSBodHRwOi8vd3d3Lmlwcy5lcy8wKQYJYIZIAYb4QgEC
BBwWGmh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvMDoGCWCGSAGG+EIBBAQtFito
dHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL2lwczIwMDJDTEFTRTMuY3JsMD8GCWCG
SAGG+EIBAwQyFjBodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL3Jldm9jYXRpb25D
TEFTRTMuaHRtbD8wPAYJYIZIAYb4QgEHBC8WLWh0dHA6Ly93d3cuaXBzLmVzL2lw
czIwMDIvcmVuZXdhbENMQVNFMy5odG1sPzA6BglghkgBhvhCAQgELRYraHR0cDov
L3d3dy5pcHMuZXMvaXBzMjAwMi9wb2xpY3lDTEFTRTMuaHRtbDBzBgNVHR8EbDBq
MDGgL6AthitodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL2lwczIwMDJDTEFTRTMu
Y3JsMDWgM6Axhi9odHRwOi8vd3d3YmFjay5pcHMuZXMvaXBzMjAwMi9pcHMyMDAy
Q0xBU0UzLmNybDAvBggrBgEFBQcBAQQjMCEwHwYIKwYBBQUHMAGGE2h0dHA6Ly9v
Y3NwLmlwcy5lcy8wDQYJKoZIhvcNAQEFBQADgYEAF2VcmZVDAyevJuXr0LMXI/dD
qsfwfewPxqmurpYPdikc4gYtfibFPPqhwYHOU7BC0ZdXGhd+pFFhxu7pXu8Fuuu9
D6eSb9ijBmgpjnn1/7/5p6/ksc7C0YBCJwUENPjDfxZ4IwwHJPJGR607VNCv1TGy
r33I6unUVtkOE7LFRVA=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="87753b0d.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFbDCCA1SgAwIBAgIBATANBgkqhkiG9w0BAQUFADBHMQswCQYDVQQGEwJVUzEWMBQGA1UEChMN
R2VvVHJ1c3QgSW5jLjEgMB4GA1UEAxMXR2VvVHJ1c3QgVW5pdmVyc2FsIENBIDIwHhcNMDQwMzA0
MDUwMDAwWhcNMjkwMzA0MDUwMDAwWjBHMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNR2VvVHJ1c3Qg
SW5jLjEgMB4GA1UEAxMXR2VvVHJ1c3QgVW5pdmVyc2FsIENBIDIwggIiMA0GCSqGSIb3DQEBAQUA
A4ICDwAwggIKAoICAQCzVFLByT7y2dyxUxpZKeexw0Uo5dfR7cXFS6GqdHtXr0om/Nj1XqduGdt0
DE81WzILAePb63p3NeqqWuDW6KFXlPCQo3RWlEQwAx5cTiuFJnSCegx2oG9NzkEtoBUGFF+3Qs17
j1hhNNwqCPkuwwGmIkQcTAeC5lvO0Ep8BNMZcyfwqph/Lq9O64ceJHdqXbboW0W63MOhBW9Wjo8Q
JqVJwy7XQYci4E+GymC16qFjwAGXEHm9ADwSbSsVsaxLse4YuU6W3Nx2/zu+z18DwPw76L5GG//a
QMJS9/7jOvdqdzXQ2o3rXhhqMcceujwbKNZrVMaqW9eiLBsZzKIC9ptZvTdrhrVtgrrY6slWvKk2
WP0+GfPtDCapkzj4T8FdIgbQl+rhrcZV4IErKIM6+vR7IVEAvlI4zs1meaj0gVbi0IMJR1FbUGrP
20gaXT73y/Zl92zxlfgCOzJWgjl6W70viRu/obTo/3+NjN8D8WBOWBFM66M/ECuDmgFz2ZRthAAn
ZqzwcEAJQpKtT5MNYQlRJNiS1QuUYbKHsu3/mjX/hVTK7URDrBs8FmtISgocQIgfksILAAX/8sgC
SqSqqcyZlpwvWOB94b67B9xfBHJcMTTD7F8t4D1kkCLm0ey4Lt1ZrtmhN79UNdxzMk+MBB4zsslG
8dhcyFVQyWi9qLo2CQIDAQABo2MwYTAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBR281Xh+qQ2
+/CfXGJx7Tz0RzgQKzAfBgNVHSMEGDAWgBR281Xh+qQ2+/CfXGJx7Tz0RzgQKzAOBgNVHQ8BAf8E
BAMCAYYwDQYJKoZIhvcNAQEFBQADggIBAGbBxiPz2eAubl/oz66wsCVNK/g7WJtAJDday6sWSf+z
dXkzoS9tcBc0kf5nfo/sm+VegqlVHy/c1FEHEv6sFj4sNcZj/NwQ6w2jqtB8zNHQL1EuxBRa3ugZ
4T7GzKQp5y6EqgYweHZUcyiYWTjgAA1i00J9IZ+uPTqM1fp3DRgrFg5fNuH8KrUwJM/gYwx7WBr+
mbpCErGR9Hxo4sjoryzqyX6uuyo9DRXcNJW2GHSoag/HtPQTxORb7QrSpJdMKu0vbBKJPfEncKpq
A1Ihn0CoZ1Dy81of398j9tx4TuaYT1U6U+Pv8vSfx3zYWK8pIpe44L2RLrB27FcRz+8pRPPphXpg
Y+RdM4kX2TGq2tbzGDVyz4crL2MjhF2EjD9XoIj8mZEoJmmZ1I+XRL6O1UixpCgp8RW04eWe3fiP
pm8m1wk8OhwRDqZsN/etRIcsKMfYdIKz0G9KV7s1KSegi+ghp4dkNl3M2Basx7InQJJVOCiNUW7d
FGdTbHFcJoRNdVq2fmBWqU2t+5sel/MN2dKXVHfaPRK34B7vCAas+YWH6aLcr34YEoP9VhdBLtUp
gn2Z9DH2canPLAEnpQW5qrJITirvn5NSUZU8UnOOVkwXQMAJKOSLakhT2+zNVVXxxvjpoixMptEm
X36vWkzaH6byHCx+rgIW0lbQL1dTR+iS
-----END CERTIFICATE-----

              ]]></file>
              <file Name="882de061.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDODCCAiCgAwIBAgIGIAYFFnACMA0GCSqGSIb3DQEBBQUAMDsxCzAJBgNVBAYTAlJPMREwDwYD
VQQKEwhjZXJ0U0lHTjEZMBcGA1UECxMQY2VydFNJR04gUk9PVCBDQTAeFw0wNjA3MDQxNzIwMDRa
Fw0zMTA3MDQxNzIwMDRaMDsxCzAJBgNVBAYTAlJPMREwDwYDVQQKEwhjZXJ0U0lHTjEZMBcGA1UE
CxMQY2VydFNJR04gUk9PVCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALczuX7I
JUqOtdu0KBuqV5Do0SLTZLrTk+jUrIZhQGpgV2hUhE28alQCBf/fm5oqrl0Hj0rDKH/v+yv6efHH
rfAQUySQi2bJqIirr1qjAOm+ukbuW3N7LBeCgV5iLKECZbO9xSsAfsT8AzNXDe3i+s5dRdY4zTW2
ssHQnIFKquSyAVwdj1+ZxLGt24gh65AIgoDzMKND5pCCrlUoSe1b16kQOA7+j0xbm0bqQfWwCHTD
0IgztnzXdN/chNFDDnU5oSVAKOp4yw4sLjmdjItuFhwvJoIQ4uNllAoEwF73XVv4EOLQunpL+943
AAAaWyjj0pxzPjKHmKHJUS/X3qwzs08CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8B
Af8EBAMCAcYwHQYDVR0OBBYEFOCMm9slSbPxfIbWskKHC9BroNnkMA0GCSqGSIb3DQEBBQUAA4IB
AQA+0hyJLjX8+HXd5n9liPRyTMks1zJO890ZeUe9jjtbkw9QSSQTaxQGcu8J06Gh40CEyecYMnQ8
SG4Pn0vU9x7Tk4ZkVJdjclDVVc/6IJMCopvDI5NOFlV2oHB5bc0hH88vLbwZ44gx+FkagQnIl6Z0
x2DEW8xXjrJ1/RsCCdtZb3KTafcxQdaIOL+Hsr0Wefmq5L6IJd1hJyMctTEHBDa0GpC9oHRxUIlt
vBTjD4au8as+x6AJzKNI0eDbZOeStc+vckNwi/nDhDwTqn6Sm1dTk/pwwpEOMfmbZ13pljheX7Nz
TogVZ96edhBiIL5VaZVDADlN9u6wWk5JRFRYX0KD
-----END CERTIFICATE-----

              ]]></file>
              <file Name="895cad1a.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDVTCCAj2gAwIBAgIESTMAATANBgkqhkiG9w0BAQUFADAyMQswCQYDVQQGEwJDTjEOMAwGA1UE
ChMFQ05OSUMxEzARBgNVBAMTCkNOTklDIFJPT1QwHhcNMDcwNDE2MDcwOTE0WhcNMjcwNDE2MDcw
OTE0WjAyMQswCQYDVQQGEwJDTjEOMAwGA1UEChMFQ05OSUMxEzARBgNVBAMTCkNOTklDIFJPT1Qw
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDTNfc/c3et6FtzF8LRb+1VvG7q6KR5smzD
o+/hn7E7SIX1mlwhIhAsxYLO2uOabjfhhyzcuQxauohV3/2q2x8x6gHx3zkBwRP9SFIhxFXf2tiz
VHa6dLG3fdfA6PZZxU3Iva0fFNrfWEQlMhkqx35+jq44sDB7R3IJMfAw28Mbdim7aXZOV/kbZKKT
VrdvmW7bCgScEeOAH8tjlBAKqeFkgjH5jCftppkA9nCTGPihNIaj3XrCGHn2emU1z5DrvTOTn1Or
czvmmzQgLx3vqR1jGqCA2wMv+SYahtKNu6m+UjqHZ0gNv7Sg2Ca+I19zN38m5pIEo3/PIKe38zrK
y5nLAgMBAAGjczBxMBEGCWCGSAGG+EIBAQQEAwIABzAfBgNVHSMEGDAWgBRl8jGtKvf33VKWCscC
wQ7vptU7ETAPBgNVHRMBAf8EBTADAQH/MAsGA1UdDwQEAwIB/jAdBgNVHQ4EFgQUZfIxrSr3991S
lgrHAsEO76bVOxEwDQYJKoZIhvcNAQEFBQADggEBAEs17szkrr/Dbq2flTtLP1se31cpolnKOOK5
Gv+e5m4y3R6u6jW39ZORTtpC4cMXYFDy0VwmuYK36m3knITnA3kXr5g9lNvHugDnuL8BV8F3RTIM
O/G0HAiw/VGgod2aHRM2mm23xzy54cXZF/qD1T0VoDy7HgviyJA/qIYM/PmLXoXLT1tLYhFHxUV8
BS9BsZ4QaRuZluBVeftOhpm4lNqGOGqTo+fLbuXf6iFViZx9fX+Y9QCJ7uOEwFyWtcVG6kbghVW2
G8kS1sHNzYDzAgE8yGnLRUhj2JTQ7IUOO04RZfSCjKY9ri4ilAnIXOo8gV0WKgOXFlUJ24pBgp5m
mxE=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="89c02a45.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIICiTCCAg+gAwIBAgIQH0evqmIAcFBUTAGem2OZKjAKBggqhkjOPQQDAzCBhTELMAkGA1UEBhMC
R0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UE
ChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBFQ0MgQ2VydGlmaWNhdGlvbiBB
dXRob3JpdHkwHhcNMDgwMzA2MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCBhTELMAkGA1UEBhMCR0Ix
GzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMR
Q09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBFQ0MgQ2VydGlmaWNhdGlvbiBBdXRo
b3JpdHkwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQDR3svdcmCFYX7deSRFtSrYpn1PlILBs5BAH+X
4QokPB0BBO490o0JlwzgdeT6+3eKKvUDYEs2ixYjFq0JcfRK9ChQtP6IHG4/bC8vCVlbpVsLM5ni
wz2J+Wos77LTBumjQjBAMB0GA1UdDgQWBBR1cacZSBm8nZ3qQUfflMRId5nTeTAOBgNVHQ8BAf8E
BAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAKBggqhkjOPQQDAwNoADBlAjEA7wNbeqy3eApyt4jf/7VG
FAkK+qDmfQjGGoe9GKhzvSbKYAydzpmfz1wPMOG+FDHqAjAU9JM8SaczepBGR7NjfRObTrdvGDeA
U/7dIOA1mjbRxwG55tzd8/8dLDoWV9mSOdY=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="8c24b137.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIJhjCCB26gAwIBAgIBCzANBgkqhkiG9w0BAQsFADCCAR4xPjA8BgNVBAMTNUF1dG9yaWRhZCBk
ZSBDZXJ0aWZpY2FjaW9uIFJhaXogZGVsIEVzdGFkbyBWZW5lem9sYW5vMQswCQYDVQQGEwJWRTEQ
MA4GA1UEBxMHQ2FyYWNhczEZMBcGA1UECBMQRGlzdHJpdG8gQ2FwaXRhbDE2MDQGA1UEChMtU2lz
dGVtYSBOYWNpb25hbCBkZSBDZXJ0aWZpY2FjaW9uIEVsZWN0cm9uaWNhMUMwQQYDVQQLEzpTdXBl
cmludGVuZGVuY2lhIGRlIFNlcnZpY2lvcyBkZSBDZXJ0aWZpY2FjaW9uIEVsZWN0cm9uaWNhMSUw
IwYJKoZIhvcNAQkBFhZhY3JhaXpAc3VzY2VydGUuZ29iLnZlMB4XDTEwMTIyODE2NTEwMFoXDTIw
MTIyNTIzNTk1OVowgdExJjAkBgkqhkiG9w0BCQEWF2NvbnRhY3RvQHByb2NlcnQubmV0LnZlMQ8w
DQYDVQQHEwZDaGFjYW8xEDAOBgNVBAgTB01pcmFuZGExKjAoBgNVBAsTIVByb3ZlZWRvciBkZSBD
ZXJ0aWZpY2Fkb3MgUFJPQ0VSVDE2MDQGA1UEChMtU2lzdGVtYSBOYWNpb25hbCBkZSBDZXJ0aWZp
Y2FjaW9uIEVsZWN0cm9uaWNhMQswCQYDVQQGEwJWRTETMBEGA1UEAxMKUFNDUHJvY2VydDCCAiIw
DQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANW39KOUM6FGqVVhSQ2oh3NekS1wwQYalNo97BVC
wfWMrmoX8Yqt/ICV6oNEolt6Vc5Pp6XVurgfoCfAUFM+jbnADrgV3NZs+J74BCXfgI8Qhd19L3uA
3VcAZCP4bsm+lU/hdezgfl6VzbHvvnpC2Mks0+saGiKLt38GieU89RLAu9MLmV+QfI4tL3czkkoh
RqipCKzx9hEC2ZUWno0vluYC3XXCFCpa1sl9JcLB/KpnheLsvtF8PPqv1W7/U0HU9TI4seJfxPmO
EO8GqQKJ/+MMbpfg353bIdD0PghpbNjU5Db4g7ayNo+c7zo3Fn2/omnXO1ty0K+qP1xmk6wKImG2
0qCZyFSTXai20b1dCl53lKItwIKOvMoDKjSuc/HUtQy9vmebVOvh+qBa7Dh+PsHMosdEMXXqP+UH
0quhJZb25uSgXTcYOWEAM11G1ADEtMo88aKjPvM6/2kwLkDd9p+cJsmWN63nOaK/6mnbVSKVUyqU
td+tFjiBdWbjxywbk5yqjKPK2Ww8F22c3HxT4CAnQzb5EuE8XL1mv6JpIzi4mWCZDlZTOpx+FIyw
Bm/xhnaQr/2v/pDGj59/i5IjnOcVdo/Vi5QTcmn7K2FjiO/mpF7moxdqWEfLcU8UC17IAggmosvp
r2uKGcfLFFb14dq12fy/czja+eevbqQ34gcnAgMBAAGjggMXMIIDEzASBgNVHRMBAf8ECDAGAQH/
AgEBMDcGA1UdEgQwMC6CD3N1c2NlcnRlLmdvYi52ZaAbBgVghl4CAqASDBBSSUYtRy0yMDAwNDAz
Ni0wMB0GA1UdDgQWBBRBDxk4qpl/Qguk1yeYVKIXTC1RVDCCAVAGA1UdIwSCAUcwggFDgBStuyId
xuDSAaj9dlBSk+2YwU2u06GCASakggEiMIIBHjE+MDwGA1UEAxM1QXV0b3JpZGFkIGRlIENlcnRp
ZmljYWNpb24gUmFpeiBkZWwgRXN0YWRvIFZlbmV6b2xhbm8xCzAJBgNVBAYTAlZFMRAwDgYDVQQH
EwdDYXJhY2FzMRkwFwYDVQQIExBEaXN0cml0byBDYXBpdGFsMTYwNAYDVQQKEy1TaXN0ZW1hIE5h
Y2lvbmFsIGRlIENlcnRpZmljYWNpb24gRWxlY3Ryb25pY2ExQzBBBgNVBAsTOlN1cGVyaW50ZW5k
ZW5jaWEgZGUgU2VydmljaW9zIGRlIENlcnRpZmljYWNpb24gRWxlY3Ryb25pY2ExJTAjBgkqhkiG
9w0BCQEWFmFjcmFpekBzdXNjZXJ0ZS5nb2IudmWCAQowDgYDVR0PAQH/BAQDAgEGME0GA1UdEQRG
MESCDnByb2NlcnQubmV0LnZloBUGBWCGXgIBoAwMClBTQy0wMDAwMDKgGwYFYIZeAgKgEgwQUklG
LUotMzE2MzUzNzMtNzB2BgNVHR8EbzBtMEagRKBChkBodHRwOi8vd3d3LnN1c2NlcnRlLmdvYi52
ZS9sY3IvQ0VSVElGSUNBRE8tUkFJWi1TSEEzODRDUkxERVIuY3JsMCOgIaAfhh1sZGFwOi8vYWNy
YWl6LnN1c2NlcnRlLmdvYi52ZTA3BggrBgEFBQcBAQQrMCkwJwYIKwYBBQUHMAGGG2h0dHA6Ly9v
Y3NwLnN1c2NlcnRlLmdvYi52ZTBBBgNVHSAEOjA4MDYGBmCGXgMBAjAsMCoGCCsGAQUFBwIBFh5o
dHRwOi8vd3d3LnN1c2NlcnRlLmdvYi52ZS9kcGMwDQYJKoZIhvcNAQELBQADggIBACtZ6yKZu4Sq
T96QxtGGcSOeSwORR3C7wJJg7ODU523G0+1ng3dS1fLld6c2suNUvtm7CpsR72H0xpkzmfWvADmN
g7+mvTV+LFwxNG9s2/NkAZiqlCxB3RWGymspThbASfzXg0gTB1GEMVKIu4YXx2sviiCtxQuPcD4q
uxtxj7mkoP3YldmvWb8lK5jpY5MvYB7Eqvh39YtsL+1+LrVPQA3uvFd359m21D+VJzog1eWuq2w1
n8GhHVnchIHuTQfiSLaeS5UtQbHh6N5+LwUeaO6/u5BlOsju6rEYNxxik6SgMexxbJHmpHmJWhSn
FFAFTKQAVzAswbVhltw+HoSvOULP5dAssSS830DD7X9jSr3hTxJkhpXzsOfIt+FTvZLm8wyWuevo
5pLtp4EJFAv8lXrPj9Y0TzYS3F7RNHXGRoAvlQSMx4bEqCaJqD8Zm4G7UaRKhqsLEQ+xrmNTbSjq
3TNWOByyrYDT13K9mmyZY+gAu0F2BbdbmRiKw7gSXFbPVgx96OLP7bx0R/vu0xdOIk9W/1DzLuY5
poLWccret9W6aAjtmcz9opLLabid+Qqkpj5PkygqYWwHJgD/ll9ohri4zspV4KuxPX+Y1zMOWj3Y
eMLEYC/HYvBhkdI4sPaeVdtAgAUSM84dkpvRabP/v/GSCmE1P93+hvS84Bpxs2Km
-----END CERTIFICATE-----

              ]]></file>
              <file Name="8d6437c3.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDljCCAn6gAwIBAgIQC5McOtY5Z+pnI7/Dr5r0SzANBgkqhkiG9w0BAQsFADBlMQswCQYDVQQG
EwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSQw
IgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgRzIwHhcNMTMwODAxMTIwMDAwWhcNMzgw
MTE1MTIwMDAwWjBlMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQL
ExB3d3cuZGlnaWNlcnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgRzIw
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDZ5ygvUj82ckmIkzTz+GoeMVSAn61UQbVH
35ao1K+ALbkKz3X9iaV9JPrjIgwrvJUXCzO/GU1BBpAAvQxNEP4HteccbiJVMWWXvdMX0h5i89vq
bFCMP4QMls+3ywPgym2hFEwbid3tALBSfK+RbLE4E9HpEgjAALAcKxHad3A2m67OeYfcgnDmCXRw
VWmvo2ifv922ebPynXApVfSr/5Vh88lAbx3RvpO704gqu52/clpWcTs/1PPRCv4o76Pu2ZmvA9OP
YLfykqGxvYmJHzDNw6YuYjOuFgJ3RFrngQo8p0Quebg/BLxcoIfhG69Rjs3sLPr4/m3wOnyqi+Rn
lTGNAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgGGMB0GA1UdDgQWBBTO
w0q5mVXyuNtgv6l+vVa1lzan1jANBgkqhkiG9w0BAQsFAAOCAQEAyqVVjOPIQW5pJ6d1Ee88hjZv
0p3GeDgdaZaikmkuOGybfQTUiaWxMTeKySHMq2zNixya1r9I0jJmwYrA8y8678Dj1JGG0VDjA9tz
d29KOVPt3ibHtX2vK0LRdWLjSisCx1BL4GnilmwORGYQRI+tBev4eaymG+g3NJ1TyWGqolKvSnAW
hsI6yLETcDbYz+70CjTVW0z9B5yiutkBclzzTcHdDrEcDcRjvq30FPuJ7KJBDkzMyFdA0G4Dqs0M
jomZmWzwPDCvON9vvKO+KSAnq3T/EyJ43pdSVR6DtVQgA+6uwE9W3jfMw3+qBCe703e4YtsXfJwo
IhNzbM8m9Yop5w==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="8f7b96c4.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDIDCCAomgAwIBAgIEN3DPtTANBgkqhkiG9w0BAQUFADBOMQswCQYDVQQGEwJV
UzEXMBUGA1UEChMORXF1aWZheCBTZWN1cmUxJjAkBgNVBAsTHUVxdWlmYXggU2Vj
dXJlIGVCdXNpbmVzcyBDQS0yMB4XDTk5MDYyMzEyMTQ0NVoXDTE5MDYyMzEyMTQ0
NVowTjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDkVxdWlmYXggU2VjdXJlMSYwJAYD
VQQLEx1FcXVpZmF4IFNlY3VyZSBlQnVzaW5lc3MgQ0EtMjCBnzANBgkqhkiG9w0B
AQEFAAOBjQAwgYkCgYEA5Dk5kx5SBhsoNviyoynF7Y6yEb3+6+e0dMKP/wXn2Z0G
vxLIPw7y1tEkshHe0XMJitSxLJgJDR5QRrKDpkWNYmi7hRsgcDKqQM2mll/EcTc/
BPO3QSQ5BxoeLmFYoBIL5aXfxavqN3HMHMg3OrmXUqesxWoklE6ce8/AatbfIb0C
AwEAAaOCAQkwggEFMHAGA1UdHwRpMGcwZaBjoGGkXzBdMQswCQYDVQQGEwJVUzEX
MBUGA1UEChMORXF1aWZheCBTZWN1cmUxJjAkBgNVBAsTHUVxdWlmYXggU2VjdXJl
IGVCdXNpbmVzcyBDQS0yMQ0wCwYDVQQDEwRDUkwxMBoGA1UdEAQTMBGBDzIwMTkw
NjIzMTIxNDQ1WjALBgNVHQ8EBAMCAQYwHwYDVR0jBBgwFoAUUJ4L6q9euSBIplBq
y/3YIHqngnYwHQYDVR0OBBYEFFCeC+qvXrkgSKZQasv92CB6p4J2MAwGA1UdEwQF
MAMBAf8wGgYJKoZIhvZ9B0EABA0wCxsFVjMuMGMDAgbAMA0GCSqGSIb3DQEBBQUA
A4GBAAyGgq3oThr1jokn4jVYPSm0B482UJW/bsGe68SQsoWou7dC4A8HOd/7npCy
0cE+U58DRLB+S/Rv5Hwf5+Kx5Lia78O9zt4LMjTZ3ijtM2vE1Nc9ElirfQkty3D1
E4qUoSek1nDFbZS1yX2doNLGCEnZZpum0/QL3MUmV+GRMOrN
-----END CERTIFICATE-----

              ]]></file>
              <file Name="8fe643df.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIH9zCCB2CgAwIBAgIBADANBgkqhkiG9w0BAQUFADCCARQxCzAJBgNVBAYTAkVT
MRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UE
ChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjErMCkGA1UE
ChQiaXBzQG1haWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEvMC0GA1UECxMm
SVBTIENBIENMQVNFQTEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxLzAtBgNVBAMT
JklQUyBDQSBDTEFTRUExIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MR4wHAYJKoZI
hvcNAQkBFg9pcHNAbWFpbC5pcHMuZXMwHhcNMDExMjI5MDEwNTMyWhcNMjUxMjI3
MDEwNTMyWjCCARQxCzAJBgNVBAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQ
BgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UEChMlSVBTIEludGVybmV0IHB1Ymxpc2hp
bmcgU2VydmljZXMgcy5sLjErMCkGA1UEChQiaXBzQG1haWwuaXBzLmVzIEMuSS5G
LiAgQi02MDkyOTQ1MjEvMC0GA1UECxMmSVBTIENBIENMQVNFQTEgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkxLzAtBgNVBAMTJklQUyBDQSBDTEFTRUExIENlcnRpZmlj
YXRpb24gQXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXMw
gZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBALsw19zQVL01Tp/FTILq0VA8R5j8
m2mdd81u4D/u6zJfX5/S0HnllXNEITLgCtud186Nq1KLK3jgm1t99P1tCeWu4Wwd
ByOgF9H5fahGRpEiqLJpxq339fWUoTCUvQDMRH/uxJ7JweaPCjbB/SQ9AaD1e+J8
eGZDi09Z8pvZ+kmzAgMBAAGjggRTMIIETzAdBgNVHQ4EFgQUZyaW56G/2LUDnf47
3P7yiuYV3TAwggFGBgNVHSMEggE9MIIBOYAUZyaW56G/2LUDnf473P7yiuYV3TCh
ggEcpIIBGDCCARQxCzAJBgNVBAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQ
BgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UEChMlSVBTIEludGVybmV0IHB1Ymxpc2hp
bmcgU2VydmljZXMgcy5sLjErMCkGA1UEChQiaXBzQG1haWwuaXBzLmVzIEMuSS5G
LiAgQi02MDkyOTQ1MjEvMC0GA1UECxMmSVBTIENBIENMQVNFQTEgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkxLzAtBgNVBAMTJklQUyBDQSBDTEFTRUExIENlcnRpZmlj
YXRpb24gQXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXOC
AQAwDAYDVR0TBAUwAwEB/zAMBgNVHQ8EBQMDB/+AMGsGA1UdJQRkMGIGCCsGAQUF
BwMBBggrBgEFBQcDAgYIKwYBBQUHAwMGCCsGAQUFBwMEBggrBgEFBQcDCAYKKwYB
BAGCNwIBFQYKKwYBBAGCNwIBFgYKKwYBBAGCNwoDAQYKKwYBBAGCNwoDBDARBglg
hkgBhvhCAQEEBAMCAAcwGgYDVR0RBBMwEYEPaXBzQG1haWwuaXBzLmVzMBoGA1Ud
EgQTMBGBD2lwc0BtYWlsLmlwcy5lczBCBglghkgBhvhCAQ0ENRYzQ0xBU0VBMSBD
QSBDZXJ0aWZpY2F0ZSBpc3N1ZWQgYnkgaHR0cDovL3d3dy5pcHMuZXMvMCkGCWCG
SAGG+EIBAgQcFhpodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyLzA7BglghkgBhvhC
AQQELhYsaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9pcHMyMDAyQ0xBU0VBMS5j
cmwwQAYJYIZIAYb4QgEDBDMWMWh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcmV2
b2NhdGlvbkNMQVNFQTEuaHRtbD8wPQYJYIZIAYb4QgEHBDAWLmh0dHA6Ly93d3cu
aXBzLmVzL2lwczIwMDIvcmVuZXdhbENMQVNFQTEuaHRtbD8wOwYJYIZIAYb4QgEI
BC4WLGh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcG9saWN5Q0xBU0VBMS5odG1s
MHUGA1UdHwRuMGwwMqAwoC6GLGh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvaXBz
MjAwMkNMQVNFQTEuY3JsMDagNKAyhjBodHRwOi8vd3d3YmFjay5pcHMuZXMvaXBz
MjAwMi9pcHMyMDAyQ0xBU0VBMS5jcmwwLwYIKwYBBQUHAQEEIzAhMB8GCCsGAQUF
BzABhhNodHRwOi8vb2NzcC5pcHMuZXMvMA0GCSqGSIb3DQEBBQUAA4GBAH66iqyA
AIQVCtWYUQxkxZwCWINmyq0eB81+atqAB98DNEock8RLWCA1NnHtogo1EqWmZaeF
aQoO42Hu6r4okzPV7Oi+xNtff6j5YzHIa5biKcJboOeXNp13XjFr/tOn2yrb25aL
H2betgPAK7N41lUH5Y85UN4HI3LmvSAUS7SG
-----END CERTIFICATE-----

              ]]></file>
              <file Name="91739615.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEAzCCAuugAwIBAgIQVID5oHPtPwBMyonY43HmSjANBgkqhkiG9w0BAQUFADB1MQswCQYDVQQG
EwJFRTEiMCAGA1UECgwZQVMgU2VydGlmaXRzZWVyaW1pc2tlc2t1czEoMCYGA1UEAwwfRUUgQ2Vy
dGlmaWNhdGlvbiBDZW50cmUgUm9vdCBDQTEYMBYGCSqGSIb3DQEJARYJcGtpQHNrLmVlMCIYDzIw
MTAxMDMwMTAxMDMwWhgPMjAzMDEyMTcyMzU5NTlaMHUxCzAJBgNVBAYTAkVFMSIwIAYDVQQKDBlB
UyBTZXJ0aWZpdHNlZXJpbWlza2Vza3VzMSgwJgYDVQQDDB9FRSBDZXJ0aWZpY2F0aW9uIENlbnRy
ZSBSb290IENBMRgwFgYJKoZIhvcNAQkBFglwa2lAc2suZWUwggEiMA0GCSqGSIb3DQEBAQUAA4IB
DwAwggEKAoIBAQDIIMDs4MVLqwd4lfNE7vsLDP90jmG7sWLqI9iroWUyeuuOF0+W2Ap7kaJjbMeM
TC55v6kF/GlclY1i+blw7cNRfdCT5mzrMEvhvH2/UpvObntl8jixwKIy72KyaOBhU8E2lf/slLo2
rpwcpzIP5Xy0xm90/XsY6KxX7QYgSzIwWFv9zajmofxwvI6Sc9uXp3whrj3B9UiHbCe9nyV0gVWw
93X2PaRka9ZP585ArQ/dMtO8ihJTmMmJ+xAdTX7Nfh9WDSFwhfYggx/2uh8Ej+p3iDXE/+pOoYtN
P2MbRMNE1CV2yreN1x5KZmTNXMWcg+HCCIia7E6j8T4cLNlsHaFLAgMBAAGjgYowgYcwDwYDVR0T
AQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFBLyWj7qVhy/zQas8fElyalL1BSZ
MEUGA1UdJQQ+MDwGCCsGAQUFBwMCBggrBgEFBQcDAQYIKwYBBQUHAwMGCCsGAQUFBwMEBggrBgEF
BQcDCAYIKwYBBQUHAwkwDQYJKoZIhvcNAQEFBQADggEBAHv25MANqhlHt01Xo/6tu7Fq1Q+e2+Rj
xY6hUFaTlrg4wCQiZrxTFGGVv9DHKpY5P30osxBAIWrEr7BSdxjhlthWXePdNl4dp1BUoMUq5KqM
lIpPnTX/dqQGE5Gion0ARD9V04I8GtVbvFZMIi5GQ4okQC3zErg7cBqklrkar4dBGmoYDQZPxz5u
uSlNDUmJEYcyW+ZLBMjkXOZ0c5RdFpgTlf7727FE5TpwrDdr5rMzcijJs1eg9gIWiAYLtqZLICjU
3j2LrTcFU3T+bsy8QxdxXvnFzBqpYe73dgzzcvRyrc9yAjYHR8/vGVCJYMzpJJUPwssd8m92kMfM
dcGWxZ0=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="9339512a.0"><![CDATA[
-----BEGIN CERTIFICATE-----
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
-----END CERTIFICATE-----

              ]]></file>
              <file Name="95750816.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDzTCCAzagAwIBAgIQU2GyYK7bcY6nlLMTM/QHCTANBgkqhkiG9w0BAQUFADCB
wTELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMTwwOgYDVQQL
EzNDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5
IC0gRzIxOjA4BgNVBAsTMShjKSAxOTk4IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1
dGhvcml6ZWQgdXNlIG9ubHkxHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdv
cmswHhcNMDAwOTI2MDAwMDAwWhcNMTAwOTI1MjM1OTU5WjCBpTEXMBUGA1UEChMO
VmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdvcmsx
OzA5BgNVBAsTMlRlcm1zIG9mIHVzZSBhdCBodHRwczovL3d3dy52ZXJpc2lnbi5j
b20vcnBhIChjKTAwMSwwKgYDVQQDEyNWZXJpU2lnbiBUaW1lIFN0YW1waW5nIEF1
dGhvcml0eSBDQTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA0hmdZ8IAIVli
zrQJIkRpivglWtvtDbc2fk7gu5Q+kCWHwmFHKdm9VLhjzCx9abQzNvQ3B5rB3UBU
/OB4naCTuQk9I1F/RMIUdNsKvsvJMDRAmD7Q1yUQgZS9B0+c1lQn3y6ov8uQjI11
S7zi6ESHzeZBCiVu6PQkAsVSD27smHUCAwEAAaOB3zCB3DAPBgNVHRMECDAGAQH/
AgEAMEUGA1UdIAQ+MDwwOgYMYIZIAYb4RQEHFwEDMCowKAYIKwYBBQUHAgEWHGh0
dHBzOi8vd3d3LnZlcmlzaWduLmNvbS9ycGEwMQYDVR0fBCowKDAmoCSgIoYgaHR0
cDovL2NybC52ZXJpc2lnbi5jb20vcGNhMy5jcmwwCwYDVR0PBAQDAgEGMEIGCCsG
AQUFBwEBBDYwNDAyBggrBgEFBQcwAaYmFiRodHRwOi8vb2NzcC52ZXJpc2lnbi5j
b20vb2NzcC9zdGF0dXMwDQYJKoZIhvcNAQEFBQADgYEAgnBold+2DcIBcBlK0lRW
HqzyRUyHuPU163hLBanInTsZIS5wNEqi9YngFXVF5yg3ADQnKeg3S/LvRJdrF1Ea
w1adPBqK9kpGRjeM+sv1ZFo4aC4cw+9wzrhGBha/937ntag+RaypJXUie28/sJyU
58dzq6wf7iWbwBbtt8pb8BQ=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="9576d26b.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFaTCCA1GgAwIBAgIJAJK4iNuwisFjMA0GCSqGSIb3DQEBCwUAMFIxCzAJBgNVBAYTAlNLMRMw
EQYDVQQHEwpCcmF0aXNsYXZhMRMwEQYDVQQKEwpEaXNpZyBhLnMuMRkwFwYDVQQDExBDQSBEaXNp
ZyBSb290IFIyMB4XDTEyMDcxOTA5MTUzMFoXDTQyMDcxOTA5MTUzMFowUjELMAkGA1UEBhMCU0sx
EzARBgNVBAcTCkJyYXRpc2xhdmExEzARBgNVBAoTCkRpc2lnIGEucy4xGTAXBgNVBAMTEENBIERp
c2lnIFJvb3QgUjIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCio8QACdaFXS1tFPbC
w3OeNcJxVX6B+6tGUODBfEl45qt5WDza/3wcn9iXAng+a0EE6UG9vgMsRfYvZNSrXaNHPWSb6Wia
xswbP7q+sos0Ai6YVRn8jG+qX9pMzk0DIaPY0jSTVpbLTAwAFjxfGs3Ix2ymrdMxp7zo5eFm1tL7
A7RBZckQrg4FY8aAamkw/dLukO8NJ9+flXP04SXabBbeQTg06ov80egEFGEtQX6sx3dOy1FU+16S
GBsEWmjGycT6txOgmLcRK7fWV8x8nhfRyyX+hk4kLlYMeE2eARKmK6cBZW58Yh2EhN/qwGu1pSqV
g8NTEQxzHQuyRpDRQjrOQG6Vrf/GlK1ul4SOfW+eioANSW1z4nuSHsPzwfPrLgVv2RvPN3YEyLRa
5Beny912H9AZdugsBbPWnDTYltxhh5EF5EQIM8HauQhl1K6yNg3ruji6DOWbnuuNZt2Zz9aJQfYE
koopKW1rOhzndX0CcQ7zwOe9yxndnWCywmZgtrEE7snmhrmaZkCo5xHtgUUDi/ZnWejBBhG93c+A
Ak9lQHhcR1DIm+YfgXvkRKhbhZri3lrVx/k6RGZL5DJUfORsnLMOPReisjQS1n6yqEm70XooQL6i
Fh/f5DcfEXP7kAplQ6INfPgGAVUzfbANuPT1rqVCV3w2EYx7XsQDnYx5nQIDAQABo0IwQDAPBgNV
HRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUtZn4r7CU9eMg1gqtzk5WpC5u
Qu0wDQYJKoZIhvcNAQELBQADggIBACYGXnDnZTPIgm7ZnBc6G3pmsgH2eDtpXi/q/075KMOYKmFM
tCQSin1tERT3nLXK5ryeJ45MGcipvXrA1zYObYVybqjGom32+nNjf7xueQgcnYqfGopTpti72TVV
sRHFqQOzVju5hJMiXn7B9hJSi+osZ7z+Nkz1uM/Rs0mSO9MpDpkblvdhuDvEK7Z4bLQjb/D907Je
dR+Zlais9trhxTF7+9FGs9K8Z7RiVLoJ92Owk6Ka+elSLotgEqv89WBW7xBci8QaQtyDW2QOy7W8
1k/BfDxujRNt+3vrMNDcTa/F1balTFtxyegxvug4BkihGuLq0t4SOVga/4AOgnXmt8kHbA7v/zjx
mHHEt38OFdAlab0inSvtBfZGR6ztwPDUO+Ls7pZbkBNOHlY667DvlruWIxG68kOGdGSVyCh13x01
utI3gzhTODY7z2zp+WsO0PsE6E9312UBeIYMej4hYvF/Y3EMyZ9E26gnonW+boE+18DrG5gPcFw0
sorMwIUY6256s/daoQe/qUKS82Ail+QUoQebTnbAjn39pCXHR+3/H3OszMOl6W8KjptlwlCFtaOg
UxLMVYdh84GuEEZhvUQhuMI9dM9+JDX6HAcOmz0iyu8xL4ysEr3vQCj8KWefshNPZiTEUxnpHikV
7+ZtsH8tZ/3zbBt1RqPlShfppNcL
-----END CERTIFICATE-----

              ]]></file>
              <file Name="95aff9e3.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDuzCCAqOgAwIBAgIDBETAMA0GCSqGSIb3DQEBBQUAMH4xCzAJBgNVBAYTAlBMMSIwIAYDVQQK
ExlVbml6ZXRvIFRlY2hub2xvZ2llcyBTLkEuMScwJQYDVQQLEx5DZXJ0dW0gQ2VydGlmaWNhdGlv
biBBdXRob3JpdHkxIjAgBgNVBAMTGUNlcnR1bSBUcnVzdGVkIE5ldHdvcmsgQ0EwHhcNMDgxMDIy
MTIwNzM3WhcNMjkxMjMxMTIwNzM3WjB+MQswCQYDVQQGEwJQTDEiMCAGA1UEChMZVW5pemV0byBU
ZWNobm9sb2dpZXMgUy5BLjEnMCUGA1UECxMeQ2VydHVtIENlcnRpZmljYXRpb24gQXV0aG9yaXR5
MSIwIAYDVQQDExlDZXJ0dW0gVHJ1c3RlZCBOZXR3b3JrIENBMIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEA4/t9o3K6wvDJFIf1awFO4W5AB7ptJ11/91sts1rHUV+rpDKmYYe2bg+G0jAC
l/jXaVehGDldamR5xgFZrDwxSjh80gTSSyjoIF87B6LMTXPb865Px1bVWqeWifrzq2jUI4ZZJ88J
J7ysbnKDHDBy3+Ci6dLhdHUZvSqeexVUBBvXQzmtVSjF4hq79MDkrjhJM8x2hZ85RdKknvISjFH4
fOQtf/WsX+sWn7Et0brMkUJ3TCXJkDhv2/DM+44el1k+1WBO5gUo7Ul5E0u6SNsv+XLTOcr+H9g0
cvW0QM8xAcPs3hEtF10fuFDRXhmnad4HMyjKUJX5p1TLVIZQRan5SQIDAQABo0IwQDAPBgNVHRMB
Af8EBTADAQH/MB0GA1UdDgQWBBQIds3LB/8k9sXN7buQvOKEN0Z19zAOBgNVHQ8BAf8EBAMCAQYw
DQYJKoZIhvcNAQEFBQADggEBAKaorSLOAT2mo/9i0Eidi15ysHhE49wcrwn9I0j6vSrEuVUEtRCj
jSfeC4Jj0O7eDDd5QVsisrCaQVymcODU0HfLI9MA4GxWL+FpDQ3Zqr8hgVDZBqWo/5U30Kr+4rP1
mS1FhIrlQgnXdAIv94nYmem8J9RHjboNRhx3zxSkHLmkMcScKHQDNP8zGSal6Q10tz6XxnboJ5aj
Zt3hrvJBW8qYVoNzcOSGGtIxQbovvi0TWnZvTuhOgQ4/WwMioBK+ZlgRSssDxLQqKi2WF+A5VLxI
03YnnZotBqbJ7DnSq9ufmgsnAjUpsUCV5/nonFWIGUbWtzT1fs45mtk48VH3Tyw=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="961f5451.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFdjCCA16gAwIBAgIQXmjWEXGUY1BWAGjzPsnFkTANBgkqhkiG9w0BAQUFADBVMQswCQYDVQQG
EwJDTjEaMBgGA1UEChMRV29TaWduIENBIExpbWl0ZWQxKjAoBgNVBAMTIUNlcnRpZmljYXRpb24g
QXV0aG9yaXR5IG9mIFdvU2lnbjAeFw0wOTA4MDgwMTAwMDFaFw0zOTA4MDgwMTAwMDFaMFUxCzAJ
BgNVBAYTAkNOMRowGAYDVQQKExFXb1NpZ24gQ0EgTGltaXRlZDEqMCgGA1UEAxMhQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkgb2YgV29TaWduMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA
vcqNrLiRFVaXe2tcesLea9mhsMMQI/qnobLMMfo+2aYpbxY94Gv4uEBf2zmoAHqLoE1UfcIiePyO
CbiohdfMlZdLdNiefvAA5A6JrkkoRBoQmTIPJYhTpA2zDxIIFgsDcSccf+Hb0v1naMQFXQoOXXDX
2JegvFNBmpGN9J42Znp+VsGQX+axaCA2pIwkLCxHC1l2ZjC1vt7tj/id07sBMOby8w7gLJKA84X5
KIq0VC6a7fd2/BVoFutKbOsuEo/Uz/4Mx1wdC34FMr5esAkqQtXJTpCzWQ27en7N1QhatH/YHGkR
+ScPewavVIMYe+HdVHpRaG53/Ma/UkpmRqGyZxq7o093oL5d//xWC0Nyd5DKnvnyOfUNqfTq1+ez
EC8wQjchzDBwyYaYD8xYTYO7feUapTeNtqwylwA6Y3EkHp43xP901DfA4v6IRmAR3Qg/UDaruHqk
lWJqbrDKaiFaafPz+x1wOZXzp26mgYmhiMU7ccqjUu6Du/2gd/Tkb+dC221KmYo0SLwX3OSACCK2
8jHAPwQ+658geda4BmRkAjHXqc1S+4RFaQkAKtxVi8QGRkvASh0JWzko/amrzgD5LkhLJuYwTKVY
yrREgk/nkR4zw7CT/xH8gdLKH3Ep3XZPkiWvHYG3Dy+MwwbMLyejSuQOmbp8HkUff6oZRZb9/D0C
AwEAAaNCMEAwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFOFmzw7R
8bNLtwYgFP6HEtX2/vs+MA0GCSqGSIb3DQEBBQUAA4ICAQCoy3JAsnbBfnv8rWTjMnvMPLZdRtP1
LOJwXcgu2AZ9mNELIaCJWSQBnfmvCX0KI4I01fx8cpm5o9dU9OpScA7F9dY74ToJMuYhOZO9sxXq
T2r09Ys/L3yNWC7F4TmgPsc9SnOeQHrAK2GpZ8nzJLmzbVUsWh2eJXLOC62qx1ViC777Y7NhRCOj
y+EaDveaBk3e1CNOIZZbOVtXHS9dCF4Jef98l7VNg64N1uajeeAz0JmWAjCnPv/So0M/BVoG6kQC
2nz4SNAzqfkHx5Xh9T71XXG68pWpdIhhWeO/yloTunK0jF02h+mmxTwTv97QRCbut+wucPrXnbes
5cVAWubXbHssw1abR80LzvobtCHXt2a49CUwi1wNuepnsvRtrtWhnk/Yn+knArAdBtaP4/tIEp9/
EaEQPkxROpaw0RPxx9gmrjrKkcRpnd8BKWRRb2jaFOwIQZeQjdCygPLPwj2/kWjFgGcexGATVdVh
mVd8upUPYUk6ynW8yQqTP2cOEvIo4jEbwFcW3wh8GcF+Dx+FHgo2fFt+J7x6v+Db9NpSvd4MVHAx
kUOVyLzwPt0JfjBkUO1/AaQzZ01oT74V77D2AhGiGxMlOtzCWfHjXEa7ZywCRuoeSKbmW9m1vFGi
kpbbqsY3Iqb+zCB0oy2pLmvLwIIRIbWTee5Ehr7XHuQe+w==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="9685a493.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDMDCCAhigAwIBAgICA+gwDQYJKoZIhvcNAQEFBQAwRzELMAkGA1UEBhMCSEsxFjAUBgNVBAoT
DUhvbmdrb25nIFBvc3QxIDAeBgNVBAMTF0hvbmdrb25nIFBvc3QgUm9vdCBDQSAxMB4XDTAzMDUx
NTA1MTMxNFoXDTIzMDUxNTA0NTIyOVowRzELMAkGA1UEBhMCSEsxFjAUBgNVBAoTDUhvbmdrb25n
IFBvc3QxIDAeBgNVBAMTF0hvbmdrb25nIFBvc3QgUm9vdCBDQSAxMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEArP84tulmAknjorThkPlAj3n54r15/gK97iSSHSL22oVyaf7XPwnU3ZG1
ApzQjVrhVcNQhrkpJsLj2aDxaQMoIIBFIi1WpztUlVYiWR8o3x8gPW2iNr4joLFutbEnPzlTCeqr
auh0ssJlXI6/fMN4hM2eFvz1Lk8gKgifd/PFHsSaUmYeSF7jEAaPIpjhZY4bXSNmO7ilMlHIhqqh
qZ5/dpTCpmy3QfDVyAY45tQM4vM7TG1QjMSDJ8EThFk9nnV0ttgCXjqQesBCNnLsak3c78QA3xMY
V18meMjWCnl3v/evt3a5pQuEF10Q6m/hq5URX208o1xNg1vysxmKgIsLhwIDAQABoyYwJDASBgNV
HRMBAf8ECDAGAQH/AgEDMA4GA1UdDwEB/wQEAwIBxjANBgkqhkiG9w0BAQUFAAOCAQEADkbVPK7i
h9legYsCmEEIjEy82tvuJxuC52pF7BaLT4Wg87JwvVqWuspube5Gi27nKi6Wsxkz67SfqLI37pio
l7Yutmcn1KZJ/RyTZXaeQi/cImyaT/JaFTmxcdcrUehtHJjA2Sr0oYJ71clBoiMBdDhViw+5Lmei
IAQ32pwL0xch4I+XeTRvhEgCIDMb5jREn5Fw9IBehEPCKdJsEhTkYY2sEJCehFC78JZvRZ+K88ps
T/oROhUVRsPNH4NbLUES7VBnQRM9IauUiqpOfMGx+6fWtScvl6tu4B3i0RwsH0Ti/L6RoZz71ilT
c4afU9hDDl3WY4JxHYB0yvbiAmvZWg==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="9772ca32.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDfDCCAmSgAwIBAgIQGKy1av1pthU6Y2yv2vrEoTANBgkqhkiG9w0BAQUFADBYMQswCQYDVQQG
EwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjExMC8GA1UEAxMoR2VvVHJ1c3QgUHJpbWFyeSBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNjExMjcwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMFgx
CzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTEwLwYDVQQDEyhHZW9UcnVzdCBQ
cmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
CgKCAQEAvrgVe//UfH1nrYNke8hCUy3f9oQIIGHWAVlqnEQRr+92/ZV+zmEwu3qDXwK9AWbK7hWN
b6EwnL2hhZ6UOvNWiAAxz9juapYC2e0DjPt1befquFUWBRaa9OBesYjAZIVcFU2Ix7e64HXprQU9
nceJSOC7KMgD4TCTZF5SwFlwIjVXiIrxlQqD17wxcwE07e9GceBrAqg1cmuXm2bgyxx5X9gaBGge
RwLmnWDiNpcB3841kt++Z8dtd1k7j53WkBWUvEI0EME5+bEnPn7WinXFsq+W06Lem+SYvn3h6YGt
tm/81w7a4DSwDRp35+MImO9Y+pyEtzavwt+s0vQQBnBxNQIDAQABo0IwQDAPBgNVHRMBAf8EBTAD
AQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQULNVQQZcVi/CPNmFbSvtr2ZnJM5IwDQYJKoZI
hvcNAQEFBQADggEBAFpwfyzdtzRP9YZRqSa+S7iq8XEN3GHHoOo0Hnp3DwQ16CePbJC/kRYkRj5K
Ts4rFtULUh38H2eiAkUxT87z+gOneZ1TatnaYzr4gNfTmeGl4b7UVXGYNTq+k+qurUKykG/g/CFN
NWMziUnWm07Kx+dOCQD32sfvmWKZd7aVIl6KoKv0uHiYyjgZmclynnjNS6yvGaBzEi38wkG6gZHa
Floxt/m0cYASSJlyc1pZU8FjUjPtp8nSOQJw+uCxQmYpqptR7TBUIhRf2asdweSU8Pj1K/fqynhG
1riR/aYNKxoUAT6A8EKglQdebc3MS6RFjasS6LPeWuWgfOgPIh1a6Vk=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="97b4211c.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYD
VQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJv
b3QwHhcNOTYwMjIzMjMwMTAwWhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJV
UzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMRwwGgYDVQQDExNHVEUgQ3liZXJU
cnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC45k+625h8cXyv
RLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH6X4M
ypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/5
1KiOQswkwB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKz
dcZfHeFhVYAA1IFLezEPI2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWl
IjeaY8JIILTbcuPI9tl8vrGvU9oUtCG41tWW4/5ODFlitppK+ULdjG+BqXH/9Apy
bW1EDp3zdHSo1TRJ6V6e6bR64eVaH4QwnNOfpSXY
-----END CERTIFICATE-----

              ]]></file>
              <file Name="9ab62355.0"><![CDATA[
-----BEGIN CERTIFICATE-----
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
l8PVP3wbI+2ksx0WckNLIOFZfsLorSa/ovc=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="9d6523ce.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFsDCCA5igAwIBAgIQFci9ZUdcr7iXAF7kBtK8nTANBgkqhkiG9w0BAQUFADBeMQswCQYDVQQG
EwJUVzEjMCEGA1UECgwaQ2h1bmdod2EgVGVsZWNvbSBDby4sIEx0ZC4xKjAoBgNVBAsMIWVQS0kg
Um9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNDEyMjAwMjMxMjdaFw0zNDEyMjAwMjMx
MjdaMF4xCzAJBgNVBAYTAlRXMSMwIQYDVQQKDBpDaHVuZ2h3YSBUZWxlY29tIENvLiwgTHRkLjEq
MCgGA1UECwwhZVBLSSBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIICIjANBgkqhkiG9w0B
AQEFAAOCAg8AMIICCgKCAgEA4SUP7o3biDN1Z82tH306Tm2d0y8U82N0ywEhajfqhFAHSyZbCUNs
IZ5qyNUD9WBpj8zwIuQf5/dqIjG3LBXy4P4AakP/h2XGtRrBp0xtInAhijHyl3SJCRImHJ7K2RKi
lTza6We/CKBk49ZCt0Xvl/T29de1ShUCWH2YWEtgvM3XDZoTM1PRYfl61dd4s5oz9wCGzh1NlDiv
qOx4UXCKXBCDUSH3ET00hl7lSM2XgYI1TBnsZfZrxQWh7kcT1rMhJ5QQCtkkO7q+RBNGMD+XPNjX
12ruOzjjK9SXDrkb5wdJfzcq+Xd4z1TtW0ado4AOkUPB1ltfFLqfpo0kR0BZv3I4sjZsN/+Z0V0O
WQqraffAsgRFelQArr5T9rXn4fg8ozHSqf4hUmTFpmfwdQcGlBSBVcYn5AGPF8Fqcde+S/uUWH1+
ETOxQvdibBjWzwloPn9s9h6PYq2lY9sJpx8iQkEeb5mKPtf5P0B6ebClAZLSnT0IFaUQAS2zMnao
lQ2zepr7BxB4EW/hj8e6DyUadCrlHJhBmd8hh+iVBmoKs2pHdmX2Os+PYhcZewoozRrSgx4hxyy/
vv9haLdnG7t4TY3OZ+XkwY63I2binZB1NJipNiuKmpS5nezMirH4JYlcWrYvjB9teSSnUmjDhDXi
Zo1jDiVN1Rmy5nk3pyKdVDECAwEAAaNqMGgwHQYDVR0OBBYEFB4M97Zn8uGSJglFwFU5Lnc/Qkqi
MAwGA1UdEwQFMAMBAf8wOQYEZyoHAAQxMC8wLQIBADAJBgUrDgMCGgUAMAcGBWcqAwAABBRFsMLH
ClZ87lt4DJX5GFPBphzYEDANBgkqhkiG9w0BAQUFAAOCAgEACbODU1kBPpVJufGBuvl2ICO1J2B0
1GqZNF5sAFPZn/KmsSQHRGoqxqWOeBLoR9lYGxMqXnmbnwoqZ6YlPwZpVnPDimZI+ymBV3QGypzq
KOg4ZyYr8dW1P2WT+DZdjo2NQCCHGervJ8A9tDkPJXtoUHRVnAxZfVo9QZQlUgjgRywVMRnVvwdV
xrsStZf0X4OFunHB2WyBEXYKCrC/gpf36j36+uwtqSiUO1bd0lEursC9CBWMd1I0ltabrNMdjmEP
NXubrjlpC2JgQCA2j6/7Nu4tCEoduL+bXPjqpRugc6bY+G7gMwRfaKonh+3ZwZCc7b3jajWvY9+r
GNm65ulK6lCKD2GTHuItGeIwlDWSXQ62B68ZgI9HkFFLLk3dheLSClIKF5r8GrBQAuUBo2M3IUxE
xJtRmREOc5wGj1QupyheRDmHVi03vYVElOEMSyycw5KFNGHLD7ibSkNS/jQ6fbjpKdx2qcgw+BRx
gMYeNkh0IkFch4LoGHGLQYlE535YW6i4jRPpp2zDR+2zGp1iro2C6pSe3VkQw63d4k3jMdXH7Ojy
sP6SHhYKGvzZ8/gntsm+HbRsZJB/9OTEW9c3rkIO3aQab3yIVMUWbuF6aC74Or8NpDyJO3inTmOD
BCEIZ43ygknQW/2xzQ+DhNQ+IIX3Sj0rnP0qCglN6oH4EZw=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="9dbefe7b.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDfTCCAmWgAwIBAgIBADANBgkqhkiG9w0BAQUFADBgMQswCQYDVQQGEwJKUDElMCMGA1UEChMc
U0VDT00gVHJ1c3QgU3lzdGVtcyBDTy4sTFRELjEqMCgGA1UECxMhU2VjdXJpdHkgQ29tbXVuaWNh
dGlvbiBFViBSb290Q0ExMB4XDTA3MDYwNjAyMTIzMloXDTM3MDYwNjAyMTIzMlowYDELMAkGA1UE
BhMCSlAxJTAjBgNVBAoTHFNFQ09NIFRydXN0IFN5c3RlbXMgQ08uLExURC4xKjAoBgNVBAsTIVNl
Y3VyaXR5IENvbW11bmljYXRpb24gRVYgUm9vdENBMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
AQoCggEBALx/7FebJOD+nLpCeamIivqA4PUHKUPqjgo0No0c+qe1OXj/l3X3L+SqawSERMqm4miO
/VVQYg+kcQ7OBzgtQoVQrTyWb4vVog7P3kmJPdZkLjjlHmy1V4qe70gOzXppFodEtZDkBp2uoQSX
WHnvIEqCa4wiv+wfD+mEce3xDuS4GBPMVjZd0ZoeUWs5bmB2iDQL87PRsJ3KYeJkHcFGB7hj3R4z
ZbOOCVVSPbW9/wfrrWFVGCypaZhKqkDFMxRldAD5kd6vA0jFQFTcD4SQaCDFkpbcLuUCRarAX1T4
bepJz11sS6/vmsJWXMY1VkJqMF/Cq/biPT+zyRGPMUzXn0kCAwEAAaNCMEAwHQYDVR0OBBYEFDVK
9U2vP9eCOKyrcWUXdYydVZPmMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MA0GCSqG
SIb3DQEBBQUAA4IBAQCoh+ns+EBnXcPBZsdAS5f8hxOQWsTvoMpfi7ent/HWtWS3irO4G8za+6xm
iEHO6Pzk2x6Ipu0nUBsCMCRGef4Eh3CXQHPRwMFXGZpppSeZq51ihPZRwSzJIxXYKLerJRO1RuGG
Av8mjMSIkh1W/hln8lXkgKNrnKt34VFxDSDbEJrbvXZ5B3eZKK2aXtqxT0QsNY6llsf9g/BYxnnW
mHyojf6GPgcWkuF75x3sM3Z+Qi5KhfmRiWiEA4Glm5q+4zfFVKtWOxgtQaQM+ELbmaDgcm+7XeEW
T1MKZPlO9L9OVL14bIjqv5wTJMJwaaJ/D8g8rQjJsJhAoyrniIPtd490
-----END CERTIFICATE-----

              ]]></file>
              <file Name="9ec3a561.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEojCCA4qgAwIBAgIQRL4Mi1AAJLQR0zYlJWfJiTANBgkqhkiG9w0BAQUFADCB
rjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug
Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho
dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xNjA0BgNVBAMTLVVUTi1VU0VSRmlyc3Qt
Q2xpZW50IEF1dGhlbnRpY2F0aW9uIGFuZCBFbWFpbDAeFw05OTA3MDkxNzI4NTBa
Fw0xOTA3MDkxNzM2NThaMIGuMQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQxFzAV
BgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5l
dHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cudXNlcnRydXN0LmNvbTE2MDQGA1UE
AxMtVVROLVVTRVJGaXJzdC1DbGllbnQgQXV0aGVudGljYXRpb24gYW5kIEVtYWls
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsjmFpPJ9q0E7YkY3rs3B
YHW8OWX5ShpHornMSMxqmNVNNRm5pELlzkniii8efNIxB8dOtINknS4p1aJkxIW9
hVE1eaROaJB7HHqkkqgX8pgV8pPMyaQylbsMTzC9mKALi+VuG6JG+ni8om+rWV6l
L8/K2m2qL+usobNqqrcuZzWLeeEeaYji5kbNoKXqvgvOdjp6Dpvq/NonWz1zHyLm
SGHGTPNpsaguG7bUMSAsvIKKjqQOpdeJQ/wWWq8dcdcRWdq6hw2v+vPhwvCkxWeM
1tZUOt4KpLoDd7NlyP0e03RiqhjKaJMeoYV+9Udly/hNVyh00jT/MLbu9mIwFIws
6wIDAQABo4G5MIG2MAsGA1UdDwQEAwIBxjAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud
DgQWBBSJgmd9xJ0mcABLtFBIfN49rgRufTBYBgNVHR8EUTBPME2gS6BJhkdodHRw
Oi8vY3JsLnVzZXJ0cnVzdC5jb20vVVROLVVTRVJGaXJzdC1DbGllbnRBdXRoZW50
aWNhdGlvbmFuZEVtYWlsLmNybDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUH
AwQwDQYJKoZIhvcNAQEFBQADggEBALFtYV2mGn98q0rkMPxTbyUkxsrt4jFcKw7u
7mFVbwQ+zznexRtJlOTrIEy05p5QLnLZjfWqo7NK2lYcYJeA3IKirUq9iiv/Cwm0
xtcgBEXkzYABurorbs6q15L+5K/r9CYdFip/bDCVNy8zEqx/3cfREYxRmLLQo5HQ
rfafnoOTHh1CuEava2bwm3/q4wMC5QJRwarVNZ1yQAOJujEdxRBoUp7fooXFXAim
eOZTT7Hot9MUnpOmw2TjrH5xzbyf6QMbzPvprDHBr3wVdAKZw7JHpsIyYdfHb0gk
USeh1YdV8nuPmD0Wnu51tvjQjvLzxq4oW6fw8zYX/MMF08oDSlQ=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="9f533518.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIHSTCCBTGgAwIBAgIJAMnN0+nVfSPOMA0GCSqGSIb3DQEBBQUAMIGsMQswCQYDVQQGEwJFVTFD
MEEGA1UEBxM6TWFkcmlkIChzZWUgY3VycmVudCBhZGRyZXNzIGF0IHd3dy5jYW1lcmZpcm1hLmNv
bS9hZGRyZXNzKTESMBAGA1UEBRMJQTgyNzQzMjg3MRswGQYDVQQKExJBQyBDYW1lcmZpcm1hIFMu
QS4xJzAlBgNVBAMTHkdsb2JhbCBDaGFtYmVyc2lnbiBSb290IC0gMjAwODAeFw0wODA4MDExMjMx
NDBaFw0zODA3MzExMjMxNDBaMIGsMQswCQYDVQQGEwJFVTFDMEEGA1UEBxM6TWFkcmlkIChzZWUg
Y3VycmVudCBhZGRyZXNzIGF0IHd3dy5jYW1lcmZpcm1hLmNvbS9hZGRyZXNzKTESMBAGA1UEBRMJ
QTgyNzQzMjg3MRswGQYDVQQKExJBQyBDYW1lcmZpcm1hIFMuQS4xJzAlBgNVBAMTHkdsb2JhbCBD
aGFtYmVyc2lnbiBSb290IC0gMjAwODCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMDf
VtPkOpt2RbQT2//BthmLN0EYlVJH6xedKYiONWwGMi5HYvNJBL99RDaxccy9Wglz1dmFRP+RVyXf
XjaOcNFccUMd2drvXNL7G706tcuto8xEpw2uIRU/uXpbknXYpBI4iRmKt4DS4jJvVpyR1ogQC7N0
ZJJ0YPP2zxhPYLIj0Mc7zmFLmY/CDNBAspjcDahOo7kKrmCgrUVSY7pmvWjg+b4aqIG7HkF4ddPB
/gBVsIdU6CeQNR1MM62X/JcumIS/LMmjv9GYERTtY/jKmIhYF5ntRQOXfjyGHoiMvvKRhI9lNNgA
TH23MRdaKXoKGCQwoze1eqkBfSbW+Q6OWfH9GzO1KTsXO0G2Id3UwD2ln58fQ1DJu7xsepeY7s2M
H/ucUa6LcL0nn3HAa6x9kGbo1106DbDVwo3VyJ2dwW3Q0L9R5OP4wzg2rtandeavhENdk5IMagfe
Ox2YItaswTXbo6Al/3K1dh3ebeksZixShNBFks4c5eUzHdwHU1SjqoI7mjcv3N2gZOnm3b2u/GSF
HTynyQbehP9r6GsaPMWis0L7iwk+XwhSx2LE1AVxv8Rk5Pihg+g+EpuoHtQ2TS9x9o0o9oOpE9Jh
wZG7SMA0j0GMS0zbaRL/UJScIINZc+18ofLx/d33SdNDWKBWY8o9PeU1VlnpDsogzCtLkykPAgMB
AAGjggFqMIIBZjASBgNVHRMBAf8ECDAGAQH/AgEMMB0GA1UdDgQWBBS5CcqcHtvTbDprru1U8VuT
BjUuXjCB4QYDVR0jBIHZMIHWgBS5CcqcHtvTbDprru1U8VuTBjUuXqGBsqSBrzCBrDELMAkGA1UE
BhMCRVUxQzBBBgNVBAcTOk1hZHJpZCAoc2VlIGN1cnJlbnQgYWRkcmVzcyBhdCB3d3cuY2FtZXJm
aXJtYS5jb20vYWRkcmVzcykxEjAQBgNVBAUTCUE4Mjc0MzI4NzEbMBkGA1UEChMSQUMgQ2FtZXJm
aXJtYSBTLkEuMScwJQYDVQQDEx5HbG9iYWwgQ2hhbWJlcnNpZ24gUm9vdCAtIDIwMDiCCQDJzdPp
1X0jzjAOBgNVHQ8BAf8EBAMCAQYwPQYDVR0gBDYwNDAyBgRVHSAAMCowKAYIKwYBBQUHAgEWHGh0
dHA6Ly9wb2xpY3kuY2FtZXJmaXJtYS5jb20wDQYJKoZIhvcNAQEFBQADggIBAICIf3DekijZBZRG
/5BXqfEv3xoNa/p8DhxJJHkn2EaqbylZUohwEurdPfWbU1Rv4WCiqAm57OtZfMY18dwY6fFn5a+6
ReAJ3spED8IXDneRRXozX1+WLGiLwUePmJs9wOzL9dWCkoQ10b42OFZyMVtHLaoXpGNR6woBrX/s
dZ7LoR/xfxKxueRkf2fWIyr0uDldmOghp+G9PUIadJpwr2hsUF1Jz//7Dl3mLEfXgTpZALVza2Mg
9jFFCDkO9HB+QHBaP9BrQql0PSgvAm11cpUJjUhjxsYjV5KTXjXBjfkK9yydYhz2rXzdpjEetrHH
foUm+qRqtdpjMNHvkzeyZi99Bffnt0uYlDXA2TopwZ2yUDMdSqlapskD7+3056huirRXhOukP9Du
qqqHW2Pok+JrqNS4cnhrG+055F3Lm6qH1U9OAP7Zap88MQ8oAgF9mOinsKJknnn4SPIVqczmyETr
P3iZ8ntxPjzxmKfFGBI/5rsoM0LpRQp8bfKGeS/Fghl9CYl8slR2iK7ewfPM4W7bMdaTrpmg7yVq
c5iJWzouE4gev8CSlDQb4ye3ix5vQv/n6TebUB0tovkC7stYWDpxvGjjqsGvHCgfotwjZT+B6q6Z
09gwzxMNTxXJhLynSC34MCN32EZLeW32jO06f2ARePTpm67VVMB0gNELQp/B
-----END CERTIFICATE-----

              ]]></file>
              <file Name="a0bc6fbb.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIExTCCA62gAwIBAgIBADANBgkqhkiG9w0BAQUFADB9MQswCQYDVQQGEwJFVTEnMCUGA1UEChMe
QUMgQ2FtZXJmaXJtYSBTQSBDSUYgQTgyNzQzMjg3MSMwIQYDVQQLExpodHRwOi8vd3d3LmNoYW1i
ZXJzaWduLm9yZzEgMB4GA1UEAxMXR2xvYmFsIENoYW1iZXJzaWduIFJvb3QwHhcNMDMwOTMwMTYx
NDE4WhcNMzcwOTMwMTYxNDE4WjB9MQswCQYDVQQGEwJFVTEnMCUGA1UEChMeQUMgQ2FtZXJmaXJt
YSBTQSBDSUYgQTgyNzQzMjg3MSMwIQYDVQQLExpodHRwOi8vd3d3LmNoYW1iZXJzaWduLm9yZzEg
MB4GA1UEAxMXR2xvYmFsIENoYW1iZXJzaWduIFJvb3QwggEgMA0GCSqGSIb3DQEBAQUAA4IBDQAw
ggEIAoIBAQCicKLQn0KuWxfH2H3PFIP8T8mhtxOviteePgQKkotgVvq0Mi+ITaFgCPS3CU6gSS9J
1tPfnZdan5QEcOw/Wdm3zGaLmFIoCQLfxS+EjXqXd7/sQJ0lcqu1PzKY+7e3/HKE5TWH+VX6ox8O
by4o3Wmg2UIQxvi1RMLQQ3/bvOSiPGpVeAp3qdjqGTK3L/5cPxvusZjsyq16aUXjlg9V9ubtdepl
6DJWk0aJqCWKZQbua795B9Dxt6/tLE2Su8CoX6dnfQTyFQhwrJLWfQTSM/tMtgsL+xrJxI0DqX5c
8lCrEqWhz0hQpe/SyBoT+rB/sYIcd2oPX9wLlY/vQ37mRQklAgEDo4IBUDCCAUwwEgYDVR0TAQH/
BAgwBgEB/wIBDDA/BgNVHR8EODA2MDSgMqAwhi5odHRwOi8vY3JsLmNoYW1iZXJzaWduLm9yZy9j
aGFtYmVyc2lnbnJvb3QuY3JsMB0GA1UdDgQWBBRDnDafsJ4wTcbOX60Qq+UDpfqpFDAOBgNVHQ8B
Af8EBAMCAQYwEQYJYIZIAYb4QgEBBAQDAgAHMCoGA1UdEQQjMCGBH2NoYW1iZXJzaWducm9vdEBj
aGFtYmVyc2lnbi5vcmcwKgYDVR0SBCMwIYEfY2hhbWJlcnNpZ25yb290QGNoYW1iZXJzaWduLm9y
ZzBbBgNVHSAEVDBSMFAGCysGAQQBgYcuCgEBMEEwPwYIKwYBBQUHAgEWM2h0dHA6Ly9jcHMuY2hh
bWJlcnNpZ24ub3JnL2Nwcy9jaGFtYmVyc2lnbnJvb3QuaHRtbDANBgkqhkiG9w0BAQUFAAOCAQEA
PDtwkfkEVCeR4e3t/mh/YV3lQWVPMvEYBZRqHN4fcNs+ezICNLUMbKGKfKX0j//U2K0X1S0E0T9Y
gOKBWYi+wONGkyT+kL0mojAt6JcmVzWJdJYY9hXiryQZVgICsroPFOrGimbBhkVVi76SvpykBMdJ
PJ7oKXqJ1/6v/2j1pReQvayZzKWGVwlnRtvWFsJG8eSpUPWP0ZIV018+xgBJOm5YstHRJw0lyDL4
IBHNfTIzSJRUTN3cecQwn+uOuFW114hcxWokPbLTBQNRxgfvzBRydD1ucs4YKIxKoHflCStFREes
t2d/AYoFWpO+ocH/+OcOZ6RHSXZddZAa9SaP8A==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="a15b3b6b.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDKTCCApKgAwIBAgIENm7TzjANBgkqhkiG9w0BAQUFADBGMQswCQYDVQQGEwJV
UzEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QgQ28uMREwDwYDVQQL
EwhEU1RDQSBFMjAeFw05ODEyMDkxOTE3MjZaFw0xODEyMDkxOTQ3MjZaMEYxCzAJ
BgNVBAYTAlVTMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4x
ETAPBgNVBAsTCERTVENBIEUyMIGdMA0GCSqGSIb3DQEBAQUAA4GLADCBhwKBgQC/
k48Xku8zExjrEH9OFr//Bo8qhbxe+SSmJIi2A7fBw18DW9Fvrn5C6mYjuGODVvso
LeE4i7TuqAHhzhy2iCoiRoX7n6dwqUcUP87eZfCocfdPJmyMvMa1795JJ/9IKn3o
TQPMx7JSxhcxEzu1TdvIxPbDDyQq2gyd55FbgM2UnQIBA6OCASQwggEgMBEGCWCG
SAGG+EIBAQQEAwIABzBoBgNVHR8EYTBfMF2gW6BZpFcwVTELMAkGA1UEBhMCVVMx
JDAiBgNVBAoTG0RpZ2l0YWwgU2lnbmF0dXJlIFRydXN0IENvLjERMA8GA1UECxMI
RFNUQ0EgRTIxDTALBgNVBAMTBENSTDEwKwYDVR0QBCQwIoAPMTk5ODEyMDkxOTE3
MjZagQ8yMDE4MTIwOTE5MTcyNlowCwYDVR0PBAQDAgEGMB8GA1UdIwQYMBaAFB6C
TShlgDzJQW6sNS5ay97u+DlbMB0GA1UdDgQWBBQegk0oZYA8yUFurDUuWsve7vg5
WzAMBgNVHRMEBTADAQH/MBkGCSqGSIb2fQdBAAQMMAobBFY0LjADAgSQMA0GCSqG
SIb3DQEBBQUAA4GBAEeNg61i8tuwnkUiBbmi1gMOOHLnnvx75pO2mqWilMg0HZHR
xdf0CiUPPXiBng+xZ8SQTGPdXqfiup/1902lMXucKS1M/mQ+7LZT/uqb7YLbdHVL
B3luHtgZg3Pe9T7Qtd7nS2h9Qy4qIOF+oHhEngj1mPnHfxsb1gYgAlihw6ID
-----END CERTIFICATE-----

              ]]></file>
              <file Name="a2c66da8.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFkDCCA3igAwIBAgIQBZsbV56OITLiOQe9p3d1XDANBgkqhkiG9w0BAQwFADBiMQswCQYDVQQG
EwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSEw
HwYDVQQDExhEaWdpQ2VydCBUcnVzdGVkIFJvb3QgRzQwHhcNMTMwODAxMTIwMDAwWhcNMzgwMTE1
MTIwMDAwWjBiMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
d3cuZGlnaWNlcnQuY29tMSEwHwYDVQQDExhEaWdpQ2VydCBUcnVzdGVkIFJvb3QgRzQwggIiMA0G
CSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC/5pBzaN675F1KPDAiMGkz7MKnJS7JIT3yithZwuEp
pz1Yq3aaza57G4QNxDAf8xukOBbrVsaXbR2rsnnyyhHS5F/WBTxSD1Ifxp4VpX6+n6lXFllVcq9o
k3DCsrp1mWpzMpTREEQQLt+C8weE5nQ7bXHiLQwb7iDVySAdYyktzuxeTsiT+CFhmzTrBcZe7Fsa
vOvJz82sNEBfsXpm7nfISKhmV1efVFiODCu3T6cw2Vbuyntd463JT17lNecxy9qTXtyOj4DatpGY
QJB5w3jHtrHEtWoYOAMQjdjUN6QuBX2I9YI+EJFwq1WCQTLX2wRzKm6RAXwhTNS8rhsDdV14Ztk6
MUSaM0C/CNdaSaTC5qmgZ92kJ7yhTzm1EVgX9yRcRo9k98FpiHaYdj1ZXUJ2h4mXaXpI8OCiEhtm
mnTK3kse5w5jrubU75KSOp493ADkRSWJtppEGSt+wJS00mFt6zPZxd9LBADMfRyVw4/3IbKyEbe7
f/LVjHAsQWCqsWMYRJUadmJ+9oCw++hkpjPRiQfhvbfmQ6QYuKZ3AeEPlAwhHbJUKSWJbOUOUlFH
dL4mrLZBdd56rF+NP8m800ERElvlEFDrMcXKchYiCd98THU/Y+whX8QgUWtvsauGi0/C1kVfnSD8
oR7FwI+isX4KJpn15GkvmB0t9dmpsh3lGwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1Ud
DwEB/wQEAwIBhjAdBgNVHQ4EFgQU7NfjgtJxXWRM3y5nP+e6mK4cD08wDQYJKoZIhvcNAQEMBQAD
ggIBALth2X2pbL4XxJEbw6GiAI3jZGgPVs93rnD5/ZpKmbnJeFwMDF/k5hQpVgs2SV1EY+CtnJYY
ZhsjDT156W1r1lT40jzBQ0CuHVD1UvyQO7uYmWlrx8GnqGikJ9yd+SeuMIW59mdNOj6PWTkiU0Tr
yF0Dyu1Qen1iIQqAyHNm0aAFYF/opbSnr6j3bTWcfFqK1qI4mfN4i/RN0iAL3gTujJtHgXINwBQy
7zBZLq7gcfJW5GqXb5JQbZaNaHqasjYUegbyJLkJEVDXCLG4iXqEI2FCKeWjzaIgQdfRnGTZ6iah
ixTXTBmyUEFxPT9NcCOGDErcgdLMMpSEDQgJlxxPwO5rIHQw0uA5NBCFIRUBCOhVMt5xSdkoF1BN
5r5N0XWs0Mr7QbhDparTwwVETyw2m+L64kW4I1NsBm9nVX9GtUw/bihaeSbSpKhil9Ie4u1Ki7wb
/UdKDd9nZn6yW0HQO+T0O/QEY+nvwlQAUaCKKsnOeMzV6ocEGLPOr0mIr/OSmbaz5mEP0oUA51Aa
5BuVnRmhuZyxm7EAHu/QD09CbMkKvO5D+jpxpchNJqU1/YldvIViHTLSoCtU7ZpXwdv6EM8Zt4tK
G48BtieVU+i2iW1bvGjUI+iLUaJW+fCmgKDWHrO8Dw9TdSmq6hN35N6MgSGtBxBHEa2HPQfRdbzP
82Z+
-----END CERTIFICATE-----

              ]]></file>
              <file Name="a2df7ad7.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEFTCCAv2gAwIBAgIBATANBgkqhkiG9w0BAQUFADBkMQswCQYDVQQGEwJTRTEUMBIGA1UEChML
QWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3b3JrMSAwHgYDVQQDExdBZGRU
cnVzdCBQdWJsaWMgQ0EgUm9vdDAeFw0wMDA1MzAxMDQxNTBaFw0yMDA1MzAxMDQxNTBaMGQxCzAJ
BgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRkVHJ1c3QgVFRQIE5l
dHdvcmsxIDAeBgNVBAMTF0FkZFRydXN0IFB1YmxpYyBDQSBSb290MIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEA6Rowj4OIFMEg2Dybjxt+A3S72mnTRqX4jsIMEZBRpS9mVEBV6tsfSlbu
nyNu9DnLoblv8n75XYcmYZ4c+OLspoH4IcUkzBEMP9smcnrHAZcHF/nXGCwwfQ56HmIexkvA/X1i
d9NEHif2P0tEs7c42TkfYNVRknMDtABp4/MUTu7R3AnPdzRGULD4EfL+OHn3Bzn+UZKXC1sIXzSG
Aa2Il+tmzV7R/9x98oTaunet3IAIx6eH1lWfl2royBFkuucZKT8Rs3iQhCBSWxHveNCD9tVIkNAw
HM+A+WD+eeSI8t0A65RF62WUaUC6wNW0uLp9BBGo6zEFlpROWCGOn9Bg/QIDAQABo4HRMIHOMB0G
A1UdDgQWBBSBPjfYkrAfd59ctKtzquf2NGAv+jALBgNVHQ8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB
/zCBjgYDVR0jBIGGMIGDgBSBPjfYkrAfd59ctKtzquf2NGAv+qFopGYwZDELMAkGA1UEBhMCU0Ux
FDASBgNVBAoTC0FkZFRydXN0IEFCMR0wGwYDVQQLExRBZGRUcnVzdCBUVFAgTmV0d29yazEgMB4G
A1UEAxMXQWRkVHJ1c3QgUHVibGljIENBIFJvb3SCAQEwDQYJKoZIhvcNAQEFBQADggEBAAP3FUr4
JNojVhaTdt02KLmuG7jD8WS6IBh4lSknVwW8fCr0uVFV2ocC3g8WFzH4qnkuCRO7r7IgGRLlk/lL
+YPoRNWyQSW/iHVv/xD8SlTQX/D67zZzfRs2RcYhbbQVuE7PnFylPVoAjgbjPGsye/Kf8Lb93/Ao
GEjwxrzQvzSAlsJKsW2Ox5BF3i9nrEUEo3rcVZLJR2bYGozH7ZxOmuASu7VqTITh4SINhwBk/ox9
Yjllpu9CtoAlEmEBqCQTcAARJl/6NVDFSMwGR+gn2HCNX2TmoUQmXiLsks3/QppEIW1cxeMiHV9H
EufOX1362KqxMy3ZdvJOOjMMK7MtkAY=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="a3896b44.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDWjCCAkKgAwIBAgIBADANBgkqhkiG9w0BAQUFADBQMQswCQYDVQQGEwJKUDEYMBYGA1UEChMP
U0VDT00gVHJ1c3QubmV0MScwJQYDVQQLEx5TZWN1cml0eSBDb21tdW5pY2F0aW9uIFJvb3RDQTEw
HhcNMDMwOTMwMDQyMDQ5WhcNMjMwOTMwMDQyMDQ5WjBQMQswCQYDVQQGEwJKUDEYMBYGA1UEChMP
U0VDT00gVHJ1c3QubmV0MScwJQYDVQQLEx5TZWN1cml0eSBDb21tdW5pY2F0aW9uIFJvb3RDQTEw
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCzs/5/022x7xZ8V6UMbXaKL0u/ZPtM7orw
8yl89f/uKuDp6bpbZCKamm8sOiZpUQWZJtzVHGpxxpp9Hp3dfGzGjGdnSj74cbAZJ6kJDKaVv0uM
DPpVmDvY6CKhS3E4eayXkmmziX7qIWgGmBSWh9JhNrxtJ1aeV+7AwFb9Ms+k2Y7CI9eNqPPYJayX
5HA49LY6tJ07lyZDo6G8SVlyTCMwhwFY9k6+HGhWZq/NQV3Is00qVUarH9oe4kA92819uZKAnDfd
DJZkndwi92SL32HeFZRSFaB9UslLqCHJxrHty8OVYNEP8Ktw+N/LTX7s1vqr2b1/VPKl6Xn62dZ2
JChzAgMBAAGjPzA9MB0GA1UdDgQWBBSgc0mZaNyFW2XjmygvV5+9M7wHSDALBgNVHQ8EBAMCAQYw
DwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQUFAAOCAQEAaECpqLvkT115swW1F7NgE+vGkl3g
0dNq/vu+m22/xwVtWSDEHPC32oRYAmP6SBbvT6UL90qY8j+eG61Ha2POCEfrUj94nK9NrvjVT8+a
mCoQQTlSxN3Zmw7vkwGusi7KaEIkQmywszo+zenaSMQVy+n5Bw+SUEmK3TGXX8npN6o7WWWXlDLJ
s58+OmJYxUmtYg5xpTKqL8aJdkNAExNnPaJUJRDL8Try2frbSVa7pv6nQTXD4IhhyYjH3zYQIphZ
6rBK+1YWc26sTfcioU+tHXotRSflMMFe8toTyyVCUZVHA4xsIcx0Qu1T/zOLjw9XARYvz6buyXAi
FL39vmwLAw==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="a6776c69.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIH9zCCB2CgAwIBAgIBADANBgkqhkiG9w0BAQUFADCCARwxCzAJBgNVBAYTAkVT
MRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UE
ChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjErMCkGA1UE
ChQiaXBzQG1haWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEzMDEGA1UECxMq
SVBTIENBIENoYWluZWQgQ0FzIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MTMwMQYD
VQQDEypJUFMgQ0EgQ2hhaW5lZCBDQXMgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkx
HjAcBgkqhkiG9w0BCQEWD2lwc0BtYWlsLmlwcy5lczAeFw0wMTEyMjkwMDUzNTha
Fw0yNTEyMjcwMDUzNThaMIIBHDELMAkGA1UEBhMCRVMxEjAQBgNVBAgTCUJhcmNl
bG9uYTESMBAGA1UEBxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJUFMgSW50ZXJuZXQg
cHVibGlzaGluZyBTZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJpcHNAbWFpbC5pcHMu
ZXMgQy5JLkYuICBCLTYwOTI5NDUyMTMwMQYDVQQLEypJUFMgQ0EgQ2hhaW5lZCBD
QXMgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxMzAxBgNVBAMTKklQUyBDQSBDaGFp
bmVkIENBcyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEeMBwGCSqGSIb3DQEJARYP
aXBzQG1haWwuaXBzLmVzMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDcVpJJ
spQgvJhPUOtopKdJC7/SMejHT8KGC/po/UNaivNgkjWZOLtNA1IhW/A3mTXhQSCB
hYEFcYGdtJUZqV92NC5jNzVXjrQfQj8VXOF6wV8TGDIxya2+o8eDZh65nAQTy2nB
Bt4wBrszo7Uf8I9vzv+W6FS+ZoCua9tBhDaiPQIDAQABo4IEQzCCBD8wHQYDVR0O
BBYEFKGtMbH5PuEXpsirNPxShwkeYlJBMIIBTgYDVR0jBIIBRTCCAUGAFKGtMbH5
PuEXpsirNPxShwkeYlJBoYIBJKSCASAwggEcMQswCQYDVQQGEwJFUzESMBAGA1UE
CBMJQmFyY2Vsb25hMRIwEAYDVQQHEwlCYXJjZWxvbmExLjAsBgNVBAoTJUlQUyBJ
bnRlcm5ldCBwdWJsaXNoaW5nIFNlcnZpY2VzIHMubC4xKzApBgNVBAoUImlwc0Bt
YWlsLmlwcy5lcyBDLkkuRi4gIEItNjA5Mjk0NTIxMzAxBgNVBAsTKklQUyBDQSBD
aGFpbmVkIENBcyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEzMDEGA1UEAxMqSVBT
IENBIENoYWluZWQgQ0FzIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MR4wHAYJKoZI
hvcNAQkBFg9pcHNAbWFpbC5pcHMuZXOCAQAwDAYDVR0TBAUwAwEB/zAMBgNVHQ8E
BQMDB/+AMGsGA1UdJQRkMGIGCCsGAQUFBwMBBggrBgEFBQcDAgYIKwYBBQUHAwMG
CCsGAQUFBwMEBggrBgEFBQcDCAYKKwYBBAGCNwIBFQYKKwYBBAGCNwIBFgYKKwYB
BAGCNwoDAQYKKwYBBAGCNwoDBDARBglghkgBhvhCAQEEBAMCAAcwGgYDVR0RBBMw
EYEPaXBzQG1haWwuaXBzLmVzMBoGA1UdEgQTMBGBD2lwc0BtYWlsLmlwcy5lczBC
BglghkgBhvhCAQ0ENRYzQ2hhaW5lZCBDQSBDZXJ0aWZpY2F0ZSBpc3N1ZWQgYnkg
aHR0cDovL3d3dy5pcHMuZXMvMCkGCWCGSAGG+EIBAgQcFhpodHRwOi8vd3d3Lmlw
cy5lcy9pcHMyMDAyLzA3BglghkgBhvhCAQQEKhYoaHR0cDovL3d3dy5pcHMuZXMv
aXBzMjAwMi9pcHMyMDAyQ0FDLmNybDA8BglghkgBhvhCAQMELxYtaHR0cDovL3d3
dy5pcHMuZXMvaXBzMjAwMi9yZXZvY2F0aW9uQ0FDLmh0bWw/MDkGCWCGSAGG+EIB
BwQsFipodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL3JlbmV3YWxDQUMuaHRtbD8w
NwYJYIZIAYb4QgEIBCoWKGh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcG9saWN5
Q0FDLmh0bWwwbQYDVR0fBGYwZDAuoCygKoYoaHR0cDovL3d3dy5pcHMuZXMvaXBz
MjAwMi9pcHMyMDAyQ0FDLmNybDAyoDCgLoYsaHR0cDovL3d3d2JhY2suaXBzLmVz
L2lwczIwMDIvaXBzMjAwMkNBQy5jcmwwLwYIKwYBBQUHAQEEIzAhMB8GCCsGAQUF
BzABhhNodHRwOi8vb2NzcC5pcHMuZXMvMA0GCSqGSIb3DQEBBQUAA4GBAERyMJ1W
WKJBGyi3leGmGpVfp3hAK+/blkr8THFj2XOVvQLiogbHvpcqk4A0hgP63Ng9HgfN
HnNDJGD1HWHc3JagvPsd4+cSACczAsDAK1M92GsDgaPb1pOVIO/Tln4mkImcJpvN
b2ar7QMiRDjMWb2f2/YHogF/JsRj9SVCXmK9
-----END CERTIFICATE-----

              ]]></file>
              <file Name="a7605362.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDIDCCAgigAwIBAgIBHTANBgkqhkiG9w0BAQUFADA5MQswCQYDVQQGEwJGSTEPMA0GA1UEChMG
U29uZXJhMRkwFwYDVQQDExBTb25lcmEgQ2xhc3MyIENBMB4XDTAxMDQwNjA3Mjk0MFoXDTIxMDQw
NjA3Mjk0MFowOTELMAkGA1UEBhMCRkkxDzANBgNVBAoTBlNvbmVyYTEZMBcGA1UEAxMQU29uZXJh
IENsYXNzMiBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJAXSjWdyvANlsdE+hY3
/Ei9vX+ALTU74W+oZ6m/AxxNjG8yR9VBaKQTBME1DJqEQ/xcHf+Js+gXGM2RX/uJ4+q/Tl18GybT
dXnt5oTjV+WtKcT0OijnpXuENmmz/V52vaMtmdOQTiMofRhj8VQ7Jp12W5dCsv+u8E7s3TmVToMG
f+dJQMjFAbJUWmYdPfz56TwKnoG4cPABi+QjVHzIrviQHgCWctRUz2EjvOr7nQKV0ba5cTppCD8P
tOFCx4j1P5iop7oc4HFx71hXgVB6XGt0Rg6DA5jDjqhu8nYybieDwnPz3BjotJPqdURrBGAgcVeH
nfO+oJAjPYok4doh28MCAwEAAaMzMDEwDwYDVR0TAQH/BAUwAwEB/zARBgNVHQ4ECgQISqCqWITT
XjwwCwYDVR0PBAQDAgEGMA0GCSqGSIb3DQEBBQUAA4IBAQBazof5FnIVV0sd2ZvnoiYw7JNn39Yt
0jSv9zilzqsWuasvfDXLrNAPtEwr/IDva4yRXzZ299uzGxnq9LIR/WFxRL8oszodv7ND6J+/3DEI
cbCdjdY0RzKQxmUk96BKfARzjzlvF4xytb1LyHr4e4PDKE6cCepnP7JnBBvDFNr450kkkdAdavph
Oe9r5yF1BgfYErQhIHBCcYHaPJo2vqZbDWpsmh+Re/n570K6Tk6ezAyNlNzZRZxe7EJQY670XcSx
EtzKO6gunRRaBXW37Ndj4ro1tgQIkejanZz2ZrUYrAqmVCY0M9IbwdR/GjqOC6oybtv8TyWf2TLH
llpwrN9M
-----END CERTIFICATE-----

              ]]></file>
              <file Name="a7d2cf64.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIICiDCCAg2gAwIBAgIQNfwmXNmET8k9Jj1Xm67XVjAKBggqhkjOPQQDAzCBhDELMAkGA1UEBhMC
VVMxFTATBgNVBAoTDHRoYXd0ZSwgSW5jLjE4MDYGA1UECxMvKGMpIDIwMDcgdGhhd3RlLCBJbmMu
IC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxJDAiBgNVBAMTG3RoYXd0ZSBQcmltYXJ5IFJvb3Qg
Q0EgLSBHMjAeFw0wNzExMDUwMDAwMDBaFw0zODAxMTgyMzU5NTlaMIGEMQswCQYDVQQGEwJVUzEV
MBMGA1UEChMMdGhhd3RlLCBJbmMuMTgwNgYDVQQLEy8oYykgMjAwNyB0aGF3dGUsIEluYy4gLSBG
b3IgYXV0aG9yaXplZCB1c2Ugb25seTEkMCIGA1UEAxMbdGhhd3RlIFByaW1hcnkgUm9vdCBDQSAt
IEcyMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEotWcgnuVnfFSeIf+iha/BebfowJPDQfGAFG6DAJS
LSKkQjnE/o/qycG+1E3/n3qe4rF8mq2nhglzh9HnmuN6papu+7qzcMBniKI11KOasf2twu8x+qi5
8/sIxpHR+ymVo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQU
mtgAMADna3+FGO6Lts6KDPgR4bswCgYIKoZIzj0EAwMDaQAwZgIxAN344FdHW6fmCsO99YCKlzUN
G4k8VIZ3KMqh9HneteY4sPBlcIx/AlTCv//YoT7ZzwIxAMSNlPzcU9LcnXgWHxUzI1NS41oxXZ3K
rr0TKUQNJ1uo52icEvdYPy5yAlejj6EULg==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="aa157d1e.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIID7jCCA1egAwIBAgIBADANBgkqhkiG9w0BAQQFADCBsTELMAkGA1UEBhMCVVMx
FzAVBgNVBAgTDk5vcnRoIENhcm9saW5hMRAwDgYDVQQHEwdSYWxlaWdoMRYwFAYD
VQQKEw1SZWQgSGF0LCBJbmMuMRgwFgYDVQQLEw9SZWQgSGF0IE5ldHdvcmsxIjAg
BgNVBAMTGVJITiBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxITAfBgkqhkiG9w0BCQEW
EnJobi1ub2NAcmVkaGF0LmNvbTAeFw0wMjA5MDUyMDQ1MTZaFw0wNzA5MDkyMDQ1
MTZaMIGxMQswCQYDVQQGEwJVUzEXMBUGA1UECBMOTm9ydGggQ2Fyb2xpbmExEDAO
BgNVBAcTB1JhbGVpZ2gxFjAUBgNVBAoTDVJlZCBIYXQsIEluYy4xGDAWBgNVBAsT
D1JlZCBIYXQgTmV0d29yazEiMCAGA1UEAxMZUkhOIENlcnRpZmljYXRlIEF1dGhv
cml0eTEhMB8GCSqGSIb3DQEJARYScmhuLW5vY0ByZWRoYXQuY29tMIGfMA0GCSqG
SIb3DQEBAQUAA4GNADCBiQKBgQCzFrfF9blpUR/NtD1wz2BXhaQqp10oIg7sGeKS
90iXpqYfUZWDEY+amKKQ4MtKJBmUqIpLiLQGbM531xU7PM1mg88jHQ28CgzLH8tA
+/PZ/iq0hSx7yaH+849oHfISsaQWGc4PuJqc2bxfSWKylZPOXS7deTzxW6a3orU5
DY4SMQIDAQABo4IBEjCCAQ4wHQYDVR0OBBYEFH8bZKEuAsWofbjRsYsGnaOpUGOS
MIHeBgNVHSMEgdYwgdOAFH8bZKEuAsWofbjRsYsGnaOpUGOSoYG3pIG0MIGxMQsw
CQYDVQQGEwJVUzEXMBUGA1UECBMOTm9ydGggQ2Fyb2xpbmExEDAOBgNVBAcTB1Jh
bGVpZ2gxFjAUBgNVBAoTDVJlZCBIYXQsIEluYy4xGDAWBgNVBAsTD1JlZCBIYXQg
TmV0d29yazEiMCAGA1UEAxMZUkhOIENlcnRpZmljYXRlIEF1dGhvcml0eTEhMB8G
CSqGSIb3DQEJARYScmhuLW5vY0ByZWRoYXQuY29tggEAMAwGA1UdEwQFMAMBAf8w
DQYJKoZIhvcNAQEEBQADgYEAKE1C5TQi3caGYwR1UmcXRXLyOyErRVlyc/dZNp1X
Q8bclA8O/xNcT1A3hbLkwh81n3T051P7oQa4Oc7kCoZ7XyhdxxGeEqXWuWzpGAnV
8ELnVLWRniOtEnqqcnw5PIP4daR7A5L/KtTFdhkS+rQ7sIkslYwBkA3YugYFYQCs
ldo=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="aaa45464.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIICoTCCAgqgAwIBAgIBADANBgkqhkiG9w0BAQQFADCBizELMAkGA1UEBhMCWkEx
FTATBgNVBAgTDFdlc3Rlcm4gQ2FwZTEUMBIGA1UEBxMLRHVyYmFudmlsbGUxDzAN
BgNVBAoTBlRoYXd0ZTEdMBsGA1UECxMUVGhhd3RlIENlcnRpZmljYXRpb24xHzAd
BgNVBAMTFlRoYXd0ZSBUaW1lc3RhbXBpbmcgQ0EwHhcNOTcwMTAxMDAwMDAwWhcN
MjAxMjMxMjM1OTU5WjCBizELMAkGA1UEBhMCWkExFTATBgNVBAgTDFdlc3Rlcm4g
Q2FwZTEUMBIGA1UEBxMLRHVyYmFudmlsbGUxDzANBgNVBAoTBlRoYXd0ZTEdMBsG
A1UECxMUVGhhd3RlIENlcnRpZmljYXRpb24xHzAdBgNVBAMTFlRoYXd0ZSBUaW1l
c3RhbXBpbmcgQ0EwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBANYrWHhhRYZT
6jR7UZztsOYuGA7+4F+oJ9O0yeB8WU4WDnNUYMF/9p8u6TqFJBU820cEY8OexJQa
Wt9MevPZQx08EHp5JduQ/vBR5zDWQQD9nyjfeb6Uu522FOMjhdepQeBMpHmwKxqL
8vg7ij5FrHGSALSQQZj7X+36ty6K+Ig3AgMBAAGjEzARMA8GA1UdEwEB/wQFMAMB
Af8wDQYJKoZIhvcNAQEEBQADgYEAZ9viwuaHPUCDhjc1fR/OmsMMZiCouqoEiYbC
9RAIDb/LogWK0E02PvTX72nGXuSwlG9KuefeW4i2e9vjJ+V2w/A1wcu1J5szedyQ
pgCed/r8zSeUQhac0xxo7L9c3eWpexAKMnRUEzGLhQOEkbdYATAUOK8oyvyxUBkZ
CayJSdM=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="ab5346f4.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDbTCCAlWgAwIBAgIBATANBgkqhkiG9w0BAQUFADBYMQswCQYDVQQGEwJKUDErMCkGA1UEChMi
SmFwYW4gQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcywgSW5jLjEcMBoGA1UEAxMTU2VjdXJlU2lnbiBS
b290Q0ExMTAeFw0wOTA0MDgwNDU2NDdaFw0yOTA0MDgwNDU2NDdaMFgxCzAJBgNVBAYTAkpQMSsw
KQYDVQQKEyJKYXBhbiBDZXJ0aWZpY2F0aW9uIFNlcnZpY2VzLCBJbmMuMRwwGgYDVQQDExNTZWN1
cmVTaWduIFJvb3RDQTExMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA/XeqpRyQBTvL
TJszi1oURaTnkBbR31fSIRCkF/3frNYfp+TbfPfs37gD2pRY/V1yfIw/XwFndBWW4wI8h9uuywGO
wvNmxoVF9ALGOrVisq/6nL+k5tSAMJjzDbaTj6nU2DbysPyKyiyhFTOVMdrAG/LuYpmGYz+/3ZMq
g6h2uRMft85OQoWPIucuGvKVCbIFtUROd6EgvanyTgp9UK31BQ1FT0Zx/Sg+U/sE2C3XZR1KG/rP
O7AxmjVuyIsG0wCR8pQIZUyxNAYAeoni8McDWc/V1uinMrPmmECGxc0nEovMe863ETxiYAcjPitA
bpSACW22s293bzUIUPsCh8U+iQIDAQABo0IwQDAdBgNVHQ4EFgQUW/hNT7KlhtQ60vFjmqC+CfZX
t94wDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBAKCh
OBZmLqdWHyGcBvod7bkixTgm2E5P7KN/ed5GIaGHd48HCJqypMWvDzKYC3xmKbabfSVSSUOrTC4r
bnpwrxYO4wJs+0LmGJ1F2FXI6Dvd5+H0LgscNFxsWEr7jIhQX5Ucv+2rIrVls4W6ng+4reV6G4pQ
Oh29Dbx7VFALuUKvVaAYga1lme++5Jy/xIWrQbJUb9wlze144o4MjQlJ3WN7WmmWAiGovVJZ6X01
y8hSyn+B/tlr0/cR7SXf+Of5pPpyl4RTDaXQMhhRdlkUbA/r7F+AjHVDg8OFmP9Mni0N5HeDk061
lgeLKBObjBmNQSdJQO7e5iNEOdyhIta6A/I=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="add67345.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIGfTCCBWWgAwIBAgICAQMwDQYJKoZIhvcNAQEEBQAwga8xCzAJBgNVBAYTAkhVMRAwDgYDVQQI
EwdIdW5nYXJ5MREwDwYDVQQHEwhCdWRhcGVzdDEnMCUGA1UEChMeTmV0TG9jayBIYWxvemF0Yml6
dG9uc2FnaSBLZnQuMRowGAYDVQQLExFUYW51c2l0dmFueWtpYWRvazE2MDQGA1UEAxMtTmV0TG9j
ayBLb3pqZWd5em9pIChDbGFzcyBBKSBUYW51c2l0dmFueWtpYWRvMB4XDTk5MDIyNDIzMTQ0N1oX
DTE5MDIxOTIzMTQ0N1owga8xCzAJBgNVBAYTAkhVMRAwDgYDVQQIEwdIdW5nYXJ5MREwDwYDVQQH
EwhCdWRhcGVzdDEnMCUGA1UEChMeTmV0TG9jayBIYWxvemF0Yml6dG9uc2FnaSBLZnQuMRowGAYD
VQQLExFUYW51c2l0dmFueWtpYWRvazE2MDQGA1UEAxMtTmV0TG9jayBLb3pqZWd5em9pIChDbGFz
cyBBKSBUYW51c2l0dmFueWtpYWRvMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvHSM
D7tM9DceqQWC2ObhbHDqeLVu0ThEDaiDzl3S1tWBxdRL51uUcCbbO51qTGL3cfNk1mE7PetzozfZ
z+qMkjvN9wfcZnSX9EUi3fRc4L9t875lM+QVOr/bmJBVOMTtplVjC7B4BPTjbsE/jvxReB+SnoPC
/tmwqcm8WgD/qaiYdPv2LD4VOQ22BFWoDpggQrOxJa1+mm9dU7GrDPzr4PN6s6iz/0b2Y6LYOph7
tqyF/7AlT3Rj5xMHpQqPBffAZG9+pyeAlt7ULoZgx2srXnN7F+eRP2QM2EsiNCubMvJIH5+hCoR6
4sKtlz2O1cH5VqNQ6ca0+pii7pXmKgOM3wIDAQABo4ICnzCCApswDgYDVR0PAQH/BAQDAgAGMBIG
A1UdEwEB/wQIMAYBAf8CAQQwEQYJYIZIAYb4QgEBBAQDAgAHMIICYAYJYIZIAYb4QgENBIICURaC
Ak1GSUdZRUxFTSEgRXplbiB0YW51c2l0dmFueSBhIE5ldExvY2sgS2Z0LiBBbHRhbGFub3MgU3pv
bGdhbHRhdGFzaSBGZWx0ZXRlbGVpYmVuIGxlaXJ0IGVsamFyYXNvayBhbGFwamFuIGtlc3p1bHQu
IEEgaGl0ZWxlc2l0ZXMgZm9seWFtYXRhdCBhIE5ldExvY2sgS2Z0LiB0ZXJtZWtmZWxlbG9zc2Vn
LWJpenRvc2l0YXNhIHZlZGkuIEEgZGlnaXRhbGlzIGFsYWlyYXMgZWxmb2dhZGFzYW5hayBmZWx0
ZXRlbGUgYXogZWxvaXJ0IGVsbGVub3J6ZXNpIGVsamFyYXMgbWVndGV0ZWxlLiBBeiBlbGphcmFz
IGxlaXJhc2EgbWVndGFsYWxoYXRvIGEgTmV0TG9jayBLZnQuIEludGVybmV0IGhvbmxhcGphbiBh
IGh0dHBzOi8vd3d3Lm5ldGxvY2submV0L2RvY3MgY2ltZW4gdmFneSBrZXJoZXRvIGF6IGVsbGVu
b3J6ZXNAbmV0bG9jay5uZXQgZS1tYWlsIGNpbWVuLiBJTVBPUlRBTlQhIFRoZSBpc3N1YW5jZSBh
bmQgdGhlIHVzZSBvZiB0aGlzIGNlcnRpZmljYXRlIGlzIHN1YmplY3QgdG8gdGhlIE5ldExvY2sg
Q1BTIGF2YWlsYWJsZSBhdCBodHRwczovL3d3dy5uZXRsb2NrLm5ldC9kb2NzIG9yIGJ5IGUtbWFp
bCBhdCBjcHNAbmV0bG9jay5uZXQuMA0GCSqGSIb3DQEBBAUAA4IBAQBIJEb3ulZv+sgoA0BO5TE5
ayZrU3/b39/zcT0mwBQOxmd7I6gMc90Bu8bKbjc5VdXHjFYgDigKDtIqpLBJUsY4B/6+CgmM0ZjP
ytoUMaFP0jn8DxEsQ8Pdq5PHVT5HfBgaANzze9jyf1JsIPQLX2lS9O74silg6+NJMSEN1rUQQeJB
CWziGppWS3cC9qCbmieH6FUpccKQn0V4GuEVZD3QDtigdp+uxdAu6tYPVuxkf1qbFFgBJ34TUMdr
KuZoPL9coAob4Q566eKAw+np9v1sEZ7Q5SgnK1QyQhSCdeZK8CtmdWOMovsEPoMOmzbwGOQmIMOM
8CgHrTwXZoi1/baI
-----END CERTIFICATE-----

              ]]></file>
              <file Name="aeb67534.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFVjCCBD6gAwIBAgIQ7is969Qh3hSoYqwE893EATANBgkqhkiG9w0BAQUFADCB8zELMAkGA1UE
BhMCRVMxOzA5BgNVBAoTMkFnZW5jaWEgQ2F0YWxhbmEgZGUgQ2VydGlmaWNhY2lvIChOSUYgUS0w
ODAxMTc2LUkpMSgwJgYDVQQLEx9TZXJ2ZWlzIFB1YmxpY3MgZGUgQ2VydGlmaWNhY2lvMTUwMwYD
VQQLEyxWZWdldSBodHRwczovL3d3dy5jYXRjZXJ0Lm5ldC92ZXJhcnJlbCAoYykwMzE1MDMGA1UE
CxMsSmVyYXJxdWlhIEVudGl0YXRzIGRlIENlcnRpZmljYWNpbyBDYXRhbGFuZXMxDzANBgNVBAMT
BkVDLUFDQzAeFw0wMzAxMDcyMzAwMDBaFw0zMTAxMDcyMjU5NTlaMIHzMQswCQYDVQQGEwJFUzE7
MDkGA1UEChMyQWdlbmNpYSBDYXRhbGFuYSBkZSBDZXJ0aWZpY2FjaW8gKE5JRiBRLTA4MDExNzYt
SSkxKDAmBgNVBAsTH1NlcnZlaXMgUHVibGljcyBkZSBDZXJ0aWZpY2FjaW8xNTAzBgNVBAsTLFZl
Z2V1IGh0dHBzOi8vd3d3LmNhdGNlcnQubmV0L3ZlcmFycmVsIChjKTAzMTUwMwYDVQQLEyxKZXJh
cnF1aWEgRW50aXRhdHMgZGUgQ2VydGlmaWNhY2lvIENhdGFsYW5lczEPMA0GA1UEAxMGRUMtQUND
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsyLHT+KXQpWIR4NA9h0X84NzJB5R85iK
w5K4/0CQBXCHYMkAqbWUZRkiFRfCQ2xmRJoNBD45b6VLeqpjt4pEndljkYRm4CgPukLjbo73FCeT
ae6RDqNfDrHrZqJyTxIThmV6PttPB/SnCWDaOkKZx7J/sxaVHMf5NLWUhdWZXqBIoH7nF2W4onW4
HvPlQn2v7fOKSGRdghST2MDk/7NQcvJ29rNdQlB50JQ+awwAvthrDk4q7D7SzIKiGGUzE3eeml0a
E9jD2z3Il3rucO2n5nzbcc8tlGLfbdb1OL4/pYUKGbio2Al1QnDE6u/LDsg0qBIimAy4E5S2S+zw
0JDnJwIDAQABo4HjMIHgMB0GA1UdEQQWMBSBEmVjX2FjY0BjYXRjZXJ0Lm5ldDAPBgNVHRMBAf8E
BTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUoMOLRKo3pUW/l4Ba0fF4opvpXY0wfwYD
VR0gBHgwdjB0BgsrBgEEAfV4AQMBCjBlMCwGCCsGAQUFBwIBFiBodHRwczovL3d3dy5jYXRjZXJ0
Lm5ldC92ZXJhcnJlbDA1BggrBgEFBQcCAjApGidWZWdldSBodHRwczovL3d3dy5jYXRjZXJ0Lm5l
dC92ZXJhcnJlbCAwDQYJKoZIhvcNAQEFBQADggEBAKBIW4IB9k1IuDlVNZyAelOZ1Vr/sXE7zDkJ
lF7W2u++AVtd0x7Y/X1PzaBB4DSTv8vihpw3kpBWHNzrKQXlxJ7HNd+KDM3FIUPpqojlNcAZQmNa
Al6kSBg6hW/cnbw/nZzBh7h6YQjpdwt/cKt63dmXLGQehb+8dJahw3oS7AwaboMMPOhyRp/7SNVe
l+axofjk70YllJyJ22k4vuxcDlbHZVHlUIiIv0LVKz3l+bqeLrPK9HOSAgu+TGbrIP65y7WZf+a2
E/rKS03Z7lNGBjvGTq2TWoF+bCpLagVFjPIhpDGQh2xlnJ2lYJU6Un/10asIbvPuW/mIPX64b24D
5EI=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="b0ed035a.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFQTCCAymgAwIBAgICDL4wDQYJKoZIhvcNAQELBQAwUTELMAkGA1UEBhMCVFcxEjAQBgNVBAoT
CVRBSVdBTi1DQTEQMA4GA1UECxMHUm9vdCBDQTEcMBoGA1UEAxMTVFdDQSBHbG9iYWwgUm9vdCBD
QTAeFw0xMjA2MjcwNjI4MzNaFw0zMDEyMzExNTU5NTlaMFExCzAJBgNVBAYTAlRXMRIwEAYDVQQK
EwlUQUlXQU4tQ0ExEDAOBgNVBAsTB1Jvb3QgQ0ExHDAaBgNVBAMTE1RXQ0EgR2xvYmFsIFJvb3Qg
Q0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCwBdvI64zEbooh745NnHEKH1Jw7W2C
nJfF10xORUnLQEK1EjRsGcJ0pDFfhQKX7EMzClPSnIyOt7h52yvVavKOZsTuKwEHktSz0ALfUPZV
r2YOy+BHYC8rMjk1Ujoog/h7FsYYuGLWRyWRzvAZEk2tY/XTP3VfKfChMBwqoJimFb3u/Rk28OKR
Q4/6ytYQJ0lM793B8YVwm8rqqFpD/G2Gb3PpN0Wp8DbHzIh1HrtsBv+baz4X7GGqcXzGHaL3SekV
tTzWoWH1EfcFbx39Eb7QMAfCKbAJTibc46KokWofwpFFiFzlmLhxpRUZyXx1EcxwdE8tmx2RRP1W
KKD+u4ZqyPpcC1jcxkt2yKsi2XMPpfRaAok/T54igu6idFMqPVMnaR1sjjIsZAAmY2E2TqNGtz99
sy2sbZCilaLOz9qC5wc0GZbpuCGqKX6mOL6OKUohZnkfs8O1CWfe1tQHRvMq2uYiN2DLgbYPoA/p
yJV/v1WRBXrPPRXAb94JlAGD1zQbzECl8LibZ9WYkTunhHiVJqRaCPgrdLQABDzfuBSO6N+pjWxn
kjMdwLfS7JLIvgm/LCkFbwJrnu+8vyq8W8BQj0FwcYeyTbcEqYSjMq+u7msXi7Kx/mzhkIyIqJdI
zshNy/MGz19qCkKxHh53L46g5pIOBvwFItIm4TFRfTLcDwIDAQABoyMwITAOBgNVHQ8BAf8EBAMC
AQYwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAgEAXzSBdu+WHdXltdkCY4QWwa6g
cFGn90xHNcgL1yg9iXHZqjNB6hQbbCEAwGxCGX6faVsgQt+i0trEfJdLjbDorMjupWkEmQqSpqsn
LhpNgb+E1HAerUf+/UqdM+DyucRFCCEK2mlpc3INvjT+lIutwx4116KD7+U4x6WFH6vPNOw/KP4M
8VeGTslV9xzU2KV9Bnpv1d8Q34FOIWWxtuEXeZVFBs5fzNxGiWNoRI2T9GRwoD2dKAXDOXC4Ynsg
/eTb6QihuJ49CcdP+yz4k3ZB3lLg4VfSnQO8d57+nile98FRYB/e2guyLXW3Q0iT5/Z5xoRdgFlg
lPx4mI88k1HtQJAH32RjJMtOcQWh15QaiDLxInQirqWm2BJpTGCjAu4r7NRjkgtevi92a6O2JryP
A9gK8kxkRr05YuWW6zRjESjMlfGt7+/cgFhI6Uu46mWs6fyAtbXIRfmswZ/ZuepiiI7E8UuDEq3m
i4TWnsLrgxifarsbJGAzcMzs9zLzXNl5fe+epP7JI8Mk7hWSsT2RTyaGvWZzJBPqpK5jwa19hAM8
EHiGG3njxPPyBJUgriOCxLM6AGK/5jYk4Ve6xx6QddVfP5VhK8E7zeWzaGHQRiapIVJpLesux+t3
zqY6tQMzT3bR51xUAV3LePTJDL/PEo4XLSNolOer/qmyKwbQBM0=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="b0f3e76e.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDdTCCAl2gAwIBAgILBAAAAAABFUtaw5QwDQYJKoZIhvcNAQEFBQAwVzELMAkGA1UEBhMCQkUx
GTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExEDAOBgNVBAsTB1Jvb3QgQ0ExGzAZBgNVBAMTEkds
b2JhbFNpZ24gUm9vdCBDQTAeFw05ODA5MDExMjAwMDBaFw0yODAxMjgxMjAwMDBaMFcxCzAJBgNV
BAYTAkJFMRkwFwYDVQQKExBHbG9iYWxTaWduIG52LXNhMRAwDgYDVQQLEwdSb290IENBMRswGQYD
VQQDExJHbG9iYWxTaWduIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDa
DuaZjc6j40+Kfvvxi4Mla+pIH/EqsLmVEQS98GPR4mdmzxzdzxtIK+6NiY6arymAZavpxy0Sy6sc
THAHoT0KMM0VjU/43dSMUBUc71DuxC73/OlS8pF94G3VNTCOXkNz8kHp1Wrjsok6Vjk4bwY8iGlb
Kk3Fp1S4bInMm/k8yuX9ifUSPJJ4ltbcdG6TRGHRjcdGsnUOhugZitVtbNV4FpWi6cgKOOvyJBNP
c1STE4U6G7weNLWLBYy5d4ux2x8gkasJU26Qzns3dLlwR5EiUWMWea6xrkEmCMgZK9FGqkjWZCrX
gzT/LCrBbBlDSgeF59N89iFo7+ryUp9/k5DPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNV
HRMBAf8EBTADAQH/MB0GA1UdDgQWBBRge2YaRQ2XyolQL30EzTSo//z9SzANBgkqhkiG9w0BAQUF
AAOCAQEA1nPnfE920I2/7LqivjTFKDK1fPxsnCwrvQmeU79rXqoRSLblCKOzyj1hTdNGCbM+w6Dj
Y1Ub8rrvrTnhQ7k4o+YviiY776BQVvnGCv04zcQLcFGUl5gE38NflNUVyRRBnMRddWQVDf9VMOyG
j/8N7yy5Y0b2qvzfvGn9LhJIZJrglfCm7ymPAbEVtQwdpf5pLGkkeB6zpxxxYu7KyJesF12KwvhH
hm4qxFYxldBniYUr+WymXUadDKqC5JlR3XC321Y9YeRq4VzW9v493kHMB65jUr9TU/Qr6cf9tveC
X4XSQRjbgbMEHMUfpIBvFSDJ3gyICh3WZlXi/EjJKSZp4A==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="b5f329fa.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIICPDCCAaUCEC0b/EoXjaOR6+f/9YtFvgswDQYJKoZIhvcNAQECBQAwXzELMAkG
A1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMTcwNQYDVQQLEy5DbGFz
cyAyIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTk2
MDEyOTAwMDAwMFoXDTI4MDgwMTIzNTk1OVowXzELMAkGA1UEBhMCVVMxFzAVBgNV
BAoTDlZlcmlTaWduLCBJbmMuMTcwNQYDVQQLEy5DbGFzcyAyIFB1YmxpYyBQcmlt
YXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIGfMA0GCSqGSIb3DQEBAQUAA4GN
ADCBiQKBgQC2WoujDWojg4BrzzmH9CETMwZMJaLtVRKXxaeAufqDwSCg+i8VDXyh
YGt+eSz6Bg86rvYbb7HS/y8oUl+DfUvEerf4Zh+AVPy3wo5ZShRXRtGak75BkQO7
FYCTXOvnzAhsPz6zSvz/S2wj1VCCJkQZjiPDceoZJEcEnnW/yKYAHwIDAQABMA0G
CSqGSIb3DQEBAgUAA4GBAIobK/o5wXTXXtgZZKJYSi034DNHD6zt96rbHuSLBlxg
J8pFUs4W7z8GZOeUaHxgMxURaa+dYo2jA1Rrpr7l7gUYYAS/QoD90KioHgE796Nc
r6Pc5iaAIzy4RHT3Cq5Ji2F4zCS/iIqnDupzGUH9TQPwiNHleI2lKk/2lw0Xd8rY
-----END CERTIFICATE-----

              ]]></file>
              <file Name="b7db1890.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDezCCAmOgAwIBAgIBATANBgkqhkiG9w0BAQUFADBfMQswCQYDVQQGEwJUVzESMBAGA1UECgwJ
VEFJV0FOLUNBMRAwDgYDVQQLDAdSb290IENBMSowKAYDVQQDDCFUV0NBIFJvb3QgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkwHhcNMDgwODI4MDcyNDMzWhcNMzAxMjMxMTU1OTU5WjBfMQswCQYDVQQG
EwJUVzESMBAGA1UECgwJVEFJV0FOLUNBMRAwDgYDVQQLDAdSb290IENBMSowKAYDVQQDDCFUV0NB
IFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
AoIBAQCwfnK4pAOU5qfeCTiRShFAh6d8WWQUe7UREN3+v9XAu1bihSX0NXIP+FPQQeFEAcK0HMMx
QhZHhTMidrIKbw/lJVBPhYa+v5guEGcevhEFhgWQxFnQfHgQsIBct+HHK3XLfJ+utdGdIzdjp9xC
oi2SBBtQwXu4PhvJVgSLL1KbralW6cH/ralYhzC2gfeXRfwZVzsrb+RH9JlF/h3x+JejiB03HFyP
4HYlmlD4oFT/RJB2I9IyxsOrBr/8+7/zrX2SYgJbKdM1o5OaQ2RgXbL6Mv87BK9NQGr5x+PvI/1r
y+UPizgN7gr8/g+YnzAx3WxSZfmLgb4i4RxYA7qRG4kHAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIB
BjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRqOFsmjd6LWvJPelSDGRjjCDWmujANBgkqhkiG
9w0BAQUFAAOCAQEAPNV3PdrfibqHDAhUaiBQkr6wQT25JmSDCi/oQMCXKCeCMErJk/9q56YAf4lC
mtYR5VPOL8zy2gXE/uJQxDqGfczafhAJO5I1KlOy/usrBdlsXebQ79NqZp4VKIV66IIArB6nCWlW
QtNoURi+VJq/REG6Sb4gumlc7rh3zc5sH62Dlhh9DrUUOYTxKOkto557HnpyWoOzeW/vtPzQCqVY
T0bf+215WfKEIlKuD8z7fDvnaspHYcN6+NOSBB+4IIThNlQWx0DeO4pz3N/GCUzf7Nr/1FNCocny
Yh0igzyXxfkZYiesZSLX0zzG5Y6yU8xJzrww/nsOM5D77dIUkR8Hrw==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="b872f2b4.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDdzCCAl+gAwIBAgIIXDPLYixfszIwDQYJKoZIhvcNAQELBQAwPDEeMBwGA1UEAwwVQXRvcyBU
cnVzdGVkUm9vdCAyMDExMQ0wCwYDVQQKDARBdG9zMQswCQYDVQQGEwJERTAeFw0xMTA3MDcxNDU4
MzBaFw0zMDEyMzEyMzU5NTlaMDwxHjAcBgNVBAMMFUF0b3MgVHJ1c3RlZFJvb3QgMjAxMTENMAsG
A1UECgwEQXRvczELMAkGA1UEBhMCREUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCV
hTuXbyo7LjvPpvMpNb7PGKw+qtn4TaA+Gke5vJrf8v7MPkfoepbCJI419KkM/IL9bcFyYie96mvr
54rMVD6QUM+A1JX76LWC1BTFtqlVJVfbsVD2sGBkWXppzwO3bw2+yj5vdHLqqjAqc2K+SZFhyBH+
DgMq92og3AIVDV4VavzjgsG1xZ1kCWyjWZgHJ8cblithdHFsQ/H3NYkQ4J7sVaE3IqKHBAUsR320
HLliKWYoyrfhk/WklAOZuXCFteZI6o1Q/NnezG8HDt0Lcp2AMBYHlT8oDv3FdU9T1nSatCQujgKR
z3bFmx5VdJx4IbHwLfELn8LVlhgf8FQieowHAgMBAAGjfTB7MB0GA1UdDgQWBBSnpQaxLKYJYO7R
l+lwrrw7GWzbITAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFKelBrEspglg7tGX6XCuvDsZ
bNshMBgGA1UdIAQRMA8wDQYLKwYBBAGwLQMEAQEwDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEB
CwUAA4IBAQAmdzTblEiGKkGdLD4GkGDEjKwLVLgfuXvTBznk+j57sj1O7Z8jvZfza1zv7v1Apt+h
k6EKhqzvINB5Ab149xnYJDE0BAGmuhWawyfc2E8PzBhj/5kPDpFrdRbhIfzYJsdHt6bPWHJxfrrh
TZVHO8mvbaG0weyJ9rQPOLXiZNwlz6bb65pcmaHFCN795trV1lpFDMS3wrUU77QR/w4VtfX128a9
61qn8FYiqTxlVMYVqL2Gns2Dlmh6cYGJ4Qvh6hEbaAjMaZ7snkGeRDImeuKHCnE96+RapNLbxc3G
3mB/ufNPRJLvKrcYPqcZ2Qt9sTdBQrC6YB3y/gkRsPCHe6ed
-----END CERTIFICATE-----

              ]]></file>
              <file Name="bc3f2570.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDxTCCAq2gAwIBAgIBADANBgkqhkiG9w0BAQsFADCBgzELMAkGA1UEBhMCVVMxEDAOBgNVBAgT
B0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxGjAYBgNVBAoTEUdvRGFkZHkuY29tLCBJbmMu
MTEwLwYDVQQDEyhHbyBEYWRkeSBSb290IENlcnRpZmljYXRlIEF1dGhvcml0eSAtIEcyMB4XDTA5
MDkwMTAwMDAwMFoXDTM3MTIzMTIzNTk1OVowgYMxCzAJBgNVBAYTAlVTMRAwDgYDVQQIEwdBcml6
b25hMRMwEQYDVQQHEwpTY290dHNkYWxlMRowGAYDVQQKExFHb0RhZGR5LmNvbSwgSW5jLjExMC8G
A1UEAxMoR28gRGFkZHkgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjCCASIwDQYJKoZI
hvcNAQEBBQADggEPADCCAQoCggEBAL9xYgjx+lk09xvJGKP3gElY6SKDE6bFIEMBO4Tx5oVJnyfq
9oQbTqC023CYxzIBsQU+B07u9PpPL1kwIuerGVZr4oAH/PMWdYA5UXvl+TW2dE6pjYIT5LY/qQOD
+qK+ihVqf94Lw7YZFAXK6sOoBJQ7RnwyDfMAZiLIjWltNowRGLfTshxgtDj6AozO091GB94KPutd
fMh8+7ArU6SSYmlRJQVhGkSBjCypQ5Yj36w6gZoOKcUcqeldHraenjAKOc7xiID7S13MMuyFYkMl
NAJWJwGRtDtwKj9useiciAF9n9T521NtYJ2/LOdYq7hfRvzOxBsDPAnrSTFcaUaz4EcCAwEAAaNC
MEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFDqahQcQZyi27/a9
BUFuIMGU2g/eMA0GCSqGSIb3DQEBCwUAA4IBAQCZ21151fmXWWcDYfF+OwYxdS2hII5PZYe096ac
vNjpL9DbWu7PdIxztDhC2gV7+AJ1uP2lsdeu9tfeE8tTEH6KRtGX+rcuKxGrkLAngPnon1rpN5+r
5N9ss4UXnT3ZJE95kTXWXwTrgIOrmgIttRD02JDHBHNA7XIloKmf7J6raBKZV8aPEjoJpL1E/QYV
N8Gb5DKj7Tjo2GTzLH4U/ALqn83/B2gX2yKQOC16jdFU8WnjXzPKej17CuPKf1855eJ1usV2GDPO
LPAvTK33sefOT6jEm0pUBsV/fdUID+Ic/n4XuKxe9tQWskMJDE32p2u0mYRlynqI4uJEvlz36hz1
-----END CERTIFICATE-----

              ]]></file>
              <file Name="bcdd5959.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIC5zCCAlACAQEwDQYJKoZIhvcNAQEFBQAwgbsxJDAiBgNVBAcTG1ZhbGlDZXJ0
IFZhbGlkYXRpb24gTmV0d29yazEXMBUGA1UEChMOVmFsaUNlcnQsIEluYy4xNTAz
BgNVBAsTLFZhbGlDZXJ0IENsYXNzIDIgUG9saWN5IFZhbGlkYXRpb24gQXV0aG9y
aXR5MSEwHwYDVQQDExhodHRwOi8vd3d3LnZhbGljZXJ0LmNvbS8xIDAeBgkqhkiG
9w0BCQEWEWluZm9AdmFsaWNlcnQuY29tMB4XDTk5MDYyNjAwMTk1NFoXDTE5MDYy
NjAwMTk1NFowgbsxJDAiBgNVBAcTG1ZhbGlDZXJ0IFZhbGlkYXRpb24gTmV0d29y
azEXMBUGA1UEChMOVmFsaUNlcnQsIEluYy4xNTAzBgNVBAsTLFZhbGlDZXJ0IENs
YXNzIDIgUG9saWN5IFZhbGlkYXRpb24gQXV0aG9yaXR5MSEwHwYDVQQDExhodHRw
Oi8vd3d3LnZhbGljZXJ0LmNvbS8xIDAeBgkqhkiG9w0BCQEWEWluZm9AdmFsaWNl
cnQuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDOOnHK5avIWZJV16vY
dA757tn2VUdZZUcOBVXc65g2PFxTXdMwzzjsvUGJ7SVCCSRrCl6zfN1SLUzm1NZ9
WlmpZdRJEy0kTRxQb7XBhVQ7/nHk01xC+YDgkRoKWzk2Z/M/VXwbP7RfZHM047QS
v4dk+NoS/zcnwbNDu+97bi5p9wIDAQABMA0GCSqGSIb3DQEBBQUAA4GBADt/UG9v
UJSZSWI4OB9L+KXIPqeCgfYrx+jFzug6EILLGACOTb2oWH+heQC1u+mNr0HZDzTu
IYEZoDJJKPTEjlbVUjP9UNV+mWwD5MlM/Mtsq2azSiGM5bUMMj4QssxsodyamEwC
W/POuZ6lcg5Ktz885hZo+L7tdEy8W9ViH0Pd
-----END CERTIFICATE-----

              ]]></file>
              <file Name="bda4cc84.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDpDCCAoygAwIBAgIBATANBgkqhkiG9w0BAQUFADBjMQswCQYDVQQGEwJVUzEcMBoGA1UEChMT
QW1lcmljYSBPbmxpbmUgSW5jLjE2MDQGA1UEAxMtQW1lcmljYSBPbmxpbmUgUm9vdCBDZXJ0aWZp
Y2F0aW9uIEF1dGhvcml0eSAxMB4XDTAyMDUyODA2MDAwMFoXDTM3MTExOTIwNDMwMFowYzELMAkG
A1UEBhMCVVMxHDAaBgNVBAoTE0FtZXJpY2EgT25saW5lIEluYy4xNjA0BgNVBAMTLUFtZXJpY2Eg
T25saW5lIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgMTCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAKgv6KRpBgNHw+kqmP8ZonCaxlCyfqXfaE0bfA+2l2h9LaaLl+lkhsmj76CG
v2BlnEtUiMJIxUo5vxTjWVXlGbR0yLQFOVwWpeKVBeASrlmLojNoWBym1BW32J/X3HGrfpq/m44z
DyL9Hy7nBzbvYjnF3cu6JRQj3gzGPTzOggjmZj7aUTsWOqMFf6Dch9Wc/HKpoH145LcxVR5lu9Rh
sCFg7RAycsWSJR74kEoYeEfffjA3PlAb2xzTa5qGUwew76wGePiEmf4hjUyAtgyC9mZweRrTT6PP
8c9GsEsPPt2IYriMqQkoO3rHl+Ee5fSfwMCuJKDIodkP1nsmgmkyPacCAwEAAaNjMGEwDwYDVR0T
AQH/BAUwAwEB/zAdBgNVHQ4EFgQUAK3Zo/Z59m50qX8zPYEX10zPM94wHwYDVR0jBBgwFoAUAK3Z
o/Z59m50qX8zPYEX10zPM94wDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBBQUAA4IBAQB8itEf
GDeC4Liwo+1WlchiYZwFos3CYiZhzRAW18y0ZTTQEYqtqKkFZu90821fnZmv9ov761KyBZiibyrF
VL0lvV+uyIbqRizBs73B6UlwGBaXCBOMIOAbLjpHyx7kADCVW/RFo8AasAFOq73AI25jP4BKxQft
3OJvx8Fi8eNy1gTIdGcL+oiroQHIb/AUr9KZzVGTfu0uOMe9zkZQPXLjeSWdm4grECDdpbgyn43g
Kd8hdIaC2y+CMMbHNYaz+ZZfRtsMRf3zUMNvxsNIrUam4SdHCh0Om7bCd39j8uB9Gr784N/Xx6ds
sPmuujz9dLQR6FgNgLzTqIA6me11zEZ7
-----END CERTIFICATE-----

              ]]></file>
              <file Name="bdacca6f.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDvDCCAqSgAwIBAgIQB1YipOjUiolN9BPI8PjqpTANBgkqhkiG9w0BAQUFADBKMQswCQYDVQQG
EwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24xGTAXBgNVBAMTEFNlY3VyZSBH
bG9iYWwgQ0EwHhcNMDYxMTA3MTk0MjI4WhcNMjkxMjMxMTk1MjA2WjBKMQswCQYDVQQGEwJVUzEg
MB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24xGTAXBgNVBAMTEFNlY3VyZSBHbG9iYWwg
Q0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvNS7YrGxVaQZx5RNoJLNP2MwhR/jx
YDiJiQPpvepeRlMJ3Fz1Wuj3RSoC6zFh1ykzTM7HfAo3fg+6MpjhHZevj8fcyTiW89sa/FHtaMbQ
bqR8JNGuQsiWUGMu4P51/pinX0kuleM5M2SOHqRfkNJnPLLZ/kG5VacJjnIFHovdRIWCQtBJwB1g
8NEXLJXr9qXBkqPFwqcIYA1gBBCWeZ4WNOaptvolRTnIHmX5k/Wq8VLcmZg9pYYaDDUz+kulBAYV
HDGA76oYa8J719rO+TMg1fW9ajMtgQT7sFzUnKPiXB3jqUJ1XnvUd+85VLrJChgbEplJL4hL/VBi
0XPnj3pDAgMBAAGjgZ0wgZowEwYJKwYBBAGCNxQCBAYeBABDAEEwCwYDVR0PBAQDAgGGMA8GA1Ud
EwEB/wQFMAMBAf8wHQYDVR0OBBYEFK9EBMJBfkiD2045AuzshHrmzsmkMDQGA1UdHwQtMCswKaAn
oCWGI2h0dHA6Ly9jcmwuc2VjdXJldHJ1c3QuY29tL1NHQ0EuY3JsMBAGCSsGAQQBgjcVAQQDAgEA
MA0GCSqGSIb3DQEBBQUAA4IBAQBjGghAfaReUw132HquHw0LURYD7xh8yOOvaliTFGCRsoTciE6+
OYo68+aCiV0BN7OrJKQVDpI1WkpEXk5X+nXOH0jOZvQ8QCaSmGwb7iRGDBezUqXbpZGRzzfTb+cn
CDpOGR86p1hcF895P4vkp9MmI50mD1hp/Ed+stCNi5O/KU9DaXR2Z0vPB4zmAve14bRDtUstFJ/5
3CYNv6ZHdAbYiNE6KTCEztI5gGIbqMdXSbxqVVFnFUq+NQfk1XWYN3kwFNspnWzFacxHVaIw98xc
f8LDmBxrThaA63p4ZUWiABqvDA1VZDRIuJK58bRQKfJPIx/abKwfROHdI3hRW8cW
-----END CERTIFICATE-----

              ]]></file>
              <file Name="bf64f35b.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEkTCCA3mgAwIBAgIERWtQVDANBgkqhkiG9w0BAQUFADCBsDELMAkGA1UEBhMCVVMxFjAUBgNV
BAoTDUVudHJ1c3QsIEluYy4xOTA3BgNVBAsTMHd3dy5lbnRydXN0Lm5ldC9DUFMgaXMgaW5jb3Jw
b3JhdGVkIGJ5IHJlZmVyZW5jZTEfMB0GA1UECxMWKGMpIDIwMDYgRW50cnVzdCwgSW5jLjEtMCsG
A1UEAxMkRW50cnVzdCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTA2MTEyNzIwMjM0
MloXDTI2MTEyNzIwNTM0MlowgbAxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1FbnRydXN0LCBJbmMu
MTkwNwYDVQQLEzB3d3cuZW50cnVzdC5uZXQvQ1BTIGlzIGluY29ycG9yYXRlZCBieSByZWZlcmVu
Y2UxHzAdBgNVBAsTFihjKSAyMDA2IEVudHJ1c3QsIEluYy4xLTArBgNVBAMTJEVudHJ1c3QgUm9v
dCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
ALaVtkNC+sZtKm9I35RMOVcF7sN5EUFoNu3s/poBj6E4KPz3EEZmLk0eGrEaTsbRwJWIsMn/MYsz
A9u3g3s+IIRe7bJWKKf44LlAcTfFy0cOlypowCKVYhXbR9n10Cv/gkvJrT7eTNuQgFA/CYqEAOww
Cj0Yzfv9KlmaI5UXLEWeH25DeW0MXJj+SKfFI0dcXv1u5x609mhF0YaDW6KKjbHjKYD+JXGIrb68
j6xSlkuqUY3kEzEZ6E5Nn9uss2rVvDlUccp6en+Q3X0dgNmBu1kmwhH+5pPi94DkZfs0Nw4pgHBN
rziGLp5/V6+eF67rHMsoIV+2HNjnogQi+dPa2MsCAwEAAaOBsDCBrTAOBgNVHQ8BAf8EBAMCAQYw
DwYDVR0TAQH/BAUwAwEB/zArBgNVHRAEJDAigA8yMDA2MTEyNzIwMjM0MlqBDzIwMjYxMTI3MjA1
MzQyWjAfBgNVHSMEGDAWgBRokORnpKZTgMeGZqTx90tD+4S9bTAdBgNVHQ4EFgQUaJDkZ6SmU4DH
hmak8fdLQ/uEvW0wHQYJKoZIhvZ9B0EABBAwDhsIVjcuMTo0LjADAgSQMA0GCSqGSIb3DQEBBQUA
A4IBAQCT1DCw1wMgKtD5Y+iRDAUgqV8ZyntyTtSx29CW+1RaGSwMCPeyvIWonX9tO1KzKtvn1ISM
Y/YPyyYBkVBs9F8U4pN0wBOeMDpQ47RgxRzwIkSNcUesyBrJ6ZuaAGAT/3B+XxFNSRuzFVJ7yVTa
v52Vr2ua2J7p8eRDjeIRRDq/r72DQnNSi6q7pynP9WQcCk3RvKqsnyrQ/39/2n3qse0wJcGE2jTS
W3iDVuycNsMm4hH2Z0kdkquM++v/eu6FSqdQgPCnXEqULl8FmTxSQeDNtGPPAUO6nIPcj2A781q0
tHuu2guQOHXvgR1m0vdXcDazv/wor3ElhVsT/h5/WrQ8
-----END CERTIFICATE-----

              ]]></file>
              <file Name="bf87590f.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFaDCCBFCgAwIBAgIQO1nHe81bV569N1KsdrSqGjANBgkqhkiG9w0BAQUFADBi
MRIwEAYDVQQKEwliZVRSVVNUZWQxGzAZBgNVBAsTEmJlVFJVU1RlZCBSb290IENB
czEvMC0GA1UEAxMmYmVUUlVTVGVkIFJvb3QgQ0EgLSBSU0EgSW1wbGVtZW50YXRp
b24wHhcNMDIwNDExMTExODEzWhcNMjIwNDEyMTEwNzI1WjBiMRIwEAYDVQQKEwli
ZVRSVVNUZWQxGzAZBgNVBAsTEmJlVFJVU1RlZCBSb290IENBczEvMC0GA1UEAxMm
YmVUUlVTVGVkIFJvb3QgQ0EgLSBSU0EgSW1wbGVtZW50YXRpb24wggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQDkujQwCY5X0LkGLG9uJIAiv11DpvpPrILn
HGhwhRujbrWqeNluB0s/6d/16uhUoWGKDi9pdRi3DOUUjXFumLhV/AyV0Jtu4S2I
1DpAa5LxmZZk3tv/ePTulh1HiXzUvrmIdyM6CeYEnm2qXtLIvZpOGd+J6lsOfsPk
tPDgaTuID0GQ+NRxQyTBjyZLO1bp/4xsN+lFrYWMU8NghpBKlsmzVLC7F/AcRdnU
GxlkVgoZ98zh/4avflherHqQH8koOUV7orbHnB/ahdQhhlkwk75TMzf270HPM8er
cmsl9fNTGwxMLvF1S++gh/f+ihXQbNXL+WhTuXAVE8L1LvtDNXUtAgMBAAGjggIY
MIICFDAMBgNVHRMEBTADAQH/MIIBtQYDVR0gBIIBrDCCAagwggGkBg8rBgEEAbE+
AAADCSiDkTEwggGPMEEGCCsGAQUFBwIBFjVodHRwOi8vd3d3LmJldHJ1c3RlZC5j
b20vcHJvZHVjdHNfc2VydmljZXMvaW5kZXguaHRtbDCCAUgGCCsGAQUFBwICMIIB
OhqCATZSZWxpYW5jZSBvbiBvciB1c2Ugb2YgdGhpcyBDZXJ0aWZpY2F0ZSBjcmVh
dGVzIGFuIGFja25vd2xlZGdtZW50IGFuZCBhY2NlcHRhbmNlIG9mIHRoZSB0aGVu
IGFwcGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdXNl
LCB0aGUgQ2VydGlmaWNhdGlvbiBQcmFjdGljZSBTdGF0ZW1lbnQgYW5kIHRoZSBS
ZWx5aW5nIFBhcnR5IEFncmVlbWVudCwgd2hpY2ggY2FuIGJlIGZvdW5kIGF0IHRo
ZSBiZVRSVVNUZWQgd2ViIHNpdGUsIGh0dHA6Ly93d3cuYmV0cnVzdGVkLmNvbS9w
cm9kdWN0c19zZXJ2aWNlcy9pbmRleC5odG1sMAsGA1UdDwQEAwIBBjAfBgNVHSME
GDAWgBSp7BR++dlDzFMrFK3P9/BZiUHNGTAdBgNVHQ4EFgQUqewUfvnZQ8xTKxSt
z/fwWYlBzRkwDQYJKoZIhvcNAQEFBQADggEBANuXsHXqDMTBmMpWBcCorSZIry0g
6IHHtt9DwSwddUvUQo3neqh03GZCWYez9Wlt2ames30cMcH1VOJZJEnl7r05pmuK
mET7m9cqg5c0Lcd9NUwtNLg+DcTsiCevnpL9UGGCqGAHFFPMZRPB9kdEadIxyKbd
LrML3kqNWz2rDcI1UqJWN8wyiyiFQpyRQHpwKzg21eFzGh/l+n5f3NacOzDq28Bb
J1zTcwfBwvNMm2+fG8oeqqg4MwlYsq78B+g23FW6L09A/nq9BqaBwZMifIYRCgZ3
SK41ty8ymmFei74pnykkiFY5LKjSq5YDWtRIn7lAhAuYaPsBQ9Yb4gmxlxw=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="c19d42c7.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDAjCCAmsCEEzH6qqYPnHTkxD4PTqJkZIwDQYJKoZIhvcNAQEFBQAwgcExCzAJ
BgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xh
c3MgMSBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcy
MTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3Jp
emVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMB4X
DTk4MDUxODAwMDAwMFoXDTI4MDgwMTIzNTk1OVowgcExCzAJBgNVBAYTAlVTMRcw
FQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgMSBQdWJsaWMg
UHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcyMTowOAYDVQQLEzEo
YykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5
MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMIGfMA0GCSqGSIb3DQEB
AQUAA4GNADCBiQKBgQCq0Lq+Fi24g9TK0g+8djHKlNgdk4xWArzZbxpvUjZudVYK
VdPfQ4chEWWKfo+9Id5rMj8bhDSVBZ1BNeuS65bdqlk/AVNtmU/t5eIqWpDBucSm
Fc/IReumXY6cPvBkJHalzasab7bYe1FhbqZ/h8jit+U03EGI6glAvnOSPWvndQID
AQABMA0GCSqGSIb3DQEBBQUAA4GBAKlPww3HZ74sy9mozS11534Vnjty637rXC0J
h9ZrbWB85a7FkCMMXErQr7Fd88e2CtvgFZMN3QO8x3aKtd1Pw5sTdbgBwObJW2ul
uIncrKTdcu1OofdPvAbT6shkdHvClUGcZXNY8ZCaPGqxmMnEh7zPRW1F4m4iP/68
DzFc6PLZ
-----END CERTIFICATE-----

              ]]></file>
              <file Name="c215bc69.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDKTCCApKgAwIBAgIENnAVljANBgkqhkiG9w0BAQUFADBGMQswCQYDVQQGEwJV
UzEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QgQ28uMREwDwYDVQQL
EwhEU1RDQSBFMTAeFw05ODEyMTAxODEwMjNaFw0xODEyMTAxODQwMjNaMEYxCzAJ
BgNVBAYTAlVTMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4x
ETAPBgNVBAsTCERTVENBIEUxMIGdMA0GCSqGSIb3DQEBAQUAA4GLADCBhwKBgQCg
bIGpzzQeJN3+hijM3oMv+V7UQtLodGBmE5gGHKlREmlvMVW5SXIACH7TpWJENySZ
j9mDSI+ZbZUTu0M7LklOiDfBu1h//uG9+LthzfNHwJmm8fOR6Hh8AMthyUQncWlV
Sn5JTe2io74CTADKAqjuAQIxZA9SLRN0dja1erQtcQIBA6OCASQwggEgMBEGCWCG
SAGG+EIBAQQEAwIABzBoBgNVHR8EYTBfMF2gW6BZpFcwVTELMAkGA1UEBhMCVVMx
JDAiBgNVBAoTG0RpZ2l0YWwgU2lnbmF0dXJlIFRydXN0IENvLjERMA8GA1UECxMI
RFNUQ0EgRTExDTALBgNVBAMTBENSTDEwKwYDVR0QBCQwIoAPMTk5ODEyMTAxODEw
MjNagQ8yMDE4MTIxMDE4MTAyM1owCwYDVR0PBAQDAgEGMB8GA1UdIwQYMBaAFGp5
fpFpRhgTCgJ3pVlbYJglDqL4MB0GA1UdDgQWBBRqeX6RaUYYEwoCd6VZW2CYJQ6i
+DAMBgNVHRMEBTADAQH/MBkGCSqGSIb2fQdBAAQMMAobBFY0LjADAgSQMA0GCSqG
SIb3DQEBBQUAA4GBACIS2Hod3IEGtgllsofIH160L+nEHvI8wbsEkBFKg05+k7lN
QseSJqBcNJo4cvj9axY+IO6CizEqkzaFI4iKPANo08kJD038bKTaKHKTDomAsH3+
gG9lbRgzl4vCa4nuYD3Im+9/KzJic5PLPON74nZ4RbyhkwS7hp86W0N6w4pl
-----END CERTIFICATE-----

              ]]></file>
              <file Name="c33a80d4.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDJzCCApCgAwIBAgIBATANBgkqhkiG9w0BAQQFADCBzjELMAkGA1UEBhMCWkExFTATBgNVBAgT
DFdlc3Rlcm4gQ2FwZTESMBAGA1UEBxMJQ2FwZSBUb3duMR0wGwYDVQQKExRUaGF3dGUgQ29uc3Vs
dGluZyBjYzEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lvbjEhMB8GA1UE
AxMYVGhhd3RlIFByZW1pdW0gU2VydmVyIENBMSgwJgYJKoZIhvcNAQkBFhlwcmVtaXVtLXNlcnZl
ckB0aGF3dGUuY29tMB4XDTk2MDgwMTAwMDAwMFoXDTIwMTIzMTIzNTk1OVowgc4xCzAJBgNVBAYT
AlpBMRUwEwYDVQQIEwxXZXN0ZXJuIENhcGUxEjAQBgNVBAcTCUNhcGUgVG93bjEdMBsGA1UEChMU
VGhhd3RlIENvbnN1bHRpbmcgY2MxKDAmBgNVBAsTH0NlcnRpZmljYXRpb24gU2VydmljZXMgRGl2
aXNpb24xITAfBgNVBAMTGFRoYXd0ZSBQcmVtaXVtIFNlcnZlciBDQTEoMCYGCSqGSIb3DQEJARYZ
cHJlbWl1bS1zZXJ2ZXJAdGhhd3RlLmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA0jY2
aovXwlue2oFBYo847kkEVdbQ7xwblRZH7xhINTpS9CtqBo87L+pW46+GjZ4X9560ZXUCTe/LCaIh
Udib0GfQug2SBhRz1JPLlyoAnFxODLz6FVL88kRu2hFKbgifLy3j+ao6hnO2RlNYyIkFvYMRuHM/
qgeN9EJN50CdHDcCAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQQFAAOBgQAm
SCwWwlj66BZ0DKqqX1Q/8tfJeGBeXm43YyJ3Nn6yF8Q0ufUIhfzJATj/Tb7yFkJD57taRvvBxhEf
8UqwKEbJw8RCfbz6q1lu1bdRiBHjpIUZa4JMpAwSremkrj/xw0llmozFyD4lt5SZu5IycQfwhl7t
UCemDaYj+bvLpgcUQg==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="c3a6a9ad.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDzzCCAregAwIBAgIDAWweMA0GCSqGSIb3DQEBBQUAMIGNMQswCQYDVQQGEwJBVDFIMEYGA1UE
Cgw/QS1UcnVzdCBHZXMuIGYuIFNpY2hlcmhlaXRzc3lzdGVtZSBpbSBlbGVrdHIuIERhdGVudmVy
a2VociBHbWJIMRkwFwYDVQQLDBBBLVRydXN0LW5RdWFsLTAzMRkwFwYDVQQDDBBBLVRydXN0LW5R
dWFsLTAzMB4XDTA1MDgxNzIyMDAwMFoXDTE1MDgxNzIyMDAwMFowgY0xCzAJBgNVBAYTAkFUMUgw
RgYDVQQKDD9BLVRydXN0IEdlcy4gZi4gU2ljaGVyaGVpdHNzeXN0ZW1lIGltIGVsZWt0ci4gRGF0
ZW52ZXJrZWhyIEdtYkgxGTAXBgNVBAsMEEEtVHJ1c3QtblF1YWwtMDMxGTAXBgNVBAMMEEEtVHJ1
c3QtblF1YWwtMDMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCtPWFuA/OQO8BBC4SA
zewqo51ru27CQoT3URThoKgtUaNR8t4j8DRE/5TrzAUjlUC5B3ilJfYKvUWG6Nm9wASOhURh73+n
yfrBJcyFLGM/BWBzSQXgYHiVEEvc+RFZznF/QJuKqiTfC0Li21a8StKlDJu3Qz7dg9MmEALP6iPE
SU7l0+m0iKsMrmKS1GWH2WrX9IWf5DMiJaXlyDO6w8dB3F/GaswADm0yqLaHNgBid5seHzTLkDx4
iHQF63n1k3Flyp3HaxgtPVxO59X4PzF9j4fsCiIvI+n+u33J4PTs63zEsMMtYrWacdaxaujs2e3V
cuy+VwHOBVWf3tFgiBCzAgMBAAGjNjA0MA8GA1UdEwEB/wQFMAMBAf8wEQYDVR0OBAoECERqlWdV
eRFPMA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQUFAAOCAQEAVdRU0VlIXLOThaq/Yy/kgM40
ozRiPvbY7meIMQQDbwvUB/tOdQ/TLtPAF8fGKOwGDREkDg6lXb+MshOWcdzUzg4NCmgybLlBMRmr
sQd7TZjTXLDR8KdCoLXEjq/+8T/0709GAHbrAvv5ndJAlseIOrifEXnzgGWovR/TeIGgUUw3tKZd
JXDRZslo+S4RFGjxVJgIrCaSD96JntT6s3kr0qN51OyLrIdTaEJMUVF0HhsnLuP1Hyl0Te2v9+GS
mYHovjrHF1D2t8b8m7CKa9aIA5GPBnc6hQLdmNVDeD/GMBWsm2vLV7eJUYs66MmEDNuxUCAKGkq6
ahq97BvIxYSazQ==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="c491639e.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIICRjCCAc2gAwIBAgIQC6Fa+h3foLVJRK/NJKBs7DAKBggqhkjOPQQDAzBlMQswCQYDVQQGEwJV
UzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSQwIgYD
VQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgRzMwHhcNMTMwODAxMTIwMDAwWhcNMzgwMTE1
MTIwMDAwWjBlMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
d3cuZGlnaWNlcnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgRzMwdjAQ
BgcqhkjOPQIBBgUrgQQAIgNiAAQZ57ysRGXtzbg/WPuNsVepRC0FFfLvC/8QdJ+1YlJfZn4f5dwb
RXkLzMZTCp2NXQLZqVneAlr2lSoOjThKiknGvMYDOAdfVdp+CW7if17QRSAPWXYQ1qAk8C3eNvJs
KTmjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgGGMB0GA1UdDgQWBBTL0L2p4ZgF
UaFNN6KDec6NHSrkhDAKBggqhkjOPQQDAwNnADBkAjAlpIFFAmsSS3V0T8gj43DydXLefInwz5Fy
YZ5eEJJZVrmDxxDnOOlYJjZ91eQ0hjkCMHw2U/Aw5WJjOpnitqM7mzT6HtoQknFekROn3aRukswy
1vUhZscv6pZjamVFkpUBtA==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="c51c224c.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDZzCCAk+gAwIBAgIQGx+ttiD5JNM2a/fH8YygWTANBgkqhkiG9w0BAQUFADBFMQswCQYDVQQG
EwJHQjEYMBYGA1UEChMPVHJ1c3RpcyBMaW1pdGVkMRwwGgYDVQQLExNUcnVzdGlzIEZQUyBSb290
IENBMB4XDTAzMTIyMzEyMTQwNloXDTI0MDEyMTExMzY1NFowRTELMAkGA1UEBhMCR0IxGDAWBgNV
BAoTD1RydXN0aXMgTGltaXRlZDEcMBoGA1UECxMTVHJ1c3RpcyBGUFMgUm9vdCBDQTCCASIwDQYJ
KoZIhvcNAQEBBQADggEPADCCAQoCggEBAMVQe547NdDfxIzNjpvto8A2mfRC6qc+gIMPpqdZh8mQ
RUN+AOqGeSoDvT03mYlmt+WKVoaTnGhLaASMk5MCPjDSNzoiYYkchU59j9WvezX2fihHiTHcDnlk
H5nSW7r+f2C/revnPDgpai/lkQtV/+xvWNUtyd5MZnGPDNcE2gfmHhjjvSkCqPoc4Vu5g6hBSLwa
cY3nYuUtsuvffM/bq1rKMfFMIvMFE/eC+XN5DL7XSxzA0RU8k0Fk0ea+IxciAIleH2ulrG6nS4zt
o3Lmr2NNL4XSFDWaLk6M6jKYKIahkQlBOrTh4/L68MkKokHdqeMDx4gVOxzUGpTXn2RZEm0CAwEA
AaNTMFEwDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBS6+nEleYtXQSUhhgtx67JkDoshZzAd
BgNVHQ4EFgQUuvpxJXmLV0ElIYYLceuyZA6LIWcwDQYJKoZIhvcNAQEFBQADggEBAH5Y//01GX2c
GE+esCu8jowU/yyg2kdbw++BLa8F6nRIW/M+TgfHbcWzk88iNVy2P3UnXwmWzaD+vkAMXBJV+JOC
yinpXj9WV4s4NvdFGkwozZ5BuO1WTISkQMi4sKUraXAEasP41BIy+Q7DsdwyhEQsb8tGD+pmQQ9P
8Vilpg0ND2HepZ5dfWWhPBfnqFVO76DH7cZEf1T1o+CP8HxVIo8ptoGj4W1OLBuAZ+ytIJ8MYmHV
l/9D7S3B2l0pKoU/rGXuhg8FjZBf3+6f9L/uHfuY5H+QK4R4EA5sSVPvFVtlRkpdr7r7OnIdzfYl
iB6XzCGcKQENZetX2fNXlrtIzYE=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="c527e4ab.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEGjCCAwICEQDsoKeLbnVqAc/EfMwvlF7XMA0GCSqGSIb3DQEBBQUAMIHKMQswCQYDVQQGEwJV
UzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdv
cmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNl
IG9ubHkxRTBDBgNVBAMTPFZlcmlTaWduIENsYXNzIDQgUHVibGljIFByaW1hcnkgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQsw
CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRy
dXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhv
cml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWduIENsYXNzIDQgUHVibGljIFByaW1hcnkg
Q2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
ggEBAK3LpRFpxlmr8Y+1GQ9Wzsy1HyDkniYlS+BzZYlZ3tCD5PUPtbut8XzoIfzk6AzufEUiGXaS
tBO3IFsJ+mGuqPKljYXCKtbeZjbSmwL0qJJgfJxptI8kHtCGUvYynEFYHiK9zUVilQhu0GbdU6LM
8BDcVHOLBKFGMzNcF0C5nk3T875Vg+ixiY5afJqWIpA7iCXy0lOIAgwLePLmNxdLMEYH5IBtptiW
Lugs+BGzOA1mppvqySNb247i8xOOGlktqgLw7KSHZtzBP/XYufTsgsbSPZUd5cBPhMnZo0QoBmrX
Razwa2rvTl/4EYIeOGM0ZlDUPpNz+jDDZq3/ky2X7wMCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEA
j/ola09b5KROJ1WrIhVZPMq1CtRK26vdoV9TxaBXOcLORyu+OshWv8LZJxA6sQU8wHcxuzrTBXtt
mhwwjIDLk5Mqg6sFUYICABFna/OIYUdfA5PVWw3g8dShMjWFsjrbsIKr0csKvE+MW8VLADsfKoKm
fjaF3H48ZwC15DtS4KjrXRX5xm3wrR0OhbepmnMUWluPQSjA1egtTaRezarZ7c7c2NU8Qh0XwRJd
RTjDOPP8hS6DRkiy1yBfkjaP53kPmF6Z6PDQpLv1U70qzlmwr25/bLvSHgCwIe34QWKCudiyxLtG
UPMxxY8BqHTr9Xgn2uf3ZkPznoM+IKrDNWCRzg==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="c7e2a638.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIID/jCCAuagAwIBAgIQFaxulBmyeUtB9iepwxgPHzANBgkqhkiG9w0BAQsFADCBmDELMAkGA1UE
BhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xOTA3BgNVBAsTMChjKSAyMDA4IEdlb1RydXN0
IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTE2MDQGA1UEAxMtR2VvVHJ1c3QgUHJpbWFy
eSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEczMB4XDTA4MDQwMjAwMDAwMFoXDTM3MTIwMTIz
NTk1OVowgZgxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTkwNwYDVQQLEzAo
YykgMjAwOCBHZW9UcnVzdCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxNjA0BgNVBAMT
LUdlb1RydXN0IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMzCCASIwDQYJKoZI
hvcNAQEBBQADggEPADCCAQoCggEBANziXmJYHTNXOTIz+uvLh4yn1ErdBojqZI4xmKU4kB6Yzy5j
K/BGvESyiaHAKAxJcCGVn2TAppMSAmUmhsalifD614SgcK9PGpc/BkTVyetyEH3kMSj7HGHmKAdE
c5IiaacDiGydY8hS2pgn5whMcD60yRLBxWeDXTPzAxHsatBT4tG6NmCUgLthY2xbF37fQJQeqw3C
IShwiP/WJmxsYAQlTlV+fe+/lEjetx3dcI0FX4ilm/LC7urRQEFtYjgdVgbFA0dRIBn8exALDmKu
dlW/X3e+PkkBUz2YJQN2JFodtNuJ6nnltrM7P7pMKEF/BqxqjsHQ9gUdfeZChuOl1UcCAwEAAaNC
MEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFMR5yo6hTgMdHNxr
2zFblD4/MH8tMA0GCSqGSIb3DQEBCwUAA4IBAQAtxRPPVoB7eni9n64smefv2t+UXglpp+duaIy9
cr5HqQ6XErhK8WTTOd8lNNTBzU6B8A8ExCSzNJbGpqow32hhc9f5joWJ7w5elShKKiePEI4ufIbE
Ap7aDHdlDkQNkv39sxY2+hENHYwOB4lqKVb3cvTdFZx3NWZXqxNT2I7BQMXXExZacse3aQHEerGD
AWh9jUGhlBjBJVz88P6DAod8DQ3PLghcSkANPuyBYeYk28rgDi0Hsj5W3I31QYUHSJsMC8tJP33s
t/3LjWeJGqvtux6jAAgIFyqCXDFdRootD4abdNlF+9RAsXqqaC2Gspki4cErx5z481+oghLrGREt
-----END CERTIFICATE-----

              ]]></file>
              <file Name="c90bc37d.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDjjCCAnagAwIBAgIQAzrx5qcRqaC7KGSxHQn65TANBgkqhkiG9w0BAQsFADBhMQswCQYDVQQG
EwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSAw
HgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBHMjAeFw0xMzA4MDExMjAwMDBaFw0zODAxMTUx
MjAwMDBaMGExCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3
dy5kaWdpY2VydC5jb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IEcyMIIBIjANBgkq
hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuzfNNNx7a8myaJCtSnX/RrohCgiN9RlUyfuI2/Ou8jqJ
kTx65qsGGmvPrC3oXgkkRLpimn7Wo6h+4FR1IAWsULecYxpsMNzaHxmx1x7e/dfgy5SDN67sH0NO
3Xss0r0upS/kqbitOtSZpLYl6ZtrAGCSYP9PIUkY92eQq2EGnI/yuum06ZIya7XzV+hdG82MHauV
BJVJ8zUtluNJbd134/tJS7SsVQepj5WztCO7TG1F8PapspUwtP1MVYwnSlcUfIKdzXOS0xZKBgyM
UNGPHgm+F6HmIcr9g+UQvIOlCsRnKPZzFBQ9RnbDhxSJITRNrw9FDKZJobq7nMWxM4MphQIDAQAB
o0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUTiJUIBiV5uNu
5g/6+rkS7QYXjzkwDQYJKoZIhvcNAQELBQADggEBAGBnKJRvDkhj6zHd6mcY1Yl9PMWLSn/pvtsr
F9+wX3N3KjITOYFnQoQj8kVnNeyIv/iPsGEMNKSuIEyExtv4NeF22d+mQrvHRAiGfzZ0JFrabA0U
WTW98kndth/Jsw1HKj2ZL7tcu7XUIOGZX1NGFdtom/DzMNU+MeKNhJ7jitralj41E6Vf8PlwUHBH
QRFXGU7Aj64GxJUTFy8bJZ918rGOmaFvE7FBcf6IKshPECBV1/MUReXgRPTqh5Uykw7+U0b6LJ3/
iyK5S9kJRaTepLiaWN0bfVKfjllDiIGknibVb63dDcY3fe0Dkhvld1927jyNxF1WW6LZZm6zNTfl
MrY=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="c9bc75ba.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDtTCCAp2gAwIBAgIRANAeQJAAAEZSAAAAAQAAAAQwDQYJKoZIhvcNAQEFBQAw
gYkxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJEQzETMBEGA1UEBxMKV2FzaGluZ3Rv
bjEXMBUGA1UEChMOQUJBLkVDT00sIElOQy4xGTAXBgNVBAMTEEFCQS5FQ09NIFJv
b3QgQ0ExJDAiBgkqhkiG9w0BCQEWFWFkbWluQGRpZ3NpZ3RydXN0LmNvbTAeFw05
OTA3MTIxNzMzNTNaFw0wOTA3MDkxNzMzNTNaMIGJMQswCQYDVQQGEwJVUzELMAkG
A1UECBMCREMxEzARBgNVBAcTCldhc2hpbmd0b24xFzAVBgNVBAoTDkFCQS5FQ09N
LCBJTkMuMRkwFwYDVQQDExBBQkEuRUNPTSBSb290IENBMSQwIgYJKoZIhvcNAQkB
FhVhZG1pbkBkaWdzaWd0cnVzdC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
ggEKAoIBAQCx0xHgeVVDBwhMywVCAOINg0Y95JO6tgbTDVm9PsHOQ2cBiiGo77zM
0KLMsFWWU4RmBQDaREmA2FQKpSWGlO1jVv9wbKOhGdJ4vmgqRF4vz8wYXke8OrFG
PR7wuSw0X4x8TAgpnUBV6zx9g9618PeKgw6hTLQ6pbNfWiKX7BmbwQVo/ea3qZGU
LOR4SCQaJRk665WcOQqKz0Ky8BzVX/tr7WhWezkscjiw7pOp03t3POtxA6k4ShZs
iSrK2jMTecJVjO2cu/LLWxD4LmE1xilMKtAqY9FlWbT4zfn0AIS2V0KFnTKo+SpU
+/94Qby9cSj0u5C8/5Y0BONFnqFGKECBAgMBAAGjFjAUMBIGA1UdEwEB/wQIMAYB
Af8CAQgwDQYJKoZIhvcNAQEFBQADggEBAARvJYbk5pYntNlCwNDJALF/VD6Hsm0k
qS8Kfv2kRLD4VAe9G52dyntQJHsRW0mjpr8SdNWJt7cvmGQlFLdh6X9ggGvTZOir
vRrWUfrAtF13Gn9kCF55xgVM8XrdTX3O5kh7VNJhkoHWG9YA8A6eKHegTYjHInYZ
w8eeG6Z3ePhfm1bR8PIXrI6dWeYf/le22V7hXZ9F7GFoGUHhsiAm/lowdiT/QHI8
eZ98IkirRs3bs4Ysj78FQdPB4xTjQRcm0HyncUwZ6EoPclgxfexgeqMiKL0ZJGA/
O4dzwGvky663qyVDslUte6sGDnVdNOVdc22esnVApVnJTzFxiNmIf1Q=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="cb156124.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIGSzCCBDOgAwIBAgIIamg+nFGby1MwDQYJKoZIhvcNAQELBQAwgbIxCzAJBgNVBAYTAlRSMQ8w
DQYDVQQHDAZBbmthcmExQDA+BgNVBAoMN0UtVHXEn3JhIEVCRyBCaWxpxZ9pbSBUZWtub2xvamls
ZXJpIHZlIEhpem1ldGxlcmkgQS7Fni4xJjAkBgNVBAsMHUUtVHVncmEgU2VydGlmaWthc3lvbiBN
ZXJrZXppMSgwJgYDVQQDDB9FLVR1Z3JhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTEzMDMw
NTEyMDk0OFoXDTIzMDMwMzEyMDk0OFowgbIxCzAJBgNVBAYTAlRSMQ8wDQYDVQQHDAZBbmthcmEx
QDA+BgNVBAoMN0UtVHXEn3JhIEVCRyBCaWxpxZ9pbSBUZWtub2xvamlsZXJpIHZlIEhpem1ldGxl
cmkgQS7Fni4xJjAkBgNVBAsMHUUtVHVncmEgU2VydGlmaWthc3lvbiBNZXJrZXppMSgwJgYDVQQD
DB9FLVR1Z3JhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIICIjANBgkqhkiG9w0BAQEFAAOCAg8A
MIICCgKCAgEA4vU/kwVRHoViVF56C/UYB4Oufq9899SKa6VjQzm5S/fDxmSJPZQuVIBSOTkHS0vd
hQd2h8y/L5VMzH2nPbxHD5hw+IyFHnSOkm0bQNGZDbt1bsipa5rAhDGvykPL6ys06I+XawGb1Q5K
CKpbknSFQ9OArqGIW66z6l7LFpp3RMih9lRozt6Plyu6W0ACDGQXwLWTzeHxE2bODHnv0ZEoq1+g
ElIwcxmOj+GMB6LDu0rw6h8VqO4lzKRG+Bsi77MOQ7osJLjFLFzUHPhdZL3Dk14opz8n8Y4e0ypQ
BaNV2cvnOVPAmJ6MVGKLJrD3fY185MaeZkJVgkfnsliNZvcHfC425lAcP9tDJMW/hkd5s3kc91r0
E+xs+D/iWR+V7kI+ua2oMoVJl0b+SzGPWsutdEcf6ZG33ygEIqDUD13ieU/qbIWGvaimzuT6w+Gz
rt48Ue7LE3wBf4QOXVGUnhMMti6lTPk5cDZvlsouDERVxcr6XQKj39ZkjFqzAQqptQpHF//vkUAq
jqFGOjGY5RH8zLtJVor8udBhmm9lbObDyz51Sf6Pp+KJxWfXnUYTTjF2OySznhFlhqt/7x3U+Lzn
rFpct1pHXFXOVbQicVtbC/DP3KBhZOqp12gKY6fgDT+gr9Oq0n7vUaDmUStVkhUXU8u3Zg5mTPj5
dUyQ5xJwx0UCAwEAAaNjMGEwHQYDVR0OBBYEFC7j27JJ0JxUeVz6Jyr+zE7S6E5UMA8GA1UdEwEB
/wQFMAMBAf8wHwYDVR0jBBgwFoAULuPbsknQnFR5XPonKv7MTtLoTlQwDgYDVR0PAQH/BAQDAgEG
MA0GCSqGSIb3DQEBCwUAA4ICAQAFNzr0TbdF4kV1JI+2d1LoHNgQk2Xz8lkGpD4eKexd0dCrfOAK
kEh47U6YA5n+KGCRHTAduGN8qOY1tfrTYXbm1gdLymmasoR6d5NFFxWfJNCYExL/u6Au/U5Mh/jO
XKqYGwXgAEZKgoClM4so3O0409/lPun++1ndYYRP0lSWE2ETPo+Aab6TR7U1Q9Jauz1c77NCR807
VRMGsAnb/WP2OogKmW9+4c4bU2pEZiNRCHu8W1Ki/QY3OEBhj0qWuJA3+GbHeJAAFS6LrVE1Uweo
a2iu+U48BybNCAVwzDk/dr2l02cmAYamU9JgO3xDf1WKvJUawSg5TB9D0pH0clmKuVb8P7Sd2nCc
dlqMQ1DujjByTd//SffGqWfZbawCEeI6FiWnWAjLb1NBnEg4R2gz0dfHj9R0IdTDBZB6/86WiLEV
KV0jq9BgoRJP3vQXzTLlyb/IQ639Lo7xr+L0mPoSHyDYwKcMhcWQ9DstliaxLL5Mq+ux0orJ23gT
Dx4JnW2PAJ8C2sH6H3p6CcRK5ogql5+Ji/03X186zjhZhkuvcQu02PJwT58yE+Owp1fl2tpDy4Q0
8ijE6m30Ku/Ba3ba+367hTzSU8JNvnHhRdH9I2cNE3X7z2VnIp2usAnRCf8dNL/+I5c30jn6PQ0G
C7TbO6Orb1wdtn7os4I07QZcJA==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="cb796bc1.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFFjCCBH+gAwIBAgIBADANBgkqhkiG9w0BAQQFADCBsDELMAkGA1UEBhMCSUwx
DzANBgNVBAgTBklzcmFlbDEOMAwGA1UEBxMFRWlsYXQxFjAUBgNVBAoTDVN0YXJ0
Q29tIEx0ZC4xGjAYBgNVBAsTEUNBIEF1dGhvcml0eSBEZXAuMSkwJwYDVQQDEyBG
cmVlIFNTTCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEhMB8GCSqGSIb3DQEJARYS
YWRtaW5Ac3RhcnRjb20ub3JnMB4XDTA1MDMxNzE3Mzc0OFoXDTM1MDMxMDE3Mzc0
OFowgbAxCzAJBgNVBAYTAklMMQ8wDQYDVQQIEwZJc3JhZWwxDjAMBgNVBAcTBUVp
bGF0MRYwFAYDVQQKEw1TdGFydENvbSBMdGQuMRowGAYDVQQLExFDQSBBdXRob3Jp
dHkgRGVwLjEpMCcGA1UEAxMgRnJlZSBTU0wgQ2VydGlmaWNhdGlvbiBBdXRob3Jp
dHkxITAfBgkqhkiG9w0BCQEWEmFkbWluQHN0YXJ0Y29tLm9yZzCBnzANBgkqhkiG
9w0BAQEFAAOBjQAwgYkCgYEA7YRgACOeyEpRKSfeOqE5tWmrCbIvNP1h3D3TsM+x
18LEwrHkllbEvqoUDufMOlDIOmKdw6OsWXuO7lUaHEe+o5c5s7XvIywI6Nivcy+5
yYPo7QAPyHWlLzRMGOh2iCNJitu27Wjaw7ViKUylS7eYtAkUEKD4/mJ2IhULpNYI
LzUCAwEAAaOCAjwwggI4MA8GA1UdEwEB/wQFMAMBAf8wCwYDVR0PBAQDAgHmMB0G
A1UdDgQWBBQcicOWzL3+MtUNjIExtpidjShkjTCB3QYDVR0jBIHVMIHSgBQcicOW
zL3+MtUNjIExtpidjShkjaGBtqSBszCBsDELMAkGA1UEBhMCSUwxDzANBgNVBAgT
BklzcmFlbDEOMAwGA1UEBxMFRWlsYXQxFjAUBgNVBAoTDVN0YXJ0Q29tIEx0ZC4x
GjAYBgNVBAsTEUNBIEF1dGhvcml0eSBEZXAuMSkwJwYDVQQDEyBGcmVlIFNTTCBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEhMB8GCSqGSIb3DQEJARYSYWRtaW5Ac3Rh
cnRjb20ub3JnggEAMB0GA1UdEQQWMBSBEmFkbWluQHN0YXJ0Y29tLm9yZzAdBgNV
HRIEFjAUgRJhZG1pbkBzdGFydGNvbS5vcmcwEQYJYIZIAYb4QgEBBAQDAgAHMC8G
CWCGSAGG+EIBDQQiFiBGcmVlIFNTTCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAy
BglghkgBhvhCAQQEJRYjaHR0cDovL2NlcnQuc3RhcnRjb20ub3JnL2NhLWNybC5j
cmwwKAYJYIZIAYb4QgECBBsWGWh0dHA6Ly9jZXJ0LnN0YXJ0Y29tLm9yZy8wOQYJ
YIZIAYb4QgEIBCwWKmh0dHA6Ly9jZXJ0LnN0YXJ0Y29tLm9yZy9pbmRleC5waHA/
YXBwPTExMTANBgkqhkiG9w0BAQQFAAOBgQBscSXhnjSRIe/bbL0BCFaPiNhBOlP1
ct8nV0t2hPdopP7rPwl+KLhX6h/BquL/lp9JmeaylXOWxkjHXo0Hclb4g4+fd68p
00UOpO6wNnQt8M2YI3s3S9r+UZjEHjQ8iP2ZO1CnwYszx8JSFhKVU2Ui77qLzmLb
cCOxgN8aIDjnfg==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="ccb919f9.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEZjCCA06gAwIBAgIQRL4Mi1AAJLQR0zYt4LNfGzANBgkqhkiG9w0BAQUFADCB
lTELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug
Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho
dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xHTAbBgNVBAMTFFVUTi1VU0VSRmlyc3Qt
T2JqZWN0MB4XDTk5MDcwOTE4MzEyMFoXDTE5MDcwOTE4NDAzNlowgZUxCzAJBgNV
BAYTAlVTMQswCQYDVQQIEwJVVDEXMBUGA1UEBxMOU2FsdCBMYWtlIENpdHkxHjAc
BgNVBAoTFVRoZSBVU0VSVFJVU1QgTmV0d29yazEhMB8GA1UECxMYaHR0cDovL3d3
dy51c2VydHJ1c3QuY29tMR0wGwYDVQQDExRVVE4tVVNFUkZpcnN0LU9iamVjdDCC
ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM6qgT+jo2F4qjEAVZURnicP
HxzfOpuCaDDASmEd8S8O+r5596Uj71VRloTN2+O5bj4x2AogZ8f02b+U60cEPgLO
KqJdhwQJ9jCdGIqXsqoc/EHSoTbL+z2RuufZcDX65OeQw5ujm9M89RKZd7G3CeBo
5hy485RjiGpq/gt2yb70IuRnuasaXnfBhQfdDWy/7gbHd2pBnqcP1/vulBe3/IW+
pKvEHDHd17bR5PDv3xaPslKT16HUiaEHLr/hARJCHhrh2JU022R5KP+6LhHC5ehb
kkj7RwvCbNqtMoNB86XlQXD9ZZBt+vpRxPm9lisZBCzTbafc8H9vg2XiaquHhnUC
AwEAAaOBrzCBrDALBgNVHQ8EBAMCAcYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4E
FgQU2u1kdBScFDyr3ZmpvVsoTYs8ydgwQgYDVR0fBDswOTA3oDWgM4YxaHR0cDov
L2NybC51c2VydHJ1c3QuY29tL1VUTi1VU0VSRmlyc3QtT2JqZWN0LmNybDApBgNV
HSUEIjAgBggrBgEFBQcDAwYIKwYBBQUHAwgGCisGAQQBgjcKAwQwDQYJKoZIhvcN
AQEFBQADggEBAAgfUrE3RHjb/c652pWWmKpVZIC1WkDdIaXFwfNfLEzIR1pp6ujw
NTX00CXzyKakh0q9G7FzCL3Uw8q2NbtZhncxzaeAFK4T7/yxSPlrJSUtUbYsbUXB
mMiKVl0+7kNOPmsnjtA6S4ULX9Ptaqd1y9Fahy85dRNacrACgZ++8A+EVCBibGnU
4U3GDZlDAQ0Slox4nb9QorFEqmrPF3rPbw/U+CRVX/A0FklmPlBGyWNxODFiuGK5
81OtbLUrohKqGU8J2l7nk8aOFAj+8DCAGKCGhU3IfdeLA/5u1fedFqySLKAj5ZyR
Uh+U3xeUc8OzwcFxBSAAeL0TUh2oPs0AH8g=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="ccc52f49.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIB/jCCAYWgAwIBAgIIdJclisc/elQwCgYIKoZIzj0EAwMwRTELMAkGA1UEBhMCVVMxFDASBgNV
BAoMC0FmZmlybVRydXN0MSAwHgYDVQQDDBdBZmZpcm1UcnVzdCBQcmVtaXVtIEVDQzAeFw0xMDAx
MjkxNDIwMjRaFw00MDEyMzExNDIwMjRaMEUxCzAJBgNVBAYTAlVTMRQwEgYDVQQKDAtBZmZpcm1U
cnVzdDEgMB4GA1UEAwwXQWZmaXJtVHJ1c3QgUHJlbWl1bSBFQ0MwdjAQBgcqhkjOPQIBBgUrgQQA
IgNiAAQNMF4bFZ0D0KF5Nbc6PJJ6yhUczWLznCZcBz3lVPqj1swS6vQUX+iOGasvLkjmrBhDeKzQ
N8O9ss0s5kfiGuZjuD0uL3jET9v0D6RoTFVya5UdThhClXjMNzyR4ptlKymjQjBAMB0GA1UdDgQW
BBSaryl6wBE1NSZRMADDav5A1a7WPDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAK
BggqhkjOPQQDAwNnADBkAjAXCfOHiFBar8jAQr9HX/VsaobgxCd05DhT1wV/GzTjxi+zygk8N53X
57hG8f2h4nECMEJZh0PUUd+60wkyWs6Iflc9nF9Ca/UHLbXwgpP5WW+uZPpY5Yse42O+tYHNbwKM
eQ==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="cdaebb72.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDujCCAqKgAwIBAgIEAJiWijANBgkqhkiG9w0BAQUFADBVMQswCQYDVQQGEwJOTDEeMBwGA1UE
ChMVU3RhYXQgZGVyIE5lZGVybGFuZGVuMSYwJAYDVQQDEx1TdGFhdCBkZXIgTmVkZXJsYW5kZW4g
Um9vdCBDQTAeFw0wMjEyMTcwOTIzNDlaFw0xNTEyMTYwOTE1MzhaMFUxCzAJBgNVBAYTAk5MMR4w
HAYDVQQKExVTdGFhdCBkZXIgTmVkZXJsYW5kZW4xJjAkBgNVBAMTHVN0YWF0IGRlciBOZWRlcmxh
bmRlbiBSb290IENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmNK1URF6gaYUmHFt
vsznExvWJw56s2oYHLZhWtVhCb/ekBPHZ+7d89rFDBKeNVU+LCeIQGv33N0iYfXCxw719tV2U02P
jLwYdjeFnejKScfST5gTCaI+Ioicf9byEGW07l8Y1Rfj+MX94p2i71MOhXeiD+EwR+4A5zN9RGca
C1Hoi6CeUJhoNFIfLm0B8mBF8jHrqTFoKbt6QZ7GGX+UtFE5A3+y3qcym7RHjm+0Sq7lr7HcsBth
vJly3uSJt3omXdozSVtSnA71iq3DuD3oBmrC1SoLbHuEvVYFy4ZlkuxEK7COudxwC0barbxjiDn6
22r+I/q85Ej0ZytqERAhSQIDAQABo4GRMIGOMAwGA1UdEwQFMAMBAf8wTwYDVR0gBEgwRjBEBgRV
HSAAMDwwOgYIKwYBBQUHAgEWLmh0dHA6Ly93d3cucGtpb3ZlcmhlaWQubmwvcG9saWNpZXMvcm9v
dC1wb2xpY3kwDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBSofeu8Y6R0E3QA7Jbg0zTBLL9s+DAN
BgkqhkiG9w0BAQUFAAOCAQEABYSHVXQ2YcG70dTGFagTtJ+k/rvuFbQvBgwp8qiSpGEN/KtcCFtR
EytNwiphyPgJWPwtArI5fZlmgb9uXJVFIGzmeafR2Bwp/MIgJ1HI8XxdNGdphREwxgDS1/PTfLbw
MVcoEoJz6TMvplW0C5GUR5z6u3pCMuiufi3IvKwUv9kP2Vv8wfl6leF9fpb8cbDCTMjfRTTJzg3y
nGQI0DvDKcWy7ZAEwbEpkcUwb8GpcjPM/l0WFywRaed+/sWDCN+83CI6LiBpIzlWYGeQiy52OfsR
iJf2fL1LuCAWZwWN4jvBcj+UlTfHXbme2JOhF4//DGYVwSR8MnwDHTuhWEUykw==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="cf701eeb.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDuDCCAqCgAwIBAgIQDPCOXAgWpa1Cf/DrJxhZ0DANBgkqhkiG9w0BAQUFADBIMQswCQYDVQQG
EwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24xFzAVBgNVBAMTDlNlY3VyZVRy
dXN0IENBMB4XDTA2MTEwNzE5MzExOFoXDTI5MTIzMTE5NDA1NVowSDELMAkGA1UEBhMCVVMxIDAe
BgNVBAoTF1NlY3VyZVRydXN0IENvcnBvcmF0aW9uMRcwFQYDVQQDEw5TZWN1cmVUcnVzdCBDQTCC
ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKukgeWVzfX2FI7CT8rU4niVWJxB4Q2ZQCQX
OZEzZum+4YOvYlyJ0fwkW2Gz4BERQRwdbvC4u/jep4G6pkjGnx29vo6pQT64lO0pGtSO0gMdA+9t
DWccV9cGrcrI9f4Or2YlSASWC12juhbDCE/RRvgUXPLIXgGZbf2IzIaowW8xQmxSPmjL8xk037uH
GFaAJsTQ3MBv396gwpEWoGQRS0S8Hvbn+mPeZqx2pHGj7DaUaHp3pLHnDi+BeuK1cobvomuL8A/b
01k/unK8RCSc43Oz969XL0Imnal0ugBS8kvNU3xHCzaFDmapCJcWNFfBZveA4+1wVMeT4C4oFVmH
ursCAwEAAaOBnTCBmjATBgkrBgEEAYI3FAIEBh4EAEMAQTALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/
BAUwAwEB/zAdBgNVHQ4EFgQUQjK2FvoE/f5dS3rD/fdMQB1aQ68wNAYDVR0fBC0wKzApoCegJYYj
aHR0cDovL2NybC5zZWN1cmV0cnVzdC5jb20vU1RDQS5jcmwwEAYJKwYBBAGCNxUBBAMCAQAwDQYJ
KoZIhvcNAQEFBQADggEBADDtT0rhWDpSclu1pqNlGKa7UTt36Z3q059c4EVlew3KW+JwULKUBRSu
SceNQQcSc5R+DCMh/bwQf2AQWnL1mA6s7Ll/3XpvXdMc9P+IBWlCqQVxyLesJugutIxq/3HcuLHf
mbx8IVQr5Fiiu1cprp6poxkmD5kuCLDv/WnPmRoJjeOnnyvJNjR7JLN4TJUXpAYmHrZkUjZfYGfZ
nMUFdAvnZyPSCPyI6a6Lf+Ew9Dd+/cYy2i2eRDAwbO4H3tI0/NL/QPZL9GZGBlSm8jIKYyYwa5vR
3ItHuuG51WLQoqD0ZwV4KWMabwTW+MZMo5qxN7SN5ShLHZ4swrhovO0C7jE=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="d06393bb.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDwzCCAqugAwIBAgIBATANBgkqhkiG9w0BAQsFADCBgjELMAkGA1UEBhMCREUxKzApBgNVBAoM
IlQtU3lzdGVtcyBFbnRlcnByaXNlIFNlcnZpY2VzIEdtYkgxHzAdBgNVBAsMFlQtU3lzdGVtcyBU
cnVzdCBDZW50ZXIxJTAjBgNVBAMMHFQtVGVsZVNlYyBHbG9iYWxSb290IENsYXNzIDIwHhcNMDgx
MDAxMTA0MDE0WhcNMzMxMDAxMjM1OTU5WjCBgjELMAkGA1UEBhMCREUxKzApBgNVBAoMIlQtU3lz
dGVtcyBFbnRlcnByaXNlIFNlcnZpY2VzIEdtYkgxHzAdBgNVBAsMFlQtU3lzdGVtcyBUcnVzdCBD
ZW50ZXIxJTAjBgNVBAMMHFQtVGVsZVNlYyBHbG9iYWxSb290IENsYXNzIDIwggEiMA0GCSqGSIb3
DQEBAQUAA4IBDwAwggEKAoIBAQCqX9obX+hzkeXaXPSi5kfl82hVYAUdAqSzm1nzHoqvNK38DcLZ
SBnuaY/JIPwhqgcZ7bBcrGXHX+0CfHt8LRvWurmAwhiCFoT6ZrAIxlQjgeTNuUk/9k9uN0goOA/F
vudocP05l03Sx5iRUKrERLMjfTlH6VJi1hKTXrcxlkIF+3anHqP1wvzpesVsqXFP6st4vGCvx970
2cu+fjOlbpSD8DT6IavqjnKgP6TeMFvvhk1qlVtDRKgQFRzlAVfFmPHmBiiRqiDFt1MmUUOyCxGV
WOHAD3bZwI18gfNycJ5v/hqO2V81xrJvNHy+SE/iWjnX2J14np+GPgNeGYtEotXHAgMBAAGjQjBA
MA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBS/WSA2AHmgoCJrjNXy
YdK4LMuCSjANBgkqhkiG9w0BAQsFAAOCAQEAMQOiYQsfdOhyNsZt+U2e+iKo4YFWz827n+qrkRk4
r6p8FU3ztqONpfSO9kSpp+ghla0+AGIWiPACuvxhI+YzmzB6azZie60EI4RYZeLbK4rnJVM3YlNf
vNoBYimipidx5joifsFvHZVwIEoHNN/q/xWA5brXethbdXwFeilHfkCoMRN3zUA7tFFHei4R40cR
3p1m0IvVVGb6g1XqfMIpiRvpb7PO4gWEyS8+eIVibslfwXhjdFjASBgMmTnrpMwatXlajRWc2BQN
9noHV8cigwUtPJslJj0Ys6lDfMjIq2SPDqO/nBudMNva0Bkuqjzx+zOAduTNrRlPBSeOE6Fuwg==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="d16a5865.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIGFDCCA/ygAwIBAgIIU+w77vuySF8wDQYJKoZIhvcNAQEFBQAwUTELMAkGA1UEBhMCRVMxQjBA
BgNVBAMMOUF1dG9yaWRhZCBkZSBDZXJ0aWZpY2FjaW9uIEZpcm1hcHJvZmVzaW9uYWwgQ0lGIEE2
MjYzNDA2ODAeFw0wOTA1MjAwODM4MTVaFw0zMDEyMzEwODM4MTVaMFExCzAJBgNVBAYTAkVTMUIw
QAYDVQQDDDlBdXRvcmlkYWQgZGUgQ2VydGlmaWNhY2lvbiBGaXJtYXByb2Zlc2lvbmFsIENJRiBB
NjI2MzQwNjgwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDKlmuO6vj78aI14H9M2uDD
Utd9thDIAl6zQyrET2qyyhxdKJp4ERppWVevtSBC5IsP5t9bpgOSL/UR5GLXMnE42QQMcas9UX4P
B99jBVzpv5RvwSmCwLTaUbDBPLutN0pcyvFLNg4kq7/DhHf9qFD0sefGL9ItWY16Ck6WaVICqjaY
7Pz6FIMMNx/Jkjd/14Et5cS54D40/mf0PmbR0/RAz15iNA9wBj4gGFrO93IbJWyTdBSTo3OxDqqH
ECNZXyAFGUftaI6SEspd/NYrspI8IM/hX68gvqB2f3bl7BqGYTM+53u0P6APjqK5am+5hyZvQWyI
plD9amML9ZMWGxmPsu2bm8mQ9QEM3xk9Dz44I8kvjwzRAv4bVdZO0I08r0+k8/6vKtMFnXkIoctX
MbScyJCyZ/QYFpM6/EfY0XiWMR+6KwxfXZmtY4laJCB22N/9q06mIqqdXuYnin1oKaPnirjaEbsX
LZmdEyRG98Xi2J+Of8ePdG1asuhy9azuJBCtLxTa/y2aRnFHvkLfuwHb9H/TKI8xWVvTyQKmtFLK
bpf7Q8UIJm+K9Lv9nyiqDdVF8xM6HdjAeI9BZzwelGSuewvF6NkBiDkal4ZkQdU7hwxu+g/GvUgU
vzlN1J5Bto+WHWOWk9mVBngxaJ43BjuAiUVhOSPHG0SjFeUc+JIwuwIDAQABo4HvMIHsMBIGA1Ud
EwEB/wQIMAYBAf8CAQEwDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBRlzeurNR4APn7VdMActHNH
DhpkLzCBpgYDVR0gBIGeMIGbMIGYBgRVHSAAMIGPMC8GCCsGAQUFBwIBFiNodHRwOi8vd3d3LmZp
cm1hcHJvZmVzaW9uYWwuY29tL2NwczBcBggrBgEFBQcCAjBQHk4AUABhAHMAZQBvACAAZABlACAA
bABhACAAQgBvAG4AYQBuAG8AdgBhACAANAA3ACAAQgBhAHIAYwBlAGwAbwBuAGEAIAAwADgAMAAx
ADcwDQYJKoZIhvcNAQEFBQADggIBABd9oPm03cXF661LJLWhAqvdpYhKsg9VSytXjDvlMd3+xDLx
51tkljYyGOylMnfX40S2wBEqgLk9am58m9Ot/MPWo+ZkKXzR4Tgegiv/J2Wv+xYVxC5xhOW1//qk
R71kMrv2JYSiJ0L1ILDCExARzRAVukKQKtJE4ZYm6zFIEv0q2skGz3QeqUvVhyj5eTSSPi5E6PaP
T481PyWzOdxjKpBrIF/EUhJOlywqrJ2X3kjyo2bbwtKDlaZmp54lD+kLM5FlClrD2VQS3a/DTg4f
Jl4N3LON7NWBcN7STyQF82xO9UxJZo3R/9ILJUFI/lGExkKvgATP0H5kSeTy36LssUzAKh3ntLFl
osS88Zj0qnAHY7S42jtM+kAiMFsRpvAFDsYCA0irhpuF3dvd6qJ2gHN99ZwExEWN57kci57q13XR
crHedUTnQn3iV2t93Jm8PYMo6oCTjcVMZcFwgbg4/EMxsvYDNEeyrPsiBsse3RdHHF9mudMaotoR
saS8I8nkvof/uZS2+F0gStRf571oe2XyFR7SOqkt6dhrJKyXWERHrVkY8SFlcN7ONGCoQPHzPKTD
KCOM/iczQ0CgFzzr6juwcqajuUpLXhZI9LK8yIySxZ2frHI2vDSANGupi5LAuBft7HZT9SQBjLMi
6Et8Vcad+qMUu2WFbm5PEn4KPJ2V
-----END CERTIFICATE-----

              ]]></file>
              <file Name="d2adc77d.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEgzCCA+ygAwIBAgIEOJ725DANBgkqhkiG9w0BAQQFADCBtDEUMBIGA1UEChML
RW50cnVzdC5uZXQxQDA+BgNVBAsUN3d3dy5lbnRydXN0Lm5ldC9HQ0NBX0NQUyBp
bmNvcnAuIGJ5IHJlZi4gKGxpbWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAyMDAw
IEVudHJ1c3QubmV0IExpbWl0ZWQxMzAxBgNVBAMTKkVudHJ1c3QubmV0IENsaWVu
dCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wMDAyMDcxNjE2NDBaFw0yMDAy
MDcxNjQ2NDBaMIG0MRQwEgYDVQQKEwtFbnRydXN0Lm5ldDFAMD4GA1UECxQ3d3d3
LmVudHJ1c3QubmV0L0dDQ0FfQ1BTIGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxp
YWIuKTElMCMGA1UECxMcKGMpIDIwMDAgRW50cnVzdC5uZXQgTGltaXRlZDEzMDEG
A1UEAxMqRW50cnVzdC5uZXQgQ2xpZW50IENlcnRpZmljYXRpb24gQXV0aG9yaXR5
MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCTdLS25MVL1qFof2LV7PdRV7Ny
Spj10InJrWPNTTVRaoTUrcloeW+46xHbh65cJFET8VQlhK8pK5/jgOLZy93GRUk0
iJBeAZfv6lOm3fzB3ksqJeTpNfpVBQbliXrqpBFXO/x8PTbNZzVtpKklWb1m9fkn
5JVn1j+SgF7yNH0rhQIDAQABo4IBnjCCAZowEQYJYIZIAYb4QgEBBAQDAgAHMIHd
BgNVHR8EgdUwgdIwgc+ggcyggcmkgcYwgcMxFDASBgNVBAoTC0VudHJ1c3QubmV0
MUAwPgYDVQQLFDd3d3cuZW50cnVzdC5uZXQvR0NDQV9DUFMgaW5jb3JwLiBieSBy
ZWYuIChsaW1pdHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMjAwMCBFbnRydXN0Lm5l
dCBMaW1pdGVkMTMwMQYDVQQDEypFbnRydXN0Lm5ldCBDbGllbnQgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkxDTALBgNVBAMTBENSTDEwKwYDVR0QBCQwIoAPMjAwMDAy
MDcxNjE2NDBagQ8yMDIwMDIwNzE2NDY0MFowCwYDVR0PBAQDAgEGMB8GA1UdIwQY
MBaAFISLdP3FjcD/J20gN0V8/i3OutN9MB0GA1UdDgQWBBSEi3T9xY3A/ydtIDdF
fP4tzrrTfTAMBgNVHRMEBTADAQH/MB0GCSqGSIb2fQdBAAQQMA4bCFY1LjA6NC4w
AwIEkDANBgkqhkiG9w0BAQQFAAOBgQBObzWAO9GK9Q6nIMstZVXQkvTnhLUGJoMS
hAusO7JE7r3PQNsgDrpuFOow4DtifH+La3xKp9U1PL6oXOpLu5OOgGarDyn9TS2/
GpsKkMWr2tGzhtQvJFJcem3G8v7lTRowjJDyutdKPkN+1MhQGof4T4HHdguEOnKd
zmVml64mXg==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="d537fba6.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEKzCCAxOgAwIBAgIEOsylTDANBgkqhkiG9w0BAQUFADBDMQswCQYDVQQGEwJE
SzEVMBMGA1UEChMMVERDIEludGVybmV0MR0wGwYDVQQLExRUREMgSW50ZXJuZXQg
Um9vdCBDQTAeFw0wMTA0MDUxNjMzMTdaFw0yMTA0MDUxNzAzMTdaMEMxCzAJBgNV
BAYTAkRLMRUwEwYDVQQKEwxUREMgSW50ZXJuZXQxHTAbBgNVBAsTFFREQyBJbnRl
cm5ldCBSb290IENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxLhA
vJHVYx/XmaCLDEAedLdInUaMArLgJF/wGROnN4NrXceO+YQwzho7+vvOi20jxsNu
Zp+Jpd/gQlBn+h9sHvTQBda/ytZO5GhgbEaqHF1j4QeGDmUApy6mcca8uYGoOn0a
0vnRrEvLznWv3Hv6gXPU/Lq9QYjUdLP5Xjg6PEOo0pVOd20TDJ2PeAG3WiAfAzc1
4izbSysseLlJ28TQx5yc5IogCSEWVmb/Bexb4/DPqyQkXsN/cHoSxNK1EKC2IeGN
eGlVRGn1ypYcNIUXJXfi9i8nmHj9eQY6otZaQ8H/7AQ77hPv01ha/5Lr7K7a8jcD
R0G2l8ktCkEiu7vmpwIDAQABo4IBJTCCASEwEQYJYIZIAYb4QgEBBAQDAgAHMGUG
A1UdHwReMFwwWqBYoFakVDBSMQswCQYDVQQGEwJESzEVMBMGA1UEChMMVERDIElu
dGVybmV0MR0wGwYDVQQLExRUREMgSW50ZXJuZXQgUm9vdCBDQTENMAsGA1UEAxME
Q1JMMTArBgNVHRAEJDAigA8yMDAxMDQwNTE2MzMxN1qBDzIwMjEwNDA1MTcwMzE3
WjALBgNVHQ8EBAMCAQYwHwYDVR0jBBgwFoAUbGQBx/2FbazI2p5QCIUItTxWqFAw
HQYDVR0OBBYEFGxkAcf9hW2syNqeUAiFCLU8VqhQMAwGA1UdEwQFMAMBAf8wHQYJ
KoZIhvZ9B0EABBAwDhsIVjUuMDo0LjADAgSQMA0GCSqGSIb3DQEBBQUAA4IBAQBO
Q8zR3R0QGwZ/t6T609lN+yOfI1Rb5osvBCiLtSdtiaHsmGnc540mgwV5dOy0uaOX
wTUA/RXaOYE6lTGQ3pfphqiZdwzlWqCE/xIWrG64jcN7ksKsLtB9KOy282A4aW8+
2ARVPp7MVdK6/rtHBNcK2RYKNCn1WBPVT8+PVkuzHu7TmHnaCB4Mb7j4Fifvwm89
9qNLPg7kbWzbO0ESm70NRyN/PErQr8Cv9u8btRXE64PECV90i9kR+8JWsTz4cMo0
jUNAE4z9mQNUecYu6oah9jrUCbz0vGbMPVjQV0kK7iXiQe4T+Zs4NNEA9X7nlB38
aQNiuJkFBT1reBK9sG9l
-----END CERTIFICATE-----

              ]]></file>
              <file Name="d59297b8.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDdzCCAl+gAwIBAgIBADANBgkqhkiG9w0BAQsFADBdMQswCQYDVQQGEwJKUDElMCMGA1UEChMc
U0VDT00gVHJ1c3QgU3lzdGVtcyBDTy4sTFRELjEnMCUGA1UECxMeU2VjdXJpdHkgQ29tbXVuaWNh
dGlvbiBSb290Q0EyMB4XDTA5MDUyOTA1MDAzOVoXDTI5MDUyOTA1MDAzOVowXTELMAkGA1UEBhMC
SlAxJTAjBgNVBAoTHFNFQ09NIFRydXN0IFN5c3RlbXMgQ08uLExURC4xJzAlBgNVBAsTHlNlY3Vy
aXR5IENvbW11bmljYXRpb24gUm9vdENBMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
ANAVOVKxUrO6xVmCxF1SrjpDZYBLx/KWvNs2l9amZIyoXvDjChz335c9S672XewhtUGrzbl+dp++
+T42NKA7wfYxEUV0kz1XgMX5iZnK5atq1LXaQZAQwdbWQonCv/Q4EpVMVAX3NuRFg3sUZdbcDE3R
3n4MqzvEFb46VqZab3ZpUql6ucjrappdUtAtCms1FgkQhNBqyjoGADdH5H5XTz+L62e4iKrFvlNV
spHEfbmwhRkGeC7bYRr6hfVKkaHnFtWOojnflLhwHyg/i/xAXmODPIMqGplrz95Zajv8bxbXH/1K
EOtOghY6rCcMU/Gt1SSwawNQwS08Ft1ENCcadfsCAwEAAaNCMEAwHQYDVR0OBBYEFAqFqXdlBZh8
QIH4D5csOPEK7DzPMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEB
CwUAA4IBAQBMOqNErLlFsceTfsgLCkLfZOoc7llsCLqJX2rKSpWeeo8HxdpFcoJxDjrSzG+ntKEj
u/Ykn8sX/oymzsLS28yN/HH8AynBbF0zX2S2ZTuJbxh2ePXcokgfGT+Ok+vx+hfuzU7jBBJV1uXk
3fs+BXziHV7Gp7yXT2g69ekuCkO2r1dcYmh8t/2jioSgrGK+KwmHNPBqAbubKVY8/gA3zyNs8U6q
tnRGEmyR7jTV7JqR50S+kDFy1UkC9gLl9B/rfNmWVan/7Ir5mUf/NVoCqgTLiluHcSmRvaS0eg29
mvVXIwAHIRc/SjnRBUkLp7Y3gaVdjKozXoEofKd9J+sAro03
-----END CERTIFICATE-----

              ]]></file>
              <file Name="d64f06f3.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEDzCCAvegAwIBAgIBATANBgkqhkiG9w0BAQUFADBKMQswCQYDVQQGEwJTSzETMBEGA1UEBxMK
QnJhdGlzbGF2YTETMBEGA1UEChMKRGlzaWcgYS5zLjERMA8GA1UEAxMIQ0EgRGlzaWcwHhcNMDYw
MzIyMDEzOTM0WhcNMTYwMzIyMDEzOTM0WjBKMQswCQYDVQQGEwJTSzETMBEGA1UEBxMKQnJhdGlz
bGF2YTETMBEGA1UEChMKRGlzaWcgYS5zLjERMA8GA1UEAxMIQ0EgRGlzaWcwggEiMA0GCSqGSIb3
DQEBAQUAA4IBDwAwggEKAoIBAQCS9jHBfYj9mQGp2HvycXXxMcbzdWb6UShGhJd4NLxs/LxFWYgm
GErENx+hSkS943EE9UQX4j/8SFhvXJ56CbpRNyIjZkMhsDxkovhqFQ4/61HhVKndBpnXmjxUizkD
Pw/Fzsbrg3ICqB9x8y34dQjbYkzo+s7552oftms1grrijxaSfQUMbEYDXcDtab86wYqg6I7ZuUUo
hwjstMoVvoLdtUSLLa2GDGhibYVW8qwUYzrG0ZmsNHhWS8+2rT+MitcE5eN4TPWGqvWP+j1scaMt
ymfraHtuM6kMgiioTGohQBUgDCZbg8KpFhXAJIJdKxatymP2dACw30PEEGBWZ2NFAgMBAAGjgf8w
gfwwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUjbJJaJ1yCCW5wCf1UJNWSEZx+Y8wDgYDVR0P
AQH/BAQDAgEGMDYGA1UdEQQvMC2BE2Nhb3BlcmF0b3JAZGlzaWcuc2uGFmh0dHA6Ly93d3cuZGlz
aWcuc2svY2EwZgYDVR0fBF8wXTAtoCugKYYnaHR0cDovL3d3dy5kaXNpZy5zay9jYS9jcmwvY2Ff
ZGlzaWcuY3JsMCygKqAohiZodHRwOi8vY2EuZGlzaWcuc2svY2EvY3JsL2NhX2Rpc2lnLmNybDAa
BgNVHSAEEzARMA8GDSuBHpGT5goAAAABAQEwDQYJKoZIhvcNAQEFBQADggEBAF00dGFMrzvY/59t
WDYcPQuBDRIrRhCA/ec8J9B6yKm2fnQwM6M6int0wHl5QpNt/7EpFIKrIYwvF/k/Ji/1WcbvgAa3
mkkp7M5+cTxqEEHA9tOasnxakZzArFvITV734VP/Q3f8nktnbNfzg9Gg4H8l37iYC5oyOGwwoPP/
CBUz91BKez6jPiCp3C9WgArtQVCwyfTssuMmRAAOb54GvCKWU3BlxFAKRmukLyeBEicTXxChds6K
ezfqwzlhA5WYOudsiCUI/HloDYd9Yvi0X/vF2Ey9WLw/Q1vUHgFNPGO+I++MzVpQuGhU+QqZMxEA
4Z7CRneC9VkGjCFMhwnN5ag=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="d66b55d9.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEPTCCAyWgAwIBAgIBATANBgkqhkiG9w0BAQUFADCBvzE/MD0GA1UEAww2VMOcUktUUlVTVCBF
bGVrdHJvbmlrIFNlcnRpZmlrYSBIaXptZXQgU2HEn2xhecSxY8Sxc8SxMQswCQYDVQQGEwJUUjEP
MA0GA1UEBwwGQW5rYXJhMV4wXAYDVQQKDFVUw5xSS1RSVVNUIEJpbGdpIMSwbGV0acWfaW0gdmUg
QmlsacWfaW0gR8O8dmVubGnEn2kgSGl6bWV0bGVyaSBBLsWeLiAoYykgQXJhbMSxayAyMDA3MB4X
DTA3MTIyNTE4MzcxOVoXDTE3MTIyMjE4MzcxOVowgb8xPzA9BgNVBAMMNlTDnFJLVFJVU1QgRWxl
a3Ryb25payBTZXJ0aWZpa2EgSGl6bWV0IFNhxJ9sYXnEsWPEsXPEsTELMAkGA1UEBhMCVFIxDzAN
BgNVBAcMBkFua2FyYTFeMFwGA1UECgxVVMOcUktUUlVTVCBCaWxnaSDEsGxldGnFn2ltIHZlIEJp
bGnFn2ltIEfDvHZlbmxpxJ9pIEhpem1ldGxlcmkgQS7Fni4gKGMpIEFyYWzEsWsgMjAwNzCCASIw
DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKu3PgqMyKVYFeaK7yc9SrToJdPNM8Ig3BnuiD9N
YvDdE3ePYakqtdTyuTFYKTsvP2qcb3N2Je40IIDu6rfwxArNK4aUyeNgsURSsloptJGXg9i3phQv
KUmi8wUG+7RP2qFsmmaf8EMJyupyj+sA1zU511YXRxcw9L6/P8JorzZAwan0qafoEGsIiveGHtya
KhUG9qPw9ODHFNRRf8+0222vR5YXm3dx2KdxnSQM9pQ/hTEST7ruToK4uT6PIzdezKKqdfcYbwnT
rqdUKDT74eA7YH2gvnmJhsifLfkKS8RQouf9eRbHegsYz85M733WB2+Y8a+xwXrXgTW4qhe04MsC
AwEAAaNCMEAwHQYDVR0OBBYEFCnFkKslrxHkYb+j/4hhkeYO/pyBMA4GA1UdDwEB/wQEAwIBBjAP
BgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQAQDdr4Ouwo0RSVgrESLFF6QSU2TJ/s
Px+EnWVUXKgWAkD6bho3hO9ynYYKVZ1WKKxmLNA6VpM0ByWtCLCPyA8JWcqdmBzlVPi5RX9ql2+I
aE1KBiY3iAIOtsbWcpnOa3faYjGkVh+uX4132l32iPwa2Z61gfAyuOOI0JzzaqC5mxRZNTZPz/OO
Xl0XrRWV2N2y1RVuAE6zS89mlOTgzbUF2mNXi+WzqtvALhyQRNsaXRik7r4EW5nVcV9VZWRi1aKb
BFmGyGJ353yCRWo9F7/snXUMrqNvWtMvmDb08PUZqxFdyKbjKlhqQgnDvZImZjINXQhVdP+MmNAK
poRq0Tl9
-----END CERTIFICATE-----

              ]]></file>
              <file Name="d7746a63.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEQzCCAyugAwIBAgIDCYP0MA0GCSqGSIb3DQEBCwUAMFAxCzAJBgNVBAYTAkRFMRUwEwYDVQQK
DAxELVRydXN0IEdtYkgxKjAoBgNVBAMMIUQtVFJVU1QgUm9vdCBDbGFzcyAzIENBIDIgRVYgMjAw
OTAeFw0wOTExMDUwODUwNDZaFw0yOTExMDUwODUwNDZaMFAxCzAJBgNVBAYTAkRFMRUwEwYDVQQK
DAxELVRydXN0IEdtYkgxKjAoBgNVBAMMIUQtVFJVU1QgUm9vdCBDbGFzcyAzIENBIDIgRVYgMjAw
OTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJnxhDRwui+3MKCOvXwEz75ivJn9gpfS
egpnljgJ9hBOlSJzmY3aFS3nBfwZcyK3jpgAvDw9rKFs+9Z5JUut8Mxk2og+KbgPCdM03TP1YtHh
zRnp7hhPTFiu4h7WDFsVWtg6uMQYZB7jM7K1iXdODL/ZlGsTl28So/6ZqQTMFexgaDbtCHu39b+T
7WYxg4zGcTSHThfqr4uRjRxWQa4iN1438h3Z0S0NL2lRp75mpoo6Kr3HGrHhFPC+Oh25z1uxav60
sUYgovseO3Dvk5h9jHOW8sXvhXCtKSb8HgQ+HKDYD8tSg2J87otTlZCpV6LqYQXY+U3EJ/pure35
11H3a6UCAwEAAaOCASQwggEgMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFNOUikxiEyoZLsyv
cop9NteaHNxnMA4GA1UdDwEB/wQEAwIBBjCB3QYDVR0fBIHVMIHSMIGHoIGEoIGBhn9sZGFwOi8v
ZGlyZWN0b3J5LmQtdHJ1c3QubmV0L0NOPUQtVFJVU1QlMjBSb290JTIwQ2xhc3MlMjAzJTIwQ0El
MjAyJTIwRVYlMjAyMDA5LE89RC1UcnVzdCUyMEdtYkgsQz1ERT9jZXJ0aWZpY2F0ZXJldm9jYXRp
b25saXN0MEagRKBChkBodHRwOi8vd3d3LmQtdHJ1c3QubmV0L2NybC9kLXRydXN0X3Jvb3RfY2xh
c3NfM19jYV8yX2V2XzIwMDkuY3JsMA0GCSqGSIb3DQEBCwUAA4IBAQA07XtaPKSUiO8aEXUHL7P+
PPoeUSbrh/Yp3uDx1MYkCenBz1UbtDDZzhr+BlGmFaQt77JLvyAoJUnRpjZ3NOhk31KxEcdzes05
nsKtjHEh8lprr988TlWvsoRlFIm5d8sqMb7Po23Pb0iUMkZv53GMoKaEGTcH8gNFCSuGdXzfX2lX
ANtu2KZyIktQ1HWYVt+3GP9DQ1CuekR78HlR10M9p9OB0/DJT7naxpeG0ILD5EJt/rDiZE4OJudA
NCa1CInXCGNjOCd1HjPqbqjdn5lPdE2BiYBL3ZqXKVwvvoFBuYz/6n1gBp7N1z3TLqMVvKjmJuVv
w9y4AyHqnxbxLFS1
-----END CERTIFICATE-----

              ]]></file>
              <file Name="d78a75c7.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEGTCCAwECEGFwy0mMX5hFKeewptlQW3owDQYJKoZIhvcNAQEFBQAwgcoxCzAJ
BgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVy
aVNpZ24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24s
IEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNp
Z24gQ2xhc3MgMiBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0
eSAtIEczMB4XDTk5MTAwMTAwMDAwMFoXDTM2MDcxNjIzNTk1OVowgcoxCzAJBgNV
BAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNp
Z24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24sIElu
Yy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNpZ24g
Q2xhc3MgMiBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAt
IEczMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArwoNwtUs22e5LeWU
J92lvuCwTY+zYVY81nzD9M0+hsuiiOLh2KRpxbXiv8GmR1BeRjmL1Za6tW8UvxDO
JxOeBUebMXoT2B/Z0wI3i60sR/COgQanDTAM6/c8DyAd3HJG7qUCyFvDyVZpTMUY
wZF7C9UTAJu878NIPkZgIIUq1ZC2zYugzDLdt/1AVbJQHFauzI13TccgTacxdu9o
koqQHgiBVrKtaaNS0MscxCM9H5n+TOgWY47GCI72MfbS+uV23bUckqNJzc0BzWjN
qWm6o+sdDZykIKbBoMXRRkwXbdKsZj+WjOCE1Db/IlnF+RFgqF8EffIa9iVCYQ/E
Srg+iQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQA0JhU8wI1NQ0kdvekhktdmnLfe
xbjQ5F1fdiLAJvmEOjr5jLX77GDx6M4EsMjdpwOPMPOY36TmpDHf0xwLRtxyID+u
7gU8pDM/CzmscHhzS5kr3zDCVLCoO1Wh/hYozUK9dG6A2ydEp85EXdQbkJgNHkKU
sQAsBNB0owIFImNjzYO1+8FtYmtpdf1dcEG59b98377BMnMiIYtYgXsVkXq642RI
sH/7NiXaldDxJBQX3RiAa0YjOVT1jmIJBB2UkKab5iXiQkWquJCtvgiPqQtCGJTP
cjnhsUPgKM+351psE2tJs//jGHyJizNdrDPXp/naOlXJWBD5qu9ats9LS98q
-----END CERTIFICATE-----

              ]]></file>
              <file Name="d8274e24.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEZDCCA0ygAwIBAgIQRL4Mi1AAJLQR0zYwS8AzdzANBgkqhkiG9w0BAQUFADCB
ozELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2Ug
Q2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExho
dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xKzApBgNVBAMTIlVUTi1VU0VSRmlyc3Qt
TmV0d29yayBBcHBsaWNhdGlvbnMwHhcNOTkwNzA5MTg0ODM5WhcNMTkwNzA5MTg1
NzQ5WjCBozELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0
IExha2UgQ2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYD
VQQLExhodHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xKzApBgNVBAMTIlVUTi1VU0VS
Rmlyc3QtTmV0d29yayBBcHBsaWNhdGlvbnMwggEiMA0GCSqGSIb3DQEBAQUAA4IB
DwAwggEKAoIBAQCz+5Gh5DZVhawGNFugmliy+LUPBXeDrjKxdpJo7CNKyXY/45y2
N3kDuatpjQclthln5LAbGHNhSuh+zdMvZOOmfAz6F4CjDUeJT1FxL+78P/m4FoCH
iZMlIJpDgmkkdihZNaEdwH+DBmQWICzTSaSFtMBhf1EI+GgVkYDLpdXuOzr0hARe
YFmnjDRy7rh4xdE7EkpvfmUnuaRVxblvQ6TFHSyZwFKkeEwVs0CYCGtDxgGwenv1
axwiP8vv/6jQOkt2FZ7S0cYu49tXGzKiuG/ohqY/cKvlcJKrRB5AUPuco2LkbG6g
yN7igEL66S/ozjIEj3yNtxyjNTwV3Z7DrpelAgMBAAGjgZEwgY4wCwYDVR0PBAQD
AgHGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFPqGydvguul49Uuo1hXf8NPh
ahQ8ME8GA1UdHwRIMEYwRKBCoECGPmh0dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9V
VE4tVVNFUkZpcnN0LU5ldHdvcmtBcHBsaWNhdGlvbnMuY3JsMA0GCSqGSIb3DQEB
BQUAA4IBAQCk8yXM0dSRgyLQzDKrm5ZONJFUICU0YV8qAhXhi6r/fWRRzwr/vH3Y
IWp4yy9Rb/hCHTO967V7lMPDqaAt39EpHx3+jz+7qEUqf9FuVSTiuwL7MT++6Lzs
QCv4AdRWOOTKRIK1YSAhZ2X28AvnNPilwpyjXEAfhZOVBt5P1CeptqX8Fs1zMT+4
ZSfP1FMa8Kxun08FDAOBp4QpxFq9ZFdyrTvPNximmMatBrTcCKME1SmklpoSZ0qM
YEWd8SOasACcaLWYUNPvji6SZbFIPiG+FTAqDbUMo2s/rn9X9R+WfN9v3YIwLGUb
QErNaLly7HF27FSOH4UMAWr6pjisH8SE
-----END CERTIFICATE-----

              ]]></file>
              <file Name="dbc54cab.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFRjCCAy6gAwIBAgIIbYwURrGmCu4wDQYJKoZIhvcNAQEMBQAwQTELMAkGA1UEBhMCVVMxFDAS
BgNVBAoMC0FmZmlybVRydXN0MRwwGgYDVQQDDBNBZmZpcm1UcnVzdCBQcmVtaXVtMB4XDTEwMDEy
OTE0MTAzNloXDTQwMTIzMTE0MTAzNlowQTELMAkGA1UEBhMCVVMxFDASBgNVBAoMC0FmZmlybVRy
dXN0MRwwGgYDVQQDDBNBZmZpcm1UcnVzdCBQcmVtaXVtMIICIjANBgkqhkiG9w0BAQEFAAOCAg8A
MIICCgKCAgEAxBLfqV/+Qd3d9Z+K4/as4Tx4mrzY8H96oDMq3I0gW64tb+eT2TZwamjPjlGjhVtn
BKAQJG9dKILBl1fYSCkTtuG+kU3fhQxTGJoeJKJPj/CihQvL9Cl/0qRY7iZNyaqoe5rZ+jjeRFcV
5fiMyNlI4g0WJx0eyIOFJbe6qlVBzAMiSy2RjYvmia9mx+n/K+k8rNrSs8PhaJyJ+HoAVt70VZVs
+7pk3WKL3wt3MutizCaam7uqYoNMtAZ6MMgpv+0GTZe5HMQxK9VfvFMSF5yZVylmd2EhMQcuJUmd
GPLu8ytxjLW6OQdJd/zvLpKQBY0tL3d770O/Nbua2Plzpyzy0FfuKE4mX4+QaAkvuPjcBukumj5R
p9EixAqnOEhss/n/fauGV+O61oV4d7pD6kh/9ti+I20ev9E2bFhc8e6kGVQa9QPSdubhjL08s9NI
S+LI+H+SqHZGnEJlPqQewQcDWkYtuJfzt9WyVSHvutxMAJf7FJUnM7/oQ0dG0giZFmA7mn7S5u04
6uwBHjxIVkkJx0w3AJ6IDsBz4W9m6XJHMD4Q5QsDyZpCAGzFlH5hxIrff4IaC1nEWTJ3s7xgaVY5
/bQGeyzWZDbZvUjthB9+pSKPKrhC9IK31FOQeE4tGv2Bb0TXOwF0lkLgAOIua+rF7nKsu7/+6qqo
+Nz2snmKtmcCAwEAAaNCMEAwHQYDVR0OBBYEFJ3AZ6YMItkm9UWrpmVSESfYRaxjMA8GA1UdEwEB
/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBDAUAA4ICAQCzV00QYk465KzquByv
MiPIs0laUZx2KI15qldGF9X1Uva3ROgIRL8YhNILgM3FEv0AVQVhh0HctSSePMTYyPtwni94loMg
Nt58D2kTiKV1NpgIpsbfrM7jWNa3Pt668+s0QNiigfV4Py/VpfzZotReBA4Xrf5B8OWycvpEgjNC
6C1Y91aMYj+6QrCcDFx+LmUmXFNPALJ4fqENmS2NuB2OosSw/WDQMKSOyARiqcTtNd56l+0OOF6S
L5Nwpamcb6d9Ex1+xghIsV5n61EIJenmJWtSKZGc0jlzCFfemQa0W50QBuHCAKi4HEoCChTQwUHK
+4w1IX2COPKpVJEZNZOUbWo6xbLQu4mGk+ibyQ86p3q4ofB4Rvr8Ny/lioTz3/4E2aFooC8k4gmV
BtWVyuEklut89pMFu+1z6S3RdTnX5yTb2E5fQ4+e0BQ5v1VwSJlXMbSc7kqYA5YwH2AG7hsj/oFg
IxpHYoWlzBk0gG+zrBrjn/B7SK3VAdlntqlyk+otZrWyuOQ9PLLvTIzq6we/qzWaVYa8GKa1qF60
g2xraUDTn9zxw2lrueFtCfTxqlB2Cnp9ehehVZZCmTEJ3WARjQUwfuaORtGdFNrHF+QFlozEJLUb
zxQHskD4o55BhrwE0GuWyCqANP2/7waj3VjFhT0+j/6eKeC2uAloGRwYQw==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="ddc328ff.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDEzCCAnygAwIBAgIBATANBgkqhkiG9w0BAQQFADCBxDELMAkGA1UEBhMCWkExFTATBgNVBAgT
DFdlc3Rlcm4gQ2FwZTESMBAGA1UEBxMJQ2FwZSBUb3duMR0wGwYDVQQKExRUaGF3dGUgQ29uc3Vs
dGluZyBjYzEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lvbjEZMBcGA1UE
AxMQVGhhd3RlIFNlcnZlciBDQTEmMCQGCSqGSIb3DQEJARYXc2VydmVyLWNlcnRzQHRoYXd0ZS5j
b20wHhcNOTYwODAxMDAwMDAwWhcNMjAxMjMxMjM1OTU5WjCBxDELMAkGA1UEBhMCWkExFTATBgNV
BAgTDFdlc3Rlcm4gQ2FwZTESMBAGA1UEBxMJQ2FwZSBUb3duMR0wGwYDVQQKExRUaGF3dGUgQ29u
c3VsdGluZyBjYzEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lvbjEZMBcG
A1UEAxMQVGhhd3RlIFNlcnZlciBDQTEmMCQGCSqGSIb3DQEJARYXc2VydmVyLWNlcnRzQHRoYXd0
ZS5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBANOkUG7I/1Zr5s9dtuoMaHVHoqrC2oQl
/Kj0R1HahbUgdJSGHg91yekIYfUGbTBuFRkC6VLAYttNmZ7iagxEOM3+vuNkCXDF/rFrKbYvScg7
1CcEJRCXL+eQbcAoQpnXTEPew/UhbVSfXcNY4cDk2VuwuNy0e982OsK1ZiIS1ocNAgMBAAGjEzAR
MA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEEBQADgYEAB/pMaVz7lcxG7oWDTSEwjsrZqG9J
GubaUeNgcGyEYRGhGshIPllDfU+VPaGLtwtimHp1it2ITk6eQNuozDJ0uW8NxuOzRAvZim+aKZuZ
GCg70eNAKJpaPNW15yAbi8qkq43pUdniTCxZqdq5snUb9kLy78fyGPmJvKP/iiMucEc=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="e268a4c5.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEGDCCAwCgAwIBAgIBATANBgkqhkiG9w0BAQUFADBlMQswCQYDVQQGEwJTRTEUMBIGA1UEChML
QWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3b3JrMSEwHwYDVQQDExhBZGRU
cnVzdCBDbGFzcyAxIENBIFJvb3QwHhcNMDAwNTMwMTAzODMxWhcNMjAwNTMwMTAzODMxWjBlMQsw
CQYDVQQGEwJTRTEUMBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBO
ZXR3b3JrMSEwHwYDVQQDExhBZGRUcnVzdCBDbGFzcyAxIENBIFJvb3QwggEiMA0GCSqGSIb3DQEB
AQUAA4IBDwAwggEKAoIBAQCWltQhSWDia+hBBwzexODcEyPNwTXH+9ZOEQpnXvUGW2ulCDtbKRY6
54eyNAbFvAWlA3yCyykQruGIgb3WntP+LVbBFc7jJp0VLhD7Bo8wBN6ntGO0/7Gcrjyvd7ZWxbWr
oulpOj0OM3kyP3CCkplhbY0wCI9xP6ZIVxn4JdxLZlyldI+Yrsj5wAYi56xz36Uu+1LcsRVlIPo1
Zmne3yzxbrww2ywkEtvrNTVokMsAsJchPXQhI2U0K7t4WaPW4XY5mqRJjox0r26kmqPZm9I4XJui
GMx1I4S+6+JNM3GOGvDC+Mcdoq0Dlyz4zyXG9rgkMbFjXZJ/Y/AlyVMuH79NAgMBAAGjgdIwgc8w
HQYDVR0OBBYEFJWxtPCUtr3H2tERCSG+wa9J/RB7MAsGA1UdDwQEAwIBBjAPBgNVHRMBAf8EBTAD
AQH/MIGPBgNVHSMEgYcwgYSAFJWxtPCUtr3H2tERCSG+wa9J/RB7oWmkZzBlMQswCQYDVQQGEwJT
RTEUMBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3b3JrMSEw
HwYDVQQDExhBZGRUcnVzdCBDbGFzcyAxIENBIFJvb3SCAQEwDQYJKoZIhvcNAQEFBQADggEBACxt
ZBsfzQ3duQH6lmM0MkhHma6X7f1yFqZzR1r0693p9db7RcwpiURdv0Y5PejuvE1Uhh4dbOMXJ0Ph
iVYrqW9yTkkz43J8KiOavD7/KCrto/8cI7pDVwlnTUtiBi34/2ydYB7YHEt9tTEv2dB8Xfjea4MY
eDdXL+gzB2ffHsdrKpV2ro9Xo/D0UrSpUwjP4E/TelOL/bscVjby/rK25Xa71SJlpz/+0WatC7xr
mYbvP33zGDLKe8bjq2RGlfgmadlVg3sslgf/WSxEo8bl6ancoWOAWiFeIc9TVPC6b4nbqKqVz4vj
ccweGyBECMB6tkD9xOQ14R0WHNC8K47Wcdk=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="e28f6bbc.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDnjCCAwegAwIBAgIQK2jUo0aexTsoCas4XX8nIDANBgkqhkiG9w0BAQUFADBf
MQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xNzA1BgNVBAsT
LkNsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkw
HhcNMDAwODA0MDAwMDAwWhcNMDQwODAzMjM1OTU5WjCBpzEXMBUGA1UEChMOVmVy
aVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdvcmsxOzA5
BgNVBAsTMlRlcm1zIG9mIHVzZSBhdCBodHRwczovL3d3dy52ZXJpc2lnbi5jb20v
UlBBIChjKTAwMS4wLAYDVQQDEyVDbGFzcyAxIFB1YmxpYyBQcmltYXJ5IE9DU1Ag
UmVzcG9uZGVyMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC57V56Ondfzl86
UvzNZPdxtW9qlsZZklWUXS9bLsER6iaKy6eBPPZaRN56Ey/9WlHZezcmSsAnPwQD
albBgyzhb1upVFAkSsYuekyhWzdUJCExH6F4GHansXDaItBq/gdiQMb39pt9DAa4
S8co5GYjhFHvRreT2IEzy+U2rMboBQIDAQABo4IBEDCCAQwwIAYDVR0RBBkwF6QV
MBMxETAPBgNVBAMTCE9DU1AgMS0xMDEGA1UdHwQqMCgwJqAkoCKGIGh0dHA6Ly9j
cmwudmVyaXNpZ24uY29tL3BjYTEuY3JsMBMGA1UdJQQMMAoGCCsGAQUFBwMJMEIG
CCsGAQUFBwEBBDYwNDAyBggrBgEFBQcwAaYmFiRodHRwOi8vb2NzcC52ZXJpc2ln
bi5jb20vb2NzcC9zdGF0dXMwRAYDVR0gBD0wOzA5BgtghkgBhvhFAQcBATAqMCgG
CCsGAQUFBwIBFhxodHRwczovL3d3dy52ZXJpc2lnbi5jb20vUlBBMAkGA1UdEwQC
MAAwCwYDVR0PBAQDAgeAMA0GCSqGSIb3DQEBBQUAA4GBAHCQ3bjkvlMXfH8C6dX3
i5mTMWCNfuZgayTvYKzSzpHegG0JpNO4OOVEynJeDS3Bd5y9LAN4KY2kpXeH9fEr
Jq3MB2w6VFoo4AnzTQoEytRYaQuns/XdAaXn3PAfusFdkI2z6k/BEVmXarIrE7Ha
rZehs7GgIFvKMquNzxPwHynD
-----END CERTIFICATE-----

              ]]></file>
              <file Name="e442e424.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFYDCCA0igAwIBAgIULvWbAiin23r/1aOp7r0DoM8Sah0wDQYJKoZIhvcNAQELBQAwSDELMAkG
A1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxHjAcBgNVBAMTFVF1b1ZhZGlzIFJv
b3QgQ0EgMyBHMzAeFw0xMjAxMTIyMDI2MzJaFw00MjAxMTIyMDI2MzJaMEgxCzAJBgNVBAYTAkJN
MRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMR4wHAYDVQQDExVRdW9WYWRpcyBSb290IENBIDMg
RzMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCzyw4QZ47qFJenMioKVjZ/aEzHs286
IxSR/xl/pcqs7rN2nXrpixurazHb+gtTTK/FpRp5PIpM/6zfJd5O2YIyC0TeytuMrKNuFoM7pmRL
Mon7FhY4futD4tN0SsJiCnMK3UmzV9KwCoWdcTzeo8vAMvMBOSBDGzXRU7Ox7sWTaYI+FrUoRqHe
6okJ7UO4BUaKhvVZR74bbwEhELn9qdIoyhA5CcoTNs+cra1AdHkrAj80//ogaX3T7mH1urPnMNA3
I4ZyYUUpSFlob3emLoG+B01vr87ERRORFHAGjx+f+IdpsQ7vw4kZ6+ocYfx6bIrc1gMLnia6Et3U
VDmrJqMz6nWB2i3ND0/kA9HvFZcba5DFApCTZgIhsUfei5pKgLlVj7WiL8DWM2fafsSntARE60f7
5li59wzweyuxwHApw0BiLTtIadwjPEjrewl5qW3aqDCYz4ByA4imW0aucnl8CAMhZa634RylsSqi
Md5mBPfAdOhx3v89WcyWJhKLhZVXGqtrdQtEPREoPHtht+KPZ0/l7DxMYIBpVzgeAVuNVejH38DM
dyM0SXV89pgR6y3e7UEuFAUCf+D+IOs15xGsIs5XPd7JMG0QA4XN8f+MFrXBsj6IbGB/kE+V9/Yt
rQE5BwT6dYB9v0lQ7e/JxHwc64B+27bQ3RP+ydOc17KXqQIDAQABo0IwQDAPBgNVHRMBAf8EBTAD
AQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUxhfQvKjqAkPyGwaZXSuQILnXnOQwDQYJKoZI
hvcNAQELBQADggIBADRh2Va1EodVTd2jNTFGu6QHcrxfYWLopfsLN7E8trP6KZ1/AvWkyaiTt3px
KGmPc+FSkNrVvjrlt3ZqVoAh313m6Tqe5T72omnHKgqwGEfcIHB9UqM+WXzBusnIFUBhynLWcKzS
t/Ac5IYp8M7vaGPQtSCKFWGafoaYtMnCdvvMujAWzKNhxnQT5WvvoxXqA/4Ti2Tk08HS6IT7SdEQ
TXlm66r99I0xHnAUrdzeZxNMgRVhvLfZkXdxGYFgu/BYpbWcC/ePIlUnwEsBbTuZDdQdm2NnL9Du
DcpmvJRPpq3t/O5jrFc/ZSXPsoaP0Aj/uHYUbt7lJ+yreLVTubY/6CD50qi+YUbKh4yE8/nxoGib
Ih6BJpsQBJFxwAYf3KDTuVan45gtf4Od34wrnDKOMpTwATwiKp9Dwi7DmDkHOHv8XgBCH/MyJnmD
hPbl8MFREsALHgQjDFSlTC9JxUrRtm5gDWv8a4uFJGS3iQ6rJUdbPM9+Sb3H6QrG2vd+DhcI00iX
0HGS8A85PjRqHH3Y8iKuu2n0M7SmSFXRDw4m6Oy2Cy2nhTXN/VnIn9HNPlopNLk9hM6xZdRZkZFW
dSHBd575euFgndOtBBj0fOtek49TSiIp+EgrPk2GrFt/ywaZWWDYWGWVjUTR939+J399roD1B0y2
PpxxVJkES/1Y+Zj0
-----END CERTIFICATE-----

              ]]></file>
              <file Name="e48193cf.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDTDCCAjSgAwIBAgIId3cGJyapsXwwDQYJKoZIhvcNAQELBQAwRDELMAkGA1UEBhMCVVMxFDAS
BgNVBAoMC0FmZmlybVRydXN0MR8wHQYDVQQDDBZBZmZpcm1UcnVzdCBDb21tZXJjaWFsMB4XDTEw
MDEyOTE0MDYwNloXDTMwMTIzMTE0MDYwNlowRDELMAkGA1UEBhMCVVMxFDASBgNVBAoMC0FmZmly
bVRydXN0MR8wHQYDVQQDDBZBZmZpcm1UcnVzdCBDb21tZXJjaWFsMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEA9htPZwcroRX1BiLLHwGy43NFBkRJLLtJJRTWzsO3qyxPxkEylFf6Eqdb
DuKPHx6GGaeqtS25Xw2Kwq+FNXkyLbscYjfysVtKPcrNcV/pQr6U6Mje+SJIZMblq8Yrba0F8PrV
C8+a5fBQpIs7R6UjW3p6+DM/uO+Zl+MgwdYoic+U+7lF7eNAFxHUdPALMeIrJmqbTFeurCA+ukV6
BfO9m2kVrn1OIGPENXY6BwLJN/3HR+7o8XYdcxXyl6S1yHp52UKqK39c/s4mT6NmgTWvRLpUHhww
MmWd5jyTXlBOeuM61G7MGvv50jeuJCqrVwMiKA1JdX+3KNp1v47j3A55MQIDAQABo0IwQDAdBgNV
HQ4EFgQUnZPGU4teyq8/nx4P5ZmVvCT2lI8wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC
AQYwDQYJKoZIhvcNAQELBQADggEBAFis9AQOzcAN/wr91LoWXym9e2iZWEnStB03TX8nfUYGXUPG
hi4+c7ImfU+TqbbEKpqrIZcUsd6M06uJFdhrJNTxFq7YpFzUf1GO7RgBsZNjvbz4YYCanrHOQnDi
qX0GJX0nof5v7LMeJNrjS1UaADs1tDvZ110w/YETifLCBivtZ8SOyUOyXGsViQK8YvxO8rUzqrJv
0wqiUOP2O+guRMLbZjipM1ZI8W0bM40NjD9gN53Tym1+NH4Nn3J2ixufcv1SNUFFApYvHLKac0kh
sUlHRUe072o0EclNmsxZt9YCnlpOZbWUrhvfKbAW8b8Angc6F2S1BLUjIZkKlTuXfO8=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="e60bf0c0.0"><![CDATA[
-----BEGIN CERTIFICATE-----
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
NY6E0F/6MBr1mmz0DlP5OlvRHA==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="e775ed2d.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFaDCCA1CgAwIBAgIBATANBgkqhkiG9w0BAQUFADBFMQswCQYDVQQGEwJVUzEWMBQGA1UEChMN
R2VvVHJ1c3QgSW5jLjEeMBwGA1UEAxMVR2VvVHJ1c3QgVW5pdmVyc2FsIENBMB4XDTA0MDMwNDA1
MDAwMFoXDTI5MDMwNDA1MDAwMFowRTELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IElu
Yy4xHjAcBgNVBAMTFUdlb1RydXN0IFVuaXZlcnNhbCBDQTCCAiIwDQYJKoZIhvcNAQEBBQADggIP
ADCCAgoCggIBAKYVVaCjxuAfjJ0hUNfBvitbtaSeodlyWL0AG0y/YckUHUWCq8YdgNY96xCcOq9t
JPi8cQGeBvV8Xx7BDlXKg5pZMK4ZyzBIle0iN430SppyZj6tlcDgFgDgEB8rMQ7XlFTTQjOgNB0e
RXbdT8oYN+yFFXoZCPzVx5zw8qkuEKmS5j1YPakWaDwvdSEYfyh3peFhF7em6fgemdtzbvQKoiFs
7tqqhZJmr/Z6a4LauiIINQ/PQvE1+mrufislzDoR5G2vc7J2Ha3QsnhnGqQ5HFELZ1aD/ThdDc7d
8Lsrlh/eezJS/R27tQahsiFepdaVaH/wmZ7cRQg+59IJDTWU3YBOU5fXtQlEIGQWFwMCTFMNaN7V
qnJNk22CDtucvc+081xdVHppCZbW2xHBjXWotM85yM48vCR85mLK4b19p71XZQvk/iXttmkQ3Cga
Rr0BHdCXteGYO8A3ZNY9lO4L4fUorgtWv3GLIylBjobFS1J72HGrH4oVpjuDWtdYAVHGTEHZf9hB
Z3KiKN9gg6meyHv8U3NyWfWTehd2Ds735VzZC1U0oqpbtWpU5xPKV+yXbfReBi9Fi1jUIxaS5BZu
KGNZMN9QAZxjiRqf2xeUgnA3wySemkfWWspOqGmJch+RbNt+nhutxx9z3SxPGWX9f5NAEC7S8O08
ni4oPmkmM8V7AgMBAAGjYzBhMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFNq7LqqwDLiIJlF0
XG0D08DYj3rWMB8GA1UdIwQYMBaAFNq7LqqwDLiIJlF0XG0D08DYj3rWMA4GA1UdDwEB/wQEAwIB
hjANBgkqhkiG9w0BAQUFAAOCAgEAMXjmx7XfuJRAyXHEqDXsRh3ChfMoWIawC/yOsjmPRFWrZIRc
aanQmjg8+uUfNeVE44B5lGiku8SfPeE0zTBGi1QrlaXv9z+ZhP015s8xxtxqv6fXIwjhmF7DWgh2
qaavdy+3YL1ERmrvl/9zlcGO6JP7/TG37FcREUWbMPEaiDnBTzynANXH/KttgCJwpQzgXQQpAvvL
oJHRfNbDflDVnVi+QTjruXU8FdmbyUqDWcDaU/0zuzYYm4UPFd3uLax2k7nZAY1IEKj79TiG8dsK
xr2EoyNB3tZ3b4XUhRxQ4K5RirqNPnbiucon8l+f725ZDQbYKxek0nxru18UGkiPGkzns0ccjkxF
KyDuSN/n3QmOGKjaQI2SJhFTYXNd673nxE0pN2HrrDktZy4W1vUAg4WhzH92xH3kt0tm7wNFYGm2
DFKWkoRepqO1pD4r2czYG0eq8kTaT/kD6PAUyz/zg97QwVTjt+gKN02LIFkDMBmhLMi9ER/frslK
xfMnZmaGrGiR/9nmUxwPi1xpZQomyB40w11Re9epnAahNt3ViZS82eQtDF4JbAiXfKM9fJP/P6EU
p8+1Xevb2xzEdt+Iub1FBZUbrvxGakyvSOPOrg/SfuvmbJxPgWp6ZKy7PtXny3YuxadIwVyQD8vI
P/rmMuGNG2+k5o7Y+SlIis5z/iw=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="e7b8d656.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIICgjCCAeugAwIBAgIBBDANBgkqhkiG9w0BAQQFADBTMQswCQYDVQQGEwJVUzEcMBoGA1UEChMT
RXF1aWZheCBTZWN1cmUgSW5jLjEmMCQGA1UEAxMdRXF1aWZheCBTZWN1cmUgZUJ1c2luZXNzIENB
LTEwHhcNOTkwNjIxMDQwMDAwWhcNMjAwNjIxMDQwMDAwWjBTMQswCQYDVQQGEwJVUzEcMBoGA1UE
ChMTRXF1aWZheCBTZWN1cmUgSW5jLjEmMCQGA1UEAxMdRXF1aWZheCBTZWN1cmUgZUJ1c2luZXNz
IENBLTEwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAM4vGbwXt3fek6lfWg0XTzQaDJj0ItlZ
1MRoRvC0NcWFAyDGr0WlIVFFQesWWDYyb+JQYmT5/VGcqiTZ9J2DKocKIdMSODRsjQBuWqDZQu4a
IZX5UkxVWsUPOE9G+m34LjXWHXzr4vCwdYDIqROsvojvOm6rXyo4YgKwEnv+j6YDAgMBAAGjZjBk
MBEGCWCGSAGG+EIBAQQEAwIABzAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFEp4MlIR21kW
Nl7fwRQ2QGpHfEyhMB0GA1UdDgQWBBRKeDJSEdtZFjZe38EUNkBqR3xMoTANBgkqhkiG9w0BAQQF
AAOBgQB1W6ibAxHm6VZMzfmpTMANmvPMZWnmJXbMWbfWVMMdzZmsGd20hdXgPfxiIKeES1hl8eL5
lSE/9dR+WB5Hh1Q+WKG1tfgq73HnvMP2sUlG4tega+VWeponmHxGYhTnyfxuAxJ5gDgdSIKN/Bf+
KpYrtWKmpj29f5JZzVoqgrI3eQ==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="e8651083.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIECjCCAvKgAwIBAgIJAMJ+QwRORz8ZMA0GCSqGSIb3DQEBCwUAMIGCMQswCQYDVQQGEwJIVTER
MA8GA1UEBwwIQnVkYXBlc3QxFjAUBgNVBAoMDU1pY3Jvc2VjIEx0ZC4xJzAlBgNVBAMMHk1pY3Jv
c2VjIGUtU3ppZ25vIFJvb3QgQ0EgMjAwOTEfMB0GCSqGSIb3DQEJARYQaW5mb0BlLXN6aWduby5o
dTAeFw0wOTA2MTYxMTMwMThaFw0yOTEyMzAxMTMwMThaMIGCMQswCQYDVQQGEwJIVTERMA8GA1UE
BwwIQnVkYXBlc3QxFjAUBgNVBAoMDU1pY3Jvc2VjIEx0ZC4xJzAlBgNVBAMMHk1pY3Jvc2VjIGUt
U3ppZ25vIFJvb3QgQ0EgMjAwOTEfMB0GCSqGSIb3DQEJARYQaW5mb0BlLXN6aWduby5odTCCASIw
DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOn4j/NjrdqG2KfgQvvPkd6mJviZpWNwrZuuyjNA
fW2WbqEORO7hE52UQlKavXWFdCyoDh2Tthi3jCyoz/tccbna7P7ofo/kLx2yqHWH2Leh5TvPmUpG
0IMZfcChEhyVbUr02MelTTMuhTlAdX4UfIASmFDHQWe4oIBhVKZsTh/gnQ4H6cm6M+f+wFUoLAKA
pxn1ntxVUwOXewdI/5n7N4okxFnMUBBjjqqpGrCEGob5X7uxUG6k0QrM1XF+H6cbfPVTbiJfyyvm
1HxdrtbCxkzlBQHZ7Vf8wSN5/PrIJIOV87VqUQHQd9bpEqH5GoP7ghu5sJf0dgYzQ0mg/wu1+rUC
AwEAAaOBgDB+MA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBTLD8bf
QkPMPcu1SCOhGnqmKrs0aDAfBgNVHSMEGDAWgBTLD8bfQkPMPcu1SCOhGnqmKrs0aDAbBgNVHREE
FDASgRBpbmZvQGUtc3ppZ25vLmh1MA0GCSqGSIb3DQEBCwUAA4IBAQDJ0Q5eLtXMs3w+y/w9/w0o
lZMEyL/azXm4Q5DwpL7v8u8hmLzU1F0G9u5C7DBsoKqpyvGvivo/C3NqPuouQH4frlRheesuCDfX
I/OMn74dseGkddug4lQUsbocKaQY9hK6ohQU4zE1yED/t+AFdlfBHFny+L/k7SViXITwfn4fs775
tyERzAMBVnCnEJIeGzSBHq2cGsMEPO0CYdYeBvNfOofyK/FFh+U9rNHHV4S9a67c2Pm2G2JwCz02
yULyMtd6YebS2z3PyKnJm9zbWETXbzivf3jTo60adbocwTZ8jx5tHMN1Rq41Bab2XD0h7lbwyYIi
LXpUq3DDfSJlgnCW
-----END CERTIFICATE-----

              ]]></file>
              <file Name="ea169617.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFtTCCA52gAwIBAgIIYY3HhjsBggUwDQYJKoZIhvcNAQEFBQAwRDEWMBQGA1UEAwwNQUNFRElD
T00gUm9vdDEMMAoGA1UECwwDUEtJMQ8wDQYDVQQKDAZFRElDT00xCzAJBgNVBAYTAkVTMB4XDTA4
MDQxODE2MjQyMloXDTI4MDQxMzE2MjQyMlowRDEWMBQGA1UEAwwNQUNFRElDT00gUm9vdDEMMAoG
A1UECwwDUEtJMQ8wDQYDVQQKDAZFRElDT00xCzAJBgNVBAYTAkVTMIICIjANBgkqhkiG9w0BAQEF
AAOCAg8AMIICCgKCAgEA/5KV4WgGdrQsyFhIyv2AVClVYyT/kGWbEHV7w2rbYgIB8hiGtXxaOLHk
WLn709gtn70yN78sFW2+tfQh0hOR2QetAQXW8713zl9CgQr5auODAKgrLlUTY4HKRxx7XBZXehuD
YAQ6PmXDzQHe3qTWDLqO3tkE7hdWIpuPY/1NFgu3e3eM+SW10W2ZEi5PGrjm6gSSrj0RuVFCPYew
MYWveVqc/udOXpJPQ/yrOq2lEiZmueIM15jO1FillUAKt0SdE3QrwqXrIhWYENiLxQSfHY9g5QYb
m8+5eaA9oiM/Qj9r+hwDezCNzmzAv+YbX79nuIQZ1RXve8uQNjFiybwCq0Zfm/4aaJQ0PZCOrfbk
HQl/Sog4P75n/TSW9R28MHTLOO7VbKvU/PQAtwBbhTIWdjPp2KOZnQUAqhbm84F9b32qhm2tFXTT
xKJxqvQUfecyuB+81fFOvW8XAjnXDpVCOscAPukmYxHqC9FK/xidstd7LzrZlvvoHpKuE1XI2Sf2
3EgbsCTBheN3nZqk8wwRHQ3ItBTutYJXCb8gWH8vIiPYcMt5bMlL8qkqyPyHK9caUPgn6C9D4zq9
2Fdx/c6mUlv53U3t5fZvie27k5x2IXXwkkwp9y+cAS7+UEaeZAwUswdbxcJzbPEHXEUkFDWug/Fq
TYl6+rPYLWbwNof1K1MCAwEAAaOBqjCBpzAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFKaz
4SsrSbbXc6GqlPUB53NlTKxQMA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUprPhKytJttdzoaqU
9QHnc2VMrFAwRAYDVR0gBD0wOzA5BgRVHSAAMDEwLwYIKwYBBQUHAgEWI2h0dHA6Ly9hY2VkaWNv
bS5lZGljb21ncm91cC5jb20vZG9jMA0GCSqGSIb3DQEBBQUAA4ICAQDOLAtSUWImfQwng4/F9tqg
aHtPkl7qpHMyEVNEskTLnewPeUKzEKbHDZ3Ltvo/Onzqv4hTGzz3gvoFNTPhNahXwOf9jU8/kzJP
eGYDdwdY6ZXIfj7QeQCM8htRM5u8lOk6e25SLTKeI6RF+7YuE7CLGLHdztUdp0J/Vb77W7tH1Pwk
zQSulgUV1qzOMPPKC8W64iLgpq0i5ALudBF/TP94HTXa5gI06xgSYXcGCRZj6hitoocf8seACQl1
ThCojz2GuHURwCRiipZ7SkXp7FnFvmuD5uHorLUwHv4FB4D54SMNUI8FmP8sX+g7tq3PgbUhh8oI
KiMnMCArz+2UW6yyetLHKKGKC5tNSixthT8Jcjxn4tncB7rrZXtaAWPWkFtPF2Y9fwsZo5NjEFIq
nxQWWOLcpfShFosOkYuByptZ+thrkQdlVV9SH686+5DdaaVbnG0OLLb6zqylfDJKZ0DcMDQj3dcE
I2bw/FWAp/tmGYI1Z2JwOV5vx+qQQEQIHriy1tvuWacNGHk0vFQYXlPKNFHtRQrmjseCNj6nOGOp
MCwXEGCSn1WHElkQwg9naRHMTh5+Spqtr0CodaxWkHS4oJyleW/c6RrIaQXpuvoDs3zk4E7Czp3o
tkYNbn5XOmeUwssfnHdKZ05phkOTOPu220+DkdRgfks+KzgHVZhepA==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="eb375c3e.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDUzCCAjugAwIBAgIBAjANBgkqhkiG9w0BAQUFADBLMQswCQYDVQQGEwJOTzEdMBsGA1UECgwU
QnV5cGFzcyBBUy05ODMxNjMzMjcxHTAbBgNVBAMMFEJ1eXBhc3MgQ2xhc3MgMyBDQSAxMB4XDTA1
MDUwOTE0MTMwM1oXDTE1MDUwOTE0MTMwM1owSzELMAkGA1UEBhMCTk8xHTAbBgNVBAoMFEJ1eXBh
c3MgQVMtOTgzMTYzMzI3MR0wGwYDVQQDDBRCdXlwYXNzIENsYXNzIDMgQ0EgMTCCASIwDQYJKoZI
hvcNAQEBBQADggEPADCCAQoCggEBAKSO13TZKWTeXx+HgJHqTjnmGcZEC4DVC69TB4sSveZn8AKx
ifZgisRbsELRwCGoy+Gb72RRtqfPFfV0gGgEkKBYouZ0plNTVUhjP5JW3SROjvi6K//zNIqeKNc0
n6wv1g/xpC+9UrJJhW05NfBEMJNGJPO251P7vGGvqaMU+8IXF4Rs4HyI+MkcVyzwPX6UvCWThOia
AJpFBUJXgPROztmuOfbIUxAMZTpHe2DC1vqRycZxbL2RhzyRhkmr8w+gbCZ2Xhysm3HljbybIR6c
1jh+JIAVMYKWsUnTYjdbiAwKYjT+p0h+mbEwi5A3lRyoH6UsjfRVyNvdWQrCrXig9IsCAwEAAaNC
MEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUOBTmyPCppAP0Tj4io1vy1uCtQHQwDgYDVR0P
AQH/BAQDAgEGMA0GCSqGSIb3DQEBBQUAA4IBAQABZ6OMySU9E2NdFm/soT4JXJEVKirZgCFPBdy7
pYmrEzMqnji3jG8CcmPHc3ceCQa6Oyh7pEfJYWsICCD8igWKH7y6xsL+z27sEzNxZy5p+qksP2bA
EllNC1QCkoS72xLvg3BweMhT+t/Gxv/ciC8HwEmdMldg0/L2mSlf56oBzKwzqBwKu5HEA6BvtjT5
htOzdlSY9EqBs1OdTUDs5XcTRa9bqh/YL0yCe/4qxFi7T/ye/QNlGioOw6UgFpRreaaiErS7GqQj
el/wroQk5PMr+4okoyeYZdowdXb8GZHo2+ubPzK/QJcHJrrM85SFSnonk8+QQtS4Wxam58tAA915
-----END CERTIFICATE-----

              ]]></file>
              <file Name="ed049835.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDAjCCAmsCEDKIjprS9esTR/h/xCA3JfgwDQYJKoZIhvcNAQEFBQAwgcExCzAJ
BgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xh
c3MgNCBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcy
MTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3Jp
emVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMB4X
DTk4MDUxODAwMDAwMFoXDTI4MDgwMTIzNTk1OVowgcExCzAJBgNVBAYTAlVTMRcw
FQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgNCBQdWJsaWMg
UHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcyMTowOAYDVQQLEzEo
YykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5
MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMIGfMA0GCSqGSIb3DQEB
AQUAA4GNADCBiQKBgQC68OTP+cSuhVS5B1f5j8V/aBH4xBewRNzjMHPVKmIquNDM
HO0oW369atyzkSTKQWI8/AIBvxwWMZQFl3Zuoq29YRdsTjCG8FE3KlDHqGKB3FtK
qsGgtG7rL+VXxbErQHDbWk2hjh+9Ax/YA9SPTJlxvOKCzFjomDqG04Y48wApHwID
AQABMA0GCSqGSIb3DQEBBQUAA4GBAIWMEsGnuVAVess+rLhDityq3RS6iYF+ATwj
cSGIL4LcY/oCRaxFWdcqWERbt5+BO5JoPeI3JPV7bI92NZYJqFmduc4jq3TWg/0y
cyfYaT5DdPauxYma51N86Xv2S/PBZYPejYqcPIiNOVn8qj8ijaHBZlCBckztImRP
T8qAkbYp
-----END CERTIFICATE-----

              ]]></file>
              <file Name="ed39abd0.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIICPzCCAcWgAwIBAgIQBVVWvPJepDU1w6QP1atFcjAKBggqhkjOPQQDAzBhMQswCQYDVQQGEwJV
UzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSAwHgYD
VQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBHMzAeFw0xMzA4MDExMjAwMDBaFw0zODAxMTUxMjAw
MDBaMGExCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5k
aWdpY2VydC5jb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IEczMHYwEAYHKoZIzj0C
AQYFK4EEACIDYgAE3afZu4q4C/sLfyHS8L6+c/MzXRq8NOrexpu80JX28MzQC7phW1FGfp4tn+6O
YwwX7Adw9c+ELkCDnOg/QW07rdOkFFk2eJ0DQ+4QE2xy3q6Ip6FrtUPOZ9wj/wMco+I+o0IwQDAP
BgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUs9tIpPmhxdiuNkHMEWNp
Yim8S8YwCgYIKoZIzj0EAwMDaAAwZQIxAK288mw/EkrRLTnDCgmXc/SINoyIJ7vmiI1Qhadj+Z4y
3maTD/HMsQmP3Wyr+mt/oAIwOWZbwmSNuJ5Q3KjVSaLtx9zRSX8XAbjIho9OjIgrqJqpisXRAL34
VOKa5Vt8sycX
-----END CERTIFICATE-----

              ]]></file>
              <file Name="ed524cf5.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIE2DCCBEGgAwIBAgIEN0rSQzANBgkqhkiG9w0BAQUFADCBwzELMAkGA1UEBhMC
VVMxFDASBgNVBAoTC0VudHJ1c3QubmV0MTswOQYDVQQLEzJ3d3cuZW50cnVzdC5u
ZXQvQ1BTIGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTElMCMGA1UECxMc
KGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDE6MDgGA1UEAxMxRW50cnVzdC5u
ZXQgU2VjdXJlIFNlcnZlciBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw05OTA1
MjUxNjA5NDBaFw0xOTA1MjUxNjM5NDBaMIHDMQswCQYDVQQGEwJVUzEUMBIGA1UE
ChMLRW50cnVzdC5uZXQxOzA5BgNVBAsTMnd3dy5lbnRydXN0Lm5ldC9DUFMgaW5j
b3JwLiBieSByZWYuIChsaW1pdHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMTk5OSBF
bnRydXN0Lm5ldCBMaW1pdGVkMTowOAYDVQQDEzFFbnRydXN0Lm5ldCBTZWN1cmUg
U2VydmVyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIGdMA0GCSqGSIb3DQEBAQUA
A4GLADCBhwKBgQDNKIM0VBuJ8w+vN5Ex/68xYMmo6LIQaO2f55M28Qpku0f1BBc/
I0dNxScZgSYMVHINiC3ZH5oSn7yzcdOAGT9HZnuMNSjSuQrfJNqc1lB5gXpa0zf3
wkrYKZImZNHkmGw6AIr1NJtl+O3jEP/9uElY3KDegjlrgbEWGWG5VLbmQwIBA6OC
AdcwggHTMBEGCWCGSAGG+EIBAQQEAwIABzCCARkGA1UdHwSCARAwggEMMIHeoIHb
oIHYpIHVMIHSMQswCQYDVQQGEwJVUzEUMBIGA1UEChMLRW50cnVzdC5uZXQxOzA5
BgNVBAsTMnd3dy5lbnRydXN0Lm5ldC9DUFMgaW5jb3JwLiBieSByZWYuIChsaW1p
dHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMTk5OSBFbnRydXN0Lm5ldCBMaW1pdGVk
MTowOAYDVQQDEzFFbnRydXN0Lm5ldCBTZWN1cmUgU2VydmVyIENlcnRpZmljYXRp
b24gQXV0aG9yaXR5MQ0wCwYDVQQDEwRDUkwxMCmgJ6AlhiNodHRwOi8vd3d3LmVu
dHJ1c3QubmV0L0NSTC9uZXQxLmNybDArBgNVHRAEJDAigA8xOTk5MDUyNTE2MDk0
MFqBDzIwMTkwNTI1MTYwOTQwWjALBgNVHQ8EBAMCAQYwHwYDVR0jBBgwFoAU8Bdi
E1U9s/8KAGv7UISX8+1i0BowHQYDVR0OBBYEFPAXYhNVPbP/CgBr+1CEl/PtYtAa
MAwGA1UdEwQFMAMBAf8wGQYJKoZIhvZ9B0EABAwwChsEVjQuMAMCBJAwDQYJKoZI
hvcNAQEFBQADgYEAkNwwAvpkdMKnCqV8IY00F6j7Rw7/JXyNEwr75Ji174z4xRAN
95K+8cPV1ZVqBLssziY2ZcgxxufuP+NXdYR6Ee9GTxj005i7qIcyunL2POI9n9cd
2cNgQ4xYDiKWL2KjLB+6rQXvqzJ4h6BUcxm1XAX5Uj5tLUUL9wqT6u0G+bI=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="ed62f4e3.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDAzCCAmwCEQC5L2DMiJ+hekYJuFtwbIqvMA0GCSqGSIb3DQEBBQUAMIHBMQsw
CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0Ns
YXNzIDIgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBH
MjE6MDgGA1UECxMxKGMpIDE5OTggVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9y
aXplZCB1c2Ugb25seTEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazAe
Fw05ODA1MTgwMDAwMDBaFw0yODA4MDEyMzU5NTlaMIHBMQswCQYDVQQGEwJVUzEX
MBUGA1UEChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0NsYXNzIDIgUHVibGlj
IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMjE6MDgGA1UECxMx
KGMpIDE5OTggVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25s
eTEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazCBnzANBgkqhkiG9w0B
AQEFAAOBjQAwgYkCgYEAp4gBIXQs5xoD8JjhlzwPIQjxnNuX6Zr8wgQGE75fUsjM
HiwSViy4AWkszJkfrbCWrnkE8hM5wXuYuggs6MKEEyyqaekJ9MepAqRCwiNPStjw
DqL7MWzJ5m+ZJwf15vRMeJ5t60aG+rmGyVTyssSv1EYcWskVMP8NbPUtDm3Of3cC
AwEAATANBgkqhkiG9w0BAQUFAAOBgQByLvl/0fFx+8Se9sVeUYpAmLho+Jscg9ji
nb3/7aHmZuovCfTK1+qlK5X2JGCGTUQug6XELaDTrnhpb3LabK4I8GOSN+a7xDAX
rXfMSTWqz9iP0b63GJZHc2pUIjRkLbYWm1lbtFFZOrMLFPQS32eg9K0yZF6xRnIn
jBJ7xUS0rg==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="ee7cd6fb.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEvTCCA6WgAwIBAgIBADANBgkqhkiG9w0BAQUFADB/MQswCQYDVQQGEwJFVTEnMCUGA1UEChMe
QUMgQ2FtZXJmaXJtYSBTQSBDSUYgQTgyNzQzMjg3MSMwIQYDVQQLExpodHRwOi8vd3d3LmNoYW1i
ZXJzaWduLm9yZzEiMCAGA1UEAxMZQ2hhbWJlcnMgb2YgQ29tbWVyY2UgUm9vdDAeFw0wMzA5MzAx
NjEzNDNaFw0zNzA5MzAxNjEzNDRaMH8xCzAJBgNVBAYTAkVVMScwJQYDVQQKEx5BQyBDYW1lcmZp
cm1hIFNBIENJRiBBODI3NDMyODcxIzAhBgNVBAsTGmh0dHA6Ly93d3cuY2hhbWJlcnNpZ24ub3Jn
MSIwIAYDVQQDExlDaGFtYmVycyBvZiBDb21tZXJjZSBSb290MIIBIDANBgkqhkiG9w0BAQEFAAOC
AQ0AMIIBCAKCAQEAtzZV5aVdGDDg2olUkfzIx1L4L1DZ77F1c2VHfRtbunXF/KGIJPov7coISjlU
xFF6tdpg6jg8gbLL8bvZkSM/SAFwdakFKq0fcfPJVD0dBmpAPrMMhe5cG3nCYsS4No41XQEMIwRH
NaqbYE6gZj3LJgqcQKH0XZi/caulAGgq7YN6D6IUtdQis4CwPAxaUWktWBiP7Zme8a7ileb2R6jW
DA+wWFjbw2Y3npuRVDM30pQcakjJyfKl2qUMI/cjDpwyVV5xnIQFUZot/eZOKjRa3spAN2cMVCFV
d9oKDMyXroDclDZK9D7ONhMeU+SsTjoF7Nuucpw4i9A5O4kKPnf+dQIBA6OCAUQwggFAMBIGA1Ud
EwEB/wQIMAYBAf8CAQwwPAYDVR0fBDUwMzAxoC+gLYYraHR0cDovL2NybC5jaGFtYmVyc2lnbi5v
cmcvY2hhbWJlcnNyb290LmNybDAdBgNVHQ4EFgQU45T1sU3p26EpW1eLTXYGduHRooowDgYDVR0P
AQH/BAQDAgEGMBEGCWCGSAGG+EIBAQQEAwIABzAnBgNVHREEIDAegRxjaGFtYmVyc3Jvb3RAY2hh
bWJlcnNpZ24ub3JnMCcGA1UdEgQgMB6BHGNoYW1iZXJzcm9vdEBjaGFtYmVyc2lnbi5vcmcwWAYD
VR0gBFEwTzBNBgsrBgEEAYGHLgoDATA+MDwGCCsGAQUFBwIBFjBodHRwOi8vY3BzLmNoYW1iZXJz
aWduLm9yZy9jcHMvY2hhbWJlcnNyb290Lmh0bWwwDQYJKoZIhvcNAQEFBQADggEBAAxBl8IahsAi
fJ/7kPMa0QOx7xP5IV8EnNrJpY0nbJaHkb5BkAFyk+cefV/2icZdp0AJPaxJRUXcLo0waLIJuvvD
L8y6C98/d3tGfToSJI6WjzwFCm/SlCgdbQzALogi1djPHRPH8EjX1wWnz8dHnjs8NMiAT9QUu/wN
UPf6s+xCX6ndbcj0dc97wXImsQEcXCz9ek60AcUFV7nnPKoF2YjpB0ZBzu9Bga5Y34OirsrXdx/n
ADydb47kMgkdTXg0eDQ8lJsm7U9xxhl6vSAiSFr+S30Dt+dYvsYyTnQeaN2oaFuzPu5ifdmA6Ap1
erfutGWaIZDgqtCYvDi1czyL+Nw=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="ee90b008.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFYzCCA0ugAwIBAgIBOzANBgkqhkiG9w0BAQsFADBTMQswCQYDVQQGEwJJTDEWMBQGA1UEChMN
U3RhcnRDb20gTHRkLjEsMCoGA1UEAxMjU3RhcnRDb20gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg
RzIwHhcNMTAwMTAxMDEwMDAxWhcNMzkxMjMxMjM1OTAxWjBTMQswCQYDVQQGEwJJTDEWMBQGA1UE
ChMNU3RhcnRDb20gTHRkLjEsMCoGA1UEAxMjU3RhcnRDb20gQ2VydGlmaWNhdGlvbiBBdXRob3Jp
dHkgRzIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC2iTZbB7cgNr2Cu+EWIAOVeq8O
o1XJJZlKxdBWQYeQTSFgpBSHO839sj60ZwNq7eEPS8CRhXBF4EKe3ikj1AENoBB5uNsDvfOpL9HG
4A/LnooUCri99lZi8cVytjIl2bLzvWXFDSxu1ZJvGIsAQRSCb0AgJnooD/Uefyf3lLE3PbfHkffi
Aez9lInhzG7TNtYKGXmu1zSCZf98Qru23QumNK9LYP5/Q0kGi4xDuFby2X8hQxfqp0iVAXV16iul
Q5XqFYSdCI0mblWbq9zSOdIxHWDirMxWRST1HFSr7obdljKF+ExP6JV2tgXdNiNnvP8V4so75qbs
O+wmETRIjfaAKxojAuuKHDp2KntWFhxyKrOq42ClAJ8Em+JvHhRYW6Vsi1g8w7pOOlz34ZYrPu8H
vKTlXcxNnw3h3Kq74W4a7I/htkxNeXJdFzULHdfBR9qWJODQcqhaX2YtENwvKhOuJv4KHBnM0D4L
nMgJLvlblnpHnOl68wVQdJVznjAJ85eCXuaPOQgeWeU1FEIT/wCc976qUM/iUUjXuG+v+E5+M5iS
FGI6dWPPe/regjupuznixL0sAA7IF6wT700ljtizkC+p2il9Ha90OrInwMEePnWjFqmveiJdnxMa
z6eg6+OGCtP95paV1yPIN93EfKo2rJgaErHgTuixO/XWb/Ew1wIDAQABo0IwQDAPBgNVHRMBAf8E
BTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUS8W0QGutHLOlHGVuRjaJhwUMDrYwDQYJ
KoZIhvcNAQELBQADggIBAHNXPyzVlTJ+N9uWkusZXn5T50HsEbZH77Xe7XRcxfGOSeD8bpkTzZ+K
2s06Ctg6Wgk/XzTQLwPSZh0avZyQN8gMjgdalEVGKua+etqhqaRpEpKwfTbURIfXUfEpY9Z1zRbk
J4kd+MIySP3bmdCPX1R0zKxnNBFi2QwKN4fRoxdIjtIXHfbX/dtl6/2o1PXWT6RbdejF0mCy2wl+
JYt7ulKSnj7oxXehPOBKc2thz4bcQ///If4jXSRK9dNtD2IEBVeC2m6kMyV5Sy5UGYvMLD0w6dEG
/+gyRr61M3Z3qAFdlsHB1b6uJcDJHgoJIIihDsnzb02CVAAgp9KP5DlUFy6NHrgbuxu9mk47EDTc
nIhT76IxW1hPkWLIwpqazRVdOKnWvvgTtZ8SafJQYqz7Fzf07rh1Z2AQ+4NQ+US1dZxAF7L+/Xld
blhYXzD8AK6vM8EOTmy6p6ahfzLbOOCxchcKK5HsamMm7YnUeMx0HgX4a/6ManY5Ka5lIxKVCCIc
l85bBu4M4ru8H0ST9tg4RQUh7eStqxK2A6RCLi3ECToDZ2mEmuFZkIoohdVddLHRDiBYmxOlsGOm
7XtH/UVVMKTumtTm4ofvmMkyghEpIrwACjFeLQ/Ajulrso8uBtjRkcfGEvRM/TAXw8HaOFvjqerm
obp573PYtlNXLfbQ4ddI
-----END CERTIFICATE-----

              ]]></file>
              <file Name="f3cf1e8e.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIFajCCBFKgAwIBAgIEPLU9RjANBgkqhkiG9w0BAQUFADBmMRIwEAYDVQQKEwli
ZVRSVVNUZWQxGzAZBgNVBAsTEmJlVFJVU1RlZCBSb290IENBczEzMDEGA1UEAxMq
YmVUUlVTVGVkIFJvb3QgQ0EtQmFsdGltb3JlIEltcGxlbWVudGF0aW9uMB4XDTAy
MDQxMTA3Mzg1MVoXDTIyMDQxMTA3Mzg1MVowZjESMBAGA1UEChMJYmVUUlVTVGVk
MRswGQYDVQQLExJiZVRSVVNUZWQgUm9vdCBDQXMxMzAxBgNVBAMTKmJlVFJVU1Rl
ZCBSb290IENBLUJhbHRpbW9yZSBJbXBsZW1lbnRhdGlvbjCCASIwDQYJKoZIhvcN
AQEBBQADggEPADCCAQoCggEBALx+xDmcjOPWHIb/ymKt4H8wRXqOGrO4x/nRNv8i
805qX4QQ+2aBw5R5MdKR4XeOGCrDFN5R9U+jK7wYFuK13XneIviCfsuBH/0nLI/6
l2Qijvj/YaOcGx6Sj8CoCd8JEey3fTGaGuqDIQY8n7pc/5TqarjDa1U0Tz0yH92B
FODEPM2dMPgwqZfT7syj0B9fHBOB1BirlNFjw55/NZKeX0Tq7PQiXLfoPX2k+Ymp
kbIq2eszh+6l/ePazIjmiSZuxyuC0F6dWdsU7JGDBcNeDsYq0ATdcT0gTlgn/FP7
eHgZFLL8kFKJOGJgB7Sg7KxrUNb9uShr71ItOrL/8QFArDcCAwEAAaOCAh4wggIa
MA8GA1UdEwEB/wQFMAMBAf8wggG1BgNVHSAEggGsMIIBqDCCAaQGDysGAQQBsT4A
AAEJKIORMTCCAY8wggFIBggrBgEFBQcCAjCCAToaggE2UmVsaWFuY2Ugb24gb3Ig
dXNlIG9mIHRoaXMgQ2VydGlmaWNhdGUgY3JlYXRlcyBhbiBhY2tub3dsZWRnbWVu
dCBhbmQgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJk
IHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgdGhlIENlcnRpZmljYXRpb24g
UHJhY3RpY2UgU3RhdGVtZW50IGFuZCB0aGUgUmVseWluZyBQYXJ0eSBBZ3JlZW1l
bnQsIHdoaWNoIGNhbiBiZSBmb3VuZCBhdCB0aGUgYmVUUlVTVGVkIHdlYiBzaXRl
LCBodHRwOi8vd3d3LmJldHJ1c3RlZC5jb20vcHJvZHVjdHNfc2VydmljZXMvaW5k
ZXguaHRtbDBBBggrBgEFBQcCARY1aHR0cDovL3d3dy5iZXRydXN0ZWQuY29tL3By
b2R1Y3RzX3NlcnZpY2VzL2luZGV4Lmh0bWwwHQYDVR0OBBYEFEU9w6nR3D8kVpgc
cxiIav+DR+22MB8GA1UdIwQYMBaAFEU9w6nR3D8kVpgccxiIav+DR+22MA4GA1Ud
DwEB/wQEAwIBBjANBgkqhkiG9w0BAQUFAAOCAQEASZK8o+6svfoNyYt5hhwjdrCA
WXf82n+0S9/DZEtqTg6t8n1ZdwWtColzsPq8y9yNAIiPpqCy6qxSJ7+hSHyXEHu6
7RMdmgduyzFiEuhjA6p9beP4G3YheBufS0OM00mG9htc9i5gFdPp43t1P9ACg9AY
gkHNZTfqjjJ+vWuZXTARyNtIVBw74acT02pIk/c9jH8F6M7ziCpjBLjqflh8AXtb
4cV97yHgjQ5dUX2xZ/2jvTg2xvI4hocalmhgRvsoFEdV4aeADGvi6t9NfJBIoDa9
CReJf8Py05yc493EG931t3GzUwWJBtDLSoDByFOQtTwxiBdQn8nEDovYqAJjDQ==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="f4996e82.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIC5zCCAlACAQEwDQYJKoZIhvcNAQEFBQAwgbsxJDAiBgNVBAcTG1ZhbGlDZXJ0
IFZhbGlkYXRpb24gTmV0d29yazEXMBUGA1UEChMOVmFsaUNlcnQsIEluYy4xNTAz
BgNVBAsTLFZhbGlDZXJ0IENsYXNzIDEgUG9saWN5IFZhbGlkYXRpb24gQXV0aG9y
aXR5MSEwHwYDVQQDExhodHRwOi8vd3d3LnZhbGljZXJ0LmNvbS8xIDAeBgkqhkiG
9w0BCQEWEWluZm9AdmFsaWNlcnQuY29tMB4XDTk5MDYyNTIyMjM0OFoXDTE5MDYy
NTIyMjM0OFowgbsxJDAiBgNVBAcTG1ZhbGlDZXJ0IFZhbGlkYXRpb24gTmV0d29y
azEXMBUGA1UEChMOVmFsaUNlcnQsIEluYy4xNTAzBgNVBAsTLFZhbGlDZXJ0IENs
YXNzIDEgUG9saWN5IFZhbGlkYXRpb24gQXV0aG9yaXR5MSEwHwYDVQQDExhodHRw
Oi8vd3d3LnZhbGljZXJ0LmNvbS8xIDAeBgkqhkiG9w0BCQEWEWluZm9AdmFsaWNl
cnQuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDYWYJ6ibiWuqYvaG9Y
LqdUHAZu9OqNSLwxlBfw8068srg1knaw0KWlAdcAAxIiGQj4/xEjm84H9b9pGib+
TunRf50sQB1ZaG6m+FiwnRqP0z/x3BkGgagO4DrdyFNFCQbmD3DD+kCmDuJWBQ8Y
TfwggtFzVXSNdnKgHZ0dwN0/cQIDAQABMA0GCSqGSIb3DQEBBQUAA4GBAFBoPUn0
LBwGlN+VYH+Wexf+T3GtZMjdd9LvWVXoP+iOBSoh8gfStadS/pyxtuJbdxdA6nLW
I8sogTLDAHkY7FkXicnGah5xyf23dKUlRWnFSKsZ4UWKJWsZ7uW7EvV/96aNUcPw
nXS3qT6gpf+2SQMT2iLM7XGCK5nPOrf1LXLI
-----END CERTIFICATE-----

              ]]></file>
              <file Name="f58a60fe.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDqzCCApOgAwIBAgIRAMcoRwmzuGxFjB36JPU2TukwDQYJKoZIhvcNAQEFBQAwPDEbMBkGA1UE
AxMSQ29tU2lnbiBTZWN1cmVkIENBMRAwDgYDVQQKEwdDb21TaWduMQswCQYDVQQGEwJJTDAeFw0w
NDAzMjQxMTM3MjBaFw0yOTAzMTYxNTA0NTZaMDwxGzAZBgNVBAMTEkNvbVNpZ24gU2VjdXJlZCBD
QTEQMA4GA1UEChMHQ29tU2lnbjELMAkGA1UEBhMCSUwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
ggEKAoIBAQDGtWhfHZQVw6QIVS3joFd67+l0Kru5fFdJGhFeTymHDEjWaueP1H5XJLkGieQcPOqs
49ohgHMhCu95mGwfCP+hUH3ymBvJVG8+pSjsIQQPRbsHPaHA+iqYHU4Gk/v1iDurX8sWv+bznkqH
7Rnqwp9D5PGBpX8QTz7RSmKtUxvLg/8HZaWSLWapW7ha9B20IZFKF3ueMv5WJDmyVIRD9YTC2LxB
kMyd1mja6YJQqTtoz7VdApRgFrFD2UNd3V2Hbuq7s8lr9gOUCXDeFhF6K+h2j0kQmHe5Y1yLM5d1
9guMsqtb3nQgJT/j8xH5h2iGNXHDHYwt6+UarA9z1YJZQIDTAgMBAAGjgacwgaQwDAYDVR0TBAUw
AwEB/zBEBgNVHR8EPTA7MDmgN6A1hjNodHRwOi8vZmVkaXIuY29tc2lnbi5jby5pbC9jcmwvQ29t
U2lnblNlY3VyZWRDQS5jcmwwDgYDVR0PAQH/BAQDAgGGMB8GA1UdIwQYMBaAFMFL7XC29z58ADsA
j8c+DkWfHl3sMB0GA1UdDgQWBBTBS+1wtvc+fAA7AI/HPg5Fnx5d7DANBgkqhkiG9w0BAQUFAAOC
AQEAFs/ukhNQq3sUnjO2QiBq1BW9Cav8cujvR3qQrFHBZE7piL1DRYHjZiM/EoZNGeQFsOY3wo3a
BijJD4mkU6l1P7CW+6tMM1X5eCZGbxs2mPtCdsGCuY7e+0X5YxtiOzkGynd6qDwJz2w2PQ8KRUtp
FhpFfTMDZflScZAmlaxMDPWLkz/MdXSFmLr/YnpNH4n+rr2UAJm/EaXc4HnFFgt9AmEd6oX5AhVP
51qJThRv4zdLhfXBPGHg/QVBspJ/wx2g0K5SZGBrGMYmnNj1ZOQ2GmKfig8+/21OGVZOIJFsnzQz
OjRXUDpvgV4GxvU+fE6OK85lBi5d0ipTdF7Tbieejw==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="f61bff45.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIHqDCCBpCgAwIBAgIRAMy4579OKRr9otxmpRwsDxEwDQYJKoZIhvcNAQEFBQAwcjELMAkGA1UE
BhMCSFUxETAPBgNVBAcTCEJ1ZGFwZXN0MRYwFAYDVQQKEw1NaWNyb3NlYyBMdGQuMRQwEgYDVQQL
EwtlLVN6aWdubyBDQTEiMCAGA1UEAxMZTWljcm9zZWMgZS1Temlnbm8gUm9vdCBDQTAeFw0wNTA0
MDYxMjI4NDRaFw0xNzA0MDYxMjI4NDRaMHIxCzAJBgNVBAYTAkhVMREwDwYDVQQHEwhCdWRhcGVz
dDEWMBQGA1UEChMNTWljcm9zZWMgTHRkLjEUMBIGA1UECxMLZS1Temlnbm8gQ0ExIjAgBgNVBAMT
GU1pY3Jvc2VjIGUtU3ppZ25vIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
AQDtyADVgXvNOABHzNuEwSFpLHSQDCHZU4ftPkNEU6+r+ICbPHiN1I2uuO/TEdyB5s87lozWbxXG
d36hL+BfkrYn13aaHUM86tnsL+4582pnS4uCzyL4ZVX+LMsvfUh6PXX5qqAnu3jCBspRwn5mS6/N
oqdNAoI/gqyFxuEPkEeZlApxcpMqyabAvjxWTHOSJ/FrtfX9/DAFYJLG65Z+AZHCabEeHXtTRbjc
QR/Ji3HWVBTji1R4P770Yjtb9aPs1ZJ04nQw7wHb4dSrmZsqa/i9phyGI0Jf7Enemotb9HI6QMVJ
PqW+jqpx62z69Rrkav17fVVA71hu5tnVvCSrwe+3AgMBAAGjggQ3MIIEMzBnBggrBgEFBQcBAQRb
MFkwKAYIKwYBBQUHMAGGHGh0dHBzOi8vcmNhLmUtc3ppZ25vLmh1L29jc3AwLQYIKwYBBQUHMAKG
IWh0dHA6Ly93d3cuZS1zemlnbm8uaHUvUm9vdENBLmNydDAPBgNVHRMBAf8EBTADAQH/MIIBcwYD
VR0gBIIBajCCAWYwggFiBgwrBgEEAYGoGAIBAQEwggFQMCgGCCsGAQUFBwIBFhxodHRwOi8vd3d3
LmUtc3ppZ25vLmh1L1NaU1ovMIIBIgYIKwYBBQUHAgIwggEUHoIBEABBACAAdABhAG4A+gBzAO0A
dAB2AOEAbgB5ACAA6QByAHQAZQBsAG0AZQB6AOkAcwDpAGgAZQB6ACAA6QBzACAAZQBsAGYAbwBn
AGEAZADhAHMA4QBoAG8AegAgAGEAIABTAHoAbwBsAGcA4QBsAHQAYQB0APMAIABTAHoAbwBsAGcA
4QBsAHQAYQB0AOEAcwBpACAAUwB6AGEAYgDhAGwAeQB6AGEAdABhACAAcwB6AGUAcgBpAG4AdAAg
AGsAZQBsAGwAIABlAGwAagDhAHIAbgBpADoAIABoAHQAdABwADoALwAvAHcAdwB3AC4AZQAtAHMA
egBpAGcAbgBvAC4AaAB1AC8AUwBaAFMAWgAvMIHIBgNVHR8EgcAwgb0wgbqggbeggbSGIWh0dHA6
Ly93d3cuZS1zemlnbm8uaHUvUm9vdENBLmNybIaBjmxkYXA6Ly9sZGFwLmUtc3ppZ25vLmh1L0NO
PU1pY3Jvc2VjJTIwZS1Temlnbm8lMjBSb290JTIwQ0EsT1U9ZS1Temlnbm8lMjBDQSxPPU1pY3Jv
c2VjJTIwTHRkLixMPUJ1ZGFwZXN0LEM9SFU/Y2VydGlmaWNhdGVSZXZvY2F0aW9uTGlzdDtiaW5h
cnkwDgYDVR0PAQH/BAQDAgEGMIGWBgNVHREEgY4wgYuBEGluZm9AZS1zemlnbm8uaHWkdzB1MSMw
IQYDVQQDDBpNaWNyb3NlYyBlLVN6aWduw7MgUm9vdCBDQTEWMBQGA1UECwwNZS1TemlnbsOzIEhT
WjEWMBQGA1UEChMNTWljcm9zZWMgS2Z0LjERMA8GA1UEBxMIQnVkYXBlc3QxCzAJBgNVBAYTAkhV
MIGsBgNVHSMEgaQwgaGAFMegSXUWYYTbMUuE0vE3QJDvTtz3oXakdDByMQswCQYDVQQGEwJIVTER
MA8GA1UEBxMIQnVkYXBlc3QxFjAUBgNVBAoTDU1pY3Jvc2VjIEx0ZC4xFDASBgNVBAsTC2UtU3pp
Z25vIENBMSIwIAYDVQQDExlNaWNyb3NlYyBlLVN6aWdubyBSb290IENBghEAzLjnv04pGv2i3Gal
HCwPETAdBgNVHQ4EFgQUx6BJdRZhhNsxS4TS8TdAkO9O3PcwDQYJKoZIhvcNAQEFBQADggEBANMT
nGZjWS7KXHAM/IO8VbH0jgdsZifOwTsgqRy7RlRw7lrMoHfqaEQn6/Ip3Xep1fvj1KcExJW4C+FE
aGAHQzAxQmHl7tnlJNUb3+FKG6qfx1/4ehHqE5MAyopYse7tDk2016g2JnzgOsHVV4Lxdbb9iV/a
86g4nzUGCM4ilb7N1fy+W955a9x6qWVmvrElWl/tftOsRm1M9DKHtCAE4Gx4sHfRhUZLphK3dehK
yVZs15KrnfVJONJPU+NVkBHbmJbGSfI+9J8b4PeI3CVimUTYc78/MPMMNz7UwiiAc7EBt51alhQB
S6kRnSlqLtBdgcDPsiBDxwPgN05dCtxZICU=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="f64d9715.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIICtzCCAiACAQAwDQYJKoZIhvcNAQEEBQAwgaMxCzAJBgNVBAYTAkVTMRIwEAYD
VQQIEwlCQVJDRUxPTkExEjAQBgNVBAcTCUJBUkNFTE9OQTEZMBcGA1UEChMQSVBT
IFNlZ3VyaWRhZCBDQTEYMBYGA1UECxMPQ2VydGlmaWNhY2lvbmVzMRcwFQYDVQQD
Ew5JUFMgU0VSVklET1JFUzEeMBwGCSqGSIb3DQEJARYPaXBzQG1haWwuaXBzLmVz
MB4XDTk4MDEwMTIzMjEwN1oXDTA5MTIyOTIzMjEwN1owgaMxCzAJBgNVBAYTAkVT
MRIwEAYDVQQIEwlCQVJDRUxPTkExEjAQBgNVBAcTCUJBUkNFTE9OQTEZMBcGA1UE
ChMQSVBTIFNlZ3VyaWRhZCBDQTEYMBYGA1UECxMPQ2VydGlmaWNhY2lvbmVzMRcw
FQYDVQQDEw5JUFMgU0VSVklET1JFUzEeMBwGCSqGSIb3DQEJARYPaXBzQG1haWwu
aXBzLmVzMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCsT1J0nznqjtwlxLyY
XZhkJAk8IbPMGbWOlI6H0fg3PqHILVikgDVboXVsHUUMH2Fjal5vmwpMwci4YSM1
gf/+rHhwLWjhOgeYlQJU3c0jt4BT18g3RXIGJBK6E2Ehim51KODFDzT9NthFf+G4
Nu+z4cYgjui0OLzhPvYR3oydAQIDAQABMA0GCSqGSIb3DQEBBAUAA4GBACzzw3lY
JN7GO9HgQmm47mSzPWIBubOE3yN93ZjPEKn+ANgilgUTB1RXxafey9m4iEL2mdsU
dx+2/iU94aI+A6mB0i1sR/WWRowiq8jMDQ6XXotBtDvECgZAHd1G9AHduoIuPD14
cJ58GNCr+Lh3B0Zx8coLY1xq+XKU1QFPoNtC
-----END CERTIFICATE-----

              ]]></file>
              <file Name="f73e89fd.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIICNDCCAaECEAKtZn5ORf5eV288mBle3cAwDQYJKoZIhvcNAQECBQAwXzELMAkG
A1UEBhMCVVMxIDAeBgNVBAoTF1JTQSBEYXRhIFNlY3VyaXR5LCBJbmMuMS4wLAYD
VQQLEyVTZWN1cmUgU2VydmVyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTk0
MTEwOTAwMDAwMFoXDTEwMDEwNzIzNTk1OVowXzELMAkGA1UEBhMCVVMxIDAeBgNV
BAoTF1JTQSBEYXRhIFNlY3VyaXR5LCBJbmMuMS4wLAYDVQQLEyVTZWN1cmUgU2Vy
dmVyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIGbMA0GCSqGSIb3DQEBAQUAA4GJ
ADCBhQJ+AJLOesGugz5aqomDV6wlAXYMra6OLDfO6zV4ZFQD5YRAUcm/jwjiioII
0haGN1XpsSECrXZogZoFokvJSyVmIlZsiAeP94FZbYQHZXATcXY+m3dM41CJVphI
uR2nKRoTLkoRWZweFdVJVCxzOmmCsZc5nG1wZ0jl3S3WyB57AgMBAAEwDQYJKoZI
hvcNAQECBQADfgBl3X7hsuyw4jrg7HFGmhkRuNPHoLQDQCYCPgmc4RKz0Vr2N6W3
YQO2WxZpO8ZECAyIUwxrl0nHPjXcbLm7qt9cuzovk2C2qUtN8iD3zV9/ZHuO3ABc
1/p3yjkWWW8O6tO1g39NTUJWdrTJXwT4OPjr0l91X817/OWOgHz8UA==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="f80cc7f6.0"><![CDATA[
-----BEGIN CERTIFICATE-----
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
-----END CERTIFICATE-----

              ]]></file>
              <file Name="f950ccc2.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIH6jCCB1OgAwIBAgIBADANBgkqhkiG9w0BAQUFADCCARIxCzAJBgNVBAYTAkVT
MRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UE
ChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjErMCkGA1UE
ChQiaXBzQG1haWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEuMCwGA1UECxMl
SVBTIENBIENMQVNFMSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEuMCwGA1UEAxMl
SVBTIENBIENMQVNFMSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEeMBwGCSqGSIb3
DQEJARYPaXBzQG1haWwuaXBzLmVzMB4XDTAxMTIyOTAwNTkzOFoXDTI1MTIyNzAw
NTkzOFowggESMQswCQYDVQQGEwJFUzESMBAGA1UECBMJQmFyY2Vsb25hMRIwEAYD
VQQHEwlCYXJjZWxvbmExLjAsBgNVBAoTJUlQUyBJbnRlcm5ldCBwdWJsaXNoaW5n
IFNlcnZpY2VzIHMubC4xKzApBgNVBAoUImlwc0BtYWlsLmlwcy5lcyBDLkkuRi4g
IEItNjA5Mjk0NTIxLjAsBgNVBAsTJUlQUyBDQSBDTEFTRTEgQ2VydGlmaWNhdGlv
biBBdXRob3JpdHkxLjAsBgNVBAMTJUlQUyBDQSBDTEFTRTEgQ2VydGlmaWNhdGlv
biBBdXRob3JpdHkxHjAcBgkqhkiG9w0BCQEWD2lwc0BtYWlsLmlwcy5lczCBnzAN
BgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA4FEnpwvdr9G5Q1uCN0VWcu+atsIS7ywS
zHb5BlmvXSHU0lq4oNTzav3KaY1mSPd05u42veiWkXWmcSjK5yISMmmwPh5r9FBS
YmL9Yzt9fuzuOOpi9GyocY3h6YvJP8a1zZRCb92CRTzo3wno7wpVqVZHYUxJZHMQ
KD/Kvwn/xi8CAwEAAaOCBEowggRGMB0GA1UdDgQWBBTrsxl588GlHKzcuh9morKb
adB4CDCCAUQGA1UdIwSCATswggE3gBTrsxl588GlHKzcuh9morKbadB4CKGCARqk
ggEWMIIBEjELMAkGA1UEBhMCRVMxEjAQBgNVBAgTCUJhcmNlbG9uYTESMBAGA1UE
BxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJUFMgSW50ZXJuZXQgcHVibGlzaGluZyBT
ZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJpcHNAbWFpbC5pcHMuZXMgQy5JLkYuICBC
LTYwOTI5NDUyMS4wLAYDVQQLEyVJUFMgQ0EgQ0xBU0UxIENlcnRpZmljYXRpb24g
QXV0aG9yaXR5MS4wLAYDVQQDEyVJUFMgQ0EgQ0xBU0UxIENlcnRpZmljYXRpb24g
QXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXOCAQAwDAYD
VR0TBAUwAwEB/zAMBgNVHQ8EBQMDB/+AMGsGA1UdJQRkMGIGCCsGAQUFBwMBBggr
BgEFBQcDAgYIKwYBBQUHAwMGCCsGAQUFBwMEBggrBgEFBQcDCAYKKwYBBAGCNwIB
FQYKKwYBBAGCNwIBFgYKKwYBBAGCNwoDAQYKKwYBBAGCNwoDBDARBglghkgBhvhC
AQEEBAMCAAcwGgYDVR0RBBMwEYEPaXBzQG1haWwuaXBzLmVzMBoGA1UdEgQTMBGB
D2lwc0BtYWlsLmlwcy5lczBBBglghkgBhvhCAQ0ENBYyQ0xBU0UxIENBIENlcnRp
ZmljYXRlIGlzc3VlZCBieSBodHRwOi8vd3d3Lmlwcy5lcy8wKQYJYIZIAYb4QgEC
BBwWGmh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvMDoGCWCGSAGG+EIBBAQtFito
dHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL2lwczIwMDJDTEFTRTEuY3JsMD8GCWCG
SAGG+EIBAwQyFjBodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL3Jldm9jYXRpb25D
TEFTRTEuaHRtbD8wPAYJYIZIAYb4QgEHBC8WLWh0dHA6Ly93d3cuaXBzLmVzL2lw
czIwMDIvcmVuZXdhbENMQVNFMS5odG1sPzA6BglghkgBhvhCAQgELRYraHR0cDov
L3d3dy5pcHMuZXMvaXBzMjAwMi9wb2xpY3lDTEFTRTEuaHRtbDBzBgNVHR8EbDBq
MDGgL6AthitodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL2lwczIwMDJDTEFTRTEu
Y3JsMDWgM6Axhi9odHRwOi8vd3d3YmFjay5pcHMuZXMvaXBzMjAwMi9pcHMyMDAy
Q0xBU0UxLmNybDAvBggrBgEFBQcBAQQjMCEwHwYIKwYBBQUHMAGGE2h0dHA6Ly9v
Y3NwLmlwcy5lcy8wDQYJKoZIhvcNAQEFBQADgYEAK9Dr/drIyllq2tPMMi7JVBuK
Yn4VLenZMdMu9Ccj/1urxUq2ckCuU3T0vAW0xtnIyXf7t/k0f3gA+Nak5FI/LEpj
V4F1Wo7ojPsCwJTGKbqz3Bzosq/SLmJbGqmODszFV0VRFOlOHIilkfSj945RyKm+
hjM+5i9Ibq9UkE6tsSU=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="fac084d7.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDoDCCAoigAwIBAgIBMTANBgkqhkiG9w0BAQUFADBDMQswCQYDVQQGEwJKUDEcMBoGA1UEChMT
SmFwYW5lc2UgR292ZXJubWVudDEWMBQGA1UECxMNQXBwbGljYXRpb25DQTAeFw0wNzEyMTIxNTAw
MDBaFw0xNzEyMTIxNTAwMDBaMEMxCzAJBgNVBAYTAkpQMRwwGgYDVQQKExNKYXBhbmVzZSBHb3Zl
cm5tZW50MRYwFAYDVQQLEw1BcHBsaWNhdGlvbkNBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
CgKCAQEAp23gdE6Hj6UG3mii24aZS2QNcfAKBZuOquHMLtJqO8F6tJdhjYq+xpqcBrSGUeQ3DnR4
fl+Kf5Sk10cI/VBaVuRorChzoHvpfxiSQE8tnfWuREhzNgaeZCw7NCPbXCbkcXmP1G55IrmTwcrN
wVbtiGrXoDkhBFcsovW8R0FPXjQilbUfKW1eSvNNcr5BViCH/OlQR9cwFO5cjFW6WY2H/CPek9AE
jP3vbb3QesmlOmpyM8ZKDQUXKi17safY1vC+9D/qDihtQWEjdnjDuGWk81quzMKq2edY3rZ+nYVu
nyoKb58DKTCXKB28t89UKU5RMfkntigm/qJj5kEW8DOYRwIDAQABo4GeMIGbMB0GA1UdDgQWBBRU
WssmP3HMlEYNllPqa0jQk/5CdTAOBgNVHQ8BAf8EBAMCAQYwWQYDVR0RBFIwUKROMEwxCzAJBgNV
BAYTAkpQMRgwFgYDVQQKDA/ml6XmnKzlm73mlL/lupwxIzAhBgNVBAsMGuOCouODl+ODquOCseOD
vOOCt+ODp+ODs0NBMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBADlqRHZ3ODrs
o2dGD/mLBqj7apAxzn7s2tGJfHrrLgy9mTLnsCTWw//1sogJhyzjVOGjprIIC8CFqMjSnHH2HZ9g
/DgzE+Ge3Atf2hZQKXsvcJEPmbo0NI2VdMV+eKlmXb3KIXdCEKxmJj3ekav9FfBv7WxfEPjzFvYD
io+nEhEMy/0/ecGc/WLuo89UDNErXxc+4z6/wCs+CZv+iKZ+tJIX/COUgb1up8WMwusRRdv4QcmW
dupwX3kSa+SjB1oF7ydJzyGfikwJcGapJsErEU4z0g781mzSDjJkaP+tBXhfAx2o45CsJOAPQKdL
rosot4LKGAfmt1t06SAZf7IbiVQ=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="facacbc6.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIE0zCCA7ugAwIBAgIQGNrRniZ96LtKIVjNzGs7SjANBgkqhkiG9w0BAQUFADCByjELMAkGA1UE
BhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBO
ZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVk
IHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRp
ZmljYXRpb24gQXV0aG9yaXR5IC0gRzUwHhcNMDYxMTA4MDAwMDAwWhcNMzYwNzE2MjM1OTU5WjCB
yjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2ln
biBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJpU2lnbiwgSW5jLiAtIEZvciBh
dXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmlt
YXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
ggEKAoIBAQCvJAgIKXo1nmAMqudLO07cfLw8RRy7K+D+KQL5VwijZIUVJ/XxrcgxiV0i6CqqpkKz
j/i5Vbext0uz/o9+B1fs70PbZmIVYc9gDaTY3vjgw2IIPVQT60nKWVSFJuUrjxuf6/WhkcIzSdhD
Y2pSS9KP6HBRTdGJaXvHcPaz3BJ023tdS1bTlr8Vd6Gw9KIl8q8ckmcY5fQGBO+QueQA5N06tRn/
Arr0PO7gi+s3i+z016zy9vA9r911kTMZHRxAy3QkGSGT2RT+rCpSx4/VBEnkjWNHiDxpg8v+R70r
fk/Fla4OndTRQ8Bnc+MUCH7lP59zuDMKz10/NIeWiu5T6CUVAgMBAAGjgbIwga8wDwYDVR0TAQH/
BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwbQYIKwYBBQUHAQwEYTBfoV2gWzBZMFcwVRYJaW1hZ2Uv
Z2lmMCEwHzAHBgUrDgMCGgQUj+XTGoasjY5rw8+AatRIGCx7GS4wJRYjaHR0cDovL2xvZ28udmVy
aXNpZ24uY29tL3ZzbG9nby5naWYwHQYDVR0OBBYEFH/TZafC3ey78DAJ80M5+gKvMzEzMA0GCSqG
SIb3DQEBBQUAA4IBAQCTJEowX2LP2BqYLz3q3JktvXf2pXkiOOzEp6B4Eq1iDkVwZMXnl2YtmAl+
X6/WzChl8gGqCBpH3vn5fJJaCGkgDdk+bW48DW7Y5gaRQBi5+MHt39tBquCWIMnNZBU4gcmU7qKE
KQsTb47bDN0lAtukixlE0kF6BWlKWE9gyn6CagsCqiUXObXbf+eEZSqVir2G3l6BFoMtEMze/aiC
Km0oHw0LxOXnGiYZ4fQRbxC1lfznQgUy286dUV4otp6F01vvpX1FQHKOtw5rDgb7MzVIcbidJ4vE
ZV8NhnacRHr2lVz2XTIIM6RUthg/aFzyQkqFOFSDX9HoLPKsEdao7WNq
-----END CERTIFICATE-----

              ]]></file>
              <file Name="fb126c6d.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIGizCCBXOgAwIBAgIEO0XlaDANBgkqhkiG9w0BAQUFADBoMQswCQYDVQQGEwJFUzEfMB0GA1UE
ChMWR2VuZXJhbGl0YXQgVmFsZW5jaWFuYTEPMA0GA1UECxMGUEtJR1ZBMScwJQYDVQQDEx5Sb290
IENBIEdlbmVyYWxpdGF0IFZhbGVuY2lhbmEwHhcNMDEwNzA2MTYyMjQ3WhcNMjEwNzAxMTUyMjQ3
WjBoMQswCQYDVQQGEwJFUzEfMB0GA1UEChMWR2VuZXJhbGl0YXQgVmFsZW5jaWFuYTEPMA0GA1UE
CxMGUEtJR1ZBMScwJQYDVQQDEx5Sb290IENBIEdlbmVyYWxpdGF0IFZhbGVuY2lhbmEwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDGKqtXETcvIorKA3Qdyu0togu8M1JAJke+WmmmO3I2
F0zo37i7L3bhQEZ0ZQKQUgi0/6iMweDHiVYQOTPvaLRfX9ptI6GJXiKjSgbwJ/BXufjpTjJ3Cj9B
ZPPrZe52/lSqfR0grvPXdMIKX/UIKFIIzFVd0g/bmoGlu6GzwZTNVOAydTGRGmKy3nXiz0+J2ZGQ
D0EbtFpKd71ng+CT516nDOeB0/RSrFOyA8dEJvt55cs0YFAQexvba9dHq198aMpunUEDEO5rmXte
JajCq+TA81yc477OMUxkHl6AovWDfgzWyoxVjr7gvkkHD6MkQXpYHYTqWBLI4bft75PelAgxAgMB
AAGjggM7MIIDNzAyBggrBgEFBQcBAQQmMCQwIgYIKwYBBQUHMAGGFmh0dHA6Ly9vY3NwLnBraS5n
dmEuZXMwEgYDVR0TAQH/BAgwBgEB/wIBAjCCAjQGA1UdIASCAiswggInMIICIwYKKwYBBAG/VQIB
ADCCAhMwggHoBggrBgEFBQcCAjCCAdoeggHWAEEAdQB0AG8AcgBpAGQAYQBkACAAZABlACAAQwBl
AHIAdABpAGYAaQBjAGEAYwBpAPMAbgAgAFIAYQDtAHoAIABkAGUAIABsAGEAIABHAGUAbgBlAHIA
YQBsAGkAdABhAHQAIABWAGEAbABlAG4AYwBpAGEAbgBhAC4ADQAKAEwAYQAgAEQAZQBjAGwAYQBy
AGEAYwBpAPMAbgAgAGQAZQAgAFAAcgDhAGMAdABpAGMAYQBzACAAZABlACAAQwBlAHIAdABpAGYA
aQBjAGEAYwBpAPMAbgAgAHEAdQBlACAAcgBpAGcAZQAgAGUAbAAgAGYAdQBuAGMAaQBvAG4AYQBt
AGkAZQBuAHQAbwAgAGQAZQAgAGwAYQAgAHAAcgBlAHMAZQBuAHQAZQAgAEEAdQB0AG8AcgBpAGQA
YQBkACAAZABlACAAQwBlAHIAdABpAGYAaQBjAGEAYwBpAPMAbgAgAHMAZQAgAGUAbgBjAHUAZQBu
AHQAcgBhACAAZQBuACAAbABhACAAZABpAHIAZQBjAGMAaQDzAG4AIAB3AGUAYgAgAGgAdAB0AHAA
OgAvAC8AdwB3AHcALgBwAGsAaQAuAGcAdgBhAC4AZQBzAC8AYwBwAHMwJQYIKwYBBQUHAgEWGWh0
dHA6Ly93d3cucGtpLmd2YS5lcy9jcHMwHQYDVR0OBBYEFHs100DSHHgZZu90ECjcPk+yeAT8MIGV
BgNVHSMEgY0wgYqAFHs100DSHHgZZu90ECjcPk+yeAT8oWykajBoMQswCQYDVQQGEwJFUzEfMB0G
A1UEChMWR2VuZXJhbGl0YXQgVmFsZW5jaWFuYTEPMA0GA1UECxMGUEtJR1ZBMScwJQYDVQQDEx5S
b290IENBIEdlbmVyYWxpdGF0IFZhbGVuY2lhbmGCBDtF5WgwDQYJKoZIhvcNAQEFBQADggEBACRh
TvW1yEICKrNcda3FbcrnlD+laJWIwVTAEGmiEi8YPyVQqHxK6sYJ2fR1xkDar1CdPaUWu20xxsdz
Ckj+IHLtb8zog2EWRpABlUt9jppSCS/2bxzkoXHPjCpaF3ODR00PNvsETUlR4hTJZGH71BTg9J63
NI8KJr2XXPR5OkowGcytT6CYirQxlyric21+eLj4iIlPsSKRZEv1UN4D2+XFducTZnV+ZfsBn5OH
iJ35Rld8TWCvmHMTI6QgkYH60GFmuH3Rr9ZvHmw96RH9qfmCIoaZM3Fa6hlXPZHNqcCjbgcTpsnt
+GijnsNacgmHKNHEc8RzGF9QdRYxn7fofMM=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="fde84897.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIDqDCCApCgAwIBAgIJAP7c4wEPyUj/MA0GCSqGSIb3DQEBBQUAMDQxCzAJBgNVBAYTAkZSMRIw
EAYDVQQKDAlEaGlteW90aXMxETAPBgNVBAMMCENlcnRpZ25hMB4XDTA3MDYyOTE1MTMwNVoXDTI3
MDYyOTE1MTMwNVowNDELMAkGA1UEBhMCRlIxEjAQBgNVBAoMCURoaW15b3RpczERMA8GA1UEAwwI
Q2VydGlnbmEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDIaPHJ1tazNHUmgh7stL7q
XOEm7RFHYeGifBZ4QCHkYJ5ayGPhxLGWkv8YbWkj4Sti993iNi+RB7lIzw7sebYs5zRLcAglozyH
GxnygQcPOJAZ0xH+hrTy0V4eHpbNgGzOOzGTtvKg0KmVEn2lmsxryIRWijOp5yIVUxbwzBfsV1/p
ogqYCd7jX5xv3EjjhQsVWqa6n6xI4wmy9/Qy3l40vhx4XUJbzg4ij02Q130yGLMLLGq/jj8UEYkg
DncUtT2UCIf3JR7VsmAA7G8qKCVuKj4YYxclPz5EIBb2JsglrgVKtOdjLPOMFlN+XPsRGgjBRmKf
Irjxwo1p3Po6WAbfAgMBAAGjgbwwgbkwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUGu3+QTmQ
tCRZvgHyUtVF9lo53BEwZAYDVR0jBF0wW4AUGu3+QTmQtCRZvgHyUtVF9lo53BGhOKQ2MDQxCzAJ
BgNVBAYTAkZSMRIwEAYDVQQKDAlEaGlteW90aXMxETAPBgNVBAMMCENlcnRpZ25hggkA/tzjAQ/J
SP8wDgYDVR0PAQH/BAQDAgEGMBEGCWCGSAGG+EIBAQQEAwIABzANBgkqhkiG9w0BAQUFAAOCAQEA
hQMeknH2Qq/ho2Ge6/PAD/Kl1NqV5ta+aDY9fm4fTIrv0Q8hbV6lUmPOEvjvKtpv6zf+EwLHyzs+
ImvaYS5/1HI93TDhHkxAGYwP15zRgzB7mFncfca5DClMoTOi62c6ZYTTluLtdkVwj7Ur3vkj1klu
PBS1xp81HlDQwY9qcEQCYsuuHWhBp6pX6FOqB9IG9tUUBguRA3UsbHK1YZWaDYu5Def131TN3ubY
1gkIl2PlwS6wt0QmwCbAr1UwnjvVNioZBPRcHv/PLLf/0P2HQBHVESO7SMAhqaQoLf0V+LBOK/Qw
WyH8EZE0vkHve52Xdf+XlcCWWC/qu0bXu+TZLg==
-----END CERTIFICATE-----

              ]]></file>
              <file Name="fdfea813.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIGuDCCBKCgAwIBAgIUUk/B8W400XArhKE/sEK7zHw8kDIwDQYJKoZIhvcNAQEL
BQAwSDELMAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxHjAc
BgNVBAMTFVF1b1ZhZGlzIFJvb3QgQ0EgMiBHMzAeFw0xNjExMzAxNjIxMDFaFw0y
NjExMzAxNjIxMDFaMEkxCzAJBgNVBAYTAkJNMRkwFwYDVQQKDBBRdW9WYWRpcyBM
aW1pdGVkMR8wHQYDVQQDDBZRdW9WYWRpcyBFViBTU0wgSUNBIEczMIICIjANBgkq
hkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAonyczmwRSnw5BhWIrfcD19EbE7bYu5dF
tD8o/5NtQCW+XdoLX+X9uNTuvnPw9Hv2RdhYrJgeLgF2wZ52XMGknRdB8tQYrknA
l/j0N5f8DD82xP2eBkCpIB0UED4zNVwwWcdWvBUgNEdNobz9vQKb7B5LlbXm9kaO
uxYgcv8WsNMivSP3mkJShEOh4RZ3ZdBM/vtJyuvUyEPjyiSzfN94tZHx/H194S4D
VAPgE7ny3ISzN+Aa3kjyLebP/sPzI1AY0DWx8Yg4STG1j0PJeuTb6Ago2kmx4Kqn
4q4kSPL8CgITYHiKaJx6Dt8Q90ieJ7ywG4Mb/YADOIlmoXZ6kXhzGAxyWXFgolLb
4UToIh6U66v3Iyq+gXyCeMXGT4nUgs3+PduzOei9668jeKQaoU5d7LjJUL+ZH2+Y
1bPmMAypHFLZryziOzC5kRo4TamgAf3LHHr2C7yIUuo+avlv3cic3NUodcfMi7Ax
OQFLb32CtDoDeVb5v3x88R0tIEJTizk6M1B/0pGtZiFfXtrNVfHmEYvY2rOLbgWK
M831ykqZSYHUpiqgnaNJb4Qs8WcxqUw1xki64WwiPclUSn5XgGMIwxSDGjUIJHKR
rzgQ9lneHOHVb8pXHNFkdBDHTb1KNmDOyLsg3q0LJP6P3nzT/aWDAj3glpJvGQ5d
kjAbjx+NFk8CAwEAAaOCAZcwggGTMBIGA1UdEwEB/wQIMAYBAf8CAQAwUQYDVR0g
BEowSDBGBgwrBgEEAb5YAAJkAQIwNjA0BggrBgEFBQcCARYoaHR0cDovL3d3dy5x
dW92YWRpc2dsb2JhbC5jb20vcmVwb3NpdG9yeTB0BggrBgEFBQcBAQRoMGYwKgYI
KwYBBQUHMAGGHmh0dHA6Ly9vY3NwLnF1b3ZhZGlzZ2xvYmFsLmNvbTA4BggrBgEF
BQcwAoYsaHR0cDovL3RydXN0LnF1b3ZhZGlzZ2xvYmFsLmNvbS9xdnJjYTJnMy5j
cnQwDgYDVR0PAQH/BAQDAgEGMCcGA1UdJQQgMB4GCCsGAQUFBwMBBggrBgEFBQcD
AgYIKwYBBQUHAwkwHwYDVR0jBBgwFoAU7edvdlq/YOxJW8ald7tyFnGbxD0wOwYD
VR0fBDQwMjAwoC6gLIYqaHR0cDovL2NybC5xdW92YWRpc2dsb2JhbC5jb20vcXZy
Y2EyZzMuY3JsMB0GA1UdDgQWBBTlhFTQkEmfOLryyeEqCMVOn6BIPzANBgkqhkiG
9w0BAQsFAAOCAgEAY/EHWbpNwCgGVQ1B7cIn530n6Rnht8ryN6E4Sis2GG09801s
eCVMoGUB1uBCWm7uqQqydjTbjLhuub7hTjSJ1J30SOK1CZbk+c1VP9DcjY46hycy
tUKQ2WbgkaY+l/tZNDKu0djc2hA5apljQCmiIzckbcHr6yRnFK7ZPjSPCAUKm20D
vORQ7hsIaomsIlqXm5BPssMcxjI48Ezgv/s8ynASI8S5P2vOnBo08sJBM/a0Kbuw
351SubTzjxG+o1SHe6lAzvIQMuSwxUca8YkiB19w5YZt+Ss2JXNc6F2jZwpr0hto
IXe+N9/x0CohYRRa+IivRGgdDQc3w2P+pffNQP/qdPuUYyMkYWiuHH/YvwXyuDxv
yGQfvKmHr1uq/qiqbK1bDSUoEq4Su8yX8YoF9TuxYraIpp9iErO5rarDO6GTNVHh
1OXAJ/ePhOWzqo3flLTlAdTcs3Mq97kKW8XWCnu/cjJJglf2zVfLAlv95p56B9If
0pXbN74qDkYEC8TdLOwryhcv8yyimh90/AvW9LpB7swkWnUUYNTep/XMX/RLpHLn
JOVtnRpn3coVfSR/0rz0XKVXeZGnKztGdIMQhWMTxvZ1UpmRAH2Ab2QnVo1fkPVy
qNSJces5Y/VKpIvLBk5Jj55fvK8ME/9ASa+LtLrIms8iYHl75cupuYZZlg8=
-----END CERTIFICATE-----

              ]]></file>
              <file Name="ff783690.0"><![CDATA[
-----BEGIN CERTIFICATE-----
MIIEdDCCA1ygAwIBAgIQRL4Mi1AAJLQR0zYq/mUK/TANBgkqhkiG9w0BAQUFADCBlzELMAkGA1UE
BhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2UgQ2l0eTEeMBwGA1UEChMVVGhl
IFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExhodHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xHzAd
BgNVBAMTFlVUTi1VU0VSRmlyc3QtSGFyZHdhcmUwHhcNOTkwNzA5MTgxMDQyWhcNMTkwNzA5MTgx
OTIyWjCBlzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2UgQ2l0
eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExhodHRwOi8vd3d3LnVz
ZXJ0cnVzdC5jb20xHzAdBgNVBAMTFlVUTi1VU0VSRmlyc3QtSGFyZHdhcmUwggEiMA0GCSqGSIb3
DQEBAQUAA4IBDwAwggEKAoIBAQCx98M4P7Sof885glFn0G2f0v9Y8+efK+wNiVSZuTiZFvfgIXlI
wrthdBKWHTxqctU8EGc6Oe0rE81m65UJM6Rsl7HoxuzBdXmcRl6Nq9Bq/bkqVRcQVLMZ8Jr28bFd
tqdt++BxF2uiiPsA3/4aMXcMmgF6sTLjKwEHOG7DpV4jvEWbe1DByTCP2+UretNb+zNAHqDVmBe8
i4fDidNdoI6yqqr2jmmIBsX6iSHzCJ1pLgkzmykNRg+MzEk0sGlRvfkGzWitZky8PqxhvQqIDsjf
Pe58BEydCl5rkdbux+0ojatNh4lz0G6k0B4WixThdkQDf2Os5M1JnMWS9KsyoUhbAgMBAAGjgbkw
gbYwCwYDVR0PBAQDAgHGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFKFyXyYbKJhDlV0HN9WF
lp1L0sNFMEQGA1UdHwQ9MDswOaA3oDWGM2h0dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9VVE4tVVNF
UkZpcnN0LUhhcmR3YXJlLmNybDAxBgNVHSUEKjAoBggrBgEFBQcDAQYIKwYBBQUHAwUGCCsGAQUF
BwMGBggrBgEFBQcDBzANBgkqhkiG9w0BAQUFAAOCAQEARxkP3nTGmZev/K0oXnWO6y1n7k57K9cM
//bey1WiCuFMVGWTYGufEpytXoMs61quwOQt9ABjHbjAbPLPSbtNk28GpgoiskliCE7/yMgUsogW
XecB5BKV5UU0s4tpvc+0hY91UZ59Ojg6FEgSxvunOxqNDYJAB+gECJChicsZUN/KHAG8HQQZexB2
lzvukJDKxA4fFm517zP4029bHpbj4HR3dHuKom4t3XbWOTCC8KucUvIqx69JXn7HaOWCgchqJ/kn
iCrVWFCVH/A7HFe7fRQ5YiuayZSSKqMiDP+JJn1fIytH1xUdqWqeUQ0qUZ6B+dQ7XnASfxAynB67
nfhmqA==
-----END CERTIFICATE-----

              ]]></file>
          </certificates>
          <clickboost><![CDATA[
1
          ]]></clickboost>
          <clickboost_data><![CDATA[
1 http://scucollege.scu.edu.au/index.php/20 test

          ]]></clickboost_data>
          <clickboost_summary_data><![CDATA[
eJzNWVlv4zYQfu+vMBbYfRFoUZePAEFQBAu0D90WXaBFnwJaGlusJVEhKTlG0f/eoXzJsexIirYtFuvo4PHNyW9GzwXI7d3oA4tKloUQWUqzLOLZ6sPo2bx6ChMertXdyB1VV6O/RqNRIROcEmud39l2wfRYhcUYomLMChsvc6bjDdsq+wOOjUR4XMPB+1worrnIqoVOt3cjr7qvD/0b/13ZNBf4nIOq71xy2IzDQkrI9DiP8wce3VNKJ/NOMJxGGN89H/S0kgAp7mDhf5C55Apeq8ppqSoWpTyzY2nzLIIXA9keFmueJ1srFhuLG6wZM7NYYmnRF/HZOjXYjt/N1sEbwKVWrSGGopDq3BP2j+wFC2NIhCRiSXZrDqhcXA/1moJmd/v9PrqBCxlL4aMXsTCk1Ak884yan6i6WhSKZ6CqoZRnSyHTSpvVvdoqDWnjqltgEld1qTM5vC4yrncvEyghqfYQy+pPgqMzjGGcUVkshYgz3d5PG1Ra7WYfpCIHOUhNBrLHbxuUg6q65NUGVsoytqqir3V2iqAcXxUnzVYO5ocpOexATjsMJUU3XE2ee9B1JzCz2yrd7TN0jIUCvS3NhWRyS5QuIszQQzpCtGCtIb+hYISkz9VLqnTMlZaVKwyJG1LGk9fI/UbkCqErkCXHsxjUug49Dm3ISIFRKDUPEzCB5vkzjwY++UFsSCTIj5jmJMtWQBj5gu781RzmTEbk+xAFzzT5Rg7dBrWC0CxrUNOJE0xdn/y8XOIM4k0C8tmoiDyyBAxgRf5gaQqyG153ULwS0F4Ks0QGmwdU+Br0k8l1T0grAscJ6Gtsbntduo0eYiVixbPXfjJpezZrdOpNlggWVezHQEOozmTmep8QBpg7151+WvIEnuBF34/zaNlJwX6XDNcSXkBd9wo8HNJJx26jjt8Nb34d3strfF57H/AufCBD6wNIPLibKADbYCDvj/fDea+3uSEbcUUgvEX1UzTOrhGIobN+DTdBJGYE0gIS8hIjuvZy0IyaSZFUNDzdvp/W4A2lXuASDSiXkQNhJ1zFRAuicmBrQJlQVKFjTEoJZtgCaYLC8Uokhin4gwr3EsYmifdl6QnbkD8LhTkL6qXFrBPGyW2MSwnRa3zeNXyQF4sztSum1JN5aPvO7KJ0uBnk8y5BfmNjd+J2q1neMFqNCFuG+hjfLLlqT1hallquOyzqKlOsFEO8XCNMrBNWQm4xVxh5lJULkVglxIZx9JVlyUKeICBMHCdBokjZD/jzpITU9yaTfVPBcOHCJAwUbAOLqt7KMYYtDPNUSLD2dEAdjNe7qF+IQtft5Q0rVr2QPzRaBi/npxfkpkfrpgbagFCaLZdjRNAa7XHGWZfnghP0oCzXoJmN3gfvTKXDWn6HtIi2HZW4n3F2QvCFqdG+Iq+pmT3olhCb6fYJsD7GVG//1IOm6IRn67tbxjuUgiEyrd6gLxJA8K/KgDrvnbuiMiR4GVbuO6jq8WB0KKVuX2QnVI0s3ZvOTizd8d9T47zRmqxaaWanduSnYznvezNT05/K+RSpJ9byPx12Jb9CKKTpzxNWYsnIFgkQPKjJQS3/ZYVfEyTwPG/q05MgK9DkUSQIWEikGIZYb4RcE5GR3zFWxEYRh16Av8kEz0+di5L6aClLCpEiF5O6YBddmObGYdd+RjClc9cn6RblwQgFkuDLQqKYhRaSs4SgifYIiIFDjuhIWNPKg6Ek9xcMr0fVe1RDBtoo2solL3GLa3poDsSOVqeuQyf+/GR1hVYvcvLbL1+G8MujTBIUlrNhbG0A1n1TymGROu8JutVIb5yADWTiap/6Rq2dS8hZVV2bQFdFGFbdSk1wLMmlWEmW/j+i3qeYiaeUPO4+wpHPJf4O2gEeiqXvp9frEYfOux1509tQNahLeEFvNe8LM74LNOo4E2duDggSs9L4BjoCngWpIhuu47NMtPsWhEcJMlNMRd3s0anlh7hNNoMVnFPiIxW6LCtoB2egt3e/2t5ZcIGOSV0SFynLCEN6LtJt4weeHv27zmhiZQw4I88FM6Up0poS8DzQsYiqxlmutmEsErGqIHZjj2+UOyWP4OLj7zDMZRYEs8mFffv0Q/8BUUGiEg==
          ]]></clickboost_summary_data>
          <clickjacking_defense><![CDATA[
0
          ]]></clickjacking_defense>
          <clicklogging><![CDATA[
1
          ]]></clicklogging>
          <connector_managers><![CDATA[
jA0EBwMCR1QUjKoNqafB0rcB3+XAPAdQaC2R/CWVEnPQT0bSkC70Ar9IVAI/BPIk
lxDdg89CQuzmTlwXOFkfS67BORQOHuq3cET8dsCoki4OMEfYibBtwZsxGM8mdJM4
N6x3j/glOOt7t6y9NlT9OUXsLHB9S9asaVhlO5RCgK7f2oInegN2gbQjqCP4R5J0
TVJBLIg6fcmNzlnuNbRkUgaolcDeuqDXEIfcegW3FcLx8VIZXVSgFwTZyJYxcmuJ
PnXoz9gaNBo=
=8OlZ

          ]]></connector_managers>
          <connectors><![CDATA[
jA0EBwMCVTgYzx3rwc7B0k4BgxtHuDGYieOQhDnxuVZSl2bUukJIOH1wct7zt1/L
h46Q7lKq5OOSf8OD7kgDKL/Wu9LNVFV/LOJD5ixIM6NGDE9G2AsjqVVSME31Eqs=
=m6QD

          ]]></connectors>
          <convert_to_lowercase_urls><![CDATA[

          ]]></convert_to_lowercase_urls>
          <cookie_domain><![CDATA[
' '
          ]]></cookie_domain>
          <coverage_config><![CDATA[

          ]]></coverage_config>
          <crawler_acces><![CDATA[
jA0EBwMC9g0ZI3vvn0bB0jUBypDwTmASwiiD0PoiRmkK2rLuHXM3Y1lA5r/pdj5Z
STrl7DD9sLOp6SEoF3LYsXaJKe++Mg==
=8xlv

          ]]></crawler_acces>
          <crawler_kerberos_config><![CDATA[
jA0EBwMCh9KSifeKaC3B0jUBtl0Z6Sno7MlimfWjTpK8GnXd1At9trPtIAO2smIR
Z9yPipb/ZslPdBC+nHYvMClotCLZcw==
=WnTC

          ]]></crawler_kerberos_config>
          <crawling_pdf_passwords><![CDATA[
jA0EBwMCmYJyfYtUOQ/B0jUBxT5h3HwYXkc69svC/l9c+BNDD30VHEQ70TBGbAND
CcuXs1LrJxian4Lt67i5d0qWiyCgIg==
=PT2d

          ]]></crawling_pdf_passwords>
          <crl Count="0">
          </crl>
          <customer_onebox_config Count="3">
              <file Name="customer-onebox.xsl"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
  <!-- The holder for calls to all customer- or partner-provided stylesheets.  Do not
    customize.
  -->
  <xsl:include href="onebox-default.xsl"/>
  <!-- the default template if no other provided -->
  <xsl:template name="holder" match="OBRES">
    <div class="oneboxResults">
      <table>
        <xsl:call-template name="onebox-default"/>
      </table>
    </div>
  </xsl:template>
</xsl:stylesheet>

              ]]></file>
              <file Name="expertsearch.xsl"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<!-- *** Expert Search Stylesheet *** -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
  <xsl:output method="html"/>
  <!--
    For checking the mode of this XSL's usage. Default is 0.
    1 - Enabled. Used during development.
    0 - Disabled. Used in production setup.
  -->
  <xsl:param name="test_mode" select="'0'" />

  <!-- *****************************************************************
                      Private variables and templates
                   PLEASE DO NOT ACCESS OUTSIDE THIS XSL

       See "Public variables and templates" section below to know what
       can be accessed outside this XSL.
       *****************************************************************  -->

  <!--
    Query param flag to detect  if current query is an expert search query.
    'true' - expert search query.
    'false' - not an expert search query.
    @private
  -->
  <xsl:variable name="is_expert_search_query_"
      select="/GSP/PARAM[@name='expertsearch']/@value" />

  <!--
    Query param flag to detect if the expert search is being accessed in
    expanded mode.
    'true' - is in expanded mode.
    @private
  -->
  <xsl:variable name="is_expanded_mode_"
      select="/GSP/PARAM[@name='expertsearchexpand']/@value" />

  <!--
    Current stylesheet in effect i.e. 'proxystylesheet='  param.
    @private
  -->
  <xsl:variable name="current_proxystylesheet_"
      select="/GSP/PARAM[@name='proxystylesheet']/@value" />

  <!--
    Number of results allowed per page. By default, it's 10. Incoming 'num'
    parameter can override the value to the desired number.
    @private
  -->
  <xsl:variable name="expert_results_per_page_">
    <xsl:choose>
      <xsl:when test="/GSP/PARAM[(@name='num') and (@value!='')]">
        <xsl:value-of select="/GSP/PARAM[@name='num']/@value"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="10"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

  <!--
    Current search query term in unescaped form.
    @private
  -->
  <xsl:variable name="current_query_unescaped_" select="/GSP/Q" />

  <!--
    Current search query term i.e. 'q=' param.
    @private
  -->
  <xsl:variable name="current_query_"
      select="encode-for-uri($current_query_unescaped_)" />

  <!--
    Original search query term i.e. 'q=' param used before navigating to the
    expanded mode. Used when returning back from the expanded mode to main
    results mode.
    @private
  -->
  <xsl:variable name="original_query_"
      select="/GSP/PARAM[@name='originalquery']/@original_value" />

  <!--
    Expert search stylesheet that initiated the expanded mode. This is used to
    go back to the original widget view results page from the expanded mode.
    @private
  -->
  <xsl:variable name="expert_search_proxystylesheet_"
      select="/GSP/PARAM[@name='expertsearchfrontend']/@value" />

  <!--
    The 'client=' query param that should be used to select frontend settings.
    This should be the value of 'proxystylesheet=' param because the expert
    search view is made accessible via the proxystylesheet. The expert search
    backend will read client= param to figure out the expert search config to
    use.
    @private
  -->
  <xsl:variable name="client_frontend_to_use_"
      select="$current_proxystylesheet_" />

  <!--
    Current collection in effect i.e. 'site=' query param.
    @private
  -->
  <xsl:variable name="current_collection_"
      select="/GSP/PARAM[@name='site']/@value" />

  <!--
    If the user is accessing the results page with JavaScript not enabled.
    'true' - if JavaScript is disabled.
    @private
  -->
  <xsl:variable name="noscript_mode_"
      select="/GSP/PARAM[@name='noscript_mode']/@value" />

  <!--
    The frontend used to present the expanded mode for the expert results.
    @private
  -->
  <xsl:variable name="expert_search_expand_mode_frontend_"
      select="/GSP/ExpertSearchConfig/ExpandedView/FrontendName" />

  <!--
    The text to be shown for detailed view link.
    @private
  -->
  <xsl:variable name="expert_search_detailed_view_text_"
      select="/GSP/ExpertSearchConfig/View/WidgetDetailedText" />

  <!--
    The text to be shown for widget header.
    @private
  -->
  <xsl:variable name="expert_search_heading_title_"
      select="/GSP/ExpertSearchConfig/View/WidgetHeaderText" />

  <!--
    Number of results that should be displayed per page in the widget view.
    @private
  -->
  <xsl:variable name="num_res_widget_view_"
      select="/GSP/ExpertSearchConfig/View/NumResultsToDisplayInWidget" />

  <!--
    Number of results that should be displayed per page in the expanded view.
    @private
  -->
  <xsl:variable name="num_res_expanded_view_"
      select="/GSP/ExpertSearchConfig/View/NumResultsToDisplayInExpandedMode" />

  <!--
    Query param flag to detect if the expert search is being accessed in
    asynchronous JavaScript mode.
    @private
  -->
  <xsl:variable name="is_expert_async_search_"
      select="/GSP/PARAM[@name='expertsearchasync']/@value"/>

  <!--
    Query param flag to detect if the expert search is secure search mode.
    @private
  -->
  <xsl:variable name="access_"
      select="/GSP/PARAM[@name='access']/@value"/>

  <!--
    Finds the given string and replaces the same with the specified string.

    Params:
      find: The string that should be searched.
      replace: The string that should be substituted.
      source: The source string on which search / replace should happen.
    Returns:
      The modified string with the requested substring replaced.
    @private
  -->
  <xsl:template name="find_and_replace_string_">
    <xsl:param name="find" />
    <xsl:param name="replace" />
    <xsl:param name="source" />
    <xsl:value-of select="replace($source, $find, $replace)" />
  </xsl:template>

  <!--
    Composes the query string used for fetching the expert search results.

    Params:
      src_prefix: The prefix that should be added to the query string.
      extra_args: Any extra query string arguments that should be added apart
          from the common arguments.
    Returns:
      A string containing the composed query string.
    @private
  -->
  <xsl:template name="compose_expert_search_query_string_">
    <xsl:param name="src_prefix" select="''" />
    <xsl:param name="extra_args" select="''" />
    <xsl:value-of select="$src_prefix" />
    <xsl:value-of select="$extra_args" />
    <xsl:if test="$extra_args">
      <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
    </xsl:if>
    <xsl:text disable-output-escaping="yes">q=</xsl:text>
    <xsl:value-of select="$current_query_" />
    <xsl:text
        disable-output-escaping="yes">&amp;expertsearch=true</xsl:text>
    <xsl:text
        disable-output-escaping="yes">&amp;proxystylesheet=</xsl:text>
    <xsl:value-of select="$current_proxystylesheet_" />
    <xsl:text
        disable-output-escaping="yes">&amp;client=</xsl:text>
    <xsl:value-of select="$client_frontend_to_use_" />
    <xsl:text
        disable-output-escaping="yes">&amp;site=</xsl:text>
    <xsl:value-of select="$current_collection_" />
    <xsl:text
        disable-output-escaping="yes">&amp;filter=0</xsl:text>
    <xsl:text
        disable-output-escaping="yes">&amp;getfields=*</xsl:text>
    <xsl:text
        disable-output-escaping="yes">&amp;num=</xsl:text>
    <xsl:value-of select="$num_res_widget_view_" />
    <xsl:text
        disable-output-escaping="yes">&amp;access=</xsl:text>
    <xsl:value-of select="$access_" />
  </xsl:template>

  <!--
    Renders expert search results using iframe in noscript mode i.e. when
    JavaScript is not enabled.

    Params:
      src_prefix: The prefix that should be added to the src URL string for the
          iframe.
    Returns:
      An iframe embedded inside noscript tag to render expert results.
    @private
  -->
  <xsl:template name="render_expert_search_results_in_noscript_mode_">
    <xsl:param name="src_prefix" select="'?'" />
    <noscript>
      <iframe width="100%" frameborder="0" height="380px;">
        <xsl:attribute name="src">
          <xsl:call-template name="compose_expert_search_query_string_">
            <xsl:with-param name="src_prefix" select="$src_prefix" />
            <xsl:with-param name="extra_args">
              <xsl:text>noscript_mode=true</xsl:text>
            </xsl:with-param>
          </xsl:call-template>
        </xsl:attribute>
      </iframe>
    </noscript>
  </xsl:template>

  <!--
    Generates link tag for pagination element for the pagination section.

    Params:
      is_link: '1' if the tag should be a hyperlink; '0' for plain text span
          tag.
      title: The title to be associated with the tag.
      display_text: The text to be displayed within link or plain text
          container.
      start_index: The starting index to be used to start query string argument.
      href_prefix: The prefix to be used in the href attribute if it's a link.
    Returns:
      The HTML markup containing list items for page numbers.
    @private
  -->
  <xsl:template name="generate_paginate_tag_">
    <xsl:param name="is_link" />
    <xsl:param name="title"/>
    <xsl:param name="display_text"/>
    <xsl:param name="start_index" />
    <xsl:param name="href_prefix" />
    <li>
      <xsl:choose>
        <xsl:when test="$is_link = '1'">
          <a>
            <xsl:attribute name="href">
              <xsl:value-of select="$href_prefix" />
              <xsl:text>&amp;start=</xsl:text>
              <xsl:value-of select="$start_index" />
            </xsl:attribute>
            <xsl:attribute name="title">
              <xsl:value-of select="$title" />
            </xsl:attribute>
            <xsl:value-of select="$display_text" />
          </a>
        </xsl:when>
        <xsl:otherwise>
          <span>
            <xsl:attribute name="title">
              <xsl:value-of select="$title" />
            </xsl:attribute>
            <xsl:value-of select="$display_text" />
          </span>
        </xsl:otherwise>
      </xsl:choose>
    </li>
  </xsl:template>

  <!--
    Generates the page numbers in the pagination section.

    Params:
      msg_*: All localized message strings. See the params documentation of
          "render_expert_search_results" template in this file for details.
      start: The starting index of the result page.
      end: The index of the last result element.
      current_results_first_index: The index of the first result for the current
          page to be displayed. 1-based starting index is assumed.
    Returns:
      The HTML markup containing list items for page numbers.
    @private
  -->
  <xsl:template name="generate_pagination_numbers_">
    <xsl:param name="msg_results_page_number_prefix" />
    <xsl:param name="href_prefix" />
    <xsl:param name="start" select="'0'"/>
    <xsl:param name="end"/>
    <xsl:param name="current_results_first_index"/>
    <xsl:variable name="page_number"
        select="($start div $expert_results_per_page_) + 1"/>
    <xsl:choose>
      <xsl:when test="
          $start &lt;
          ($current_results_first_index - (10 * $expert_results_per_page_))">
      </xsl:when>
      <xsl:when test="($current_results_first_index &gt;= $start) and
          ($current_results_first_index &lt;
              ($start + $expert_results_per_page_))">
        <xsl:call-template name="generate_paginate_tag_">
          <xsl:with-param name="is_link" select="'0'" />
          <xsl:with-param name="title">
            <xsl:value-of select="$msg_results_page_number_prefix"/>
            <xsl:text> </xsl:text>
            <xsl:value-of select="$page_number" />
          </xsl:with-param>
          <xsl:with-param name="display_text" select="$page_number" />
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="generate_paginate_tag_">
          <xsl:with-param name="is_link" select="'1'" />
          <xsl:with-param name="title">
            <xsl:value-of select="$msg_results_page_number_prefix"/>
            <xsl:text> </xsl:text>
            <xsl:value-of select="$page_number" />
          </xsl:with-param>
          <xsl:with-param name="display_text" select="$page_number" />
          <xsl:with-param name="start_index" select="$start" />
          <xsl:with-param name="href_prefix" select="$href_prefix" />
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
    <!-- Recursively iterate to display all page numbers, as required. -->
    <xsl:if test="(($start + $expert_results_per_page_) &lt; $end) and
        (($start + $expert_results_per_page_) &lt;
            ($current_results_first_index + (10 * $expert_results_per_page_)))">
      <xsl:call-template name="generate_pagination_numbers_">
        <xsl:with-param name="msg_results_page_number_prefix"
            select="$msg_results_page_number_prefix" />
        <xsl:with-param name="href_prefix" select="$href_prefix" />
        <xsl:with-param name="start"
            select="$start + $expert_results_per_page_" />
        <xsl:with-param name="end" select="$end" />
        <xsl:with-param name="current_results_first_index"
            select="$current_results_first_index" />
      </xsl:call-template>
    </xsl:if>
  </xsl:template>

  <!--
    Generates pagination section for the current results.

    Params:
      msg_*: All localized message strings. See the params documentation of
          "render_expert_search_results" template in this file for details.
      prev_link: A string containing the previous link, if available.
      next_link: A string containing the next link, if available.
      current_results_first_index: The index of the first result for the current
          page to be displayed. 1-based starting index is assumed.
      current_results_last_index: The index of the last result for the current
          page to be displayed. 1-based starting index is assumed.
      estimated_total_results: The estimated number of total results, if
          available.
    Returns:
      The initial source string with all placeholders substituted with values.
    @private
  -->
  <xsl:template name="generate_pagination_">
    <xsl:param name="msg_results_page_number_prefix" />
    <xsl:param name="msg_go_to_previous_page" />
    <xsl:param name="msg_go_to_next_page" />
    <xsl:param name="msg_previous_page_action" />
    <xsl:param name="msg_next_page_action" />
    <xsl:param name="href_prefix" />
    <xsl:param name="prev_link" />
    <xsl:param name="next_link" />
    <xsl:param name="current_results_first_index" />
    <xsl:param name="current_results_last_index" />
    <xsl:param name="estimated_total_results" />

    <!-- Check if pagination should displayed or not. -->
    <xsl:if test="$prev_link or $next_link">
      <ol class="gsa-exp-pagination">
      <!-- Show previous link, if available. -->
      <xsl:if test="$prev_link">
        <xsl:call-template name="generate_paginate_tag_">
          <xsl:with-param name="is_link" select="'1'" />
          <xsl:with-param name="title" select="$msg_go_to_previous_page" />
          <xsl:with-param name="display_text"
              select="$msg_previous_page_action" />
          <xsl:with-param name="start_index"
              select="$current_results_first_index -
                  $expert_results_per_page_ - 1" />
          <xsl:with-param name="href_prefix" select="$href_prefix" />
        </xsl:call-template>
      </xsl:if>

      <!-- Google result set navigation. -->
      <xsl:variable name="results_end_index">
        <xsl:choose>
          <xsl:when test="$next_link">
            <xsl:value-of select="$estimated_total_results" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$current_results_last_index" />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <!-- Generate page numbers in between, if estimated results number is
           available. -->
      <xsl:if test="$estimated_total_results != ''">
        <xsl:call-template name="generate_pagination_numbers_">
          <xsl:with-param name="msg_results_page_number_prefix"
              select="$msg_results_page_number_prefix" />
          <xsl:with-param name="href_prefix" select="$href_prefix" />
          <xsl:with-param name="start" select="0" />
          <xsl:with-param name="end" select="$results_end_index" />
          <xsl:with-param name="current_results_first_index"
              select="($current_results_first_index) - 1" />
        </xsl:call-template>
      </xsl:if>

      <!-- Show next link, if available. -->
      <xsl:if test="$next_link">
        <xsl:call-template name="generate_paginate_tag_">
          <xsl:with-param name="is_link" select="'1'" />
          <xsl:with-param name="title" select="$msg_go_to_next_page" />
          <xsl:with-param name="display_text" select="$msg_next_page_action" />
          <xsl:with-param name="start_index"
              select="$current_results_first_index +
                  $expert_results_per_page_ - 1" />
          <xsl:with-param name="href_prefix" select="$href_prefix" />
        </xsl:call-template>
      </xsl:if>
      </ol>
    </xsl:if>
  </xsl:template>

  <!--
    Substitutes value in the opening/closing curly {<METADATA_NAME>}
    placeholder(s) of the source string by fetching the same from the specified
    result XML sub-tree.

    Params:
      source_string: The source string containing the placeholder(s) in
          {<METADATA_NAME>} format.
      current_result: The result XML sub-tree that contains value for the
          placeholder(s).
    Returns:
      The initial source string with all placeholders substituted with values.
    @private
  -->
  <xsl:template name="substitute_value_in_placeholder_">
    <xsl:param name="source_string" />
    <xsl:param name="current_result" />
    <xsl:variable name="before_opening"
        select="substring-before($source_string, '{')" />
    <xsl:variable name="after_opening"
        select="substring-after($source_string, '{')" />
    <xsl:variable name="after_closing"
        select="substring-after($source_string, '}')" />
    <xsl:variable name="attribute_to_lookup"
        select="substring-before($after_opening, '}')" />
    <xsl:choose>
      <xsl:when test="$attribute_to_lookup = ''">
        <xsl:value-of select="$source_string" />
      </xsl:when>
      <xsl:otherwise>
        <xsl:variable name="attribute_value"
            select="$current_result/MT[@N=$attribute_to_lookup]/@V" />
        <xsl:variable name="new_source_string"
          select="concat(
              $before_opening, string-join($attribute_value, ', '), $after_closing)" />
        <xsl:call-template name="substitute_value_in_placeholder_">
          <xsl:with-param name="source_string" select="$new_source_string" />
          <xsl:with-param name="current_result" select="$current_result" />
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!--
    Generates the content markup for the specified field element in the config.

    Params:
      current_field: The current field element that should be processed to
          generate appropriate markup.
      source_string: The source string containing the placeholder(s) in
          {METADATA_NAME} format.
      current_result: The result XML sub-tree that contains value for the
          placeholder(s).
    Returns:
      The HTML markup for the specified field element. As of now, this can be
      image or text content with optional label and wrapped around with optional
      anchor element (if it's a link).
    @private
  -->
  <xsl:template name="generate_content_markup_">
    <xsl:param name="current_field" />
    <xsl:param name="source_string" />
    <xsl:param name="current_result" />

    <!-- Display label if required. -->
    <xsl:if test="$current_field/Label != ''">
      <span class="gsa-exp-label">
        <xsl:value-of select="$current_field/Label" />:
      </span>
    </xsl:if>

    <!-- Get the value substituted landing URL, if the field is a link. -->
    <xsl:variable name="landing_url">
      <xsl:if test="$current_field/LandingUrl">
        <xsl:call-template name="substitute_value_in_placeholder_">
          <xsl:with-param name="source_string"
              select="$current_field/LandingUrl" />
          <xsl:with-param name="current_result" select="$current_result" />
        </xsl:call-template>
      </xsl:if>
    </xsl:variable>

    <!-- Wrap with anchor tag if field is a link. -->
    <xsl:if test="$landing_url != ''">
      <xsl:text disable-output-escaping="yes">&lt;a href="</xsl:text>
      <xsl:value-of select="$landing_url" />
      <xsl:text>"</xsl:text>
      <xsl:if test="$current_field/Description and
          $current_field/Type != 'image'">
        <xsl:text disable-output-escaping="yes"> title="</xsl:text>
        <xsl:call-template name="substitute_value_in_placeholder_">
            <xsl:with-param name="source_string"
                select="$current_field/Description" />
            <xsl:with-param name="current_result"
                select="$current_result" />
        </xsl:call-template>
        <xsl:text>"</xsl:text>
      </xsl:if>
      <xsl:text disable-output-escaping="yes">></xsl:text>
    </xsl:if>

    <xsl:choose>
      <xsl:when test="$current_field/Type = 'image'">
        <!-- Set image attributes based on specified config. -->
        <img>
          <xsl:attribute name="src">
            <xsl:call-template name="substitute_value_in_placeholder_">
              <xsl:with-param name="source_string"
                  select="$current_field/Value" />
              <xsl:with-param name="current_result"
                  select="$current_result" />
            </xsl:call-template>
          </xsl:attribute>
          <xsl:if test="$current_field/Description">
            <xsl:attribute name="alt">
              <xsl:call-template name="substitute_value_in_placeholder_">
                <xsl:with-param name="source_string"
                    select="$current_field/Description" />
                <xsl:with-param name="current_result"
                    select="$current_result" />
              </xsl:call-template>
            </xsl:attribute>
          </xsl:if>
          <xsl:if test="$current_field/Description">
            <xsl:attribute name="title">
              <xsl:call-template name="substitute_value_in_placeholder_">
                <xsl:with-param name="source_string"
                    select="$current_field/Description" />
                <xsl:with-param name="current_result"
                    select="$current_result" />
              </xsl:call-template>
            </xsl:attribute>
          </xsl:if>
          <xsl:if test="$current_field/Width">
            <xsl:attribute name="width">
              <xsl:value-of select="$current_field/Width" />
            </xsl:attribute>
          </xsl:if>
          <xsl:if test="$current_field/Height">
            <xsl:attribute name="height">
              <xsl:value-of select="$current_field/Height" />
            </xsl:attribute>
          </xsl:if>
        </img>
      </xsl:when>
      <xsl:when test="$current_field/Type = 'text'">
        <span>
        <xsl:call-template name="substitute_value_in_placeholder_">
          <xsl:with-param name="source_string" select="$current_field/Value" />
          <xsl:with-param name="current_result" select="$current_result" />
        </xsl:call-template>
        </span>
      </xsl:when>
    </xsl:choose>

    <xsl:if test="$landing_url != ''">
      <xsl:text disable-output-escaping="yes">&lt;/a>
      </xsl:text>
    </xsl:if>
  </xsl:template>

  <!--
    Processes the specified result element containing expert information.

    Params:
      current_result: The result XML sub-tree that contains the expert
          information.
    Returns:
      The HTML markup representing a single expert information in the overall
      expert results list.
    @private
  -->
  <xsl:template name="process_expert_result_">
    <xsl:param name="current_result" />
    <!-- Determine the view mode to select the fields to be rendered. -->
    <xsl:variable name="view_type">
      <xsl:choose>
        <xsl:when test="$is_expanded_mode_ = 'true'">
          <xsl:text>detailed</xsl:text>
        </xsl:when>
        <xsl:otherwise>
          <xsl:text>widget</xsl:text>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
    <div class="g-section">
      <div class="gsa-exp-result-container">
        <table cellpadding="0" cellspacing="0">
          <tr>
          <xsl:for-each select="/GSP/ExpertSearchConfig/View/Row/Column">
            <xsl:choose>
              <xsl:when test="Field" >
                <td>
                <xsl:for-each select="Field">
                  <xsl:if test="current()/RenderMode = $view_type or
                      current()/RenderMode = 'both'">
                    <div class="gsa-exp-img-container">
                      <xsl:call-template name="generate_content_markup_">
                        <xsl:with-param name="current_field"
                            select="current()" />
                        <xsl:with-param name="source_string"
                            select="current()/Value" />
                        <xsl:with-param name="current_result"
                            select="$current_result" />
                      </xsl:call-template>
                    </div>
                  </xsl:if>
                </xsl:for-each>
                </td>
              </xsl:when>
              <xsl:otherwise>
                <td>
                <div class="gsa-exp-info-container">
                  <xsl:for-each select="current()/Row">
                    <div>
                      <!--
                        Add row specific class for customizing style for a
                        specific info row in the UI. Useful for external
                        customization.
                      -->
                      <xsl:variable name="row_position" select="position()" />
                      <xsl:attribute name="class">
                        <xsl:text>gsa-exp-info-row gsa-exp-info-row-</xsl:text>
                        <xsl:value-of select="$row_position" />
                      </xsl:attribute>
                      <xsl:for-each select="current()/Column">
                        <xsl:if test="
                            Field/RenderMode=$view_type or
                            Field/RenderMode='both'">
                          <div>
                            <!--
                              Add coloumn specific class for customizing style
                              for a specific row-rolumn in the UI. Useful for
                              external customization.
                            -->
                            <xsl:attribute name="class">
                              <xsl:text>gsa-exp-info-column-ele </xsl:text>
                              <xsl:text>gsa-exp-info-row-</xsl:text>
                              <xsl:value-of select="$row_position" />
                              <xsl:text>-col-</xsl:text>
                              <xsl:value-of select="position()" />
                            </xsl:attribute>
                            <xsl:call-template name="generate_content_markup_">
                              <xsl:with-param name="current_field"
                                  select="Field" />
                              <xsl:with-param name="source_string"
                                  select="Field/Value" />
                              <xsl:with-param name="current_result"
                                  select="$current_result" />
                            </xsl:call-template>
                          </div>
                        </xsl:if>
                      </xsl:for-each>
                    </div>
                  </xsl:for-each>
                </div>
                </td>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:for-each>
          </tr>
        </table>
      </div>
    </div>
  </xsl:template>

  <!--
    Renders the HTML markup for the expanded mode, as required.

    Params:
      href_prefix: The prefix that should be added to the query string.
      current_search_query_args: The current query string extracted from the
          absolute incoming search request params.
      msg_*: All localized message strings. See the params documentation of
          "render_expert_search_results" template in this file for details.
    Returns:
      The HTML markup containing expand link.
    @private
  -->
  <xsl:template name="render_expand_link_">
    <xsl:param name="href_prefix" select="'?'" />
    <xsl:param name="current_search_query_args" select="''" />
    <xsl:param name="msg_expert_search_switch_to_expanded_mode" />
    <!-- Display expand link if expanded mode is configured. -->
    <xsl:if test="count(/GSP/RES/R) > 0 and not($is_expanded_mode_) and
        $expert_search_expand_mode_frontend_ != ''">
      <xsl:variable name="expand_href_prefix">
        <xsl:call-template name="find_and_replace_string_">
          <xsl:with-param name="find">
            <xsl:text>proxystylesheet=</xsl:text>
            <xsl:value-of select="$current_proxystylesheet_" />
          </xsl:with-param>
          <xsl:with-param name="replace">
            <xsl:text>proxystylesheet=</xsl:text>
            <xsl:value-of select="$expert_search_expand_mode_frontend_" />
          </xsl:with-param>
          <xsl:with-param name="source" select="$current_search_query_args" />
        </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="existing_num_res"
          select="/GSP/PARAM[@name='num']/@value" />
      <xsl:variable name="expand_href_prefix_2">
        <xsl:choose>
          <xsl:when test="not($existing_num_res)">
            <xsl:value-of select="$expand_href_prefix" />
            <xsl:text disable-output-escaping="yes">&amp;num=</xsl:text>
            <xsl:value-of select="$num_res_expanded_view_" />
          </xsl:when>
          <xsl:otherwise>
            <xsl:call-template name="find_and_replace_string_">
              <xsl:with-param name="find">
                <xsl:text>num=</xsl:text>
                <xsl:value-of select="$existing_num_res" />
              </xsl:with-param>
              <xsl:with-param name="replace">
                <xsl:text>num=</xsl:text>
                <xsl:value-of select="$num_res_expanded_view_" />
              </xsl:with-param>
              <xsl:with-param name="source" select="$expand_href_prefix" />
            </xsl:call-template>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:variable name="expand_href_prefix_3">
        <xsl:call-template name="find_and_replace_string_">
          <xsl:with-param name="find">
            <xsl:text>client=</xsl:text>
            <xsl:value-of select="$client_frontend_to_use_" />
          </xsl:with-param>
          <xsl:with-param name="replace">
            <xsl:text>client=</xsl:text>
            <xsl:value-of select="$expert_search_expand_mode_frontend_" />
          </xsl:with-param>
          <xsl:with-param name="source" select="$expand_href_prefix_2" />
        </xsl:call-template>
      </xsl:variable>
      <a class="gsa-exp-expand-link">
        <xsl:attribute name="href">
          <xsl:value-of select="$href_prefix" />
          <xsl:value-of select="$expand_href_prefix_3" />
          <xsl:text
            disable-output-escaping="yes">&amp;expertsearchexpand=</xsl:text>
          <xsl:text>true</xsl:text>
          <xsl:text
            disable-output-escaping="yes">&amp;expertsearchfrontend=</xsl:text>
          <xsl:value-of select="$current_proxystylesheet_" />
          <xsl:text
            disable-output-escaping="yes">&amp;originalquery=</xsl:text>
          <xsl:value-of select="$current_query_" />
        </xsl:attribute>
        <xsl:attribute name="title">
          <xsl:value-of select="$msg_expert_search_switch_to_expanded_mode" />
        </xsl:attribute>
        <xsl:attribute name="target">
          <xsl:choose>
            <xsl:when test="$noscript_mode_ = 'true'">
              <xsl:text>_parent</xsl:text>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text>_self</xsl:text>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:attribute>
        <xsl:text>[</xsl:text>
        <xsl:value-of select="$expert_search_detailed_view_text_" />
        <xsl:text>]</xsl:text>
      </a>
    </xsl:if>
  </xsl:template>

  <!--
    Renders the HTML markup for the expert search results section.

    Params:
      href_prefix: The prefix that should be added to the query string.
      current_search_query_args: The current query string extracted from the
          absolute incoming search request params.
      msg_*: All localized message strings. See the params documentation of
          "render_expert_search_results" template in this file for details.
    Returns:
      The HTML markup containing expert results section.
    @private
  -->
  <xsl:template name="render_expert_search_results_">
    <xsl:param name="href_prefix" select="'?'" />
    <xsl:param name="current_search_query_args" select="''" />
    <xsl:param name="msg_expert_search_no_experts_found" />
    <xsl:param name="msg_expert_search_switch_to_expanded_mode" />
    <xsl:param name="msg_results_page_number_prefix" />
    <xsl:param name="msg_go_to_previous_page" />
    <xsl:param name="msg_go_to_next_page" />
    <xsl:param name="msg_previous_page_action" />
    <xsl:param name="msg_next_page_action" />
    <xsl:if test="$is_expert_search_configured = '1'">
      <div class="g-section gsa-exp-container">
        <div class="gsa-exp-header">
          <div class="g-section">
            <div>
              <xsl:if test="not($is_expanded_mode_)">
              <h2>
                <xsl:value-of select="$expert_search_heading_title_" />
              </h2>
              </xsl:if>
              <xsl:call-template name="render_expand_link_">
                <xsl:with-param name="href_prefix" select="$href_prefix" />
                <xsl:with-param name="current_search_query_args"
                    select="$current_search_query_args" />
                <xsl:with-param name="msg_expert_search_switch_to_expanded_mode"
                    select="$msg_expert_search_switch_to_expanded_mode" />
              </xsl:call-template>
            </div>
          </div>
        </div>
        <!-- Display appropriate view based on presence/absence of results. -->
        <xsl:choose>
          <xsl:when test="count(/GSP/RES/R) > 0">
            <ol class="gsa-exp-results">
              <xsl:for-each select="/GSP/RES/R">
               <li tabindex="0">
                <xsl:call-template name="process_expert_result_">
                  <xsl:with-param name="current_result" select="current()" />
                </xsl:call-template>
              </li>
              </xsl:for-each>
            </ol>
            <!--
              Don't display pagination in expanded mode as we piggyback on
              existing organic results pagination.
            -->
            <xsl:if test="not($is_expanded_mode_)">
              <xsl:call-template name="generate_pagination_">
                <xsl:with-param name="msg_results_page_number_prefix"
                    select="$msg_results_page_number_prefix" />
                <xsl:with-param name="msg_go_to_previous_page"
                    select="$msg_go_to_previous_page" />
                <xsl:with-param name="msg_go_to_next_page"
                    select="$msg_go_to_next_page" />
                <xsl:with-param name="msg_previous_page_action"
                    select="$msg_previous_page_action" />
                <xsl:with-param name="msg_next_page_action"
                    select="$msg_next_page_action" />
                <xsl:with-param name="href_prefix" >
                  <xsl:call-template name="compose_expert_search_query_string_">
                    <xsl:with-param name="src_prefix" select="$href_prefix" />
                  </xsl:call-template>
                </xsl:with-param>
                <xsl:with-param name="prev_link" select="/GSP/RES/NB/PU" />
                <xsl:with-param name="next_link" select="/GSP/RES/NB/NU" />
                <xsl:with-param name="current_results_first_index"
                    select="/GSP/RES/@SN" />
                <xsl:with-param name="current_results_last_index"
                    select="/GSP/RES/@EN" />
                <xsl:with-param name="estimated_total_results"
                    select="/GSP/RES/M" />
              </xsl:call-template>
            </xsl:if>
          </xsl:when>
          <xsl:otherwise>
            <span class="gsa-exp-no-results">
              <xsl:value-of select="$msg_expert_search_no_experts_found" />
            </span>
          </xsl:otherwise>
        </xsl:choose>
      </div>
    </xsl:if>
  </xsl:template>

  <!-- *********** END OF PRIVATE VARIABLES AND TEMPLATES  *************  -->

  <!-- *****************************************************************
                      Public variables and templates
                     CAN BE ACCESSED OUTSIDE THIS XSL
       *****************************************************************  -->

  <!--
    Checks if expert search is configured or not.
    1 - configured.
    0 - not configured.
   -->
  <xsl:variable name="is_expert_search_configured">
    <xsl:if test="/GSP/ExpertSearchConfig">1</xsl:if>
  </xsl:variable>

  <!--
    Checks if expert search widget view should be displayed or not in current
    context.
    1 - should be displayed.
    0 - should not be displayed.
   -->
  <xsl:variable name="show_expert_search_widget_view">
    <xsl:if test="$is_expert_search_configured = '1' and
                  not($is_expanded_mode_)">1</xsl:if>
  </xsl:variable>

  <!--
    Checks if expert search widget view results should be displayed or not.
    1 - should be displayed.
    0 - should not be displayed.
   -->
  <xsl:variable name="show_expert_search_widget_view_results">
    <xsl:if test="$is_expert_search_configured = '1' and
        $is_expert_search_query_ = 'true' and
        not($is_expanded_mode_)">1</xsl:if>
  </xsl:variable>

  <!--
    Checks if expert search results should be displayed or not in expanded mode.
    1 - should be displayed.
    0 - should not be displayed.
   -->
  <xsl:variable name="show_expert_search_expanded_results">
    <xsl:if test="$is_expert_search_configured = '1' and
        $is_expert_search_query_ = 'true' and
        $expert_search_expand_mode_frontend_ = $current_proxystylesheet_ and
        $is_expanded_mode_ = 'true'">1</xsl:if>
  </xsl:variable>

  <!--
    Includes the CSS file containing expert search styles.

    Params:
      doc_dir: The directionality of the document i.e. LTR or RTL.
      src_prefix: The prefix that should be added to the CSS source URI.
    Returns:
      The link tag including the appropriate CSS file based on the document
      directionality.
  -->
  <xsl:template name="include_expert_search_css">
    <xsl:param name="doc_dir" select="'ltr'" />
    <xsl:param name="src_prefix" select="''" />
    <xsl:if test="$is_expert_search_configured = '1'">
      <xsl:choose>
        <xsl:when test="$doc_dir = 'rtl'">
          <link rel="stylesheet"
              href="{$src_prefix}/expertsearchdesktop_rtl.css"
              type="text/css" />
        </xsl:when>
        <xsl:otherwise>
          <link rel="stylesheet" href="{$src_prefix}/expertsearchdesktop.css"
              type="text/css" />
        </xsl:otherwise>
      </xsl:choose>
    </xsl:if>
  </xsl:template>

  <!--
    Includes the JavaScript file containing expert search component for enhanced
    functionality when JavaScript is enabled in user's browser.

    Params:
      src_prefix: The prefix that should be added to the JS source URI.
    Returns:
      The script tag including the JavaScript file.
  -->
  <xsl:template name="include_expert_search_js">
    <xsl:param name="src_prefix" select="''" />
    <!--  Include only for widget view -->
    <xsl:if test="$show_expert_search_widget_view = '1'">
      <script src="{$src_prefix}/expertsearchdesktop_compiled.js"
          type="text/javascript">
      </script>
    </xsl:if>
  </xsl:template>

  <!--
    Includes the JavaScript block for initializing the expert search JavaScript
    component for enhanced behavior when JavaScript is enabled in user's
    browser.

    Note: this should only be called after the JavaSript file has been
    included via "include_expert_search_js" template call.

    Params:
      dom_container: The DOM element that should hold the expert search section.
      script_import: '1' if initialization code should be called via an explicit
          <script> import.
    Returns:
      The script block with the initializing logic.
  -->
  <xsl:template name="include_expert_search_js_init">
    <xsl:param name="dom_container" />
    <xsl:param name="script_import" select="'1'" />
    <!--  Include only for widget view -->
    <xsl:if test="$show_expert_search_widget_view = '1'">
      <xsl:if test="$script_import = '1'">
        <xsl:text
          disable-output-escaping="yes"
          >&lt;script type="text/javascript"&gt;</xsl:text>
      </xsl:if>
      gsa.ui.expertsearch.init(
          '<xsl:call-template name="compose_expert_search_query_string_" />',
          '<xsl:value-of select="$dom_container" />');
      <xsl:if test="$script_import = '1'">
        <xsl:text
          disable-output-escaping="yes">&lt;/script&gt;</xsl:text>
      </xsl:if>
    </xsl:if>
  </xsl:template>

  <!--
    Includes the input field for expert search history management.
  -->
  <xsl:template name="include_expert_search_history_input">
    <xsl:if test="$show_expert_search_widget_view = '1'">
      <input id="eshistorytoken" type="hidden" />
    </xsl:if>
  </xsl:template>

  <!--
    Generates the 'back to main results' link used in the expanded mode to go
    back to the widget view results page.

    Params:
      src_prefix: The prefix that should be added to the query string.
      msg_back_to_main_results_action: Localized message string to be displayed
          for going back to the main results page containing widget view.
    Returns:
      The HTML markup containing link to go back to main results containing the
      widget view.
  -->
  <xsl:template name="back_to_widget_view_frontend_link">
    <xsl:param name="src_prefix" select="'/search?'" />
    <xsl:param name="msg_back_to_main_results_action"
        select="'Back to main results'" />
    <xsl:variable name="filtered_url">
      <xsl:for-each
          select="/GSP/PARAM[(@name != 'start') and
                             (@name != 'swrnum') and
                             (@name != 'expertsearchasync') and
                             (@name != 'proxystylesheet') and
                             (@name != 'client') and
                             (@name != 'getfields') and
                             (@name != 'dnavs') and
                             (@name != 'filter') and
                             (@name != 'num') and
                             (@name != 'originalquery') and
                             (@name != 'emmain') and
                             (@name != 'emsingleres') and
                             (@name != 'emdstyle') and
                             (@name != 'expertsearchexpand') and
                             (@name != 'expertsearch') and
                             (@name != 'expertsearchfrontend') and
                             (@name != 'q') and
                             (@name != 'noscript_mode') and
                             (@name != 'epoch') and
                             not(starts-with(@name, 'metabased_'))]">
        <xsl:value-of select="@name"/><xsl:text>=</xsl:text>
        <xsl:value-of select="@original_value"/>
        <xsl:if test="position() != last()">
          <xsl:text disable-output-escaping="yes">&amp;</xsl:text>
        </xsl:if>
      </xsl:for-each>
    </xsl:variable>
    <xsl:variable name="back_to_link_href">
      <xsl:value-of select="$src_prefix" />
      <xsl:value-of select="$filtered_url" />
      <xsl:text disable-output-escaping="yes">&amp;q=</xsl:text>
      <xsl:value-of select="$original_query_" />
      <xsl:text disable-output-escaping="yes">&amp;proxystylesheet=</xsl:text>
      <xsl:value-of select="$expert_search_proxystylesheet_" />
      <xsl:text disable-output-escaping="yes">&amp;client=</xsl:text>
      <xsl:value-of select="$expert_search_proxystylesheet_" />
    </xsl:variable>
    <xsl:if test="$expert_search_proxystylesheet_ != ''">
      <a>
        <xsl:attribute name="href" select="$back_to_link_href" />
        <xsl:text>&lt;&lt; </xsl:text>
        <xsl:value-of select="$msg_back_to_main_results_action" />
      </a>
    </xsl:if>
  </xsl:template>

  <!--
    Renders the HTML markup for the expert search results section.

    Params:
      src_prefix: The prefix that should be added to the query string.
      is_noscript_mode: Set to 'true' if markup related to the noscript scenario
          should be returned.
      current_search_query_args: The current query string extracted from the
          absolute incoming search request params.
      msg_expert_search_no_experts_found: Localized message string to be
          displayed when no result(s) are present.
      msg_expert_search_switch_to_expanded_mode: Localized message string to be
          displayed for switching to the expanded mode.
      msg_results_page_number_prefix: Localized message string to be displayed
          as prefix for the search results page number.
      msg_go_to_previous_page: Localized message string to be displayed for
          going to previous results page help text.
      msg_go_to_previous_page: Localized message string to be displayed for
          going to next results page help text.
      msg_previous_page_action: Localized message string to be displayed for the
          previous page action link.
      msg_next_page_action: Localized message string to be displayed for the
          next page action link.
    Returns:
      The HTML markup containing expert results section.
  -->
  <xsl:template name="render_expert_search_results">
    <xsl:param name="src_prefix" select="'?'" />
    <xsl:param name="is_noscript_mode" select="'false'" />
    <xsl:param name="current_search_query_args" select="''" />
    <xsl:param name="msg_expert_search_no_experts_found"
        select="'No expert(s) found.'" />
    <xsl:param name="msg_expert_search_switch_to_expanded_mode"
        select="'Switch to the expert search results expanded mode'" />
    <xsl:param name="msg_results_page_number_prefix" select="'Page'" />
    <xsl:param name="msg_go_to_previous_page"
        select="'Go to the previous results page'" />
    <xsl:param name="msg_go_to_next_page"
        select="'Go to the next results page'" />
    <xsl:param name="msg_previous_page_action" select="'Prev'" />
    <xsl:param name="msg_next_page_action" select="'Next'" />
    <xsl:choose>
      <!-- Return iframe to handle noscript scenario. -->
      <xsl:when test="$is_noscript_mode = 'true'">
        <xsl:call-template
            name="render_expert_search_results_in_noscript_mode_">
          <xsl:with-param name="src_prefix" select="$src_prefix" />
        </xsl:call-template>
      </xsl:when>
      <!--
        Return full HTML document when results are not requested through the
        JavaScript component and it's not expanded mode. This happens in
        the noscript mode or when directly opening the widget view in browser
        without JavaScript component requesting the same.
      -->
      <xsl:when test="(not($is_expert_async_search_) and
          not($is_expanded_mode_)) or $noscript_mode_ = 'true'">
        <xsl:text disable-output-escaping="yes">&lt;</xsl:text>
        <xsl:text disable-output-escaping="yes">!DOCTYPE html</xsl:text>
        <xsl:text disable-output-escaping="yes">></xsl:text>
        <html>
          <head>
            <xsl:call-template name="include_expert_search_css" />
          </head>
          <body>
            <div id="exp-results-container"></div>
            <xsl:call-template name="include_expert_search_js" />
            <xsl:call-template name="include_expert_search_js_init">
              <xsl:with-param name="dom_container"
                  select="'exp-results-container'" />
            </xsl:call-template>
            <noscript>
              <xsl:call-template name="render_expert_search_results_">
                <xsl:with-param name="href_prefix" select="$src_prefix" />
                <xsl:with-param name="current_search_query_args"
                    select="$current_search_query_args" />
                <xsl:with-param name="msg_expert_search_no_experts_found"
                    select="$msg_expert_search_no_experts_found" />
                <xsl:with-param name="msg_expert_search_switch_to_expanded_mode"
                    select="$msg_expert_search_switch_to_expanded_mode" />
                <xsl:with-param name="msg_results_page_number_prefix"
                    select="$msg_results_page_number_prefix" />
                <xsl:with-param name="msg_go_to_previous_page"
                    select="$msg_go_to_previous_page" />
                <xsl:with-param name="msg_go_to_next_page"
                    select="$msg_go_to_next_page" />
                <xsl:with-param name="msg_previous_page_action"
                    select="$msg_previous_page_action" />
                <xsl:with-param name="msg_next_page_action"
                    select="$msg_next_page_action" />
              </xsl:call-template>
            </noscript>
          </body>
        </html>
      </xsl:when>
      <!--
        If the request is asynchronous via the JavaScript component then only
        return the results section markup.
      -->
      <xsl:otherwise>
        <xsl:call-template name="render_expert_search_results_">
          <xsl:with-param name="href_prefix" select="$src_prefix" />
          <xsl:with-param name="current_search_query_args"
              select="$current_search_query_args" />
          <xsl:with-param name="msg_expert_search_no_experts_found"
              select="$msg_expert_search_no_experts_found" />
          <xsl:with-param name="msg_expert_search_switch_to_expanded_mode"
              select="$msg_expert_search_switch_to_expanded_mode" />
          <xsl:with-param name="msg_results_page_number_prefix"
              select="$msg_results_page_number_prefix" />
          <xsl:with-param name="msg_go_to_previous_page"
              select="$msg_go_to_previous_page" />
          <xsl:with-param name="msg_go_to_next_page"
              select="$msg_go_to_next_page" />
          <xsl:with-param name="msg_previous_page_action"
              select="$msg_previous_page_action" />
          <xsl:with-param name="msg_next_page_action"
              select="$msg_next_page_action" />
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- ************ END OF PUBLIC VARIABLES AND TEMPLATES  *************  -->

  <!--
    Matches the root element and calls the expert search template if test_mode
    is enabled. This is mainly used during development.
  -->
  <xsl:template match="/">
    <xsl:if test="$test_mode = '1'">
    <xsl:choose>
      <xsl:when test="$is_expert_search_configured = '1'">
        <xsl:call-template name="render_expert_search_results" />
      </xsl:when>
    </xsl:choose>
    </xsl:if>
    <xsl:if test="$test_mode = '0'">
      <xsl:apply-templates />
    </xsl:if>
  </xsl:template>
</xsl:stylesheet>

              ]]></file>
              <file Name="onebox-default.xsl"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
  <!--  This is the default stylesheet for OneBox Module results.   -->
  <xsl:template name="onebox-default">
    <xsl:variable name="db_url_protocol">googledb://</xsl:variable>
    <xsl:variable name="smb_url_protocol">smb://</xsl:variable>
    <xsl:variable name="nfs_url_protocol">nfs://</xsl:variable>
    <xsl:variable name="unc_url_protocol">unc://</xsl:variable>
    <a ctype='onebox'>
      <xsl:attribute name="href">
        <xsl:value-of select="title/urlLink"/>
      </xsl:attribute>
      <b>
        <xsl:value-of select="title/urlText"/>
      </b>
    </a>
    <tr> &#10;
      <!--  &#10; is a linefeed. It's just for readability of the HTML output
        (otherwise, everything is on one line!)
      -->
      <td colspan="2"> &#10;
        <!-- output the image for this onebox, if any -->
        <!-- NOTE: test for existence, don't output if none? -->
        <xsl:if test="IMAGE_SOURCE">
          <img>
            <xsl:attribute name="src">
              <xsl:value-of select="IMAGE_SOURCE"/>
            </xsl:attribute>
          </img>
        </xsl:if>
      </td> &#10; </tr> &#10; <xsl:for-each
      select="MODULE_RESULT[position()&lt;=3]">
      <tr> &#10; <font size="-1">
          <xsl:if test="U">
            <xsl:variable name="protocol" select="substring-before(U, '://')"/>
            <td>
              <a ctype='onebox'>
                <xsl:attribute name="href">
                  <xsl:choose>
                    <xsl:when test="starts-with(U, $db_url_protocol)">
                      <xsl:value-of disable-output-escaping="yes"
                        select="concat('db/', substring-after(U,'://'))"/>
                    </xsl:when>
                    <xsl:when test="$protocol='smb' or $protocol='nfs' or $protocol='unc'">
                      <xsl:value-of disable-output-escaping="yes"
                        select="concat($protocol,'/',
                        substring-after(U,'://'))"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of disable-output-escaping="yes" select="U"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:attribute>
                <xsl:choose>
                  <xsl:when test="Title">
                    <xsl:value-of select="Title"/>
                  </xsl:when>
                  <xsl:when test="$protocol='smb' or $protocol='nfs' or $protocol='unc'">
                    <xsl:value-of disable-output-escaping="yes"
                      select="concat($protocol,'/',
                      substring-after(U,'://'))"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:choose>
                      <xsl:when test="starts-with(U, $db_url_protocol)">
                        <xsl:value-of disable-output-escaping="yes"
                          select="concat('db/', substring-after(U,'://'))"/>
                      </xsl:when>
                      <xsl:when test="$protocol='smb' or $protocol='nfs' or $protocol='unc'">
                        <xsl:value-of disable-output-escaping="yes"
                          select="concat($protocol,'/',
                          substring-after(U,'://'))"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of disable-output-escaping="yes" select="U"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:otherwise>
                </xsl:choose>
              </a>
            </td>
          </xsl:if>
          <xsl:for-each select="Field">
            <td>
              <xsl:if test="@name">
                <b><xsl:value-of select="@name"/>: </b>
              </xsl:if>
              <xsl:value-of select="."/>
            </td>
          </xsl:for-each>
        </font>
      </tr> &#10; </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>

              ]]></file>
          </customer_onebox_config>
          <daily_status><![CDATA[
1
          ]]></daily_status>
          <date_patterns><![CDATA[
:*/,last_modified,,,,

          ]]></date_patterns>
          <default_search_url><![CDATA[
'https://site-search.dev.scu.edu.au/search?site=scu&client=scu_frontend&output=xml_no_dtd&proxystylesheet=scu_frontend'
          ]]></default_search_url>
          <delegated_authz_enabled><![CDATA[
0
          ]]></delegated_authz_enabled>
          <deny_rules_config><![CDATA[

          ]]></deny_rules_config>
          <disable_infinitespace_check><![CDATA[
1
          ]]></disable_infinitespace_check>
          <disable_legacy_authn><![CDATA[
0
          ]]></disable_legacy_authn>
          <dns_override><![CDATA[

          ]]></dns_override>
          <do_entity_extraction><![CDATA[
1
          ]]></do_entity_extraction>
          <documill_disk_size_buffer_percentage><![CDATA[
5
          ]]></documill_disk_size_buffer_percentage>
          <documill_disk_size_limit><![CDATA[
500
          ]]></documill_disk_size_limit>
          <documill_max_pages><![CDATA[
5
          ]]></documill_max_pages>
          <documill_num_threads><![CDATA[
3
          ]]></documill_num_threads>
          <documill_resolution><![CDATA[
'LOW'
          ]]></documill_resolution>
          <dup_hosts><![CDATA[

          ]]></dup_hosts>
          <enable_certificate_checking_in_ac><![CDATA[
1
          ]]></enable_certificate_checking_in_ac>
          <enable_check_suggests_exist_in_index><![CDATA[
1
          ]]></enable_check_suggests_exist_in_index>
          <enable_context_syns_for_one_word_queries><![CDATA[
0
          ]]></enable_context_syns_for_one_word_queries>
          <enable_default_truststore><![CDATA[
1
          ]]></enable_default_truststore>
          <enable_diacritical_eq><![CDATA[
0
          ]]></enable_diacritical_eq>
          <enable_diacrititcs_expansion_in_meta_tag_values><![CDATA[
0
          ]]></enable_diacrititcs_expansion_in_meta_tag_values>
          <enable_dirty_words><![CDATA[
0
          ]]></enable_dirty_words>
          <enable_documill><![CDATA[
0
          ]]></enable_documill>
          <enable_infinite_space_detection><![CDATA[
0
          ]]></enable_infinite_space_detection>
          <enable_kerberos_crawling><![CDATA[
0
          ]]></enable_kerberos_crawling>
          <enable_late_binding_acl><![CDATA[
0
          ]]></enable_late_binding_acl>
          <enable_log_manager><![CDATA[
1
          ]]></enable_log_manager>
          <enable_partialfields_expansion><![CDATA[
0
          ]]></enable_partialfields_expansion>
          <enable_phrase_suggest><![CDATA[
0
          ]]></enable_phrase_suggest>
          <enable_query_log_suggest><![CDATA[
1
          ]]></enable_query_log_suggest>
          <enable_secure_search_api><![CDATA[
0
          ]]></enable_secure_search_api>
          <enable_snmp><![CDATA[
1
          ]]></enable_snmp>
          <enable_sslv3><![CDATA[
0
          ]]></enable_sslv3>
          <enable_uar_suggest><![CDATA[
1
          ]]></enable_uar_suggest>
          <enc_lang_from_http_headers><![CDATA[
0
          ]]></enc_lang_from_http_headers>
          <enc_lang_from_meta><![CDATA[
0
          ]]></enc_lang_from_meta>
          <ent_enable_feedergate_client_certs><![CDATA[
0
          ]]></ent_enable_feedergate_client_certs>
          <ent_enable_feedergate_http><![CDATA[
1
          ]]></ent_enable_feedergate_http>
          <enterprise_crowding_config_file><![CDATA[

          ]]></enterprise_crowding_config_file>
          <entity_definition><![CDATA[
entities {
  entity_name: "gsaentity_Country"
  register: true
  entity_file {
    file_name: "ee_countries.txt"
    case_sensitive: true
    num_terms: 196
  }
}
entities {
  entity_name: "gsaentity_City"
  register: true
  entity_file {
    file_name: "ee_cities.txt"
    case_sensitive: true
    num_terms: 417
  }
}
entities {
  entity_name: "gsaentity_Date"
  register: true
  entity_file {
    file_name: "ee_dates.xml"
    case_sensitive: true
    num_terms: 1
  }
}
entities {
  entity_name: "gsaentity_School"
  register: true
  entity_file {
    file_name: "ee_schools.xml"
    case_sensitive: false
    num_terms: 8
    segment: URL_SEGMENT
  }
}
entities {
  entity_name: "gsaentity_Document"
  register: true
  entity_file {
    file_name: "ee_filetype.xml"
    case_sensitive: false
    num_terms: 14
    segment: URL_SEGMENT
  }
}
entities {
  entity_name: "gsaentity_Services"
  register: true
  entity_file {
    file_name: "ee_services.xml"
    case_sensitive: false
    num_terms: 5
    segment: URL_SEGMENT
  }
}
entities {
  entity_name: "gsaentity_Activities"
  register: true
  entity_file {
    file_name: "ee_activities.txt"
    case_sensitive: true
    num_terms: 7
    segment: CONTENT_SEGMENT
  }
}
entities {
  entity_name: "gsaentity_Support"
  register: true
  entity_file {
    file_name: "ee_support (2).txt"
    case_sensitive: true
    num_terms: 8
    segment: CONTENT_SEGMENT
  }
}
entities {
  entity_name: "gsaentity_Category"
  register: true
  entity_file {
    file_name: "ee_category.xml"
    case_sensitive: false
    num_terms: 6
    segment: ALL_SEGMENTS
  }
}

          ]]></entity_definition>
          <entity_dictionaries Count="9">
              <file Name="ee_countries.txt"><![CDATA[
eJxNVV16qzgMffcq2MAsoknTtM3PzZS03zd9E6CCGmNTYyeXrH6OTHJnXiRZlmX5HCEevtqOnIyRnHmwFUyCbjmodo0PQXXrraoobaKCXFMsKFSpgS+0DLdTq+d8OI0xkL1bqq8cKpJv3LCgjnoaVQcSXbvWUsNjZzQjNR57bCmkrFtJvWq5MpTTA13SShfeyhmpF37EnbmiZw5Xbv1Za1n4OF5IjUBXsVDJsZhFsi1pRYsUTjkuhZ7MbiLXU9BVco2YJfWVbxAGg4P3DoajRtcDFx8cGjZLvBqvLB6+gtTkijceUmWlNsuOGgixrBJ3LL31faXZfO8D3rf0gBMSkBdvOGyWwVPUgFRBTIM+fnnluvsv6yP3vg6Iqv/4Cv9VzKkeWcs/mcdvqXyKYh59L04z343/1beiMRZHQSlmVScADt1OQzQrW5Rkz7PnJ1H0QMoW6ySOyayCxKB6jF5ZXsVO/ADjSb4FwllwYJ4CuZrNmiqAtqb87DX70GYNrN1k1p0Ssw7MGhk4I7vGfdyTVSvfN6u/FjKOlLCa9NAzCV737F2TAproOTnQOZmXmvPtL05Jg/SOR7VQjYofiFvEGIiteYlkcezswwQIAYh5RVcqYK804MyrDw3Uhq506vKXsWE3kdlIkAokmL0PsSs2XhEpAfndvsl0QaFmM4V2uubjWwLvW4raslvGRwZ4tjz62HmzlSp/bNCTSvAe2Y2R0e1biV3Kn+Q2/WZ0ZQqt2VHNTSZhB+haGmv07g7YXSSracxbtpEzj2pkd1RfGDuytngZFQ3dS6CV5lRqCjpvx7+l9mYndbjhuPO28WfVjnRHm85mv0Ol3Ab1BV/nvauy/pPY7KkX5X+PzMnseSALGTsO8+V7vhSfTJmXPbAPhNkCC6NnlnrWhwtN5hcaxxzoNE+pA84kSAfOoAZMJM11a5zDnGgyB8a1B3yIMgzYGc3B57sO4C61KOZvigDuzfcZgLc04q2ueOKG9UMDQ28YIejNEoMqFhuJccyDZs9nGW/ebarlHvEh6H1ojcEzi7m389Ul9V7DXAEOxHmYvjj6nnPwAa5aBoY3NVI8BFLcSoUWZZYYnnk51R1bq9mEMZWLLYMfLPARDOg7U1qQdNJQGHkUlzp6vPvDd4m3Wrm37Dy6bosyaceXgw7lMkixJXfC3uxFawBs3HDRaaoglhfAhJ2LxOtMqCknZexI33Lj6UjumqE9djSfOnpMqyPaBz6klIaaDMDRV6Q7Cf8hjcd05ikr/aXMydKZbDLvbabk/aR/DzbvTiI3GbFi1Qt4Azw35wbANL6/L8s4b4aUu+P9WvGtzg9ymD4JOuZRuZQ4mQ+gf02YGuZDOOL15h9GMeZzHmqf0ldUXdj8C/oUjsY=
              ]]></file>
              <file Name="ee_cities.txt"><![CDATA[
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
              ]]></file>
              <file Name="ee_dates.xml"><![CDATA[
eJyVUcFOwzAUu/crzE6ttCxt4cJUWiHxCdyqHkKTjUhNMiUZY2L8O6+FqRNCCHKy/fwcK6maVzPgRfmgnb1bFKt80dRJpW2IwvYqXOA6ASorjKrxIKJCxScyqleM4fFZYeOGwR203WInYlTeonc2aEnxkLQTyOHNOJIQJEluDD/SgbAShEkZ6Qr3fdyLYTgiUuxRCY/J1guLJ0WpZucChbgN4sEtyeWVgvOUv/eQeqtjYGzq9tWkRrpu0madN23BbrtTW5TdJ7pu86LLWHqeFMTLLjuR/5vELqRpP5/3Mzaxt3J5805Pc771Hw34Hxrw3xrwnxtUfP7BGdPPJh8TeJsy
              ]]></file>
              <file Name="ee_schools.xml"><![CDATA[
eJzFlFFrwjAQgN8F/0Nw4IOQZgOfZlfZRHBjb92eJdajZrQXySXqz19sG3WwrT5M14fC9e4L312PxONdWbANGFIaH3p30W1vnHQ7sUKyEjOghHU7jB3iOvQfUJaQTJcuk9aTsajikFxLa8FgsrJ2fS9ENBAQKqNBLEI6lJPVBuYGctjNtZlXR+1fsfguU/mIg9BXvVO7dPLOJrooPP27H2Uuq+tO7S4r92gssb4s1yOW6kzJgqWZgv3EW2cpPcqpgjg1kLjiXJ8cKQQK+m/aGUVlq/aiwbitgWsqT3GjjMYS0PZvhsNRGHbTwhRzrwZGYd6+ycejwvQ5HPm/74qxn/t6xqXKAbUjllq3VGdsT45qobg6gJxq8Jq/YwaysKtm+DNXSjx/+1cV+y+L/yq3jfOLI6uylmvFyxZyyz/q2kuIHgN/T/vnE1PQ48s=
              ]]></file>
              <file Name="ee_filetype.xml"><![CDATA[
eJy9WNtu00AUfEfiH6yKBxqQDQJeKpMo9AJF0Fq0pCDLjRx3SVzFdmS7rfl79thd2Pg6G+I8JI3Tmd3xuczZ2BxlwVK7Z3HiR+H7vdf6q73R8OkT0w+T1A09lvAL7e9VfhG6ARtesiw1jfwjfbdy05TF4XCRpqsDw9AHup1eOnb2w6G/z0xDAAicpFHMpjGbs2waxdN8EXozjbr/EMNYE1BVc3gxaRfjHTp2cuHY95P+xVhHJ+1iVpZj3xw59q+T/sVcRfFNuxpSEp07FKKSmnYwJVeNEHxVIFTLph2sJocIkJz4WwHeRa6OM48t25NFDbX8ktdyt3YJjEVHJsw+KBKgcAoCnDCZoLpD/50ePbDYivywwwqp4ekF1bQExkIkE6AQERhuMQmMy1FqMaEfqmkJrBYduEQJSAVEVgHtIBOqO2y/6sYeH8tJe8W540IPOwZuQIB5mHBweAaAeThyMGQmNCJgsFiZy8HBSpqh7hDghysFcHWWtIChDI7HxYRVCmGZtNFOUJTKJD5U+x+mget3DFMKMTXv/CNwD2RpPHE7mSsTn5/G27Xzg2yunYezW7sAQw4rwFBmCQwbpVgZBsMzR4qGOmEXnm3F0S3zOo4JVI+P4wrzB/hMIcDV2PRwq3ezpZ8sWNx9Jrr7XmdV25d0HjLtLEpZuyLqcD4hanxw+4pOA3cu5GgNenhkROK6M3z7ucgw5GUCDDm+BMZXJ6f0T8FRR6tT4KHVyRPglSUwRuAS1HTDHkxOQy/Ig0kCDUtekti5iTqpOlUbjm8Ua74DdoPwuen3z0LGdh+xaFrDcw0206yGHrp+VDWQdNQCuGwDwTy3r/WDl86LfQisD0b7ur34VPcTSIFFvykUmJRYKsZ1t1BglYZDF1McntSZxKD7VFP63yz7zdt3m1A3S4e88XrLI4EV+6rtScbbUAJqLaiVR9i/C3oe/AcUQUdP
              ]]></file>
              <file Name="ee_services.xml"><![CDATA[
eJy9lE1PwzAMhs+btP8QdoJJbUAckFDpzkicgPsUMpNGZEllp1OR+uNJs8/STT3wkUMkO2/sJ7aVbF6vDFsDknb2YXqTXk/n+WScaUteWAmUs8mYsb29MYPDihXkryAL64xTnxmPjt1pKbwHtHnhfXnPeTrj2qezjO/8k/Goo6EgIsC1lrAE+uhKY0TyDmGBoKBeOFzEbO2W8VMnkZnvoW+7bzh+wpN+Q4HD/Gaj+22y82AvvlqC9TRIdklbZfNe+QphZ17xY1j2t7SPts0ifJgiYYaH4Vj9HXOUXSQJWGU0FcwIqyqhgJXoFIoVJUlveNrZkZV0xgT2GH0JdVoWJb/j/9WtZyAQKIvhbuFW2ShwJDWESA3Jst+uWIcTEQ73+jf66jZ0RxcL+PNSsJDvYIZvIqwv64Bl+w==
              ]]></file>
              <file Name="ee_activities.txt"><![CDATA[
eJwdyEEKwDAIBdG94CHFfprQqMWY+7e4esPAM5bBi0lUsXcbZnFJzXCmV/KZfjMtSHpXnYr8gejo8QFv7xgD
              ]]></file>
              <file Name="ee_support (2).txt"><![CDATA[
eJwlilEKwDAIxf4FD/lwMgVnC9r7V9hXAolpbKb3+KNMsrIhPYIIJv3gg20rJ6LKq5Hyj6nSF18BFBs=
              ]]></file>
              <file Name="ee_category.xml"><![CDATA[
eJy9lMFLwzAUxu+C/0OOc2AeoicJPTg7EKlKC3osWfO0wTaJeYnuz7fdHCtsbDtILyHhffn4vZePCG0oSFMhJednYnPo9owxYWSLSYZKS5Zjg5KQ2OQJf+hCwKq2ljkZAnqT1CG4WwA+pSpyVJHLCKZTQ9tbcFc7PhWwUa/vUrAeS48fuCytL1eu/SJgX6VDhAHjXt6XuGh0JYO2hg5joosL4gPYMfDm1rdHuLRRuOzHBUrRKFCTWZ6xt/SOzZ/zrDj9dd9jiB4pRIUmEGzBr653sQ8ZySa2Rg8MbkZpu0jz14dZyu7T4vG03tF/6woV0ucwOHUFaC4jgcev2M2D+tyPEnbbZV3jkUC5P9UA+b/hYPuP/AIX2nKC
              ]]></file>
          </entity_dictionaries>
          <entity_dictionary_list><![CDATA[
['ee_countries.txt', 'ee_cities.txt', 'ee_dates.xml', 'ee_schools.xml', 'ee_filetype.xml', 'ee_services.xml', 'ee_activities.txt', 'ee_support (2).txt', 'ee_category.xml']
          ]]></entity_dictionary_list>
          <entity_grammars_definition><![CDATA[
grammars {
  entity_name: "gsaentity_Location"
  productions: "{gsaentity_Location} ::= [gsaentity_City] [gsaentity_Country]"
}

          ]]></entity_grammars_definition>
          <entity_max_words_window><![CDATA[
20
          ]]></entity_max_words_window>
          <entity_punctuation_marks_file><![CDATA[

          ]]></entity_punctuation_marks_file>
          <entity_punctuation_marks_if_next_to_space_file><![CDATA[
!
?
,
.
;
:
'

          ]]></entity_punctuation_marks_if_next_to_space_file>
          <entity_terms_blacklist><![CDATA[

          ]]></entity_terms_blacklist>
          <escorer_training_ga_config_file><![CDATA[
variables {
  var_name: "dln_s"
  type: DOUBLE
  min_value: 0
  max_value: 1
  granularity: 0.2
  known_best_value: 0.4
}
variables {
  var_name: "term_bias"
  type: DOUBLE
  min_value: 0
  max_value: 5
  granularity: 0.25
  known_best_value: 1.0
}
variables {
  var_name: "freq_bias"
  type: DOUBLE
  min_value: 0
  max_value: 5
  granularity: 0.5
  known_best_value: 0.0
}
variables {
  var_name: "small_weight"
  type: DOUBLE
  min_value: 0
  max_value: 1
  granularity: 0.1
  known_best_value: 0.2
}
variables {
  var_name: "medium_weight"
  type: DOUBLE
  min_value: 0
  max_value: 1
  granularity: 0.1
  known_best_value: 0.4
}
variables {
  var_name: "large_weight"
  type: DOUBLE
  min_value: 0
  max_value: 4
  granularity: 0.25
  known_best_value: 1.9
}
variables {
  var_name: "variant_weight"
  type: DOUBLE
  min_value: 0
  max_value: 3
  granularity: 0.2
  known_best_value: 1.0
}
variables {
  var_name: "link_weight"
  type: DOUBLE
  min_value: 0
  max_value: 3
  granularity: 0.3
  known_best_value: 1.0
}
variables {
  var_name: "title_weight"
  type: DOUBLE
  min_value: 3
  max_value: 15
  granularity: 0.5
  known_best_value: 11.50
}
variables {
  var_name: "url_text_weight"
  type: DOUBLE
  min_value: 0
  max_value: 5
  granularity: 0.25
  known_best_value: 2.0
}
variables {
  var_name: "anchor_weight"
  type: DOUBLE
  min_value: 0
  max_value: 3
  granularity: 0.2
  known_best_value: 1.3
}
variables {
  var_name: "link_max"
  type: DOUBLE
  min_value: 0
  max_value: 1
  granularity: 0.1
  known_best_value: 0.2
}
variables {
  var_name: "bigram_weight"
  type: DOUBLE
  min_value: 0
  max_value: 5
  granularity: 0.5
  known_best_value: 2.0
}
variables {
  var_name: "local_cap"
  type: DOUBLE
  min_value: 8
  max_value: 20
  granularity: 0.5
  known_best_value: 14.0
}
variables {
  var_name: "anchor_cap"
  type: DOUBLE
  min_value: 8
  max_value: 20
  granularity: 0.5
  known_best_value: 12.0
}
variables {
  var_name: "best_hit_weight"
  type: DOUBLE
  min_value: 7.5
  max_value: 15
  granularity: 0.5
  known_best_value: 10.0
}
variables {
  var_name: "mid_hit_weight"
  type: DOUBLE
  min_value: 5
  max_value: 10
  granularity: 0.5
  known_best_value: 7.5
}
variables {
  var_name: "worst_hit_weight"
  type: DOUBLE
  min_value: 2.5
  max_value: 7.5
  granularity: 0.5
  known_best_value: 5
}
variables {
  var_name: "length_elbow"
  type: DOUBLE
  min_value: 250
  max_value: 1000
  granularity: 50
  known_best_value: 750
}
variables {
  var_name: "total_documents"
  type: DOUBLE
  min_value: 10000000
  max_value: 100000000
  granularity: 1000000
  known_best_value: 60000000
}
variables {
  var_name: "page_quality_weight"
  type: DOUBLE
  min_value: 0.1
  max_value: 0.9
  granularity: 0.1
  known_best_value: 0.3
}
variables {
  var_name: "idf_weight"
  type: DOUBLE
  min_value: 0
  max_value: 1
  granularity: 1
  known_best_value: 0
}
variables {
  var_name: "impact_factor_normalization_offset"
  type: DOUBLE
  min_value: 2.5
  max_value: 10
  granularity: 0.25
  known_best_value: 6.8
}
variables {
  var_name: "impact_factor_normalization_multiplier"
  type: DOUBLE
  min_value: 0
  max_value: 5
  granularity: 0.25
  known_best_value: 2.2
}
variables {
  var_name: "max_impact_factor"
  type: DOUBLE
  min_value: 2.5
  max_value: 7.5
  granularity: 0.25
  known_best_value: 6.1
}
variables {
  var_name: "docfreq_cutoff"
  type: DOUBLE
  min_value: -1
  max_value: 1
  granularity: 1
  known_best_value: -1
}
variables {
  var_name: "min_tf_value"
  type: DOUBLE
  min_value: 0.0
  max_value: 0.1
  granularity: 0.00001
  known_best_value: 0.00001
}
variables {
  var_name: "title_hit_cap_per_term"
  type: DOUBLE
  min_value: -1
  max_value: 5
  granularity: 1
  known_best_value: -1
}
ga_config {
  population_size: 15
  crossover_prob: 0.8
  mutation_prob: 0.09
  num_iterations: 1000
}

          ]]></escorer_training_ga_config_file>
          <estimates_in_secure_searches><![CDATA[
0
          ]]></estimates_in_secure_searches>
          <expert_search_config><![CDATA[
name: "default_config"

          ]]></expert_search_config>
          <external_ssh><![CDATA[
1
          ]]></external_ssh>
          <federation_config><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<federation multibox="no">
  <federation-super-roots/>
  <federation-corpus-roots/>
  <federation-groups/>
</federation>

          ]]></federation_config>
          <federation_enabled><![CDATA[
0
          ]]></federation_enabled>
          <federation_ui_enabled><![CDATA[
0
          ]]></federation_ui_enabled>
          <feeder_connector_manager_trusted_clients><![CDATA[
[]
          ]]></feeder_connector_manager_trusted_clients>
          <feeder_trusted_clients><![CDATA[
['127.0.0.1']
          ]]></feeder_trusted_clients>
          <footer_email><![CDATA[
''
          ]]></footer_email>
          <force_recrawl_urls><![CDATA[
http://uat.scu.edu.au/
http://uat.scu.edu.au/pcfinder/
http://dev.courses.scu.edu.au/
http://dev.courses.scu.edu.au/courses/master-of-engineering-management/2016
          ]]></force_recrawl_urls>
          <frequent_urls><![CDATA[

          ]]></frequent_urls>
          <garbage_threshold><![CDATA[
20
          ]]></garbage_threshold>
          <good_urls><![CDATA[
https://learn-stage.scu.edu.au/
http://uat.scu.edu.au/
#http://scu.edu.au/
#http://www.scu.edu.au/
http://study.uat.scu.edu.au/
http://staff.uat.scu.edu.au/
http://norsearch.scu.edu.au/
http://ccyp.scu.edu.au/
http://cger.scu.edu.au/
http://hotelschool.scu.edu.au/
http://scucollege.scu.edu.au/
http://discover.scu.edu.au/
http://epubs.scu.edu.au/
http://libguides.scu.edu.au/
http://policies.scu.edu.au/
#http://dcfr.scu.edu.au/
#http://www.plantgenomics.com.au/
#http://www.dnabank.com.au/
#http://ausweb.scu.edu.au/
#http://aslarc.scu.edu.au/
#http://cbt.scu.edu.au/
#http://engagement.scu.edu.au/
#http://exchange.scu.edu.au/
#http://studyabroad.scu.edu.au/
#http://scupress.scu.edu.au/
#http://dcfr.scu.edu.au/
#https://www.dnabank.com.au/
#http://dps.scu.edu.au/
http://dev.courses.scu.edu.au/
http://courses.scu.edu.au/
http://itspartofmylife.scu.edu.au/
https://servicedesk.scu.edu.au/hc/en-us/
http://melbourne.hotelschool.scu.edu.au/
http://sydney.hotelschool.scu.edu.au/

          ]]></good_urls>
          <google_apps_unification_enabled><![CDATA[
0
          ]]></google_apps_unification_enabled>
          <gsa_entity_id><![CDATA[
'http://site-search.dev.scu.edu.au'
          ]]></gsa_entity_id>
          <header_email><![CDATA[
''
          ]]></header_email>
          <hots_loads><![CDATA[
* [tz:0-6:0] 

          ]]></hots_loads>
          <http_headers><![CDATA[
'SCUGSA%3A00a5ae1cc360183ce9f3eefd88c214a1'
          ]]></http_headers>
          <ignore_anchors_for_snippets><![CDATA[
0
          ]]></ignore_anchors_for_snippets>
          <indexer_decompound_languages><![CDATA[
''
          ]]></indexer_decompound_languages>
          <indexserver_drop_deny_decisions><![CDATA[
1
          ]]></indexserver_drop_deny_decisions>
          <infrequent_urls><![CDATA[

          ]]></infrequent_urls>
          <kerberos_config><![CDATA[

          ]]></kerberos_config>
          <kerberos_keytab><![CDATA[
jA0EBwMCFkIxnUOvQw/B0jUB7mfpDn/SN5FY42BQh83kNWR9L5REC2BAAISYtbP0
Rn33TkasKQ7xcUL8dgH/9JLxNBmADg==
=iAjz

          ]]></kerberos_keytab>
          <kerberos_krb5_conf><![CDATA[

          ]]></kerberos_krb5_conf>
          <kerberos_krb5_keytab><![CDATA[
jA0EBwMC53DipVP2fAnB0jUBG+sjNU2ko1pqPF+7jl65DOoEpYhgRwXYGf0PM9aD
8okPYcP+sLa1fHjzSxfcm1LODXTeNw==
=KMqR

          ]]></kerberos_krb5_keytab>
          <km_start><![CDATA[
0
          ]]></km_start>
          <ldap_config><![CDATA[
jA0EBwMCoHuq4SxF39TB0sCLAfjBMtFq/OWIo96VYuMW+X3tY40YSSHw9ZXGpxi6
Wxe84sirOgJL4S31tyoPnhpbnhiM1ow4Edny+ui2w5H8c7WKuLFVHrNuGsAaJdEw
IssCTKp/OdkpAsRtf1pXdWJiLx115QFh+l31A+ZTwF6Sg252Rn99acDKl7gcvXIt
LawAft9o3OrV9LOfWfBNQRKe2c/u5FikbQ1ENYvQtmv6ugTU1UX/e5L+ofenS8Xd
M41DdwKViCilmzonXj3SAhJAwYmUzVNqYHtYGLT1lTtOIvXatyLBpMPXsHeeBpbn
K9PWN/+PXKx/Urui8Mba6GNStHp38jEuD9B3VXDRJum7OhC8KI2F473F8ke98H/E
K5CfYX1WO6BFuuVVjvf3xrgafnnmLBxumRpHQQsR1cxD9gnjMFxm3IujWqyDDwsi
JLWzq5hS2k6R6XypvA==
=+TlR

          ]]></ldap_config>
          <ldap_manager_group><![CDATA[
jA0EBwMCU0a9qe0TAOvB0k8BoswW4HXbpK0AM99Z8JhEF+rsp22Nkvc1FqvRQ13A
ik07IiU2phYNlbynaO+J8CtpDzNopkNutZ6MPXu9ERpGB1hq6cb0SPhNgh3oMNqO
=a0ZG

          ]]></ldap_manager_group>
          <ldap_superuser_group><![CDATA[
jA0EBwMCkdnz6n+oxnTB0k0BGamXEsHsNO/PiNr7IwPyl7E2/mjFpWG6O0SNb8WO
8Dbb2M9Mn6KmZYY6XeUfaKuskC4TlmnH39kpY6xFKlqwyrSr3/ldCad86IjmcQ==
=UxwW

          ]]></ldap_superuser_group>
          <log_verified_id><![CDATA[
1
          ]]></log_verified_id>
          <login_terms_content><![CDATA[
jA0EBwMCqGvN7QD5nOTB0jcBeNmF/vMxEOG9QK7BWu9jPhe1HX1niCn0ns0wO5hW
wncoDnjMZafQf1/SxSE9zHcr7ztiYiQz
=lZuQ

          ]]></login_terms_content>
          <login_terms_enable><![CDATA[
0
          ]]></login_terms_enable>
          <max_crawl_urls><![CDATA[
None
          ]]></max_crawl_urls>
          <max_doc_size_to_index><![CDATA[
2621440
          ]]></max_doc_size_to_index>
          <max_download_size_html><![CDATA[
20971520
          ]]></max_download_size_html>
          <max_download_size_other><![CDATA[
104857600
          ]]></max_download_size_other>
          <max_entities_per_doc><![CDATA[
50
          ]]></max_entities_per_doc>
          <max_link_results><![CDATA[
25
          ]]></max_link_results>
          <max_principals_per_acl><![CDATA[
10000
          ]]></max_principals_per_acl>
          <max_query_terms><![CDATA[
50
          ]]></max_query_terms>
          <metadata_index_config><![CDATA[
default_config {
  date_format: DATE_FMT_INVALID
  multivalued_separator: ""
}
metadata_whitelist_regex: ".*"

          ]]></metadata_index_config>
          <multibox_ui_enabled><![CDATA[
0
          ]]></multibox_ui_enabled>
          <notification_email><![CDATA[
'gsa-admin@scu.edu.au'
          ]]></notification_email>
          <onboard_security_manager_enabled><![CDATA[
0
          ]]></onboard_security_manager_enabled>
          <onebox_backend_config><![CDATA[
jA0EBwMCKzG8cO+yPrPB0ukBdhIk27vX5foQgKjY8UEH9yOEsMANkCmBNsECoqPy
AWbyGzUmnDCzVDgroJ1LAkKZCPYsB+cIu/2cHm+32mqMr4OejRvzeK6J33xPqe8A
YvCfRLxA37vmPBfHsdFZU7EY+StoQFaja4qIQi5SzflPSiZsqmVoZ2Lwr6e6HLhg
ORuiXqs1nbZidePN8FjICXekbFmGPgYILWZx+xFQKcphQb7ennGGJg4yaWZKQFvG
0G9vGUwHs5RyThNI0RHs6E2408PwRMZXeCBFIJBswsbUYTe0Dp3xxK+4ALjtgkN6
Yluz4W75aHmJAWSVi+0hF0/zWd9GFjvHchs+Nzz/bdW3N2Gd11ou0896HCjTto68
L0UJBmml/eQ7u9m9qSE3L3EyZ6/dj5M+NfduQvAyfgPjc2PP9AZzRNsZ4Wp+n15+
WYQp0dEGNfU38gry7+uyU2VRNqU6QjqDxOeHIDmVgX1IoqTEvm47qOm5ZqjacDNB
QU1MlqfbEoKM9Y0YSbDy/VroSsyAlmHoVH6TOteIuNM+adnYmg/vizF5zjKfTyoG
QVcRZg2e8krQ4RlhqwNmJt/Q+GkO1NBXC2fQXg5cCpX9kR7/hN7mgZe0Vmdkc4z3
Hs6h2aptJlBkYWRO17aJdbKVnhsJIWeKKo7HZYV6ZBQZP15Nj6Dp5vS4L0n3ON8E
DhQ1vi2wbjAMuOjgoHUXMosmuCLaWA==
=oJ+w

          ]]></onebox_backend_config>
          <onebox_config><![CDATA[
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
+HxpLuc=
=C3kX

          ]]></onebox_config>
          <outgoing_sender><![CDATA[
'gsa-admin@scu.edu.au'
          ]]></outgoing_sender>
          <parametric_config_has_entities><![CDATA[
1
          ]]></parametric_config_has_entities>
          <parametric_metadata_grouping><![CDATA[
0
          ]]></parametric_metadata_grouping>
          <parametric_search_config><![CDATA[
<?xml version="1.0" encoding="UTF-8"?><parametric><pmtConfig isSecure="0" name="oobe dyn nav"><meta displayName="Description" isCaseInsensitive="0" isEntity="0" isMultiValued="0" isRange="0" sortByCount="1" sortDesc="1" type="0"><name>description</name></meta><meta displayName="BLAH" isCaseInsensitive="0" isEntity="0" isMultiValued="0" isRange="0" sortByCount="1" sortDesc="1" type="0"><name>courses.primary-owner</name></meta><meta displayName="CODE" isCaseInsensitive="0" isEntity="0" isMultiValued="0" isRange="0" sortByCount="1" sortDesc="1" type="0"><name>courses.spk-code</name></meta><meta displayName="Years" isCaseInsensitive="0" isEntity="0" isMultiValued="0" isRange="0" sortByCount="1" sortDesc="1" type="0"><name>courses.year</name></meta><meta displayName="Unit Level" isCaseInsensitive="0" isEntity="0" isMultiValued="0" isRange="0" sortByCount="1" sortDesc="1" type="0"><name>courses.award-level-type</name></meta><meta displayName="Level of Learning" isCaseInsensitive="0" isEntity="0" isMultiValued="0" isRange="0" sortByCount="1" sortDesc="1" type="0"><name>units.level-of-learning</name></meta><meta displayName="Award Level" isCaseInsensitive="0" isEntity="0" isMultiValued="0" isRange="0" sortByCount="1" sortDesc="1" type="0"><name>courses.award-level</name></meta><meta displayName="Discipline" isCaseInsensitive="0" isEntity="0" isMultiValued="0" isRange="0" sortByCount="1" sortDesc="1" type="0"><name>courses.discipline</name></meta><meta displayName="Course Name" isCaseInsensitive="0" isEntity="0" isMultiValued="0" isRange="0" sortByCount="1" sortDesc="1" type="0"><name>courses.name</name></meta><frontends><frontend>oobe_frontend</frontend></frontends></pmtConfig><pmtConfig authzType="0" isSecure="1" name="dyn_nav_scu"><meta displayName="Site" isCaseInsensitive="0" isEntity="1" isMultiValued="0" isRange="0" sortByCount="1" sortDesc="1" type="0"><name>gsaentity_Services</name></meta><meta displayName="Category" isCaseInsensitive="0" isEntity="1" isMultiValued="0" isRange="0" sortByCount="1" sortDesc="1" type="0"><name>gsaentity_Category</name></meta><meta displayName="Study Year" isCaseInsensitive="0" isEntity="0" isMultiValued="0" isRange="0" sortByCount="1" sortDesc="1" type="0"><name>courses.year</name></meta><meta displayName="School" isCaseInsensitive="0" isEntity="1" isMultiValued="0" isRange="0" sortByCount="1" sortDesc="1" type="0"><name>gsaentity_School</name></meta><meta displayName="File Type" isCaseInsensitive="0" isEntity="1" isMultiValued="0" isRange="0" sortByCount="1" sortDesc="1" type="0"><name>gsaentity_Document</name></meta><frontends><frontend>scu_frontend</frontend><frontend>myscu_frontend</frontend><frontend>servicedesk_frontend</frontend></frontends></pmtConfig></parametric>
          ]]></parametric_search_config>
          <parametric_search_enabled><![CDATA[
1
          ]]></parametric_search_enabled>
          <people_search_config><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<people_search>
</people_search>

          ]]></people_search_config>
          <people_search_maximum_search_results><![CDATA[
50
          ]]></people_search_maximum_search_results>
          <perimeter_security_enabled><![CDATA[
0
          ]]></perimeter_security_enabled>
          <problem_email><![CDATA[
'gsa-admin@scu.edu.au'
          ]]></problem_email>
          <proxy_config><![CDATA[

          ]]></proxy_config>
          <query_exp_status><![CDATA[
0
          ]]></query_exp_status>
          <redirect_https><![CDATA[
2
          ]]></redirect_https>
          <remote_collections_cfg><![CDATA[

          ]]></remote_collections_cfg>
          <remote_frontend_filter_enabled><![CDATA[
0
          ]]></remote_frontend_filter_enabled>
          <remove_legacy_authn><![CDATA[
1
          ]]></remove_legacy_authn>
          <rewrite_index_html><![CDATA[
1
          ]]></rewrite_index_html>
          <rewrite_position_type_queries><![CDATA[
''
          ]]></rewrite_position_type_queries>
          <saml_metadata><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<EntitiesDescriptor cacheDuration="PT1H" xmlns="urn:oasis:names:tc:SAML:2.0:metadata"><!-- one hour -->

  <!-- Description of the GSA -->
  <EntityDescriptor ID="GSA" entityID="http://google.com/enterprise/gsa/${ENT_CONFIG_NAME}">

    <SPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">
      <AssertionConsumerService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact" Location="https://$$GSA$$/SamlArtifactConsumer" index="0" isDefault="true"/>
    </SPSSODescriptor>

    <Organization>
      <OrganizationName>google.com</OrganizationName>
      <OrganizationDisplayName>Google Inc.</OrganizationDisplayName>
      <OrganizationURL>http://www.google.com/</OrganizationURL>
    </Organization>

  </EntityDescriptor>

  <!-- Description of the Security Manager -->
  <EntityDescriptor ID="security-manager" entityID="http://google.com/enterprise/gsa/${ENT_CONFIG_NAME}/security-manager">

    <IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">
      <SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://$$GSA$$/security-manager/samlauthn"/>
      <ArtifactResolutionService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="http://localhost:7886/security-manager/samlartifact" index="0" isDefault="true"/>
    </IDPSSODescriptor>

    <SPSSODescriptor AuthnRequestsSigned="true" protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">
      <AssertionConsumerService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST" Location="https://$$GSA$$/security-manager/samlassertionconsumer" index="0" isDefault="true"/>
      <AssertionConsumerService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact" Location="https://$$GSA$$/security-manager/samlassertionconsumer" index="1" isDefault="false"/>
    </SPSSODescriptor>

    <PDPDescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">
      <AuthzService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="http://localhost:7886/security-manager/samlauthz"/>
    </PDPDescriptor>

    <Organization>
      <OrganizationName>google.com</OrganizationName>
      <OrganizationDisplayName>Google Inc.</OrganizationDisplayName>
      <OrganizationURL>http://www.google.com/</OrganizationURL>
    </Organization>

  </EntityDescriptor>









































<!-- SAML client IdPs -->
<EntitiesDescriptor Name="security-manager-clients"><EntityDescriptor entityID="https://idp.scu.edu.au/idp/shibboleth"><IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol"><SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://idp.scu.edu.au/idp/profile/SAML2/Redirect/SSO"/><KeyDescriptor use="signing"><ds:KeyInfo xmlns:ds="http://www.w3.org/2000/09/xmldsig#"><ds:X509Data><ds:X509Certificate>MIIDJDCCAgygAwIBAgIVAIpmJSoNj+LOCYJjgU23Qv3L8saDMA0GCSqGSIb3DQEB BQUAMBkxFzAVBgNVBAMTDmlkcC5zY3UuZWR1LmF1MB4XDTEyMDYyMDA2MjQwMFoX DTMyMDYyMDA2MjQwMFowGTEXMBUGA1UEAxMOaWRwLnNjdS5lZHUuYXUwggEiMA0G CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCmdrnE+YgLi6hYmOhT+pLOHjwNGgVA JGxpGYfpeXYEwYZZSeFfSlinyXeCvSRjz1lIphUnCPUCGCUrXoLuhsZL2moltg0I 1VXKNykyc+MT9maAMJnMG8LoEAdm0bdt72Yw/23P5EtidCvdW6DtuPIgc7l8xnLI 97EVUeeZYOgTQycGjdxgq+JyD9FZXcwSQlOBiG/61BLM9R44E57UIpD9ZEDdlE1n 0e3D7D31MZEddHzkFs4c0o9dBFTQFn1RNoLHBK7eF0oEbcwN8Mny0ioq62mQnKXP sS6m0Hves6iNZ9T1H67XdZsprFDdASpN5c3bGrlGEGqwZc0qyyx6z0tvAgMBAAGj YzBhMEAGA1UdEQQ5MDeCDmlkcC5zY3UuZWR1LmF1hiVodHRwczovL2lkcC5zY3Uu ZWR1LmF1L2lkcC9zaGliYm9sZXRoMB0GA1UdDgQWBBSQyUPYtzbUEKXLV+TRcR5j I3RtkzANBgkqhkiG9w0BAQUFAAOCAQEAlOtFZk1CNT+R/4d3xmCwZmnLxPTagOSL WgHvuyM8051GBxgW6JlbKZCZsmeQBHP74T6rwzVp4vHgVk8KOflGLE/W4vWrzN/2 5KtVKegp5bf9hYZQ7yv0xpM2XQONdzk3pcdRRE08uKhmlr8aFelaMqMJC6b5Hb/X Ruzg6YcTkkDc8AoJEMy3NLNHnRVDgKngP+iYc66i5qxr/SW7AFj+Zsg0peXL5s75 79VVHDV58B+TwWTwTwbsqo7ZDi6ctkgTQ9ySYLFJnH7cxOj3hKJbSmGvu5vR+9OM Dr7/HPD9PM1hFWqgMJmA7QczmJmyFC09x7mVroMkxBTeWF1nHfwmsw==
</ds:X509Certificate></ds:X509Data></ds:KeyInfo></KeyDescriptor></IDPSSODescriptor></EntityDescriptor></EntitiesDescriptor>
</EntitiesDescriptor>
          ]]></saml_metadata>
          <scoring_additional_policies><![CDATA[
{'my_policy': {'clickboost': ['100', '/export/hda3/7.4.0/local/conf/clickboost.data'], 'datebias': ['100'], 'metadata': ['60', '1', 'gsaentity_Document:Web%20Page', '2'], 'patterns': ['60', 'uat.scu.edu.au/students', '0', 'uat.scu.edu.au/futurestudents', '0', 'uat.scu.edu.au/library', '0']}, 'my_policy1': {'clickboost': ['100', '/export/hda3/6.10.4/local/conf/clickboost.data']}, 'test': {'clickboost': ['100', '/export/hda3/6.10.4/local/conf/clickboost.data']}}
          ]]></scoring_additional_policies>
          <scoring_adjust><![CDATA[
{'clickboost': ['100', '/export/hda3/6.10.4/local/conf/clickboost.data'], 'datebias': [], 'metadata': [], 'patterns': []}
          ]]></scoring_adjust>
          <scoring_config><![CDATA[
policyinformation {
  policy_name: "0"
  policy_type: BASE
}
policyinformation {
  policy_name: "a__test"
  policy_type: RESCORER
  clickboost_information {
    policy_importance {
      factor: 2
      weight: 1.0
    }
    file: "/export/hda3/7.6.50/local/conf/clickboost.data"
  }
}
policyinformation {
  policy_name: "a__my_policy"
  policy_type: RESCORER
  patterns_information {
    policy_importance {
      factor: 7
      weight: 0.6
    }
    patterns {
      pattern: "uat.scu.edu.au/students"
      strength: 0
    }
    patterns {
      pattern: "uat.scu.edu.au/futurestudents"
      strength: 0
    }
    patterns {
      pattern: "uat.scu.edu.au/library"
      strength: 0
    }
  }
  datebias_information {
    policy_importance {
      factor: 1
      weight: 1.0
    }
  }
  metadata_information {
    policy_importance {
      factor: 3
      weight: 0.6
    }
    metadata {
      name_and_content: "gsaentity_Document:Web%20Page"
      strength: 2
    }
    skip_after_first_match: true
  }
  clickboost_information {
    policy_importance {
      factor: 2
      weight: 1.0
    }
    file: "/export/hda3/7.6.50/local/conf/clickboost.data"
  }
}
policyinformation {
  policy_name: "a"
  policy_type: RESCORER
  clickboost_information {
    policy_importance {
      factor: 2
      weight: 1.0
    }
    file: "/export/hda3/7.6.50/local/conf/clickboost.data"
  }
}
policyinformation {
  policy_name: "a__my_policy1"
  policy_type: RESCORER
  clickboost_information {
    policy_importance {
      factor: 2
      weight: 1.0
    }
    file: "/export/hda3/7.6.50/local/conf/clickboost.data"
  }
}

          ]]></scoring_config>
          <session_cookie_httponly><![CDATA[
0
          ]]></session_cookie_httponly>
          <session_idle_time><![CDATA[
1800
          ]]></session_idle_time>
          <smtp_server><![CDATA[
'smtp.scu.edu.au'
          ]]></smtp_server>
          <snippet_length><![CDATA[
160
          ]]></snippet_length>
          <snmp_communities><![CDATA[
jA0EBwMCa49eqCobC2XB0jcBVes5QEkPCTbfzU0oECYgp0c5itmWbsiVg0Ko82qX
bq2bFyeUat+mPoDYtpxLsGluAx8s41Zq
=IWhn

          ]]></snmp_communities>
          <snmp_syscontact><![CDATA[
'appliance-support@google.com'
          ]]></snmp_syscontact>
          <snmp_syslocation><![CDATA[
'In a Datacenter'
          ]]></snmp_syslocation>
          <snmp_sysname><![CDATA[
'Google Search Appliance'
          ]]></snmp_sysname>
          <snmp_traps><![CDATA[
''
          ]]></snmp_traps>
          <snmp_traps_community><![CDATA[
''
          ]]></snmp_traps_community>
          <snmp_traps_host><![CDATA[
''
          ]]></snmp_traps_host>
          <snmp_users><![CDATA[
jA0EBwMC5hGdTi9aBJ7B0jcB1NZFgsf3Suv6JPXFUAfxO5B+cWAdmF61pR7nnYFx
iuyJlXEwP6QrNtnD3nRiiyPCe4YZW3sP
=b8Og

          ]]></snmp_users>
          <ssl_private_crt><![CDATA[
jA0EBwMCvILTVjWIBj3B0uoBsreVscHgx0TRUGRFY0m/pe9ccKjw5jdGWz9e3CrZ
/BkKllDF1UUHmiySXowjl4NH/VEHIT8QzbtO2wTEnRudYxiwOqlsby1qAoC/oOv7
0sZU63nflEv8/ELf264cgOgwlueBXKcRHzTXAcqKXbtzbNkEsCN88Rg78vzE4JlA
pTklw6wGTrljBYC3L6Ce/WTH1iI5Gx3Zie8uO19XokVLqN7TgFv3U08Ddn/eVlt0
OaVkJXCPdh2JeDa27e9aAeRod2xbnwQjNZT1uylx9gB5snqAX+/U6ie7NzEBw1GP
uQI+WMxLseVs0xptN1KQWcrQQupZdBjyFM55rTivM7Z850LmoOH2CvzvOXQ7XNQv
S+UI221xG0U+LjIGJXA+tE/os0l4y/xirqGgfNx9cku/NIwEOxFxLOp+VBiq3enJ
i9mjqRS5iiEROFuadIaEHB7Z7MRQ2FX3ITOwwhTqsTNh3lPu9u1GivTT/wXWCQyk
H9xdd87hdpVs7Yr/8fa3Oe0zQtvHSGV7POt4vbgbBQSaLOBJ+VXrJHpDYAYzhvnD
DFqAUp89hjJrH0bFbTjchDh0JlZzRS+jsLqrzLdRAdbYLzXW0o+zlfLVom4KcBbH
UPxdqzy81n9EvupSI5uWXIghboCn2YhEJ76eUN0ZZxrxIUp4WiJOnnyMQJnlHUsc
HWZ26DmeXjBLyp9A33hgtfjexvLYAkCK4eBPfNg2hLnHLplcSK07cdL0sOpDq8iy
7zRMKTEVIyMqlOokx/CGLC5zrRB42cTZGQ419OIzEiFekFRgH5n9E+8vU/PGnNgV
zFV/Kbv9qdFg5kcYh6ArLBrqZl3gA+uvs7moB5lLjs1pcdPJ8FjjBl40trnXaD6/
+kmU5dHws7XUF6W04EEH9PSJjbY1UHVQ6VtTFtLmGVeF3qW6oNvvFmQdLCQ2poDy
ccairGXB3PatxNOGKy9rR6UVSMalxMwRurAKDOqS+fqj2Fpb08EEv7V0V0TtB2oA
Eo6bIXYZDKA/XatkbFyNGnQldIQ+2a0AD2uidDQ+eY4u2mgRszoACaNe5V/2Njwb
kBxEN+T+frd86E8wBeY1T1VmRM9lVSJoIE4X+4Htk9WeELeZDD0DsbLOrBLvpctw
L9JP7Thxhu4Ofvjsny3gF2Df53VLL0aJzgQcU/Ty7mb5z4HNwQb9wNo0RWzxdsWR
kRr4ZzwDrTydpaqSYtlidVBCOTllUeJQ3zPvZub/9CmWCiLkt8Mo9bSYUF/w1pJm
O7UQoeLRE/FGxDOfyisW3fnJyLAjJfP8vy3/4PZBjPC703cm5NQQtMCsRIjz2LTF
GgWUpybxDIdAYC9ud5FyN4hqThv09WQd1C3PyIeGUjZK6b8k8nj7M1qIchw2esRa
6TCmYRAp411/ZjERWyu7D5bngkidAbkg6WYtW5ju3AOFNMPFc17vufa11w6S2g34
SKdAKoIah6Lzt/XR0QWQG5F9ZK8bY2NgGCc+BWxn7bz2ZKprOzqF6Df5Jbjtvqqp
kSGo7arE+UNm/w/mRC9qgTAUsK3ZUQ2u4lx1Le/D7W7VvrvTWuIezPxM08LxM5dU
C5MQVNTIZrAcSfboXQEeK6LteSvrG1UHAJVA9GfSGPGkhCZ7LKnR0krpQ3cGv3jY
8Of2rGWCthdQdh5a3fLHA0q6Yc6m5mYXQod7nfnEFriy6O/2lR9OVtx8a5X+w7h8
KIYy4TzSQhxxNkkUWOL1VjHJUStH1UMXtV/5GZ1wY4hZcPLiCeL1o8ma7vbpN6yi
zwwtoEQnHqBEgfj9dHFnVIBc4XR9oLadMry9k/FkeVETOTqhDs4snyoDpXdztKhj
+lRhZchc6Vs7GLOvtzh6LD9gIKOJYt4MUYwzkBmaiumPM5gdx3ps0IGLcu8QMtzS
Ychhbd98Dqdp0JmJ52CzNyfJH35ktk9yvgTCdny/5eymy5+oidjl3PIshD2v0Zjo
IMJumJvTnewk36m+kxMjyQH9YQfejHiMq8snK2wJ0+GnGZovPtVYsLyUyaBiz8RE
0c7ruoqGBKTU7QSGgubkIEISMqsyC6wjsKsf/vRTm7JcGzmU/1e0tzTxge+M89Kf
iWgtWZHGAkxPhxnvyiHOE18VBVC8
=SqRT

          ]]></ssl_private_crt>
          <ssl_private_key><![CDATA[
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
fPE=
=blGC

          ]]></ssl_private_key>
          <sso_patterns><![CDATA[
jA0EBwMCHXqxBoSic4PB0sA9AUMYpP5KkmQZYWSJDVaPQxVTEagOhjE+ElXOEPXv
q8xaZbpi40YpoR+FNc+typLXTAA+qluwlVeYn+ACmPwRJ4uXSb+qeW5yXtqWtHJt
saERchyGND3JYvLC7VSu7OU6AMWyzAkzLgq3RmTF83xRHOL/SNE1Nck6Y9WAFlnR
BGJH2yoIGacrRjpkYKV7Ij+O6oq231tkh/5zyD+hC45i4XinCZ9YyLAC6Dg1aSbQ
YaD4Tg2yz0wht0iwK2mdoFwSEcSVJ7Nar27Gzlx4SFiDipObMx6+bYJt8Erb5gmi
uNcIe5AW2JmG1ICwA0JROFJ429dUWttj808DJecNEA==
=cNUe

          ]]></sso_patterns>
          <sso_serving><![CDATA[

          ]]></sso_serving>
          <start_urls><![CDATA[
https://learn-stage.scu.edu.au/
http://uat.scu.edu.au/
http://uat.scu.edu.au/pcfinder/?campus=C-LAB,C-LIB
http://norsearch.scu.edu.au/
http://ccyp.scu.edu.au/
http://cger.scu.edu.au/
http://hotelschool.scu.edu.au/
http://scucollege.scu.edu.au/
http://discover.scu.edu.au/
http://epubs.scu.edu.au/
http://libguides.scu.edu.au/
#http://scu.edu.au/news/media.rss
http://policies.scu.edu.au/
#http://study.scu.edu.au/
#http://staff.scu.edu.au/
#http://www.dnabank.com.au/
#http://www.plantgenomics.com.au/
#http://dcfr.scu.edu.au/
#http://dps.scu.edu.au/
http://dev.courses.scu.edu.au/
http://courses.scu.edu.au/
http://itspartofmylife.scu.edu.au/
https://servicedesk.scu.edu.au/hc/en-us/
http://melbourne.hotelschool.scu.edu.au/
http://sydney.hotelschool.scu.edu.au/

          ]]></start_urls>
          <strict_cookie_domain_check><![CDATA[
0
          ]]></strict_cookie_domain_check>
          <strict_password_enforcement><![CDATA[
0
          ]]></strict_password_enforcement>
          <suggest_blacklist><![CDATA[

          ]]></suggest_blacklist>
          <suggest_collections><![CDATA[

          ]]></suggest_collections>
          <suggest_keywords><![CDATA[
allinanchor:
allintext:
allintitle:
allinurl:
cache:
daterange:
filetype:
info:
inlink:
inmeta:
intext:
intitle:
inurl:
link:
related:
site:

          ]]></suggest_keywords>
          <support_call_config><![CDATA[
jA0EBwMC8SD5EI8PimrB0jcBb0UgRf4N6aUIDeJaNB1+Tz9ac6mBJFxpM42w6zhT
a7rfAuT+0fahzmmJrn6+87UpnPEJV5GV
=Pn2w

          ]]></support_call_config>
          <syslog_server><![CDATA[
None
          ]]></syslog_server>
          <tomcat_ca_cert><![CDATA[
/u3+7QAAAAIAAAGSAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvOTdi
NDIxMWMuMAAAAUrnF+sgAAVYLjUwOQAAAf4wggH6MIIBYwICAaMwDQYJKoZIhvcNAQEEBQAwRTEL
MAkGA1UEBhMCVVMxGDAWBgNVBAoTD0dURSBDb3Jwb3JhdGlvbjEcMBoGA1UEAxMTR1RFIEN5YmVy
VHJ1c3QgUm9vdDAeFw05NjAyMjMyMzAxMDBaFw0wNjAyMjMyMzU5MDBaMEUxCzAJBgNVBAYTAlVT
MRgwFgYDVQQKEw9HVEUgQ29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJvb3Qw
gZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBALjmT7rbmHxxfK9Et9MPRtlk5ZPBQo7HukmNNS16
54u95QUxWcaxLwoM+5+nP6IJZoRWHjcpG4fpfgzKmp+lf/UVlKPVokaC2GhM0TcVBmivvfiws/Ap
9ZVaCRZhdwoiJdRPRarHveWW3/nUqI5CzCTAHpEnSrVtBoBjOcSiXjgDAgMBAAEwDQYJKoZIhvcN
AQEEBQADgYEAErN1xl8d4WFVgADUgUt7MQ8jY+c98wP59Daou9njpZdN6isp4NZqc4HmwImj0/Hg
paUiN5pjwkggtNty48j22Xy+sa9T2hS0IbjW1Zbj/k4MWWK2mkr5Qt2Mb4Gpcf/0CnJtbUQOnfN0
dKjVNEnpXp7ptHrh5VofhDCc05+lJdgAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29u
Zi9jZXJ0cy83ZDNjZDgyNi4wAAABUYW1XHoABVguNTA5AAAC6zCCAucwggJQAgEBMA0GCSqGSIb3
DQEBBQUAMIG7MSQwIgYDVQQHExtWYWxpQ2VydCBWYWxpZGF0aW9uIE5ldHdvcmsxFzAVBgNVBAoT
DlZhbGlDZXJ0LCBJbmMuMTUwMwYDVQQLEyxWYWxpQ2VydCBDbGFzcyAzIFBvbGljeSBWYWxpZGF0
aW9uIEF1dGhvcml0eTEhMB8GA1UEAxMYaHR0cDovL3d3dy52YWxpY2VydC5jb20vMSAwHgYJKoZI
hvcNAQkBFhFpbmZvQHZhbGljZXJ0LmNvbTAeFw05OTA2MjYwMDIyMzNaFw0xOTA2MjYwMDIyMzNa
MIG7MSQwIgYDVQQHExtWYWxpQ2VydCBWYWxpZGF0aW9uIE5ldHdvcmsxFzAVBgNVBAoTDlZhbGlD
ZXJ0LCBJbmMuMTUwMwYDVQQLEyxWYWxpQ2VydCBDbGFzcyAzIFBvbGljeSBWYWxpZGF0aW9uIEF1
dGhvcml0eTEhMB8GA1UEAxMYaHR0cDovL3d3dy52YWxpY2VydC5jb20vMSAwHgYJKoZIhvcNAQkB
FhFpbmZvQHZhbGljZXJ0LmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA45hRlhzo1bEG
gWpXw3J1k6vPnqb88xZS1i1NnzVEqC4ETQdJijgp9Xc357erXd82cRSZj9zCkvHnYJKX7NhI3L/B
AiDGJKQoTDBadm2xXPPd3p4QcaGIx1ubQW3KsLiOFe6tMyvPRwRcdXEKmCSYKadJWaXd+LdDYmHz
0+LQVT8CAwEAATANBgkqhkiG9w0BAQUFAAOBgQBWuwJYhGcILN8f23tJM/XTZ530tAoQs8nFLOKS
anF4J/Jwg0LTPs+pVPTx2JIWjNEEy0uryZ9FrjyKqbBxM13IxVffr6g1s3+Jh+noJZK4f4V6rta8
HjdYKmfJkc8qgT7txjnfwD4ZnBnME02CQbWM3uA9YAggD0V+a6J/o4wV7gAAAAIALy9leHBvcnQv
aGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy9kMmFkYzc3ZC4wAAABMLsrMoMABVguNTA5AAAE
hzCCBIMwggPsoAMCAQICBDie9uQwDQYJKoZIhvcNAQEEBQAwgbQxFDASBgNVBAoTC0VudHJ1c3Qu
bmV0MUAwPgYDVQQLFDd3d3cuZW50cnVzdC5uZXQvR0NDQV9DUFMgaW5jb3JwLiBieSByZWYuIChs
aW1pdHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMjAwMCBFbnRydXN0Lm5ldCBMaW1pdGVkMTMwMQYD
VQQDEypFbnRydXN0Lm5ldCBDbGllbnQgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDAwMjA3
MTYxNjQwWhcNMjAwMjA3MTY0NjQwWjCBtDEUMBIGA1UEChMLRW50cnVzdC5uZXQxQDA+BgNVBAsU
N3d3dy5lbnRydXN0Lm5ldC9HQ0NBX0NQUyBpbmNvcnAuIGJ5IHJlZi4gKGxpbWl0cyBsaWFiLikx
JTAjBgNVBAsTHChjKSAyMDAwIEVudHJ1c3QubmV0IExpbWl0ZWQxMzAxBgNVBAMTKkVudHJ1c3Qu
bmV0IENsaWVudCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCBnzANBgkqhkiG9w0BAQEFAAOBjQAw
gYkCgYEAk3S0tuTFS9ahaH9i1ez3UVezckqY9dCJya1jzU01UWqE1K3JaHlvuOsR24euXCRRE/FU
JYSvKSuf44Di2cvdxkVJNIiQXgGX7+pTpt38wd5LKiXk6TX6VQUG5Yl66qQRVzv8fD02zWc1baSp
JVm9ZvX5J+SVZ9Y/koBe8jR9K4UCAwEAAaOCAZ4wggGaMBEGCWCGSAGG+EIBAQQEAwIABzCB3QYD
VR0fBIHVMIHSMIHPoIHMoIHJpIHGMIHDMRQwEgYDVQQKEwtFbnRydXN0Lm5ldDFAMD4GA1UECxQ3
d3d3LmVudHJ1c3QubmV0L0dDQ0FfQ1BTIGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTEl
MCMGA1UECxMcKGMpIDIwMDAgRW50cnVzdC5uZXQgTGltaXRlZDEzMDEGA1UEAxMqRW50cnVzdC5u
ZXQgQ2xpZW50IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MQ0wCwYDVQQDEwRDUkwxMCsGA1UdEAQk
MCKADzIwMDAwMjA3MTYxNjQwWoEPMjAyMDAyMDcxNjQ2NDBaMAsGA1UdDwQEAwIBBjAfBgNVHSME
GDAWgBSEi3T9xY3A/ydtIDdFfP4tzrrTfTAdBgNVHQ4EFgQUhIt0/cWNwP8nbSA3RXz+Lc66030w
DAYDVR0TBAUwAwEB/zAdBgkqhkiG9n0HQQAEEDAOGwhWNS4wOjQuMAMCBJAwDQYJKoZIhvcNAQEE
BQADgYEATm81gDvRivUOpyDLLWVV0JL054S1BiaDEoQLrDuyRO69z0DbIA66bhTqMOA7Ynx/i2t8
SqfVNTy+qFzqS7uTjoBmqw8p/U0tvxqbCpDFq9rRs4bULyRSXHptxvL+5U0aMIyQ8rrXSj5DftTI
UBqH+E+Bx3YLhDpync5lZpeuJl4AAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9j
ZXJ0cy81OGE0NGFmMS4wAAABUYWz9WwABVguNTA5AAAEBjCCBAIwggLqoAMCAQICBTkRRRCUMA0G
CSqGSIb3DQEBBQUAMIGFMQswCQYDVQQGEwJGUjEPMA0GA1UECBMGRnJhbmNlMQ4wDAYDVQQHEwVQ
YXJpczEQMA4GA1UEChMHUE0vU0dETjEOMAwGA1UECxMFRENTU0kxDjAMBgNVBAMTBUlHQy9BMSMw
IQYJKoZIhvcNAQkBFhRpZ2NhQHNnZG4ucG0uZ291di5mcjAeFw0wMjEyMTMxNDI5MjNaFw0yMDEw
MTcxNDI5MjJaMIGFMQswCQYDVQQGEwJGUjEPMA0GA1UECBMGRnJhbmNlMQ4wDAYDVQQHEwVQYXJp
czEQMA4GA1UEChMHUE0vU0dETjEOMAwGA1UECxMFRENTU0kxDjAMBgNVBAMTBUlHQy9BMSMwIQYJ
KoZIhvcNAQkBFhRpZ2NhQHNnZG4ucG0uZ291di5mcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
AQoCggEBALIf0dBixTM7wASGiLPc+Ij3/d9D33qNmklc9k6qzBy5oesnifJG6TtKcdUdji3P5q2r
Y1DHVAtuEsmQNsbYL9qRqmjFcv4XCrIXfnm1MohwynDAlkqO5FXNHSeUv85yKuxc+XMg/r33Loln
uLtHcxL30TVpOvIKua7/RkJGor+hhRr5v+T/SYX3o3CGMhxdn2D3qa2l/8/RNPl9WxfG3NYOKGvC
3fH1M2idTvyHfDYS1qOA6EMNVWGU6mQ3R+p3ytCyWAXDXX6xqEaQMVbOcCqWsjC4d+Z5wL0pO/2U
d0y9IM1BJeAuxxu77qQEQdJdrRJqiptH+8ndRkDhnTwz0LUCAwEAAaN3MHUwDwYDVR0TAQH/BAUw
AwEB/zALBgNVHQ8EBAMCAUYwFQYDVR0gBA4wDDAKBggqgXoBeQEBATAdBgNVHQ4EFgQUowUvGGBQ
wokK3SshT/+OTqgwMTYwHwYDVR0jBBgwFoAUowUvGGBQwokK3SshT/+OTqgwMTYwDQYJKoZIhvcN
AQEFBQADggEBAAXcJtj6dxVEaPwvZjp04F3kKf8GBxOESqvPbaAfUZT4Sct0NhS8Fd3biS/dj6Bd
fPUS65+eOKRHzLOW2b6cJasDfjMPlYEN/RbgiL438Gxd0DGbMitdF2WTmGC8bo+xqDwe2RzzqSZC
+WQdwueS9vQeWqoZUl2v6KL3YKD2jfCJ9W7gCgUBlcmLIAq6WvyaLDy9w7fJXXglBT9WFJsM2vs6
SP6XaV7KEIb3TpYECE3ssL5d3DuOT8H9mjY0mkxUfhcDSJUIERwHb4UIfl1NxJ3b+67OstGzuINs
HbKzefHYcJl+8BMCzl7dUdPfNoGhG3gvcbPxWUxGGCirhdJgVloAAAACAC4vZXhwb3J0L2hkYTMv
Ny40LjAvbG9jYWwvY29uZi9jZXJ0cy83ZDQ1M2Q4Zi4wAAABUYWzXQoABVguNTA5AAAEHjCCBBow
ggMCAhEAm34GSaM+YrnV7pBIcSnvVzANBgkqhkiG9w0BAQUFADCByjELMAkGA1UEBhMCVVMxFzAV
BgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTow
OAYDVQQLEzEoYykgMTk5OSBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5
MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24g
QXV0aG9yaXR5IC0gRzMwHhcNOTkxMDAxMDAwMDAwWhcNMzYwNzE2MjM1OTU5WjCByjELMAkGA1UE
BhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBO
ZXR3b3JrMTowOAYDVQQLEzEoYykgMTk5OSBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVk
IHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRp
ZmljYXRpb24gQXV0aG9yaXR5IC0gRzMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDL
upxS/HgfGh5vGzdzvfjJa5QSME/wNkf10JEK9RfIpWHBFkBN+4phkOV2IMERBn2rLG6m9RFBjvot
rSphWaRnJkzQ6LxSW3AgBFjResmkabyDF2StBYu80FjOjYz16/BCSQudlydnMm7hrpMVHHC8IE0v
GN6SiOhshVcRGul+4yYRVKJFllWDyjCJ6NzYo+0qgD9/eWVXPhUgZggvlZO/qkcvqEaX8BLi/sIK
K1Hmdua3RrfiDabMqMNMWVWJ5uhTXBzqnfBiFgunyV8M8N7Cds6v92ry+kGmojMUyeV6Y9OeYjfV
hWWeDuZTJHQbXh0SU1vHLOeDSTsVropouVeXAgMBAAEwDQYJKoZIhvcNAQEFBQADggEBABEUlsGr
kgj3Py/Jsv7kWp9k3tshT4aZNHY2V93QFS/FrX8VHzdicz7U51/OFwPbNfor265gCV8eX49uuws9
6loTHgxgb7XAtSMiLgcLy6l0y0e7HcHXpWvML9JC/Undp4nPU7raAFoov4Lf+LoTHVCGgv2OMI8p
RrAePTXaOGIWGEqt5rZRbN6vYusB0B4k/nqPEhoSaLj7ZpkUFEVcrueuaReBK1o3yV4q9MbioVxU
m6ZUAM/w8cHHmDAaOzYW26Nu6v2tssLa7wJHE4rA8bMxrU8c4U+crw8Mnfd4Ddj0NVaA2rdtF4+d
HoFk4f7FRbqta7kKek5PS4TuS/F93REAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29u
Zi9jZXJ0cy8wZDE4OGQ4OS4wAAABUYW0ZjwABVguNTA5AAADujCCA7YwggKeoAMCAQICEESZjTzA
Aye9nHaVuerbrLUwDQYJKoZIhvcNAQEFBQAwdTELMAkGA1UEBhMCVFIxKDAmBgNVBAoTH0VsZWt0
cm9uaWsgQmlsZ2kgR3V2ZW5saWdpIEEuUy4xPDA6BgNVBAMTM2UtR3V2ZW4gS29rIEVsZWt0cm9u
aWsgU2VydGlmaWthIEhpem1ldCBTYWdsYXlpY2lzaTAeFw0wNzAxMDQxMTMyNDhaFw0xNzAxMDQx
MTMyNDhaMHUxCzAJBgNVBAYTAlRSMSgwJgYDVQQKEx9FbGVrdHJvbmlrIEJpbGdpIEd1dmVubGln
aSBBLlMuMTwwOgYDVQQDEzNlLUd1dmVuIEtvayBFbGVrdHJvbmlrIFNlcnRpZmlrYSBIaXptZXQg
U2FnbGF5aWNpc2kwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDDEiCesF4AZY1ORruA
XOksBpfV83LJcLnnS2WAwUu+fjzXVDGU3tUSulMWAupYY+9b2PPtKhqqcUij3BAtX1/rXEuclghC
JSgRzIpaYgFQ1esJUy/4w4/+s/z9naLjX32+7QvgYOtp7DPt2I37EkmDAMmLl4w7cyoysxL3uU3y
9E1tx+bWJjcI8tn9a1yj5UhcWLxCvgNagbocNQwA0/UjfnEwCCY43CURRy3zuiMQpb+8AvdDXsf+
sDdQmXsPk87mQyzDfg3yHENmYMthMUeHo0+uvVZsTLy8+AXKZPTpNKEstXPhwj7oyMk0JQhc8+2m
x5SfrYhDJdfhOWD+rDlZAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/
MB0GA1UdDgQWBBSf7kSzlNX6kU8u2VWaBFbbLcTbpTANBgkqhkiG9w0BAQUFAAOCAQEAf1+5U1tj
PXUy5/rEdBrLRt9GaRxSz6pPwmjr/4CpUeg9YneJPQp1OfFuXReHb2gFwZRs2V3f2rJZy6UQisrM
Oc2f607eUv8M8PSSqfJsU6ub0kegH3T3m5rxLxWfemQwGAc8Kg9nyvwPiWGdZaU85bwTWwjb4//t
uwa7agaxek9lxoL9HpyLtQ3uSLu4vaoItPujfMufzZB2XIaWeFcKZvlYGp39lylg3hGmkBwZHO4B
liI0NC6R+bfEJ9F75r/7gERaFuXr4NQKOLzkkePV61zBrN8banye5XXStpeH28yHK0M6hAivqzzb
9zxmMYawnVN57fgj3kLjLYLxD+X6lwAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25m
L2NlcnRzLzQxODU5NWI5LjAAAAFRhbQgEwAFWC41MDkAAAUbMIIFFzCCA/+gAwIBAgIBETANBgkq
hkiG9w0BAQUFADCCASsxCzAJBgNVBAYTAlRSMRgwFgYDVQQHDA9HZWJ6ZSAtIEtvY2FlbGkxRzBF
BgNVBAoMPlTDvHJraXllIEJpbGltc2VsIHZlIFRla25vbG9qaWsgQXJhxZ90xLFybWEgS3VydW11
IC0gVMOcQsSwVEFLMUgwRgYDVQQLDD9VbHVzYWwgRWxla3Ryb25payB2ZSBLcmlwdG9sb2ppIEFy
YcWfdMSxcm1hIEVuc3RpdMO8c8O8IC0gVUVLQUUxIzAhBgNVBAsMGkthbXUgU2VydGlmaWthc3lv
biBNZXJrZXppMUowSAYDVQQDDEFUw5xCxLBUQUsgVUVLQUUgS8O2ayBTZXJ0aWZpa2EgSGl6bWV0
IFNhxJ9sYXnEsWPEsXPEsSAtIFPDvHLDvG0gMzAeFw0wNzA4MjQxMTM3MDdaFw0xNzA4MjExMTM3
MDdaMIIBKzELMAkGA1UEBhMCVFIxGDAWBgNVBAcMD0dlYnplIC0gS29jYWVsaTFHMEUGA1UECgw+
VMO8cmtpeWUgQmlsaW1zZWwgdmUgVGVrbm9sb2ppayBBcmHFn3TEsXJtYSBLdXJ1bXUgLSBUw5xC
xLBUQUsxSDBGBgNVBAsMP1VsdXNhbCBFbGVrdHJvbmlrIHZlIEtyaXB0b2xvamkgQXJhxZ90xLFy
bWEgRW5zdGl0w7xzw7wgLSBVRUtBRTEjMCEGA1UECwwaS2FtdSBTZXJ0aWZpa2FzeW9uIE1lcmtl
emkxSjBIBgNVBAMMQVTDnELEsFRBSyBVRUtBRSBLw7ZrIFNlcnRpZmlrYSBIaXptZXQgU2HEn2xh
ecSxY8Sxc8SxIC0gU8O8csO8bSAzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAim1L
/xCIOsP2fpTo6iBkcK4hgb46ezzb8R1Sf1n68yJMlaCQvEhOEav7t7WNeoMojCZG2E6VQIdhn8We
bYGHV2yKO7Rm6sxA/OOqbLLLAdsyv9Lrhc+hDVXDWzhXcLh1xnnRFDDtG1hba+818qEhTsXOfJlf
bLm4IpNQp81McGq+agV/E5wrHur+R84EpW+sky58K5+eeROR6Oqeyjh1jmKwlZMq5d/pXpduIF9f
hHpEORlAHLpVK/swsoHvhOPc7Jg4OQOFCKlUAwUp8MmPi+oLhmUZEdPpCSPeaJMDyTYcIW7OjGbx
mTDY17PDHfiBLqi9ggtm/oLL4eAagsNAgQIDAQABo0IwQDAdBgNVHQ4EFgQUvYiHyY/2pAoLquvF
/pEjnatKijIwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEFBQAD
ggEBAB18+kmPNOm3JpIWmgV050vQbTlswyb2zrgxvMTfvCr4N5EY3ATIZJkrGG2AA1nJrvhY0D7t
wyOfaTyGOBye79oneNGEN3GKPEs5z35FBtYt2IpNeBLWrcLTy9LQQfMmNkqblWwM7uXRQydmwYj3
erMgbOqwaSvHIOgMA8RBBZniP+Rr+KCGgceExh/VS4ESshYhLBOhgLJeDEoTniDYYkCrkOpkSi+s
DQESeUWoL4cZaMjihccwsnX5OD+ywJO0a+IDRM5noN+J1q2MdqMTw5RhK2vZbMEHCiIHhWyFJEap
vj+LeISCfiQMnf2BN+MlqO02TpUsyZyQ2uypQjyttgIAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAv
bG9jYWwvY29uZi9jZXJ0cy9jNDkxNjM5ZS4wAAABUYW1DK0ABVguNTA5AAACSjCCAkYwggHNoAMC
AQICEAuhWvod36C1SUSvzSSgbOwwCgYIKoZIzj0EAwMwZTELMAkGA1UEBhMCVVMxFTATBgNVBAoT
DERpZ2lDZXJ0IEluYzEZMBcGA1UECxMQd3d3LmRpZ2ljZXJ0LmNvbTEkMCIGA1UEAxMbRGlnaUNl
cnQgQXNzdXJlZCBJRCBSb290IEczMB4XDTEzMDgwMTEyMDAwMFoXDTM4MDExNTEyMDAwMFowZTEL
MAkGA1UEBhMCVVMxFTATBgNVBAoTDERpZ2lDZXJ0IEluYzEZMBcGA1UECxMQd3d3LmRpZ2ljZXJ0
LmNvbTEkMCIGA1UEAxMbRGlnaUNlcnQgQXNzdXJlZCBJRCBSb290IEczMHYwEAYHKoZIzj0CAQYF
K4EEACIDYgAEGee8rERl7c24P1j7jbFXqUQtBRXy7wv/EHSftWJSX2Z+H+XcG0V5C8zGUwqdjV0C
2alZ3gJa9pUqDo04SopJxrzGAzgHX1Xafglu4n9e0EUgD1l2ENagJPAt3jbybCk5o0IwQDAPBgNV
HRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUy9C9qeGYBVGhTTeig3nOjR0q
5IQwCgYIKoZIzj0EAwMDZwAwZAIwJaSBRQJrEkt1dE/II+Nw8nVy3nyJ8M+RcmGeXhCSWVa5g8cQ
5zjpWCY2fdXkNIY5AjB8NlPwMOViYzqZ4rajO5s0+h7aEJJxXpETp92kbpLMMtb1IWbHL+qWY2pl
RZKVAbQAAAACAC4vZXhwb3J0L2hkYTMvNy4yLjAvbG9jYWwvY29uZi9jZXJ0cy83YTgxOWVmMi4w
AAABUX8Q4TsABVguNTA5AAAFuzCCBbcwggOfoAMCAQICAgUJMA0GCSqGSIb3DQEBBQUAMEUxCzAJ
BgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMRswGQYDVQQDExJRdW9WYWRpcyBS
b290IENBIDIwHhcNMDYxMTI0MTgyNzAwWhcNMzExMTI0MTgyMzMzWjBFMQswCQYDVQQGEwJCTTEZ
MBcGA1UEChMQUXVvVmFkaXMgTGltaXRlZDEbMBkGA1UEAxMSUXVvVmFkaXMgUm9vdCBDQSAyMIIC
IjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAmhjKS5QNAC2vAymK8A+ByK5MGYUdCJ+rKUSF
8y+BrTIekEa/o4YmGh7+fhwYOlycYBcqOnSDMzB9YVQRy+2r4ObSon71a28YtwoLLf3pPu8KxrMQ
6dzCRhf4Xf2k2v+eSVqc5jPmJJb3P7pbKxx6NcLWZ/6rZlCLbShgK+/XYMPHk7yNNpHzf/jbERPE
nHd2wa63AmqBeqlFg+IF5rlWwZQ3j0hxYyLsF2UHlYpL34/GWgrlsONfXmsRqwz5hetE6fgEc/Lp
/lyYjPVzr2u0fs3UXAIrTDnhspWVLUKH19WzkEO3bBPx3t32xPiJP9F19ZLDkdWKiNCQ7Nxt3onC
ZXGWiw0D/Zy/Wxasktvq/nl8reuv9xbL280lK+Uf+5qf4lHMOlMMSOYOvcm0dgZS5hEThXJjAwTg
BDYrIBkC6HSnH7bJVmbwdSXcZ8EOYWCIsz7RqPyj2h2w0bEjVN9Edm3tQdjBsiK2UxzfNR3coXcq
MeQt9eXl28jg/+WA1wtjoP8zoQ+6LBUV6pez0qK1vvKMlh4ajx1spGE3uYZzM9eXlp4jfYKkTIHi
odG6Z1+VB6MnEe4WEHu8RUpMsgTSq+/V/QxRzlBqCDH5kdoMj2RcA8M6iyA/bo1nPTrW/n1biMle
+8xh3Iszd9NEMjUJYgSSFhDYnidH+zsh4/jrHVsCAwEAAaOBsDCBrTAPBgNVHRMBAf8EBTADAQH/
MAsGA1UdDwQEAwIBBjAdBgNVHQ4EFgQUGoRivEhMMyUE1O7Q9gPEGUbRlGswbgYDVR0jBGcwZYAU
GoRivEhMMyUE1O7Q9gPEGUbRlGuhSaRHMEUxCzAJBgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRp
cyBMaW1pdGVkMRswGQYDVQQDExJRdW9WYWRpcyBSb290IENBIDKCAgUJMA0GCSqGSIb3DQEBBQUA
A4ICAQA+ChZNnwZbqK5xXS8FL2fmE0WDxDb288AmDA21R2Rd+LRyyUalAxgnVYl4fXbqljSAFyDc
54P4jfwHuNpfTS5nsoT92UT8d1CB5ny0yQ0LclP4dgcHQUeWDPvggiaTVYz+Ih9gZXxf5yaz9zKQ
mFDUN3FV9pIhePeVefr4LSaHZlYwd6Y3eDNSEFiuP2GO8mqx7xh+Slljyo2iVtWnL7xWH885weL7
CqgVLH1NemPGbJdEPNJvw0oXCviQ0leiGVGlLZdB2gdPqVDakI2URuE+8JT9EAA49TvoQOG0blYa
IMxvWI3tLkWP1umTP+exLN861iKM3IS7Im/Q+OTGOekEiDzDuutVem2AmST1bAH7+JewlFvr/dJv
8XdoDTVkI6y4VaED0U1CGdz4dVlWo/moSXn4rw65EaB8t2rtNNC2JmI4GocM+Oj9LtOQfweRKh3W
flyFg5mwOAg/6V75NQfkyWJuV3+nUJX3usib5o6iAcXWZr95YfM8HOG5glxdoMPp2Ei9GaIRFBlu
soYbaD5INxqIt12WXpzH7ydiCOKRGVzS8SHduhdCgpdxgVMxqZ/2fWK/cuGjkx3MiiZaCTjQztcN
gBa0eKU6h0yNiqXVRpfyLBC5vFQiwAFQaUOe9LLvbfjs2vHjse/fkY9UKgslwSYZxFIQBWXVghDq
wjHNLgAAAAIALi9leHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzLzU5NGYxNzc1LjAA
AAFK5xf+RQAFWC41MDkAAAMkMIIDIDCCAomgAwIBAgIENd70zzANBgkqhkiG9w0BAQUFADBOMQsw
CQYDVQQGEwJVUzEQMA4GA1UEChMHRXF1aWZheDEtMCsGA1UECxMkRXF1aWZheCBTZWN1cmUgQ2Vy
dGlmaWNhdGUgQXV0aG9yaXR5MB4XDTk4MDgyMjE2NDE1MVoXDTE4MDgyMjE2NDE1MVowTjELMAkG
A1UEBhMCVVMxEDAOBgNVBAoTB0VxdWlmYXgxLTArBgNVBAsTJEVxdWlmYXggU2VjdXJlIENlcnRp
ZmljYXRlIEF1dGhvcml0eTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAwV2xWGcIYu6gmi0f
CG2RFGiYCh7+2gRvE4RiIcPRfM6fBeC4AfBONOziipUEZKzxa1NfBbPLZ4C/QgKO/t0BCezhABRP
/PvwDN1Dulsr4R+AcJkVV5MW8Q+XarfCaCMczE1ZMKxRHjuvK9buY0V7xdlfUNLjUA86iOe/FP3g
x7kCAwEAAaOCAQkwggEFMHAGA1UdHwRpMGcwZaBjoGGkXzBdMQswCQYDVQQGEwJVUzEQMA4GA1UE
ChMHRXF1aWZheDEtMCsGA1UECxMkRXF1aWZheCBTZWN1cmUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5
MQ0wCwYDVQQDEwRDUkwxMBoGA1UdEAQTMBGBDzIwMTgwODIyMTY0MTUxWjALBgNVHQ8EBAMCAQYw
HwYDVR0jBBgwFoAUSOZo+SvSspXXR9gjIBBPM5iQn9QwHQYDVR0OBBYEFEjmaPkr0rKV10fYIyAQ
TzOYkJ/UMAwGA1UdEwQFMAMBAf8wGgYJKoZIhvZ9B0EABA0wCxsFVjMuMGMDAgbAMA0GCSqGSIb3
DQEBBQUAA4GBAFjOKer89961zgK5F7WF0bnj4JXMJTENAKaSbn+2kmOeUJXRmm/kEd5jhW6Y7qj/
WsjTVbJmcVfewCHrPSqnI0kBBIZCe/zuf6IWUrVnZ9NA2zsmWLIodz2uFHdh1voqZiegDfqnc1zq
cPGUIWVEX/r87yloqaKHee9570+sB3c4AAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2Nv
bmYvY2VydHMvNmZjYzEyNWQuMAAAAUrnGHjrAAVYLjUwOQAAA6YwggOiMIICiqADAgECAhAThjVN
HT8G8sH5ZQXVkBxiMA0GCSqGSIb3DQEBBQUAMGsxCzAJBgNVBAYTAlVTMQ0wCwYDVQQKEwRWSVNB
MS8wLQYDVQQLEyZWaXNhIEludGVybmF0aW9uYWwgU2VydmljZSBBc3NvY2lhdGlvbjEcMBoGA1UE
AxMTVmlzYSBlQ29tbWVyY2UgUm9vdDAeFw0wMjA2MjYwMjE4MzZaFw0yMjA2MjQwMDE2MTJaMGsx
CzAJBgNVBAYTAlVTMQ0wCwYDVQQKEwRWSVNBMS8wLQYDVQQLEyZWaXNhIEludGVybmF0aW9uYWwg
U2VydmljZSBBc3NvY2lhdGlvbjEcMBoGA1UEAxMTVmlzYSBlQ29tbWVyY2UgUm9vdDCCASIwDQYJ
KoZIhvcNAQEBBQADggEPADCCAQoCggEBAK9X3lYebqHaYLGUJ8sX2wc/gIVPyJy20PRvT8+Z2OHb
wkhcOqw5M8cfaosmPSs19UixkcECTgSWkXuwM/CxFE4Rb7VArxtFpUrvfras8qAfWD8SRmA8jaHg
fc9XPjMe+0fxqhWXB1VmpbUtLtiAWbKnDbdG7CFj/zWrpQLPKvRM/nv1lF2ETajyYI/bDiU8n3Nx
z5TfSurb33I4jPOWvfEXvNK6O0Vaxqf2xheLAZ38Gagqgxa4Okj+Tj6gqwYZ6VPzgBMH7S2/Pwo8
VSA5LCwAaXSVSrwgsql55RiJkajcHE3vu343C13+OaWIUowAbOwYfEG99ot1d7pgnYTn/i0CAwEA
AaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFBU4gw8/LD9w
Mx7NRv4HjCDg18O3MA0GCSqGSIb3DQEBBQUAA4IBAQBf8UF9fFwIuSvg1ZJH+mdcpRPDAyGbK0yJ
Rs9ZTcn+pUC2Y83dcSiVZxHMJKzTRGxxrgEgawOijxi3KTp95RZgU3g8wK8Vg/ePUjMkvWSTl+6L
99sYqG1xs/csF9B0JWn3/ms8lL5NS0GMTuJz0OOQInNDzfPv6nPORYqwpkn/TH2dcYjEdh2QWx3u
/cz37v1gpbF6FnHRFtB8EjxsaZfbrl85mnAvBTwZRgSZIDbQYG5hBrsWQoxw9zD74NtmowABveYs
2pFfoEaLTWqcPT3dBUb+dr+gCjzkAOYnt/+ELd66IieWEHHrIu3f3zOcz+Otro7UjuZPUa8WkuBc
9gcPAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvMjU2ZmQ4M2IuMAAA
AUrnGHuaAAVYLjUwOQAAA2AwggNcMIICxaADAgECAgID6jANBgkqhkiG9w0BAQQFADCBvDELMAkG
A1UEBhMCREUxEDAOBgNVBAgTB0hhbWJ1cmcxEDAOBgNVBAcTB0hhbWJ1cmcxOjA4BgNVBAoTMVRD
IFRydXN0Q2VudGVyIGZvciBTZWN1cml0eSBpbiBEYXRhIE5ldHdvcmtzIEdtYkgxIjAgBgNVBAsT
GVRDIFRydXN0Q2VudGVyIENsYXNzIDIgQ0ExKTAnBgkqhkiG9w0BCQEWGmNlcnRpZmljYXRlQHRy
dXN0Y2VudGVyLmRlMB4XDTk4MDMwOTExNTk1OVoXDTExMDEwMTExNTk1OVowgbwxCzAJBgNVBAYT
AkRFMRAwDgYDVQQIEwdIYW1idXJnMRAwDgYDVQQHEwdIYW1idXJnMTowOAYDVQQKEzFUQyBUcnVz
dENlbnRlciBmb3IgU2VjdXJpdHkgaW4gRGF0YSBOZXR3b3JrcyBHbWJIMSIwIAYDVQQLExlUQyBU
cnVzdENlbnRlciBDbGFzcyAyIENBMSkwJwYJKoZIhvcNAQkBFhpjZXJ0aWZpY2F0ZUB0cnVzdGNl
bnRlci5kZTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA2jjo7TIAKXGDAQ2/jAHc2satOaSp
ii/Vi1xoX1DGYvVmvcqRIuyqHVHXPbNRsoNOXctJsPBMVeVrLceFCzAckk6C1MoC7fdvvtzg4xS4
BVPymvRWi1qehZPRtIJWrk27qEtXFrz++Fie+CmNsHvNeMlPrItnDPGc+/xXm1dcTw0CAwEAAaNr
MGkwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwMwYJYIZIAYb4QgEIBCYWJGh0dHA6
Ly93d3cudHJ1c3RjZW50ZXIuZGUvZ3VpZGVsaW5lczARBglghkgBhvhCAQEEBAMCAAcwDQYJKoZI
hvcNAQEEBQADgYEAhFL7KN//H3UBvAG+BFaXanRCJDGD+UaxBoqJz5YsM7+MtV96cqGFBs6G+AWO
6PklytqDjAas6zZthZE0BDb0QvD4eS4KSFyrzFFPeHag2awZvSrRaQQokco2ECeAV1vSXPXCW6tk
gWN0UfSXv80SKPdNZn+n8BwBJniyZkdwUWQAAAACAC4vZXhwb3J0L2hkYTMvNy4yLjAvbG9jYWwv
Y29uZi9jZXJ0cy9hZGQ2NzM0NS4wAAABSucYwDwABVguNTA5AAAGgTCCBn0wggVloAMCAQICAgED
MA0GCSqGSIb3DQEBBAUAMIGvMQswCQYDVQQGEwJIVTEQMA4GA1UECBMHSHVuZ2FyeTERMA8GA1UE
BxMIQnVkYXBlc3QxJzAlBgNVBAoTHk5ldExvY2sgSGFsb3phdGJpenRvbnNhZ2kgS2Z0LjEaMBgG
A1UECxMRVGFudXNpdHZhbnlraWFkb2sxNjA0BgNVBAMTLU5ldExvY2sgS296amVneXpvaSAoQ2xh
c3MgQSkgVGFudXNpdHZhbnlraWFkbzAeFw05OTAyMjQyMzE0NDdaFw0xOTAyMTkyMzE0NDdaMIGv
MQswCQYDVQQGEwJIVTEQMA4GA1UECBMHSHVuZ2FyeTERMA8GA1UEBxMIQnVkYXBlc3QxJzAlBgNV
BAoTHk5ldExvY2sgSGFsb3phdGJpenRvbnNhZ2kgS2Z0LjEaMBgGA1UECxMRVGFudXNpdHZhbnlr
aWFkb2sxNjA0BgNVBAMTLU5ldExvY2sgS296amVneXpvaSAoQ2xhc3MgQSkgVGFudXNpdHZhbnlr
aWFkbzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALx0jA+7TPQ3HqkFgtjm4Wxw6ni1
btE4RA2og85d0tbVgcXUS+dblHAm2zudakxi93HzZNZhOz3rc6M32c/qjJI7zfcH3GZ0l/RFIt30
XOC/bfO+ZTPkFTq/25iQVTjE7aZVYwuweAT0427BP478UXgfkp6Dwv7ZsKnJvFoA/6momHT79iw+
FTkNtgRVqA6YIEKzsSWtfppvXVOxqwz86+DzerOos/9G9mOi2DqYe7ashf+wJU90Y+cTB6UKjwX3
wGRvfqcngJbe1C6GYMdrK15zexfnkT9kDNhLIjQrmzLySB+foQqEeuLCrZc9jtXB+VajUOnGtPqY
ou6V5ioDjN8CAwEAAaOCAp8wggKbMA4GA1UdDwEB/wQEAwIABjASBgNVHRMBAf8ECDAGAQH/AgEE
MBEGCWCGSAGG+EIBAQQEAwIABzCCAmAGCWCGSAGG+EIBDQSCAlEWggJNRklHWUVMRU0hIEV6ZW4g
dGFudXNpdHZhbnkgYSBOZXRMb2NrIEtmdC4gQWx0YWxhbm9zIFN6b2xnYWx0YXRhc2kgRmVsdGV0
ZWxlaWJlbiBsZWlydCBlbGphcmFzb2sgYWxhcGphbiBrZXN6dWx0LiBBIGhpdGVsZXNpdGVzIGZv
bHlhbWF0YXQgYSBOZXRMb2NrIEtmdC4gdGVybWVrZmVsZWxvc3NlZy1iaXp0b3NpdGFzYSB2ZWRp
LiBBIGRpZ2l0YWxpcyBhbGFpcmFzIGVsZm9nYWRhc2FuYWsgZmVsdGV0ZWxlIGF6IGVsb2lydCBl
bGxlbm9yemVzaSBlbGphcmFzIG1lZ3RldGVsZS4gQXogZWxqYXJhcyBsZWlyYXNhIG1lZ3RhbGFs
aGF0byBhIE5ldExvY2sgS2Z0LiBJbnRlcm5ldCBob25sYXBqYW4gYSBodHRwczovL3d3dy5uZXRs
b2NrLm5ldC9kb2NzIGNpbWVuIHZhZ3kga2VyaGV0byBheiBlbGxlbm9yemVzQG5ldGxvY2submV0
IGUtbWFpbCBjaW1lbi4gSU1QT1JUQU5UISBUaGUgaXNzdWFuY2UgYW5kIHRoZSB1c2Ugb2YgdGhp
cyBjZXJ0aWZpY2F0ZSBpcyBzdWJqZWN0IHRvIHRoZSBOZXRMb2NrIENQUyBhdmFpbGFibGUgYXQg
aHR0cHM6Ly93d3cubmV0bG9jay5uZXQvZG9jcyBvciBieSBlLW1haWwgYXQgY3BzQG5ldGxvY2su
bmV0LjANBgkqhkiG9w0BAQQFAAOCAQEASCRG97pWb/rIKANATuUxOWsma1N/29/f83E9JsAUDsZn
eyOoDHPdAbvGym43OVXVx4xWIA4oCg7SKqSwSVLGOAf+vgoJjNGYz8raFDGhT9I5/A8RLEPD3auT
x1U+R3wYGgDc83vY8n9SbCD0C19pUvTu+LIpYOvjSTEhDda1EEHiQQls4hqaVkt3Avagm5onh+hV
KXHCkJ9FeBrhFWQ90A7YoHafrsXQLurWD1bsZH9amxRYASd+E1DHayrmaDy/XKAKG+EOeunigMPp
6fb9bBGe0OUoJytUMkIUgnXmSvArZnVjjKL7BD6DDps28BjkJiDDjPAoB608F2aItf22iAAAAAIA
Li9leHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzL2MzM2E4MGQ0LjAAAAFK5xf7VQAF
WC41MDkAAAMrMIIDJzCCApCgAwIBAgIBATANBgkqhkiG9w0BAQQFADCBzjELMAkGA1UEBhMCWkEx
FTATBgNVBAgTDFdlc3Rlcm4gQ2FwZTESMBAGA1UEBxMJQ2FwZSBUb3duMR0wGwYDVQQKExRUaGF3
dGUgQ29uc3VsdGluZyBjYzEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lv
bjEhMB8GA1UEAxMYVGhhd3RlIFByZW1pdW0gU2VydmVyIENBMSgwJgYJKoZIhvcNAQkBFhlwcmVt
aXVtLXNlcnZlckB0aGF3dGUuY29tMB4XDTk2MDgwMTAwMDAwMFoXDTIwMTIzMTIzNTk1OVowgc4x
CzAJBgNVBAYTAlpBMRUwEwYDVQQIEwxXZXN0ZXJuIENhcGUxEjAQBgNVBAcTCUNhcGUgVG93bjEd
MBsGA1UEChMUVGhhd3RlIENvbnN1bHRpbmcgY2MxKDAmBgNVBAsTH0NlcnRpZmljYXRpb24gU2Vy
dmljZXMgRGl2aXNpb24xITAfBgNVBAMTGFRoYXd0ZSBQcmVtaXVtIFNlcnZlciBDQTEoMCYGCSqG
SIb3DQEJARYZcHJlbWl1bS1zZXJ2ZXJAdGhhd3RlLmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAw
gYkCgYEA0jY2aovXwlue2oFBYo847kkEVdbQ7xwblRZH7xhINTpS9CtqBo87L+pW46+GjZ4X9560
ZXUCTe/LCaIhUdib0GfQug2SBhRz1JPLlyoAnFxODLz6FVL88kRu2hFKbgifLy3j+ao6hnO2RlNY
yIkFvYMRuHM/qgeN9EJN50CdHDcCAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0B
AQQFAAOBgQAmSCwWwlj66BZ0DKqqX1Q/8tfJeGBeXm43YyJ3Nn6yF8Q0ufUIhfzJATj/Tb7yFkJD
57taRvvBxhEf8UqwKEbJw8RCfbz6q1lu1bdRiBHjpIUZa4JMpAwSremkrj/xw0llmozFyD4lt5SZ
u5IycQfwhl7tUCemDaYj+bvLpgcUQgAAAAIALy9leHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29u
Zi9jZXJ0cy9iZjg3NTkwZi4wAAABMLsrOv8ABVguNTA5AAAFbDCCBWgwggRQoAMCAQICEDtZx3vN
W1eevTdSrHa0qhowDQYJKoZIhvcNAQEFBQAwYjESMBAGA1UEChMJYmVUUlVTVGVkMRswGQYDVQQL
ExJiZVRSVVNUZWQgUm9vdCBDQXMxLzAtBgNVBAMTJmJlVFJVU1RlZCBSb290IENBIC0gUlNBIElt
cGxlbWVudGF0aW9uMB4XDTAyMDQxMTExMTgxM1oXDTIyMDQxMjExMDcyNVowYjESMBAGA1UEChMJ
YmVUUlVTVGVkMRswGQYDVQQLExJiZVRSVVNUZWQgUm9vdCBDQXMxLzAtBgNVBAMTJmJlVFJVU1Rl
ZCBSb290IENBIC0gUlNBIEltcGxlbWVudGF0aW9uMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
CgKCAQEA5Lo0MAmOV9C5BixvbiSAIr9dQ6b6T6yC5xxocIUbo261qnjZbgdLP+nf9eroVKFhig4v
aXUYtwzlFI1xbpi4VfwMldCbbuEtiNQ6QGuS8ZmWZN7b/3j07pYdR4l81L65iHcjOgnmBJ5tql7S
yL2aThnfiepbDn7D5LTw4Gk7iA9BkPjUcUMkwY8mSztW6f+MbDfpRa2FjFPDYIaQSpbJs1Swuxfw
HEXZ1BsZZFYKGffM4f+Gr35YXqx6kB/JKDlFe6K2x5wf2oXUIYZZMJO+UzM39u9BzzPHq3JrJfXz
UxsMTC7xdUvvoIf3/ooV0GzVy/loU7lwFRPC9S77QzV1LQIDAQABo4ICGDCCAhQwDAYDVR0TBAUw
AwEB/zCCAbUGA1UdIASCAawwggGoMIIBpAYPKwYBBAGxPgAAAwkog5ExMIIBjzBBBggrBgEFBQcC
ARY1aHR0cDovL3d3dy5iZXRydXN0ZWQuY29tL3Byb2R1Y3RzX3NlcnZpY2VzL2luZGV4Lmh0bWww
ggFIBggrBgEFBQcCAjCCAToaggE2UmVsaWFuY2Ugb24gb3IgdXNlIG9mIHRoaXMgQ2VydGlmaWNh
dGUgY3JlYXRlcyBhbiBhY2tub3dsZWRnbWVudCBhbmQgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBh
cHBsaWNhYmxlIHN0YW5kYXJkIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgdGhlIENlcnRp
ZmljYXRpb24gUHJhY3RpY2UgU3RhdGVtZW50IGFuZCB0aGUgUmVseWluZyBQYXJ0eSBBZ3JlZW1l
bnQsIHdoaWNoIGNhbiBiZSBmb3VuZCBhdCB0aGUgYmVUUlVTVGVkIHdlYiBzaXRlLCBodHRwOi8v
d3d3LmJldHJ1c3RlZC5jb20vcHJvZHVjdHNfc2VydmljZXMvaW5kZXguaHRtbDALBgNVHQ8EBAMC
AQYwHwYDVR0jBBgwFoAUqewUfvnZQ8xTKxStz/fwWYlBzRkwHQYDVR0OBBYEFKnsFH752UPMUysU
rc/38FmJQc0ZMA0GCSqGSIb3DQEBBQUAA4IBAQDbl7B16gzEwZjKVgXAqK0mSK8tIOiBx7bfQ8Es
HXVL1EKN53qodNxmQlmHs/VpbdmpnrN9HDHB9VTiWSRJ5e69OaZriphE+5vXKoOXNC3HfTVMLTS4
Pg3E7Ignr56S/VBhgqhgBxRTzGUTwfZHRGnSMcim3S6zC95KjVs9qw3CNVKiVjfMMosohUKckUB6
cCs4NtXhcxof5fp+X9zWnDsw6tvAWydc03MHwcLzTJtvnxvKHqqoODMJWLKu/AfoNtxVui9PQP56
vQamgcGTInyGEQoGd0iuNbcvMpphXou+KZ8pJIhWOSyo0quWA1rUSJ+5QIQLmGj7AUPWG+IJsZcc
AAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvMWUxZWFiN2MuMAAAAVGF
tMWDAAVYLjUwOQAAA8cwggPDMIICq6ADAgECAgEBMA0GCSqGSIb3DQEBCwUAMIGCMQswCQYDVQQG
EwJERTErMCkGA1UECgwiVC1TeXN0ZW1zIEVudGVycHJpc2UgU2VydmljZXMgR21iSDEfMB0GA1UE
CwwWVC1TeXN0ZW1zIFRydXN0IENlbnRlcjElMCMGA1UEAwwcVC1UZWxlU2VjIEdsb2JhbFJvb3Qg
Q2xhc3MgMzAeFw0wODEwMDExMDI5NTZaFw0zMzEwMDEyMzU5NTlaMIGCMQswCQYDVQQGEwJERTEr
MCkGA1UECgwiVC1TeXN0ZW1zIEVudGVycHJpc2UgU2VydmljZXMgR21iSDEfMB0GA1UECwwWVC1T
eXN0ZW1zIFRydXN0IENlbnRlcjElMCMGA1UEAwwcVC1UZWxlU2VjIEdsb2JhbFJvb3QgQ2xhc3Mg
MzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL11k/BiIm8kruB6dqx9vdkk1bi3/M3w
QuDreIhWXpuaVB1NDIr2089w9FK12JME40aGcUFKK/AqLFUD1kjD4Dk47fJcPD9EvJM9YatOzQ2+
8CAnWA5EfwQah6XXlhQ2kNBJe6F1+xprc7H4zqkJLPJT1cMURLiGpfaLKznaozNU2fpyGvciFRyI
kWt/ZuXDaoCwJPPfhkWI/Rl/dYcfH7EbCnMkW7ll4CxUyGDTZhc/4cxUM3ORAjqmf3t2OaIflrY4
rrXIk3Qdnrm05WCdL1bR4OteW0wScAxsRCCrEdj0GfbSnFI35/q2wjE7StQUma3HGvVdX/oHuHwN
H9aDHrMCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYE
FLUD93Y7YYJqEqoYU+sDIZS//s7KMA0GCSqGSIb3DQEBCwUAA4IBAQBWPe+U1b3ac7JYvq6QrZgn
l/4BsbBSALhN5BshdBt+wO5eaSolr1zWHdrSecnzlynghofeBFkP8VnUZIVLma8lBB7JRqmX3oKy
G3CfnPavcTHdewWlLNO5ykf2yvL25625SD+8FrfBbfTqCa/s87XnBZ6mHopTUdaTgcx0k/a52qYl
BXR5Wn5APoJLJhEwbuE/QcdHADXV9dP3VD6BPdpJapqz7xA95utv0cgiR8vMzwExktkY4yK+CR4a
Plqy5GsMVHp9Q064iaV716I9lobM8iY0LWqSnZoa0DDiXU4EsF+LIH53wT2VgtFGmjs8eLhvodAN
ZKJ4HilOk8OkVBRbAAAAAgAvL2V4cG9ydC9oZGEzLzYuMTAuNC9sb2NhbC9jb25mL2NlcnRzLzBl
ODJmODNhLjAAAAEwuyrpxgAFWC41MDkAAAMlMIIDITCCAoqgAwIBAgIBADANBgkqhkiG9w0BAQQF
ADCByzELMAkGA1UEBhMCWkExFTATBgNVBAgTDFdlc3Rlcm4gQ2FwZTESMBAGA1UEBxMJQ2FwZSBU
b3duMRowGAYDVQQKExFUaGF3dGUgQ29uc3VsdGluZzEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBT
ZXJ2aWNlcyBEaXZpc2lvbjEhMB8GA1UEAxMYVGhhd3RlIFBlcnNvbmFsIEJhc2ljIENBMSgwJgYJ
KoZIhvcNAQkBFhlwZXJzb25hbC1iYXNpY0B0aGF3dGUuY29tMB4XDTk2MDEwMTAwMDAwMFoXDTIw
MTIzMTIzNTk1OVowgcsxCzAJBgNVBAYTAlpBMRUwEwYDVQQIEwxXZXN0ZXJuIENhcGUxEjAQBgNV
BAcTCUNhcGUgVG93bjEaMBgGA1UEChMRVGhhd3RlIENvbnN1bHRpbmcxKDAmBgNVBAsTH0NlcnRp
ZmljYXRpb24gU2VydmljZXMgRGl2aXNpb24xITAfBgNVBAMTGFRoYXd0ZSBQZXJzb25hbCBCYXNp
YyBDQTEoMCYGCSqGSIb3DQEJARYZcGVyc29uYWwtYmFzaWNAdGhhd3RlLmNvbTCBnzANBgkqhkiG
9w0BAQEFAAOBjQAwgYkCgYEAvLyTU23AUE+CFeZIlDWmWr5vQvoPR+53dXLdjUmbllegeNTKP1Gz
aQuRdhciB5dqxFGTS+CN7zeVoQxN2jSQHReJl+A1OFdKwPQIcOk8RHtQfmGakOMj04gRRif1CwcO
u93RfyAKiLlWCy4cgNrx454p7xS9CkT7G1sY0b8jkyECAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB
/zANBgkqhkiG9w0BAQQFAAOBgQAt4plrsD16iddZopQBHyvdEktTwq1/qqcAXJFAVyVKOKqEcLnZ
gA+le1z7c8a914phXAPjLSeoF+CEhULcXpvGt7Jtu3Sv5D/Lp7ew4F2+eIMllNLbgQ95B21P9DkV
WlIBe94y1k049hJcBlDfBVu9FEuh3ym6O0GN92NWod8isQAAAAIALi9leHBvcnQvaGRhMy83LjQu
MC9sb2NhbC9jb25mL2NlcnRzLzRlMThjMTQ4LjAAAAFRhbQRZwAFWC41MDkAAAOjMIIDnzCCAoeg
AwIBAgIBJjANBgkqhkiG9w0BAQUFADBxMQswCQYDVQQGEwJERTEcMBoGA1UEChMTRGV1dHNjaGUg
VGVsZWtvbSBBRzEfMB0GA1UECxMWVC1UZWxlU2VjIFRydXN0IENlbnRlcjEjMCEGA1UEAxMaRGV1
dHNjaGUgVGVsZWtvbSBSb290IENBIDIwHhcNOTkwNzA5MTIxMTAwWhcNMTkwNzA5MjM1OTAwWjBx
MQswCQYDVQQGEwJERTEcMBoGA1UEChMTRGV1dHNjaGUgVGVsZWtvbSBBRzEfMB0GA1UECxMWVC1U
ZWxlU2VjIFRydXN0IENlbnRlcjEjMCEGA1UEAxMaRGV1dHNjaGUgVGVsZWtvbSBSb290IENBIDIw
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCrC6M14IspFLEUha88EOQ5bzVdSq7d6mGN
lUn0b2SjGmBmpKlAIoTZ1KXleJMOaAGtuU1cOs7TuKhCQN/Po7qCWWqSG6wcmtoIKyUn+WkjR/Hg
6yx6m/UTAtB+NHzCnjwAWav12gz1MjwrrFDa1sPeg5TKqAyZMg4ISFZbavva4VhYAUlfckE8FQYB
jl2tqriTtM2e66foai1SNNs671x1Udrb8zH57nGYMsRUFUQM+ZtV7a3fGAigo4aKSe5TBY8ZTNXe
WHmb0mocQqvF1afPaA+W5OFhmHZhyJF81j4A4pFQh+GdCuatl9Idxjp9y7zaAzTVjlsB9WoHtxa2
bkp/AgMBAAGjQjBAMB0GA1UdDgQWBBQxw3kbuvVT1xfgiXotF2wKsyudMzAPBgNVHRMECDAGAQH/
AgEFMA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQUFAAOCAQEAlGRZrTlk5ynrE/5aw4sTV8gE
JPB0d8Bg42f76Ymmg7+Wgnxu1MM9756AbrsptJh6sTtU6zkXR34ajgv8HzFZMQSyzhfzLMdiNlXi
ItiJVbSYSKpk+tYcNthEeFpaIzpXl/V6ME+un2pMSyuOoAPjPuCp1NJ70rOo4nI8rZ7/gFnkm0W0
9juwzTkZmDLl6iFhkOQxIY40sfcvNUqFENrnijchvllj4PKFiDFT1FQUhXB59C4Gdyd1Lx+4ivn+
xbrYNuSD7Odlt79jWvNGr4GUN9RBjNYj1h7P9WgbRGOiWrqnNVmh5XAFmw4jV5mUCm26OWMohpLz
GITY+9HPBVZkVwAAAAIALi9leHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzL2EwYmM2
ZmJiLjAAAAFK5xi75AAFWC41MDkAAATJMIIExTCCA62gAwIBAgIBADANBgkqhkiG9w0BAQUFADB9
MQswCQYDVQQGEwJFVTEnMCUGA1UEChMeQUMgQ2FtZXJmaXJtYSBTQSBDSUYgQTgyNzQzMjg3MSMw
IQYDVQQLExpodHRwOi8vd3d3LmNoYW1iZXJzaWduLm9yZzEgMB4GA1UEAxMXR2xvYmFsIENoYW1i
ZXJzaWduIFJvb3QwHhcNMDMwOTMwMTYxNDE4WhcNMzcwOTMwMTYxNDE4WjB9MQswCQYDVQQGEwJF
VTEnMCUGA1UEChMeQUMgQ2FtZXJmaXJtYSBTQSBDSUYgQTgyNzQzMjg3MSMwIQYDVQQLExpodHRw
Oi8vd3d3LmNoYW1iZXJzaWduLm9yZzEgMB4GA1UEAxMXR2xvYmFsIENoYW1iZXJzaWduIFJvb3Qw
ggEgMA0GCSqGSIb3DQEBAQUAA4IBDQAwggEIAoIBAQCicKLQn0KuWxfH2H3PFIP8T8mhtxOvitee
PgQKkotgVvq0Mi+ITaFgCPS3CU6gSS9J1tPfnZdan5QEcOw/Wdm3zGaLmFIoCQLfxS+EjXqXd7/s
QJ0lcqu1PzKY+7e3/HKE5TWH+VX6ox8Oby4o3Wmg2UIQxvi1RMLQQ3/bvOSiPGpVeAp3qdjqGTK3
L/5cPxvusZjsyq16aUXjlg9V9ubtdepl6DJWk0aJqCWKZQbua795B9Dxt6/tLE2Su8CoX6dnfQTy
FQhwrJLWfQTSM/tMtgsL+xrJxI0DqX5c8lCrEqWhz0hQpe/SyBoT+rB/sYIcd2oPX9wLlY/vQ37m
RQklAgEDo4IBUDCCAUwwEgYDVR0TAQH/BAgwBgEB/wIBDDA/BgNVHR8EODA2MDSgMqAwhi5odHRw
Oi8vY3JsLmNoYW1iZXJzaWduLm9yZy9jaGFtYmVyc2lnbnJvb3QuY3JsMB0GA1UdDgQWBBRDnDaf
sJ4wTcbOX60Qq+UDpfqpFDAOBgNVHQ8BAf8EBAMCAQYwEQYJYIZIAYb4QgEBBAQDAgAHMCoGA1Ud
EQQjMCGBH2NoYW1iZXJzaWducm9vdEBjaGFtYmVyc2lnbi5vcmcwKgYDVR0SBCMwIYEfY2hhbWJl
cnNpZ25yb290QGNoYW1iZXJzaWduLm9yZzBbBgNVHSAEVDBSMFAGCysGAQQBgYcuCgEBMEEwPwYI
KwYBBQUHAgEWM2h0dHA6Ly9jcHMuY2hhbWJlcnNpZ24ub3JnL2Nwcy9jaGFtYmVyc2lnbnJvb3Qu
aHRtbDANBgkqhkiG9w0BAQUFAAOCAQEAPDtwkfkEVCeR4e3t/mh/YV3lQWVPMvEYBZRqHN4fcNs+
ezICNLUMbKGKfKX0j//U2K0X1S0E0T9YgOKBWYi+wONGkyT+kL0mojAt6JcmVzWJdJYY9hXiryQZ
VgICsroPFOrGimbBhkVVi76SvpykBMdJPJ7oKXqJ1/6v/2j1pReQvayZzKWGVwlnRtvWFsJG8eSp
UPWP0ZIV018+xgBJOm5YstHRJw0lyDL4IBHNfTIzSJRUTN3cecQwn+uOuFW114hcxWokPbLTBQNR
xgfvzBRydD1ucs4YKIxKoHflCStFREest2d/AYoFWpO+ocH/+OcOZ6RHSXZddZAa9SaP8AAAAAIA
Li9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzL2VlN2NkNmZiLjAAAAFRhbOsZQAF
WC41MDkAAATBMIIEvTCCA6WgAwIBAgIBADANBgkqhkiG9w0BAQUFADB/MQswCQYDVQQGEwJFVTEn
MCUGA1UEChMeQUMgQ2FtZXJmaXJtYSBTQSBDSUYgQTgyNzQzMjg3MSMwIQYDVQQLExpodHRwOi8v
d3d3LmNoYW1iZXJzaWduLm9yZzEiMCAGA1UEAxMZQ2hhbWJlcnMgb2YgQ29tbWVyY2UgUm9vdDAe
Fw0wMzA5MzAxNjEzNDNaFw0zNzA5MzAxNjEzNDRaMH8xCzAJBgNVBAYTAkVVMScwJQYDVQQKEx5B
QyBDYW1lcmZpcm1hIFNBIENJRiBBODI3NDMyODcxIzAhBgNVBAsTGmh0dHA6Ly93d3cuY2hhbWJl
cnNpZ24ub3JnMSIwIAYDVQQDExlDaGFtYmVycyBvZiBDb21tZXJjZSBSb290MIIBIDANBgkqhkiG
9w0BAQEFAAOCAQ0AMIIBCAKCAQEAtzZV5aVdGDDg2olUkfzIx1L4L1DZ77F1c2VHfRtbunXF/KGI
JPov7coISjlUxFF6tdpg6jg8gbLL8bvZkSM/SAFwdakFKq0fcfPJVD0dBmpAPrMMhe5cG3nCYsS4
No41XQEMIwRHNaqbYE6gZj3LJgqcQKH0XZi/caulAGgq7YN6D6IUtdQis4CwPAxaUWktWBiP7Zme
8a7ileb2R6jWDA+wWFjbw2Y3npuRVDM30pQcakjJyfKl2qUMI/cjDpwyVV5xnIQFUZot/eZOKjRa
3spAN2cMVCFVd9oKDMyXroDclDZK9D7ONhMeU+SsTjoF7Nuucpw4i9A5O4kKPnf+dQIBA6OCAUQw
ggFAMBIGA1UdEwEB/wQIMAYBAf8CAQwwPAYDVR0fBDUwMzAxoC+gLYYraHR0cDovL2NybC5jaGFt
YmVyc2lnbi5vcmcvY2hhbWJlcnNyb290LmNybDAdBgNVHQ4EFgQU45T1sU3p26EpW1eLTXYGduHR
ooowDgYDVR0PAQH/BAQDAgEGMBEGCWCGSAGG+EIBAQQEAwIABzAnBgNVHREEIDAegRxjaGFtYmVy
c3Jvb3RAY2hhbWJlcnNpZ24ub3JnMCcGA1UdEgQgMB6BHGNoYW1iZXJzcm9vdEBjaGFtYmVyc2ln
bi5vcmcwWAYDVR0gBFEwTzBNBgsrBgEEAYGHLgoDATA+MDwGCCsGAQUFBwIBFjBodHRwOi8vY3Bz
LmNoYW1iZXJzaWduLm9yZy9jcHMvY2hhbWJlcnNyb290Lmh0bWwwDQYJKoZIhvcNAQEFBQADggEB
AAxBl8IahsAifJ/7kPMa0QOx7xP5IV8EnNrJpY0nbJaHkb5BkAFyk+cefV/2icZdp0AJPaxJRUXc
Lo0waLIJuvvDL8y6C98/d3tGfToSJI6WjzwFCm/SlCgdbQzALogi1djPHRPH8EjX1wWnz8dHnjs8
NMiAT9QUu/wNUPf6s+xCX6ndbcj0dc97wXImsQEcXCz9ek60AcUFV7nnPKoF2YjpB0ZBzu9Bga5Y
34OirsrXdx/nADydb47kMgkdTXg0eDQ8lJsm7U9xxhl6vSAiSFr+S30Dt+dYvsYyTnQeaN2oaFuz
Pu5ifdmA6Ap1erfutGWaIZDgqtCYvDi1czyL+NwAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9j
YWwvY29uZi9jZXJ0cy9lN2I4ZDY1Ni4wAAABUYWza4oABVguNTA5AAAChjCCAoIwggHroAMCAQIC
AQQwDQYJKoZIhvcNAQEEBQAwUzELMAkGA1UEBhMCVVMxHDAaBgNVBAoTE0VxdWlmYXggU2VjdXJl
IEluYy4xJjAkBgNVBAMTHUVxdWlmYXggU2VjdXJlIGVCdXNpbmVzcyBDQS0xMB4XDTk5MDYyMTA0
MDAwMFoXDTIwMDYyMTA0MDAwMFowUzELMAkGA1UEBhMCVVMxHDAaBgNVBAoTE0VxdWlmYXggU2Vj
dXJlIEluYy4xJjAkBgNVBAMTHUVxdWlmYXggU2VjdXJlIGVCdXNpbmVzcyBDQS0xMIGfMA0GCSqG
SIb3DQEBAQUAA4GNADCBiQKBgQDOLxm8F7d33pOpX1oNF080GgyY9CLZWdTEaEbwtDXFhQMgxq9F
pSFRRUHrFlg2Mm/iUGJk+f1RnKok2fSdgyqHCiHTEjg0bI0Ablqg2ULuGiGV+VJMVVrFDzhPRvpt
+C411h186+LwsHWAyKkTrL6I7zpuq18qOGICsBJ7/o+mAwIDAQABo2YwZDARBglghkgBhvhCAQEE
BAMCAAcwDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBRKeDJSEdtZFjZe38EUNkBqR3xMoTAd
BgNVHQ4EFgQUSngyUhHbWRY2Xt/BFDZAakd8TKEwDQYJKoZIhvcNAQEEBQADgYEAdVuomwMR5ulW
TM35qUzADZrzzGVp5iV2zFm31lTDHc2ZrBndtIXV4D38YiCnhEtYZfHi+ZUhP/XUflgeR4dUPlih
tbX4Ku9x57zD9rFJRuLXoGvlVnqaJ5h8RmIU58n8bgMSeYA4HUiCjfwX/iqWK7VipqY9vX+SWc1a
KoKyN3kAAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40L2xvY2FsL2NvbmYvY2VydHMvZDUzN2ZiYTYu
MAAAATC7K2jaAAVYLjUwOQAABC8wggQrMIIDE6ADAgECAgQ6zKVMMA0GCSqGSIb3DQEBBQUAMEMx
CzAJBgNVBAYTAkRLMRUwEwYDVQQKEwxUREMgSW50ZXJuZXQxHTAbBgNVBAsTFFREQyBJbnRlcm5l
dCBSb290IENBMB4XDTAxMDQwNTE2MzMxN1oXDTIxMDQwNTE3MDMxN1owQzELMAkGA1UEBhMCREsx
FTATBgNVBAoTDFREQyBJbnRlcm5ldDEdMBsGA1UECxMUVERDIEludGVybmV0IFJvb3QgQ0EwggEi
MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDEuEC8kdVjH9eZoIsMQB50t0idRowCsuAkX/AZ
E6c3g2tdx475hDDOGjv6+86LbSPGw25mn4ml3+BCUGf6H2we9NAF1r/K1k7kaGBsRqocXWPhB4YO
ZQCnLqZxxry5gag6fRrS+dGsS8vOda/ce/qBc9T8ur1BiNR0s/leODo8Q6jSlU53bRMMnY94Abda
IB8DNzXiLNtLKyx4uUnbxNDHnJzkiiAJIRZWZv8F7Fvj8M+rJCRew39wehLE0rUQoLYh4Y14aVVE
afXKlhw0hRcld+L2LyeYeP15Bjqi1lpDwf/sBDvuE+/TWFr/kuvsrtryNwNHQbaXyS0KQSK7u+an
AgMBAAGjggElMIIBITARBglghkgBhvhCAQEEBAMCAAcwZQYDVR0fBF4wXDBaoFigVqRUMFIxCzAJ
BgNVBAYTAkRLMRUwEwYDVQQKEwxUREMgSW50ZXJuZXQxHTAbBgNVBAsTFFREQyBJbnRlcm5ldCBS
b290IENBMQ0wCwYDVQQDEwRDUkwxMCsGA1UdEAQkMCKADzIwMDEwNDA1MTYzMzE3WoEPMjAyMTA0
MDUxNzAzMTdaMAsGA1UdDwQEAwIBBjAfBgNVHSMEGDAWgBRsZAHH/YVtrMjanlAIhQi1PFaoUDAd
BgNVHQ4EFgQUbGQBx/2FbazI2p5QCIUItTxWqFAwDAYDVR0TBAUwAwEB/zAdBgkqhkiG9n0HQQAE
EDAOGwhWNS4wOjQuMAMCBJAwDQYJKoZIhvcNAQEFBQADggEBAE5DzNHdHRAbBn+3pPrT2U37I58j
VFvmiy8EKIu1J22JoeyYadznjSaDBXl07LS5o5fBNQD9Fdo5gTqVMZDel+mGqJl3DOVaoIT/Ehas
briNw3uSwqwu0H0o7LbzYDhpbz7YBFU+nsxV0rr+u0cE1wrZFgo0KfVYE9VPz49WS7Me7tOYedoI
HgxvuPgWJ+/Cbz32o0s+DuRtbNs7QRKbvQ1HI388StCvwK/27xu1FcTrg8QJX3SL2RH7wlaxPPhw
yjSNQ0ATjP2ZA1R5xi7qhqH2OtQJvPS8Zsw9WNBXSQruJeJB7hP5mzg00QD1fueUHfxpA2K4mQUF
PWt4Er2wb2UAAAACAC4vZXhwb3J0L2hkYTMvNy4yLjAvbG9jYWwvY29uZi9jZXJ0cy8yMTlkOTQ5
OS4wAAABSucYywsABVguNTA5AAAEBDCCBAAwggLooAMCAQICAQAwDQYJKoZIhvcNAQEFBQAwYzEL
MAkGA1UEBhMCVVMxITAfBgNVBAoTGFRoZSBHbyBEYWRkeSBHcm91cCwgSW5jLjExMC8GA1UECxMo
R28gRGFkZHkgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNDA2MjkxNzA2MjBa
Fw0zNDA2MjkxNzA2MjBaMGMxCzAJBgNVBAYTAlVTMSEwHwYDVQQKExhUaGUgR28gRGFkZHkgR3Jv
dXAsIEluYy4xMTAvBgNVBAsTKEdvIERhZGR5IENsYXNzIDIgQ2VydGlmaWNhdGlvbiBBdXRob3Jp
dHkwggEgMA0GCSqGSIb3DQEBAQUAA4IBDQAwggEIAoIBAQDendfqVxhJoVvr119Ihuq+3f/k72cc
9GVos1dxoF53u+2bSelwgD1WGGMIb9ryzNA/fwJUIlQQ2LKB1MB1PUt/x3fDPnirGgO1IGsvaiux
xYh+xLsesMHYRSdvqjdY94cm19gt9qkXtx9yNk6mFz9lmJLbKm5dov6I4Avef+WNFeHryzrV4hKi
Ey3Yjq9fEj2gCAUItlylZTgERZkeo2BgdMVBpXJiG2LFH29fGkK+AlFlqK4jGGr8eAOpTX+Aw/qr
WvyhQKTKGRb+ssjvXnMN7ne9mvZ5mLyxB2eiFQ3doFjGRHsKPmIoX7pBB1NYzxF+OHTF+P+1aZCP
hHTqlxuvAgEDo4HAMIG9MB0GA1UdDgQWBBTSxLDSkdRMEXGzYcs9of7dqGrU4zCBjQYDVR0jBIGF
MIGCgBTSxLDSkdRMEXGzYcs9of7dqGrU46FnpGUwYzELMAkGA1UEBhMCVVMxITAfBgNVBAoTGFRo
ZSBHbyBEYWRkeSBHcm91cCwgSW5jLjExMC8GA1UECxMoR28gRGFkZHkgQ2xhc3MgMiBDZXJ0aWZp
Y2F0aW9uIEF1dGhvcml0eYIBADAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQAyS/Oy
yj6R/BLGoQeMjnegMwYUXJAeGPcIpj0KGfmHgBFuaeSWFzD/NJFjcjjuzBwBox2UKKQx9nrEVNf2
5TFYA6LMzmLblEVztb9FySS11YICrSN5aY24tk3Oz0zKMyPoHIiqnYtBbhbJIOWJns072nD3fpkm
IBRUJatuc4XmmyGdCmyCDqj4wgz6EB5slu+HDcQPYYut7oMrlfiOkoRyOesg6oPtg82Xbgi8604m
tnMr5NP2TP4mceJhEXRK/1cahw91SC7PUWkXoAISYZXV0UCyEEzuxKwQQ6alngrVlWKaDc+IgsUy
DOQrn0XmDZ8onLG5KlpXrTcPrx1/272fAAAAAgAvL2V4cG9ydC9oZGEzLzYuMTAuNC9sb2NhbC9j
b25mL2NlcnRzL2MxOWQ0MmM3LjAAAAEwuyr/HAAFWC41MDkAAAMGMIIDAjCCAmsCEEzH6qqYPnHT
kxD4PTqJkZIwDQYJKoZIhvcNAQEFBQAwgcExCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2ln
biwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgMSBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1
dGhvcml0eSAtIEcyMTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRo
b3JpemVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMB4XDTk4MDUx
ODAwMDAwMFoXDTI4MDgwMTIzNTk1OVowgcExCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2ln
biwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgMSBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1
dGhvcml0eSAtIEcyMTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRo
b3JpemVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMIGfMA0GCSqG
SIb3DQEBAQUAA4GNADCBiQKBgQCq0Lq+Fi24g9TK0g+8djHKlNgdk4xWArzZbxpvUjZudVYKVdPf
Q4chEWWKfo+9Id5rMj8bhDSVBZ1BNeuS65bdqlk/AVNtmU/t5eIqWpDBucSmFc/IReumXY6cPvBk
JHalzasab7bYe1FhbqZ/h8jit+U03EGI6glAvnOSPWvndQIDAQABMA0GCSqGSIb3DQEBBQUAA4GB
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
CzAJBgNVBAYTAkFVMQwwCgYDVQQIEwNOU1cxFTATBgNVBAcTDEVhc3QgTGlzbW9yZTEiMCAGA1UE
ChMZU291dGhlcm4gQ3Jvc3MgVW5pdmVyc2l0eTENMAsGA1UECxMESVRUUzEaMBgGA1UEAxMRaWRw
ZGV2LnNjdS5lZHUuYXUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDRlYgqHmZGDWsu
111r6CaubxRYip3p/iXPDk7UCZ7wVCs1V3QJIjEcrO2hubAUE2fG/wWdB/Usc79/PackVCkQznri
RBNY9LvUHLC+9jnyB4vdWdqFBkR58MQn7nxgx/fhLx4KjmSYJsUe4z+rc7Epnqbw0nJyyDrtGO8/
8vkoKGUwPvkvVOSrvYnGCUGpzKaCDnGSU9n8h813vggil2dxvOUUG1/3OV1uzyHfpe7sm6kDnqyj
9XvxlqM9IF79QAnohg/qwOs5aFjz610luLY+nsk5jIx2X1f778FjmULASA0/mbOrvVDJtZfjCtIz
lh85XN0yLIwxKLXd5NbNTIT7AgMBAAGjggGVMIIBkTBzBggrBgEFBQcBAQRnMGUwKgYIKwYBBQUH
MAGGHmh0dHA6Ly9vY3NwLnF1b3ZhZGlzZ2xvYmFsLmNvbTA3BggrBgEFBQcwAoYraHR0cDovL3Ry
dXN0LnF1b3ZhZGlzZ2xvYmFsLmNvbS9xdnNzbGcyLmNydDAcBgNVHREEFTATghFpZHBkZXYuc2N1
LmVkdS5hdTBRBgNVHSAESjBIMEYGDCsGAQQBvlgAAmQBATA2MDQGCCsGAQUFBwIBFihodHRwOi8v
d3d3LnF1b3ZhZGlzZ2xvYmFsLmNvbS9yZXBvc2l0b3J5MA4GA1UdDwEB/wQEAwIFoDAdBgNVHSUE
FjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwHwYDVR0jBBgwFoAUkRlirVsXpzD78N45JbG9jLm4UScw
OgYDVR0fBDMwMTAvoC2gK4YpaHR0cDovL2NybC5xdW92YWRpc2dsb2JhbC5jb20vcXZzc2xnMi5j
cmwwHQYDVR0OBBYEFGpJCtYXQxPZCmszuaNMkiStJD2wMA0GCSqGSIb3DQEBCwUAA4IBAQBrw85L
cmYC+tsbob448QiJHZ6lxYpWADic5TMPTolWTgMBq7MSyZBpsjW0uYQT31+bF7Yo43L8zP4xcck0
/Fedx+BQBXBG7tJ2LyVn/37ibasOe3HGSGc3cnh7u/KTyf7nU3ar/sbczApGmgntXAzqSSDqoMbg
dJ/0t83cZTB5NKo2bjtn1L7WazPqnW39ZUW1J5dpvvF4n8xNMYsOfYNI9EKN/Y+wMMojq+yiRDoS
Qb5RqoHBC+eXF7V4TlXph1hAoL94aFywEllXdORNHKw6ROw5BvhnFKMnrfer9PSoWPaw93KW7pn/
15iDxQpXGWHh7n+PDGIBe/0Isrf16U9iAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2Nv
bmYvY2VydHMvNjkxMDVmNGYuMAAAAUrnGNezAAVYLjUwOQAAA7swggO3MIICn6ADAgECAhAM5+Dl
F9hG/o/lYPwb8DA5MA0GCSqGSIb3DQEBBQUAMGUxCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdp
Q2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5jb20xJDAiBgNVBAMTG0RpZ2lDZXJ0IEFz
c3VyZWQgSUQgUm9vdCBDQTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAwMDAwMDBaMGUxCzAJBgNV
BAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5jb20x
JDAiBgNVBAMTG0RpZ2lDZXJ0IEFzc3VyZWQgSUQgUm9vdCBDQTCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAK0OFc7kQ4BcsYfzt2D5cRKlrtwmlIiq9M71IDkoWGAM+IDaqRWVMmE8tbEo
hIqK3J8KDIMXeo+QrIrneVNcMYQq9g+YMjZ2zN7dPKii72r7IfJSYd+fINcf4rHZ/hhk0hJbX/lY
GDW8R82hNvlrf9SwOD7BG8OMM9nYLxj+KA+zp4PWw25EwGE1lhb+WZyLdm3X8aJLDSv/C3LanmDQ
jpA1xnhVhyChz+VtCshJfDGYM2wi6YfQMlqiuhOCEe05F52ZOnKh5vqk2dUXMXWuhX0irj8BRob2
KHnIsdrkVxfEfhwOsLSSplazvbKX7aqn8LfFqD+VFtD/oZbrCF8Yd08CAwEAAaNjMGEwDgYDVR0P
AQH/BAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFEXroq/0ksuCMS1Ri6enIZ3zbcgP
MB8GA1UdIwQYMBaAFEXroq/0ksuCMS1Ri6enIZ3zbcgPMA0GCSqGSIb3DQEBBQUAA4IBAQCiDrzf
4u3w43JzemSUv/dyZtgy5EJ1Yq6H6/LV2d5Ws5/MzhQouQ2XYFwSTFjk0z2DSUVYlzVpGqhH6lbG
easS2GeBhN9/CTyU5rgmLCC9PbMoifdf/yLil4Qf6WXvh+DfwWdJs13rsgkq6ybteL59PyvztyY1
bV+JAbZJW58BBZurPSXBzLZ/wvFvhsb6ZGjrgS2U60K3+owe3WLxvlBnt2y98/Efaww2BxZ/N3yp
W2168RJGYIPXJwS+S86XvsNnKmgR34DnDDNmvxMNFG7zfx9jEB76jRslbWyPpbdhAbHSoyahEHGd
reLD+cOZUbcrBwjOLuZQsqf6CkUvovDyAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2Nv
bmYvY2VydHMvMzk5ZTc3NTkuMAAAAVGFs8QsAAVYLjUwOQAAA7MwggOvMIICl6ADAgECAhAIO+BW
kEJGsaF1aslZkcdKMA0GCSqGSIb3DQEBBQUAMGExCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdp
Q2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5jb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEds
b2JhbCBSb290IENBMB4XDTA2MTExMDAwMDAwMFoXDTMxMTExMDAwMDAwMFowYTELMAkGA1UEBhMC
VVMxFTATBgNVBAoTDERpZ2lDZXJ0IEluYzEZMBcGA1UECxMQd3d3LmRpZ2ljZXJ0LmNvbTEgMB4G
A1UEAxMXRGlnaUNlcnQgR2xvYmFsIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
AoIBAQDiO+ERct6opNOjV6pQoo8Ld5DJoqXuEs6WWwEJIMwBk6dOMLdT90PEaQBXneKNIt2HBkAA
gQnOzhuDv9/NO3FG4tZmxwWzdicWj3ueHpV97rdIowja1q96DDkGZX9KXR+8F/irvu4o13R/eniZ
WYVoblwjMku/TsDoWm3jcL93EL/8AfaF2ahEEFgyqXUY1dGivkfiJ2r0mjP4SQhgi9RftDqEv6Gq
Skx9Ps9PX2x2XqBLN5Ge3CLmbc4UGo5qy/7NsxRkF8dbKZ4yv/Lu+tMLQtSrt0Ey2gzU7/iB1buN
WD+1G+hJKKJw2jEE3feyFvJMCk4HqO1KPV61f6OQw68nAgMBAAGjYzBhMA4GA1UdDwEB/wQEAwIB
hjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQD3lA1VtFMu2bwo+IbG8OXsj3RVTAfBgNVHSME
GDAWgBQD3lA1VtFMu2bwo+IbG8OXsj3RVTANBgkqhkiG9w0BAQUFAAOCAQEAy5w3qkgTEgr63USc
T1Kw9N+uBPV5eQijJBj8SyuEwC251cf+9MEfWMu4bZx6dOeYKasRteNwoKHNTIiZk4yRcOKrDxy+
k6n/Y9XkB2DTo7+dWwnx1Y7jU/SOY/o/p9u0Zt9iZtbRbkGN8i216ndKn51Y4itZwEAj7S0ogkU+
eVSSJpjggEioN+/w1nlgFt6s6A7NbqxEFzgvSdrhRT4quTZTzzpQBvcu6MRXSWxhIRjVBK14PCw6
gGun668VFOnYicG5OGzikWyK/2S5dyVXMMAbJKPh3OnfR3y1tCQIBTDsLb0Lv0W/ULmp8+uYARKt
yIjGmDRfjQo8xunVlZVt3gAAAAIALi9leHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRz
L2VkNTI0Y2Y1LjAAAAFK5xgzsgAFWC41MDkAAATcMIIE2DCCBEGgAwIBAgIEN0rSQzANBgkqhkiG
9w0BAQUFADCBwzELMAkGA1UEBhMCVVMxFDASBgNVBAoTC0VudHJ1c3QubmV0MTswOQYDVQQLEzJ3
d3cuZW50cnVzdC5uZXQvQ1BTIGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTElMCMGA1UE
CxMcKGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDE6MDgGA1UEAxMxRW50cnVzdC5uZXQgU2Vj
dXJlIFNlcnZlciBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw05OTA1MjUxNjA5NDBaFw0xOTA1
MjUxNjM5NDBaMIHDMQswCQYDVQQGEwJVUzEUMBIGA1UEChMLRW50cnVzdC5uZXQxOzA5BgNVBAsT
Mnd3dy5lbnRydXN0Lm5ldC9DUFMgaW5jb3JwLiBieSByZWYuIChsaW1pdHMgbGlhYi4pMSUwIwYD
VQQLExwoYykgMTk5OSBFbnRydXN0Lm5ldCBMaW1pdGVkMTowOAYDVQQDEzFFbnRydXN0Lm5ldCBT
ZWN1cmUgU2VydmVyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIGdMA0GCSqGSIb3DQEBAQUAA4GL
ADCBhwKBgQDNKIM0VBuJ8w+vN5Ex/68xYMmo6LIQaO2f55M28Qpku0f1BBc/I0dNxScZgSYMVHIN
iC3ZH5oSn7yzcdOAGT9HZnuMNSjSuQrfJNqc1lB5gXpa0zf3wkrYKZImZNHkmGw6AIr1NJtl+O3j
EP/9uElY3KDegjlrgbEWGWG5VLbmQwIBA6OCAdcwggHTMBEGCWCGSAGG+EIBAQQEAwIABzCCARkG
A1UdHwSCARAwggEMMIHeoIHboIHYpIHVMIHSMQswCQYDVQQGEwJVUzEUMBIGA1UEChMLRW50cnVz
dC5uZXQxOzA5BgNVBAsTMnd3dy5lbnRydXN0Lm5ldC9DUFMgaW5jb3JwLiBieSByZWYuIChsaW1p
dHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMTk5OSBFbnRydXN0Lm5ldCBMaW1pdGVkMTowOAYDVQQD
EzFFbnRydXN0Lm5ldCBTZWN1cmUgU2VydmVyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MQ0wCwYD
VQQDEwRDUkwxMCmgJ6AlhiNodHRwOi8vd3d3LmVudHJ1c3QubmV0L0NSTC9uZXQxLmNybDArBgNV
HRAEJDAigA8xOTk5MDUyNTE2MDk0MFqBDzIwMTkwNTI1MTYwOTQwWjALBgNVHQ8EBAMCAQYwHwYD
VR0jBBgwFoAU8BdiE1U9s/8KAGv7UISX8+1i0BowHQYDVR0OBBYEFPAXYhNVPbP/CgBr+1CEl/Pt
YtAaMAwGA1UdEwQFMAMBAf8wGQYJKoZIhvZ9B0EABAwwChsEVjQuMAMCBJAwDQYJKoZIhvcNAQEF
BQADgYEAkNwwAvpkdMKnCqV8IY00F6j7Rw7/JXyNEwr75Ji174z4xRAN95K+8cPV1ZVqBLssziY2
ZcgxxufuP+NXdYR6Ee9GTxj005i7qIcyunL2POI9n9cd2cNgQ4xYDiKWL2KjLB+6rQXvqzJ4h6BU
cxm1XAX5Uj5tLUUL9wqT6u0G+bIAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9j
ZXJ0cy9kMmFkYzc3ZC4wAAABUYW1kWQABVguNTA5AAAEhzCCBIMwggPsoAMCAQICBDie9uQwDQYJ
KoZIhvcNAQEEBQAwgbQxFDASBgNVBAoTC0VudHJ1c3QubmV0MUAwPgYDVQQLFDd3d3cuZW50cnVz
dC5uZXQvR0NDQV9DUFMgaW5jb3JwLiBieSByZWYuIChsaW1pdHMgbGlhYi4pMSUwIwYDVQQLExwo
YykgMjAwMCBFbnRydXN0Lm5ldCBMaW1pdGVkMTMwMQYDVQQDEypFbnRydXN0Lm5ldCBDbGllbnQg
Q2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDAwMjA3MTYxNjQwWhcNMjAwMjA3MTY0NjQwWjCB
tDEUMBIGA1UEChMLRW50cnVzdC5uZXQxQDA+BgNVBAsUN3d3dy5lbnRydXN0Lm5ldC9HQ0NBX0NQ
UyBpbmNvcnAuIGJ5IHJlZi4gKGxpbWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAyMDAwIEVudHJ1
c3QubmV0IExpbWl0ZWQxMzAxBgNVBAMTKkVudHJ1c3QubmV0IENsaWVudCBDZXJ0aWZpY2F0aW9u
IEF1dGhvcml0eTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAk3S0tuTFS9ahaH9i1ez3UVez
ckqY9dCJya1jzU01UWqE1K3JaHlvuOsR24euXCRRE/FUJYSvKSuf44Di2cvdxkVJNIiQXgGX7+pT
pt38wd5LKiXk6TX6VQUG5Yl66qQRVzv8fD02zWc1baSpJVm9ZvX5J+SVZ9Y/koBe8jR9K4UCAwEA
AaOCAZ4wggGaMBEGCWCGSAGG+EIBAQQEAwIABzCB3QYDVR0fBIHVMIHSMIHPoIHMoIHJpIHGMIHD
MRQwEgYDVQQKEwtFbnRydXN0Lm5ldDFAMD4GA1UECxQ3d3d3LmVudHJ1c3QubmV0L0dDQ0FfQ1BT
IGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTElMCMGA1UECxMcKGMpIDIwMDAgRW50cnVz
dC5uZXQgTGltaXRlZDEzMDEGA1UEAxMqRW50cnVzdC5uZXQgQ2xpZW50IENlcnRpZmljYXRpb24g
QXV0aG9yaXR5MQ0wCwYDVQQDEwRDUkwxMCsGA1UdEAQkMCKADzIwMDAwMjA3MTYxNjQwWoEPMjAy
MDAyMDcxNjQ2NDBaMAsGA1UdDwQEAwIBBjAfBgNVHSMEGDAWgBSEi3T9xY3A/ydtIDdFfP4tzrrT
fTAdBgNVHQ4EFgQUhIt0/cWNwP8nbSA3RXz+Lc66030wDAYDVR0TBAUwAwEB/zAdBgkqhkiG9n0H
QQAEEDAOGwhWNS4wOjQuMAMCBJAwDQYJKoZIhvcNAQEEBQADgYEATm81gDvRivUOpyDLLWVV0JL0
54S1BiaDEoQLrDuyRO69z0DbIA66bhTqMOA7Ynx/i2t8SqfVNTy+qFzqS7uTjoBmqw8p/U0tvxqb
CpDFq9rRs4bULyRSXHptxvL+5U0aMIyQ8rrXSj5DftTIUBqH+E+Bx3YLhDpync5lZpeuJl4AAAAC
AC4vZXhwb3J0L2hkYTMvNy4yLjAvbG9jYWwvY29uZi9jZXJ0cy8xMjhiOWM4ZC4wAAABSucYCG4A
BVguNTA5AAAD3DCCA9gwggLAAhEA0B5AiwAAAnwAAAACAAAAATANBgkqhkiG9w0BAQUFADCBqTEL
MAkGA1UEBhMCdXMxDTALBgNVBAgTBFV0YWgxFzAVBgNVBAcTDlNhbHQgTGFrZSBDaXR5MSQwIgYD
VQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xETAPBgNVBAsTCERTVENBIFgxMRYwFAYD
VQQDEw1EU1QgUm9vdENBIFgxMSEwHwYJKoZIhvcNAQkBFhJjYUBkaWdzaWd0cnVzdC5jb20wHhcN
OTgxMjAxMTgxODU1WhcNMDgxMTI4MTgxODU1WjCBqTELMAkGA1UEBhMCdXMxDTALBgNVBAgTBFV0
YWgxFzAVBgNVBAcTDlNhbHQgTGFrZSBDaXR5MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBU
cnVzdCBDby4xETAPBgNVBAsTCERTVENBIFgxMRYwFAYDVQQDEw1EU1QgUm9vdENBIFgxMSEwHwYJ
KoZIhvcNAQkBFhJjYUBkaWdzaWd0cnVzdC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
AoIBAQDSxia256U9wcRo1VBvU8VvSRMJuK8sSI0UaqMXX1r50y51L9goYtGTL/xN1KuH5QjHmeeS
P3W96yW0FcGbGT3SRI3XdCBtNwKPaZNbisQZnfSyDvwWbLmxBZKD0YUsYJQ+RVWg2asIIeZg6Dt0
8plQUWjQAy2xgL6j2FKwRM1DSnCOWIWV4U4s1i1Bb9aE58iYRMpH2ywkpWkmz2u4J2LD9Ml6kiPt
E2eCrkUuReV+cj+FnZRiEOY8kaGtdwDgFezzhIByeo5uYJfHJFkQNINb4aWkabZXNRx4WcbTLzpz
Z+6UygQTBWIGcCOz9HzuRdlkC1tJqqRDzibERBJsuN15AgMBAAEwDQYJKoZIhvcNAQEFBQADggEB
AKI3sj9p+9eGeVRJMZUzK/PRCRRJYmCGpbAR4lDCHQZXPi3oM2S+m6qtXxtN1JmVoouayWJytWnq
2VirNe0VokPWtrwHeWVkc33Xecp71VpRxuFTBJaNOM+jF6w5cWsBw4tTPGPp7nnA5L6SMmR6sx+X
lGK96rIgFZX7l/J4L2M2QDjjRg8d3ayVyudLkHuxS6nUxeua2qrVo5QURo0tH/M61pM69j55/Ojm
sHXt7j3JcMddqoFLRiUcx2wV45VOD6oyN5QKFySSE4RY0mNvK/fmW2ILExewDVJM/v5vXOKRbh39
pGLXaPqOek/SCNqT3PCSEXrQ3HKTDHOTYoVo0PQAAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40L2xv
Y2FsL2NvbmYvY2VydHMvYTY3NzZjNjkuMAAAATC7K1MEAAVYLjUwOQAAB/swggf3MIIHYKADAgEC
AgEAMA0GCSqGSIb3DQEBBQUAMIIBHDELMAkGA1UEBhMCRVMxEjAQBgNVBAgTCUJhcmNlbG9uYTES
MBAGA1UEBxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJUFMgSW50ZXJuZXQgcHVibGlzaGluZyBTZXJ2
aWNlcyBzLmwuMSswKQYDVQQKFCJpcHNAbWFpbC5pcHMuZXMgQy5JLkYuICBCLTYwOTI5NDUyMTMw
MQYDVQQLEypJUFMgQ0EgQ2hhaW5lZCBDQXMgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxMzAxBgNV
BAMTKklQUyBDQSBDaGFpbmVkIENBcyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEeMBwGCSqGSIb3
DQEJARYPaXBzQG1haWwuaXBzLmVzMB4XDTAxMTIyOTAwNTM1OFoXDTI1MTIyNzAwNTM1OFowggEc
MQswCQYDVQQGEwJFUzESMBAGA1UECBMJQmFyY2Vsb25hMRIwEAYDVQQHEwlCYXJjZWxvbmExLjAs
BgNVBAoTJUlQUyBJbnRlcm5ldCBwdWJsaXNoaW5nIFNlcnZpY2VzIHMubC4xKzApBgNVBAoUImlw
c0BtYWlsLmlwcy5lcyBDLkkuRi4gIEItNjA5Mjk0NTIxMzAxBgNVBAsTKklQUyBDQSBDaGFpbmVk
IENBcyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEzMDEGA1UEAxMqSVBTIENBIENoYWluZWQgQ0Fz
IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXMw
gZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBANxWkkmylCC8mE9Q62ikp0kLv9Ix6MdPwoYL+mj9
Q1qK82CSNZk4u00DUiFb8DeZNeFBIIGFgQVxgZ20lRmpX3Y0LmM3NVeOtB9CPxVc4XrBXxMYMjHJ
rb6jx4NmHrmcBBPLacEG3jAGuzOjtR/wj2/O/5boVL5mgK5r20GENqI9AgMBAAGjggRDMIIEPzAd
BgNVHQ4EFgQUoa0xsfk+4RemyKs0/FKHCR5iUkEwggFOBgNVHSMEggFFMIIBQYAUoa0xsfk+4Rem
yKs0/FKHCR5iUkGhggEkpIIBIDCCARwxCzAJBgNVBAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmEx
EjAQBgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UEChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2Vy
dmljZXMgcy5sLjErMCkGA1UEChQiaXBzQG1haWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEz
MDEGA1UECxMqSVBTIENBIENoYWluZWQgQ0FzIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MTMwMQYD
VQQDEypJUFMgQ0EgQ2hhaW5lZCBDQXMgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxHjAcBgkqhkiG
9w0BCQEWD2lwc0BtYWlsLmlwcy5lc4IBADAMBgNVHRMEBTADAQH/MAwGA1UdDwQFAwMH/4AwawYD
VR0lBGQwYgYIKwYBBQUHAwEGCCsGAQUFBwMCBggrBgEFBQcDAwYIKwYBBQUHAwQGCCsGAQUFBwMI
BgorBgEEAYI3AgEVBgorBgEEAYI3AgEWBgorBgEEAYI3CgMBBgorBgEEAYI3CgMEMBEGCWCGSAGG
+EIBAQQEAwIABzAaBgNVHREEEzARgQ9pcHNAbWFpbC5pcHMuZXMwGgYDVR0SBBMwEYEPaXBzQG1h
aWwuaXBzLmVzMEIGCWCGSAGG+EIBDQQ1FjNDaGFpbmVkIENBIENlcnRpZmljYXRlIGlzc3VlZCBi
eSBodHRwOi8vd3d3Lmlwcy5lcy8wKQYJYIZIAYb4QgECBBwWGmh0dHA6Ly93d3cuaXBzLmVzL2lw
czIwMDIvMDcGCWCGSAGG+EIBBAQqFihodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL2lwczIwMDJD
QUMuY3JsMDwGCWCGSAGG+EIBAwQvFi1odHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL3Jldm9jYXRp
b25DQUMuaHRtbD8wOQYJYIZIAYb4QgEHBCwWKmh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcmVu
ZXdhbENBQy5odG1sPzA3BglghkgBhvhCAQgEKhYoaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9w
b2xpY3lDQUMuaHRtbDBtBgNVHR8EZjBkMC6gLKAqhihodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAy
L2lwczIwMDJDQUMuY3JsMDKgMKAuhixodHRwOi8vd3d3YmFjay5pcHMuZXMvaXBzMjAwMi9pcHMy
MDAyQ0FDLmNybDAvBggrBgEFBQcBAQQjMCEwHwYIKwYBBQUHMAGGE2h0dHA6Ly9vY3NwLmlwcy5l
cy8wDQYJKoZIhvcNAQEFBQADgYEARHIwnVZYokEbKLeV4aYalV+neEAr79uWSvxMcWPZc5W9AuKi
Bse+lyqTgDSGA/rc2D0eB80ec0MkYPUdYdzclqC8+x3j5xIAJzMCwMArUz3YawOBo9vWk5Ug79OW
fiaQiZwmm81vZqvtAyJEOMxZvZ/b9geiAX8mxGP1JUJeYr0AAAACAC8vZXhwb3J0L2hkYTMvNi4x
MC40L2xvY2FsL2NvbmYvY2VydHMvYTE1YjNiNmIuMAAAATC7KvW3AAVYLjUwOQAAAy0wggMpMIIC
kqADAgECAgQ2btPOMA0GCSqGSIb3DQEBBQUAMEYxCzAJBgNVBAYTAlVTMSQwIgYDVQQKExtEaWdp
dGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xETAPBgNVBAsTCERTVENBIEUyMB4XDTk4MTIwOTE5MTcy
NloXDTE4MTIwOTE5NDcyNlowRjELMAkGA1UEBhMCVVMxJDAiBgNVBAoTG0RpZ2l0YWwgU2lnbmF0
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
AAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzL2JkYTRjYzg0LjAAAAFRhbOH
ogAFWC41MDkAAAOoMIIDpDCCAoygAwIBAgIBATANBgkqhkiG9w0BAQUFADBjMQswCQYDVQQGEwJV
UzEcMBoGA1UEChMTQW1lcmljYSBPbmxpbmUgSW5jLjE2MDQGA1UEAxMtQW1lcmljYSBPbmxpbmUg
Um9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAxMB4XDTAyMDUyODA2MDAwMFoXDTM3MTExOTIw
NDMwMFowYzELMAkGA1UEBhMCVVMxHDAaBgNVBAoTE0FtZXJpY2EgT25saW5lIEluYy4xNjA0BgNV
BAMTLUFtZXJpY2EgT25saW5lIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgMTCCASIwDQYJ
KoZIhvcNAQEBBQADggEPADCCAQoCggEBAKgv6KRpBgNHw+kqmP8ZonCaxlCyfqXfaE0bfA+2l2h9
LaaLl+lkhsmj76CGv2BlnEtUiMJIxUo5vxTjWVXlGbR0yLQFOVwWpeKVBeASrlmLojNoWBym1BW3
2J/X3HGrfpq/m44zDyL9Hy7nBzbvYjnF3cu6JRQj3gzGPTzOggjmZj7aUTsWOqMFf6Dch9Wc/HKp
oH145LcxVR5lu9RhsCFg7RAycsWSJR74kEoYeEfffjA3PlAb2xzTa5qGUwew76wGePiEmf4hjUyA
tgyC9mZweRrTT6PP8c9GsEsPPt2IYriMqQkoO3rHl+Ee5fSfwMCuJKDIodkP1nsmgmkyPacCAwEA
AaNjMGEwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUAK3Zo/Z59m50qX8zPYEX10zPM94wHwYD
VR0jBBgwFoAUAK3Zo/Z59m50qX8zPYEX10zPM94wDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEB
BQUAA4IBAQB8itEfGDeC4Liwo+1WlchiYZwFos3CYiZhzRAW18y0ZTTQEYqtqKkFZu90821fnZmv
9ov761KyBZiibyrFVL0lvV+uyIbqRizBs73B6UlwGBaXCBOMIOAbLjpHyx7kADCVW/RFo8AasAFO
q73AI25jP4BKxQft3OJvx8Fi8eNy1gTIdGcL+oiroQHIb/AUr9KZzVGTfu0uOMe9zkZQPXLjeSWd
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
v27BnuvEkLKFqLu3QuAPBznf+56QstHBPlOfA0Swfkv0b+R8H+fiseS4mu/Dvc7eCzI02d4o7TNr
xNTXPRJYq30JLctw9ROKlKEnpNZwxW2Utcl9naDSxghJ2WabptP0C9zFJlfhkTDqzQAAAAIALi9l
eHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzLzQxODRkZTM5LjAAAAFK5xiayQAFWC41
MDkAAAg8MIIIODCCB6GgAwIBAgIBADANBgkqhkiG9w0BAQUFADCCAR4xCzAJBgNVBAYTAkVTMRIw
EAYDVQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UEChMlSVBTIEludGVy
bmV0IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjErMCkGA1UEChQiaXBzQG1haWwuaXBzLmVzIEMu
SS5GLiAgQi02MDkyOTQ1MjE0MDIGA1UECxMrSVBTIENBIFRpbWVzdGFtcGluZyBDZXJ0aWZpY2F0
aW9uIEF1dGhvcml0eTE0MDIGA1UEAxMrSVBTIENBIFRpbWVzdGFtcGluZyBDZXJ0aWZpY2F0aW9u
IEF1dGhvcml0eTEeMBwGCSqGSIb3DQEJARYPaXBzQG1haWwuaXBzLmVzMB4XDTAxMTIyOTAxMTAx
OFoXDTI1MTIyNzAxMTAxOFowggEeMQswCQYDVQQGEwJFUzESMBAGA1UECBMJQmFyY2Vsb25hMRIw
EAYDVQQHEwlCYXJjZWxvbmExLjAsBgNVBAoTJUlQUyBJbnRlcm5ldCBwdWJsaXNoaW5nIFNlcnZp
Y2VzIHMubC4xKzApBgNVBAoUImlwc0BtYWlsLmlwcy5lcyBDLkkuRi4gIEItNjA5Mjk0NTIxNDAy
BgNVBAsTK0lQUyBDQSBUaW1lc3RhbXBpbmcgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxNDAyBgNV
BAMTK0lQUyBDQSBUaW1lc3RhbXBpbmcgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxHjAcBgkqhkiG
9w0BCQEWD2lwc0BtYWlsLmlwcy5lczCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAvLjuVqWa
jOY2ycJioGaBjRrVetJznw6EZLqVtJCneK/K/lRhW86yIFcBrkSSQxA4Efdo/BdApWgnMjvEp+ZC
ccWZ73b/K5Uk9UmSGGjKALWkWi9uy9YbLA1UZ2t6KaFYq6JaANZbuxjC3/YeE1Z2m6Vo4pjOxgOK
NNtMg0GmqaMCAwEAAaOCBIAwggR8MB0GA1UdDgQWBBSL0BBQCYHynQnVDmB4AyKiP8jKZjCCAVAG
A1UdIwSCAUcwggFDgBSL0BBQCYHynQnVDmB4AyKiP8jKZqGCASakggEiMIIBHjELMAkGA1UEBhMC
RVMxEjAQBgNVBAgTCUJhcmNlbG9uYTESMBAGA1UEBxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJUFMg
SW50ZXJuZXQgcHVibGlzaGluZyBTZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJpcHNAbWFpbC5pcHMu
ZXMgQy5JLkYuICBCLTYwOTI5NDUyMTQwMgYDVQQLEytJUFMgQ0EgVGltZXN0YW1waW5nIENlcnRp
ZmljYXRpb24gQXV0aG9yaXR5MTQwMgYDVQQDEytJUFMgQ0EgVGltZXN0YW1waW5nIENlcnRpZmlj
YXRpb24gQXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXOCAQAwDAYDVR0T
BAUwAwEB/zAMBgNVHQ8EBQMDB/+AMGsGA1UdJQRkMGIGCCsGAQUFBwMBBggrBgEFBQcDAgYIKwYB
BQUHAwMGCCsGAQUFBwMEBggrBgEFBQcDCAYKKwYBBAGCNwIBFQYKKwYBBAGCNwIBFgYKKwYBBAGC
NwoDAQYKKwYBBAGCNwoDBDARBglghkgBhvhCAQEEBAMCAAcwGgYDVR0RBBMwEYEPaXBzQG1haWwu
aXBzLmVzMBoGA1UdEgQTMBGBD2lwc0BtYWlsLmlwcy5lczBHBglghkgBhvhCAQ0EOhY4VGltZXN0
YW1waW5nIENBIENlcnRpZmljYXRlIGlzc3VlZCBieSBodHRwOi8vd3d3Lmlwcy5lcy8wKQYJYIZI
AYb4QgECBBwWGmh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvMEAGCWCGSAGG+EIBBAQzFjFodHRw
Oi8vd3d3Lmlwcy5lcy9pcHMyMDAyL2lwczIwMDJUaW1lc3RhbXBpbmcuY3JsMEUGCWCGSAGG+EIB
AwQ4FjZodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL3Jldm9jYXRpb25UaW1lc3RhbXBpbmcuaHRt
bD8wQgYJYIZIAYb4QgEHBDUWM2h0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcmVuZXdhbFRpbWVz
dGFtcGluZy5odG1sPzBABglghkgBhvhCAQgEMxYxaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9w
b2xpY3lUaW1lc3RhbXBpbmcuaHRtbDB/BgNVHR8EeDB2MDegNaAzhjFodHRwOi8vd3d3Lmlwcy5l
cy9pcHMyMDAyL2lwczIwMDJUaW1lc3RhbXBpbmcuY3JsMDugOaA3hjVodHRwOi8vd3d3YmFjay5p
cHMuZXMvaXBzMjAwMi9pcHMyMDAyVGltZXN0YW1waW5nLmNybDAvBggrBgEFBQcBAQQjMCEwHwYI
KwYBBQUHMAGGE2h0dHA6Ly9vY3NwLmlwcy5lcy8wDQYJKoZIhvcNAQEFBQADgYEAZbrBzAAalZHK
6Ww6vzoeFAh8+4Pua2JR0zORtWB5fgTYXXk36MNbsMRnLWhasl8OCvrNPzpFoeo2zyYepxEoxZSP
hExTCMWTs/zif/WN87GphV+I3pGW7hdbrqXqcGV4LCFkAZXOzkw+UPS2Wctjjba9GNSHSl/c7+lW
8AoM6HUAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy8zMzgxNWUxNS4w
AAABUYW0tsAABVguNTA5AAAHizCCB4cwggVvoAMCAQICAS0wDQYJKoZIhvcNAQELBQAwfTELMAkG
A1UEBhMCSUwxFjAUBgNVBAoTDVN0YXJ0Q29tIEx0ZC4xKzApBgNVBAsTIlNlY3VyZSBEaWdpdGFs
IENlcnRpZmljYXRlIFNpZ25pbmcxKTAnBgNVBAMTIFN0YXJ0Q29tIENlcnRpZmljYXRpb24gQXV0
aG9yaXR5MB4XDTA2MDkxNzE5NDYzN1oXDTM2MDkxNzE5NDYzNlowfTELMAkGA1UEBhMCSUwxFjAU
BgNVBAoTDVN0YXJ0Q29tIEx0ZC4xKzApBgNVBAsTIlNlY3VyZSBEaWdpdGFsIENlcnRpZmljYXRl
IFNpZ25pbmcxKTAnBgNVBAMTIFN0YXJ0Q29tIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIICIjAN
BgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAwYjbCbxsRnx4n5V7tTOQ8nJi1sE2ICIkXs7pd/JD
CqIGZKTMjjb4OOYj8G5tsTzdcqOFHKHTPbQzK9Mvr/7qsEFZZ7bEBn0KnnSF1nlMgDd63zkFUln3
9BtGQ6TShYXSw3HzdWI0uiyKfx6P7u000BHHls1SPboz1t1N3gs7SkufwiYv+rUWHHI1d8o8XebK
4SaLGjZ2XAHbdBQl/u21oIgP3XjKLR8HlzABLXJ5+kbWEyqouaarg0kd5fLv3eQBjhgKj2NTFoVi
qQ4ZOsy1ZqbCa3QH5Cvhdj60bdj2ROFzYh87xL6gU1YlbFEJ96qryr92/W2b853bvz1mvAxWqq+Y
SJU6S9+nWFDZOHWpW+pDDAL/mevobE1wWyllnN2qXcyvATHsDOvSjejqnHvmbvcnZgwaSNduQuM/
3iE+e+ENcPtjqqhsGlS0XCV6yaLJixamuyx+F14FTVhuEh0B7hIQDcYyfxj//PT6zW6R6DZJvhpI
aYvClk0aErJpF8EKkNb6eSJIv7p7afhwx/p6N9jYDdJ2T1f/kLfjkdLd78Jgt2c63f6qnPDUi39y
Is7Gn5e2+K+KoBCo2fsYxra1XFI8ibYZKnMBCg8DsxJg8novgdujbv8mMJf1i92JV7atPbOvK8W3
dgLwpdYrmoYUKnL24zOMXQlLE9+7jHQTUksCAwEAAaOCAhAwggIMMA8GA1UdEwEB/wQFMAMBAf8w
DgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBROC+8apEBbpRdphzDKNGhD0EGu8jAfBgNVHSMEGDAW
gBROC+8apEBbpRdphzDKNGhD0EGu8jCCAVoGA1UdIASCAVEwggFNMIIBSQYLKwYBBAGBtTcBAQEw
ggE4MC4GCCsGAQUFBwIBFiJodHRwOi8vd3d3LnN0YXJ0c3NsLmNvbS9wb2xpY3kucGRmMDQGCCsG
AQUFBwIBFihodHRwOi8vd3d3LnN0YXJ0c3NsLmNvbS9pbnRlcm1lZGlhdGUucGRmMIHPBggrBgEF
BQcCAjCBwjAnFiBTdGFydCBDb21tZXJjaWFsIChTdGFydENvbSkgTHRkLjADAgEBGoGWTGltaXRl
ZCBMaWFiaWxpdHksIHJlYWQgdGhlIHNlY3Rpb24gKkxlZ2FsIExpbWl0YXRpb25zKiBvZiB0aGUg
U3RhcnRDb20gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgUG9saWN5IGF2YWlsYWJsZSBhdCBodHRw
Oi8vd3d3LnN0YXJ0c3NsLmNvbS9wb2xpY3kucGRmMBEGCWCGSAGG+EIBAQQEAwIABzA4BglghkgB
hvhCAQ0EKxYpU3RhcnRDb20gRnJlZSBTU0wgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwDQYJKoZI
hvcNAQELBQADggIBAI6P59yUeXzxhX+fSW9ryl37jP4ExcFi0X1CirxTt5QDZjA/secKp1AgVSV/
dnoUDesEDkDmPtiIqwcng6l1pjdzx/1L0k2tF0DIRr47f1H8w7YFMdzNhSJOcbfycV6wGsa6k4t4
kkqF+HgPg/4vrSz35KS7LdDnDTq4Ps72ePauRyTKozU2zsfGh5ja7Pvpss4nm4jDBKH2C1lor8nb
EA9N9mRjXKUSb5Kyk5THiBcOk7Z+YouQf6tOn/zjdRRPKjLfWw3g9XuTDauhz4fhpQRF6DwSpQnF
sNG3U/NgFLqFaWohfB91YRcgF3tsO0EpXOGsWtHNjJvrYB0Z7PflsNr5eRilRT9JQ1fS3STVLKP9
kY0nteXrFAaaTHshuzqtMAYYwNjBayx/WVxdkbFwIlfrimtIStUPKezGQMAviExoARd39CQZT736
4bIgIUvdGtgpfaq43lTsIVWAbB71MMijEOWy5ioUMcOFLYyYsYZaT4lZLbnH9xzIin/AnQVK5kJP
YqNtKaQfhavb5YHIrSo9TF1bhCZxxIVecSTKpRts2GHTGuBU2866qTK1IvZzQQlduBddDg+ZkNZH
2m8KOmIoFGeC2fHQgFmbyzHYmw+Md061aIrybPYkDi1scMVz0d4U0HGPttN7AvbjuNQJbmuedYQ5
5n8lpfJIAMCkAdo/AAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvYmY4
NzU5MGYuMAAAAVGFtX/2AAVYLjUwOQAABWwwggVoMIIEUKADAgECAhA7Wcd7zVtXnr03Uqx2tKoa
MA0GCSqGSIb3DQEBBQUAMGIxEjAQBgNVBAoTCWJlVFJVU1RlZDEbMBkGA1UECxMSYmVUUlVTVGVk
IFJvb3QgQ0FzMS8wLQYDVQQDEyZiZVRSVVNUZWQgUm9vdCBDQSAtIFJTQSBJbXBsZW1lbnRhdGlv
bjAeFw0wMjA0MTExMTE4MTNaFw0yMjA0MTIxMTA3MjVaMGIxEjAQBgNVBAoTCWJlVFJVU1RlZDEb
MBkGA1UECxMSYmVUUlVTVGVkIFJvb3QgQ0FzMS8wLQYDVQQDEyZiZVRSVVNUZWQgUm9vdCBDQSAt
IFJTQSBJbXBsZW1lbnRhdGlvbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOS6NDAJ
jlfQuQYsb24kgCK/XUOm+k+sguccaHCFG6Nutap42W4HSz/p3/Xq6FShYYoOL2l1GLcM5RSNcW6Y
uFX8DJXQm27hLYjUOkBrkvGZlmTe2/949O6WHUeJfNS+uYh3IzoJ5gSebape0si9mk4Z34nqWw5+
w+S08OBpO4gPQZD41HFDJMGPJks7Vun/jGw36UWthYxTw2CGkEqWybNUsLsX8BxF2dQbGWRWChn3
zOH/hq9+WF6sepAfySg5RXuitsecH9qF1CGGWTCTvlMzN/bvQc8zx6tyayX181MbDEwu8XVL76CH
9/6KFdBs1cv5aFO5cBUTwvUu+0M1dS0CAwEAAaOCAhgwggIUMAwGA1UdEwQFMAMBAf8wggG1BgNV
HSAEggGsMIIBqDCCAaQGDysGAQQBsT4AAAMJKIORMTCCAY8wQQYIKwYBBQUHAgEWNWh0dHA6Ly93
d3cuYmV0cnVzdGVkLmNvbS9wcm9kdWN0c19zZXJ2aWNlcy9pbmRleC5odG1sMIIBSAYIKwYBBQUH
AgIwggE6GoIBNlJlbGlhbmNlIG9uIG9yIHVzZSBvZiB0aGlzIENlcnRpZmljYXRlIGNyZWF0ZXMg
YW4gYWNrbm93bGVkZ21lbnQgYW5kIGFjY2VwdGFuY2Ugb2YgdGhlIHRoZW4gYXBwbGljYWJsZSBz
dGFuZGFyZCB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB1c2UsIHRoZSBDZXJ0aWZpY2F0aW9uIFBy
YWN0aWNlIFN0YXRlbWVudCBhbmQgdGhlIFJlbHlpbmcgUGFydHkgQWdyZWVtZW50LCB3aGljaCBj
YW4gYmUgZm91bmQgYXQgdGhlIGJlVFJVU1RlZCB3ZWIgc2l0ZSwgaHR0cDovL3d3dy5iZXRydXN0
ZWQuY29tL3Byb2R1Y3RzX3NlcnZpY2VzL2luZGV4Lmh0bWwwCwYDVR0PBAQDAgEGMB8GA1UdIwQY
MBaAFKnsFH752UPMUysUrc/38FmJQc0ZMB0GA1UdDgQWBBSp7BR++dlDzFMrFK3P9/BZiUHNGTAN
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
XKU9WgCOBuM8azJ78p/wtv3f8CgYSPDGvNC/NICWwkqxbY7HkEXeL2esRQSjetxVkslHZtgajMft
nE6a4BK7tWpMhOHhIg2HAGT+jH1iOWWm70K2gCUSYQGoJBNwABEmX/o1UMVIzAZH6CfYcI1fZOah
RCZeIuySzf9CmkQhbVzF4yIdX0cS585fXfrYqrEzLdl28k46Mwwrsy2QBgAAAAIALi9leHBvcnQv
aGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzLzBlODJmODNhLjAAAAFRhbUqFQAFWC41MDkAAAMl
MIIDITCCAoqgAwIBAgIBADANBgkqhkiG9w0BAQQFADCByzELMAkGA1UEBhMCWkExFTATBgNVBAgT
DFdlc3Rlcm4gQ2FwZTESMBAGA1UEBxMJQ2FwZSBUb3duMRowGAYDVQQKExFUaGF3dGUgQ29uc3Vs
dGluZzEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lvbjEhMB8GA1UEAxMY
VGhhd3RlIFBlcnNvbmFsIEJhc2ljIENBMSgwJgYJKoZIhvcNAQkBFhlwZXJzb25hbC1iYXNpY0B0
aGF3dGUuY29tMB4XDTk2MDEwMTAwMDAwMFoXDTIwMTIzMTIzNTk1OVowgcsxCzAJBgNVBAYTAlpB
MRUwEwYDVQQIEwxXZXN0ZXJuIENhcGUxEjAQBgNVBAcTCUNhcGUgVG93bjEaMBgGA1UEChMRVGhh
d3RlIENvbnN1bHRpbmcxKDAmBgNVBAsTH0NlcnRpZmljYXRpb24gU2VydmljZXMgRGl2aXNpb24x
ITAfBgNVBAMTGFRoYXd0ZSBQZXJzb25hbCBCYXNpYyBDQTEoMCYGCSqGSIb3DQEJARYZcGVyc29u
YWwtYmFzaWNAdGhhd3RlLmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAvLyTU23AUE+C
FeZIlDWmWr5vQvoPR+53dXLdjUmbllegeNTKP1GzaQuRdhciB5dqxFGTS+CN7zeVoQxN2jSQHReJ
l+A1OFdKwPQIcOk8RHtQfmGakOMj04gRRif1CwcOu93RfyAKiLlWCy4cgNrx454p7xS9CkT7G1sY
0b8jkyECAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQQFAAOBgQAt4plrsD16
iddZopQBHyvdEktTwq1/qqcAXJFAVyVKOKqEcLnZgA+le1z7c8a914phXAPjLSeoF+CEhULcXpvG
t7Jtu3Sv5D/Lp7ew4F2+eIMllNLbgQ95B21P9DkVWlIBe94y1k049hJcBlDfBVu9FEuh3ym6O0GN
92NWod8isQAAAAIALy9leHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy81YTUzNzJm
Yy4wAAABMLsrfm8ABVguNTA5AAAFTzCCBUswggS0oAMCAQICAWkwDQYJKoZIhvcNAQEEBQAwgZkx
CzAJBgNVBAYTAkhVMREwDwYDVQQHEwhCdWRhcGVzdDEnMCUGA1UEChMeTmV0TG9jayBIYWxvemF0
Yml6dG9uc2FnaSBLZnQuMRowGAYDVQQLExFUYW51c2l0dmFueWtpYWRvazEyMDAGA1UEAxMpTmV0
TG9jayBVemxldGkgKENsYXNzIEIpIFRhbnVzaXR2YW55a2lhZG8wHhcNOTkwMjI1MTQxMDIyWhcN
MTkwMjIwMTQxMDIyWjCBmTELMAkGA1UEBhMCSFUxETAPBgNVBAcTCEJ1ZGFwZXN0MScwJQYDVQQK
Ex5OZXRMb2NrIEhhbG96YXRiaXp0b25zYWdpIEtmdC4xGjAYBgNVBAsTEVRhbnVzaXR2YW55a2lh
ZG9rMTIwMAYDVQQDEylOZXRMb2NrIFV6bGV0aSAoQ2xhc3MgQikgVGFudXNpdHZhbnlraWFkbzCB
nzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAseoE7CCgI8KPOGDPx0az1Rv++7mZngTcHH+MSoGY
7qTUyooXuSJ/gwp1TJvAadhkOaPtkqP9W1x0GsBHyjppdpq64kQX/Eyj1f64l4iviAOJH6TyBD7I
Bwvm+bMvemIUCUYUymT1i4C1YqjYa9Zxky2zvwlUWO0G66h73EOxoWkCAwEAAaOCAp8wggKbMBIG
A1UdEwEB/wQIMAYBAf8CAQQwDgYDVR0PAQH/BAQDAgAGMBEGCWCGSAGG+EIBAQQEAwIABzCCAmAG
CWCGSAGG+EIBDQSCAlEWggJNRklHWUVMRU0hIEV6ZW4gdGFudXNpdHZhbnkgYSBOZXRMb2NrIEtm
dC4gQWx0YWxhbm9zIFN6b2xnYWx0YXRhc2kgRmVsdGV0ZWxlaWJlbiBsZWlydCBlbGphcmFzb2sg
YWxhcGphbiBrZXN6dWx0LiBBIGhpdGVsZXNpdGVzIGZvbHlhbWF0YXQgYSBOZXRMb2NrIEtmdC4g
dGVybWVrZmVsZWxvc3NlZy1iaXp0b3NpdGFzYSB2ZWRpLiBBIGRpZ2l0YWxpcyBhbGFpcmFzIGVs
Zm9nYWRhc2FuYWsgZmVsdGV0ZWxlIGF6IGVsb2lydCBlbGxlbm9yemVzaSBlbGphcmFzIG1lZ3Rl
dGVsZS4gQXogZWxqYXJhcyBsZWlyYXNhIG1lZ3RhbGFsaGF0byBhIE5ldExvY2sgS2Z0LiBJbnRl
cm5ldCBob25sYXBqYW4gYSBodHRwczovL3d3dy5uZXRsb2NrLm5ldC9kb2NzIGNpbWVuIHZhZ3kg
a2VyaGV0byBheiBlbGxlbm9yemVzQG5ldGxvY2submV0IGUtbWFpbCBjaW1lbi4gSU1QT1JUQU5U
ISBUaGUgaXNzdWFuY2UgYW5kIHRoZSB1c2Ugb2YgdGhpcyBjZXJ0aWZpY2F0ZSBpcyBzdWJqZWN0
IHRvIHRoZSBOZXRMb2NrIENQUyBhdmFpbGFibGUgYXQgaHR0cHM6Ly93d3cubmV0bG9jay5uZXQv
ZG9jcyBvciBieSBlLW1haWwgYXQgY3BzQG5ldGxvY2submV0LjANBgkqhkiG9w0BAQQFAAOBgQAE
266MF6/4DpAxTs0+CcBtOrD4M0xHTON1iBCXrLA4FZHGKZbMIcBtPKV0z9iCpTnDZeNCcLsikON9
2zV24aC12p9wbpMaMDkdMNsu43yykbLRNyn6udYXXEdP4x0465/Ve5WoKJ4VStHR0CsAl6DikjYr
Y6xYAWszKVCGg/EBSAAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzL2Q1
MzdmYmE2LjAAAAFRhbWVSAAFWC41MDkAAAQvMIIEKzCCAxOgAwIBAgIEOsylTDANBgkqhkiG9w0B
AQUFADBDMQswCQYDVQQGEwJESzEVMBMGA1UEChMMVERDIEludGVybmV0MR0wGwYDVQQLExRUREMg
SW50ZXJuZXQgUm9vdCBDQTAeFw0wMTA0MDUxNjMzMTdaFw0yMTA0MDUxNzAzMTdaMEMxCzAJBgNV
BAYTAkRLMRUwEwYDVQQKEwxUREMgSW50ZXJuZXQxHTAbBgNVBAsTFFREQyBJbnRlcm5ldCBSb290
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
Zi9jZXJ0cy8xMWEwOWIzOC4wAAABMLsrascABVguNTA5AAAFHTCCBRkwggQBoAMCAQICBD5IvcQw
DQYJKoZIhvcNAQEFBQAwMTELMAkGA1UEBhMCREsxDDAKBgNVBAoTA1REQzEUMBIGA1UEAxMLVERD
IE9DRVMgQ0EwHhcNMDMwMjExMDgzOTMwWhcNMzcwMjExMDkwOTMwWjAxMQswCQYDVQQGEwJESzEM
MAoGA1UEChMDVERDMRQwEgYDVQQDEwtUREMgT0NFUyBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP
ADCCAQoCggEBAKxi9mEgss/AxoXX43nmzO3yOZKkly5ko4Rbh5xM/aTzxF8hvVYQ69suYeyTaeOj
zL2ZwwX8BrjKNhz+kI5JTMRWmi9WvM97DPFvR6YNQ03i6R05NM2NLNkSmPnj4cFKfIY4xKnEYYjS
Xq8aJk3V5KAiR4TZZLcZlvzsGeSylyZOSkzLjySLVBgcSGF71Yho2l216s0aMMGAg3ZQqk/R1N04
8O8W9OEMUAa/6vt6SaEoKxz2/BUyo3Rqj6nDYilxMeU7pGAXXnTm2hPt6R8fG9GyaHPGEDR1RhAQ
45AAdkDLi7dDCSH/q06TxljppYLbd8Q6mbFylUkE8Lcr+ntZjt0CAwEAAaOCAjcwggIzMA8GA1Ud
EwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMIHsBgNVHSAEgeQwgeEwgd4GCCqBUIEpAQEBMIHR
MC8GCCsGAQUFBwIBFiNodHRwOi8vd3d3LmNlcnRpZmlrYXQuZGsvcmVwb3NpdG9yeTCBnQYIKwYB
BQUHAgIwgZAwChYDVERDMAMCAQEagYFDZXJ0aWZpa2F0ZXIgZnJhIGRlbm5lIENBIHVkc3RlZGVz
IHVuZGVyIE9JRCAxLjIuMjA4LjE2OS4xLjEuMS4gQ2VydGlmaWNhdGVzIGZyb20gdGhpcyBDQSBh
cmUgaXNzdWVkIHVuZGVyIE9JRCAxLjIuMjA4LjE2OS4xLjEuMS4wEQYJYIZIAYb4QgEBBAQDAgAH
MIGBBgNVHR8EejB4MEigRqBEpEIwQDELMAkGA1UEBhMCREsxDDAKBgNVBAoTA1REQzEUMBIGA1UE
AxMLVERDIE9DRVMgQ0ExDTALBgNVBAMTBENSTDEwLKAqoCiGJmh0dHA6Ly9jcmwub2Nlcy5jZXJ0
aWZpa2F0LmRrL29jZXMuY3JsMCsGA1UdEAQkMCKADzIwMDMwMjExMDgzOTMwWoEPMjAzNzAyMTEw
OTA5MzBaMB8GA1UdIwQYMBaAFGC1hexWZH4SGSdnHVAVS3OuO/kSMB0GA1UdDgQWBBRgtYXsVmR+
EhknZx1QFUtzrjv5EjAdBgkqhkiG9n0HQQAEEDAOGwhWNi4wOjQuMAMCBJAwDQYJKoZIhvcNAQEF
BQADggEBAAq6JiZG03OoCfNrCzCZ/YrhV3oR07iU1wkQbqOxOAPRtvJDQSlip3LY+3wF5jFwJ1QY
Top8TuXRyox4iM8b05CL5iP4Cw4zQ32c4goZj8kBPnRddMmLHAPlGMgBTD/LlwVdmHGmmG+2fL03
f77hkyVtb/AKrRcY4QO8BynIrSbo+GHw/SEJfpqOqWh9SGJyvQDqAZm4BoJRgU7x9bSRVLkjegCa
n12N4DxkuRoSkirHgkRyOdziPMbYVfUVTsgFDtvG0GKm7BW0tQKC26yMooHwm5kx9SAgqIhhCgef
lPzQ1xvMLhfzBCd2Z+tUg/2kkH4GPQSjQy3a/Ati6i9fYlMAAAACAC4vZXhwb3J0L2hkYTMvNy4y
LjAvbG9jYWwvY29uZi9jZXJ0cy82ZThiZjk5Ni4wAAABSucYgXAABVguNTA5AAADEDCCAwwwggH0
oAMCAQICAwEAIDANBgkqhkiG9w0BAQUFADA+MQswCQYDVQQGEwJQTDEbMBkGA1UEChMSVW5pemV0
byBTcC4geiBvLm8uMRIwEAYDVQQDEwlDZXJ0dW0gQ0EwHhcNMDIwNjExMTA0NjM5WhcNMjcwNjEx
MTA0NjM5WjA+MQswCQYDVQQGEwJQTDEbMBkGA1UEChMSVW5pemV0byBTcC4geiBvLm8uMRIwEAYD
VQQDEwlDZXJ0dW0gQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDOscEu0098zSXO
GD5PxIxvgGpzyFtR+JvS3LsAXLGg/HUD7oHwiO4jUunmFTONrC0JxXb5KzmAieSXS5ClqHj4c0N7
pGGw2FjM4WxmfpzzCV5VY4TVqO/zsS4waLPEPNisbo2ZWpBONNw2mo+BiFC3bZZCCfPXlYMNQUuw
amv4/A9+Yp9nxO0mXxAmDwhP8KRXKM6PuO1F9m7uJV2qbjm+5JMv2Uegcuv6pluvylM/4g7GllYR
bvfpZqkm2H+VU+0KhYi6TymlQoxetvyFIACqaAuhGoUBnMRGY4KItiKx7v6qRll+zzUs1bbaXfdI
MxRUtuvZb87NiNarG9qWOx1ZAgMBAAGjEzARMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEF
BQADggEBALiNzu/nFLrP7rBEkmy0OT6ihG6tuCF30tR3gofmIEGB7uL4Ebdj0Rc3vhl2JBwEGkzr
Papnby3Uzf5lMXDFG6YCCrpge21YwppJ/mMyC2vjOsCsqzuw6NMJUYwQg8Y04MUr4Bq2YBQnbDJ3
jLyycpjPzcw/ucgkQhTWV/zmJkOpHeWAkM4DVCg+9z/T+E3tago6kxObOxQjE2OcP9GHJ3nlTFHj
Aa2FXRo7sdVzEKTT8rxuZPVaVpCoxw5MdA8ucTv3yEf0aW8V8hFegx6cfFKu/QLaEqhZZxjbvHDd
m7Fp7YDOiUBIag41yilmFSGULOhgKpuFSkDza4ok7AYWLHMAAAACAC4vZXhwb3J0L2hkYTMvNy40
LjAvbG9jYWwvY29uZi9jZXJ0cy9jMTlkNDJjNy4wAAABUYW1gdkABVguNTA5AAADBjCCAwIwggJr
AhBMx+qqmD5x05MQ+D06iZGSMA0GCSqGSIb3DQEBBQUAMIHBMQswCQYDVQQGEwJVUzEXMBUGA1UE
ChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0NsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlm
aWNhdGlvbiBBdXRob3JpdHkgLSBHMjE6MDgGA1UECxMxKGMpIDE5OTggVmVyaVNpZ24sIEluYy4g
LSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29y
azAeFw05ODA1MTgwMDAwMDBaFw0yODA4MDEyMzU5NTlaMIHBMQswCQYDVQQGEwJVUzEXMBUGA1UE
ChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0NsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlm
aWNhdGlvbiBBdXRob3JpdHkgLSBHMjE6MDgGA1UECxMxKGMpIDE5OTggVmVyaVNpZ24sIEluYy4g
LSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29y
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
AUrnGBHFAAVYLjUwOQAAAkAwggI8MIIBpQIQcLrkHRDZKTS2OMp7A8y6vzANBgkqhkiG9w0BAQIF
ADBfMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xNzA1BgNVBAsTLkNsYXNz
IDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNOTYwMTI5MDAwMDAw
WhcNMjgwODAxMjM1OTU5WjBfMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4x
NzA1BgNVBAsTLkNsYXNzIDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkw
gZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMlcWZ7yG4oBFLQQ3wRA2+NXr2pFQI+EDAvRM9nZ
Ec/uAlgfJfcqqEQFquwDH3h/npO5mgCqI33WrIWiY0XHcifM9EzGdXHSOe9PQvB13wqQxo4gb5gP
+KwjX3ApNqTJhuexmiDLU6WF5z2+fZr+JEUz3HYV7Q+icWRMZS6BaEWnAgMBAAEwDQYJKoZIhvcN
AQECBQADgYEAu0wSK88sJgBPFBPdpvv8ChGEjPMoHGeSL3y2xfrf8OiVvB2PbCyoUcxz2KTAU/BO
1ibAdgFXgZJeIfHRsf/n0CFYzWkX40QcnBlEOYlc3JwAD1aNApntopBFTOS7EKQ98DIDDvHO+OjJ
UYzmYp/mn8B9t3KcyTY6a59OqP9kDWQAAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40L2xvY2FsL2Nv
bmYvY2VydHMvNmM1NWNmNzcuMAAAATC7KypHAAVYLjUwOQAAA6YwggOiMIIDC6ADAgECAhAulp6/
tmJs7Hvpc8zjbMGEMA0GCSqGSIb3DQEBBQUAMF8xCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJp
U2lnbiwgSW5jLjE3MDUGA1UECxMuQ2xhc3MgMyBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9u
IEF1dGhvcml0eTAeFw0wMDA4MDQwMDAwMDBaFw0wNDA4MDMyMzU5NTlaMIGnMRcwFQYDVQQKEw5W
ZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazE7MDkGA1UECxMy
VGVybXMgb2YgdXNlIGF0IGh0dHBzOi8vd3d3LnZlcmlzaWduLmNvbS9SUEEgKGMpMDAxLjAsBgNV
BAMTJUNsYXNzIDMgUHVibGljIFByaW1hcnkgT0NTUCBSZXNwb25kZXIwgZ8wDQYJKoZIhvcNAQEB
BQADgY0AMIGJAoGBAPHkCA6Du3XjSOW426bwuavpPGLHXjVb0AJUEdjJ0Va5dku5q3rmzbr2DATW
ftawCmWsTjnj8fctoyU577CLz77bDF1ucPQHzXD3OsA+NRbteIxDz8ImLkfWhn2c8b7WZwwiJaTK
ZeYfengoLz8F2wQhv+FFZv48t4LtWrgWFblVAgMBAAGjggEUMIIBEDAgBgNVHREEGTAXpBUwEzER
MA8GA1UEAxMIT0NTUCAxLTMwNQYDVR0fBC4wLDAqoCigJoYkaHR0cDovL2NybC52ZXJpc2lnbi5j
b20vcGNhMy4xLjEuY3JsMBMGA1UdJQQMMAoGCCsGAQUFBwMJMEIGCCsGAQUFBwEBBDYwNDAyBggr
BgEFBQcwAaYmFiRodHRwOi8vb2NzcC52ZXJpc2lnbi5jb20vb2NzcC9zdGF0dXMwRAYDVR0gBD0w
OzA5BgtghkgBhvhFAQcBATAqMCgGCCsGAQUFBwIBFhxodHRwczovL3d3dy52ZXJpc2lnbi5jb20v
UlBBMAkGA1UdEwQCMAAwCwYDVR0PBAQDAgeAMA0GCSqGSIb3DQEBBQUAA4GBAAL2U2PAqR7y0Isz
MI9Im0ywVrSDcUq+3FDY9bbgC9u9eE/pzwk02ilJnQFzWpGRglQsEwrTdyPPN/xj3qfj9re1aUUo
ScOR3KpHHKmImSwFKo2Nivpi4lq3ACBdOcQowsv8nqiJrls9jhLqMrL86xTXCRUawM0b1bUVTkHV
luNOAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvNjFmNmM5MzQuMAAA
AUrnGFD5AAVYLjUwOQAAA6IwggOeMIIDB6ADAgECAhAJRhfmHdjUHKAMoGLoeYqnMA0GCSqGSIb3
DQEBBQUAMF8xCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE3MDUGA1UECxMu
Q2xhc3MgMiBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wMDA4MDEw
MDAwMDBaFw0wNDA3MzEyMzU5NTlaMIGnMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UE
CxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazE7MDkGA1UECxMyVGVybXMgb2YgdXNlIGF0IGh0dHBz
Oi8vd3d3LnZlcmlzaWduLmNvbS9SUEEgKGMpMDAxLjAsBgNVBAMTJUNsYXNzIDIgUHVibGljIFBy
aW1hcnkgT0NTUCBSZXNwb25kZXIwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBANDKYzFhf0Q0
fAV9Cz1qkMt5S3cKP0vHI+XAYi1+nH4+iIeR0KzoTUmHopaQit0EpQI/jJvpif5ioOJavcjdtHjm
pUKTCGcBwCBN11z0Xdqz4zemUhosTGVNiofZqKPxSVS7PFyAUWjG+0n/C1WrFd37msG5HXQNsoxE
XYn8n/mDAgMBAAGjggEQMIIBDDAgBgNVHREEGTAXpBUwEzERMA8GA1UEAxMIT0NTUCAxLTIwMQYD
VR0fBCowKDAmoCSgIoYgaHR0cDovL2NybC52ZXJpc2lnbi5jb20vcGNhMi5jcmwwEwYDVR0lBAww
CgYIKwYBBQUHAwkwQgYIKwYBBQUHAQEENjA0MDIGCCsGAQUFBzABpiYWJGh0dHA6Ly9vY3NwLnZl
cmlzaWduLmNvbS9vY3NwL3N0YXR1czBEBgNVHSAEPTA7MDkGC2CGSAGG+EUBBwEBMCowKAYIKwYB
BQUHAgEWHGh0dHBzOi8vd3d3LnZlcmlzaWduLmNvbS9SUEEwCQYDVR0TBAIwADALBgNVHQ8EBAMC
B4AwDQYJKoZIhvcNAQEFBQADgYEAH30JbiRGdQSc8yab4zluF++8vaIb0gKEhqvQQJcsxEOINxlr
IqgDcVCdINw2YCCacy1zVWxYmyzCtDQsejNCypHZ6UOvzx7g9cR6qz9yYx6pN+FbO4izE4aCkFfL
V//0Vr4i3eOXqOG8IkPC3U3b9oGekhSeOQ8TVN6C2MBeNI0AAAACAC4vZXhwb3J0L2hkYTMvNy40
LjAvbG9jYWwvY29uZi9jZXJ0cy8xZGY1YTc1Zi4wAAABUYW0z9cABVguNTA5AAAENzCCBDMwggMb
oAMCAQICAwmD8zANBgkqhkiG9w0BAQsFADBNMQswCQYDVQQGEwJERTEVMBMGA1UECgwMRC1UcnVz
dCBHbWJIMScwJQYDVQQDDB5ELVRSVVNUIFJvb3QgQ2xhc3MgMyBDQSAyIDIwMDkwHhcNMDkxMTA1
MDgzNTU4WhcNMjkxMTA1MDgzNTU4WjBNMQswCQYDVQQGEwJERTEVMBMGA1UECgwMRC1UcnVzdCBH
bWJIMScwJQYDVQQDDB5ELVRSVVNUIFJvb3QgQ2xhc3MgMyBDQSAyIDIwMDkwggEiMA0GCSqGSIb3
DQEBAQUAA4IBDwAwggEKAoIBAQDTskrPekfvdZsj+jov1lBFiTU6xmvb/tsAaKjgAxEdN1AIn01K
aJQ1s1PRlGOnIFav3lF47Co980hIUD4K30ZViydtwxBNDZFSQ9iH4F1ONrUhyl85QARfW37Mo8Yr
qUAe2TaE1kjzkh40RiAkwaRRjkoa71A/aV0Zf0XDxwGPUckj6HKutLxWCX8SyxyxrymQCslVzA/T
tBrtRzVaSu2ccwQh0Kq9DBO1AMombMRrDJRalZTaUJrx/6UrZjGkyTig3x0fuAku86foZ1KrlR/g
Rj7YpMPKWsUxgOhImp+Uaf4Z3dhzfIHKlt6O7bMyBWWENObm/VcQtV92vy+wEA3FAgMBAAGjggEa
MIIBFjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBT92hTEnzDeIb0eQjn8q2MjSeDxhDAOBgNV
HQ8BAf8EBAMCAQYwgdMGA1UdHwSByzCByDCBgKB+oHyGemxkYXA6Ly9kaXJlY3RvcnkuZC10cnVz
dC5uZXQvQ049RC1UUlVTVCUyMFJvb3QlMjBDbGFzcyUyMDMlMjBDQSUyMDIlMjAyMDA5LE89RC1U
cnVzdCUyMEdtYkgsQz1ERT9jZXJ0aWZpY2F0ZXJldm9jYXRpb25saXN0MEOgQaA/hj1odHRwOi8v
d3d3LmQtdHJ1c3QubmV0L2NybC9kLXRydXN0X3Jvb3RfY2xhc3NfM19jYV8yXzIwMDkuY3JsMA0G
CSqGSIb3DQEBCwUAA4IBAQB/l9swyN+knH0heoBwzhQSaYgUlWBEAayy6TBPm1DCZth+jTC1cDHp
4mnH83DbIBWG0A3wvqwBdYTOfp9Nv7dgO5zzyh3iXmjYo52X5UBg0jYh/tC0uBfadKN/1N+wmAKs
b2trLCUkcqFl7iVa5eYy5/Lfq0n685BpI9sE2edcWPxl1Je+zPwuCswlKjUE+GCRFXU9Qf8jHxnI
bOuCUwSm5EwiTY2Mus5bc+xkVFBt0ZxV+2nDNsOMvDyFpmsKJg3gk5hgrn7GJJeKYV+RjmaSCYc2
zYubLT72UdRQ1FkovYPyzCh7U4Zt2CaIcNfqkc0+ucrAkG5axl50Zddc/qPiAAAAAgAuL2V4cG9y
dC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvZDU5Mjk3YjguMAAAAVGFtKTPAAVYLjUwOQAA
A3swggN3MIICX6ADAgECAgEAMA0GCSqGSIb3DQEBCwUAMF0xCzAJBgNVBAYTAkpQMSUwIwYDVQQK
ExxTRUNPTSBUcnVzdCBTeXN0ZW1zIENPLixMVEQuMScwJQYDVQQLEx5TZWN1cml0eSBDb21tdW5p
Y2F0aW9uIFJvb3RDQTIwHhcNMDkwNTI5MDUwMDM5WhcNMjkwNTI5MDUwMDM5WjBdMQswCQYDVQQG
EwJKUDElMCMGA1UEChMcU0VDT00gVHJ1c3QgU3lzdGVtcyBDTy4sTFRELjEnMCUGA1UECxMeU2Vj
dXJpdHkgQ29tbXVuaWNhdGlvbiBSb290Q0EyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC
AQEA0BU5UrFSs7rFWYLEXVKuOkNlgEvH8pa82zaX1qZkjKhe8OMKHPfflz1LrvZd7CG1QavNuX52
n775PjY0oDvB9jERRXSTPVeAxfmJmcrlq2rUtdpBkBDB1tZCicK/9DgSlUxUBfc25EWDexRl1twM
TdHefgyrO8QVvjpWplpvdmlSqXq5yOtqml1S0C0KazUWCRCE0GrKOgYAN0fkfldPP4vrZ7iIqsW+
U1WykcR9ubCFGQZ4LtthGvqF9UqRoecW1Y6iOd+UuHAfKD+L/EBeY4M8gyoamWvP3llqO/xvFtcf
/UoQ606CFjqsJwxT8a3VJLBrA1DBLTwW3UQ0Jxp1+wIDAQABo0IwQDAdBgNVHQ4EFgQUCoWpd2UF
mHxAgfgPlyw48QrsPM8wDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcN
AQELBQADggEBAEw6o0SsuUWxx5N+yAsKQt9k6hzuWWwIuolfaspKlZ56jwfF2kVygnEOOtLMb6e0
oSO79iSfyxf+jKbOwtLbzI38cfwDKcFsXTNfZLZlO4lvGHZ49dyiSB8ZP46T6/H6F+7NTuMEElXW
5eTd+z4FfOIdXsanvJdPaDr16S4KQ7avV1xiaHy3/aOKhKCsYr4rCYc08GoBu5spVjz+ADfPI2zx
Tqq2dEYSbJHuNNXsmpHnRL6QMXLVSQL2AuX0H+t82ZZVqf/sivmZR/81WgKqBMuKW4dxKZG9pLR6
Db2a9VcjAAchFz9KOdEFSQuntjeBpV2MqjNegSh8p30n6wCujTcAAAACAC8vZXhwb3J0L2hkYTMv
Ni4xMC40L2xvY2FsL2NvbmYvY2VydHMvZmY3ODM2OTAuMAAAATC7K3C3AAVYLjUwOQAABHgwggR0
MIIDXKADAgECAhBEvgyLUAAktBHTNir+ZQr9MA0GCSqGSIb3DQEBBQUAMIGXMQswCQYDVQQGEwJV
UzELMAkGA1UECBMCVVQxFzAVBgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYDVQQKExVUaGUgVVNF
UlRSVVNUIE5ldHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cudXNlcnRydXN0LmNvbTEfMB0GA1UE
AxMWVVROLVVTRVJGaXJzdC1IYXJkd2FyZTAeFw05OTA3MDkxODEwNDJaFw0xOTA3MDkxODE5MjJa
MIGXMQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQxFzAVBgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4w
HAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cudXNlcnRy
dXN0LmNvbTEfMB0GA1UEAxMWVVROLVVTRVJGaXJzdC1IYXJkd2FyZTCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBALH3wzg/tKh/zzmCUWfQbZ/S/1jz558r7A2JVJm5OJkW9+AheUjCu2F0
EpYdPGpy1TwQZzo57SsTzWbrlQkzpGyXsejG7MF1eZxGXo2r0Gr9uSpVFxBUsxnwmvbxsV22p237
4HEXa6KI+wDf/hoxdwyaAXqxMuMrAQc4bsOlXiO8RZt7UMHJMI/b5St601v7M0AeoNWYF7yLh8OJ
012gjrKqqvaOaYgGxfqJIfMInWkuCTObKQ1GD4zMSTSwaVG9+QbNaK1mTLw+rGG9CogOyN897nwE
TJ0KXmuR1u7H7SiNq02HiXPQbqTQHhaLFOF2RAN/Y6zkzUmcxZL0qzKhSFsCAwEAAaOBuTCBtjAL
BgNVHQ8EBAMCAcYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUoXJfJhsomEOVXQc31YWWnUvS
w0UwRAYDVR0fBD0wOzA5oDegNYYzaHR0cDovL2NybC51c2VydHJ1c3QuY29tL1VUTi1VU0VSRmly
c3QtSGFyZHdhcmUuY3JsMDEGA1UdJQQqMCgGCCsGAQUFBwMBBggrBgEFBQcDBQYIKwYBBQUHAwYG
CCsGAQUFBwMHMA0GCSqGSIb3DQEBBQUAA4IBAQBHGQ/edMaZl6/8rShedY7rLWfuTnsr1wz/9t7L
VaIK4UxUZZNga58SnK1egyzrWq7A5C30AGMduMBs8s9Ju02TbwamCiKySWIITv/IyBSyiBZd5wHk
EpXlRTSzi2m9z7SFj3VRnn06ODoUSBLG+6c7Go0NgkAH6AQIkKGJyxlQ38ocAbwdBBl7EHaXO+6Q
kMrEDh8WbnXvM/jTb1seluPgdHd0e4qibi3ddtY5MILwq5xS8irHr0lefsdo5YKByGon+SeIKtVY
UJUf8DscV7t9FDliK5rJlJIqoyIM/4kmfV8jK0fXFR2pap5RDSpRnoH51DtecBJ/EDKcHrud+Gao
AAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvYTY3NzZjNjkuMAAAAVGF
tXXjAAVYLjUwOQAAB/swggf3MIIHYKADAgECAgEAMA0GCSqGSIb3DQEBBQUAMIIBHDELMAkGA1UE
BhMCRVMxEjAQBgNVBAgTCUJhcmNlbG9uYTESMBAGA1UEBxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJ
UFMgSW50ZXJuZXQgcHVibGlzaGluZyBTZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJpcHNAbWFpbC5p
cHMuZXMgQy5JLkYuICBCLTYwOTI5NDUyMTMwMQYDVQQLEypJUFMgQ0EgQ2hhaW5lZCBDQXMgQ2Vy
dGlmaWNhdGlvbiBBdXRob3JpdHkxMzAxBgNVBAMTKklQUyBDQSBDaGFpbmVkIENBcyBDZXJ0aWZp
Y2F0aW9uIEF1dGhvcml0eTEeMBwGCSqGSIb3DQEJARYPaXBzQG1haWwuaXBzLmVzMB4XDTAxMTIy
OTAwNTM1OFoXDTI1MTIyNzAwNTM1OFowggEcMQswCQYDVQQGEwJFUzESMBAGA1UECBMJQmFyY2Vs
b25hMRIwEAYDVQQHEwlCYXJjZWxvbmExLjAsBgNVBAoTJUlQUyBJbnRlcm5ldCBwdWJsaXNoaW5n
IFNlcnZpY2VzIHMubC4xKzApBgNVBAoUImlwc0BtYWlsLmlwcy5lcyBDLkkuRi4gIEItNjA5Mjk0
NTIxMzAxBgNVBAsTKklQUyBDQSBDaGFpbmVkIENBcyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEz
MDEGA1UEAxMqSVBTIENBIENoYWluZWQgQ0FzIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MR4wHAYJ
KoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXMwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBANxW
kkmylCC8mE9Q62ikp0kLv9Ix6MdPwoYL+mj9Q1qK82CSNZk4u00DUiFb8DeZNeFBIIGFgQVxgZ20
lRmpX3Y0LmM3NVeOtB9CPxVc4XrBXxMYMjHJrb6jx4NmHrmcBBPLacEG3jAGuzOjtR/wj2/O/5bo
VL5mgK5r20GENqI9AgMBAAGjggRDMIIEPzAdBgNVHQ4EFgQUoa0xsfk+4RemyKs0/FKHCR5iUkEw
ggFOBgNVHSMEggFFMIIBQYAUoa0xsfk+4RemyKs0/FKHCR5iUkGhggEkpIIBIDCCARwxCzAJBgNV
BAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UEChMl
SVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjErMCkGA1UEChQiaXBzQG1haWwu
aXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEzMDEGA1UECxMqSVBTIENBIENoYWluZWQgQ0FzIENl
cnRpZmljYXRpb24gQXV0aG9yaXR5MTMwMQYDVQQDEypJUFMgQ0EgQ2hhaW5lZCBDQXMgQ2VydGlm
aWNhdGlvbiBBdXRob3JpdHkxHjAcBgkqhkiG9w0BCQEWD2lwc0BtYWlsLmlwcy5lc4IBADAMBgNV
HRMEBTADAQH/MAwGA1UdDwQFAwMH/4AwawYDVR0lBGQwYgYIKwYBBQUHAwEGCCsGAQUFBwMCBggr
BgEFBQcDAwYIKwYBBQUHAwQGCCsGAQUFBwMIBgorBgEEAYI3AgEVBgorBgEEAYI3AgEWBgorBgEE
AYI3CgMBBgorBgEEAYI3CgMEMBEGCWCGSAGG+EIBAQQEAwIABzAaBgNVHREEEzARgQ9pcHNAbWFp
bC5pcHMuZXMwGgYDVR0SBBMwEYEPaXBzQG1haWwuaXBzLmVzMEIGCWCGSAGG+EIBDQQ1FjNDaGFp
bmVkIENBIENlcnRpZmljYXRlIGlzc3VlZCBieSBodHRwOi8vd3d3Lmlwcy5lcy8wKQYJYIZIAYb4
QgECBBwWGmh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvMDcGCWCGSAGG+EIBBAQqFihodHRwOi8v
d3d3Lmlwcy5lcy9pcHMyMDAyL2lwczIwMDJDQUMuY3JsMDwGCWCGSAGG+EIBAwQvFi1odHRwOi8v
d3d3Lmlwcy5lcy9pcHMyMDAyL3Jldm9jYXRpb25DQUMuaHRtbD8wOQYJYIZIAYb4QgEHBCwWKmh0
dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcmVuZXdhbENBQy5odG1sPzA3BglghkgBhvhCAQgEKhYo
aHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9wb2xpY3lDQUMuaHRtbDBtBgNVHR8EZjBkMC6gLKAq
hihodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL2lwczIwMDJDQUMuY3JsMDKgMKAuhixodHRwOi8v
d3d3YmFjay5pcHMuZXMvaXBzMjAwMi9pcHMyMDAyQ0FDLmNybDAvBggrBgEFBQcBAQQjMCEwHwYI
KwYBBQUHMAGGE2h0dHA6Ly9vY3NwLmlwcy5lcy8wDQYJKoZIhvcNAQEFBQADgYEARHIwnVZYokEb
KLeV4aYalV+neEAr79uWSvxMcWPZc5W9AuKiBse+lyqTgDSGA/rc2D0eB80ec0MkYPUdYdzclqC8
+x3j5xIAJzMCwMArUz3YawOBo9vWk5Ug79OWfiaQiZwmm81vZqvtAyJEOMxZvZ/b9geiAX8mxGP1
JUJeYr0AAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy9hMTViM2I2Yi4w
AAABUYW1cuUABVguNTA5AAADLTCCAykwggKSoAMCAQICBDZu084wDQYJKoZIhvcNAQEFBQAwRjEL
MAkGA1UEBhMCVVMxJDAiBgNVBAoTG0RpZ2l0YWwgU2lnbmF0dXJlIFRydXN0IENvLjERMA8GA1UE
CxMIRFNUQ0EgRTIwHhcNOTgxMjA5MTkxNzI2WhcNMTgxMjA5MTk0NzI2WjBGMQswCQYDVQQGEwJV
UzEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QgQ28uMREwDwYDVQQLEwhEU1RDQSBF
MjCBnTANBgkqhkiG9w0BAQEFAAOBiwAwgYcCgYEAv5OPF5LvMxMY6xB/Tha//waPKoW8XvkkpiSI
tgO3wcNfA1vRb65+QupmI7hjg1b7KC3hOIu07qgB4c4ctogqIkaF+5+ncKlHFD/O3mXwqHH3TyZs
jLzGte/eSSf/SCp96E0DzMeyUsYXMRM7tU3byMT2ww8kKtoMneeRW4DNlJ0CAQOjggEkMIIBIDAR
BglghkgBhvhCAQEEBAMCAAcwaAYDVR0fBGEwXzBdoFugWaRXMFUxCzAJBgNVBAYTAlVTMSQwIgYD
VQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xETAPBgNVBAsTCERTVENBIEUyMQ0wCwYD
VQQDEwRDUkwxMCsGA1UdEAQkMCKADzE5OTgxMjA5MTkxNzI2WoEPMjAxODEyMDkxOTE3MjZaMAsG
A1UdDwQEAwIBBjAfBgNVHSMEGDAWgBQegk0oZYA8yUFurDUuWsve7vg5WzAdBgNVHQ4EFgQUHoJN
KGWAPMlBbqw1LlrL3u74OVswDAYDVR0TBAUwAwEB/zAZBgkqhkiG9n0HQQAEDDAKGwRWNC4wAwIE
kDANBgkqhkiG9w0BAQUFAAOBgQBHjYOtYvLbsJ5FIgW5otYDDjhy5578e+aTtpqlopTINB2R0cXX
9AolDz14gZ4PsWfEkExj3V6n4rqf9fdNpTF7nCktTP5kPuy2U/7qm+2C23R1Swd5bh7YGYNz3vU+
0LXe50tofUMuKiDhfqB4RJ4I9Zj5x38bG9YGIAJYocOiAwAAAAIALi9leHBvcnQvaGRhMy83LjQu
MC9sb2NhbC9jb25mL2NlcnRzL2ViMzc1YzNlLjAAAAFRhbQnnQAFWC41MDkAAANXMIIDUzCCAjug
AwIBAgIBAjANBgkqhkiG9w0BAQUFADBLMQswCQYDVQQGEwJOTzEdMBsGA1UECgwUQnV5cGFzcyBB
Uy05ODMxNjMzMjcxHTAbBgNVBAMMFEJ1eXBhc3MgQ2xhc3MgMyBDQSAxMB4XDTA1MDUwOTE0MTMw
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
lBmyeUtB9iepwxgPHzANBgkqhkiG9w0BAQsFADCBmDELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUdl
b1RydXN0IEluYy4xOTA3BgNVBAsTMChjKSAyMDA4IEdlb1RydXN0IEluYy4gLSBGb3IgYXV0aG9y
aXplZCB1c2Ugb25seTE2MDQGA1UEAxMtR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1
dGhvcml0eSAtIEczMB4XDTA4MDQwMjAwMDAwMFoXDTM3MTIwMTIzNTk1OVowgZgxCzAJBgNVBAYT
AlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTkwNwYDVQQLEzAoYykgMjAwOCBHZW9UcnVzdCBJ
bmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxNjA0BgNVBAMTLUdlb1RydXN0IFByaW1hcnkg
Q2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
ggEBANziXmJYHTNXOTIz+uvLh4yn1ErdBojqZI4xmKU4kB6Yzy5jK/BGvESyiaHAKAxJcCGVn2TA
ppMSAmUmhsalifD614SgcK9PGpc/BkTVyetyEH3kMSj7HGHmKAdEc5IiaacDiGydY8hS2pgn5whM
cD60yRLBxWeDXTPzAxHsatBT4tG6NmCUgLthY2xbF37fQJQeqw3CIShwiP/WJmxsYAQlTlV+fe+/
lEjetx3dcI0FX4ilm/LC7urRQEFtYjgdVgbFA0dRIBn8exALDmKudlW/X3e+PkkBUz2YJQN2JFod
tNuJ6nnltrM7P7pMKEF/BqxqjsHQ9gUdfeZChuOl1UcCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB
/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFMR5yo6hTgMdHNxr2zFblD4/MH8tMA0GCSqGSIb3
DQEBCwUAA4IBAQAtxRPPVoB7eni9n64smefv2t+UXglpp+duaIy9cr5HqQ6XErhK8WTTOd8lNNTB
zU6B8A8ExCSzNJbGpqow32hhc9f5joWJ7w5elShKKiePEI4ufIbEAp7aDHdlDkQNkv39sxY2+hEN
HYwOB4lqKVb3cvTdFZx3NWZXqxNT2I7BQMXXExZacse3aQHEerGDAWh9jUGhlBjBJVz88P6DAod8
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
hJFWCdXlepqBtoHCrTbk8VQRU/M0RQEmyOUavDREId6tJfx2FnchkICYV51O6uwvqjwUe1fBfhgU
Z+4kxr26FbDSGL23VYGsU8Do3WkSE0K3ArUFQcp5UG6CDnFyk0bonQ1dva7OKa1j1VUWgDAn/3a6
97jWSuPZtflS0E5AqcflwjLHqnYk4WsFUOvFvwpU5blCPCT7twecMJ95WubgQFIV9Pyq9Fb5RJeH
7Q5lcl6+JvtNpC0IB97YXKDcgTOZGCURd6fr/VgJLJlrG4rzUj8aTUhg8aD2MwJTi+0lCbgNLe2X
c+zXlh+OYA7aEJsvGCT2pk0K+TvLdcLML84kackKIo5Zp/eCDNfXazWcQwBqxJVnupxFy7gON/fc
TgFPvgq2A9OtikX32idNKbFI3+QR5JZGvWwCPtZRyJUXARWp8qqq8r8vZRtv0Lkak/WONcSAhz6U
L2bk6aj/QZxwKk8qORiVHn77YQE8UQguKBikFg8x/TpsI5MgduH9B4XRWz/SHHMy3fq5+IzPAod6
mpbk7U+JjVNDqw4TwAEVtHk42/xuPZ5RtrgTi2fP+XzZIh32XcUcAS+Y6HokGLyE1/rcclv3wTpo
AAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvYjdkYjE4OTAuMAAAAVGF
tKEcAAVYLjUwOQAAA38wggN7MIICY6ADAgECAgEBMA0GCSqGSIb3DQEBBQUAMF8xCzAJBgNVBAYT
AlRXMRIwEAYDVQQKDAlUQUlXQU4tQ0ExEDAOBgNVBAsMB1Jvb3QgQ0ExKjAoBgNVBAMMIVRXQ0Eg
Um9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wODA4MjgwNzI0MzNaFw0zMDEyMzExNTU5
NTlaMF8xCzAJBgNVBAYTAlRXMRIwEAYDVQQKDAlUQUlXQU4tQ0ExEDAOBgNVBAsMB1Jvb3QgQ0Ex
KjAoBgNVBAMMIVRXQ0EgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASIwDQYJKoZIhvcN
AQEBBQADggEPADCCAQoCggEBALB+crikA5Tmp94JOJFKEUCHp3xZZBR7tREQ3f6/1cC7VuKFJfQ1
cg/4U9BB4UQBwrQcwzFCFkeFMyJ2sgpvD+UlUE+Fhr6/mC4QZx6+EQWGBZDEWdB8eBCwgFy34ccr
dct8n6610Z0jN2On3EKiLZIEG1DBe7g+G8lWBIsvUputqVbpwf+tqViHMLaB95dF/BlXOytv5Ef0
mUX+HfH4l6OIHTccXI/gdiWaUPigVP9EkHYj0jLGw6sGv/z7v/OtfZJiAlsp0zWjk5pDZGBdsvoy
/zsEr01AavnH4+8j/WvL5Q+LOA3uCvz+D5ifMDHdbFJl+YuBviLhHFgDupEbiQcCAwEAAaNCMEAw
DgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFGo4WyaN3ota8k96VIMZ
GOMINaa6MA0GCSqGSIb3DQEBBQUAA4IBAQA81Xc92t+JuocMCFRqIFCSvrBBPbkmZIMKL+hAwJco
J4IwSsmT/2rnpgB/iUKa1hHlU84vzPLaBcT+4lDEOoZ9zNp+EAk7kjUqU7L+6ysF2Wxd5tDv02pm
nhUohXroggCsHqcJaVZC02hRGL5Umr9EQbpJviC6aVzuuHfNzmwfrYOWGH0OtRQ5hPEo6S2jnnse
enJag7N5b++0/NAKpVhPRt/7bXlZ8oQiUq4PzPt8O+dqykdhw3r405IEH7gghOE2VBbHQN47inPc
38YJTN/s2v/UU0KhyfJiHSKDPJfF+RliJ6xlItfTPMbljrJTzEnOvDD+ew4zkPvt0hSRHwevAAAA
AgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvMTk4OTlkYTUuMAAAAUrnGFvL
AAVYLjUwOQAABJkwggSVMIID/qADAgECAgQ4mxE8MA0GCSqGSIb3DQEBBAUAMIG6MRQwEgYDVQQK
EwtFbnRydXN0Lm5ldDE/MD0GA1UECxQ2d3d3LmVudHJ1c3QubmV0L1NTTF9DUFMgaW5jb3JwLiBi
eSByZWYuIChsaW1pdHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMjAwMCBFbnRydXN0Lm5ldCBMaW1p
dGVkMTowOAYDVQQDEzFFbnRydXN0Lm5ldCBTZWN1cmUgU2VydmVyIENlcnRpZmljYXRpb24gQXV0
aG9yaXR5MB4XDTAwMDIwNDE3MjAwMFoXDTIwMDIwNDE3NTAwMFowgboxFDASBgNVBAoTC0VudHJ1
c3QubmV0MT8wPQYDVQQLFDZ3d3cuZW50cnVzdC5uZXQvU1NMX0NQUyBpbmNvcnAuIGJ5IHJlZi4g
KGxpbWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAyMDAwIEVudHJ1c3QubmV0IExpbWl0ZWQxOjA4
BgNVBAMTMUVudHJ1c3QubmV0IFNlY3VyZSBTZXJ2ZXIgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkw
gZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMfBX05x8c7wYIYP0lh/0zOXLReidTC1lmQmL2jD
RKuodeYAZzRXnmXHIptz5tPdCA43VaolRoFsvf6o9nVXV4yQbErDPotLQwrJEVaamicimc9VnmHZ
AuJ8tnw4B9zjf0+auQNBgLZ1ZxMLn+hXNshdADbeZhTabnYfTzeMghOJAgMBAAGjggGkMIIBoDAR
BglghkgBhvhCAQEEBAMCAAcwgeMGA1UdHwSB2zCB2DCB1aCB0qCBz6SBzDCByTEUMBIGA1UEChML
RW50cnVzdC5uZXQxPzA9BgNVBAsUNnd3dy5lbnRydXN0Lm5ldC9TU0xfQ1BTIGluY29ycC4gYnkg
cmVmLiAobGltaXRzIGxpYWIuKTElMCMGA1UECxMcKGMpIDIwMDAgRW50cnVzdC5uZXQgTGltaXRl
ZDE6MDgGA1UEAxMxRW50cnVzdC5uZXQgU2VjdXJlIFNlcnZlciBDZXJ0aWZpY2F0aW9uIEF1dGhv
cml0eTENMAsGA1UEAxMEQ1JMMTArBgNVHRAEJDAigA8yMDAwMDIwNDE3MjAwMFqBDzIwMjAwMjA0
MTc1MDAwWjALBgNVHQ8EBAMCAQYwHwYDVR0jBBgwFoAUy2zAa+O7Psv8Ipz++4uSnLDybiIwHQYD
VR0OBBYEFMtswGvjuz7L/CKc/vuLkpyw8m4iMAwGA1UdEwQFMAMBAf8wHQYJKoZIhvZ9B0EABBAw
DhsIVjUuMDo0LjADAgSQMA0GCSqGSIb3DQEBBAUAA4GBAGLbgZHOyJp3Qi/svSejUw9QG+pOkvCp
r6mgukhhy+/JBu8f1fTu31Yt5spqGXOqU76Ss1ACtoUmcmPYdVBidRS3s1AaP8oRAAuFRWlttqWu
UeFK3II/bIw0sndr2QL2fw7qZQTxzVTKusnM4IT3yD4Rl9NgCRi8Bf9siTPw7BUPAAAAAgAuL2V4
cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvYjVmMzI5ZmEuMAAAAUrnGA7MAAVYLjUw
OQAAAkAwggI8MIIBpQIQLRv8SheNo5Hr5//1i0W+CzANBgkqhkiG9w0BAQIFADBfMQswCQYDVQQG
EwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xNzA1BgNVBAsTLkNsYXNzIDIgUHVibGljIFBy
aW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNOTYwMTI5MDAwMDAwWhcNMjgwODAxMjM1
OTU5WjBfMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xNzA1BgNVBAsTLkNs
YXNzIDIgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwgZ8wDQYJKoZIhvcN
AQEBBQADgY0AMIGJAoGBALZai6MNaiODgGvPOYf0IRMzBkwlou1VEpfFp4C5+oPBIKD6LxUNfKFg
a355LPoGDzqu9htvsdL/LyhSX4N9S8R6t/hmH4BU/LfCjllKFFdG0ZqTvkGRA7sVgJNc6+fMCGw/
PrNK/P9LbCPVUIImRBmOI8Nx6hkkRwSedb/IpgAfAgMBAAEwDQYJKoZIhvcNAQECBQADgYEAihsr
+jnBdNde2BlkolhKLTfgM0cPrO33qtse5IsGXGAnykVSzhbvPwZk55RofGAzFRFpr51ijaMDVGum
vuXuBRhgBL9CgP3QqKgeATv3o1yvo9zmJoAjPLhEdPcKrkmLYXjMJL+IiqcO6nMZQf1NA/CI0eV4
jaUqT/aXDRd3ytgAAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40L2xvY2FsL2NvbmYvY2VydHMvZjY0
ZDk3MTUuMAAAATC7K1vrAAVYLjUwOQAAArswggK3MIICIAIBADANBgkqhkiG9w0BAQQFADCBozEL
MAkGA1UEBhMCRVMxEjAQBgNVBAgTCUJBUkNFTE9OQTESMBAGA1UEBxMJQkFSQ0VMT05BMRkwFwYD
VQQKExBJUFMgU2VndXJpZGFkIENBMRgwFgYDVQQLEw9DZXJ0aWZpY2FjaW9uZXMxFzAVBgNVBAMT
DklQUyBTRVJWSURPUkVTMR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXMwHhcNOTgwMTAx
MjMyMTA3WhcNMDkxMjI5MjMyMTA3WjCBozELMAkGA1UEBhMCRVMxEjAQBgNVBAgTCUJBUkNFTE9O
QTESMBAGA1UEBxMJQkFSQ0VMT05BMRkwFwYDVQQKExBJUFMgU2VndXJpZGFkIENBMRgwFgYDVQQL
Ew9DZXJ0aWZpY2FjaW9uZXMxFzAVBgNVBAMTDklQUyBTRVJWSURPUkVTMR4wHAYJKoZIhvcNAQkB
Fg9pcHNAbWFpbC5pcHMuZXMwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAKxPUnSfOeqO3CXE
vJhdmGQkCTwhs8wZtY6UjofR+Dc+ocgtWKSANVuhdWwdRQwfYWNqXm+bCkzByLhhIzWB//6seHAt
aOE6B5iVAlTdzSO3gFPXyDdFcgYkEroTYSGKbnUo4MUPNP022EV/4bg277PhxiCO6LQ4vOE+9hHe
jJ0BAgMBAAEwDQYJKoZIhvcNAQEEBQADgYEALPPDeVgk3sY70eBCabjuZLM9YgG5s4TfI33dmM8Q
qf4A2CKWBRMHVFfFp97L2biIQvaZ2xR3H7b+JT3hoj4DqYHSLWxH9ZZGjCKryMwNDpdei0G0O8QK
BkAd3Ub0Ad26gi48PXhwnnwY0Kv4uHcHRnHxygtjXGr5cpTVAU+g20IAAAACAC4vZXhwb3J0L2hk
YTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy81YTUzNzJmYy4wAAABUYW1RlkABVguNTA5AAAFTzCC
BUswggS0oAMCAQICAWkwDQYJKoZIhvcNAQEEBQAwgZkxCzAJBgNVBAYTAkhVMREwDwYDVQQHEwhC
dWRhcGVzdDEnMCUGA1UEChMeTmV0TG9jayBIYWxvemF0Yml6dG9uc2FnaSBLZnQuMRowGAYDVQQL
ExFUYW51c2l0dmFueWtpYWRvazEyMDAGA1UEAxMpTmV0TG9jayBVemxldGkgKENsYXNzIEIpIFRh
bnVzaXR2YW55a2lhZG8wHhcNOTkwMjI1MTQxMDIyWhcNMTkwMjIwMTQxMDIyWjCBmTELMAkGA1UE
BhMCSFUxETAPBgNVBAcTCEJ1ZGFwZXN0MScwJQYDVQQKEx5OZXRMb2NrIEhhbG96YXRiaXp0b25z
YWdpIEtmdC4xGjAYBgNVBAsTEVRhbnVzaXR2YW55a2lhZG9rMTIwMAYDVQQDEylOZXRMb2NrIFV6
bGV0aSAoQ2xhc3MgQikgVGFudXNpdHZhbnlraWFkbzCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkC
gYEAseoE7CCgI8KPOGDPx0az1Rv++7mZngTcHH+MSoGY7qTUyooXuSJ/gwp1TJvAadhkOaPtkqP9
W1x0GsBHyjppdpq64kQX/Eyj1f64l4iviAOJH6TyBD7IBwvm+bMvemIUCUYUymT1i4C1YqjYa9Zx
ky2zvwlUWO0G66h73EOxoWkCAwEAAaOCAp8wggKbMBIGA1UdEwEB/wQIMAYBAf8CAQQwDgYDVR0P
AQH/BAQDAgAGMBEGCWCGSAGG+EIBAQQEAwIABzCCAmAGCWCGSAGG+EIBDQSCAlEWggJNRklHWUVM
RU0hIEV6ZW4gdGFudXNpdHZhbnkgYSBOZXRMb2NrIEtmdC4gQWx0YWxhbm9zIFN6b2xnYWx0YXRh
c2kgRmVsdGV0ZWxlaWJlbiBsZWlydCBlbGphcmFzb2sgYWxhcGphbiBrZXN6dWx0LiBBIGhpdGVs
ZXNpdGVzIGZvbHlhbWF0YXQgYSBOZXRMb2NrIEtmdC4gdGVybWVrZmVsZWxvc3NlZy1iaXp0b3Np
dGFzYSB2ZWRpLiBBIGRpZ2l0YWxpcyBhbGFpcmFzIGVsZm9nYWRhc2FuYWsgZmVsdGV0ZWxlIGF6
IGVsb2lydCBlbGxlbm9yemVzaSBlbGphcmFzIG1lZ3RldGVsZS4gQXogZWxqYXJhcyBsZWlyYXNh
IG1lZ3RhbGFsaGF0byBhIE5ldExvY2sgS2Z0LiBJbnRlcm5ldCBob25sYXBqYW4gYSBodHRwczov
L3d3dy5uZXRsb2NrLm5ldC9kb2NzIGNpbWVuIHZhZ3kga2VyaGV0byBheiBlbGxlbm9yemVzQG5l
dGxvY2submV0IGUtbWFpbCBjaW1lbi4gSU1QT1JUQU5UISBUaGUgaXNzdWFuY2UgYW5kIHRoZSB1
c2Ugb2YgdGhpcyBjZXJ0aWZpY2F0ZSBpcyBzdWJqZWN0IHRvIHRoZSBOZXRMb2NrIENQUyBhdmFp
bGFibGUgYXQgaHR0cHM6Ly93d3cubmV0bG9jay5uZXQvZG9jcyBvciBieSBlLW1haWwgYXQgY3Bz
QG5ldGxvY2submV0LjANBgkqhkiG9w0BAQQFAAOBgQAE266MF6/4DpAxTs0+CcBtOrD4M0xHTON1
iBCXrLA4FZHGKZbMIcBtPKV0z9iCpTnDZeNCcLsikON92zV24aC12p9wbpMaMDkdMNsu43yykbLR
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
HQ8BAf8EBAMCAQYwgewGA1UdIASB5DCB4TCB3gYIKoFQgSkBAQEwgdEwLwYIKwYBBQUHAgEWI2h0
dHA6Ly93d3cuY2VydGlmaWthdC5kay9yZXBvc2l0b3J5MIGdBggrBgEFBQcCAjCBkDAKFgNUREMw
AwIBARqBgUNlcnRpZmlrYXRlciBmcmEgZGVubmUgQ0EgdWRzdGVkZXMgdW5kZXIgT0lEIDEuMi4y
MDguMTY5LjEuMS4xLiBDZXJ0aWZpY2F0ZXMgZnJvbSB0aGlzIENBIGFyZSBpc3N1ZWQgdW5kZXIg
T0lEIDEuMi4yMDguMTY5LjEuMS4xLjARBglghkgBhvhCAQEEBAMCAAcwgYEGA1UdHwR6MHgwSKBG
oESkQjBAMQswCQYDVQQGEwJESzEMMAoGA1UEChMDVERDMRQwEgYDVQQDEwtUREMgT0NFUyBDQTEN
MAsGA1UEAxMEQ1JMMTAsoCqgKIYmaHR0cDovL2NybC5vY2VzLmNlcnRpZmlrYXQuZGsvb2Nlcy5j
cmwwKwYDVR0QBCQwIoAPMjAwMzAyMTEwODM5MzBagQ8yMDM3MDIxMTA5MDkzMFowHwYDVR0jBBgw
FoAUYLWF7FZkfhIZJ2cdUBVLc647+RIwHQYDVR0OBBYEFGC1hexWZH4SGSdnHVAVS3OuO/kSMB0G
CSqGSIb2fQdBAAQQMA4bCFY2LjA6NC4wAwIEkDANBgkqhkiG9w0BAQUFAAOCAQEACromJkbTc6gJ
82sLMJn9iuFXehHTuJTXCRBuo7E4A9G28kNBKWKnctj7fAXmMXAnVBhOinxO5dHKjHiIzxvTkIvm
I/gLDjNDfZziChmPyQE+dF10yYscA+UYyAFMP8uXBV2YcaaYb7Z8vTd/vuGTJW1v8AqtFxjhA7wH
KcitJuj4YfD9IQl+mo6paH1IYnK9AOoBmbgGglGBTvH1tJFUuSN6AJqfXY3gPGS5GhKSKseCRHI5
3OI8xthV9RVOyAUO28bQYqbsFbS1AoLbrIyigfCbmTH1ICCoiGEKB5+U/NDXG8wuF/MEJ3Zn61SD
/aSQfgY9BKNDLdr8C2LqL19iUwAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2Nl
cnRzL2QwNjM5M2JiLjAAAAFRhbT6lQAFWC41MDkAAAPHMIIDwzCCAqugAwIBAgIBATANBgkqhkiG
9w0BAQsFADCBgjELMAkGA1UEBhMCREUxKzApBgNVBAoMIlQtU3lzdGVtcyBFbnRlcnByaXNlIFNl
cnZpY2VzIEdtYkgxHzAdBgNVBAsMFlQtU3lzdGVtcyBUcnVzdCBDZW50ZXIxJTAjBgNVBAMMHFQt
VGVsZVNlYyBHbG9iYWxSb290IENsYXNzIDIwHhcNMDgxMDAxMTA0MDE0WhcNMzMxMDAxMjM1OTU5
WjCBgjELMAkGA1UEBhMCREUxKzApBgNVBAoMIlQtU3lzdGVtcyBFbnRlcnByaXNlIFNlcnZpY2Vz
IEdtYkgxHzAdBgNVBAsMFlQtU3lzdGVtcyBUcnVzdCBDZW50ZXIxJTAjBgNVBAMMHFQtVGVsZVNl
YyBHbG9iYWxSb290IENsYXNzIDIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCqX9ob
X+hzkeXaXPSi5kfl82hVYAUdAqSzm1nzHoqvNK38DcLZSBnuaY/JIPwhqgcZ7bBcrGXHX+0CfHt8
LRvWurmAwhiCFoT6ZrAIxlQjgeTNuUk/9k9uN0goOA/FvudocP05l03Sx5iRUKrERLMjfTlH6VJi
1hKTXrcxlkIF+3anHqP1wvzpesVsqXFP6st4vGCvx9702cu+fjOlbpSD8DT6IavqjnKgP6TeMFvv
hk1qlVtDRKgQFRzlAVfFmPHmBiiRqiDFt1MmUUOyCxGVWOHAD3bZwI18gfNycJ5v/hqO2V81xrJv
NHy+SE/iWjnX2J14np+GPgNeGYtEotXHAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0P
AQH/BAQDAgEGMB0GA1UdDgQWBBS/WSA2AHmgoCJrjNXyYdK4LMuCSjANBgkqhkiG9w0BAQsFAAOC
AQEAMQOiYQsfdOhyNsZt+U2e+iKo4YFWz827n+qrkRk4r6p8FU3ztqONpfSO9kSpp+ghla0+AGIW
iPACuvxhI+YzmzB6azZie60EI4RYZeLbK4rnJVM3YlNfvNoBYimipidx5joifsFvHZVwIEoHNN/q
/xWA5brXethbdXwFeilHfkCoMRN3zUA7tFFHei4R40cR3p1m0IvVVGb6g1XqfMIpiRvpb7PO4gWE
yS8+eIVibslfwXhjdFjASBgMmTnrpMwatXlajRWc2BQN9noHV8cigwUtPJslJj0Ys6lDfMjIq2SP
DqO/nBudMNva0Bkuqjzx+zOAduTNrRlPBSeOE6FuwgAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9s
b2NhbC9jb25mL2NlcnRzL2ZmNzgzNjkwLjAAAAFRhbOp1wAFWC41MDkAAAR4MIIEdDCCA1ygAwIB
AgIQRL4Mi1AAJLQR0zYq/mUK/TANBgkqhkiG9w0BAQUFADCBlzELMAkGA1UEBhMCVVMxCzAJBgNV
BAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2UgQ2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBO
ZXR3b3JrMSEwHwYDVQQLExhodHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xHzAdBgNVBAMTFlVUTi1V
U0VSRmlyc3QtSGFyZHdhcmUwHhcNOTkwNzA5MTgxMDQyWhcNMTkwNzA5MTgxOTIyWjCBlzELMAkG
A1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2UgQ2l0eTEeMBwGA1UEChMV
VGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExhodHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20x
HzAdBgNVBAMTFlVUTi1VU0VSRmlyc3QtSGFyZHdhcmUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
ggEKAoIBAQCx98M4P7Sof885glFn0G2f0v9Y8+efK+wNiVSZuTiZFvfgIXlIwrthdBKWHTxqctU8
EGc6Oe0rE81m65UJM6Rsl7HoxuzBdXmcRl6Nq9Bq/bkqVRcQVLMZ8Jr28bFdtqdt++BxF2uiiPsA
3/4aMXcMmgF6sTLjKwEHOG7DpV4jvEWbe1DByTCP2+UretNb+zNAHqDVmBe8i4fDidNdoI6yqqr2
jmmIBsX6iSHzCJ1pLgkzmykNRg+MzEk0sGlRvfkGzWitZky8PqxhvQqIDsjfPe58BEydCl5rkdbu
x+0ojatNh4lz0G6k0B4WixThdkQDf2Os5M1JnMWS9KsyoUhbAgMBAAGjgbkwgbYwCwYDVR0PBAQD
AgHGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFKFyXyYbKJhDlV0HN9WFlp1L0sNFMEQGA1Ud
HwQ9MDswOaA3oDWGM2h0dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9VVE4tVVNFUkZpcnN0LUhhcmR3
YXJlLmNybDAxBgNVHSUEKjAoBggrBgEFBQcDAQYIKwYBBQUHAwUGCCsGAQUFBwMGBggrBgEFBQcD
BzANBgkqhkiG9w0BAQUFAAOCAQEARxkP3nTGmZev/K0oXnWO6y1n7k57K9cM//bey1WiCuFMVGWT
YGufEpytXoMs61quwOQt9ABjHbjAbPLPSbtNk28GpgoiskliCE7/yMgUsogWXecB5BKV5UU0s4tp
vc+0hY91UZ59Ojg6FEgSxvunOxqNDYJAB+gECJChicsZUN/KHAG8HQQZexB2lzvukJDKxA4fFm51
7zP4029bHpbj4HR3dHuKom4t3XbWOTCC8KucUvIqx69JXn7HaOWCgchqJ/kniCrVWFCVH/A7HFe7
fRQ5YiuayZSSKqMiDP+JJn1fIytH1xUdqWqeUQ0qUZ6B+dQ7XnASfxAynB67nfhmqAAAAAIALy9l
eHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy9jY2I5MTlmOS4wAAABMLsrcv8ABVgu
NTA5AAAEajCCBGYwggNOoAMCAQICEES+DItQACS0EdM2LeCzXxswDQYJKoZIhvcNAQEFBQAwgZUx
CzAJBgNVBAYTAlVTMQswCQYDVQQIEwJVVDEXMBUGA1UEBxMOU2FsdCBMYWtlIENpdHkxHjAcBgNV
BAoTFVRoZSBVU0VSVFJVU1QgTmV0d29yazEhMB8GA1UECxMYaHR0cDovL3d3dy51c2VydHJ1c3Qu
Y29tMR0wGwYDVQQDExRVVE4tVVNFUkZpcnN0LU9iamVjdDAeFw05OTA3MDkxODMxMjBaFw0xOTA3
MDkxODQwMzZaMIGVMQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQxFzAVBgNVBAcTDlNhbHQgTGFr
ZSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93
d3cudXNlcnRydXN0LmNvbTEdMBsGA1UEAxMUVVROLVVTRVJGaXJzdC1PYmplY3QwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQDOqoE/o6NheKoxAFWVEZ4nDx8c3zqbgmgwwEphHfEvDvq+
efelI+9VUZaEzdvjuW4+MdgKIGfH9Nm/lOtHBD4CziqiXYcECfYwnRiKl7KqHPxB0qE2y/s9kbrn
2XA1+uTnkMObo5vTPPUSmXextwngaOYcuPOUY4hqav4Ldsm+9CLkZ7mrGl53wYUH3Q1sv+4Gx3dq
QZ6nD9f77pQXt/yFvqSrxBwx3de20eTw798Wj7JSk9eh1ImhBy6/4QESQh4a4diVNNtkeSj/ui4R
wuXoW5JI+0cLwmzarTKDQfOl5UFw/WWQbfr6UcT5vZYrGQQs022n3PB/b4Nl4mqrh4Z1AgMBAAGj
ga8wgawwCwYDVR0PBAQDAgHGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFNrtZHQUnBQ8q92Z
qb1bKE2LPMnYMEIGA1UdHwQ7MDkwN6A1oDOGMWh0dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9VVE4t
VVNFUkZpcnN0LU9iamVjdC5jcmwwKQYDVR0lBCIwIAYIKwYBBQUHAwMGCCsGAQUFBwMIBgorBgEE
AYI3CgMEMA0GCSqGSIb3DQEBBQUAA4IBAQAIH1KxN0R42/3OudqVlpiqVWSAtVpA3SGlxcHzXyxM
yEdaaero8DU19NAl88impIdKvRuxcwi91MPKtjW7WYZ3Mc2ngBSuE+/8sUj5ayUlLVG2LG1FwZjI
ilZdPu5DTj5rJ47QOkuFC1/T7WqndcvRWocvOXUTWnKwAoGfvvAPhFQgYmxp1OFNxg2ZQwENEpaM
eJ2/UKKxRKpqzxd6z28P1PgkVV/wNBZJZj5QRsljcTgxYrhiufNTrWy1K6ISqhlPCdpe55PGjhQI
/vAwgBighoVNyH3XiwP+btX3nRaskiygI+WckVIflN8XlHPDs8HBcQUgAHi9E1IdqD7NAB/IAAAA
AgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvM2U3MjcxZTguMAAAAUrnGDk1
AAVYLjUwOQAABGAwggRcMIIDRKADAgECAgQ4Y7lmMA0GCSqGSIb3DQEBBQUAMIG0MRQwEgYDVQQK
EwtFbnRydXN0Lm5ldDFAMD4GA1UECxQ3d3d3LmVudHJ1c3QubmV0L0NQU18yMDQ4IGluY29ycC4g
YnkgcmVmLiAobGltaXRzIGxpYWIuKTElMCMGA1UECxMcKGMpIDE5OTkgRW50cnVzdC5uZXQgTGlt
aXRlZDEzMDEGA1UEAxMqRW50cnVzdC5uZXQgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgKDIwNDgp
MB4XDTk5MTIyNDE3NTA1MVoXDTE5MTIyNDE4MjA1MVowgbQxFDASBgNVBAoTC0VudHJ1c3QubmV0
MUAwPgYDVQQLFDd3d3cuZW50cnVzdC5uZXQvQ1BTXzIwNDggaW5jb3JwLiBieSByZWYuIChsaW1p
dHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMTk5OSBFbnRydXN0Lm5ldCBMaW1pdGVkMTMwMQYDVQQD
EypFbnRydXN0Lm5ldCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAoMjA0OCkwggEiMA0GCSqGSIb3
DQEBAQUAA4IBDwAwggEKAoIBAQCtTUupEoay6qMgBxUWZCorS9G/C0pNju2AdqVnt3hAwHNCyGjA
21Mr3V64dpg1k4sanXwTOg4fW7cez+UkFB6xgamNfbjMa0sD8QIM3KulQCQAf3SUoZ0IKbOIC/WH
d51VzeTDftdqZKuFFIaVW5cyUG89yLpmDOP8vbhJwXaJSRn9wKi9iaNnL8afvHEZYLgt6SzJkHZm
e5Tir3jWZVNdPNacss8pA/kvpFCy1EjOBTJViv2yZEwO5JgHddt/37kIVWCFMCn5e0ikaYbjNT8e
hl16ehW97wCOFSJUFwCQJpO8Dklokb/4R9OdlULBDk3fbybPwxghYmZDcNbVwAfhAgMBAAGjdDBy
MBEGCWCGSAGG+EIBAQQEAwIABzAfBgNVHSMEGDAWgBRV5IHREYC+2Im5CKMx+aEkCRa5cDAdBgNV
HQ4EFgQUVeSB0RGAvtiJuQijMfmhJAkWuXAwHQYJKoZIhvZ9B0EABBAwDhsIVjUuMDo0LjADAgSQ
MA0GCSqGSIb3DQEBBQUAA4IBAQBZR6whhIoXyZyJUx66gIUaxjxOPrGctnzGkl0YZALj0wYIEWF8
Y+MrnTEDcHbSoyig9LuaY3PtbeUq2+0UqSvGNhHQK+sHi6XanlwZnVYS9VQpyAXtshIqjfQDG//n
khCHsDq1w50FNxKjx/QVudWkORabUzojkfGogqJqiGjBeQIivKqm1q7fsBRfuIfQ3Xx/e/+vHM/m
2wetXtuFndArDTPbBNHmSUATK3b7PumciQ8VzhiwhXghT2tPDvo2Z80H8v8I0OLe2b8qr7iHhiE8
BMq3lGh/zzzpmNc4/+zA2VDwLktYrkZv0C7DYNpyVXK9TEWeYbq/hIGSA9HSaXzFAAAAAgAuL2V4
cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvNjBhZmU4MTIuMAAAAVGFtEnlAAVYLjUw
OQAABBkwggQVMIIC/aADAgECAgZJQSzkABAwDQYJKoZIhvcNAQELBQAwgacxCzAJBgNVBAYTAkhV
MREwDwYDVQQHDAhCdWRhcGVzdDEVMBMGA1UECgwMTmV0TG9jayBLZnQuMTcwNQYDVQQLDC5UYW7D
unPDrXR2w6FueWtpYWTDs2sgKENlcnRpZmljYXRpb24gU2VydmljZXMpMTUwMwYDVQQDDCxOZXRM
b2NrIEFyYW55IChDbGFzcyBHb2xkKSBGxZF0YW7DunPDrXR2w6FueTAeFw0wODEyMTExNTA4MjFa
Fw0yODEyMDYxNTA4MjFaMIGnMQswCQYDVQQGEwJIVTERMA8GA1UEBwwIQnVkYXBlc3QxFTATBgNV
BAoMDE5ldExvY2sgS2Z0LjE3MDUGA1UECwwuVGFuw7pzw610dsOhbnlraWFkw7NrIChDZXJ0aWZp
Y2F0aW9uIFNlcnZpY2VzKTE1MDMGA1UEAwwsTmV0TG9jayBBcmFueSAoQ2xhc3MgR29sZCkgRsWR
dGFuw7pzw610dsOhbnkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDEJF5zvkttFMOh
9OOXkG7SMEUePO5n2WTgGop/yjDKg+MgweP0OtOUXxp8W22/ME+EJ/afH0m8xpkKkPIP9X9DhDdj
UYt6pXD8eljNjpvtw0ZshHBd2vMBkCP8TjCpfuEnY+ftZDyguMkzY/4WkP+wuP3XqMDAlEMLttVZ
pp5W0CQfcHmv2zlUDWV12RVBlAGvXuz2jfH/rWT+IJrXXOv+ph8IZKOLdlWtHjsoYC6HJeiqrx/G
ZEYgt3B/PN5I25ZTtzl35BrixxaEdpdbL7sZFYX4aYX1maep8jSnqbamA/xvhj1UfHYEm2v5QF0A
NMcumXWd5YgDqk34A9JCdsAbAgMAqIujRTBDMBIGA1UdEwEB/wQIMAYBAf8CAQQwDgYDVR0PAQH/
BAQDAgEGMB0GA1UdDgQWBBTM+meT8La40KXAHvNT/YxT34PXljANBgkqhkiG9w0BAQsFAAOCAQEA
q3/uHBapnDxRAKDAEQgFp5nmbwGIVGFu8bkYrUqt/oFAI5Qv+3V8LyhLYiSBggv1YfEcbrhhOOuB
+mKhO1pi05RlxOHmbYL4LyVwsiEmwXJRH4wsw4SQw1qPus/0p2Wl65jR+wWyRnUVI2pvhWMwgPDV
nh8pHMJssFBZXZBbO6gNMM+/fX/O8Z2DvclGbiCm+WFRuiEve76lFWOh1JWH8Z6584nzPYW4uNu+
tbkp+do3BQBJlAOEROe/QzHPdYsl0fSmZPWS9qsF6z3ppQs2YtrMBl82i7ZeMbgq+172cd9EJp7E
5g2RtC51lYBRakswprBioZPxm9jOxGN1P1lHsQAAAAIAA2dzYQAAASf5ExPRAAVYLjUwOQAAA7Ew
ggOtMIIDFqADAgECAgEAMA0GCSqGSIb3DQEBBAUAMIGcMQswCQYDVQQGEwJVUzETMBEGA1UECBMK
Q2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEVMBMGA1UEChMMR29vZ2xlLCBJbmMu
MRswGQYDVQQDExJmb28uZW50Lmdvb2dsZS5jb20xLDAqBgkqhkiG9w0BCQEWHWVudGVycHJpc2Ut
c3VwcG9ydEBnb29nbGUuY29tMB4XDTAxMTIxMTExMzMyMloXDTExMTIwOTExMzMyMlowgZwxCzAJ
BgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRUw
EwYDVQQKEwxHb29nbGUsIEluYy4xGzAZBgNVBAMTEmZvby5lbnQuZ29vZ2xlLmNvbTEsMCoGCSqG
SIb3DQEJARYdZW50ZXJwcmlzZS1zdXBwb3J0QGdvb2dsZS5jb20wgZ8wDQYJKoZIhvcNAQEBBQAD
gY0AMIGJAoGBANb7s90Izzg5xrt1xaJvGxnbfgyIi2DqI6VlDWHon30bGtLzk31ALrpkTv5Us2ZB
b4am0FJvUmftir/V9btPmX9r4uLSDT/cptOtRYk2Vp14fld+F9b6AnVwGAngsSKoWHzR3ZsC/itg
gk6RULpt0tRPlg9Ohyx92HH1ZkyVuKX9AgMBAAGjgfwwgfkwHQYDVR0OBBYEFJMBYZqaZRQg224i
QEz7C++eaVXvMIHJBgNVHSMEgcEwgb6AFJMBYZqaZRQg224iQEz7C++eaVXvoYGipIGfMIGcMQsw
CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEV
MBMGA1UEChMMR29vZ2xlLCBJbmMuMRswGQYDVQQDExJmb28uZW50Lmdvb2dsZS5jb20xLDAqBgkq
hkiG9w0BCQEWHWVudGVycHJpc2Utc3VwcG9ydEBnb29nbGUuY29tggEAMAwGA1UdEwQFMAMBAf8w
DQYJKoZIhvcNAQEEBQADgYEApeY/ljsUSEPQiUZBAaSnUqxmSDAhKFgBzvfluyUpQvw0eiIfJoUY
ITqJ026Cn5+QvlWGvel8DLAsOb9zJUzwCjU9IvIRKDSzFhQOfaJYKD1FjwoxWPSglIKwBBbtXnE9
g/oT+vpXc+CRyf1uStoVCk+YWthQz74/AWWgZfAlUisAAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40
L2xvY2FsL2NvbmYvY2VydHMvMzEwNDQzNTAuMAAAATC7Kx6CAAVYLjUwOQAABTAwggUsMIIEFKAD
AgECAgQ5T32HMA0GCSqGSIb3DQEBBQUAMFoxCzAJBgNVBAYTAldXMRIwEAYDVQQKEwliZVRSVVNU
ZWQxGzAZBgNVBAMTEmJlVFJVU1RlZCBSb290IENBczEaMBgGA1UEAxMRYmVUUlVTVGVkIFJvb3Qg
Q0EwHhcNMDAwNjIwMTQyMTA0WhcNMTAwNjIwMTMyMTA0WjBaMQswCQYDVQQGEwJXVzESMBAGA1UE
ChMJYmVUUlVTVGVkMRswGQYDVQQDExJiZVRSVVNUZWQgUm9vdCBDQXMxGjAYBgNVBAMTEWJlVFJV
U1RlZCBSb290IENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1LRzehMKOFUBvolW
4ZSe1L5a60o0dRthKcThrQhgIXhI/7TQ+l5BjWFEh+jtyVj6/JOa30/qPjV9+DN65vHXzW9JSz1P
LW4OgzoYeHejz+f0TXPYmjsaHb6VU88gl8LPPiRSbAyOZVnFcf9iCY+qxY/MYKBzStc4PxVyv6KX
t3Dor+J+FgZM9apkJnIHJa01/BixJtfY/xkOgxuM3HhFZzQ99K8cjeRta+0gs2eatGHLF2+JNf/n
TsAyEufu7N//lzB07Y1Hjuu0w0Tmp0x/VkPouLy2vvqDl+a7+8S2k74ZGD6MgblziBb0lkOcZ3MX
kNgJbmOsSrYjxAGhraTkxQIDAQABo4IB+DCCAfQwDwYDVR0TAQH/BAUwAwEB/zCCAVkGA1UdIASC
AVAwggFMMIIBSAYKKwYBBAGxPgEAADCCATgwggEBBggrBgEFBQcCAjCB9BqB8VJlbGlhbmNlIG9u
IHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFzc3VtZXMgYWNjZXB0YW5jZSBvZiB0aGUg
dGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgYW5k
IGNlcnRpZmljYXRpb24gcHJhY3RpY2Ugc3RhdGVtZW50LCB3aGljaCBjYW4gYmUgZm91bmQgYXQg
YmVUUlVTVGVkJ3Mgd2ViIHNpdGUsIGh0dHBzOi8vd3d3LmJlVFJVU1RlZC5jb20vdmF1bHQvdGVy
bXMwMQYIKwYBBQUHAgEWJWh0dHBzOi8vd3d3LmJlVFJVU1RlZC5jb20vdmF1bHQvdGVybXMwNAYD
VR0fBC0wKzApoCegJaQjMCExEjAQBgNVBAoTCWJlVFJVU1RlZDELMAkGA1UEBhMCV1cwHQYDVR0O
BBYEFCq5m2kuO5vYzd4qMQQ0a8oHGKtnMB8GA1UdIwQYMBaAFCq5m2kuO5vYzd4qMQQ0a8oHGKtn
MA4GA1UdDwEB/wQEAwIB/jANBgkqhkiG9w0BAQUFAAOCAQEAeWHbo15uFrHqdlH5yxWby2m+5oFr
nygfZT7dEYWS1OhBv34zvSPn8SC/pLSmGQHGjI01fGWkTwmk1tgjFQUTp0N5r9ujDpt7eBrzBIZa
xvaMIEc4SVAGnXJnOvCYA62WZ0T8PxANhk3kADspe847O5mGYSVAhNwTYrf6ylnWAx7WUwHNbUxo
VUDh7mvHKgAASIKzCgHDYCoM94I17kiGluR01D3qAXG6BHVAp6l/OTmaVZcpZa4ZVSUFckfT6Bjc
uOmvQ3MBEnSj4VxfFV0k8/nk9LZnZxLnZCKK9qVBphy2YGNFihC0ukYQrkFXZWw/IxA/IRBZt+RA
3SYMI/aqrgAAAAIALi9leHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzLzcwOWFmZDJi
LjAAAAFK5xf2bwAFWC41MDkAAAMxMIIDLTCCApagAwIBAgIBADANBgkqhkiG9w0BAQQFADCB0TEL
MAkGA1UEBhMCWkExFTATBgNVBAgTDFdlc3Rlcm4gQ2FwZTESMBAGA1UEBxMJQ2FwZSBUb3duMRow
GAYDVQQKExFUaGF3dGUgQ29uc3VsdGluZzEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNl
cyBEaXZpc2lvbjEkMCIGA1UEAxMbVGhhd3RlIFBlcnNvbmFsIEZyZWVtYWlsIENBMSswKQYJKoZI
hvcNAQkBFhxwZXJzb25hbC1mcmVlbWFpbEB0aGF3dGUuY29tMB4XDTk2MDEwMTAwMDAwMFoXDTIw
MTIzMTIzNTk1OVowgdExCzAJBgNVBAYTAlpBMRUwEwYDVQQIEwxXZXN0ZXJuIENhcGUxEjAQBgNV
BAcTCUNhcGUgVG93bjEaMBgGA1UEChMRVGhhd3RlIENvbnN1bHRpbmcxKDAmBgNVBAsTH0NlcnRp
ZmljYXRpb24gU2VydmljZXMgRGl2aXNpb24xJDAiBgNVBAMTG1RoYXd0ZSBQZXJzb25hbCBGcmVl
bWFpbCBDQTErMCkGCSqGSIb3DQEJARYccGVyc29uYWwtZnJlZW1haWxAdGhhd3RlLmNvbTCBnzAN
BgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA1GnX1LCUZFtx6UfYDFG26nKRsIRefS0Nj3sS34UldSh0
OkIsYyeflXtL734Zhx2G6qPduc6WZBrCFG5ErHzmj+hND3EfQDimAKOHePb5lIZererAXnbr2RSj
XW56fAylS1V/Bhkpf56aJtVquzgkCGqYx7Hao5iR/Xnb5VrEHLkCAwEAAaMTMBEwDwYDVR0TAQH/
BAUwAwEB/zANBgkqhkiG9w0BAQQFAAOBgQDH7JJ+Tvj1lqVnYiqk8E0RYNBvjWBYYawmu1I1XAjP
MPuoSpaKH2JCI4wXD/S6ZJwXrEcp352YXtJsYHFcoqzceePnbgBHH7UNKOgCneSa/RP0ptl8sfjc
XyMmCZGAc9AUG95DqYMl8uacLxXK/qarigd1iwzdUYRr5PjRzneigQAAAAIALi9leHBvcnQvaGRh
My83LjQuMC9sb2NhbC9jb25mL2NlcnRzLzQwZGM5OTJlLjAAAAFRhbSsswAFWC41MDkAAAQ1MIIE
MTCCAxmgAwIBAgIBADANBgkqhkiG9w0BAQUFADCBlTELMAkGA1UEBhMCR1IxRDBCBgNVBAoTO0hl
bGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJjaCBJbnN0aXR1dGlvbnMgQ2VydC4gQXV0aG9yaXR5
MUAwPgYDVQQDEzdIZWxsZW5pYyBBY2FkZW1pYyBhbmQgUmVzZWFyY2ggSW5zdGl0dXRpb25zIFJv
b3RDQSAyMDExMB4XDTExMTIwNjEzNDk1MloXDTMxMTIwMTEzNDk1MlowgZUxCzAJBgNVBAYTAkdS
MUQwQgYDVQQKEztIZWxsZW5pYyBBY2FkZW1pYyBhbmQgUmVzZWFyY2ggSW5zdGl0dXRpb25zIENl
cnQuIEF1dGhvcml0eTFAMD4GA1UEAxM3SGVsbGVuaWMgQWNhZGVtaWMgYW5kIFJlc2VhcmNoIElu
c3RpdHV0aW9ucyBSb290Q0EgMjAxMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlT
AOMupvaO+mDYLZU++CwqVE7NuYRhlFhPjz2L5EPzdYmNUeTDN9KKiE15HrcS3UN4SoqS5tdI1Q+k
OilENbgH9mgdVc04UfCMJDGFr4PJfel3r+0ae50X+bOdOFAPplp5kYCvN66m0zH7tSYJnTxa71HF
K9+WXesyHgLacEnsbgzImjeN9/E2YEsmLIKe0HjzDQ9jpFEw4fkrJxIH2Oq9GGKYsFk3fb7u8yBR
QlqD75O6aRXxYp2fmTmCobd0LovUxQt7L/DICto9eQqakxylKHJzkUOap9FNhYS5qXSPFEDH3N6s
QWRstBmbAmNtJGSPRLIl6s5ddAxjMlyNh+UCAwEAAaOBiTCBhjAPBgNVHRMBAf8EBTADAQH/MAsG
A1UdDwQEAwIBBjAdBgNVHQ4EFgQUppFC/RNhSiOeCKQp5dgTBCPuQSUwRwYDVR0eBEAwPqA8MAWC
Ay5ncjAFggMuZXUwBoIELmVkdTAGggQub3JnMAWBAy5ncjAFgQMuZXUwBoEELmVkdTAGgQQub3Jn
MA0GCSqGSIb3DQEBBQUAA4IBAQAf73lB4XtuP7KMhjdCSk4cNx6NZrokgclPEg8hwAOXhiVtXdMi
Kahsog2p6z0GW5k6x8zDmjR/qw7IThzh+uTczQ2+vyT+bOdrwg3IBp5OjWEopmr95fZi6hg8TqBT
nbI6nOulnJEWtk2C4AwFSKls9cz4y51JtPACpf1wA+2KIaWuE4ZJwzNzvoc7dIsXRSZMFpGD/md9
zU1jZ/rzAxKWeAaNsWftjj++n08C9bMJL/NMh98qy5V8AcysNnq/onN694/BtZqhFLKPM58N7yLc
ZnuEvUUXBj08yrl3NI/K6s8/MT7jiOOASSXIl7WdmplNsDz4SgCbZN2fOUvRJ9e4AAAAAgAvL2V4
cG9ydC9oZGEzLzYuMTAuNC9sb2NhbC9jb25mL2NlcnRzLzc2NTc5MTc0LjAAAAEwuyuCLQAFWC41
MDkAAAQ0MIIEMDCCAxigAwIBAgIQUJRs7Bjq1ZxN1ZfvdY+grTANBgkqhkiG9w0BAQUFADCBgjEL
MAkGA1UEBhMCVVMxHjAcBgNVBAsTFXd3dy54cmFtcHNlY3VyaXR5LmNvbTEkMCIGA1UEChMbWFJh
bXAgU2VjdXJpdHkgU2VydmljZXMgSW5jMS0wKwYDVQQDEyRYUmFtcCBHbG9iYWwgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkwHhcNMDQxMTAxMTcxNDA0WhcNMzUwMTAxMDUzNzE5WjCBgjELMAkGA1UE
BhMCVVMxHjAcBgNVBAsTFXd3dy54cmFtcHNlY3VyaXR5LmNvbTEkMCIGA1UEChMbWFJhbXAgU2Vj
dXJpdHkgU2VydmljZXMgSW5jMS0wKwYDVQQDEyRYUmFtcCBHbG9iYWwgQ2VydGlmaWNhdGlvbiBB
dXRob3JpdHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCYJB69FbS638eMpSe2OAtp
87ZOqCwuIR1cRN8hXX4jdP5efrRKt6atH67gBhbim1vZZ3RrXYCPKZ2GG9mcDZhtdhAoWORlsH9K
mHmf4MMxfoArtYzAQDsRhtDLooY2YKTVMIJt2W7QDxIEM5dfT2Fa8OT5kavnHTu86M/0ay00fOJI
YRyO82FEzG+gSqmUsE3a56k0enI4qEHMPJQRfevIpoy3hsvKMzvZPTeL+3o+hiznc9cKV6xkmxnr
9A8ECIqsAxcZZPRaJSKNNCyy9mgdEm3Tih4U2sSPpuIjhdV6Db1q4Ons7Be7QhtnqiXtRYMh/MHJ
fNViPvryxS3T/dRlAgMBAAGjgZ8wgZwwEwYJKwYBBAGCNxQCBAYeBABDAEEwCwYDVR0PBAQDAgGG
MA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFMZPoj0GY4QJnM5i5ASsjVy16bYbMDYGA1UdHwQv
MC0wK6ApoCeGJWh0dHA6Ly9jcmwueHJhbXBzZWN1cml0eS5jb20vWEdDQS5jcmwwEAYJKwYBBAGC
NxUBBAMCAQEwDQYJKoZIhvcNAQEFBQADggEBAJEVOQMBG2f7Shz5CmBbodpNl2L5JFMn14JkTpAu
w0kbK5rc/Kh4ZzXxHfARvbdI4xD2Dd8/0sm2qlWkSLoC295ZLhVbO50WfUfXN+pfTXYSNrsf16GB
BEYgoyxtqZ4Bfj8pzgCT3/3JknOJiWSe5yvkHJEs0rnOfc5vMZnT5r7SHpDwCRR5XCOrTdLaIR9N
mXmd4c8nnxCbHIgNsIpkQTG4DmyQJKSbXHGPurt+HBvbaoAPIbzp26a3QPSyi6mx5O+aGtA9aZnu
qCij4Tyz8LIRnM98QObd50N9otg6tamN8jSZxNQQ4Qb9CYQQO+7ETPTsJ3xCwnR8gooJybQDJbwA
AAACAC4vZXhwb3J0L2hkYTMvNy4yLjAvbG9jYWwvY29uZi9jZXJ0cy9kODI3NGUyNC4wAAABSucY
cSgABVguNTA5AAAEaDCCBGQwggNMoAMCAQICEES+DItQACS0EdM2MEvAM3cwDQYJKoZIhvcNAQEF
BQAwgaMxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJVVDEXMBUGA1UEBxMOU2FsdCBMYWtlIENpdHkx
HjAcBgNVBAoTFVRoZSBVU0VSVFJVU1QgTmV0d29yazEhMB8GA1UECxMYaHR0cDovL3d3dy51c2Vy
dHJ1c3QuY29tMSswKQYDVQQDEyJVVE4tVVNFUkZpcnN0LU5ldHdvcmsgQXBwbGljYXRpb25zMB4X
DTk5MDcwOTE4NDgzOVoXDTE5MDcwOTE4NTc0OVowgaMxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJV
VDEXMBUGA1UEBxMOU2FsdCBMYWtlIENpdHkxHjAcBgNVBAoTFVRoZSBVU0VSVFJVU1QgTmV0d29y
azEhMB8GA1UECxMYaHR0cDovL3d3dy51c2VydHJ1c3QuY29tMSswKQYDVQQDEyJVVE4tVVNFUkZp
cnN0LU5ldHdvcmsgQXBwbGljYXRpb25zMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
s/uRoeQ2VYWsBjRboJpYsvi1DwV3g64ysXaSaOwjSsl2P+Octjd5A7mraY0HJbYZZ+SwGxhzYUro
fs3TL2TjpnwM+heAow1HiU9RcS/u/D/5uBaAh4mTJSCaQ4JpJHYoWTWhHcB/gwZkFiAs00mkhbTA
YX9RCPhoFZGAy6XV7js69IQEXmBZp4w0cu64eMXROxJKb35lJ7mkVcW5b0OkxR0smcBSpHhMFbNA
mAhrQ8YBsHp79WscIj/L7/+o0DpLdhWe0tHGLuPbVxsyorhv6IamP3Cr5XCSq0QeQFD7nKNi5Gxu
oMje4oBC+ukv6M4yBI98jbccozU8Fd2ew66XpQIDAQABo4GRMIGOMAsGA1UdDwQEAwIBxjAPBgNV
HRMBAf8EBTADAQH/MB0GA1UdDgQWBBT6hsnb4LrpePVLqNYV3/DT4WoUPDBPBgNVHR8ESDBGMESg
QqBAhj5odHRwOi8vY3JsLnVzZXJ0cnVzdC5jb20vVVROLVVTRVJGaXJzdC1OZXR3b3JrQXBwbGlj
YXRpb25zLmNybDANBgkqhkiG9w0BAQUFAAOCAQEApPMlzNHUkYMi0Mwyq5uWTjSRVCAlNGFfKgIV
4Yuq/31kUc8K/7x92CFqeMsvUW/4Qh0zveu1e5TDw6mgLd/RKR8d/o8/u6hFKn/RblUk4rsC+zE/
vui87EAr+AHUVjjkykSCtWEgIWdl9vAL5zT4pcKco1xAH4WTlQbeT9Qnqbal/BbNczE/uGUnz9RT
GvCsbp9PBQwDgaeEKcRavWRXcq07zzcYppjGrQa03AijBNUppJaaEmdKjGBFnfEjmrAAnGi1mFDT
744ukmWxSD4hvhUwKg21DKNrP65/V/Uflnzfb92CMCxlG0BKzWi5cuxxduxUjh+FDAFq+qY4rB/E
hAAAAAIALy9leHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy9lMjY4YTRjNS4wAAAB
MLsrIC0ABVguNTA5AAAEHDCCBBgwggMAoAMCAQICAQEwDQYJKoZIhvcNAQEFBQAwZTELMAkGA1UE
BhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMR0wGwYDVQQLExRBZGRUcnVzdCBUVFAgTmV0d29y
azEhMB8GA1UEAxMYQWRkVHJ1c3QgQ2xhc3MgMSBDQSBSb290MB4XDTAwMDUzMDEwMzgzMVoXDTIw
MDUzMDEwMzgzMVowZTELMAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMR0wGwYDVQQL
ExRBZGRUcnVzdCBUVFAgTmV0d29yazEhMB8GA1UEAxMYQWRkVHJ1c3QgQ2xhc3MgMSBDQSBSb290
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlpbUIUlg4mvoQQcM3sTg3BMjzcE1x/vW
ThEKZ171BltrpQg7WykWOueHsjQGxbwFpQN8gsspEK7hiIG91p7T/i1WwRXO4yadFS4Q+waPMATe
p7RjtP+xnK48r3e2VsW1q6LpaTo9DjN5Mj9wgpKZYW2NMAiPcT+mSFcZ+CXcS2ZcpXSPmK7I+cAG
Iuesc9+lLvtS3LEVZSD6NWZp3t8s8W68MNssJBLb6zU1aJDLALCXIT10ISNlNCu7eFmj1uF2OZqk
SY6MdK9upJqj2ZvSOFybohjMdSOEvuviTTNxjhrwwvjHHaKtA5cs+M8lxva4JDGxY12Sf2PwJclT
Lh+/TQIDAQABo4HSMIHPMB0GA1UdDgQWBBSVsbTwlLa9x9rREQkhvsGvSf0QezALBgNVHQ8EBAMC
AQYwDwYDVR0TAQH/BAUwAwEB/zCBjwYDVR0jBIGHMIGEgBSVsbTwlLa9x9rREQkhvsGvSf0Qe6Fp
pGcwZTELMAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMR0wGwYDVQQLExRBZGRUcnVz
dCBUVFAgTmV0d29yazEhMB8GA1UEAxMYQWRkVHJ1c3QgQ2xhc3MgMSBDQSBSb290ggEBMA0GCSqG
SIb3DQEBBQUAA4IBAQAsbWQbH80N3bkB+pZjNDJIR5mul+39chamc0da9Ovd6fXW+0XMKYlEXb9G
OT3o7rxNVIYeHWzjFydD4YlWK6lvck5JM+NyfCojmrw+/ygq7aP/HCO6Q1cJZ01LYgYt+P9snWAe
2BxLfbUxL9nQfF343muDGHg3Vy/oMwdn3x7HayqVdq6PV6Pw9FK0qVMIz+BP03pTi/27HFY28v6y
tuV2u9UiZac//tFmrQu8a5mG7z998xgyynvG46tkRpX4JmnZVYN7LJYH/1ksRKPG5emp3KFjgFoh
XiHPU1Twum+J26iqlc+L43HMHhsgRAjAerZA/cTkNeEdFhzQvCuO1nHZAAAAAgAvL2V4cG9ydC9o
ZGEzLzYuMTAuNC9sb2NhbC9jb25mL2NlcnRzLzIzZjRjNDkwLjAAAAEwuyuF2AAFWC41MDkAAAQT
MIIEDzCCAvegAwIBAgIBADANBgkqhkiG9w0BAQUFADBoMQswCQYDVQQGEwJVUzElMCMGA1UEChMc
U3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjEyMDAGA1UECxMpU3RhcmZpZWxkIENsYXNzIDIg
Q2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDQwNjI5MTczOTE2WhcNMzQwNjI5MTczOTE2WjBo
MQswCQYDVQQGEwJVUzElMCMGA1UEChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjEyMDAG
A1UECxMpU3RhcmZpZWxkIENsYXNzIDIgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggEgMA0GCSqG
SIb3DQEBAQUAA4IBDQAwggEIAoIBAQC3Msj+6XGmBIWtDBFk385N78gDGIc/oav7PKaf8MOh2tTY
bitTkPskpD6E8J7oX+zlJ0T1KKY/e97gKvDIr1MvnsoFAZMej2YcOadN+lq2cwQlZut3f+dZxkqZ
JRRU6ybH838Z1TBwj6+wRir/resp7defqgSHo9T5iaU0X9tDkYI22WY8sbi5gv2cOj4QyDvvBmVm
epsZGD3/cVE8MC5fvj13c7JdBmzDI1aaK4UmkhynArPkPw2vCHmCuDY96pzTNbO8acr1zJ3o/WSN
F4Azbl5KXZnJHoe0nRrA1W4TNSNe35tfPe/W93bC6j67eA0cQmdrBNj41tpvi/JEoAGrAgEDo4HF
MIHCMB0GA1UdDgQWBBS/X7fRzt0fhvRbVazc1xDCDqmI5zCBkgYDVR0jBIGKMIGHgBS/X7fRzt0f
hvRbVazc1xDCDqmI56FspGowaDELMAkGA1UEBhMCVVMxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNo
bm9sb2dpZXMsIEluYy4xMjAwBgNVBAsTKVN0YXJmaWVsZCBDbGFzcyAyIENlcnRpZmljYXRpb24g
QXV0aG9yaXR5ggEAMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBAAWdP4id0ckaVaGs
afPzWdqbAYcaT1epoXkJKtv3L7IezMdeatiDh6GX70k1PncGQVhiv45YuApnP+yz3SFmH8lU+nLM
PUxA2IGvd56Deruix/U0F47ZEUD0/CwqTRV/p2JdLiXTAAsgGh1o+Re49L2L7ShZ3U0WixeDyLJl
xy16paq8U4Zt3VekyvggQQto8PT7dL5WXXp59fkdheMtlb71cZBDzI0fmgAKhynpVSJYACPq4xJD
KVtHCN2MQWplBqjlIapBtJUhlbl90TSrE9atvNziPTnNvT51cKEYWQPJIrSPnNVeKtelttQKbfi3
QBFGmh95DmK/D5fs4C8fF5QAAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40L2xvY2FsL2NvbmYvY2Vy
dHMvNWY1ZTVjYWEuMAAAATC7KyvdAAVYLjUwOQAAA6MwggOfMIIDDKADAgECAhEA/0XVJ10k+7PC
OSRTV+FP3jANBgkqhkiG9w0BAQUFADBfMQswCQYDVQQGEwJVUzEgMB4GA1UEChMXUlNBIERhdGEg
U2VjdXJpdHksIEluYy4xLjAsBgNVBAsTJVNlY3VyZSBTZXJ2ZXIgQ2VydGlmaWNhdGlvbiBBdXRo
b3JpdHkwHhcNMDAwODA0MDAwMDAwWhcNMDQwODAzMjM1OTU5WjCBnjEXMBUGA1UEChMOVmVyaVNp
Z24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdvcmsxOzA5BgNVBAsTMlRlcm1z
IG9mIHVzZSBhdCBodHRwczovL3d3dy52ZXJpc2lnbi5jb20vUlBBIChjKTAwMSUwIwYDVQQDExxT
ZWN1cmUgU2VydmVyIE9DU1AgUmVzcG9uZGVyMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC4
UZlkhQ7uswpo8L9jdh1T9fyheIwz7p/0vjnamw9NR6mPIOhLRL3OzXuQ0TDokMQle4ko3r32kx3/
uf+StamN5K7M4sMHg2qjchABJ2IipjUmOS2ez2AM/Eek19BCeKcdbNDLTxWnKQq0lUXEsedaCdc5
ldgdNZ7CvbNdwQxLHwIDAQABo4IBHTCCARkwIAYDVR0RBBkwF6QVMBMxETAPBgNVBAMTCE9DU1Ag
MS00MD4GA1UdHwQ3MDUwM6AxoC+GLWh0dHA6Ly9jcmwudmVyaXNpZ24uY29tL1JTQVNlY3VyZVNl
cnZlci1wLmNybDATBgNVHSUEDDAKBggrBgEFBQcDCTBCBggrBgEFBQcBAQQ2MDQwMgYIKwYBBQUH
MAGmJhYkaHR0cDovL29jc3AudmVyaXNpZ24uY29tL29jc3Avc3RhdHVzMEQGA1UdIAQ9MDswOQYL
YIZIAYb4RQEHAQEwKjAoBggrBgEFBQcCARYcaHR0cHM6Ly93d3cudmVyaXNpZ24uY29tL1JQQTAJ
BgNVHRMEAjAAMAsGA1UdDwQEAwIHgDANBgkqhkiG9w0BAQUFAAN+AACzEFNmnEmTLjGgAkLSWFd+
ZqH+G4phGFBALB4rQaXW2/+sCBxaBW0CXCq2lk9H275O287Muoa4GM6xEpFfY/fzSD7M8U0T5G0J
lHgAksujIJ0GC2qgQwfO0Rlsjxh1mp8XM/2pJrjj4t7CqMRain+Y1gcGa8xWnoZwztTvAAAAAgAu
L2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvOWQ2NTIzY2UuMAAAAVGFtBwzAAVY
LjUwOQAABbQwggWwMIIDmKADAgECAhAVyL1lR1yvuJcAXuQG0rydMA0GCSqGSIb3DQEBBQUAMF4x
CzAJBgNVBAYTAlRXMSMwIQYDVQQKDBpDaHVuZ2h3YSBUZWxlY29tIENvLiwgTHRkLjEqMCgGA1UE
CwwhZVBLSSBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTA0MTIyMDAyMzEyN1oXDTM0
MTIyMDAyMzEyN1owXjELMAkGA1UEBhMCVFcxIzAhBgNVBAoMGkNodW5naHdhIFRlbGVjb20gQ28u
LCBMdGQuMSowKAYDVQQLDCFlUEtJIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggIiMA0G
CSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDhJQ/ujduIM3Vnza0ffTpObZ3TLxTzY3TLASFqN+qE
UAdLJlsJQ2whnmrI1QP1YGmPzPAi5B/n92oiMbcsFfLg/gBqQ/+HZca1GsGnTG0icCGKMfKXdIkJ
EiYcnsrZEqKVPNrpZ78IoGTj1kK3Re+X9Pb117VKFQJYfZhYS2C8zdcNmhMzU9Fh+XrV13izmjP3
AIbOHU2UOK+o7HhRcIpcEINRIfcRPTSGXuVIzZeBgjVMGexl9mvFBaHuRxPWsyEnlBAK2SQ7ur5E
E0YwP5c82NfXau47OOMr1JcOuRvnB0l/Nyr5d3jPVO1bRp2jgA6RQ8HWW18Uup+mjSRHQFm/cjiy
Nmw3/5nRXQ5ZCqtp98CyBEV6VACuvlP2tefh+DyjMdKp/iFSZMWmZ/B1BwaUFIFVxifkAY8XwWpx
175L+5RYfX4RM7FC92JsGNbPCWg+f2z2Ho9iraVj2wmnHyJCQR5vmYo+1/k/QHp5sKUBktKdPQgV
pRABLbMydqiVDbN6mvsHEHgRb+GPx7oPJRp0KuUcmEGZ3yGH6JUGagqzakd2ZfY6z49iFxl7CijN
GtKDHiHHLL++/2Fot2cbu3hNjc5n5eTBjrcjZuKdkHU0mKk2K4qalLmd7MyKsfgliVxati+MH215
JKdSaMOENeJmjWMOJU3VGbLmeTenIp1UMQIDAQABo2owaDAdBgNVHQ4EFgQUHgz3tmfy4ZImCUXA
VTkudz9CSqIwDAYDVR0TBAUwAwEB/zA5BgRnKgcABDEwLzAtAgEAMAkGBSsOAwIaBQAwBwYFZyoD
AAAEFEWwwscKVnzuW3gMlfkYU8GmHNgQMA0GCSqGSIb3DQEBBQUAA4ICAQAJs4NTWQE+lUm58YG6
+XYgI7UnYHTUapk0XmwAU9mf8qaxJAdEairGpY54EuhH2VgbEypeeZufCipnpiU/BmlWc8OKZkj7
KYFXdAbKnOoo6DhnJivx1bU/ZZP4Nl2OjY1AIIcZ6u8nwD20OQ8le2hQdFWcDFl9Wj1BlCVSCOBH
LBUxGdW/B1XGuxK1l/Rfg4W6ccHZbIERdgoKsL+Cl/fqPfr67C2pKJQ7Vt3SUS6uwL0IFYx3UjSW
1pus0x2OYQ81e5uuOWkLYmBAIDaPr/s27i0ISh24v5tc+OqlG6Bzptj4buAzBF9oqieH7dnBkJzt
veNqNa9j36sY2brm6UrqUIoPYZMe4i0Z4jCUNZJdDrYHrxmAj0eQUUsuTd2F4tIKUgoXmvwasFAC
5QGjYzchTETEm1GZEQ5znAaPVC6nKF5EOYdWLTe9hUSU4QxLLJzDkoU0YcsPuJtKQ1L+NDp9uOkp
3HapyDD4FHGAxh42SHQiQVyHgugYcYtBiUTnflhbqLiNE+mnbMNH7bManWKujYLqlJ7dWRDDrd3i
TeMx1cfs6PKw/pIeFgoa/Nnz+Ce2yb4dtGxkkH/05MRb1zeuQg7dpBpvfIhUxRZu4XpoLvg6vw2k
PIk7eKdOY4MEIQhnjfKCSdBb/bHND4OE1D4ghfdKPSuc/SoKCU3qgfgRnAAAAAIALi9leHBvcnQv
aGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzL2NmNzAxZWViLjAAAAFRhbPhNwAFWC41MDkAAAO8
MIIDuDCCAqCgAwIBAgIQDPCOXAgWpa1Cf/DrJxhZ0DANBgkqhkiG9w0BAQUFADBIMQswCQYDVQQG
EwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24xFzAVBgNVBAMTDlNlY3VyZVRy
dXN0IENBMB4XDTA2MTEwNzE5MzExOFoXDTI5MTIzMTE5NDA1NVowSDELMAkGA1UEBhMCVVMxIDAe
BgNVBAoTF1NlY3VyZVRydXN0IENvcnBvcmF0aW9uMRcwFQYDVQQDEw5TZWN1cmVUcnVzdCBDQTCC
ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKukgeWVzfX2FI7CT8rU4niVWJxB4Q2ZQCQX
OZEzZum+4YOvYlyJ0fwkW2Gz4BERQRwdbvC4u/jep4G6pkjGnx29vo6pQT64lO0pGtSO0gMdA+9t
DWccV9cGrcrI9f4Or2YlSASWC12juhbDCE/RRvgUXPLIXgGZbf2IzIaowW8xQmxSPmjL8xk037uH
GFaAJsTQ3MBv396gwpEWoGQRS0S8Hvbn+mPeZqx2pHGj7DaUaHp3pLHnDi+BeuK1cobvomuL8A/b
01k/unK8RCSc43Oz969XL0Imnal0ugBS8kvNU3xHCzaFDmapCJcWNFfBZveA4+1wVMeT4C4oFVmH
ursCAwEAAaOBnTCBmjATBgkrBgEEAYI3FAIEBh4EAEMAQTALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/
BAUwAwEB/zAdBgNVHQ4EFgQUQjK2FvoE/f5dS3rD/fdMQB1aQ68wNAYDVR0fBC0wKzApoCegJYYj
aHR0cDovL2NybC5zZWN1cmV0cnVzdC5jb20vU1RDQS5jcmwwEAYJKwYBBAGCNxUBBAMCAQAwDQYJ
KoZIhvcNAQEFBQADggEBADDtT0rhWDpSclu1pqNlGKa7UTt36Z3q059c4EVlew3KW+JwULKUBRSu
SceNQQcSc5R+DCMh/bwQf2AQWnL1mA6s7Ll/3XpvXdMc9P+IBWlCqQVxyLesJugutIxq/3HcuLHf
mbx8IVQr5Fiiu1cprp6poxkmD5kuCLDv/WnPmRoJjeOnnyvJNjR7JLN4TJUXpAYmHrZkUjZfYGfZ
nMUFdAvnZyPSCPyI6a6Lf+Ew9Dd+/cYy2i2eRDAwbO4H3tI0/NL/QPZL9GZGBlSm8jIKYyYwa5vR
3ItHuuG51WLQoqD0ZwV4KWMabwTW+MZMo5qxN7SN5ShLHZ4swrhovO0C7jEAAAACAC4vZXhwb3J0
L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy84NWNkZTI1NC4wAAABUYW0fkQABVguNTA5AAAD
4TCCA90wggLFoAMCAQICAQAwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVTMRAwDgYDVQQI
EwdBcml6b25hMRMwEQYDVQQHEwpTY290dHNkYWxlMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5v
bG9naWVzLCBJbmMuMTIwMAYDVQQDEylTdGFyZmllbGQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3Jp
dHkgLSBHMjAeFw0wOTA5MDEwMDAwMDBaFw0zNzEyMzEyMzU5NTlaMIGPMQswCQYDVQQGEwJVUzEQ
MA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UEChMcU3RhcmZpZWxk
IFRlY2hub2xvZ2llcywgSW5jLjEyMDAGA1UEAxMpU3RhcmZpZWxkIFJvb3QgQ2VydGlmaWNhdGUg
QXV0aG9yaXR5IC0gRzIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC97cED/PaP/AKx
b1ufSNmdeeKitwNhVhjDR7bXyj01LolD96Fpm96KGv0TIJy0SXcyKVb9ueyM3SL6ctwnYZfu9lqE
7G4ZuYks3IRb1XT7a1/FiaUQUolGVfS4dRzmf+RUrkv4VXJXAhn4F3FZ6x4oB3TFnUi+bLT0pLDz
ZDd5ksDsRl5/4W1TTGKvzR8LY7s6nfv8eQCYYXTPJoJAY/OycmoZDZnK1A51zDf7i4nBWfFif1+z
X2Uw+Ke3TXZaHnZeNMDollaZirPwf6TNvdwyMXyRz+BfEfhrqklc0ZmU0aLjY1sJdrVWYuFLdB2W
1CbUCARZ0JgODube/MPsH5DxAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQD
AgEGMB0GA1UdDgQWBBR8DDIfp9kwf8R9aKNiqKHOqwdbJzANBgkqhkiG9w0BAQsFAAOCAQEAEVn6
JU8Db5SZO5ofgoU51HYFlF7hKJNtYl0JwqCo1LB1OPE0ap3kn4qGJlHmLNHGLW6VIEqSAey4imd7
MeJnLoyVAyYuQ51KMfYOtQy7t+I3fyK6AKMOe1L7a7s7xNN5UU7NkPRnBxnIPEZ6DQF9xVjnbeaF
MBeaJMQQ4AT34PJ/1KoK/0IdN+2U5WRZEiB3ONMyPjiBdZZz+miPscvOH8Xs+px+z36x8Qcttvy/
yqS/0JcFSrzqGCgCkL1UeAkhcdPRfR3ZFrCpYT3QCgAi/Md7ywlkRQs7QIH3fXwy9ZjKWI59Ku6Q
WXNk+TZ0XiWh9WYFLn85Fakq+1CLjoVp9AAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9j
b25mL2NlcnRzLzE2NzYwOTBhLjAAAAFRhbTbUwAFWC41MDkAAAP7MIID9zCCAt+gAwIBAgIESJ8A
ATANBgkqhkiG9w0BAQUFADCBijELMAkGA1UEBhMCQ04xMjAwBgNVBAoMKUNoaW5hIEludGVybmV0
IE5ldHdvcmsgSW5mb3JtYXRpb24gQ2VudGVyMUcwRQYDVQQDDD5DaGluYSBJbnRlcm5ldCBOZXR3
b3JrIEluZm9ybWF0aW9uIENlbnRlciBFViBDZXJ0aWZpY2F0ZXMgUm9vdDAeFw0xMDA4MzEwNzEx
MjVaFw0zMDA4MzEwNzExMjVaMIGKMQswCQYDVQQGEwJDTjEyMDAGA1UECgwpQ2hpbmEgSW50ZXJu
ZXQgTmV0d29yayBJbmZvcm1hdGlvbiBDZW50ZXIxRzBFBgNVBAMMPkNoaW5hIEludGVybmV0IE5l
dHdvcmsgSW5mb3JtYXRpb24gQ2VudGVyIEVWIENlcnRpZmljYXRlcyBSb290MIIBIjANBgkqhkiG
9w0BAQEFAAOCAQ8AMIIBCgKCAQEAm35z7r07eKpkQ0H1UN+U8i6yjUqORlTSIRLIOTJCBumD1Z9S
7eVnAztUwYyZmczpwA//DdmEEbK40ctb3B75aDFk4Zv6dOtouSCV98YPjUesWgbdYavi7NifFy2c
yjw1l1VxzUOFsUcW9SxTgHbP0wBkvUCZ3czY28Sf1hNfQYOL+Q2HklY0bBoQCxfVWhyXWIQ8hBou
XJE0bhlffxdpxWXvayHG1VA6v2G5BY3vbzQ6sm8UY78WO5upKv23KzhmBsUs4qpnHkWnjQRmQvaP
K++IIGmPMowUc9orhpFjIpryp9vOiYurXccUwVswah+xt54ugQEC7c+WXmPbqOY4twIDAQABo2Mw
YTAfBgNVHSMEGDAWgBR8cks5x8DbYqVPm6oYNJKiyoOCWTAPBgNVHRMBAf8EBTADAQH/MA4GA1Ud
DwEB/wQEAwIBBjAdBgNVHQ4EFgQUfHJLOcfA22KlT5uqGDSSosqDglkwDQYJKoZIhvcNAQEFBQAD
ggEBACrDx0M3j92tpLIM7twUbY8opJhJywyA6vPtI2Z1fcXTIWd50XPFtQO3WKwMVC/GVhMPMdoG
52U7HW8228gd+f2ABsqjPWYWqJ1MFn3AlUa1UeTiH9fqBk1jjZaM7+czV0I664zBechNdn3e9rG3
geCg+aF4RhcaVpjwTj2rHO3sOdwHSPdj/gauwqRcalsyiMXHM4WsZkJHwlgkmeHlPuV1LI5D1l08
eB6olYIpUNHRFrrvwb562bTYzB5MRuF3sTGrvSrIzo9uoV1/A3U05K2JRVRevq4opbs/eHnrc7MK
Df2+yfdWrPa37S+bISnHOLaVxATywy39FCqQmbkHzJ8AAAACAC4vZXhwb3J0L2hkYTMvNy4yLjAv
bG9jYWwvY29uZi9jZXJ0cy9lZDA0OTgzNS4wAAABSucYHKoABVguNTA5AAADBjCCAwIwggJrAhAy
iI6a0vXrE0f4f8QgNyX4MA0GCSqGSIb3DQEBBQUAMIHBMQswCQYDVQQGEwJVUzEXMBUGA1UEChMO
VmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0NsYXNzIDQgUHVibGljIFByaW1hcnkgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkgLSBHMjE6MDgGA1UECxMxKGMpIDE5OTggVmVyaVNpZ24sIEluYy4gLSBG
b3IgYXV0aG9yaXplZCB1c2Ugb25seTEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazAe
Fw05ODA1MTgwMDAwMDBaFw0yODA4MDEyMzU5NTlaMIHBMQswCQYDVQQGEwJVUzEXMBUGA1UEChMO
VmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0NsYXNzIDQgUHVibGljIFByaW1hcnkgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkgLSBHMjE6MDgGA1UECxMxKGMpIDE5OTggVmVyaVNpZ24sIEluYy4gLSBG
b3IgYXV0aG9yaXplZCB1c2Ugb25seTEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazCB
nzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAuvDkz/nEroVUuQdX+Y/Ff2gR+MQXsETc4zBz1Spi
KrjQzBztKFt+vWrcs5EkykFiPPwCAb8cFjGUBZd2bqKtvWEXbE4whvBRNypQx6higdxbSqrBoLRu
6y/lV8WxK0Bw21pNoY4fvQMf2APUj0yZcbzigsxY6Jg6htOGOPMAKR8CAwEAATANBgkqhkiG9w0B
AQUFAAOBgQCFjBLBp7lQFXrLPqy4Q4rcqt0UuomBfgE8I3EhiC+C3GP6AkWsRVnXKlhEW7efgTuS
aD3iNyT1e2yPdjWWCahZnbnOI6t01oP9MnMn2Gk+Q3T2rsWJmudTfOl79kvzwWWD3o2KnDyIjTlZ
/Ko/Io2hwWZQgXJM7SJkT0/KgJG2KQAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25m
L2NlcnRzLzg5YzAyYTQ1LjAAAAFRhbPxrQAFWC41MDkAAAKNMIICiTCCAg+gAwIBAgIQH0evqmIA
cFBUTAGem2OZKjAKBggqhkjOPQQDAzCBhTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIg
TWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQx
KzApBgNVBAMTIkNPTU9ETyBFQ0MgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDgwMzA2MDAw
MDAwWhcNMzgwMTE4MjM1OTU5WjCBhTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFu
Y2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzAp
BgNVBAMTIkNPTU9ETyBFQ0MgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwdjAQBgcqhkjOPQIBBgUr
gQQAIgNiAAQDR3svdcmCFYX7deSRFtSrYpn1PlILBs5BAH+X4QokPB0BBO490o0JlwzgdeT6+3eK
KvUDYEs2ixYjFq0JcfRK9ChQtP6IHG4/bC8vCVlbpVsLM5niwz2J+Wos77LTBumjQjBAMB0GA1Ud
DgQWBBR1cacZSBm8nZ3qQUfflMRId5nTeTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB
/zAKBggqhkjOPQQDAwNoADBlAjEA7wNbeqy3eApyt4jf/7VGFAkK+qDmfQjGGoe9GKhzvSbKYAyd
zpmfz1wPMOG+FDHqAjAU9JM8SaczepBGR7NjfRObTrdvGDeAU/7dIOA1mjbRxwG55tzd8/8dLDoW
V9mSOdYAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy9iMGVkMDM1YS4w
AAABUYW072cABVguNTA5AAAFRTCCBUEwggMpoAMCAQICAgy+MA0GCSqGSIb3DQEBCwUAMFExCzAJ
BgNVBAYTAlRXMRIwEAYDVQQKEwlUQUlXQU4tQ0ExEDAOBgNVBAsTB1Jvb3QgQ0ExHDAaBgNVBAMT
E1RXQ0EgR2xvYmFsIFJvb3QgQ0EwHhcNMTIwNjI3MDYyODMzWhcNMzAxMjMxMTU1OTU5WjBRMQsw
CQYDVQQGEwJUVzESMBAGA1UEChMJVEFJV0FOLUNBMRAwDgYDVQQLEwdSb290IENBMRwwGgYDVQQD
ExNUV0NBIEdsb2JhbCBSb290IENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAsAXb
yOuMxG6KIe+OTZxxCh9ScO1tgpyXxddMTkVJy0BCtRI0bBnCdKQxX4UCl+xDMwpT0pyMjre4edsr
1WryjmbE7isBB5LUs9AC31D2Va9mDsvgR2AvKzI5NVI6KIP4exbGGLhi1kclkc7wGRJNrWP10z91
XynwoTAcKqCYphW97v0ZNvDikUOP+srWECdJTO/dwfGFcJvK6qhaQ/xthm9z6TdFqfA2x8yIdR67
bAb/m2s+F+xhqnF8xh2i90npFbU81qFh9RH3BW8d/RG+0DAHwimwCU4m3OOiqJFqH8KRRYhc5Zi4
caUVGcl8dRHMcHRPLZsdkUT9Viig/ruGasj6XAtY3MZLdsirItlzD6X0WgKJP0+eIoLuonRTKj1T
J2kdbI4yLGQAJmNhNk6jRrc/fbMtrG2QopWizs/agucHNBmW6bghqil+pji+jilKIWZ5H7PDtQln
3tbUB0bzKtrmIjdgy4G2D6AP6ciVf79VkQV6zz0VwG/eCZQBg9c0G8xApfC4m2fVmJE7p4R4lSak
Wgj4K3S0AAQ837gUjujfqY1sZ5IzHcC30uySyL4JvywpBW8Ca57vvL8qvFvAUI9BcHGHsk23BKmE
ozKvru5rF4uysf5s4ZCMiKiXSM7ITcvzBs9fagpCsR4edy+OoOaSDgb8BSLSJuExUX0y3A8CAwEA
AaMjMCEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggIB
AF80gXbvlh3V5bXZAmOEFsGuoHBRp/dMRzXIC9coPYlx2aozQeoUG2whAMBsQhl+n2lbIELfotLa
xHyXS42w6KzI7qVpBJkKkqarJy4aTYG/hNRwHq1H/v1KnTPg8rnERQghCtppaXNyDb40/pSLrcMe
Ndeig+/lOMelhR+rzzTsPyj+DPFXhk7JVfcc1NilfQZ6b9XfEN+BTiFlsbbhF3mVRQbOX8zcRolj
aESNk/RkcKA9nSgFwzlwuGJ7IP3k2+kIobiePQnHT/ss+JN2Qd5S4OFX0p0DvHee/p4pXvfBUWAf
3toLsi11t0NIk+f2ecaEXYBZYJT8eJiPPJNR7UCQB99kYyTLTnEFodeUGogy8SJ0Iq6lptgSaUxg
owLuK+zUY5ILXr4vdmujtia8jwPYCvJMZEa9OWLllus0YxEozJXxre/v3IBYSOlLuOplrOn8gLW1
yEX5rMGf2bnqYoiOxPFLgxKt5ouE1p7C64MYn2q7GyRgM3DM7Pcy81zZeX3vnqT+ySPDJO4VkrE9
kU8mhr1mcyQT6qSuY8GtfYQDPBB4hht548Tz8gSVIK4jgsSzOgBiv+Y2JOFXuscekHXVXz+VYSvB
O83ls2hh0EYmqSFSaS3rLsfrd86mOrUDM0920edcVAFdy3j0yQy/zxKOFy0jaJTnq/6psisG0ATN
AAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvODZmMzI0NzQuMAAAAUrn
GI7eAAVYLjUwOQAAB+4wggfqMIIHU6ADAgECAgEAMA0GCSqGSIb3DQEBBQUAMIIBEjELMAkGA1UE
BhMCRVMxEjAQBgNVBAgTCUJhcmNlbG9uYTESMBAGA1UEBxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJ
UFMgSW50ZXJuZXQgcHVibGlzaGluZyBTZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJpcHNAbWFpbC5p
cHMuZXMgQy5JLkYuICBCLTYwOTI5NDUyMS4wLAYDVQQLEyVJUFMgQ0EgQ0xBU0UzIENlcnRpZmlj
YXRpb24gQXV0aG9yaXR5MS4wLAYDVQQDEyVJUFMgQ0EgQ0xBU0UzIENlcnRpZmljYXRpb24gQXV0
aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXMwHhcNMDExMjI5MDEwMTQ0WhcN
MjUxMjI3MDEwMTQ0WjCCARIxCzAJBgNVBAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQBgNV
BAcTCUJhcmNlbG9uYTEuMCwGA1UEChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2VydmljZXMg
cy5sLjErMCkGA1UEChQiaXBzQG1haWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEuMCwGA1UE
CxMlSVBTIENBIENMQVNFMyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEuMCwGA1UEAxMlSVBTIENB
IENMQVNFMyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEeMBwGCSqGSIb3DQEJARYPaXBzQG1haWwu
aXBzLmVzMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCrF/4OsMZoG1PwUr6f+tr6ixMEuwGP
Mtkfj03ONpja5ABEjCjYE0QqpGtOFyRCnNOIpEGC1iP7i8mG5bmpggXc8d4f4AyZVZjyOOxsnSAD
wO+qo8ZkBFEteA2j0qg61iRM6ZZ6GKwTIyIbfOgxEbNfCaowcHFGJWtJcYArlQGyHwIDAQABo4IE
SjCCBEYwHQYDVR0OBBYEFLiT/y7L3CyOoud6/jZRIaOYWww0MIIBRAYDVR0jBIIBOzCCATeAFLiT
/y7L3CyOoud6/jZRIaOYWww0oYIBGqSCARYwggESMQswCQYDVQQGEwJFUzESMBAGA1UECBMJQmFy
Y2Vsb25hMRIwEAYDVQQHEwlCYXJjZWxvbmExLjAsBgNVBAoTJUlQUyBJbnRlcm5ldCBwdWJsaXNo
aW5nIFNlcnZpY2VzIHMubC4xKzApBgNVBAoUImlwc0BtYWlsLmlwcy5lcyBDLkkuRi4gIEItNjA5
Mjk0NTIxLjAsBgNVBAsTJUlQUyBDQSBDTEFTRTMgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxLjAs
BgNVBAMTJUlQUyBDQSBDTEFTRTMgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxHjAcBgkqhkiG9w0B
CQEWD2lwc0BtYWlsLmlwcy5lc4IBADAMBgNVHRMEBTADAQH/MAwGA1UdDwQFAwMH/4AwawYDVR0l
BGQwYgYIKwYBBQUHAwEGCCsGAQUFBwMCBggrBgEFBQcDAwYIKwYBBQUHAwQGCCsGAQUFBwMIBgor
BgEEAYI3AgEVBgorBgEEAYI3AgEWBgorBgEEAYI3CgMBBgorBgEEAYI3CgMEMBEGCWCGSAGG+EIB
AQQEAwIABzAaBgNVHREEEzARgQ9pcHNAbWFpbC5pcHMuZXMwGgYDVR0SBBMwEYEPaXBzQG1haWwu
aXBzLmVzMEEGCWCGSAGG+EIBDQQ0FjJDTEFTRTMgQ0EgQ2VydGlmaWNhdGUgaXNzdWVkIGJ5IGh0
dHA6Ly93d3cuaXBzLmVzLzApBglghkgBhvhCAQIEHBYaaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAw
Mi8wOgYJYIZIAYb4QgEEBC0WK2h0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvaXBzMjAwMkNMQVNF
My5jcmwwPwYJYIZIAYb4QgEDBDIWMGh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcmV2b2NhdGlv
bkNMQVNFMy5odG1sPzA8BglghkgBhvhCAQcELxYtaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9y
ZW5ld2FsQ0xBU0UzLmh0bWw/MDoGCWCGSAGG+EIBCAQtFitodHRwOi8vd3d3Lmlwcy5lcy9pcHMy
MDAyL3BvbGljeUNMQVNFMy5odG1sMHMGA1UdHwRsMGowMaAvoC2GK2h0dHA6Ly93d3cuaXBzLmVz
L2lwczIwMDIvaXBzMjAwMkNMQVNFMy5jcmwwNaAzoDGGL2h0dHA6Ly93d3diYWNrLmlwcy5lcy9p
cHMyMDAyL2lwczIwMDJDTEFTRTMuY3JsMC8GCCsGAQUFBwEBBCMwITAfBggrBgEFBQcwAYYTaHR0
cDovL29jc3AuaXBzLmVzLzANBgkqhkiG9w0BAQUFAAOBgQAXZVyZlUMDJ68m5evQsxcj90Oqx/B9
7A/Gqa6ulg92KRziBi1+JsU8+qHBgc5TsELRl1caF36kUWHG7ule7wW6670Pp5Jv2KMGaCmOefX/
v/mnr+SxzsLRgEInBQQ0+MN/FngjDAck8kZHrTtU0K/VMbKvfcjq6dRW2Q4TssVFUAAAAAIALi9l
eHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzL2RkYzMyOGZmLjAAAAFK5xf5HAAFWC41
MDkAAAMXMIIDEzCCAnygAwIBAgIBATANBgkqhkiG9w0BAQQFADCBxDELMAkGA1UEBhMCWkExFTAT
BgNVBAgTDFdlc3Rlcm4gQ2FwZTESMBAGA1UEBxMJQ2FwZSBUb3duMR0wGwYDVQQKExRUaGF3dGUg
Q29uc3VsdGluZyBjYzEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lvbjEZ
MBcGA1UEAxMQVGhhd3RlIFNlcnZlciBDQTEmMCQGCSqGSIb3DQEJARYXc2VydmVyLWNlcnRzQHRo
YXd0ZS5jb20wHhcNOTYwODAxMDAwMDAwWhcNMjAxMjMxMjM1OTU5WjCBxDELMAkGA1UEBhMCWkEx
FTATBgNVBAgTDFdlc3Rlcm4gQ2FwZTESMBAGA1UEBxMJQ2FwZSBUb3duMR0wGwYDVQQKExRUaGF3
dGUgQ29uc3VsdGluZyBjYzEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lv
bjEZMBcGA1UEAxMQVGhhd3RlIFNlcnZlciBDQTEmMCQGCSqGSIb3DQEJARYXc2VydmVyLWNlcnRz
QHRoYXd0ZS5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBANOkUG7I/1Zr5s9dtuoMaHVH
oqrC2oQl/Kj0R1HahbUgdJSGHg91yekIYfUGbTBuFRkC6VLAYttNmZ7iagxEOM3+vuNkCXDF/rFr
KbYvScg71CcEJRCXL+eQbcAoQpnXTEPew/UhbVSfXcNY4cDk2VuwuNy0e982OsK1ZiIS1ocNAgMB
AAGjEzARMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEEBQADgYEAB/pMaVz7lcxG7oWDTSEw
jsrZqG9JGubaUeNgcGyEYRGhGshIPllDfU+VPaGLtwtimHp1it2ITk6eQNuozDJ0uW8NxuOzRAvZ
im+aKZuZGCg70eNAKJpaPNW15yAbi8qkq43pUdniTCxZqdq5snUb9kLy78fyGPmJvKP/iiMucEcA
AAACAC8vZXhwb3J0L2hkYTMvNi4xMC40L2xvY2FsL2NvbmYvY2VydHMvZjk1MGNjYzIuMAAAATC7
K1S/AAVYLjUwOQAAB+4wggfqMIIHU6ADAgECAgEAMA0GCSqGSIb3DQEBBQUAMIIBEjELMAkGA1UE
BhMCRVMxEjAQBgNVBAgTCUJhcmNlbG9uYTESMBAGA1UEBxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJ
UFMgSW50ZXJuZXQgcHVibGlzaGluZyBTZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJpcHNAbWFpbC5p
cHMuZXMgQy5JLkYuICBCLTYwOTI5NDUyMS4wLAYDVQQLEyVJUFMgQ0EgQ0xBU0UxIENlcnRpZmlj
YXRpb24gQXV0aG9yaXR5MS4wLAYDVQQDEyVJUFMgQ0EgQ0xBU0UxIENlcnRpZmljYXRpb24gQXV0
aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXMwHhcNMDExMjI5MDA1OTM4WhcN
MjUxMjI3MDA1OTM4WjCCARIxCzAJBgNVBAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQBgNV
BAcTCUJhcmNlbG9uYTEuMCwGA1UEChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2VydmljZXMg
cy5sLjErMCkGA1UEChQiaXBzQG1haWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEuMCwGA1UE
CxMlSVBTIENBIENMQVNFMSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEuMCwGA1UEAxMlSVBTIENB
IENMQVNFMSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEeMBwGCSqGSIb3DQEJARYPaXBzQG1haWwu
aXBzLmVzMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDgUSenC92v0blDW4I3RVZy75q2whLv
LBLMdvkGWa9dIdTSWrig1PNq/cppjWZI93Tm7ja96JaRdaZxKMrnIhIyabA+Hmv0UFJiYv1jO31+
7O446mL0bKhxjeHpi8k/xrXNlEJv3YJFPOjfCejvClWpVkdhTElkcxAoP8q/Cf/GLwIDAQABo4IE
SjCCBEYwHQYDVR0OBBYEFOuzGXnzwaUcrNy6H2aisptp0HgIMIIBRAYDVR0jBIIBOzCCATeAFOuz
GXnzwaUcrNy6H2aisptp0HgIoYIBGqSCARYwggESMQswCQYDVQQGEwJFUzESMBAGA1UECBMJQmFy
Y2Vsb25hMRIwEAYDVQQHEwlCYXJjZWxvbmExLjAsBgNVBAoTJUlQUyBJbnRlcm5ldCBwdWJsaXNo
aW5nIFNlcnZpY2VzIHMubC4xKzApBgNVBAoUImlwc0BtYWlsLmlwcy5lcyBDLkkuRi4gIEItNjA5
Mjk0NTIxLjAsBgNVBAsTJUlQUyBDQSBDTEFTRTEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxLjAs
BgNVBAMTJUlQUyBDQSBDTEFTRTEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxHjAcBgkqhkiG9w0B
CQEWD2lwc0BtYWlsLmlwcy5lc4IBADAMBgNVHRMEBTADAQH/MAwGA1UdDwQFAwMH/4AwawYDVR0l
BGQwYgYIKwYBBQUHAwEGCCsGAQUFBwMCBggrBgEFBQcDAwYIKwYBBQUHAwQGCCsGAQUFBwMIBgor
BgEEAYI3AgEVBgorBgEEAYI3AgEWBgorBgEEAYI3CgMBBgorBgEEAYI3CgMEMBEGCWCGSAGG+EIB
AQQEAwIABzAaBgNVHREEEzARgQ9pcHNAbWFpbC5pcHMuZXMwGgYDVR0SBBMwEYEPaXBzQG1haWwu
aXBzLmVzMEEGCWCGSAGG+EIBDQQ0FjJDTEFTRTEgQ0EgQ2VydGlmaWNhdGUgaXNzdWVkIGJ5IGh0
dHA6Ly93d3cuaXBzLmVzLzApBglghkgBhvhCAQIEHBYaaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAw
Mi8wOgYJYIZIAYb4QgEEBC0WK2h0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvaXBzMjAwMkNMQVNF
MS5jcmwwPwYJYIZIAYb4QgEDBDIWMGh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcmV2b2NhdGlv
bkNMQVNFMS5odG1sPzA8BglghkgBhvhCAQcELxYtaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9y
ZW5ld2FsQ0xBU0UxLmh0bWw/MDoGCWCGSAGG+EIBCAQtFitodHRwOi8vd3d3Lmlwcy5lcy9pcHMy
MDAyL3BvbGljeUNMQVNFMS5odG1sMHMGA1UdHwRsMGowMaAvoC2GK2h0dHA6Ly93d3cuaXBzLmVz
L2lwczIwMDIvaXBzMjAwMkNMQVNFMS5jcmwwNaAzoDGGL2h0dHA6Ly93d3diYWNrLmlwcy5lcy9p
cHMyMDAyL2lwczIwMDJDTEFTRTEuY3JsMC8GCCsGAQUFBwEBBCMwITAfBggrBgEFBQcwAYYTaHR0
cDovL29jc3AuaXBzLmVzLzANBgkqhkiG9w0BAQUFAAOBgQAr0Ov92sjKWWra08wyLslUG4pifhUt
6dkx0y70JyP/W6vFSrZyQK5TdPS8BbTG2cjJd/u3+TR/eAD41qTkUj8sSmNXgXVajuiM+wLAlMYp
urPcHOiyr9IuYlsaqY4OzMVXRVEU6U4ciKWR9KP3jlHIqb6GMz7mL0hur1SQTq2xJQAAAAIALy9l
eHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy81NGVkZmE1ZC4wAAABMLsrSkoABVgu
NTA5AAADYDCCA1wwggLFoAMCAQICAgPrMA0GCSqGSIb3DQEBBAUAMIG8MQswCQYDVQQGEwJERTEQ
MA4GA1UECBMHSGFtYnVyZzEQMA4GA1UEBxMHSGFtYnVyZzE6MDgGA1UEChMxVEMgVHJ1c3RDZW50
ZXIgZm9yIFNlY3VyaXR5IGluIERhdGEgTmV0d29ya3MgR21iSDEiMCAGA1UECxMZVEMgVHJ1c3RD
ZW50ZXIgQ2xhc3MgMyBDQTEpMCcGCSqGSIb3DQEJARYaY2VydGlmaWNhdGVAdHJ1c3RjZW50ZXIu
ZGUwHhcNOTgwMzA5MTE1OTU5WhcNMTEwMTAxMTE1OTU5WjCBvDELMAkGA1UEBhMCREUxEDAOBgNV
BAgTB0hhbWJ1cmcxEDAOBgNVBAcTB0hhbWJ1cmcxOjA4BgNVBAoTMVRDIFRydXN0Q2VudGVyIGZv
ciBTZWN1cml0eSBpbiBEYXRhIE5ldHdvcmtzIEdtYkgxIjAgBgNVBAsTGVRDIFRydXN0Q2VudGVy
IENsYXNzIDMgQ0ExKTAnBgkqhkiG9w0BCQEWGmNlcnRpZmljYXRlQHRydXN0Y2VudGVyLmRlMIGf
MA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC2tME1BS4NjeygQGocDiemUJJrUBsH3i7ndszg2vyE
qF6MY2orTdlOAnYRwQvyjXnKALbxsA7X+6QXPa+raXqWJ7+vM6GaKlmqxLU3CPISpTG2Q/UylnEo
KKuNKIbfu+7jDH0w1sNSq49dJ5xrwKPnBWtXSUSzbupkz9KOelB3dwIDAQABo2swaTAPBgNVHRMB
Af8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAzBglghkgBhvhCAQgEJhYkaHR0cDovL3d3dy50cnVz
dGNlbnRlci5kZS9ndWlkZWxpbmVzMBEGCWCGSAGG+EIBAQQEAwIABzANBgkqhkiG9w0BAQQFAAOB
gQAWPcbNwbuFcYVGnz4gj1EomewtRSFjI1sEu0yQuIiSBE29fQGjP/bszvHe/n3l4T67xqteC909
lsTLqdT5JuYGTp4MpXq6bsN8ghnRx7Gxw9sNjptAfDcL8V3o/R+QiKUOTjdkIahOjbSf8d5IrdVW
GFIpi0c0EgnUu5I17w/bNAAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRz
LzlkYmVmZTdiLjAAAAFRhbP4jQAFWC41MDkAAAOBMIIDfTCCAmWgAwIBAgIBADANBgkqhkiG9w0B
AQUFADBgMQswCQYDVQQGEwJKUDElMCMGA1UEChMcU0VDT00gVHJ1c3QgU3lzdGVtcyBDTy4sTFRE
LjEqMCgGA1UECxMhU2VjdXJpdHkgQ29tbXVuaWNhdGlvbiBFViBSb290Q0ExMB4XDTA3MDYwNjAy
MTIzMloXDTM3MDYwNjAyMTIzMlowYDELMAkGA1UEBhMCSlAxJTAjBgNVBAoTHFNFQ09NIFRydXN0
IFN5c3RlbXMgQ08uLExURC4xKjAoBgNVBAsTIVNlY3VyaXR5IENvbW11bmljYXRpb24gRVYgUm9v
dENBMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALx/7FebJOD+nLpCeamIivqA4PUH
KUPqjgo0No0c+qe1OXj/l3X3L+SqawSERMqm4miO/VVQYg+kcQ7OBzgtQoVQrTyWb4vVog7P3kmJ
PdZkLjjlHmy1V4qe70gOzXppFodEtZDkBp2uoQSXWHnvIEqCa4wiv+wfD+mEce3xDuS4GBPMVjZd
0ZoeUWs5bmB2iDQL87PRsJ3KYeJkHcFGB7hj3R4zZbOOCVVSPbW9/wfrrWFVGCypaZhKqkDFMxRl
dAD5kd6vA0jFQFTcD4SQaCDFkpbcLuUCRarAX1T4bepJz11sS6/vmsJWXMY1VkJqMF/Cq/biPT+z
yRGPMUzXn0kCAwEAAaNCMEAwHQYDVR0OBBYEFDVK9U2vP9eCOKyrcWUXdYydVZPmMA4GA1UdDwEB
/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQCoh+ns+EBnXcPBZsdA
S5f8hxOQWsTvoMpfi7ent/HWtWS3irO4G8za+6xmiEHO6Pzk2x6Ipu0nUBsCMCRGef4Eh3CXQHPR
wMFXGZpppSeZq51ihPZRwSzJIxXYKLerJRO1RuGGAv8mjMSIkh1W/hln8lXkgKNrnKt34VFxDSDb
EJrbvXZ5B3eZKK2aXtqxT0QsNY6llsf9g/BYxnnWmHyojf6GPgcWkuF75x3sM3Z+Qi5KhfmRiWiE
A4Glm5q+4zfFVKtWOxgtQaQM+ELbmaDgcm+7XeEWT1MKZPlO9L9OVL14bIjqv5wTJMJwaaJ/D8g8
rQjJsJhAoyrniIPtd490AAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMv
MDUyZTM5NmIuMAAAAUrnGEzOAAVYLjUwOQAABCIwggQeMIIDBqADAgECAgEBMA0GCSqGSIb3DQEB
BQUAMGcxCzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRkVHJ1
c3QgVFRQIE5ldHdvcmsxIzAhBgNVBAMTGkFkZFRydXN0IFF1YWxpZmllZCBDQSBSb290MB4XDTAw
MDUzMDEwNDQ1MFoXDTIwMDUzMDEwNDQ1MFowZzELMAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRy
dXN0IEFCMR0wGwYDVQQLExRBZGRUcnVzdCBUVFAgTmV0d29yazEjMCEGA1UEAxMaQWRkVHJ1c3Qg
UXVhbGlmaWVkIENBIFJvb3QwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDkHpr+3Ala
h6SfR74RX6+ENNtiPHl4t+kwtewMHCrEFv/g7HHrivURbu1PDZHSEhgtSRUBwqQiE8cRZP8iEpq5
jlwvCM9xarNnAVnxXUbzsHil9g5CeuN/G8zQ8Lco/SrqnrOwuQSq/fbHtLG4KqD7WPEZoG9wJX4+
aUp/DyLY760IEZopmeGqREWaEl4+nW1S/OegPWgv8EtwfBM4rbwVJfHWzquiwDHWL5/g/xRZ/IST
2Yd8TFQT65/RLRH4GDo63iXZ99NA7aQGEsQ74ZHBVjXwFNxlNgluq6QHxzXRwgMzNlt1Jm1C8RJr
Q29LcZT6NB3tE27KgH+YL2y5ZdjpAgMBAAGjgdQwgdEwHQYDVR0OBBYEFDmVi2KLXMnUgLpYD5c/
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
sKfkCpYL+63C4iWEst3kvX5ZbJvw8NjnyvLplzh+ib7M+zkXYT9y2zqR2GUBGR2tUKRXCnxLvJxx
cypFURmFzI79R6d0lR2o0a9OF7FpJsKqeFdbxU2n5Z4FF5TKsl+gSRiNNOkmbEgeqmiSBeGCc1qb
3AdbCG19ndeNIdn8FCCqwkXfP+cAslHkwvgFuXkajDTznlvkN1trSt8sV4pAWja63XVECDdCcAz+
3F4hoKOKwJCcaNpQ5kUQR3i2TtJlycM33+FCY7BXN0Ute4qcvwXqZVUz9zkQxSgqIXobisQk+T8V
yJoVIPVVYpbtbZNQvOSqeK3Zywplh6ZmwcSBo3c6WB4L7oOLnR7SUqTMHW+wmG2UMbX4cQrcufx9
MmDm66+KAQAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzLzgxYjk3Njhm
LjAAAAFRhbPF1AAFWC41MDkAAAPJMIIDxTCCAq2gAwIBAgIQAqxcJmoLQJuPC3nyrkYldzANBgkq
hkiG9w0BAQUFADBsMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQL
ExB3d3cuZGlnaWNlcnQuY29tMSswKQYDVQQDEyJEaWdpQ2VydCBIaWdoIEFzc3VyYW5jZSBFViBS
b290IENBMB4XDTA2MTExMDAwMDAwMFoXDTMxMTExMDAwMDAwMFowbDELMAkGA1UEBhMCVVMxFTAT
BgNVBAoTDERpZ2lDZXJ0IEluYzEZMBcGA1UECxMQd3d3LmRpZ2ljZXJ0LmNvbTErMCkGA1UEAxMi
RGlnaUNlcnQgSGlnaCBBc3N1cmFuY2UgRVYgUm9vdCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP
ADCCAQoCggEBAMbM5XPm+9S75S0tMqbf5YE/yc0lSbZxKsPVlDRnogocsF9ppkCxxLeyj9CYpKlB
WTrT3JTWPNt0OKRKzE0lgvdKpVMSOO7zSW1xkX5jtqumX8OkhPhPYlG++MXs2ziS4wblCJEMxChB
VfvLWokVfnHoNb9Ncgk9vjo4UFt3MRuNs8ckRZqnrG0AFFoEt7oT61EKmEFBIk5lYYeBQVCmeVyJ
3hlKV9Uu5l0cUyx+mM0aBhakaHPQNAQTXKFx01p8VdteZOE3hzBWBOURtCmAEvF5OYiiAhF8J2a3
iLd48soKqDirCmTCv2ZdlYTBoSUeh10aUAsgEsxBu24LUTi4S8sCAwEAAaNjMGEwDgYDVR0PAQH/
BAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFLE+w2kD+L9HAdSYJhoIAu9jZCvDMB8G
A1UdIwQYMBaAFLE+w2kD+L9HAdSYJhoIAu9jZCvDMA0GCSqGSIb3DQEBBQUAA4IBAQAcGgaX3Nec
nzyIZgYIVyHbIUf4KmeqvxgydkAQV8GK83rZEWWONfqe/EW1ntlMMUu4kehDLI6zeM7b41N5cdbl
IZQB2lWHmiRk9opmzN6cN82oNLFpmyPInngiK3BD41VHMWEZ71jFhS9OMPagMRYjyOfiZRYzy78a
G6A9+MpeizGLYAiJLQwGXFK3xPkKmNEVX58Svnw2Yzi9RKR/5CYrCsSXaQ3pjOLAEFe4yHYSkVXy
SGnYvCoCWw9E1CAx2/S6cCZdkGCevEsXCS+0yx5DaMkHJ8HSXPfqIbloEpw8nL+e/IBcm2PN7Eeq
JSdnoDfzAIJ9VNep+OkuE6N36B9KAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYv
Y2VydHMvZjQ5OTZlODIuMAAAAUrnGCIKAAVYLjUwOQAAAuswggLnMIICUAIBATANBgkqhkiG9w0B
AQUFADCBuzEkMCIGA1UEBxMbVmFsaUNlcnQgVmFsaWRhdGlvbiBOZXR3b3JrMRcwFQYDVQQKEw5W
YWxpQ2VydCwgSW5jLjE1MDMGA1UECxMsVmFsaUNlcnQgQ2xhc3MgMSBQb2xpY3kgVmFsaWRhdGlv
biBBdXRob3JpdHkxITAfBgNVBAMTGGh0dHA6Ly93d3cudmFsaWNlcnQuY29tLzEgMB4GCSqGSIb3
DQEJARYRaW5mb0B2YWxpY2VydC5jb20wHhcNOTkwNjI1MjIyMzQ4WhcNMTkwNjI1MjIyMzQ4WjCB
uzEkMCIGA1UEBxMbVmFsaUNlcnQgVmFsaWRhdGlvbiBOZXR3b3JrMRcwFQYDVQQKEw5WYWxpQ2Vy
dCwgSW5jLjE1MDMGA1UECxMsVmFsaUNlcnQgQ2xhc3MgMSBQb2xpY3kgVmFsaWRhdGlvbiBBdXRo
b3JpdHkxITAfBgNVBAMTGGh0dHA6Ly93d3cudmFsaWNlcnQuY29tLzEgMB4GCSqGSIb3DQEJARYR
aW5mb0B2YWxpY2VydC5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBANhZgnqJuJa6pi9o
b1gup1QcBm706o1IvDGUF/DzTryyuDWSdrDQpaUB1wADEiIZCPj/ESObzgf1v2kaJv5O6dF/nSxA
HVlobqb4WLCdGo/TP/HcGQaBqA7gOt3IU0UJBuYPcMP6QKYO4lYFDxhN/CCC0XNVdI12cqAdnR3A
3T9xAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAUGg9SfQsHAaU35Vgf5Z7F/5Pca1kyN130u9ZVeg/
6I4FKiHyB9K1p1L+nLG24lt3F0DqctYjyyiBMsMAeRjsWReJycZqHnHJ/bd0pSVFacVIqxnhRYol
axnu5bsS9X/3po1Rw/CddLepPqCl/7ZJAxPaIsztcYIrmc86t/UtcsgAAAACAC8vZXhwb3J0L2hk
YTMvNi4xMC40L2xvY2FsL2NvbmYvY2VydHMvNGQ2NTRkMWQuMAAAATC7KuhEAAVYLjUwOQAAAl4w
ggJaMIIBwwICAaUwDQYJKoZIhvcNAQEEBQAwdTELMAkGA1UEBhMCVVMxGDAWBgNVBAoTD0dURSBD
b3Jwb3JhdGlvbjEnMCUGA1UECxMeR1RFIEN5YmVyVHJ1c3QgU29sdXRpb25zLCBJbmMuMSMwIQYD
VQQDExpHVEUgQ3liZXJUcnVzdCBHbG9iYWwgUm9vdDAeFw05ODA4MTMwMDI5MDBaFw0xODA4MTMy
MzU5MDBaMHUxCzAJBgNVBAYTAlVTMRgwFgYDVQQKEw9HVEUgQ29ycG9yYXRpb24xJzAlBgNVBAsT
HkdURSBDeWJlclRydXN0IFNvbHV0aW9ucywgSW5jLjEjMCEGA1UEAxMaR1RFIEN5YmVyVHJ1c3Qg
R2xvYmFsIFJvb3QwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAJUPoLbwUJzoeseIzd0XDi6w
lNAbPQ72lMCKlMcGyJCXyLhkGnp+bDxT4Tcoc2B/spdTB59T+W1YlNKvjW2IZ4Dm7bKVz3IxyqUc
crpcAudkQuf5qSzWOg2sjUKqJAE55pw/AYVXDViHRfjThaqTaSaFcEiAPxIVx3m0HwUvO2KZAgMB
AAEwDQYJKoZIhvcNAQEEBQADgYEAbesbCele2VHbZyJhpCo8SHfjoHym3nOiFAOFPfurDjDFgxYz
gRMInns0Tt9AyHTXuX3c9HZVfZtjVBjp8OrzXLHZi0IeucCVTrr61eJ89Whhv47sBZdfW7DXo4U0
xCSnDQ+Vk+/LlNieH51chW3Hqq5PHyK1zZWtuqfM+asLen8AAAACAC4vZXhwb3J0L2hkYTMvNy40
LjAvbG9jYWwvY29uZi9jZXJ0cy83NjU3OTE3NC4wAAABUYWzs9AABVguNTA5AAAENDCCBDAwggMY
oAMCAQICEFCUbOwY6tWcTdWX73WPoK0wDQYJKoZIhvcNAQEFBQAwgYIxCzAJBgNVBAYTAlVTMR4w
HAYDVQQLExV3d3cueHJhbXBzZWN1cml0eS5jb20xJDAiBgNVBAoTG1hSYW1wIFNlY3VyaXR5IFNl
cnZpY2VzIEluYzEtMCsGA1UEAxMkWFJhbXAgR2xvYmFsIENlcnRpZmljYXRpb24gQXV0aG9yaXR5
MB4XDTA0MTEwMTE3MTQwNFoXDTM1MDEwMTA1MzcxOVowgYIxCzAJBgNVBAYTAlVTMR4wHAYDVQQL
ExV3d3cueHJhbXBzZWN1cml0eS5jb20xJDAiBgNVBAoTG1hSYW1wIFNlY3VyaXR5IFNlcnZpY2Vz
IEluYzEtMCsGA1UEAxMkWFJhbXAgR2xvYmFsIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIIBIjAN
BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmCQevRW0ut/HjKUntjgLafO2TqgsLiEdXETfIV1+
I3T+Xn60SremrR+u4AYW4ptb2Wd0a12AjymdhhvZnA2YbXYQKFjkZbB/Sph5n+DDMX6AK7WMwEA7
EYbQy6KGNmCk1TCCbdlu0A8SBDOXX09hWvDk+ZGr5x07vOjP9GstNHziSGEcjvNhRMxvoEqplLBN
2uepNHpyOKhBzDyUEX3ryKaMt4bLyjM72T03i/t6PoYs53PXClesZJsZ6/QPBAiKrAMXGWT0WiUi
jTQssvZoHRJt04oeFNrEj6biI4XVeg29auDp7OwXu0IbZ6ol7UWDIfzByXzVYj768sUt0/3UZQID
AQABo4GfMIGcMBMGCSsGAQQBgjcUAgQGHgQAQwBBMAsGA1UdDwQEAwIBhjAPBgNVHRMBAf8EBTAD
AQH/MB0GA1UdDgQWBBTGT6I9BmOECZzOYuQErI1ctem2GzA2BgNVHR8ELzAtMCugKaAnhiVodHRw
Oi8vY3JsLnhyYW1wc2VjdXJpdHkuY29tL1hHQ0EuY3JsMBAGCSsGAQQBgjcVAQQDAgEBMA0GCSqG
SIb3DQEBBQUAA4IBAQCRFTkDARtn+0oc+QpgW6HaTZdi+SRTJ9eCZE6QLsNJGyua3PyoeGc18R3w
Eb23SOMQ9g3fP9LJtqpVpEi6AtveWS4VWzudFn1H1zfqX012Eja7H9ehgQRGIKMsbameAX4/Kc4A
k9/9yZJziYlknucr5ByRLNK5zn3ObzGZ0+a+0h6Q8AkUeVwjq03S2iEfTZl5neHPJ58QmxyIDbCK
ZEExuA5skCSkm1xxj7q7fhwb22qADyG86dumt0D0soupseTvmhrQPWmZ7qgoo+E8s/CyEZzPfEDm
3edDfaLYOrWpjfI0mcTUEOEG/QmEEDvuxEz07Cd8QsJ0fIKKCcm0AyW8AAAAAgAuL2V4cG9ydC9o
ZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvMjQzZWVkM2QuMAAAAUrnGN7GAAVYLjUwOQAABDQw
ggQwMIIDmaADAgECAgEAMA0GCSqGSIb3DQEBBAUAMIHHMQswCQYDVQQGEwJVUzEXMBUGA1UECBMO
Tm9ydGggQ2Fyb2xpbmExHzAdBgNVBAcTFlJlc2VhcmNoIFRyaWFuZ2xlIFBhcmsxFjAUBgNVBAoT
DVJlZCBIYXQsIEluYy4xITAfBgNVBAsTGFJlZCBIYXQgTmV0d29yayBTZXJ2aWNlczEjMCEGA1UE
AxMaUkhOUyBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxHjAcBgkqhkiG9w0BCQEWD3JobnNAcmVkaGF0
LmNvbTAeFw0wMDA4MjMyMjQ1NTVaFw0wMzA4MjgyMjQ1NTVaMIHHMQswCQYDVQQGEwJVUzEXMBUG
A1UECBMOTm9ydGggQ2Fyb2xpbmExHzAdBgNVBAcTFlJlc2VhcmNoIFRyaWFuZ2xlIFBhcmsxFjAU
BgNVBAoTDVJlZCBIYXQsIEluYy4xITAfBgNVBAsTGFJlZCBIYXQgTmV0d29yayBTZXJ2aWNlczEj
MCEGA1UEAxMaUkhOUyBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxHjAcBgkqhkiG9w0BCQEWD3JobnNA
cmVkaGF0LmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAwGgrEjDiIS0ixnJxW78XoJMQ
6ZvjyY07LazEu5U74MpVMtyVwhCzBLJR++iFYRY0pbQdZ1ynd/Twktq0i6+Vk2LzZimuwIi3ZIQO
SJBg+GA+AH9U3RemrBjgQt58vpCB9/QFhQoIzNXyn/wki3elPelIqe8PO2Oj/qaDTOjcC3cCAwEA
AaOCASgwggEkMB0GA1UdDgQWBBRUFc2fLPfsDR/SqL5MB6yIPvubCjCB9AYDVR0jBIHsMIHpgBRU
Fc2fLPfsDR/SqL5MB6yIPvubCqGBzaSByjCBxzELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRo
IENhcm9saW5hMR8wHQYDVQQHExZSZXNlYXJjaCBUcmlhbmdsZSBQYXJrMRYwFAYDVQQKEw1SZWQg
SGF0LCBJbmMuMSEwHwYDVQQLExhSZWQgSGF0IE5ldHdvcmsgU2VydmljZXMxIzAhBgNVBAMTGlJI
TlMgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9yaG5zQHJlZGhhdC5jb22C
AQAwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQQFAAOBgQCTAYiIZ2eRjJ7QEhSQcRKHVQryUhut
8tMHHa9wmbuwzYAjye0rc+ljsdCzjGDFQmSmwZVWkMU1BgNY9Y4r2fmpoBCpmfcVQpKlUNcRB/EC
1eBw5FVuKs4l+F3NCy8QYfj2IELMw4n4ik+CJBLPOX8hqCyNUpdSxfdfQqWHCWawzAAAAAIALi9l
eHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzL2VhMTY5NjE3LjAAAAFRhbRewgAFWC41
MDkAAAW5MIIFtTCCA52gAwIBAgIIYY3HhjsBggUwDQYJKoZIhvcNAQEFBQAwRDEWMBQGA1UEAwwN
QUNFRElDT00gUm9vdDEMMAoGA1UECwwDUEtJMQ8wDQYDVQQKDAZFRElDT00xCzAJBgNVBAYTAkVT
MB4XDTA4MDQxODE2MjQyMloXDTI4MDQxMzE2MjQyMlowRDEWMBQGA1UEAwwNQUNFRElDT00gUm9v
dDEMMAoGA1UECwwDUEtJMQ8wDQYDVQQKDAZFRElDT00xCzAJBgNVBAYTAkVTMIICIjANBgkqhkiG
9w0BAQEFAAOCAg8AMIICCgKCAgEA/5KV4WgGdrQsyFhIyv2AVClVYyT/kGWbEHV7w2rbYgIB8hiG
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
gc8wHQYDVR0OBBYEFJWxtPCUtr3H2tERCSG+wa9J/RB7MAsGA1UdDwQEAwIBBjAPBgNVHRMBAf8E
BTADAQH/MIGPBgNVHSMEgYcwgYSAFJWxtPCUtr3H2tERCSG+wa9J/RB7oWmkZzBlMQswCQYDVQQG
EwJTRTEUMBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3b3Jr
MSEwHwYDVQQDExhBZGRUcnVzdCBDbGFzcyAxIENBIFJvb3SCAQEwDQYJKoZIhvcNAQEFBQADggEB
ACxtZBsfzQ3duQH6lmM0MkhHma6X7f1yFqZzR1r0693p9db7RcwpiURdv0Y5PejuvE1Uhh4dbOMX
J0PhiVYrqW9yTkkz43J8KiOavD7/KCrto/8cI7pDVwlnTUtiBi34/2ydYB7YHEt9tTEv2dB8Xfje
a4MYeDdXL+gzB2ffHsdrKpV2ro9Xo/D0UrSpUwjP4E/TelOL/bscVjby/rK25Xa71SJlpz/+0Wat
C7xrmYbvP33zGDLKe8bjq2RGlfgmadlVg3sslgf/WSxEo8bl6ancoWOAWiFeIc9TVPC6b4nbqKqV
z4vjccweGyBECMB6tkD9xOQ14R0WHNC8K47WcdkAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9j
YWwvY29uZi9jZXJ0cy8yM2Y0YzQ5MC4wAAABUYWzuGwABVguNTA5AAAEEzCCBA8wggL3oAMCAQIC
AQAwDQYJKoZIhvcNAQEFBQAwaDELMAkGA1UEBhMCVVMxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNo
bm9sb2dpZXMsIEluYy4xMjAwBgNVBAsTKVN0YXJmaWVsZCBDbGFzcyAyIENlcnRpZmljYXRpb24g
QXV0aG9yaXR5MB4XDTA0MDYyOTE3MzkxNloXDTM0MDYyOTE3MzkxNlowaDELMAkGA1UEBhMCVVMx
JTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4xMjAwBgNVBAsTKVN0YXJmaWVs
ZCBDbGFzcyAyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIIBIDANBgkqhkiG9w0BAQEFAAOCAQ0A
MIIBCAKCAQEAtzLI/ulxpgSFrQwRZN/OTe/IAxiHP6Gr+zymn/DDodrU2G4rU5D7JKQ+hPCe6F/s
5SdE9SimP3ve4CrwyK9TL57KBQGTHo9mHDmnTfpatnMEJWbrd3/nWcZKmSUUVOsmx/N/GdUwcI+v
sEYq/63rKe3Xn6oEh6PU+YmlNF/bQ5GCNtlmPLG4uYL9nDo+EMg77wZlZnqbGRg9/3FRPDAuX749
d3OyXQZswyNWmiuFJpIcpwKz5D8Nrwh5grg2Peqc0zWzvGnK9cyd6P1kjReAM25eSl2ZyR6HtJ0a
wNVuEzUjXt+bXz3v1vd2wuo+u3gNHEJnawTY+Nbab4vyRKABqwIBA6OBxTCBwjAdBgNVHQ4EFgQU
v1+30c7dH4b0W1Ws3NcQwg6piOcwgZIGA1UdIwSBijCBh4AUv1+30c7dH4b0W1Ws3NcQwg6piOeh
bKRqMGgxCzAJBgNVBAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMu
MTIwMAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eYIBADAM
BgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQAFnT+IndHJGlWhrGnz81namwGHGk9XqaF5
CSrb9y+yHszHXmrYg4ehl+9JNT53BkFYYr+OWLgKZz/ss90hZh/JVPpyzD1MQNiBr3eeg3q7osf1
NBeO2RFA9PwsKk0Vf6diXS4l0wALIBodaPkXuPS9i+0oWd1NFosXg8iyZccteqWqvFOGbd1XpMr4
IEELaPD0+3S+Vl16efX5HYXjLZW+9XGQQ8yNH5oACocp6VUiWAAj6uMSQylbRwjdjEFqZQao5SGq
QbSVIZW5fdE0qxPWrbzc4j05zb0+dXChGFkDySK0j5zVXirXpbbUCm34t0ARRpofeQ5ivw+X7OAv
HxeUAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvYmRhY2NhNmYuMAAA
AVGFs+RKAAVYLjUwOQAAA8AwggO8MIICpKADAgECAhAHViKk6NSKiU30E8jw+OqlMA0GCSqGSIb3
DQEBBQUAMEoxCzAJBgNVBAYTAlVTMSAwHgYDVQQKExdTZWN1cmVUcnVzdCBDb3Jwb3JhdGlvbjEZ
MBcGA1UEAxMQU2VjdXJlIEdsb2JhbCBDQTAeFw0wNjExMDcxOTQyMjhaFw0yOTEyMzExOTUyMDZa
MEoxCzAJBgNVBAYTAlVTMSAwHgYDVQQKExdTZWN1cmVUcnVzdCBDb3Jwb3JhdGlvbjEZMBcGA1UE
AxMQU2VjdXJlIEdsb2JhbCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK81Ltis
bFVpBnHlE2gks0/YzCFH+PFgOImJA+m96l5GUwncXPVa6PdFKgLrMWHXKTNMzsd8Cjd+D7oymOEd
l6+Px9zJOJbz2xr8Ue1oxtBupHwk0a5CyJZQYy7g/nX+mKdfSS6V4zkzZI4epF+Q0mc8stn+QblV
pwmOcgUei91EhYJC0EnAHWDw0Rcslev2pcGSo8XCpwhgDWAEEJZ5nhY05qm2+iVFOcgeZfmT9arx
UtyZmD2lhhoMNTP6S6UEBhUcMYDvqhhrwnvX2s75MyDV9b1qMy2BBPuwXNSco+JcHeOpQnVee9R3
7zlUuskKGBsSmUkviEv9UGLRc+ePekMCAwEAAaOBnTCBmjATBgkrBgEEAYI3FAIEBh4EAEMAQTAL
BgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUr0QEwkF+SIPbTjkC7OyEeubO
yaQwNAYDVR0fBC0wKzApoCegJYYjaHR0cDovL2NybC5zZWN1cmV0cnVzdC5jb20vU0dDQS5jcmww
EAYJKwYBBAGCNxUBBAMCAQAwDQYJKoZIhvcNAQEFBQADggEBAGMaCEB9pF5TDXfYeq4fDQtRFgPv
GHzI469qWJMUYJGyhNyITr45ijrz5oKJXQE3s6skpBUOkjVaSkReTlf6dc4fSM5m9DxAJpKYbBvu
JEYMF7NSpdulkZHPN9Nv5ycIOk4ZHzqnWFwXz3k/i+Sn0yYjnSYPWGn8R36y0I2Lk78pT0NpdHZn
S88HjOYC97XhtEO1Sy0Un/ncJg2/pkd0BtiI0TopMITO0jmAYhuox1dJvGpVUWcVSr41B+TVdZg3
eTAU2ymdbMVpzEdVojD3zFx/wsOYHGtOFoDrenhlRaIAGq8MDVVkNEi4krnxtFAp8k8jH9psrB9E
4d0jeFFbxxYAAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40L2xvY2FsL2NvbmYvY2VydHMvOGZlNjQz
ZGYuMAAAATC7K1haAAVYLjUwOQAAB/swggf3MIIHYKADAgECAgEAMA0GCSqGSIb3DQEBBQUAMIIB
FDELMAkGA1UEBhMCRVMxEjAQBgNVBAgTCUJhcmNlbG9uYTESMBAGA1UEBxMJQmFyY2Vsb25hMS4w
LAYDVQQKEyVJUFMgSW50ZXJuZXQgcHVibGlzaGluZyBTZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJp
cHNAbWFpbC5pcHMuZXMgQy5JLkYuICBCLTYwOTI5NDUyMS8wLQYDVQQLEyZJUFMgQ0EgQ0xBU0VB
MSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEvMC0GA1UEAxMmSVBTIENBIENMQVNFQTEgQ2VydGlm
aWNhdGlvbiBBdXRob3JpdHkxHjAcBgkqhkiG9w0BCQEWD2lwc0BtYWlsLmlwcy5lczAeFw0wMTEy
MjkwMTA1MzJaFw0yNTEyMjcwMTA1MzJaMIIBFDELMAkGA1UEBhMCRVMxEjAQBgNVBAgTCUJhcmNl
bG9uYTESMBAGA1UEBxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJUFMgSW50ZXJuZXQgcHVibGlzaGlu
ZyBTZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJpcHNAbWFpbC5pcHMuZXMgQy5JLkYuICBCLTYwOTI5
NDUyMS8wLQYDVQQLEyZJUFMgQ0EgQ0xBU0VBMSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEvMC0G
A1UEAxMmSVBTIENBIENMQVNFQTEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxHjAcBgkqhkiG9w0B
CQEWD2lwc0BtYWlsLmlwcy5lczCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAuzDX3NBUvTVO
n8VMgurRUDxHmPybaZ13zW7gP+7rMl9fn9LQeeWVc0QhMuAK253Xzo2rUosreOCbW330/W0J5a7h
bB0HI6AX0fl9qEZGkSKosmnGrff19ZShMJS9AMxEf+7EnsnB5o8KNsH9JD0BoPV74nx4ZkOLT1ny
m9n6SbMCAwEAAaOCBFMwggRPMB0GA1UdDgQWBBRnJpbnob/YtQOd/jvc/vKK5hXdMDCCAUYGA1Ud
IwSCAT0wggE5gBRnJpbnob/YtQOd/jvc/vKK5hXdMKGCARykggEYMIIBFDELMAkGA1UEBhMCRVMx
EjAQBgNVBAgTCUJhcmNlbG9uYTESMBAGA1UEBxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJUFMgSW50
ZXJuZXQgcHVibGlzaGluZyBTZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJpcHNAbWFpbC5pcHMuZXMg
Qy5JLkYuICBCLTYwOTI5NDUyMS8wLQYDVQQLEyZJUFMgQ0EgQ0xBU0VBMSBDZXJ0aWZpY2F0aW9u
IEF1dGhvcml0eTEvMC0GA1UEAxMmSVBTIENBIENMQVNFQTEgQ2VydGlmaWNhdGlvbiBBdXRob3Jp
dHkxHjAcBgkqhkiG9w0BCQEWD2lwc0BtYWlsLmlwcy5lc4IBADAMBgNVHRMEBTADAQH/MAwGA1Ud
DwQFAwMH/4AwawYDVR0lBGQwYgYIKwYBBQUHAwEGCCsGAQUFBwMCBggrBgEFBQcDAwYIKwYBBQUH
AwQGCCsGAQUFBwMIBgorBgEEAYI3AgEVBgorBgEEAYI3AgEWBgorBgEEAYI3CgMBBgorBgEEAYI3
CgMEMBEGCWCGSAGG+EIBAQQEAwIABzAaBgNVHREEEzARgQ9pcHNAbWFpbC5pcHMuZXMwGgYDVR0S
BBMwEYEPaXBzQG1haWwuaXBzLmVzMEIGCWCGSAGG+EIBDQQ1FjNDTEFTRUExIENBIENlcnRpZmlj
YXRlIGlzc3VlZCBieSBodHRwOi8vd3d3Lmlwcy5lcy8wKQYJYIZIAYb4QgECBBwWGmh0dHA6Ly93
d3cuaXBzLmVzL2lwczIwMDIvMDsGCWCGSAGG+EIBBAQuFixodHRwOi8vd3d3Lmlwcy5lcy9pcHMy
MDAyL2lwczIwMDJDTEFTRUExLmNybDBABglghkgBhvhCAQMEMxYxaHR0cDovL3d3dy5pcHMuZXMv
aXBzMjAwMi9yZXZvY2F0aW9uQ0xBU0VBMS5odG1sPzA9BglghkgBhvhCAQcEMBYuaHR0cDovL3d3
dy5pcHMuZXMvaXBzMjAwMi9yZW5ld2FsQ0xBU0VBMS5odG1sPzA7BglghkgBhvhCAQgELhYsaHR0
cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9wb2xpY3lDTEFTRUExLmh0bWwwdQYDVR0fBG4wbDAyoDCg
LoYsaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9pcHMyMDAyQ0xBU0VBMS5jcmwwNqA0oDKGMGh0
dHA6Ly93d3diYWNrLmlwcy5lcy9pcHMyMDAyL2lwczIwMDJDTEFTRUExLmNybDAvBggrBgEFBQcB
AQQjMCEwHwYIKwYBBQUHMAGGE2h0dHA6Ly9vY3NwLmlwcy5lcy8wDQYJKoZIhvcNAQEFBQADgYEA
frqKrIAAhBUK1ZhRDGTFnAJYg2bKrR4HzX5q2oAH3wM0ShyTxEtYIDU2ce2iCjUSpaZlp4VpCg7j
Ye7qviiTM9Xs6L7E219/qPljMchrluIpwlug55c2nXdeMWv+06fbKtvblosfZt62A8Ars3jWVQfl
jzlQ3gcjcua9IBRLtIYAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy8x
MTlhZmMyZS4wAAABUYW0UzIABVguNTA5AAAE6jCCBOYwggPOoAMCAQICBDuOS/wwDQYJKoZIhvcN
AQEFBQAwXTEYMBYGCSqGSIb3DQEJARYJcGtpQHNrLmVlMQswCQYDVQQGEwJFRTEiMCAGA1UEChMZ
QVMgU2VydGlmaXRzZWVyaW1pc2tlc2t1czEQMA4GA1UEAxMHSnV1ci1TSzAeFw0wMTA4MzAxNDIz
MDFaFw0xNjA4MjYxNDIzMDFaMF0xGDAWBgkqhkiG9w0BCQEWCXBraUBzay5lZTELMAkGA1UEBhMC
RUUxIjAgBgNVBAoTGUFTIFNlcnRpZml0c2VlcmltaXNrZXNrdXMxEDAOBgNVBAMTB0p1dXItU0sw
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCBcTY+MwfW4zCNE353MkbLzxmyYDFGl4b0
mEakwmVFz9NAfONaIqgQeDPMiLHTgUr2Yhd7X00KLtDPiyPuTwJOu+sOyr0YY+iAHI3hHI094P9b
X+pk5ZfoP5l/DAoJMwAaU6ch4ThL1oMbra9kwvkceoxmSE1mHxgK4j67Hwdlk4W5GrC5xPsNEfb1
1vkbxywrtxhR/uB79qhIr2w7Ty/v+NFHHiZX8FEdM5b/71k92k3RFTTH6j8WSHuRHIBDDz24BT7R
s5XN2MoPwkNn27eT4CKCLr71aCiDucE7aXsg2k6cbeG6zY96bLAJIteLC9sc1VomWw3A6uVg0J/+
Nd8/AgMBAAGjggGsMIIBqDAPBgNVHRMBAf8EBTADAQH/MIIBFgYDVR0gBIIBDTCCAQkwggEFBgor
BgEEAc4fAQEBMIH2MIHQBggrBgEFBQcCAjCBwx6BwABTAGUAZQAgAHMAZQByAHQAaQBmAGkAawBh
AGEAdAAgAG8AbgAgAHYA5ABsAGoAYQBzAHQAYQB0AHUAZAAgAEEAUwAtAGkAcwAgAFMAZQByAHQA
aQBmAGkAdABzAGUAZQByAGkAbQBpAHMAawBlAHMAawB1AHMAIABhAGwAYQBtAC0AUwBLACAAcwBl
AHIAdABpAGYAaQBrAGEAYQB0AGkAZABlACAAawBpAG4AbgBpAHQAYQBtAGkAcwBlAGsAczAhBggr
BgEFBQcCARYVaHR0cDovL3d3dy5zay5lZS9jcHMvMCsGA1UdHwQkMCIwIKAeoByGGmh0dHA6Ly93
d3cuc2suZWUvanV1ci9jcmwvMB0GA1UdDgQWBBQEqnpHo+SJrxrPCkCnGD9v7+l9vjAfBgNVHSME
GDAWgBQEqnpHo+SJrxrPCkCnGD9v7+l9vjAOBgNVHQ8BAf8EBAMCAeYwDQYJKoZIhvcNAQEFBQAD
ggEBAHvBGJRTognz/iZnmlDkwwUvKzV4kUx8qBEReUxJWazI94VlXEa7OxCgAq/NT7XMNirsXf7v
oJHJtpNvfIBU7McIcA2O+4LsKmB4aTY20cWci2m1QMiUZXfyVyFmO86FQLYzYxq/eR78XB3THZMb
iwxdhb2ZMDIYCZFS6Xyhuv9kkprs/jXujC+u/CCG7EreG3gyN6aB0p2vWhIWyplb/G9tDsWgHobJ
kdBcmIJfYwyKWqvYlabMy4rWv2RLjsqKsrDpITKeqqiFmDSBOSE7qDpSMj32azeGBloVmNzwEWb+
NCC3A/RBEH05hHmWcmO2lgLla7mtGU27xkTbNssqnI4AAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40
L2xvY2FsL2NvbmYvY2VydHMvMTFmMTU0ZDYuMAAAATC7KwueAAVYLjUwOQAABB4wggQaMIIDAgIR
AItbdVaEVIULAM+vOEjOsaQwDQYJKoZIhvcNAQEFBQAwgcoxCzAJBgNVBAYTAlVTMRcwFQYDVQQK
Ew5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazE6MDgGA1UE
CxMxKGMpIDE5OTkgVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMG
A1UEAxM8VmVyaVNpZ24gQ2xhc3MgMSBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhv
cml0eSAtIEczMB4XDTk5MTAwMTAwMDAwMFoXDTM2MDcxNjIzNTk1OVowgcoxCzAJBgNVBAYTAlVT
MRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29y
azE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ug
b25seTFFMEMGA1UEAxM8VmVyaVNpZ24gQ2xhc3MgMSBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0
aW9uIEF1dGhvcml0eSAtIEczMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3YTUubT5
p9jzBHic3j3cbBMW2XrdJFFmwMcmWQ2sBgjClNEzH/CDNR9uG8jeqm4VTlQn78RtGuwL4w7wRKVX
x0BYHqNHH3HsYPZtlMgYOe3+QhhW3+RMSRB4TgF2NWMSNt1mvAEENqNVaNWiNgmsqyEmVAatP8oU
4KzKrQYdleL4nfHgYP/Cf3UrTMza/oeZIeq6/j5U19JZeNs8bs+gEwAauCeh5L5nlsqgxbOc3cl1
nuswml+jzdmueBk/I+lc2ym9rVXIG1SMY/bopurHNxJcoykeAtnbHzu01w9WR4EVBEqvgyfRxViI
wd32qqejGNpoqm0RUeG/ZWuflnbRPQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCrZo3Xs7rHmrbm
VdAF8Z8xjVqq2apGJg9x7aWtU1ZiAUcqROn+P3QLE5u59E0bstFfsrbSiFyzn83L1KfZYJWEOvjB
Nx1hyuewxeWR2lSmrDGBrpfezQisuMCXgH9ucqTnaROVZR/Ekzz9eY8E1D5P6veezs1nfE9lAv+R
hVRzx/8294Yt7NBeT/8Rn3IG1rga8UwNJmXiRIAex5/j3egK2uylIIBpaKFPfuFrzwdB+oOOvDjd
sC4RsWuyQsyavPlIInlKGQ+yHD4gdNlqw77yKHgTVnlPbVDqG7C1V7E3Zlgj89wP3wqHxO+GBdU4
FGCZo0veBpZxLPLbth+k7z/uAAAAAgAvL2V4cG9ydC9oZGEzLzYuMTAuNC9sb2NhbC9jb25mL2Nl
cnRzLzBkYmQwMDk2LjAAAAEwuys0QQAFWC41MDkAAAPqMIID5jCCAs6gAwIBAgIBATANBgkqhkiG
9w0BAQUFADCBgzELMAkGA1UEBhMCVVMxHTAbBgNVBAoTFEFPTCBUaW1lIFdhcm5lciBJbmMuMRww
GgYDVQQLExNBbWVyaWNhIE9ubGluZSBJbmMuMTcwNQYDVQQDEy5BT0wgVGltZSBXYXJuZXIgUm9v
dCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAxMB4XDTAyMDUyOTA2MDAwMFoXDTM3MTEyMDE1MDMw
MFowgYMxCzAJBgNVBAYTAlVTMR0wGwYDVQQKExRBT0wgVGltZSBXYXJuZXIgSW5jLjEcMBoGA1UE
CxMTQW1lcmljYSBPbmxpbmUgSW5jLjE3MDUGA1UEAxMuQU9MIFRpbWUgV2FybmVyIFJvb3QgQ2Vy
dGlmaWNhdGlvbiBBdXRob3JpdHkgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJne
j8Mlo2k06AX3dLm/WpcZuS+U0pPlLYnKhHw/EEMbjIt8hFj4JHxIzyr9wBXZGH6EGhfT257XyuTZ
16pYUYfw8ItITuLCxFlpMGK2MKKMCxGZYTVtfu/FsRkGIBKOQuHfD5YQUqjPnF+VFNivO3ULMSAf
RC+iYkGzuxgh28pxPIzstrkNn+9R7017EvILDOGsQI93f7DKeHEMXRZxcKLXwjqFzQ6axOAAsNUl
6twr5JQtOJyJQVdkKGUZHLZEtMgxa44Be3ZZJX8VHIQIfHNlIAqhBC4aMqiaILGcLCFZ5/vP7nAt
CMpjPiybkxlqpMKX/7eGV4iFbJ4VFitNLLMCAwEAAaNjMGEwDwYDVR0TAQH/BAUwAwEB/zAdBgNV
HQ4EFgQUoTYwFsuGkABFgFOxj8jYPXy+XxIwHwYDVR0jBBgwFoAUoTYwFsuGkABFgFOxj8jYPXy+
XxIwDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBBQUAA4IBAQCKIBilvrMvtKaEAEAwKfq0FHNM
eUWn9nDg6H5kHgqVfGphwu9OH77/yZkfB2FK4V1Mza3u0FIy2VkyvNp5ctZ7CegCgTXTCt8RHcl5
oIBN/lrXVtbtDyqvpxh1MwzqwWEFT2qaifKNuZ8u77BfWgDrvq2g+EQFZ7zLBO+eZMXpyD8Fv8Yv
BxzDNnGGyjhmSs3WuEvGbKeXO/oTLW4jYYehY0KswsuXn2Fozy1MBJ3XJU8KDk2QixhWqJNIV9xv
rr2eZ1d3iVCzvhGbRWeDhhmH05i9CBoWH1iCC+GWaQVLjuyDUTEH1dSf/1l7qG6Fz9NLqUmwX7A5
KGgOc90lmt4SAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvOGQ2NDM3
YzMuMAAAAVGFtQohAAVYLjUwOQAAA5owggOWMIICfqADAgECAhALkxw61jln6mcjv8OvmvRLMA0G
CSqGSIb3DQEBCwUAMGUxCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNV
BAsTEHd3dy5kaWdpY2VydC5jb20xJDAiBgNVBAMTG0RpZ2lDZXJ0IEFzc3VyZWQgSUQgUm9vdCBH
MjAeFw0xMzA4MDExMjAwMDBaFw0zODAxMTUxMjAwMDBaMGUxCzAJBgNVBAYTAlVTMRUwEwYDVQQK
EwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5jb20xJDAiBgNVBAMTG0RpZ2lD
ZXJ0IEFzc3VyZWQgSUQgUm9vdCBHMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANnn
KC9SPzZySYiTNPP4ah4xVICfrVRBtUfflqjUr4AtuQrPdf2JpX0k+uMiDCu8lRcLM78ZTUEGkAC9
DE0Q/ge15xxuIlUxZZe90xfSHmLz2+psUIw/hAyWz7fLA+DKbaEUTBuJ3e0AsFJ8r5FssTgT0ekS
CMAAsBwrEdp3cDabrs55h9yCcOYJdHBVaa+jaJ+/3bZ5s/KdcClV9Kv/lWHzyUBvHdG+k7vTiCq7
nb9yWlZxOz/U89EK/ijvo+7Zma8D049gt/KSobG9iYkfMM3Dpi5iM64WAndEWueBCjynRC55uD8E
vFygh+Ebr1GOzews+vj+bfA6fKqL5GeVMY0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNV
HQ8BAf8EBAMCAYYwHQYDVR0OBBYEFM7DSrmZVfK422C/qX69VrWXNqfWMA0GCSqGSIb3DQEBCwUA
A4IBAQDKpVWM48hBbmknp3UR7zyGNm/SncZ4OB1plqKSaS44bJt9BNSJpbExN4rJIcyrbM2LHJrW
v0jSMmbBisDzLzrvwOPUkYbRUOMD23N3b0o5U+3eJse1fa8rQtF1YuNKKwLHUEvgaeKWbA5EZhBE
j60F6/h5rKYb6Dc0nVPJYaqiUq9KcBaGwjrIsRNwNtjP7vQKNNVbTP0HnKK62QFyXPNNwd0OsRwN
xGO+rfQU+4nsokEOTMzIV0DQbgOqzQyOiZmZbPA8MK8432+8o74pICerdP8TInjel1JVHoO1VCAD
7q7AT1beN8zDf6oEJ7vTd7hi2xd8nCgiE3Nszyb1iinnAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4w
L2xvY2FsL2NvbmYvY2VydHMvZjk1MGNjYzIuMAAAAVGFtbH9AAVYLjUwOQAAB+4wggfqMIIHU6AD
AgECAgEAMA0GCSqGSIb3DQEBBQUAMIIBEjELMAkGA1UEBhMCRVMxEjAQBgNVBAgTCUJhcmNlbG9u
YTESMBAGA1UEBxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJUFMgSW50ZXJuZXQgcHVibGlzaGluZyBT
ZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJpcHNAbWFpbC5pcHMuZXMgQy5JLkYuICBCLTYwOTI5NDUy
MS4wLAYDVQQLEyVJUFMgQ0EgQ0xBU0UxIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MS4wLAYDVQQD
EyVJUFMgQ0EgQ0xBU0UxIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9p
cHNAbWFpbC5pcHMuZXMwHhcNMDExMjI5MDA1OTM4WhcNMjUxMjI3MDA1OTM4WjCCARIxCzAJBgNV
BAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UEChMl
SVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjErMCkGA1UEChQiaXBzQG1haWwu
aXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEuMCwGA1UECxMlSVBTIENBIENMQVNFMSBDZXJ0aWZp
Y2F0aW9uIEF1dGhvcml0eTEuMCwGA1UEAxMlSVBTIENBIENMQVNFMSBDZXJ0aWZpY2F0aW9uIEF1
dGhvcml0eTEeMBwGCSqGSIb3DQEJARYPaXBzQG1haWwuaXBzLmVzMIGfMA0GCSqGSIb3DQEBAQUA
A4GNADCBiQKBgQDgUSenC92v0blDW4I3RVZy75q2whLvLBLMdvkGWa9dIdTSWrig1PNq/cppjWZI
93Tm7ja96JaRdaZxKMrnIhIyabA+Hmv0UFJiYv1jO31+7O446mL0bKhxjeHpi8k/xrXNlEJv3YJF
POjfCejvClWpVkdhTElkcxAoP8q/Cf/GLwIDAQABo4IESjCCBEYwHQYDVR0OBBYEFOuzGXnzwaUc
rNy6H2aisptp0HgIMIIBRAYDVR0jBIIBOzCCATeAFOuzGXnzwaUcrNy6H2aisptp0HgIoYIBGqSC
ARYwggESMQswCQYDVQQGEwJFUzESMBAGA1UECBMJQmFyY2Vsb25hMRIwEAYDVQQHEwlCYXJjZWxv
bmExLjAsBgNVBAoTJUlQUyBJbnRlcm5ldCBwdWJsaXNoaW5nIFNlcnZpY2VzIHMubC4xKzApBgNV
BAoUImlwc0BtYWlsLmlwcy5lcyBDLkkuRi4gIEItNjA5Mjk0NTIxLjAsBgNVBAsTJUlQUyBDQSBD
TEFTRTEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxLjAsBgNVBAMTJUlQUyBDQSBDTEFTRTEgQ2Vy
dGlmaWNhdGlvbiBBdXRob3JpdHkxHjAcBgkqhkiG9w0BCQEWD2lwc0BtYWlsLmlwcy5lc4IBADAM
BgNVHRMEBTADAQH/MAwGA1UdDwQFAwMH/4AwawYDVR0lBGQwYgYIKwYBBQUHAwEGCCsGAQUFBwMC
BggrBgEFBQcDAwYIKwYBBQUHAwQGCCsGAQUFBwMIBgorBgEEAYI3AgEVBgorBgEEAYI3AgEWBgor
BgEEAYI3CgMBBgorBgEEAYI3CgMEMBEGCWCGSAGG+EIBAQQEAwIABzAaBgNVHREEEzARgQ9pcHNA
bWFpbC5pcHMuZXMwGgYDVR0SBBMwEYEPaXBzQG1haWwuaXBzLmVzMEEGCWCGSAGG+EIBDQQ0FjJD
TEFTRTEgQ0EgQ2VydGlmaWNhdGUgaXNzdWVkIGJ5IGh0dHA6Ly93d3cuaXBzLmVzLzApBglghkgB
hvhCAQIEHBYaaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi8wOgYJYIZIAYb4QgEEBC0WK2h0dHA6
Ly93d3cuaXBzLmVzL2lwczIwMDIvaXBzMjAwMkNMQVNFMS5jcmwwPwYJYIZIAYb4QgEDBDIWMGh0
dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcmV2b2NhdGlvbkNMQVNFMS5odG1sPzA8BglghkgBhvhC
AQcELxYtaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9yZW5ld2FsQ0xBU0UxLmh0bWw/MDoGCWCG
SAGG+EIBCAQtFitodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL3BvbGljeUNMQVNFMS5odG1sMHMG
A1UdHwRsMGowMaAvoC2GK2h0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvaXBzMjAwMkNMQVNFMS5j
cmwwNaAzoDGGL2h0dHA6Ly93d3diYWNrLmlwcy5lcy9pcHMyMDAyL2lwczIwMDJDTEFTRTEuY3Js
MC8GCCsGAQUFBwEBBCMwITAfBggrBgEFBQcwAYYTaHR0cDovL29jc3AuaXBzLmVzLzANBgkqhkiG
9w0BAQUFAAOBgQAr0Ov92sjKWWra08wyLslUG4pifhUt6dkx0y70JyP/W6vFSrZyQK5TdPS8BbTG
2cjJd/u3+TR/eAD41qTkUj8sSmNXgXVajuiM+wLAlMYpurPcHOiyr9IuYlsaqY4OzMVXRVEU6U4c
iKWR9KP3jlHIqb6GMz7mL0hur1SQTq2xJQAAAAIALy9leHBvcnQvaGRhMy82LjEwLjQvbG9jYWwv
Y29uZi9jZXJ0cy83ZDNjZDgyNi4wAAABMLsrCg4ABVguNTA5AAAC6zCCAucwggJQAgEBMA0GCSqG
SIb3DQEBBQUAMIG7MSQwIgYDVQQHExtWYWxpQ2VydCBWYWxpZGF0aW9uIE5ldHdvcmsxFzAVBgNV
BAoTDlZhbGlDZXJ0LCBJbmMuMTUwMwYDVQQLEyxWYWxpQ2VydCBDbGFzcyAzIFBvbGljeSBWYWxp
ZGF0aW9uIEF1dGhvcml0eTEhMB8GA1UEAxMYaHR0cDovL3d3dy52YWxpY2VydC5jb20vMSAwHgYJ
KoZIhvcNAQkBFhFpbmZvQHZhbGljZXJ0LmNvbTAeFw05OTA2MjYwMDIyMzNaFw0xOTA2MjYwMDIy
MzNaMIG7MSQwIgYDVQQHExtWYWxpQ2VydCBWYWxpZGF0aW9uIE5ldHdvcmsxFzAVBgNVBAoTDlZh
bGlDZXJ0LCBJbmMuMTUwMwYDVQQLEyxWYWxpQ2VydCBDbGFzcyAzIFBvbGljeSBWYWxpZGF0aW9u
IEF1dGhvcml0eTEhMB8GA1UEAxMYaHR0cDovL3d3dy52YWxpY2VydC5jb20vMSAwHgYJKoZIhvcN
AQkBFhFpbmZvQHZhbGljZXJ0LmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA45hRlhzo
1bEGgWpXw3J1k6vPnqb88xZS1i1NnzVEqC4ETQdJijgp9Xc357erXd82cRSZj9zCkvHnYJKX7NhI
3L/BAiDGJKQoTDBadm2xXPPd3p4QcaGIx1ubQW3KsLiOFe6tMyvPRwRcdXEKmCSYKadJWaXd+LdD
YmHz0+LQVT8CAwEAATANBgkqhkiG9w0BAQUFAAOBgQBWuwJYhGcILN8f23tJM/XTZ530tAoQs8nF
LOKSanF4J/Jwg0LTPs+pVPTx2JIWjNEEy0uryZ9FrjyKqbBxM13IxVffr6g1s3+Jh+noJZK4f4V6
rta8HjdYKmfJkc8qgT7txjnfwD4ZnBnME02CQbWM3uA9YAggD0V+a6J/o4wV7gAAAAIALi9leHBv
cnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzLzkzMzk1MTJhLjAAAAFRhbOZ0AAFWC41MDkA
AAahMIIGnTCCBIWgAwIBAgICBcYwDQYJKoZIhvcNAQEFBQAwRTELMAkGA1UEBhMCQk0xGTAXBgNV
BAoTEFF1b1ZhZGlzIExpbWl0ZWQxGzAZBgNVBAMTElF1b1ZhZGlzIFJvb3QgQ0EgMzAeFw0wNjEx
MjQxOTExMjNaFw0zMTExMjQxOTA2NDRaMEUxCzAJBgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRp
cyBMaW1pdGVkMRswGQYDVQQDExJRdW9WYWRpcyBSb290IENBIDMwggIiMA0GCSqGSIb3DQEBAQUA
A4ICDwAwggIKAoICAQDMV0IWVJzmmNPTTe7+7cefQzlKZbPoFog02w1ZkXTPkrgEQK0CSzGrvI2R
aNggDhoB4hp7Thdd4oq3P5kazethq8Jlph+3t723j/z9cI8LoGe+AaJZz3HmDyl2/7FWeUUrH556
VOijKTVopAFPD6QuN+8bv+OPEKhyq1hX51SGyMnzW9os2l2ObjyjPtr7guXd8lyyBTNvijbO0BNO
/79KDDRMpsMhvVAEVeuxu537RR5kFd5VAYwCdrXLoT9CabwvvWhDFlaJKjdhkf2mrk7AyxRllDdL
kgbvBNDInIjbC3uBr7E9KsRlOni27tyAsdLTmZw67mtaa7ONt9XOnMK+pUsvFrGeaDsGb659n/je
7Mwpp5ijJUMv7/FfJuGITfhebtfZFG4ZM2mnO4SJk8RTVROhUXhA+LjJou57ulJCg54U7QVSWllW
p5f8nT8KKdjcT5EOE7zelaTfi5m+rJsziO+1ga8bxiJTyPbH7pcUsMV8eFLI8M5ud2CEpukqdiDt
WAEXMJPpGovgc2PZapKUSU60rUqFxKMiMPwJ7Wgic6aIDFUhWMXhOp8q3crhkODZc6tsgLjoC2ST
oJyMGf+z0gzskSaHirOi4XCPLArlzW1oUevaPwV/izLmE1xr/l9A4iLItLRkT9a6fUg+qGkM17uG
cclzuD87nSVL2v9A6wIDAQABo4IBlTCCAZEwDwYDVR0TAQH/BAUwAwEB/zCB4QYDVR0gBIHZMIHW
MIHTBgkrBgEEAb5YAAMwgcUwgZMGCCsGAQUFBwICMIGGGoGDQW55IHVzZSBvZiB0aGlzIENlcnRp
ZmljYXRlIGNvbnN0aXR1dGVzIGFjY2VwdGFuY2Ugb2YgdGhlIFF1b1ZhZGlzIFJvb3QgQ0EgMyBD
ZXJ0aWZpY2F0ZSBQb2xpY3kgLyBDZXJ0aWZpY2F0aW9uIFByYWN0aWNlIFN0YXRlbWVudC4wLQYI
KwYBBQUHAgEWIWh0dHA6Ly93d3cucXVvdmFkaXNnbG9iYWwuY29tL2NwczALBgNVHQ8EBAMCAQYw
HQYDVR0OBBYEFPLAE+CCQz777i9nMpY1XNu4ywLQMG4GA1UdIwRnMGWAFPLAE+CCQz777i9nMpY1
XNu4ywLQoUmkRzBFMQswCQYDVQQGEwJCTTEZMBcGA1UEChMQUXVvVmFkaXMgTGltaXRlZDEbMBkG
A1UEAxMSUXVvVmFkaXMgUm9vdCBDQSAzggIFxjANBgkqhkiG9w0BAQUFAAOCAgEAT62gLEz6wPJv
92ZVqyM07ucp2sNbtrCD2dDQ4iH782CnO11gUyeim/YIIirnv6By5ZwkajGxkHon24QRiSemd1o4
17+shvzuXYO8BsbRd2sPbSQvS3pspweWyuOEn62Iix2rFo1bZhfZFvSLgNLd+LJ2w/w4E6oM3kJp
K27zPOuAJ9v1pkQNn1pVWQvVDVJIxa6f8i+AxeoyUDUSly7B4f/xI4hROJ/yZlZ25w9Rl6VSDE1J
UZU2Pb+iSwwQHYaZTKrzchGT5Or2m9qoXadNt54CrnMAyNojA+j56hl0YgCUyyIgvpSnWbWCar6Z
eXqp8kokUvd0/bpO5qgdAm6xDYBEwa7TIzdfu4V8K5Iu6H6li92Z4b8nby1dqnuH/grdS/yO9Sbk
bnBCbjPsMZ57k8HkyWkaPcBrTiJt7qtYTcbQQcEr6k8Sh17rRdhs9ZgC06DYVYoGmRmioHfRMJ6s
zHXug/WwYjnPbFfiTNKRCw51KBuav/0aQ/HKd/s7j2G4aSgWQgRecCocIdiP4b0jWy10QJLZYxkN
c91pvGJHvOB0K7Lrfb5BG7XARsWhIstfTsEokt4YutUqKLsRixeTmJlglFwjz1onl14LBQaTNx47
aTbrqZ5hHY8y2o4M1nQ+ewkk2gF3R8Q7zTSMmfXK4SVhM7JZG+Ju1zdXtg2pEtoAAAACAC8vZXhw
b3J0L2hkYTMvNi4xMC40L2xvY2FsL2NvbmYvY2VydHMvM2FkNDhhOTEuMAAAATC7KxaIAAVYLjUw
OQAAA3swggN3MIICX6ADAgECAgQCAAC5MA0GCSqGSIb3DQEBBQUAMFoxCzAJBgNVBAYTAklFMRIw
EAYDVQQKEwlCYWx0aW1vcmUxEzARBgNVBAsTCkN5YmVyVHJ1c3QxIjAgBgNVBAMTGUJhbHRpbW9y
ZSBDeWJlclRydXN0IFJvb3QwHhcNMDAwNTEyMTg0NjAwWhcNMjUwNTEyMjM1OTAwWjBaMQswCQYD
VQQGEwJJRTESMBAGA1UEChMJQmFsdGltb3JlMRMwEQYDVQQLEwpDeWJlclRydXN0MSIwIAYDVQQD
ExlCYWx0aW1vcmUgQ3liZXJUcnVzdCBSb290MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC
AQEAowS7IquYPVfoJnKatXnUKeLh6JWAsbDjW44rKZpk36Fd7bAJBW3bKC7OYqJi/rSI2hLrOOsh
ncBBKwFSe4h30xyPx7q5iLVqCedz6BFAp9HMymKNLeWPC6ZQ0qhQwyjq9aslh4qalhypZ7g/DNX3
+VITL8Ib1XBw8I/AEsoGy5rh2cozenfW+Oy58WhEQkgT0sDCpK5eYP62pgX8tN0HWQLUWRiYY/Wl
Y+CQDH1dsgZ684Xq69QDrl6EPl//Fe1pvPk5NnJ1z3dSTfPJkCy5PeXJI1M/HySYIVwHmSm9xjrs
526GOmuXdGMzvWgYMfB4jXa//J6OXSqGp02Q3CcaOQIDAQABo0UwQzAdBgNVHQ4EFgQU5Z1ZMIJH
WMys+ghUNoZ7OrUETfAwEgYDVR0TAQH/BAgwBgEB/wIBAzAOBgNVHQ8BAf8EBAMCAQYwDQYJKoZI
hvcNAQEFBQADggEBAIUMXY7kb1FoQgWg3btPJyWEA733ZP0t1zDjpBAX69opKbZ5P3b2GRMjuBAK
+Vik1GFwvQRhahKKF9UKvcW8MHzW6QwljYZAT+zMo344xjcRT+3daDGOTNKzAXTuvnVeB0gaf3D/
FlyEwHmFuAX9f75lEaMPwAK0+FI3OQTVqTF6GL+gKvQSmfejRYLjPF71nZ61yJ58Lsiknk4IFEtt
/XBtaxpjvWTmH7fO8PKfLrsbt/JQiHOSwuLjFo2aMgKrjhjd6RAR7n41q5CvPjCUetAzPadlD/X8
jp5iz0dELAFdux21MtJH0jgu0P6B3DJqHrXuPNX854EdGcMkQupjOakAAAACAC4vZXhwb3J0L2hk
YTMvNy4yLjAvbG9jYWwvY29uZi9jZXJ0cy83ZDQ1M2Q4Zi4wAAABSucYLc8ABVguNTA5AAAEHjCC
BBowggMCAhEAm34GSaM+YrnV7pBIcSnvVzANBgkqhkiG9w0BAQUFADCByjELMAkGA1UEBhMCVVMx
FzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3Jr
MTowOAYDVQQLEzEoYykgMTk5OSBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBv
bmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRp
b24gQXV0aG9yaXR5IC0gRzMwHhcNOTkxMDAxMDAwMDAwWhcNMzYwNzE2MjM1OTU5WjCByjELMAkG
A1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVz
dCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMTk5OSBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3Jp
emVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENl
cnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
AQDLupxS/HgfGh5vGzdzvfjJa5QSME/wNkf10JEK9RfIpWHBFkBN+4phkOV2IMERBn2rLG6m9RFB
jvotrSphWaRnJkzQ6LxSW3AgBFjResmkabyDF2StBYu80FjOjYz16/BCSQudlydnMm7hrpMVHHC8
IE0vGN6SiOhshVcRGul+4yYRVKJFllWDyjCJ6NzYo+0qgD9/eWVXPhUgZggvlZO/qkcvqEaX8BLi
/sIKK1Hmdua3RrfiDabMqMNMWVWJ5uhTXBzqnfBiFgunyV8M8N7Cds6v92ry+kGmojMUyeV6Y9Oe
YjfVhWWeDuZTJHQbXh0SU1vHLOeDSTsVropouVeXAgMBAAEwDQYJKoZIhvcNAQEFBQADggEBABEU
lsGrkgj3Py/Jsv7kWp9k3tshT4aZNHY2V93QFS/FrX8VHzdicz7U51/OFwPbNfor265gCV8eX49u
uws96loTHgxgb7XAtSMiLgcLy6l0y0e7HcHXpWvML9JC/Undp4nPU7raAFoov4Lf+LoTHVCGgv2O
MI8pRrAePTXaOGIWGEqt5rZRbN6vYusB0B4k/nqPEhoSaLj7ZpkUFEVcrueuaReBK1o3yV4q9Mbi
oVxUm6ZUAM/w8cHHmDAaOzYW26Nu6v2tssLa7wJHE4rA8bMxrU8c4U+crw8Mnfd4Ddj0NVaA2rdt
F4+dHoFk4f7FRbqta7kKek5PS4TuS/F93REAAAACAC4vZXhwb3J0L2hkYTMvNy4yLjAvbG9jYWwv
Y29uZi9jZXJ0cy9iMGYzZTc2ZS4wAAABSucYH5AABVguNTA5AAADeTCCA3UwggJdoAMCAQICCwQA
AAAAARVLWsOUMA0GCSqGSIb3DQEBBQUAMFcxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9iYWxT
aWduIG52LXNhMRAwDgYDVQQLEwdSb290IENBMRswGQYDVQQDExJHbG9iYWxTaWduIFJvb3QgQ0Ew
HhcNOTgwOTAxMTIwMDAwWhcNMjgwMTI4MTIwMDAwWjBXMQswCQYDVQQGEwJCRTEZMBcGA1UEChMQ
R2xvYmFsU2lnbiBudi1zYTEQMA4GA1UECxMHUm9vdCBDQTEbMBkGA1UEAxMSR2xvYmFsU2lnbiBS
b290IENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2g7mmY3Oo+NPin778YuDJWvq
SB/xKrC5lREEvfBj0eJnZs8c3c8bSCvujYmOmq8pgGWr6cctEsurHExwB6E9CjDNFY1P+N3UjFAV
HO9Q7sQu9/zpUvKRfeBt1TUwjl5Dc/JB6dVq47KJOlY5OG8GPIhpWypNxadUuGyJzJv5PMrl/Yn1
EjySeJbW3HRuk0Rh0Y3HRrJ1DoboGYrVbWzVeBaVounICjjr8iQTT3NUkxOFOhu8HjS1iwWMuXeL
sdsfIJGrCVNukM57N3S5cEeRIlFjFnmusa5BJgjIGSvRRqpI1mQq14M0/ywqwWwZQ0oHhefTfPYh
aO/q8lKff5OQzwIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNV
HQ4EFgQUYHtmGkUNl8qJUC99BM00qP/8/UswDQYJKoZIhvcNAQEFBQADggEBANZz53xPdtCNv+y6
or40xSgytXz8bJwsK70JnlO/a16qEUi25Qijs8o9YU3TRgmzPsOg42NVG/K676054UO5OKPmL4om
O++gUFb5xgr9OM3EC3BRlJeYBN/DX5TVFckUQZzEXXVkFQ3/VTDsho//De8suWNG9qr837xp/S4S
SGSa4JXwpu8pjwGxFbUMHaX+aSxpJHges6cccWLuysiXrBddisL4R4ZuKsRWMZXQZ4mFK/lspl1G
nQyqguSZUd1wt9tWPWHkauFc1vb+Pd5BzAeuY1K/U1P0K+nH/bb3gl+F0kEY24GzBBzFH6SAbxUg
yd4MiAod1mZV4vxIySkmaeAAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0
cy82MzVjY2ZkNS4wAAABUYW1ShIABVguNTA5AAAFUzCCBU8wggS4oAMCAQICAWgwDQYJKoZIhvcN
AQEEBQAwgZsxCzAJBgNVBAYTAkhVMREwDwYDVQQHEwhCdWRhcGVzdDEnMCUGA1UEChMeTmV0TG9j
ayBIYWxvemF0Yml6dG9uc2FnaSBLZnQuMRowGAYDVQQLExFUYW51c2l0dmFueWtpYWRvazE0MDIG
A1UEAxMrTmV0TG9jayBFeHByZXNzeiAoQ2xhc3MgQykgVGFudXNpdHZhbnlraWFkbzAeFw05OTAy
MjUxNDA4MTFaFw0xOTAyMjAxNDA4MTFaMIGbMQswCQYDVQQGEwJIVTERMA8GA1UEBxMIQnVkYXBl
c3QxJzAlBgNVBAoTHk5ldExvY2sgSGFsb3phdGJpenRvbnNhZ2kgS2Z0LjEaMBgGA1UECxMRVGFu
dXNpdHZhbnlraWFkb2sxNDAyBgNVBAMTK05ldExvY2sgRXhwcmVzc3ogKENsYXNzIEMpIFRhbnVz
aXR2YW55a2lhZG8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAOvssGxhiiMlr2Ag49mf/JML
212NsKGzQDqCzv114HgyA4ZahpWR7VP6nUD85ujd2Vt6A71d8zsMw1F5m61VoOnQAxCvCroUQtlS
JhEix9IgzIKkmqn+uIF2nWq30jZ1PrGGCfZubX5Ot3rsrnGE9gQzCCUy63SsFkTG5ECTHX+tAgMB
AAGjggKfMIICmzASBgNVHRMBAf8ECDAGAQH/AgEEMA4GA1UdDwEB/wQEAwIABjARBglghkgBhvhC
AQEEBAMCAAcwggJgBglghkgBhvhCAQ0EggJRFoICTUZJR1lFTEVNISBFemVuIHRhbnVzaXR2YW55
IGEgTmV0TG9jayBLZnQuIEFsdGFsYW5vcyBTem9sZ2FsdGF0YXNpIEZlbHRldGVsZWliZW4gbGVp
cnQgZWxqYXJhc29rIGFsYXBqYW4ga2VzenVsdC4gQSBoaXRlbGVzaXRlcyBmb2x5YW1hdGF0IGEg
TmV0TG9jayBLZnQuIHRlcm1la2ZlbGVsb3NzZWctYml6dG9zaXRhc2EgdmVkaS4gQSBkaWdpdGFs
aXMgYWxhaXJhcyBlbGZvZ2FkYXNhbmFrIGZlbHRldGVsZSBheiBlbG9pcnQgZWxsZW5vcnplc2kg
ZWxqYXJhcyBtZWd0ZXRlbGUuIEF6IGVsamFyYXMgbGVpcmFzYSBtZWd0YWxhbGhhdG8gYSBOZXRM
b2NrIEtmdC4gSW50ZXJuZXQgaG9ubGFwamFuIGEgaHR0cHM6Ly93d3cubmV0bG9jay5uZXQvZG9j
cyBjaW1lbiB2YWd5IGtlcmhldG8gYXogZWxsZW5vcnplc0BuZXRsb2NrLm5ldCBlLW1haWwgY2lt
ZW4uIElNUE9SVEFOVCEgVGhlIGlzc3VhbmNlIGFuZCB0aGUgdXNlIG9mIHRoaXMgY2VydGlmaWNh
dGUgaXMgc3ViamVjdCB0byB0aGUgTmV0TG9jayBDUFMgYXZhaWxhYmxlIGF0IGh0dHBzOi8vd3d3
Lm5ldGxvY2submV0L2RvY3Mgb3IgYnkgZS1tYWlsIGF0IGNwc0BuZXRsb2NrLm5ldC4wDQYJKoZI
hvcNAQEEBQADgYEAEK1/1wwygArYhvF5mLWt1M2zNsSWSMFczZrZBS6fvlDr9CYUEC3UZhf4nsEn
/fHt5HtLoGy1q5pXcKbtoKTtLvX9/L3+TTcIDLzjloMi9Ukbf0srtFTBgHyZTh3QjO7QrOWS+nVW
/mSgE4+4uBadYQVngMjQ2KUHAjSYBI0zBNQAAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40L2xvY2Fs
L2NvbmYvY2VydHMvNDEyYmVhNzMuMAAAATC7KutJAAVYLjUwOQAAAy0wggMpMIICkqADAgECAgEA
MA0GCSqGSIb3DQEBBAUAMIHPMQswCQYDVQQGEwJaQTEVMBMGA1UECBMMV2VzdGVybiBDYXBlMRIw
EAYDVQQHEwlDYXBlIFRvd24xGjAYBgNVBAoTEVRoYXd0ZSBDb25zdWx0aW5nMSgwJgYDVQQLEx9D
ZXJ0aWZpY2F0aW9uIFNlcnZpY2VzIERpdmlzaW9uMSMwIQYDVQQDExpUaGF3dGUgUGVyc29uYWwg
UHJlbWl1bSBDQTEqMCgGCSqGSIb3DQEJARYbcGVyc29uYWwtcHJlbWl1bUB0aGF3dGUuY29tMB4X
DTk2MDEwMTAwMDAwMFoXDTIwMTIzMTIzNTk1OVowgc8xCzAJBgNVBAYTAlpBMRUwEwYDVQQIEwxX
ZXN0ZXJuIENhcGUxEjAQBgNVBAcTCUNhcGUgVG93bjEaMBgGA1UEChMRVGhhd3RlIENvbnN1bHRp
bmcxKDAmBgNVBAsTH0NlcnRpZmljYXRpb24gU2VydmljZXMgRGl2aXNpb24xIzAhBgNVBAMTGlRo
YXd0ZSBQZXJzb25hbCBQcmVtaXVtIENBMSowKAYJKoZIhvcNAQkBFhtwZXJzb25hbC1wcmVtaXVt
QHRoYXd0ZS5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMlm2fgHRM+5jC7woe8TRWwF
394nFlE2QRFsbDvt/hB9Ep7lm0Ka/mAxw2a3czpIrk7QMjeUiLUNttnz8kTZ1YgS3XZN8hr8byMe
evHYmEVOBxDvFkLQQ3VtSt7iqskx/x8AcHxmzxAlCLr67gDpRgNmJxEVO6pb8pjdNkKy2oh1AgMB
AAGjEzARMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEEBQADgYEAaTaJ9zQqM3IvbTvUIrK4
b5rFNmYOGzyhsXVa5v010/io8gdvhWeO3iu54hewOqDwDqIAmt/zFBVuu8iFWpiA+f++dB098/4w
JdE3NGf6pXF5MGEpcsDgLEz7VuQ6qG/lMllS23UoUFkM+AsZ5KzZr5aNL1DbB8PqH6sz4PUrMYkA
AAACAC8vZXhwb3J0L2hkYTMvNi4xMC40L2xvY2FsL2NvbmYvY2VydHMvNzU2ODBkMmUuMAAAATC7
K02/AAVYLjUwOQAABDYwggQyMIIDGqADAgECAgEBMA0GCSqGSIb3DQEBBQUAMHsxCzAJBgNVBAYT
AkdCMRswGQYDVQQIDBJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAOBgNVBAcMB1NhbGZvcmQxGjAYBgNV
BAoMEUNvbW9kbyBDQSBMaW1pdGVkMSEwHwYDVQQDDBhBQUEgQ2VydGlmaWNhdGUgU2VydmljZXMw
HhcNMDQwMTAxMDAwMDAwWhcNMjgxMjMxMjM1OTU5WjB7MQswCQYDVQQGEwJHQjEbMBkGA1UECAwS
R3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRowGAYDVQQKDBFDb21vZG8gQ0Eg
TGltaXRlZDEhMB8GA1UEAwwYQUFBIENlcnRpZmljYXRlIFNlcnZpY2VzMIIBIjANBgkqhkiG9w0B
AQEFAAOCAQ8AMIIBCgKCAQEAvkCd9G7h6naHHE1FRI6+RsiDBp3BKv4YH47kAvrzq11QihYxC5oG
0MVwIs1JLVRjzLZuaEYLU+rLTCTAvHJO6vEVrvRUmhIKw3qyM2Di2olV8yJY897cz++DhqKMlE+f
aPKYkEaEJ8d2v+PMNSyLXgdkZYLASLCokflhn3YgUKiRx2a163hiA1bwihoT6jGjHqCZ/Tj29icy
WG8H9Wu4+xQrr7eqzNZjX3OM2gWZqDioyxd4NlGs6Z70eDqNzw/ZQuKYDKsvnw4B3u+fmUnxLd+s
dE0bmLVHxeUp0fmQGMdinL6DxyZ7Poolx8DdneY1aBAgnY/Y3tLDhJwNXugvyQIDAQABo4HAMIG9
MB0GA1UdDgQWBBSgEQojPpbxB+zirynvgqV/0DCktDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/
BAUwAwEB/zB7BgNVHR8EdDByMDigNqA0hjJodHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9BQUFDZXJ0
aWZpY2F0ZVNlcnZpY2VzLmNybDA2oDSgMoYwaHR0cDovL2NybC5jb21vZG8ubmV0L0FBQUNlcnRp
ZmljYXRlU2VydmljZXMuY3JsMA0GCSqGSIb3DQEBBQUAA4IBAQAIVvwC8Jvo/6T61nvGRIDOT8TF
9gBYzKa2vBRJaAR26ObuXewCD2DWjVAYTyZOAePmsKXuv7x0VEG//fwSuMdPWvSJYAV/YLcFSvP2
8cK/xLl0hrYtfWvM0vNG3S/G4GrDwzQDLH2W3VrCDqcKmcEFi6sML/NcOs9sN1UJh95TQGxY7/y2
q2VuBPYb3DzgWhXGntnxWUgwIWUDbOzpIXPsmwOh4DetoBUYj/q6As6nLKkQEyzU5QgmqyKXYPiQ
XnTUoppTvfKpaOCibsLXbLGjD56/62jnVvKu8uMrODoJgbVrhde+Le0/GreyY+L1YiyC1GoAQVDx
OYOflek2lphuAAAAAgAvL2V4cG9ydC9oZGEzLzYuMTAuNC9sb2NhbC9jb25mL2NlcnRzL2E3NjA1
MzYyLjAAAAEwuytlOwAFWC41MDkAAAMkMIIDIDCCAgigAwIBAgIBHTANBgkqhkiG9w0BAQUFADA5
MQswCQYDVQQGEwJGSTEPMA0GA1UEChMGU29uZXJhMRkwFwYDVQQDExBTb25lcmEgQ2xhc3MyIENB
MB4XDTAxMDQwNjA3Mjk0MFoXDTIxMDQwNjA3Mjk0MFowOTELMAkGA1UEBhMCRkkxDzANBgNVBAoT
BlNvbmVyYTEZMBcGA1UEAxMQU29uZXJhIENsYXNzMiBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP
ADCCAQoCggEBAJAXSjWdyvANlsdE+hY3/Ei9vX+ALTU74W+oZ6m/AxxNjG8yR9VBaKQTBME1DJqE
Q/xcHf+Js+gXGM2RX/uJ4+q/Tl18GybTdXnt5oTjV+WtKcT0OijnpXuENmmz/V52vaMtmdOQTiMo
fRhj8VQ7Jp12W5dCsv+u8E7s3TmVToMGf+dJQMjFAbJUWmYdPfz56TwKnoG4cPABi+QjVHzIrviQ
HgCWctRUz2EjvOr7nQKV0ba5cTppCD8PtOFCx4j1P5iop7oc4HFx71hXgVB6XGt0Rg6DA5jDjqhu
8nYybieDwnPz3BjotJPqdURrBGAgcVeHnfO+oJAjPYok4doh28MCAwEAAaMzMDEwDwYDVR0TAQH/
BAUwAwEB/zARBgNVHQ4ECgQISqCqWITTXjwwCwYDVR0PBAQDAgEGMA0GCSqGSIb3DQEBBQUAA4IB
AQBazof5FnIVV0sd2ZvnoiYw7JNn39Yt0jSv9zilzqsWuasvfDXLrNAPtEwr/IDva4yRXzZ299uz
Gxnq9LIR/WFxRL8oszodv7ND6J+/3DEIcbCdjdY0RzKQxmUk96BKfARzjzlvF4xytb1LyHr4e4PD
KE6cCepnP7JnBBvDFNr450kkkdAdavphOe9r5yF1BgfYErQhIHBCcYHaPJo2vqZbDWpsmh+Re/n5
70K6Tk6ezAyNlNzZRZxe7EJQY670XcSxEtzKO6gunRRaBXW37Ndj4ro1tgQIkejanZz2ZrUYrAqm
VCY0M9IbwdR/GjqOC6oybtv8TyWf2TLHllpwrN9MAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xv
Y2FsL2NvbmYvY2VydHMvMTExZTYyNzMuMAAAAVGFs1lBAAVYLjUwOQAAA74wggO6MIICoqADAgEC
AgsEAAAAAAEPhibmDTANBgkqhkiG9w0BAQUFADBMMSAwHgYDVQQLExdHbG9iYWxTaWduIFJvb3Qg
Q0EgLSBSMjETMBEGA1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjAeFw0wNjEy
MTUwODAwMDBaFw0yMTEyMTUwODAwMDBaMEwxIDAeBgNVBAsTF0dsb2JhbFNpZ24gUm9vdCBDQSAt
IFIyMRMwEQYDVQQKEwpHbG9iYWxTaWduMRMwEQYDVQQDEwpHbG9iYWxTaWduMIIBIjANBgkqhkiG
9w0BAQEFAAOCAQ8AMIIBCgKCAQEAps8kDr4ubyiZRULEqz4hVJsL03+EcPoSs8u/h1/Gf4bTsjBc
1v2t8Xvc5fhglgmSEPXQU977e35ziKxSiHtKpspJpl6op4xaEbx6guu+jOmzrJYlB5dKmSoHL7Qe
d7+KD7UCfBuWuMW5Oiy81hK561l94tAGhl9eSWq1OV6INOy8eAwImIRsqM1LtKB9DHlN8LgtyyHK
1WxbfeGgKYSh+dOUScskYpEgvN0L1dnM+eonCitzkcadG6zIy+jgoPQvkItN+7A2G/YZeoXgbfJh
E4hcn+CTClGXilrOr6vV96oJqmC93Nlf33KpYBNeAAHJSvo/pOoHAyECjoLKA8KbjwIDAQABo4Gc
MIGZMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSb4gdXZxwewGoG
3lm0mi3f3BmGLjA2BgNVHR8ELzAtMCugKaAnhiVodHRwOi8vY3JsLmdsb2JhbHNpZ24ubmV0L3Jv
b3QtcjIuY3JsMB8GA1UdIwQYMBaAFJviB1dnHB7AagbeWbSaLd/cGYYuMA0GCSqGSIb3DQEBBQUA
A4IBAQCZgVOHHGiXhpHs4Eq4RAurgawnT9bBuBxDeLMMmvzqLDxuYRtNSyn1nwUdJsG46YMAYkW2
qQiTuakzSxiawviHiE7b3XE0GsFU2kY/4NMqq21UIvU6Ys0gb7opidfdke7TXKI+oVtB9d/lZEMt
6dU5q9Ki37eL0MCAGRxFwC2M6PgtpHRWScUFtU8V3m5EeDmHqH6783kYkbv0b53B8Iw1jF0B+8Nt
ue9EbXlGMX4K/qmCwf/vq24gxFDJX51NmxeMDOUByaBBanNT+qVQtG4lD/tMGPT9UtmOabHoEQ/e
iNj7HUn3qt6VzyB4wmAS2yVAjGr8fkI4QGQS956B4ZMuAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4w
L2xvY2FsL2NvbmYvY2VydHMvZDE2YTU4NjUuMAAAAVGFtG3+AAVYLjUwOQAABhgwggYUMIID/KAD
AgECAghT7Dvu+7JIXzANBgkqhkiG9w0BAQUFADBRMQswCQYDVQQGEwJFUzFCMEAGA1UEAww5QXV0
b3JpZGFkIGRlIENlcnRpZmljYWNpb24gRmlybWFwcm9mZXNpb25hbCBDSUYgQTYyNjM0MDY4MB4X
DTA5MDUyMDA4MzgxNVoXDTMwMTIzMTA4MzgxNVowUTELMAkGA1UEBhMCRVMxQjBABgNVBAMMOUF1
dG9yaWRhZCBkZSBDZXJ0aWZpY2FjaW9uIEZpcm1hcHJvZmVzaW9uYWwgQ0lGIEE2MjYzNDA2ODCC
AiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMqWa47q+PvxojXgf0za4MNS1322EMgCXrND
KsRParLKHF0omngRGmlZV6+1IELkiw/m31umA5Iv9RHkYtcycTjZBAxxqz1Rfg8H32MFXOm/lG/B
KYLAtNpRsME8u603SlzK8Us2DiSrv8OEd/2oUPSx58Yv0i1ZjXoKTpZpUgKqNpjs/PoUgww3H8mS
N3/XgS3lxLngPjT+Z/Q+ZtHT9EDPXmI0D3AGPiAYWs73chslbJN0FJOjc7EOqocQI1lfIAUZR+1o
jpISyl381iuykjwgz+FfryC+oHZ/duXsGoZhMz7ne7Q/oA+Oorlqb7mHJm9BbIimUP1qYwv1kxYb
GY+y7ZubyZD1AQzfGT0PPjgjyS+PDNEC/htV1k7QjTyvT6Tz/q8q0wWdeQihy1cxtJzIkLJn9BgW
kzr8R9jReJYxH7orDF9dma1jiVokIHbY3/2rTqYiqp1e5ieKfWgpo+eKuNoRuxctmZ0TJEb3xeLY
n45/x490bVqy6HL1rO4kEK0vFNr/LZpGcUe+Qt+7Adv0f9MojzFZW9PJAqa0Uspul/tDxQgmb4r0
u/2fKKoN1UXzEzod2MB4j0FnPB6UZK57C8Xo2QGIORqXhmRB1TuHDG76D8a9SBS/OU3UnkG2j5Yd
Y5aT2ZUGeDFonjcGO4CJRWE5I8cbRKMV5Rz4kjC7AgMBAAGjge8wgewwEgYDVR0TAQH/BAgwBgEB
/wIBATAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFGXN66s1HgA+ftV0wBy0c0cOGmQvMIGmBgNV
HSAEgZ4wgZswgZgGBFUdIAAwgY8wLwYIKwYBBQUHAgEWI2h0dHA6Ly93d3cuZmlybWFwcm9mZXNp
b25hbC5jb20vY3BzMFwGCCsGAQUFBwICMFAeTgBQAGEAcwBlAG8AIABkAGUAIABsAGEAIABCAG8A
bgBhAG4AbwB2AGEAIAA0ADcAIABCAGEAcgBjAGUAbABvAG4AYQAgADAAOAAwADEANzANBgkqhkiG
9w0BAQUFAAOCAgEAF32g+bTdxcXrrUsktaECq92liEqyD1VLK1eMO+Ux3f7EMvHnW2SWNjIY7KUy
d9fjRLbAESqAuT1qbnyb0638w9aj5mQpfNHhOB6CK/8nZa/7FhXELnGE5bX/+qRHvWQyu/YlhKIn
QvUgsMITEBHNEBW6QpAq0kThlibrMUgS/SrayQbPdB6pS9WHKPl5NJI+LkTo9o9PjzU/JbM53GMq
kGsgX8RSEk6XLCqsnZfeSPKjZtvC0oOVpmanniUP6QszkWUKWsPZVBLdr8NODh8mXg3cs43s1YFw
3tJPJAXzbE71TElmjdH/0gslQUj+UYTGQq+ABM/QfmRJ5PLfouyxTMAqHee0sWWixLzxmPSqcAdj
tLjaO0z6QCIwWxGm8AUOxgIDSKuGm4Xd293qonaAc331nATERY3nuRyLnurXddFysd51ROdCfeJX
a33cmbw9gyjqgJONxUxlwXCBuDj8QzGy9gM0R7Ks+yIGyx7dF0ccX2a50xqi2hGxpLwjyeS+h/+5
lLb4XSBK1F/nvWh7ZfIVHtI6qS3p2GskrJdYREetWRjxIWVw3s40YKhA8fM8pMMoI4z+JzNDQKAX
POvqO7BypqO5SkteFkj0srzIjJLFnZ+scja8NIA0a6mLksC4F+3sdlP1JAGMsyLoS3xVxp36oxS7
ZYVubk8Sfgo8nZUAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy80ZDY1
NGQxZC4wAAABUYWzQ7EABVguNTA5AAACXjCCAlowggHDAgIBpTANBgkqhkiG9w0BAQQFADB1MQsw
CQYDVQQGEwJVUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMScwJQYDVQQLEx5HVEUgQ3liZXJU
cnVzdCBTb2x1dGlvbnMsIEluYy4xIzAhBgNVBAMTGkdURSBDeWJlclRydXN0IEdsb2JhbCBSb290
MB4XDTk4MDgxMzAwMjkwMFoXDTE4MDgxMzIzNTkwMFowdTELMAkGA1UEBhMCVVMxGDAWBgNVBAoT
D0dURSBDb3Jwb3JhdGlvbjEnMCUGA1UECxMeR1RFIEN5YmVyVHJ1c3QgU29sdXRpb25zLCBJbmMu
MSMwIQYDVQQDExpHVEUgQ3liZXJUcnVzdCBHbG9iYWwgUm9vdDCBnzANBgkqhkiG9w0BAQEFAAOB
jQAwgYkCgYEAlQ+gtvBQnOh6x4jN3RcOLrCU0Bs9DvaUwIqUxwbIkJfIuGQaen5sPFPhNyhzYH+y
l1MHn1P5bViU0q+NbYhngObtspXPcjHKpRxyulwC52RC5/mpLNY6DayNQqokATnmnD8BhVcNWIdF
+NOFqpNpJoVwSIA/EhXHebQfBS87YpkCAwEAATANBgkqhkiG9w0BAQQFAAOBgQBt6xsJ6V7ZUdtn
ImGkKjxId+OgfKbec6IUA4U9+6sOMMWDFjOBEwieezRO30DIdNe5fdz0dlV9m2NUGOnw6vNcsdmL
Qh65wJVOuvrV4nz1aGG/juwFl19bsNejhTTEJKcND5WT78uU2J4fnVyFbceqrk8fIrXNla26p8z5
qwt6fwAAAAIALi9leHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzL2JjZGQ1OTU5LjAA
AAFK5xgkYwAFWC41MDkAAALrMIIC5zCCAlACAQEwDQYJKoZIhvcNAQEFBQAwgbsxJDAiBgNVBAcT
G1ZhbGlDZXJ0IFZhbGlkYXRpb24gTmV0d29yazEXMBUGA1UEChMOVmFsaUNlcnQsIEluYy4xNTAz
BgNVBAsTLFZhbGlDZXJ0IENsYXNzIDIgUG9saWN5IFZhbGlkYXRpb24gQXV0aG9yaXR5MSEwHwYD
VQQDExhodHRwOi8vd3d3LnZhbGljZXJ0LmNvbS8xIDAeBgkqhkiG9w0BCQEWEWluZm9AdmFsaWNl
cnQuY29tMB4XDTk5MDYyNjAwMTk1NFoXDTE5MDYyNjAwMTk1NFowgbsxJDAiBgNVBAcTG1ZhbGlD
ZXJ0IFZhbGlkYXRpb24gTmV0d29yazEXMBUGA1UEChMOVmFsaUNlcnQsIEluYy4xNTAzBgNVBAsT
LFZhbGlDZXJ0IENsYXNzIDIgUG9saWN5IFZhbGlkYXRpb24gQXV0aG9yaXR5MSEwHwYDVQQDExho
dHRwOi8vd3d3LnZhbGljZXJ0LmNvbS8xIDAeBgkqhkiG9w0BCQEWEWluZm9AdmFsaWNlcnQuY29t
MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDOOnHK5avIWZJV16vYdA757tn2VUdZZUcOBVXc
65g2PFxTXdMwzzjsvUGJ7SVCCSRrCl6zfN1SLUzm1NZ9WlmpZdRJEy0kTRxQb7XBhVQ7/nHk01xC
+YDgkRoKWzk2Z/M/VXwbP7RfZHM047QSv4dk+NoS/zcnwbNDu+97bi5p9wIDAQABMA0GCSqGSIb3
DQEBBQUAA4GBADt/UG9vUJSZSWI4OB9L+KXIPqeCgfYrx+jFzug6EILLGACOTb2oWH+heQC1u+mN
r0HZDzTuIYEZoDJJKPTEjlbVUjP9UNV+mWwD5MlM/Mtsq2azSiGM5bUMMj4QssxsodyamEwCW/PO
uZ6lcg5Ktz885hZo+L7tdEy8W9ViH0PdAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2Nv
bmYvY2VydHMvMmZhODcwMTkuMAAAAVGFs+taAAVYLjUwOQAAA+owggPmMIICzqADAgECAhBXyzNv
wlwW5kcWF+OQMWjgMA0GCSqGSIb3DQEBBQUAMGIxCzAJBgNVBAYTAlVTMSEwHwYDVQQKExhOZXR3
b3JrIFNvbHV0aW9ucyBMLkwuQy4xMDAuBgNVBAMTJ05ldHdvcmsgU29sdXRpb25zIENlcnRpZmlj
YXRlIEF1dGhvcml0eTAeFw0wNjEyMDEwMDAwMDBaFw0yOTEyMzEyMzU5NTlaMGIxCzAJBgNVBAYT
AlVTMSEwHwYDVQQKExhOZXR3b3JrIFNvbHV0aW9ucyBMLkwuQy4xMDAuBgNVBAMTJ05ldHdvcmsg
U29sdXRpb25zIENlcnRpZmljYXRlIEF1dGhvcml0eTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
AQoCggEBAOS8fpIwbcbYjisLvEbO4CeW3t75+hLTPDNzswQvvHGM5Z+2ImA+X13OCf+CDBuaUVAa
Jond1WFdGdwSDy0KokNdF9A0kiDqc884LAYmCXpy9/pQMvjCk9NpoiPOQbHM5NUfNtGKOviMY+IU
WWntDdN/a+i4A+VPauWYY2lIBb4u/zO26ZdZafhnGa6TYZZEFdNysD+8an3sSH+Nw6uqcStTaUFT
NLWwucUGCsSwRfVBXW6JRXs9OyaMdMLl0tF9shHU+1gyIpqAydz9DOl/XgOXzjsAFIcncDipjm6z
J3aYUeAF4yGrGtWFIjwptZoWxYCo9LtrMI8vRgKisQwi4NMCAwEAAaOBlzCBlDAdBgNVHQ4EFgQU
ITDJ+wDXTpjah6oq0KcusUAxp0wwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wUgYD
VR0fBEswSTBHoEWgQ4ZBaHR0cDovL2NybC5uZXRzb2xzc2wuY29tL05ldHdvcmtTb2x1dGlvbnND
ZXJ0aWZpY2F0ZUF1dGhvcml0eS5jcmwwDQYJKoZIhvcNAQEFBQADggEBALuuS+e3V+t/qi23c0eF
asHkpR3k5zzp9Flld7V6W1qNJTbgepcuOMBXYIOYBoOfuXZ6blDguogs/EXMGLCZlVEO7B24iP+H
UByCwuPgMoC/oAtHyMMx75lnMoBPFyF5DGlc3l40rgK1JupQ338YZSzJ8mPhqQf+fHEfazMkah4F
9wVowGoSyy5eYcuuKNN+wrRmkSZfPC4kX8tYD+so7K8RlvPce2/Ap4jyU3ezYF6urijaNSxvNEXT
JuHe7FtPJ2sWfL1EBBiCs4l5FxBxPXqiFk71Ac2kbGVooUl2XEPJ2Lw2Z2yllLXUzLm9ajVWId7Y
w+v7y6RgTLBVoKB7V7IAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy8z
YTNiMDJjZS4wAAABUYWz/DkABVguNTA5AAAD9TCCA/EwggLZoAMCAQICEEE9csf0ax+BQ33x0ihU
35owDQYJKoZIhvcNAQEFBQAwgYoxCzAJBgNVBAYTAkNIMRAwDgYDVQQKEwdXSVNlS2V5MRswGQYD
VQQLExJDb3B5cmlnaHQgKGMpIDIwMDUxIjAgBgNVBAsTGU9JU1RFIEZvdW5kYXRpb24gRW5kb3Jz
ZWQxKDAmBgNVBAMTH09JU1RFIFdJU2VLZXkgR2xvYmFsIFJvb3QgR0EgQ0EwHhcNMDUxMjExMTYw
MzQ0WhcNMzcxMjExMTYwOTUxWjCBijELMAkGA1UEBhMCQ0gxEDAOBgNVBAoTB1dJU2VLZXkxGzAZ
BgNVBAsTEkNvcHlyaWdodCAoYykgMjAwNTEiMCAGA1UECxMZT0lTVEUgRm91bmRhdGlvbiBFbmRv
cnNlZDEoMCYGA1UEAxMfT0lTVEUgV0lTZUtleSBHbG9iYWwgUm9vdCBHQSBDQTCCASIwDQYJKoZI
hvcNAQEBBQADggEPADCCAQoCggEBAMtPswCbPTbd+dFJamsQSR/s2CuyxvgygSlDlUyaGSMhFUXe
48gcUVVbrpPoN/8ra+nU6r4q3ahRK9dmw2FcYALI9c5yezu48k5lCJrNpGoZwQG7c6bX9sPdzbyk
i7WZYbgBoqPUTdQFPZGt+LQIcWSvcPEca372w3edJHN75AyM4dk24ZmLBZkL7UUxCcrCANv3cqCW
qpWH0I7HtmFzDXZmjNwbtGOin3+TEzDxoSfb2f8sVYiRoOBPB7AoVowYG5dEjond4Bdu5yrvjzkK
MYSC2EAUSS56QeSn/uNkzMFZcUssIadbfeAd0S6Bm8PYaPe9lhuscLEWFAvbYLkmAQUCAwEAAaNR
ME8wCwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFLMDfq42vLB50dyUJrYR
viGyaYaUMBAGCSsGAQQBgjcVAQQDAgEAMA0GCSqGSIb3DQEBBQUAA4IBAQBLof8Lh26z+cFDsUjz
KMAdLskJQfqUABykpKtJT489Hu9Nb728pPbyJjDJEModiPt0GR+FRb2wbFH5Nn7b9UwyOkFPW0fP
6AsttsQZnXTFR8Y7ag+sFNs89HOcqQXfANx0ePr4NWBZAhMYfLz7TbAgbUO7YDB6ZzNcxZnR+C05
UnP7jKqXJVxy2Qgeq04844ExnwOm+8D+KYhV2oTVUAO24oSjpjaqEToB4RhL1kRosz35U3SEs0aR
RpYAt4AstuHjEOLboucojwGWYhY+AOMcpTaBGKJMUnbAEaNu5h2641q+NlPFPnWPhmkpWFO1nLtv
n1zFGOzdL+GYyfy+3woNAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMv
OGZlNjQzZGYuMAAAAVGFtWwyAAVYLjUwOQAAB/swggf3MIIHYKADAgECAgEAMA0GCSqGSIb3DQEB
BQUAMIIBFDELMAkGA1UEBhMCRVMxEjAQBgNVBAgTCUJhcmNlbG9uYTESMBAGA1UEBxMJQmFyY2Vs
b25hMS4wLAYDVQQKEyVJUFMgSW50ZXJuZXQgcHVibGlzaGluZyBTZXJ2aWNlcyBzLmwuMSswKQYD
VQQKFCJpcHNAbWFpbC5pcHMuZXMgQy5JLkYuICBCLTYwOTI5NDUyMS8wLQYDVQQLEyZJUFMgQ0Eg
Q0xBU0VBMSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEvMC0GA1UEAxMmSVBTIENBIENMQVNFQTEg
Q2VydGlmaWNhdGlvbiBBdXRob3JpdHkxHjAcBgkqhkiG9w0BCQEWD2lwc0BtYWlsLmlwcy5lczAe
Fw0wMTEyMjkwMTA1MzJaFw0yNTEyMjcwMTA1MzJaMIIBFDELMAkGA1UEBhMCRVMxEjAQBgNVBAgT
CUJhcmNlbG9uYTESMBAGA1UEBxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJUFMgSW50ZXJuZXQgcHVi
bGlzaGluZyBTZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJpcHNAbWFpbC5pcHMuZXMgQy5JLkYuICBC
LTYwOTI5NDUyMS8wLQYDVQQLEyZJUFMgQ0EgQ0xBU0VBMSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0
eTEvMC0GA1UEAxMmSVBTIENBIENMQVNFQTEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxHjAcBgkq
hkiG9w0BCQEWD2lwc0BtYWlsLmlwcy5lczCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAuzDX
3NBUvTVOn8VMgurRUDxHmPybaZ13zW7gP+7rMl9fn9LQeeWVc0QhMuAK253Xzo2rUosreOCbW330
/W0J5a7hbB0HI6AX0fl9qEZGkSKosmnGrff19ZShMJS9AMxEf+7EnsnB5o8KNsH9JD0BoPV74nx4
ZkOLT1nym9n6SbMCAwEAAaOCBFMwggRPMB0GA1UdDgQWBBRnJpbnob/YtQOd/jvc/vKK5hXdMDCC
AUYGA1UdIwSCAT0wggE5gBRnJpbnob/YtQOd/jvc/vKK5hXdMKGCARykggEYMIIBFDELMAkGA1UE
BhMCRVMxEjAQBgNVBAgTCUJhcmNlbG9uYTESMBAGA1UEBxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJ
UFMgSW50ZXJuZXQgcHVibGlzaGluZyBTZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJpcHNAbWFpbC5p
cHMuZXMgQy5JLkYuICBCLTYwOTI5NDUyMS8wLQYDVQQLEyZJUFMgQ0EgQ0xBU0VBMSBDZXJ0aWZp
Y2F0aW9uIEF1dGhvcml0eTEvMC0GA1UEAxMmSVBTIENBIENMQVNFQTEgQ2VydGlmaWNhdGlvbiBB
dXRob3JpdHkxHjAcBgkqhkiG9w0BCQEWD2lwc0BtYWlsLmlwcy5lc4IBADAMBgNVHRMEBTADAQH/
MAwGA1UdDwQFAwMH/4AwawYDVR0lBGQwYgYIKwYBBQUHAwEGCCsGAQUFBwMCBggrBgEFBQcDAwYI
KwYBBQUHAwQGCCsGAQUFBwMIBgorBgEEAYI3AgEVBgorBgEEAYI3AgEWBgorBgEEAYI3CgMBBgor
BgEEAYI3CgMEMBEGCWCGSAGG+EIBAQQEAwIABzAaBgNVHREEEzARgQ9pcHNAbWFpbC5pcHMuZXMw
GgYDVR0SBBMwEYEPaXBzQG1haWwuaXBzLmVzMEIGCWCGSAGG+EIBDQQ1FjNDTEFTRUExIENBIENl
cnRpZmljYXRlIGlzc3VlZCBieSBodHRwOi8vd3d3Lmlwcy5lcy8wKQYJYIZIAYb4QgECBBwWGmh0
dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvMDsGCWCGSAGG+EIBBAQuFixodHRwOi8vd3d3Lmlwcy5l
cy9pcHMyMDAyL2lwczIwMDJDTEFTRUExLmNybDBABglghkgBhvhCAQMEMxYxaHR0cDovL3d3dy5p
cHMuZXMvaXBzMjAwMi9yZXZvY2F0aW9uQ0xBU0VBMS5odG1sPzA9BglghkgBhvhCAQcEMBYuaHR0
cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9yZW5ld2FsQ0xBU0VBMS5odG1sPzA7BglghkgBhvhCAQgE
LhYsaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9wb2xpY3lDTEFTRUExLmh0bWwwdQYDVR0fBG4w
bDAyoDCgLoYsaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9pcHMyMDAyQ0xBU0VBMS5jcmwwNqA0
oDKGMGh0dHA6Ly93d3diYWNrLmlwcy5lcy9pcHMyMDAyL2lwczIwMDJDTEFTRUExLmNybDAvBggr
BgEFBQcBAQQjMCEwHwYIKwYBBQUHMAGGE2h0dHA6Ly9vY3NwLmlwcy5lcy8wDQYJKoZIhvcNAQEF
BQADgYEAfrqKrIAAhBUK1ZhRDGTFnAJYg2bKrR4HzX5q2oAH3wM0ShyTxEtYIDU2ce2iCjUSpaZl
p4VpCg7jYe7qviiTM9Xs6L7E219/qPljMchrluIpwlug55c2nXdeMWv+06fbKtvblosfZt62A8Ar
s3jWVQfljzlQ3gcjcua9IBRLtIYAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9j
ZXJ0cy9lNjBiZjBjMC4wAAABUYWzveYABVguNTA5AAAF3TCCBdkwggPBoAMCAQICEFwLhVwL51lB
31fMP3+dqDYwDQYJKoZIhvcNAQEFBQAwZDELMAkGA1UEBhMCY2gxETAPBgNVBAoTCFN3aXNzY29t
MSUwIwYDVQQLExxEaWdpdGFsIENlcnRpZmljYXRlIFNlcnZpY2VzMRswGQYDVQQDExJTd2lzc2Nv
bSBSb290IENBIDEwHhcNMDUwODE4MTIwNjIwWhcNMjUwODE4MjIwNjIwWjBkMQswCQYDVQQGEwJj
aDERMA8GA1UEChMIU3dpc3Njb20xJTAjBgNVBAsTHERpZ2l0YWwgQ2VydGlmaWNhdGUgU2Vydmlj
ZXMxGzAZBgNVBAMTElN3aXNzY29tIFJvb3QgQ0EgMTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCC
AgoCggIBANC5sKgM2bs/Ifgb1TOTgBZlIHWyPZtgbUbIjDFvF8P6mmxW7TzFkVfDzauWSZAqGUse
o21X3fErYih1RV6q1lv6CyXYoRb5HMQu5pUqZ8zQKW48hTQ4YUmxAJ/WOnFfTW3OX7mp5Il/alL6
ypvy3Kn5nZlHP04pX7SmjV17C5kRAwP+59vbo/8dpc2QHgEfNbB/ANuQb8Z+e9HuenqnqgxXb6Rt
xRM7sKXZ7TIctF5ni1Tcc4fl0xd8ZlByXdQaWMHZz9iJAm+nSbQ2XdCk3gcstnW3KJHWl74o9Zge
6lsmyb2wl3ParpEm62jB+TkV1mdLCm1Py8+w5EJxjFN55+7h2x2gbh2MGnc1XBYeK1MfNIvRbPzy
Zwd69a3t1pqrobFL4cw3X/1/zU2uuB+cQ/kqWFVDRbyWzXAO/MnjZrpOjTuByxVke7mU6F0zUoVx
Lk+OogYRUcnjy6FuMQhkDMLSPPU26NfQDngjIJHJJCplKVsi9yHOg16k895L02iPRnVcgwluKWvE
cIz1ndcgL/9G0is4wi91HD1+2qXvHmCFaULTzPhj/h5DOYWmtmNBELNzHrzT+sp9Fkfip9XQo4oK
CJZiVm4029kCuTB14wTS54/CsBFACqzVcQJiizG+3cYjWDFCQy10+caepooP6f6/g+ZDVyS670Y0
qtcSATjtAgMBAAGjgYYwgYMwDgYDVR0PAQH/BAQDAgGGMB0GA1UdIQQWMBQwEgYHYIV0AVMAAQYH
YIV0AVMAATASBgNVHRMBAf8ECDAGAQH/AgEHMB8GA1UdIwQYMBaAFAMlL95vggE6XCzcK6FptWfU
jNP9MB0GA1UdDgQWBBQDJS/eb4IBOlws3CuhabVn1IzT/TANBgkqhkiG9w0BAQUFAAOCAgEANRDL
7KYEDQ0PzcDbq6jyiJcM35MvTXxAVjF666QPYM16877DJ44DPqTdEu9+HnQGPD8x8hx7kTEhtPDQ
bJfU6ZeyJFYeVsM1vYgFD1sQGmThx4Iw+TKtnlAs53gF0DGxWpiKdU6QXGoUKuBSR4Jg5h7agbH7
FAta8Z/Slbo+0BvWFR2jvobV2w/ASWS7LlAZS9Ik+N0eB1bQOKCVcCB2jNfdHt6fccQj74MTXKMk
FU0pQDxqxKnYt6ZEpQ304J13HkBwJvza2TbkeeS1P7ybZb67EZbP28YoOToIzkdbU1rFmf5dqd3v
TNTGpa0C5owHEh5vA9FvoKPzKb0Sx1CisH+IqZl3mrHApTkuXHxp4iyw6jdqpOFa4fVQ5YPvpbsq
iOeM2/1tXpcZqH5mdWtx6r+xx2+g9I6k7DRRW4wmA3Chd9UBElcANdsj3g6KKJn9sRBvS/84LWBO
LJzrZ7WtSe5LH6yv+w2QWmZgcF2qzXjUJO7IQaCTAZKcap78uSTFsxWCfr6ulSvrscDa4wFgC15p
rIRWYb5xF/4dEw/+xodF6f4yoBoNE6SUVXGlFou6yomwssf8j9hUtZNinc7PWfs9GM4qyzUVgl3/
VCJbcVL7t8n+YJsAQWTwqirstkJDzolmgciLnzlUAyXTFjWOhNBf+jAa9Zps9A5T+Tpb0RwAAAAC
AC4vZXhwb3J0L2hkYTMvNy4yLjAvbG9jYWwvY29uZi9jZXJ0cy9lZTdjZDZmYi4wAAABSucYuN0A
BVguNTA5AAAEwTCCBL0wggOloAMCAQICAQAwDQYJKoZIhvcNAQEFBQAwfzELMAkGA1UEBhMCRVUx
JzAlBgNVBAoTHkFDIENhbWVyZmlybWEgU0EgQ0lGIEE4Mjc0MzI4NzEjMCEGA1UECxMaaHR0cDov
L3d3dy5jaGFtYmVyc2lnbi5vcmcxIjAgBgNVBAMTGUNoYW1iZXJzIG9mIENvbW1lcmNlIFJvb3Qw
HhcNMDMwOTMwMTYxMzQzWhcNMzcwOTMwMTYxMzQ0WjB/MQswCQYDVQQGEwJFVTEnMCUGA1UEChMe
QUMgQ2FtZXJmaXJtYSBTQSBDSUYgQTgyNzQzMjg3MSMwIQYDVQQLExpodHRwOi8vd3d3LmNoYW1i
ZXJzaWduLm9yZzEiMCAGA1UEAxMZQ2hhbWJlcnMgb2YgQ29tbWVyY2UgUm9vdDCCASAwDQYJKoZI
hvcNAQEBBQADggENADCCAQgCggEBALc2VeWlXRgw4NqJVJH8yMdS+C9Q2e+xdXNlR30bW7p1xfyh
iCT6L+3KCEo5VMRRerXaYOo4PIGyy/G72ZEjP0gBcHWpBSqtH3HzyVQ9HQZqQD6zDIXuXBt5wmLE
uDaONV0BDCMERzWqm2BOoGY9yyYKnECh9F2Yv3GrpQBoKu2Deg+iFLXUIrOAsDwMWlFpLVgYj+2Z
nvGu4pXm9keo1gwPsFhY28NmN56bkVQzN9KUHGpIycnypdqlDCP3Iw6cMlVecZyEBVGaLf3mTio0
Wt7KQDdnDFQhVXfaCgzMl66A3JQ2SvQ+zjYTHlPkrE46BezbrnKcOIvQOTuJCj53/nUCAQOjggFE
MIIBQDASBgNVHRMBAf8ECDAGAQH/AgEMMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuY2hh
bWJlcnNpZ24ub3JnL2NoYW1iZXJzcm9vdC5jcmwwHQYDVR0OBBYEFOOU9bFN6duhKVtXi012Bnbh
0aKKMA4GA1UdDwEB/wQEAwIBBjARBglghkgBhvhCAQEEBAMCAAcwJwYDVR0RBCAwHoEcY2hhbWJl
cnNyb290QGNoYW1iZXJzaWduLm9yZzAnBgNVHRIEIDAegRxjaGFtYmVyc3Jvb3RAY2hhbWJlcnNp
Z24ub3JnMFgGA1UdIARRME8wTQYLKwYBBAGBhy4KAwEwPjA8BggrBgEFBQcCARYwaHR0cDovL2Nw
cy5jaGFtYmVyc2lnbi5vcmcvY3BzL2NoYW1iZXJzcm9vdC5odG1sMA0GCSqGSIb3DQEBBQUAA4IB
AQAMQZfCGobAInyf+5DzGtEDse8T+SFfBJzayaWNJ2yWh5G+QZABcpPnHn1f9onGXadACT2sSUVF
3C6NMGiyCbr7wy/MugvfP3d7Rn06EiSOlo88BQpv0pQoHW0MwC6IItXYzx0Tx/BI19cFp8/HR547
PDTIgE/UFLv8DVD3+rPsQl+p3W3I9HXPe8FyJrEBHFws/XpOtAHFBVe55zyqBdmI6QdGQc7vQYGu
WN+Doq7K13cf5wA8nW+O5DIJHU14NHg0PJSbJu1PccYZer0gIkha/kt9A7fnWL7GMk50HmjdqGhb
sz7uYn3ZgOgKdXq37rRlmiGQ4KrQmLw4tXM8i/jcAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xv
Y2FsL2NvbmYvY2VydHMvZTdiOGQ2NTYuMAAAAUrnGD1UAAVYLjUwOQAAAoYwggKCMIIB66ADAgEC
AgEEMA0GCSqGSIb3DQEBBAUAMFMxCzAJBgNVBAYTAlVTMRwwGgYDVQQKExNFcXVpZmF4IFNlY3Vy
ZSBJbmMuMSYwJAYDVQQDEx1FcXVpZmF4IFNlY3VyZSBlQnVzaW5lc3MgQ0EtMTAeFw05OTA2MjEw
NDAwMDBaFw0yMDA2MjEwNDAwMDBaMFMxCzAJBgNVBAYTAlVTMRwwGgYDVQQKExNFcXVpZmF4IFNl
Y3VyZSBJbmMuMSYwJAYDVQQDEx1FcXVpZmF4IFNlY3VyZSBlQnVzaW5lc3MgQ0EtMTCBnzANBgkq
hkiG9w0BAQEFAAOBjQAwgYkCgYEAzi8ZvBe3d96TqV9aDRdPNBoMmPQi2VnUxGhG8LQ1xYUDIMav
RaUhUUVB6xZYNjJv4lBiZPn9UZyqJNn0nYMqhwoh0xI4NGyNAG5aoNlC7hohlflSTFVaxQ84T0b6
bfguNdYdfOvi8LB1gMipE6y+iO86bqtfKjhiArASe/6PpgMCAwEAAaNmMGQwEQYJYIZIAYb4QgEB
BAQDAgAHMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAUSngyUhHbWRY2Xt/BFDZAakd8TKEw
HQYDVR0OBBYEFEp4MlIR21kWNl7fwRQ2QGpHfEyhMA0GCSqGSIb3DQEBBAUAA4GBAHVbqJsDEebp
VkzN+alMwA2a88xlaeYldsxZt9ZUwx3NmawZ3bSF1eA9/GIgp4RLWGXx4vmVIT/11H5YHkeHVD5Y
obW1+Crvcee8w/axSUbi16Br5VZ6mieYfEZiFOfJ/G4DEnmAOB1Igo38F/4qliu1YqamPb1/klnN
WiqCsjd5AAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvMTFmMTU0ZDYu
MAAAAVGFtTCuAAVYLjUwOQAABB4wggQaMIIDAgIRAItbdVaEVIULAM+vOEjOsaQwDQYJKoZIhvcN
AQEFBQAwgcoxCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMW
VmVyaVNpZ24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24sIEluYy4g
LSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNpZ24gQ2xhc3MgMSBQdWJs
aWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEczMB4XDTk5MTAwMTAwMDAwMFoX
DTM2MDcxNjIzNTk1OVowgcoxCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEf
MB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNp
Z24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNpZ24gQ2xh
c3MgMSBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEczMIIBIjANBgkq
hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3YTUubT5p9jzBHic3j3cbBMW2XrdJFFmwMcmWQ2sBgjC
lNEzH/CDNR9uG8jeqm4VTlQn78RtGuwL4w7wRKVXx0BYHqNHH3HsYPZtlMgYOe3+QhhW3+RMSRB4
TgF2NWMSNt1mvAEENqNVaNWiNgmsqyEmVAatP8oU4KzKrQYdleL4nfHgYP/Cf3UrTMza/oeZIeq6
/j5U19JZeNs8bs+gEwAauCeh5L5nlsqgxbOc3cl1nuswml+jzdmueBk/I+lc2ym9rVXIG1SMY/bo
purHNxJcoykeAtnbHzu01w9WR4EVBEqvgyfRxViIwd32qqejGNpoqm0RUeG/ZWuflnbRPQIDAQAB
MA0GCSqGSIb3DQEBBQUAA4IBAQCrZo3Xs7rHmrbmVdAF8Z8xjVqq2apGJg9x7aWtU1ZiAUcqROn+
P3QLE5u59E0bstFfsrbSiFyzn83L1KfZYJWEOvjBNx1hyuewxeWR2lSmrDGBrpfezQisuMCXgH9u
cqTnaROVZR/Ekzz9eY8E1D5P6veezs1nfE9lAv+RhVRzx/8294Yt7NBeT/8Rn3IG1rga8UwNJmXi
RIAex5/j3egK2uylIIBpaKFPfuFrzwdB+oOOvDjdsC4RsWuyQsyavPlIInlKGQ+yHD4gdNlqw77y
KHgTVnlPbVDqG7C1V7E3Zlgj89wP3wqHxO+GBdU4FGCZo0veBpZxLPLbth+k7z/uAAAAAgAuL2V4
cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvMGRiZDAwOTYuMAAAAVGFtSfzAAVYLjUw
OQAAA+owggPmMIICzqADAgECAgEBMA0GCSqGSIb3DQEBBQUAMIGDMQswCQYDVQQGEwJVUzEdMBsG
A1UEChMUQU9MIFRpbWUgV2FybmVyIEluYy4xHDAaBgNVBAsTE0FtZXJpY2EgT25saW5lIEluYy4x
NzA1BgNVBAMTLkFPTCBUaW1lIFdhcm5lciBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IDEw
HhcNMDIwNTI5MDYwMDAwWhcNMzcxMTIwMTUwMzAwWjCBgzELMAkGA1UEBhMCVVMxHTAbBgNVBAoT
FEFPTCBUaW1lIFdhcm5lciBJbmMuMRwwGgYDVQQLExNBbWVyaWNhIE9ubGluZSBJbmMuMTcwNQYD
VQQDEy5BT0wgVGltZSBXYXJuZXIgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAxMIIBIjAN
BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmd6PwyWjaTToBfd0ub9alxm5L5TSk+UticqEfD8Q
QxuMi3yEWPgkfEjPKv3AFdkYfoQaF9PbntfK5NnXqlhRh/Dwi0hO4sLEWWkwYrYwoowLEZlhNW1+
78WxGQYgEo5C4d8PlhBSqM+cX5UU2K87dQsxIB9EL6JiQbO7GCHbynE8jOy2uQ2f71HvTXsS8gsM
4axAj3d/sMp4cQxdFnFwotfCOoXNDprE4ACw1SXq3CvklC04nIlBV2QoZRkctkS0yDFrjgF7dlkl
fxUchAh8c2UgCqEELhoyqJogsZwsIVnn+8/ucC0IymM+LJuTGWqkwpf/t4ZXiIVsnhUWK00sswID
AQABo2MwYTAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBShNjAWy4aQAEWAU7GPyNg9fL5fEjAf
BgNVHSMEGDAWgBShNjAWy4aQAEWAU7GPyNg9fL5fEjAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcN
AQEFBQADggEBAIogGKW+sy+0poQAQDAp+rQUc0x5Raf2cODofmQeCpV8amHC704fvv/JmR8HYUrh
XUzNre7QUjLZWTK82nly1nsJ6AKBNdMK3xEdyXmggE3+WtdW1u0PKq+nGHUzDOrBYQVPapqJ8o25
ny7vsF9aAOu+raD4RAVnvMsE755kxenIPwW/xi8HHMM2cYbKOGZKzda4S8Zsp5c7+hMtbiNhh6Fj
QqzCy5efYWjPLUwEndclTwoOTZCLGFaok0hX3G+uvZ5nV3eJULO+EZtFZ4OGGYfTmL0IGhYfWIIL
4ZZpBUuO7INRMQfV1J//WXuoboXP00upSbBfsDkoaA5z3SWa3hIAAAACAC8vZXhwb3J0L2hkYTMv
Ni4xMC40L2xvY2FsL2NvbmYvY2VydHMvYzUyN2U0YWIuMAAAATC7KxBNAAVYLjUwOQAABB4wggQa
MIIDAgIRAOygp4tudWoBz8R8zC+UXtcwDQYJKoZIhvcNAQEFBQAwgcoxCzAJBgNVBAYTAlVTMRcw
FQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazE6
MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25s
eTFFMEMGA1UEAxM8VmVyaVNpZ24gQ2xhc3MgNCBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9u
IEF1dGhvcml0eSAtIEczMB4XDTk5MTAwMTAwMDAwMFoXDTM2MDcxNjIzNTk1OVowgcoxCzAJBgNV
BAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3Qg
TmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXpl
ZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNpZ24gQ2xhc3MgNCBQdWJsaWMgUHJpbWFyeSBDZXJ0
aWZpY2F0aW9uIEF1dGhvcml0eSAtIEczMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
rculEWnGWavxj7UZD1bOzLUfIOSeJiVL4HNliVne0IPk9Q+1u63xfOgh/OToDO58RSIZdpK0E7cg
Wwn6Ya6o8qWNhcIq1t5mNtKbAvSokmB8nGm0jyQe0IZS9jKcQVgeIr3NRWKVCG7QZt1ToszwENxU
c4sEoUYzM1wXQLmeTdPzvlWD6LGJjlp8mpYikDuIJfLSU4gCDAt48uY3F0swRgfkgG2m2JYu6Cz4
EbM4DWamm+rJI1vbjuLzE44aWS2qAvDspIdm3ME/9di59OyCxtI9lR3lwE+EydmjRCgGatdFrPBr
au9OX/gRgh44YzRmUNQ+k3P6MMNmrf+TLZfvAwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCP+iVr
T1vkpE4nVasiFVk8yrUK1Erbq92hX1PFoFc5ws5HK746yFa/wtknEDqxBTzAdzG7OtMFe22aHDCM
gMuTkyqDqwVRggIAEWdr84hhR18Dk9VbDeDx1KEyNYWyOtuwgqvRywq8T4xbxUsAOx8qgqZ+NoXc
fjxnALXkO1LgqOtdFfnGbfCtHQ6Ft6macxRaW49BKMDV6C1NpF7NqtntztzY1TxCHRfBEl1FOMM4
8/yFLoNGSLLXIF+SNo/neQ+YXpno8NCku/VTvSrOWbCvbn9su9IeALAh7fhBYoK52LLEu0ZQ8zHF
jwGodOv1eCfa5/dmQ/Oegz4gqsM1YJHOAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2Nv
bmYvY2VydHMvODRjYmE4MmYuMAAAAVGFs80NAAVYLjUwOQAAA/8wggP7MIIC46ADAgECAgEBMA0G
CSqGSIb3DQEBBQUAMIG3MT8wPQYDVQQDDDZUw5xSS1RSVVNUIEVsZWt0cm9uaWsgU2VydGlmaWth
IEhpem1ldCBTYcSfbGF5xLFjxLFzxLExCzAJBgNVBAYMAlRSMQ8wDQYDVQQHDAZBTktBUkExVjBU
BgNVBAoMTShjKSAyMDA1IFTDnFJLVFJVU1QgQmlsZ2kgxLBsZXRpxZ9pbSB2ZSBCaWxpxZ9pbSBH
w7x2ZW5sacSfaSBIaXptZXRsZXJpIEEuxZ4uMB4XDTA1MDUxMzEwMjcxN1oXDTE1MDMyMjEwMjcx
N1owgbcxPzA9BgNVBAMMNlTDnFJLVFJVU1QgRWxla3Ryb25payBTZXJ0aWZpa2EgSGl6bWV0IFNh
xJ9sYXnEsWPEsXPEsTELMAkGA1UEBgwCVFIxDzANBgNVBAcMBkFOS0FSQTFWMFQGA1UECgxNKGMp
IDIwMDUgVMOcUktUUlVTVCBCaWxnaSDEsGxldGnFn2ltIHZlIEJpbGnFn2ltIEfDvHZlbmxpxJ9p
IEhpem1ldGxlcmkgQS7Fni4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDKUgXWYwPY
HF/d0ntd8gxgYVtrO3QreA19Rb0idOiMA8HGESo9lbyplLC7kZfIaXyExbSRbGwTaqRVraSF6JV+
swCvAMIFGPVwnTaLrsvkG4F/k4j7alW7fYWSzrpYn9syxb1d7yJKL0EHfklhs4bsTqZBboS8A+z1
OxzIH8LuqO7qEkqNFM/zCuBQOfkINfgRWa3nIupLyhQG3kK6spnzLVSIEAbq4Ro+PWcf+877fILo
EV1KwbkU6lTZZpt8iX0EmmLJ6VI8npzv0vUm5OblGHyLbt9szHhbT3Kyy1w/jAWN0UyMrZLH4Xh/
ZWxJBlAsnjLC10rGdYpZTnVvR17BAgMBAAGjEDAOMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEF
BQADggEBABX1Vf83loBZIaT8oRVMIPbUX9oDJPzPkBr0IQqa7jqxau/v+GDRTDZmRR3zZgJ0BHuS
MKjeCnYP75Vuvck35hoNrIlIW8yDNsL1RlxZgla01f4jtNhUHESrxKflFM48QWF8Q+bNxIEJiyT7
VCXWFqiWDGcHb7NQR+McJCjdKpikYf7b6hI3vAEaNIW9bk/nkXIHRIUeWMpURN33rLnLiSFy24/A
aSmXKqOuGCOXHEEqi3wqwXyQ6KkowNORxq0oh0Botf/sp9LTOBic031pXfDGpR4kG6NH/GkHaOfk
mrTtD6GHhwLOh9JITuG8/8vxcpJEZAMl6t5bbp/J8k6s3ccAAAACAC8vZXhwb3J0L2hkYTMvNi4x
MC40L2xvY2FsL2NvbmYvY2VydHMvZjNjZjFlOGUuMAAAATC7KzemAAVYLjUwOQAABW4wggVqMIIE
UqADAgECAgQ8tT1GMA0GCSqGSIb3DQEBBQUAMGYxEjAQBgNVBAoTCWJlVFJVU1RlZDEbMBkGA1UE
CxMSYmVUUlVTVGVkIFJvb3QgQ0FzMTMwMQYDVQQDEypiZVRSVVNUZWQgUm9vdCBDQS1CYWx0aW1v
cmUgSW1wbGVtZW50YXRpb24wHhcNMDIwNDExMDczODUxWhcNMjIwNDExMDczODUxWjBmMRIwEAYD
VQQKEwliZVRSVVNUZWQxGzAZBgNVBAsTEmJlVFJVU1RlZCBSb290IENBczEzMDEGA1UEAxMqYmVU
UlVTVGVkIFJvb3QgQ0EtQmFsdGltb3JlIEltcGxlbWVudGF0aW9uMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEAvH7EOZyM49Ychv/KYq3gfzBFeo4as7jH+dE2/yLzTmpfhBD7ZoHDlHkx
0pHhd44YKsMU3lH1T6MrvBgW4rXded4i+IJ+y4Ef/Scsj/qXZCKO+P9ho5wbHpKPwKgJ3wkR7Ld9
MZoa6oMhBjyfulz/lOpquMNrVTRPPTIf3YEU4MQ8zZ0w+DCpl9PuzKPQH18cE4HUGKuU0WPDnn81
kp5fROrs9CJct+g9faT5iamRsirZ6zOH7qX949rMiOaJJm7HK4LQXp1Z2xTskYMFw14OxirQBN1x
PSBOWCf8U/t4eBkUsvyQUok4YmAHtKDsrGtQ1v25KGvvUi06sv/xAUCsNwIDAQABo4ICHjCCAhow
DwYDVR0TAQH/BAUwAwEB/zCCAbUGA1UdIASCAawwggGoMIIBpAYPKwYBBAGxPgAAAQkog5ExMIIB
jzCCAUgGCCsGAQUFBwICMIIBOhqCATZSZWxpYW5jZSBvbiBvciB1c2Ugb2YgdGhpcyBDZXJ0aWZp
Y2F0ZSBjcmVhdGVzIGFuIGFja25vd2xlZGdtZW50IGFuZCBhY2NlcHRhbmNlIG9mIHRoZSB0aGVu
IGFwcGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdXNlLCB0aGUgQ2Vy
dGlmaWNhdGlvbiBQcmFjdGljZSBTdGF0ZW1lbnQgYW5kIHRoZSBSZWx5aW5nIFBhcnR5IEFncmVl
bWVudCwgd2hpY2ggY2FuIGJlIGZvdW5kIGF0IHRoZSBiZVRSVVNUZWQgd2ViIHNpdGUsIGh0dHA6
Ly93d3cuYmV0cnVzdGVkLmNvbS9wcm9kdWN0c19zZXJ2aWNlcy9pbmRleC5odG1sMEEGCCsGAQUF
BwIBFjVodHRwOi8vd3d3LmJldHJ1c3RlZC5jb20vcHJvZHVjdHNfc2VydmljZXMvaW5kZXguaHRt
bDAdBgNVHQ4EFgQURT3DqdHcPyRWmBxzGIhq/4NH7bYwHwYDVR0jBBgwFoAURT3DqdHcPyRWmBxz
GIhq/4NH7bYwDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBBQUAA4IBAQBJkryj7qy9+g3Ji3mG
HCN2sIBZd/zaf7RL38NkS2pODq3yfVl3Ba0KiXOw+rzL3I0AiI+moLLqrFInv6FIfJcQe7rtEx2a
B27LMWIS6GMDqn1t4/gbdiF4G59LQ4zTSYb2G1z2LmAV0+nje3U/0AKD0BiCQc1lN+qOMn69a5ld
MBHI20hUHDvhpxPTakiT9z2MfwXozvOIKmMEuOp+WHwBe1vhxX3vIeCNDl1RfbFn/aO9ODbG8jiG
hxqWaGBG+ygUR1Xhp4AMa+Lq3018kEigNr0JF4l/w/LTnJzj3cQb3fW3cbNTBYkG0MtKgMHIU5C1
PDGIF1CfycQOi9ioAmMNAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMv
M2FkNDhhOTEuMAAAAVGFs2SmAAVYLjUwOQAAA3swggN3MIICX6ADAgECAgQCAAC5MA0GCSqGSIb3
DQEBBQUAMFoxCzAJBgNVBAYTAklFMRIwEAYDVQQKEwlCYWx0aW1vcmUxEzARBgNVBAsTCkN5YmVy
VHJ1c3QxIjAgBgNVBAMTGUJhbHRpbW9yZSBDeWJlclRydXN0IFJvb3QwHhcNMDAwNTEyMTg0NjAw
WhcNMjUwNTEyMjM1OTAwWjBaMQswCQYDVQQGEwJJRTESMBAGA1UEChMJQmFsdGltb3JlMRMwEQYD
VQQLEwpDeWJlclRydXN0MSIwIAYDVQQDExlCYWx0aW1vcmUgQ3liZXJUcnVzdCBSb290MIIBIjAN
BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAowS7IquYPVfoJnKatXnUKeLh6JWAsbDjW44rKZpk
36Fd7bAJBW3bKC7OYqJi/rSI2hLrOOshncBBKwFSe4h30xyPx7q5iLVqCedz6BFAp9HMymKNLeWP
C6ZQ0qhQwyjq9aslh4qalhypZ7g/DNX3+VITL8Ib1XBw8I/AEsoGy5rh2cozenfW+Oy58WhEQkgT
0sDCpK5eYP62pgX8tN0HWQLUWRiYY/WlY+CQDH1dsgZ684Xq69QDrl6EPl//Fe1pvPk5NnJ1z3dS
TfPJkCy5PeXJI1M/HySYIVwHmSm9xjrs526GOmuXdGMzvWgYMfB4jXa//J6OXSqGp02Q3CcaOQID
AQABo0UwQzAdBgNVHQ4EFgQU5Z1ZMIJHWMys+ghUNoZ7OrUETfAwEgYDVR0TAQH/BAgwBgEB/wIB
AzAOBgNVHQ8BAf8EBAMCAQYwDQYJKoZIhvcNAQEFBQADggEBAIUMXY7kb1FoQgWg3btPJyWEA733
ZP0t1zDjpBAX69opKbZ5P3b2GRMjuBAK+Vik1GFwvQRhahKKF9UKvcW8MHzW6QwljYZAT+zMo344
xjcRT+3daDGOTNKzAXTuvnVeB0gaf3D/FlyEwHmFuAX9f75lEaMPwAK0+FI3OQTVqTF6GL+gKvQS
mfejRYLjPF71nZ61yJ58Lsiknk4IFEtt/XBtaxpjvWTmH7fO8PKfLrsbt/JQiHOSwuLjFo2aMgKr
jhjd6RAR7n41q5CvPjCUetAzPadlD/X8jp5iz0dELAFdux21MtJH0jgu0P6B3DJqHrXuPNX854Ed
GcMkQupjOakAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy8xMmQ1NTg0
NS4wAAABUYWzyT4ABVguNTA5AAADTjCCA0owggIyoAMCAQICEESvsIDWoye6iTA5hi74QGswDQYJ
KoZIhvcNAQEFBQAwPzEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QgQ28uMRcwFQYD
VQQDEw5EU1QgUm9vdCBDQSBYMzAeFw0wMDA5MzAyMTEyMTlaFw0yMTA5MzAxNDAxMTVaMD8xJDAi
BgNVBAoTG0RpZ2l0YWwgU2lnbmF0dXJlIFRydXN0IENvLjEXMBUGA1UEAxMORFNUIFJvb3QgQ0Eg
WDMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDfr+mXUAiDV7TMYmX2kILsx9MsazDK
W+zZw33HQMEYFIvg6DN2SSrjPyFJk6xODq8+SMtl7vzTIQ9l0irZMo+M5fd3sBJ7tZXAiaOpuu1z
LnoMBjKDon6KFDDNEaDhKji5eQox/VC9gGXft1Fjg8jiiGHqS2GB7FJruaLiSxoon0ijngzaCY4+
Fy4e3SDfW8YqiqsuvXCtxQsaJZB0csV7aqs01jCJ/+VoE3tUC8jWruxanJIePWSzjMbfv8lBcOwW
ctUm7DhVOUPQ/P0YXEDxl+vVmpuNHbraJbnG2N/BFQI6q9pu8T4u9VwInDzWg2nkEJsZKrYpV+Pl
PZuf8AJdAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQW
BBTEp7Gkeyxx+tvhS5B1/8QVYIWJEDANBgkqhkiG9w0BAQUFAAOCAQEAoxosmxcAXKke7ihmNzq/
g8c/S8MJoJUgXePZWUTSPg0+vYpLoHQfzhCCnHQaHX6YGt3LE0uzIETkkenM/H2l22rl/ub94E7d
twA6tXBJr/Ll6wLx0QKLGcuUOl5IxBgeWBlfHgJa8Azxsa2p3FmGi27pkfWGyvq5ZjOqWVvO4qcW
c0fLK8yZsDdIz+NWS/XPDwxyMofG8ES7U3JtQ/UmSJpSZ7dYq/5ndnF42w2iVhQTOSQxhaKoAlow
R+HdUAe8AgmQAOtkY2CbFryIyRLm0n2Ri/k9Mo1ltOl8sVd26sW2KDm/FWUcyPZ3lmoKjXcL2JEL
BI4H2ym2Cu6dgjU1EAAAAAIALi9leHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzLzc5
OTliZTBkLjAAAAFK5xhv2wAFWC41MDkAAANYMIIDVDCCAjygAwIBAgIDAjRWMA0GCSqGSIb3DQEB
BQUAMEIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMRswGQYDVQQDExJHZW9U
cnVzdCBHbG9iYWwgQ0EwHhcNMDIwNTIxMDQwMDAwWhcNMjIwNTIxMDQwMDAwWjBCMQswCQYDVQQG
EwJVUzEWMBQGA1UEChMNR2VvVHJ1c3QgSW5jLjEbMBkGA1UEAxMSR2VvVHJ1c3QgR2xvYmFsIENB
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2swYYzD99BcjGlZ+W988bDjkcbd4kdS8
odhM+KhDtgPpTSEHCIjaWC9mOSm9BXiLnTjoBbdqfnGk5sRgprDvgOSJKA+eJdbtg/OtppHHmMlC
GDUUna2YRpIuT8rxh0PBFpVXLVDviS2Aelet8u5fa9IAjbkU+BQVNdnARqN7csiRv8lVK83Qlz6c
JmTM386DGXHKTubU1XupGc1V3sjs0l44U+VcT4wt/lAjNvxm5suOpDkZALeVAjmRCw7+OC7RHQWa
9k0+bw8HHa8sHo9gOeL6NlMTOdReJivbPagUvTLrGAMoUgRx5aszPeE4uwc2hGKceeoWMPRfwCvo
cWvk+QIDAQABo1MwUTAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTAephojYn7qwVkDBF9qn1l
uMrMTjAfBgNVHSMEGDAWgBTAephojYn7qwVkDBF9qn1luMrMTjANBgkqhkiG9w0BAQUFAAOCAQEA
NeMpauUvXVSOKVCUn5kaFOSPeCpilKInZ57QzxpeR+nBsqTP3UEaBU6bS+5Kb1VSsyShNwrrZHYq
Lizz/Tt1kL/6cdjHPTfStQWVYrmm3ok9Nns4d0iXrKYgjy6myQzCsplFAMfOEVEiIuCl6rYVSAlk
6l5PdPcFPseKUgzbFbS9bZvlxrFUaKnjaZC2mqUPuLk/IH2uSrW4nOQdtqvmlKXBx4Ot2/Unhw4E
bNX/3aBd7YdStysVAq45pmp06drE57xNNB6pXE0zX5IJL4hmXXeXxx12E6nV5fEWCRE11azbJHFw
LJhWC9kXtNHjUStedejV0NxPNO3CBWaAocvmMwAAAAIALy9leHBvcnQvaGRhMy82LjEwLjQvbG9j
YWwvY29uZi9jZXJ0cy9iZGE0Y2M4NC4wAAABMLsrQ40ABVguNTA5AAADqDCCA6QwggKMoAMCAQIC
AQEwDQYJKoZIhvcNAQEFBQAwYzELMAkGA1UEBhMCVVMxHDAaBgNVBAoTE0FtZXJpY2EgT25saW5l
IEluYy4xNjA0BgNVBAMTLUFtZXJpY2EgT25saW5lIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3Jp
dHkgMTAeFw0wMjA1MjgwNjAwMDBaFw0zNzExMTkyMDQzMDBaMGMxCzAJBgNVBAYTAlVTMRwwGgYD
VQQKExNBbWVyaWNhIE9ubGluZSBJbmMuMTYwNAYDVQQDEy1BbWVyaWNhIE9ubGluZSBSb290IENl
cnRpZmljYXRpb24gQXV0aG9yaXR5IDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCo
L+ikaQYDR8PpKpj/GaJwmsZQsn6l32hNG3wPtpdofS2mi5fpZIbJo++ghr9gZZxLVIjCSMVKOb8U
41lV5Rm0dMi0BTlcFqXilQXgEq5Zi6IzaFgcptQVt9if19xxq36av5uOMw8i/R8u5wc272I5xd3L
uiUUI94Mxj08zoII5mY+2lE7FjqjBX+g3IfVnPxyqaB9eOS3MVUeZbvUYbAhYO0QMnLFkiUe+JBK
GHhH334wNz5QG9sc02uahlMHsO+sBnj4hJn+IY1MgLYMgvZmcHka00+jz/HPRrBLDz7diGK4jKkJ
KDt6x5fhHuX0n8DAriSgyKHZD9Z7JoJpMj2nAgMBAAGjYzBhMA8GA1UdEwEB/wQFMAMBAf8wHQYD
VR0OBBYEFACt2aP2efZudKl/Mz2BF9dMzzPeMB8GA1UdIwQYMBaAFACt2aP2efZudKl/Mz2BF9dM
zzPeMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQUFAAOCAQEAfIrRHxg3guC4sKPtVpXIYmGc
BaLNwmImYc0QFtfMtGU00BGKraipBWbvdPNtX52Zr/aL++tSsgWYom8qxVS9Jb1frsiG6kYswbO9
welJcBgWlwgTjCDgGy46R8se5AAwlVv0RaPAGrABTqu9wCNuYz+ASsUH7dzib8fBYvHjctYEyHRn
C/qIq6EByG/wFK/Smc1Rk37tLjjHvc5GUD1y43klnZuIKxAg3aW4Mp+N4CnfIXSGgtsvgjDGxzWG
s/mWX0bbDEX981DDb8bDSK1GpuEnRwodDpu2wnd/Y/LgfRq+/ODf18enbLD5rro8/XS0EehYDYC8
06iAOpntdcxGewAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzLzQxMmJl
YTczLjAAAAFRhbU3nwAFWC41MDkAAAMtMIIDKTCCApKgAwIBAgIBADANBgkqhkiG9w0BAQQFADCB
zzELMAkGA1UEBhMCWkExFTATBgNVBAgTDFdlc3Rlcm4gQ2FwZTESMBAGA1UEBxMJQ2FwZSBUb3du
MRowGAYDVQQKExFUaGF3dGUgQ29uc3VsdGluZzEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2
aWNlcyBEaXZpc2lvbjEjMCEGA1UEAxMaVGhhd3RlIFBlcnNvbmFsIFByZW1pdW0gQ0ExKjAoBgkq
hkiG9w0BCQEWG3BlcnNvbmFsLXByZW1pdW1AdGhhd3RlLmNvbTAeFw05NjAxMDEwMDAwMDBaFw0y
MDEyMzEyMzU5NTlaMIHPMQswCQYDVQQGEwJaQTEVMBMGA1UECBMMV2VzdGVybiBDYXBlMRIwEAYD
VQQHEwlDYXBlIFRvd24xGjAYBgNVBAoTEVRoYXd0ZSBDb25zdWx0aW5nMSgwJgYDVQQLEx9DZXJ0
aWZpY2F0aW9uIFNlcnZpY2VzIERpdmlzaW9uMSMwIQYDVQQDExpUaGF3dGUgUGVyc29uYWwgUHJl
bWl1bSBDQTEqMCgGCSqGSIb3DQEJARYbcGVyc29uYWwtcHJlbWl1bUB0aGF3dGUuY29tMIGfMA0G
CSqGSIb3DQEBAQUAA4GNADCBiQKBgQDJZtn4B0TPuYwu8KHvE0VsBd/eJxZRNkERbGw77f4QfRKe
5ZtCmv5gMcNmt3M6SK5O0DI3lIi1DbbZ8/JE2dWIEt12TfIa/G8jHnrx2JhFTgcQ7xZC0EN1bUre
4qrJMf8fAHB8Zs8QJQi6+u4A6UYDZicRFTuqW/KY3TZCstqIdQIDAQABoxMwETAPBgNVHRMBAf8E
BTADAQH/MA0GCSqGSIb3DQEBBAUAA4GBAGk2ifc0KjNyL2071CKyuG+axTZmDhs8obF1Wub9NdP4
qPIHb4Vnjt4rueIXsDqg8A6iAJrf8xQVbrvIhVqYgPn/vnQdPfP+MCXRNzRn+qVxeTBhKXLA4CxM
+1bkOqhv5TJZUtt1KFBZDPgLGeSs2a+WjS9Q2wfD6h+rM+D1KzGJAAAAAgAuL2V4cG9ydC9oZGEz
LzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvODQ3MDcxOWQuMAAAAUrnGGs7AAVYLjUwOQAAA2UwggNh
MIICSaADAgECAhAKAQEBAAACfAAAAAoAAAACMA0GCSqGSIb3DQEBBQUAMDoxGTAXBgNVBAoTEFJT
QSBTZWN1cml0eSBJbmMxHTAbBgNVBAsTFFJTQSBTZWN1cml0eSAyMDQ4IFYzMB4XDTAxMDIyMjIw
MzkyM1oXDTI2MDIyMjIwMzkyM1owOjEZMBcGA1UEChMQUlNBIFNlY3VyaXR5IEluYzEdMBsGA1UE
CxMUUlNBIFNlY3VyaXR5IDIwNDggVjMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3
j1Vx0oDde2l5p/AYUDI8Ymf2CpUH3eYb857Z0kFUa62ffL4ZzftGq0FoHhjqVcgvkXiJKPsnKWD/
34+MO8lJm7WklM4B6j61Y3t/Jv0Z3cAhvYTRLU9Gw07c2Dc5Oyivy50a6iuvIaXBIyK4uBtaE4dX
g9HwIOfoTyNCsAClfYnp6WFzlJhxJrwtauD3TfDxtio4MYENKeEAwVEPTFL4BFqqfXLTuIcqu2MQ
AyqzoU8NWl5Gtz0O9XTsmZ/5PSSBiKbdYFTolTY9xgmTmqMSgABVmRlHvdClfMO6+x/39Q/4rLm1
9DeYExjehVu3DII7h2+VOVgw2m4BaBcizMALAgMBAAGjYzBhMA8GA1UdEwEB/wQFMAMBAf8wDgYD
VR0PAQH/BAQDAgEGMB8GA1UdIwQYMBaAFAfDUTCkqulFrjUk+v8kLDPQsZ2MMB0GA1UdDgQWBBQH
w1EwpKrpRa41JPr/JCwz0LGdjDANBgkqhkiG9w0BAQUFAAOCAQEAXz6Gdm64NTxONhweeZi//dUS
EXlSDu4xibzdf/nRxhUh6IoBVA06+1S51mPUsaqWTaJCTdRTH4sQ3n9lvmATJ3GIpHPjhGPRpFXh
UJPmGw550Ge8Rsi/PxcNlebGkGne57Qv3pV90BI/PT5/TT8UaPURUNXB9JClCB0xYP9gjCNUCq/+
oW7F0XoqaHjPHoIKILQfreWFsmpodU6tJTeUhb69odTqtwxLPJ3oEgDwX6wN4axwY3P3f3mfMiVC
dAWAKL+9wSSWWBWxFyHpiUvbB4hn9BWtcD4vTYU7wrfb/phoI4nhdA/e9MWEYykbzMsHyQCkqdfC
Ik9n13fsIAVh3gAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzLzc1Njgw
ZDJlLjAAAAFRhbOO3wAFWC41MDkAAAQ2MIIEMjCCAxqgAwIBAgIBATANBgkqhkiG9w0BAQUFADB7
MQswCQYDVQQGEwJHQjEbMBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxm
b3JkMRowGAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEhMB8GA1UEAwwYQUFBIENlcnRpZmljYXRl
IFNlcnZpY2VzMB4XDTA0MDEwMTAwMDAwMFoXDTI4MTIzMTIzNTk1OVowezELMAkGA1UEBhMCR0Ix
GzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBwwHU2FsZm9yZDEaMBgGA1UECgwR
Q29tb2RvIENBIExpbWl0ZWQxITAfBgNVBAMMGEFBQSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIw
DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL5AnfRu4ep2hxxNRUSOvkbIgwadwSr+GB+O5AL6
86tdUIoWMQuaBtDFcCLNSS1UY8y2bmhGC1Pqy0wkwLxyTurxFa70VJoSCsN6sjNg4tqJVfMiWPPe
3M/vg4aijJRPn2jymJBGhCfHdr/jzDUsi14HZGWCwEiwqJH5YZ92IFCokcdmtet4YgNW8IoaE+ox
ox6gmf049vYnMlhvB/VruPsUK6+3qszWY19zjNoFmag4qMsXeDZRrOme9Hg6jc8P2ULimAyrL58O
Ad7vn5lJ8S3frHRNG5i1R8XlKdH5kBjHYpy+g8cmez6KJcfA3Z3mNWgQIJ2P2N7Sw4ScDV7oL8kC
AwEAAaOBwDCBvTAdBgNVHQ4EFgQUoBEKIz6W8Qfs4q8p74Klf9AwpLQwDgYDVR0PAQH/BAQDAgEG
MA8GA1UdEwEB/wQFMAMBAf8wewYDVR0fBHQwcjA4oDagNIYyaHR0cDovL2NybC5jb21vZG9jYS5j
b20vQUFBQ2VydGlmaWNhdGVTZXJ2aWNlcy5jcmwwNqA0oDKGMGh0dHA6Ly9jcmwuY29tb2RvLm5l
dC9BQUFDZXJ0aWZpY2F0ZVNlcnZpY2VzLmNybDANBgkqhkiG9w0BAQUFAAOCAQEACFb8AvCb6P+k
+tZ7xkSAzk/ExfYAWMymtrwUSWgEdujm7l3sAg9g1o1QGE8mTgHj5rCl7r+8dFRBv/38ErjHT1r0
iWAFf2C3BUrz9vHCv8S5dIa2LX1rzNLzRt0vxuBqw8M0Ayx9lt1awg6nCpnBBYurDC/zXDrPbDdV
CYfeU0BsWO/8tqtlbgT2G9w84FoVxp7Z8VlIMCFlA2zs6SFz7JsDoeA3raAVGI/6ugLOpyypEBMs
1OUIJqsil2D4kF501KKaU73yqWjgom7C12yxow+ev+to51byrvLjKzg6CYG1a4XXvi3tPxq3smPi
9WIsgtRqAEFQ8TmDn5XpNpaYbgAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2Nl
cnRzL2E3NjA1MzYyLjAAAAFRhbOgLgAFWC41MDkAAAMkMIIDIDCCAgigAwIBAgIBHTANBgkqhkiG
9w0BAQUFADA5MQswCQYDVQQGEwJGSTEPMA0GA1UEChMGU29uZXJhMRkwFwYDVQQDExBTb25lcmEg
Q2xhc3MyIENBMB4XDTAxMDQwNjA3Mjk0MFoXDTIxMDQwNjA3Mjk0MFowOTELMAkGA1UEBhMCRkkx
DzANBgNVBAoTBlNvbmVyYTEZMBcGA1UEAxMQU29uZXJhIENsYXNzMiBDQTCCASIwDQYJKoZIhvcN
AQEBBQADggEPADCCAQoCggEBAJAXSjWdyvANlsdE+hY3/Ei9vX+ALTU74W+oZ6m/AxxNjG8yR9VB
aKQTBME1DJqEQ/xcHf+Js+gXGM2RX/uJ4+q/Tl18GybTdXnt5oTjV+WtKcT0OijnpXuENmmz/V52
vaMtmdOQTiMofRhj8VQ7Jp12W5dCsv+u8E7s3TmVToMGf+dJQMjFAbJUWmYdPfz56TwKnoG4cPAB
i+QjVHzIrviQHgCWctRUz2EjvOr7nQKV0ba5cTppCD8PtOFCx4j1P5iop7oc4HFx71hXgVB6XGt0
Rg6DA5jDjqhu8nYybieDwnPz3BjotJPqdURrBGAgcVeHnfO+oJAjPYok4doh28MCAwEAAaMzMDEw
DwYDVR0TAQH/BAUwAwEB/zARBgNVHQ4ECgQISqCqWITTXjwwCwYDVR0PBAQDAgEGMA0GCSqGSIb3
DQEBBQUAA4IBAQBazof5FnIVV0sd2ZvnoiYw7JNn39Yt0jSv9zilzqsWuasvfDXLrNAPtEwr/IDv
a4yRXzZ299uzGxnq9LIR/WFxRL8oszodv7ND6J+/3DEIcbCdjdY0RzKQxmUk96BKfARzjzlvF4xy
tb1LyHr4e4PDKE6cCepnP7JnBBvDFNr450kkkdAdavphOe9r5yF1BgfYErQhIHBCcYHaPJo2vqZb
DWpsmh+Re/n570K6Tk6ezAyNlNzZRZxe7EJQY670XcSxEtzKO6gunRRaBXW37Ndj4ro1tgQIkeja
nZz2ZrUYrAqmVCY0M9IbwdR/GjqOC6oybtv8TyWf2TLHllpwrN9MAAAAAgAuL2V4cG9ydC9oZGEz
LzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvY2I3OTZiYzEuMAAAAVGFtYmWAAVYLjUwOQAABRowggUW
MIIEf6ADAgECAgEAMA0GCSqGSIb3DQEBBAUAMIGwMQswCQYDVQQGEwJJTDEPMA0GA1UECBMGSXNy
YWVsMQ4wDAYDVQQHEwVFaWxhdDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjEaMBgGA1UECxMRQ0Eg
QXV0aG9yaXR5IERlcC4xKTAnBgNVBAMTIEZyZWUgU1NMIENlcnRpZmljYXRpb24gQXV0aG9yaXR5
MSEwHwYJKoZIhvcNAQkBFhJhZG1pbkBzdGFydGNvbS5vcmcwHhcNMDUwMzE3MTczNzQ4WhcNMzUw
MzEwMTczNzQ4WjCBsDELMAkGA1UEBhMCSUwxDzANBgNVBAgTBklzcmFlbDEOMAwGA1UEBxMFRWls
YXQxFjAUBgNVBAoTDVN0YXJ0Q29tIEx0ZC4xGjAYBgNVBAsTEUNBIEF1dGhvcml0eSBEZXAuMSkw
JwYDVQQDEyBGcmVlIFNTTCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEhMB8GCSqGSIb3DQEJARYS
YWRtaW5Ac3RhcnRjb20ub3JnMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDthGAAI57ISlEp
J946oTm1aasJsi80/WHcPdOwz7HXwsTCseSWVsS+qhQO58w6UMg6Yp3Do6xZe47uVRocR76jlzmz
te8jLAjo2K9zL7nJg+jtAA/IdaUvNEwY6HaII0mK27btaNrDtWIpTKVLt5i0CRQQoPj+YnYiFQuk
1ggvNQIDAQABo4ICPDCCAjgwDwYDVR0TAQH/BAUwAwEB/zALBgNVHQ8EBAMCAeYwHQYDVR0OBBYE
FByJw5bMvf4y1Q2MgTG2mJ2NKGSNMIHdBgNVHSMEgdUwgdKAFByJw5bMvf4y1Q2MgTG2mJ2NKGSN
oYG2pIGzMIGwMQswCQYDVQQGEwJJTDEPMA0GA1UECBMGSXNyYWVsMQ4wDAYDVQQHEwVFaWxhdDEW
MBQGA1UEChMNU3RhcnRDb20gTHRkLjEaMBgGA1UECxMRQ0EgQXV0aG9yaXR5IERlcC4xKTAnBgNV
BAMTIEZyZWUgU1NMIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MSEwHwYJKoZIhvcNAQkBFhJhZG1p
bkBzdGFydGNvbS5vcmeCAQAwHQYDVR0RBBYwFIESYWRtaW5Ac3RhcnRjb20ub3JnMB0GA1UdEgQW
MBSBEmFkbWluQHN0YXJ0Y29tLm9yZzARBglghkgBhvhCAQEEBAMCAAcwLwYJYIZIAYb4QgENBCIW
IEZyZWUgU1NMIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MDIGCWCGSAGG+EIBBAQlFiNodHRwOi8v
Y2VydC5zdGFydGNvbS5vcmcvY2EtY3JsLmNybDAoBglghkgBhvhCAQIEGxYZaHR0cDovL2NlcnQu
c3RhcnRjb20ub3JnLzA5BglghkgBhvhCAQgELBYqaHR0cDovL2NlcnQuc3RhcnRjb20ub3JnL2lu
ZGV4LnBocD9hcHA9MTExMA0GCSqGSIb3DQEBBAUAA4GBAGxxJeGeNJEh79tsvQEIVo+I2EE6U/Vy
3ydXS3aE92ik/us/CX4ouFfqH8Gq4v+Wn0mZ5rKVc5bGSMdejQdyVviDj593rynTRQ6k7rA2dC3w
zZgjezdL2v5RmMQeNDyI/Zk7UKfBizPHwlIWEpVTZSLvuovOYttwI7GA3xogOOd+AAAAAgAvL2V4
cG9ydC9oZGEzLzYuMTAuNC9sb2NhbC9jb25mL2NlcnRzLzRmYmQ2YmZhLjAAAAEwuytsqgAFWC41
MDkAAARiMIIEXjCCA0agAwIBAgIQRL4Mi1AAIbQR0ypoBqmtaTANBgkqhkiG9w0BAQUFADCBkzEL
MAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2UgQ2l0eTEeMBwGA1UE
ChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExhodHRwOi8vd3d3LnVzZXJ0cnVzdC5j
b20xGzAZBgNVBAMTElVUTiAtIERBVEFDb3JwIFNHQzAeFw05OTA2MjQxODU3MjFaFw0xOTA2MjQx
OTA2MzBaMIGTMQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQxFzAVBgNVBAcTDlNhbHQgTGFrZSBD
aXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cu
dXNlcnRydXN0LmNvbTEbMBkGA1UEAxMSVVROIC0gREFUQUNvcnAgU0dDMIIBIjANBgkqhkiG9w0B
AQEFAAOCAQ8AMIIBCgKCAQEA3+5YEKIrblXEjr8uRgnn4AgPLit6E5Qbvfa2gI5lBZMAHryv4g+O
GQ0SR+ysraP6LnD43m77VkIVni5c7yPeIbkFdicZD0/Ww5y0vpQZY/KmEQrrU0icvvIpOxboGqBM
psn0GFlowHDyUwDAXlCCpVZvNvlK4ESGoE1O1kduSUrLZ9emxAW5jh70/P/N5zbgnAVssjMiFdC0
4MwXwLLA9P4yPykqlXvY8qdOD1R8oQ2AswkDwf9c3V6aPryuvEeKaq5xyh+xKrhfQgUL7EYw0XIL
yulWbfXv33i+Ybqypa4ETLyorGkVl73v67SMvzX41MPRKA5cOp9wGDMgd8SirwIDAQABo4GrMIGo
MAsGA1UdDwQEAwIBxjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRTMtGzz3/64PGgXYVOktKe
RR20TzA9BgNVHR8ENjA0MDKgMKAuhixodHRwOi8vY3JsLnVzZXJ0cnVzdC5jb20vVVROLURBVEFD
b3JwU0dDLmNybDAqBgNVHSUEIzAhBggrBgEFBQcDAQYKKwYBBAGCNwoDAwYJYIZIAYb4QgQBMA0G
CSqGSIb3DQEBBQUAA4IBAQAnNZcAiosovcYzMB4p/OL31ZjUQLtgyr+rFywJNn9Q+kHcrpY6CiM+
iVnJowftGzet/Hy+UUla3joKVAgWRcKZsYfNjGjgaQPpxE6YsjuMFrMOoAyYUJuTqXAJyCyjj98C
5OBxOvG0I3KgqgHf35g+FFCgMSa9KOlaMCZ1+XtgHI3zzVAmbQQnmt/VDUVHKWss5nbZqSl9Mt3J
Njy9rjXxEZ4du5A/EkdOjtd+D2JzHVImOBwYSf0wdJrE5SIv2MCN7ZF6TACPcn9d2t0bi0Vr591p
l6jFVkwPDPafepE39peC4N1xaf92P2BNPM/3mfnGV/TJVTl4uix5yaaIK/QIAAAAAgAvL2V4cG9y
dC9oZGEzLzYuMTAuNC9sb2NhbC9jb25mL2NlcnRzL2Y3M2U4OWZkLjAAAAEwuyrlUAAFWC41MDkA
AAI4MIICNDCCAaECEAKtZn5ORf5eV288mBle3cAwDQYJKoZIhvcNAQECBQAwXzELMAkGA1UEBhMC
VVMxIDAeBgNVBAoTF1JTQSBEYXRhIFNlY3VyaXR5LCBJbmMuMS4wLAYDVQQLEyVTZWN1cmUgU2Vy
dmVyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTk0MTEwOTAwMDAwMFoXDTEwMDEwNzIzNTk1
OVowXzELMAkGA1UEBhMCVVMxIDAeBgNVBAoTF1JTQSBEYXRhIFNlY3VyaXR5LCBJbmMuMS4wLAYD
VQQLEyVTZWN1cmUgU2VydmVyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIGbMA0GCSqGSIb3DQEB
AQUAA4GJADCBhQJ+AJLOesGugz5aqomDV6wlAXYMra6OLDfO6zV4ZFQD5YRAUcm/jwjiioII0haG
N1XpsSECrXZogZoFokvJSyVmIlZsiAeP94FZbYQHZXATcXY+m3dM41CJVphIuR2nKRoTLkoRWZwe
FdVJVCxzOmmCsZc5nG1wZ0jl3S3WyB57AgMBAAEwDQYJKoZIhvcNAQECBQADfgBl3X7hsuyw4jrg
7HFGmhkRuNPHoLQDQCYCPgmc4RKz0Vr2N6W3YQO2WxZpO8ZECAyIUwxrl0nHPjXcbLm7qt9cuzov
k2C2qUtN8iD3zV9/ZHuO3ABc1/p3yjkWWW8O6tO1g39NTUJWdrTJXwT4OPjr0l91X817/OWOgHz8
UAAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzL2FiNTM0NmY0LjAAAAFR
hbRa4gAFWC41MDkAAANxMIIDbTCCAlWgAwIBAgIBATANBgkqhkiG9w0BAQUFADBYMQswCQYDVQQG
EwJKUDErMCkGA1UEChMiSmFwYW4gQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcywgSW5jLjEcMBoGA1UE
AxMTU2VjdXJlU2lnbiBSb290Q0ExMTAeFw0wOTA0MDgwNDU2NDdaFw0yOTA0MDgwNDU2NDdaMFgx
CzAJBgNVBAYTAkpQMSswKQYDVQQKEyJKYXBhbiBDZXJ0aWZpY2F0aW9uIFNlcnZpY2VzLCBJbmMu
MRwwGgYDVQQDExNTZWN1cmVTaWduIFJvb3RDQTExMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
CgKCAQEA/XeqpRyQBTvLTJszi1oURaTnkBbR31fSIRCkF/3frNYfp+TbfPfs37gD2pRY/V1yfIw/
XwFndBWW4wI8h9uuywGOwvNmxoVF9ALGOrVisq/6nL+k5tSAMJjzDbaTj6nU2DbysPyKyiyhFTOV
MdrAG/LuYpmGYz+/3ZMqg6h2uRMft85OQoWPIucuGvKVCbIFtUROd6EgvanyTgp9UK31BQ1FT0Zx
/Sg+U/sE2C3XZR1KG/rPO7AxmjVuyIsG0wCR8pQIZUyxNAYAeoni8McDWc/V1uinMrPmmECGxc0n
EovMe863ETxiYAcjPitAbpSACW22s293bzUIUPsCh8U+iQIDAQABo0IwQDAdBgNVHQ4EFgQUW/hN
T7KlhtQ60vFjmqC+CfZXt94wDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZI
hvcNAQEFBQADggEBAKChOBZmLqdWHyGcBvod7bkixTgm2E5P7KN/ed5GIaGHd48HCJqypMWvDzKY
C3xmKbabfSVSSUOrTC4rbnpwrxYO4wJs+0LmGJ1F2FXI6Dvd5+H0LgscNFxsWEr7jIhQX5Ucv+2r
IrVls4W6ng+4reV6G4pQOh29Dbx7VFALuUKvVaAYga1lme++5Jy/xIWrQbJUb9wlze144o4MjQlJ
3WN7WmmWAiGovVJZ6X01y8hSyn+B/tlr0/cR7SXf+Of5pPpyl4RTDaXQMhhRdlkUbA/r7F+AjHVD
g8OFmP9Mni0N5HeDk061lgeLKBObjBmNQSdJQO7e5iNEOdyhIta6A/IAAAACAC4vZXhwb3J0L2hk
YTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy9lZDYyZjRlMy4wAAABUYW1p88ABVguNTA5AAADBzCC
AwMwggJsAhEAuS9gzIifoXpGCbhbcGyKrzANBgkqhkiG9w0BAQUFADCBwTELMAkGA1UEBhMCVVMx
FzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMTwwOgYDVQQLEzNDbGFzcyAyIFB1YmxpYyBQcmltYXJ5
IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIxOjA4BgNVBAsTMShjKSAxOTk4IFZlcmlTaWdu
LCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0
IE5ldHdvcmswHhcNOTgwNTE4MDAwMDAwWhcNMjgwODAxMjM1OTU5WjCBwTELMAkGA1UEBhMCVVMx
FzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMTwwOgYDVQQLEzNDbGFzcyAyIFB1YmxpYyBQcmltYXJ5
IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIxOjA4BgNVBAsTMShjKSAxOTk4IFZlcmlTaWdu
LCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0
IE5ldHdvcmswgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAKeIASF0LOcaA/CY4Zc8DyEI8Zzb
l+ma/MIEBhO+X1LIzB4sElYsuAFpLMyZH62wlq55BPITOcF7mLoILOjChBMsqmnpCfTHqQKkQsIj
T0rY8A6i+zFsyeZvmScH9eb0THiebetGhvq5hslU8rLEr9RGHFrJFTD/DWz1LQ5tzn93AgMBAAEw
DQYJKoZIhvcNAQEFBQADgYEAci75f9HxcfvEnvbFXlGKQJi4aPibHIPY4p29/+2h5mbqLwn0ytfq
pSuV9iRghk1ELoOlxC2g0654aW9y2myuCPBjkjfmu8QwF613zEk1qs/Yj9G+txiWR3NqVCI0ZC22
FptZW7RRWTqzCxT0Et9noPStMmResUZyJ4wSe8VEtK4AAAACAC4vZXhwb3J0L2hkYTMvNy4yLjAv
bG9jYWwvY29uZi9jZXJ0cy9kNTM3ZmJhNi4wAAABSucYqXsABVguNTA5AAAELzCCBCswggMToAMC
AQICBDrMpUwwDQYJKoZIhvcNAQEFBQAwQzELMAkGA1UEBhMCREsxFTATBgNVBAoTDFREQyBJbnRl
cm5ldDEdMBsGA1UECxMUVERDIEludGVybmV0IFJvb3QgQ0EwHhcNMDEwNDA1MTYzMzE3WhcNMjEw
NDA1MTcwMzE3WjBDMQswCQYDVQQGEwJESzEVMBMGA1UEChMMVERDIEludGVybmV0MR0wGwYDVQQL
ExRUREMgSW50ZXJuZXQgUm9vdCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMS4
QLyR1WMf15mgiwxAHnS3SJ1GjAKy4CRf8BkTpzeDa13HjvmEMM4aO/r7zottI8bDbmafiaXf4EJQ
Z/ofbB700AXWv8rWTuRoYGxGqhxdY+EHhg5lAKcupnHGvLmBqDp9GtL50axLy851r9x7+oFz1Py6
vUGI1HSz+V44OjxDqNKVTndtEwydj3gBt1ogHwM3NeIs20srLHi5SdvE0MecnOSKIAkhFlZm/wXs
W+Pwz6skJF7Df3B6EsTStRCgtiHhjXhpVURp9cqWHDSFFyV34vYvJ5h4/XkGOqLWWkPB/+wEO+4T
79NYWv+S6+yu2vI3A0dBtpfJLQpBIru75qcCAwEAAaOCASUwggEhMBEGCWCGSAGG+EIBAQQEAwIA
BzBlBgNVHR8EXjBcMFqgWKBWpFQwUjELMAkGA1UEBhMCREsxFTATBgNVBAoTDFREQyBJbnRlcm5l
dDEdMBsGA1UECxMUVERDIEludGVybmV0IFJvb3QgQ0ExDTALBgNVBAMTBENSTDEwKwYDVR0QBCQw
IoAPMjAwMTA0MDUxNjMzMTdagQ8yMDIxMDQwNTE3MDMxN1owCwYDVR0PBAQDAgEGMB8GA1UdIwQY
MBaAFGxkAcf9hW2syNqeUAiFCLU8VqhQMB0GA1UdDgQWBBRsZAHH/YVtrMjanlAIhQi1PFaoUDAM
BgNVHRMEBTADAQH/MB0GCSqGSIb2fQdBAAQQMA4bCFY1LjA6NC4wAwIEkDANBgkqhkiG9w0BAQUF
AAOCAQEATkPM0d0dEBsGf7ek+tPZTfsjnyNUW+aLLwQoi7UnbYmh7Jhp3OeNJoMFeXTstLmjl8E1
AP0V2jmBOpUxkN6X6YaomXcM5VqghP8SFqxuuI3De5LCrC7QfSjstvNgOGlvPtgEVT6ezFXSuv67
RwTXCtkWCjQp9VgT1U/Pj1ZLsx7u05h52ggeDG+4+BYn78JvPfajSz4O5G1s2ztBEpu9DUcjfzxK
0K/Ar/bvG7UVxOuDxAlfdIvZEfvCVrE8+HDKNI1DQBOM/ZkDVHnGLuqGofY61Am89LxmzD1Y0FdJ
Cu4l4kHuE/mbODTRAPV+55Qd/GkDYriZBQU9a3gSvbBvZQAAAAIALi9leHBvcnQvaGRhMy83LjIu
MC9sb2NhbC9jb25mL2NlcnRzLzc1NWY3NDIwLjAAAAFK5xiipgAFWC41MDkAAAMkMIIDIDCCAgig
AwIBAgIBJDANBgkqhkiG9w0BAQUFADA5MQswCQYDVQQGEwJGSTEPMA0GA1UEChMGU29uZXJhMRkw
FwYDVQQDExBTb25lcmEgQ2xhc3MxIENBMB4XDTAxMDQwNjEwNDkxM1oXDTIxMDQwNjEwNDkxM1ow
OTELMAkGA1UEBhMCRkkxDzANBgNVBAoTBlNvbmVyYTEZMBcGA1UEAxMQU29uZXJhIENsYXNzMSBD
QTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALWJHytPZwp5/8Ue+H887dF+2rDNbS82
rDTG29lkFwhjMDMiikzujrsPDUJVyZ0upe/3p4zDq7mXy47vPxVnqIJyY1MPQYx9EJUkoVqlBvqS
V536pQHydekfvFYmUk54GWVYVQNYwBSujHxVX3BbdyMGNpfzJLWaRpXk3w0LBUXl0fIdgrvGE+D+
qnr9aTCU89JFhfzyMlsy3uhsXR/LpCJ0sICOXZT3BgBLqdReLjVQCfOAl/QMF6452F/NM8EcyonC
IvdFEu1eEpOdY6uCLrnrQkFEy0oaAIINnvmLVz5MxxftLItyM19yejhW1ebZrgUaHXVFsculJRwS
Vzb9IjcCAwEAAaMzMDEwDwYDVR0TAQH/BAUwAwEB/zARBgNVHQ4ECgQIR+IMi/ZTiFIwCwYDVR0P
BAQDAgEGMA0GCSqGSIb3DQEBBQUAA4IBAQCLGrLJXWG04bkruVPRsoWdd44W7hE928Jj2VuXZfsS
Z9gqXLar5V7DtxYvyOirHYr9qxp81V9jz9yw3Xe5qObSIjiHBxTZ/75Wtf0HDjxVyhbMp6Z3N/vb
XB9OWQaHowND9Rart4S9Tu+fMTfwRvFAttEMpWT4Y14h21VOTzF2nBBhjrZTOqMRvq9tfB69ri3i
DGnHhVNoomG6xT60eVR4ngrHAr5i0RGCS2UvkVrCqIexVmiUefkl98HVrhq4uz2PqYo4Ffdz0Fpg
0YCw8NzVUM1O7pJIae2yIx4wzMiUyLb1O4Z/P6Yun/Y+LLWSlj7fLJOK/4GMDw9ZIRlXvVWaAAAA
AgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvYzUyN2U0YWIuMAAAAVGFs18T
AAVYLjUwOQAABB4wggQaMIIDAgIRAOygp4tudWoBz8R8zC+UXtcwDQYJKoZIhvcNAQEFBQAwgcox
CzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNpZ24g
VHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0
aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNpZ24gQ2xhc3MgNCBQdWJsaWMgUHJpbWFy
eSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEczMB4XDTk5MTAwMTAwMDAwMFoXDTM2MDcxNjIz
NTk1OVowgcoxCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMW
VmVyaVNpZ24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24sIEluYy4g
LSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNpZ24gQ2xhc3MgNCBQdWJs
aWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEczMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEArculEWnGWavxj7UZD1bOzLUfIOSeJiVL4HNliVne0IPk9Q+1u63xfOgh
/OToDO58RSIZdpK0E7cgWwn6Ya6o8qWNhcIq1t5mNtKbAvSokmB8nGm0jyQe0IZS9jKcQVgeIr3N
RWKVCG7QZt1ToszwENxUc4sEoUYzM1wXQLmeTdPzvlWD6LGJjlp8mpYikDuIJfLSU4gCDAt48uY3
F0swRgfkgG2m2JYu6Cz4EbM4DWamm+rJI1vbjuLzE44aWS2qAvDspIdm3ME/9di59OyCxtI9lR3l
wE+EydmjRCgGatdFrPBrau9OX/gRgh44YzRmUNQ+k3P6MMNmrf+TLZfvAwIDAQABMA0GCSqGSIb3
DQEBBQUAA4IBAQCP+iVrT1vkpE4nVasiFVk8yrUK1Erbq92hX1PFoFc5ws5HK746yFa/wtknEDqx
BTzAdzG7OtMFe22aHDCMgMuTkyqDqwVRggIAEWdr84hhR18Dk9VbDeDx1KEyNYWyOtuwgqvRywq8
T4xbxUsAOx8qgqZ+NoXcfjxnALXkO1LgqOtdFfnGbfCtHQ6Ft6macxRaW49BKMDV6C1NpF7Nqtnt
ztzY1TxCHRfBEl1FOMM48/yFLoNGSLLXIF+SNo/neQ+YXpno8NCku/VTvSrOWbCvbn9su9IeALAh
7fhBYoK52LLEu0ZQ8zHFjwGodOv1eCfa5/dmQ/Oegz4gqsM1YJHOAAAAAgAuL2V4cG9ydC9oZGEz
LzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvMWViMzdiZGYuMAAAAVGFtHOZAAVYLjUwOQAAB1MwggdP
MIIFN6ADAgECAgkAo9pCfqSxrtowDQYJKoZIhvcNAQEFBQAwga4xCzAJBgNVBAYTAkVVMUMwQQYD
VQQHEzpNYWRyaWQgKHNlZSBjdXJyZW50IGFkZHJlc3MgYXQgd3d3LmNhbWVyZmlybWEuY29tL2Fk
ZHJlc3MpMRIwEAYDVQQFEwlBODI3NDMyODcxGzAZBgNVBAoTEkFDIENhbWVyZmlybWEgUy5BLjEp
MCcGA1UEAxMgQ2hhbWJlcnMgb2YgQ29tbWVyY2UgUm9vdCAtIDIwMDgwHhcNMDgwODAxMTIyOTUw
WhcNMzgwNzMxMTIyOTUwWjCBrjELMAkGA1UEBhMCRVUxQzBBBgNVBAcTOk1hZHJpZCAoc2VlIGN1
cnJlbnQgYWRkcmVzcyBhdCB3d3cuY2FtZXJmaXJtYS5jb20vYWRkcmVzcykxEjAQBgNVBAUTCUE4
Mjc0MzI4NzEbMBkGA1UEChMSQUMgQ2FtZXJmaXJtYSBTLkEuMSkwJwYDVQQDEyBDaGFtYmVycyBv
ZiBDb21tZXJjZSBSb290IC0gMjAwODCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAK8A
y3A3K4BaSjpseJR9o38aH/Y11b3byw1Ecj4mspBSumM7KFhvpbNtlKbz3WQMVfb25/IiIoBe4WLG
tinhgWzyv+V9MmpUoDIZWf4fi9c9YIaFJG/jEbN3PiCWNSFrswjZcC5k94SSU9YOsJCKiuOHjQbT
vZAO4pmhG4YO2poKuwthUAZS8Z5/duzLD9AeDc+ZMD0cxEUQWKzW0+jX5erFAQd31lHmA3+KSKVN
aHW56byeThlx9TJLnG1gGQv7zJ113L8mzY+TeDl5c14lDspc63cSB8tkQUdyk6tQw+sJdmQ00jm3
dhEJDXZFxKmuPWqvtX1lL5RYEOxcfK9+4rYY2dCbTlpJ36lmC8w8xnh8p5wd486OU74F3mAPa+Ua
2z/j4SHJKcHx6wecUhsBRFE8eyXXxOVSVF0lB8oWILit5EHuegj+mW+DppECsGw2VWrnffWW5sqB
1pfxlIPp7bCxaxJpHqz7XanFmOm0W1h6vj2iRDpjWdQLJd4bT73lAZ7N0inVnxcZCm+/DJDTCV/Z
44o1zHlaTRk3krfEwa2v9HkkmrIBC7GvXJbzgDL7XD2Y8aA/St6+r5Qu2VWaF25gnWNsuGPJroFc
GDXgkLu+PE83Irl+68+edyGmPTiB+0jaMT0r44n10LW9fuBQxBKJsyOaEDGF265v7zgzGHYRAgMB
AAGjggFsMIIBaDASBgNVHRMBAf8ECDAGAQH/AgEMMB0GA1UdDgQWBBT5JKwPsrX4ecD6YIgbxNlN
Ap4XGTCB4wYDVR0jBIHbMIHYgBT5JKwPsrX4ecD6YIgbxNlNAp4XGaGBtKSBsTCBrjELMAkGA1UE
BhMCRVUxQzBBBgNVBAcTOk1hZHJpZCAoc2VlIGN1cnJlbnQgYWRkcmVzcyBhdCB3d3cuY2FtZXJm
aXJtYS5jb20vYWRkcmVzcykxEjAQBgNVBAUTCUE4Mjc0MzI4NzEbMBkGA1UEChMSQUMgQ2FtZXJm
aXJtYSBTLkEuMSkwJwYDVQQDEyBDaGFtYmVycyBvZiBDb21tZXJjZSBSb290IC0gMjAwOIIJAKPa
Qn6ksa7aMA4GA1UdDwEB/wQEAwIBBjA9BgNVHSAENjA0MDIGBFUdIAAwKjAoBggrBgEFBQcCARYc
aHR0cDovL3BvbGljeS5jYW1lcmZpcm1hLmNvbTANBgkqhkiG9w0BAQUFAAOCAgEAkBKvIjXCoznw
Lt7ptel4fEi+P31Fkl7p2rEZ/BY8n7RbZp5q58O5XYjoD63PIw/eJTpezE+lwbUtrCTSWAfeos9p
hGAz6BANE6kj0IXljnumnj1yE3Iz9ap9xmMfCPT+AX8kzyssVAne4ittksY5TxbqPH56RtRFakao
63WCVqeroHxoEzP2nTDwbyc5JCMqkP2QKTXyk980pcb3+O+MD2JKfK7T9VT4jbaaVocWgjozq1oi
CPeCuuou4EeatLVFowU72dwuRUA76tx/6Dvr0ewm2DWkMMU6rFees3alIHv5HkoFYgGmKHVgl5IN
bj5NN0MNkhWcGCLNUZmgKRo8X4oyM1swx4kvR5gPowPG9vGs3zLw2YEa5Jy99oAU8NEsuYX12KOx
yKUh5RwTl+4Ovd8pqe80U1vT5GoThAa2MgLEUq4i0tyyIUIa2kDwKcnsCgxc4tC6zEjTNwrMEgqK
ebA9A39pS/Q0IH2zNOqOS2T1Pv2zI2cVDQS48C3BCVE8smwV8KUj14N05OUuyf6YJ0LGq8aesNBb
OKWbUN5+GJi1RTv2ebTo9xp7BoP70Ivau8e9GKsIbzyAa0A/GRm6ZYrmvtVc0zbX70BSJGA4ZwQx
7I/zgsbeuVXzOzGRWty1CBWtdiUKDXsuh+IMpga8JhBtN53s3XiMfIDF8Nl3SNAAAAACAC8vZXhw
b3J0L2hkYTMvNi4xMC40L2xvY2FsL2NvbmYvY2VydHMvZDc4YTc1YzcuMAAAATC7Kw0lAAVYLjUw
OQAABB0wggQZMIIDAQIQYXDLSYxfmEUp57Cm2VBbejANBgkqhkiG9w0BAQUFADCByjELMAkGA1UE
BhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBO
ZXR3b3JrMTowOAYDVQQLEzEoYykgMTk5OSBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVk
IHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAyIFB1YmxpYyBQcmltYXJ5IENlcnRp
ZmljYXRpb24gQXV0aG9yaXR5IC0gRzMwHhcNOTkxMDAxMDAwMDAwWhcNMzYwNzE2MjM1OTU5WjCB
yjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2ln
biBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMTk5OSBWZXJpU2lnbiwgSW5jLiAtIEZvciBh
dXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAyIFB1YmxpYyBQcmlt
YXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
ggEKAoIBAQCvCg3C1SzbZ7kt5ZQn3aW+4LBNj7NhVjzWfMP0zT6Gy6KI4uHYpGnFteK/waZHUF5G
OYvVlrq1bxS/EM4nE54FR5sxehPYH9nTAjeLrSxH8I6BBqcNMAzr9zwPIB3cckbupQLIW8PJVmlM
xRjBkXsL1RMAm7zvw0g+RmAghSrVkLbNi6DMMt23/UBVslAcVq7MjXdNxyBNpzF272iSipAeCIFW
sq1po1LQyxzEIz0fmf5M6BZjjsYIjvYx9tL65XbdtRySo0nNzQHNaM2pabqj6x0NnKQgpsGgxdFG
TBdt0qxmP5aM4ITUNv8iWcX5EWCoXwR98hr2JUJhD8RKuD6JAgMBAAEwDQYJKoZIhvcNAQEFBQAD
ggEBADQmFTzAjU1DSR296SGS12act97FuNDkXV92IsAm+YQ6OvmMtfvsYPHozgSwyN2nA48w85jf
pOakMd/THAtG3HIgP67uBTykMz8LOaxweHNLmSvfMMJUsKg7VaH+FijNQr10boDbJ0SnzkRd1BuQ
mA0eQpSxACwE0HSjAgUiY2PNg7X7wW1ia2l1/V1wQbn1v3zfvsEycyIhi1iBexWRerrjZEiwf/s2
JdqV0PEkFBfdGIBrRiM5VPWOYgkEHZSQppvmJeJCRaq4kK2+CI+pC0IYlM9yOeGxQ+Aoz7fnWmwT
a0mz/+MYfImLM12sM9en+do6VclYEPmq71q2z0tL3yoAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAv
bG9jYWwvY29uZi9jZXJ0cy9mM2NmMWU4ZS4wAAABUYW1quQABVguNTA5AAAFbjCCBWowggRSoAMC
AQICBDy1PUYwDQYJKoZIhvcNAQEFBQAwZjESMBAGA1UEChMJYmVUUlVTVGVkMRswGQYDVQQLExJi
ZVRSVVNUZWQgUm9vdCBDQXMxMzAxBgNVBAMTKmJlVFJVU1RlZCBSb290IENBLUJhbHRpbW9yZSBJ
bXBsZW1lbnRhdGlvbjAeFw0wMjA0MTEwNzM4NTFaFw0yMjA0MTEwNzM4NTFaMGYxEjAQBgNVBAoT
CWJlVFJVU1RlZDEbMBkGA1UECxMSYmVUUlVTVGVkIFJvb3QgQ0FzMTMwMQYDVQQDEypiZVRSVVNU
ZWQgUm9vdCBDQS1CYWx0aW1vcmUgSW1wbGVtZW50YXRpb24wggEiMA0GCSqGSIb3DQEBAQUAA4IB
DwAwggEKAoIBAQC8fsQ5nIzj1hyG/8pireB/MEV6jhqzuMf50Tb/IvNOal+EEPtmgcOUeTHSkeF3
jhgqwxTeUfVPoyu8GBbitd153iL4gn7LgR/9JyyP+pdkIo74/2GjnBseko/AqAnfCRHst30xmhrq
gyEGPJ+6XP+U6mq4w2tVNE89Mh/dgRTgxDzNnTD4MKmX0+7Mo9AfXxwTgdQYq5TRY8OefzWSnl9E
6uz0Ily36D19pPmJqZGyKtnrM4fupf3j2syI5okmbscrgtBenVnbFOyRgwXDXg7GKtAE3XE9IE5Y
J/xT+3h4GRSy/JBSiThiYAe0oOysa1DW/bkoa+9SLTqy//EBQKw3AgMBAAGjggIeMIICGjAPBgNV
HRMBAf8EBTADAQH/MIIBtQYDVR0gBIIBrDCCAagwggGkBg8rBgEEAbE+AAABCSiDkTEwggGPMIIB
SAYIKwYBBQUHAgIwggE6GoIBNlJlbGlhbmNlIG9uIG9yIHVzZSBvZiB0aGlzIENlcnRpZmljYXRl
IGNyZWF0ZXMgYW4gYWNrbm93bGVkZ21lbnQgYW5kIGFjY2VwdGFuY2Ugb2YgdGhlIHRoZW4gYXBw
bGljYWJsZSBzdGFuZGFyZCB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB1c2UsIHRoZSBDZXJ0aWZp
Y2F0aW9uIFByYWN0aWNlIFN0YXRlbWVudCBhbmQgdGhlIFJlbHlpbmcgUGFydHkgQWdyZWVtZW50
LCB3aGljaCBjYW4gYmUgZm91bmQgYXQgdGhlIGJlVFJVU1RlZCB3ZWIgc2l0ZSwgaHR0cDovL3d3
dy5iZXRydXN0ZWQuY29tL3Byb2R1Y3RzX3NlcnZpY2VzL2luZGV4Lmh0bWwwQQYIKwYBBQUHAgEW
NWh0dHA6Ly93d3cuYmV0cnVzdGVkLmNvbS9wcm9kdWN0c19zZXJ2aWNlcy9pbmRleC5odG1sMB0G
A1UdDgQWBBRFPcOp0dw/JFaYHHMYiGr/g0fttjAfBgNVHSMEGDAWgBRFPcOp0dw/JFaYHHMYiGr/
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
BVguNTA5AAAERzCCBEMwggMroAMCAQICAQEwDQYJKoZIhvcNAQEFBQAwfzELMAkGA1UEBhMCR0Ix
GzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBwwHU2FsZm9yZDEaMBgGA1UECgwR
Q29tb2RvIENBIExpbWl0ZWQxJTAjBgNVBAMMHFRydXN0ZWQgQ2VydGlmaWNhdGUgU2VydmljZXMw
HhcNMDQwMTAxMDAwMDAwWhcNMjgxMjMxMjM1OTU5WjB/MQswCQYDVQQGEwJHQjEbMBkGA1UECAwS
R3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRowGAYDVQQKDBFDb21vZG8gQ0Eg
TGltaXRlZDElMCMGA1UEAwwcVHJ1c3RlZCBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZI
hvcNAQEBBQADggEPADCCAQoCggEBAN9xbzZYU1ryNlRXgMR0CCDtGH8qHeY1mh4lrJzlln5yUqAV
QttZ3WR6GtC4e905FbxVSMTtOgDqMRG68nF0Gme4zzPMqDGvo+PXf78zLUxqPOyLw5LSU3ckdJwH
bnD8vQtbdrpf8v/XN0tKYHj38PrKcLTqWaqjzkgvqcOyC34XchYMpgcMGzjPyWK3P6CTpYdB8rdw
QHfYvhR846jAeo7pY2rRD5rG0vSLOhQEVtTtuMxu9fviLFi9f09rK/dgJFgkzibvNJE61eOB0LLw
BALXW7c+kqxrEor55AWwO5FJXLLrU+r4n0eG7r+VwMAGn9JbXhEb9McENSnSVVzk7esCAwEAAaOB
yTCBxjAdBgNVHQ4EFgQUxXtYve3aJWnS91kWqLMywHsnW/QwDgYDVR0PAQH/BAQDAgEGMA8GA1Ud
EwEB/wQFMAMBAf8wgYMGA1UdHwR8MHowPKA6oDiGNmh0dHA6Ly9jcmwuY29tb2RvY2EuY29tL1Ry
dXN0ZWRDZXJ0aWZpY2F0ZVNlcnZpY2VzLmNybDA6oDigNoY0aHR0cDovL2NybC5jb21vZG8ubmV0
L1RydXN0ZWRDZXJ0aWZpY2F0ZVNlcnZpY2VzLmNybDANBgkqhkiG9w0BAQUFAAOCAQEAyJOBO4m0
r7iEEkyN0vDbcLpXhhU0ELkvfx6wqIlgoYrCdwxQSpsAi9iL9EHi0IOKShwUBrCjaAVwMTCnU5sO
6UqgWGlnDq6d9qUsQb88BmvkWcxtEPGWbx/f9AQCpJ9FPsjY+jZGRFA/gpeRHyjbGBGMKuRlg1cS
EowXP5Q2/l2wwAR3E7j0FdU/OMyUOlXQrJj1ugBf4IYZgXgvKMB+08xCCvWuUKDRPsahcew/oCCM
ZjqJtI7U2LFNJUfuL4jIteEFRcC+FHHeev2Oe31NCJalEnPwLco3J3QSJ0zLtpfp2a4IbVo5QN0F
R3VqWiGzoxjPTvcuV7eYcF7IxHiwYgAAAAIALi9leHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25m
L2NlcnRzLzJmYjE4NTBhLjAAAAFK5xh2EAAFWC41MDkAAAWoMIIFpDCCA4ygAwIBAgIBATANBgkq
hkiG9w0BAQUFADBjMQswCQYDVQQGEwJVUzEcMBoGA1UEChMTQW1lcmljYSBPbmxpbmUgSW5jLjE2
MDQGA1UEAxMtQW1lcmljYSBPbmxpbmUgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAyMB4X
DTAyMDUyODA2MDAwMFoXDTM3MDkyOTE0MDgwMFowYzELMAkGA1UEBhMCVVMxHDAaBgNVBAoTE0Ft
ZXJpY2EgT25saW5lIEluYy4xNjA0BgNVBAMTLUFtZXJpY2EgT25saW5lIFJvb3QgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkgMjCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMxBRR3pPU0Q
9oyxQcngXssNt79Hc9PwVU3dxgz6sWYFas14tNwC206B89enfHG8dWOgXeMHDEjsJcQDIPT/DjsS
/5uN4cbVG7RtIuOx238hZK+GvFciKtZHgVdEglZTvYYUAQv8f3SkWq7xuhG1m1hagLQ3eAkzfDJH
A1zEpYNI9FdWboE2JxhP7JsowtS013wMPgwr38oE18aO6lhOqKSlGBxsRZijQdEt0sdtjRnxrXm3
gT+9BoInLRBYBbV4Bbkv2wxrkJB+FFk4u5QkE+XRnRTf04JNRvCAOVIyD+OEsnpD8l7eXz8d3eOy
G6ChKiMDbi4BFYdcpnV1x5dhvt6G3NRI270qv0pV2uh9UPu0gBe4lL8BPeraunzgWGcXuVjgiIZG
Z2ydEEdYMtA1fHkqkKJaEBEjNa0vzORKW6fIJ/KD3l67Xnfn6KVuY8INXWHQjNJsWiEOyiijzirp
lcdIz5ZvHZIlyMbGwcEMBawmxNJ10uEqZ8A9W6Wa6897GqidFEXlD6CaZd4vKL3Ob5Rmg0gp2Opl
jK+T2WSfVVcmv2/LNzGZo2C7HK2JNDJiuEMhBnIMoVxtRsX6Kc8w3onccVvdtjc+31D1uAclJuW8
tf48ArO3+L5DwYcRlJ4jbBeKuIonDFRH8KmzwICMoCfrHRnjB453cMor9H124HhnAgMBAAGjYzBh
MA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFE1FwWg4u3OpaaEg5+31IqEjFNeeMB8GA1UdIwQY
MBaAFE1FwWg4u3OpaaEg5+31IqEjFNeeMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQUFAAOC
AgEAZ2sGuV9FOypLM7PmG2tZTiLMubekJcmnxPBUlgtk87FYT15R/LKXeydlwuXK5w0MJXti4/qf
tIe3RUavg6WXSIylvfEWK5t2LHo1YGwRgJfMqZJS5ivmae2p+DYtLHe/YUjRYwu5W1LtGLBDQiKm
sXeu3mnFzcccobGlHBD7GL4acN3Bkku+KVqdPzW+5X1R+FXgJXUjhx5c3LqdsKyzadsXg8n33gy8
CNyRnqjQ1xU3c6U1uPx+xURABsPr+CKAXEfOAuMRn0T//ZoyzH1kUQ7rVyZ2OuMeIjzCpjbdGe+n
/BLzJsBZMYVMnNjP36TMzCmT/5RtdlwTCJfy7aULTd3oyWgOZtMADjMSW7yV5TKQqLPGbIOtd+6L
fn6xqavT4fG2wLHqiMDn05DpKJKUe2h7lyoKZy2FAjgQ5ANh1NolNscIWC2hp1GvMApJ9aZphwct
REZ2jirlmjvXGKL8nDgQzMY70rUXOm/9riW99XJZZLF0KjhfGEzfz3EEWjbUvy+ZnOjZurGV5gJL
IaFb1cFPj65pbVPbAZO1XB4Y3WRayhgoPmMEEf0cjQAPuDffZ4qdZqkCapH/E8ovXYO8h5Ns3CRR
FgQlZvqz2cK6Kb6aSDiCmfS/O0oxGfm/jiEzFMpPVF/7zvuPcX/9XhmgD0uRuMRUvAawRY8mkaKO
/qkAAAACAC4vZXhwb3J0L2hkYTMvNy4yLjAvbG9jYWwvY29uZi9jZXJ0cy83MmJmNmEwNC4wAAAB
SucYlMYABVguNTA5AAAH+zCCB/cwggdgoAMCAQICAQAwDQYJKoZIhvcNAQEFBQAwggEUMQswCQYD
VQQGEwJFUzESMBAGA1UECBMJQmFyY2Vsb25hMRIwEAYDVQQHEwlCYXJjZWxvbmExLjAsBgNVBAoT
JUlQUyBJbnRlcm5ldCBwdWJsaXNoaW5nIFNlcnZpY2VzIHMubC4xKzApBgNVBAoUImlwc0BtYWls
Lmlwcy5lcyBDLkkuRi4gIEItNjA5Mjk0NTIxLzAtBgNVBAsTJklQUyBDQSBDTEFTRUEzIENlcnRp
ZmljYXRpb24gQXV0aG9yaXR5MS8wLQYDVQQDEyZJUFMgQ0EgQ0xBU0VBMyBDZXJ0aWZpY2F0aW9u
IEF1dGhvcml0eTEeMBwGCSqGSIb3DQEJARYPaXBzQG1haWwuaXBzLmVzMB4XDTAxMTIyOTAxMDc1
MFoXDTI1MTIyNzAxMDc1MFowggEUMQswCQYDVQQGEwJFUzESMBAGA1UECBMJQmFyY2Vsb25hMRIw
EAYDVQQHEwlCYXJjZWxvbmExLjAsBgNVBAoTJUlQUyBJbnRlcm5ldCBwdWJsaXNoaW5nIFNlcnZp
Y2VzIHMubC4xKzApBgNVBAoUImlwc0BtYWlsLmlwcy5lcyBDLkkuRi4gIEItNjA5Mjk0NTIxLzAt
BgNVBAsTJklQUyBDQSBDTEFTRUEzIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MS8wLQYDVQQDEyZJ
UFMgQ0EgQ0xBU0VBMyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEeMBwGCSqGSIb3DQEJARYPaXBz
QG1haWwuaXBzLmVzMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDugAD2GmQurWrIg7GLp+6P
2bbbzRu7hgYidjMMEm1IVmHS3IIlYi+f0mkwZQNCI1i8R9xr1nVdFzzh//JYZ3mgwYGx1Fai8o0R
mf32ffHHxF4CKpriSrUTigD9jHeG5teU9SB1Lg5Mv3TEP4E+g7SjODYp5+gq9YyIQaqApuNs7wID
AQABo4IEUzCCBE8wHQYDVR0OBBYEFB6fV1BHtmGTOdMs/NpdPQV1t5kCMIIBRgYDVR0jBIIBPTCC
ATmAFB6fV1BHtmGTOdMs/NpdPQV1t5kCoYIBHKSCARgwggEUMQswCQYDVQQGEwJFUzESMBAGA1UE
CBMJQmFyY2Vsb25hMRIwEAYDVQQHEwlCYXJjZWxvbmExLjAsBgNVBAoTJUlQUyBJbnRlcm5ldCBw
dWJsaXNoaW5nIFNlcnZpY2VzIHMubC4xKzApBgNVBAoUImlwc0BtYWlsLmlwcy5lcyBDLkkuRi4g
IEItNjA5Mjk0NTIxLzAtBgNVBAsTJklQUyBDQSBDTEFTRUEzIENlcnRpZmljYXRpb24gQXV0aG9y
aXR5MS8wLQYDVQQDEyZJUFMgQ0EgQ0xBU0VBMyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEeMBwG
CSqGSIb3DQEJARYPaXBzQG1haWwuaXBzLmVzggEAMAwGA1UdEwQFMAMBAf8wDAYDVR0PBAUDAwf/
gDBrBgNVHSUEZDBiBggrBgEFBQcDAQYIKwYBBQUHAwIGCCsGAQUFBwMDBggrBgEFBQcDBAYIKwYB
BQUHAwgGCisGAQQBgjcCARUGCisGAQQBgjcCARYGCisGAQQBgjcKAwEGCisGAQQBgjcKAwQwEQYJ
YIZIAYb4QgEBBAQDAgAHMBoGA1UdEQQTMBGBD2lwc0BtYWlsLmlwcy5lczAaBgNVHRIEEzARgQ9p
cHNAbWFpbC5pcHMuZXMwQgYJYIZIAYb4QgENBDUWM0NMQVNFQTMgQ0EgQ2VydGlmaWNhdGUgaXNz
dWVkIGJ5IGh0dHA6Ly93d3cuaXBzLmVzLzApBglghkgBhvhCAQIEHBYaaHR0cDovL3d3dy5pcHMu
ZXMvaXBzMjAwMi8wOwYJYIZIAYb4QgEEBC4WLGh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvaXBz
MjAwMkNMQVNFQTMuY3JsMEAGCWCGSAGG+EIBAwQzFjFodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAy
L3Jldm9jYXRpb25DTEFTRUEzLmh0bWw/MD0GCWCGSAGG+EIBBwQwFi5odHRwOi8vd3d3Lmlwcy5l
cy9pcHMyMDAyL3JlbmV3YWxDTEFTRUEzLmh0bWw/MDsGCWCGSAGG+EIBCAQuFixodHRwOi8vd3d3
Lmlwcy5lcy9pcHMyMDAyL3BvbGljeUNMQVNFQTMuaHRtbDB1BgNVHR8EbjBsMDKgMKAuhixodHRw
Oi8vd3d3Lmlwcy5lcy9pcHMyMDAyL2lwczIwMDJDTEFTRUEzLmNybDA2oDSgMoYwaHR0cDovL3d3
d2JhY2suaXBzLmVzL2lwczIwMDIvaXBzMjAwMkNMQVNFQTMuY3JsMC8GCCsGAQUFBwEBBCMwITAf
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
dHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xGzAZBgNVBAMTElVUTiAtIERBVEFDb3JwIFNHQzAeFw05
OTA2MjQxODU3MjFaFw0xOTA2MjQxOTA2MzBaMIGTMQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQx
FzAVBgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsx
ITAfBgNVBAsTGGh0dHA6Ly93d3cudXNlcnRydXN0LmNvbTEbMBkGA1UEAxMSVVROIC0gREFUQUNv
cnAgU0dDMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3+5YEKIrblXEjr8uRgnn4AgP
Lit6E5Qbvfa2gI5lBZMAHryv4g+OGQ0SR+ysraP6LnD43m77VkIVni5c7yPeIbkFdicZD0/Ww5y0
vpQZY/KmEQrrU0icvvIpOxboGqBMpsn0GFlowHDyUwDAXlCCpVZvNvlK4ESGoE1O1kduSUrLZ9em
xAW5jh70/P/N5zbgnAVssjMiFdC04MwXwLLA9P4yPykqlXvY8qdOD1R8oQ2AswkDwf9c3V6aPryu
vEeKaq5xyh+xKrhfQgUL7EYw0XILyulWbfXv33i+Ybqypa4ETLyorGkVl73v67SMvzX41MPRKA5c
Op9wGDMgd8SirwIDAQABo4GrMIGoMAsGA1UdDwQEAwIBxjAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud
DgQWBBRTMtGzz3/64PGgXYVOktKeRR20TzA9BgNVHR8ENjA0MDKgMKAuhixodHRwOi8vY3JsLnVz
ZXJ0cnVzdC5jb20vVVROLURBVEFDb3JwU0dDLmNybDAqBgNVHSUEIzAhBggrBgEFBQcDAQYKKwYB
BAGCNwoDAwYJYIZIAYb4QgQBMA0GCSqGSIb3DQEBBQUAA4IBAQAnNZcAiosovcYzMB4p/OL31ZjU
QLtgyr+rFywJNn9Q+kHcrpY6CiM+iVnJowftGzet/Hy+UUla3joKVAgWRcKZsYfNjGjgaQPpxE6Y
sjuMFrMOoAyYUJuTqXAJyCyjj98C5OBxOvG0I3KgqgHf35g+FFCgMSa9KOlaMCZ1+XtgHI3zzVAm
bQQnmt/VDUVHKWss5nbZqSl9Mt3JNjy9rjXxEZ4du5A/EkdOjtd+D2JzHVImOBwYSf0wdJrE5SIv
2MCN7ZF6TACPcn9d2t0bi0Vr591pl6jFVkwPDPafepE39peC4N1xaf92P2BNPM/3mfnGV/TJVTl4
uix5yaaIK/QIAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvNDUwYzZl
MzguMAAAAVGFtN8wAAVYLjUwOQAABd0wggXZMIIDwaADAgECAhAenijoSPLl78N8Sh5aGGe2MA0G
CSqGSIb3DQEBCwUAMGQxCzAJBgNVBAYTAmNoMREwDwYDVQQKEwhTd2lzc2NvbTElMCMGA1UECxMc
RGlnaXRhbCBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczEbMBkGA1UEAxMSU3dpc3Njb20gUm9vdCBDQSAy
MB4XDTExMDYyNDA4MzgxNFoXDTMxMDYyNTA3MzgxNFowZDELMAkGA1UEBhMCY2gxETAPBgNVBAoT
CFN3aXNzY29tMSUwIwYDVQQLExxEaWdpdGFsIENlcnRpZmljYXRlIFNlcnZpY2VzMRswGQYDVQQD
ExJTd2lzc2NvbSBSb290IENBIDIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCVQk6E
nVHm0wnoclojadt4cI4W8SuPDQPOk8wuAAh7qzOM9OlA5hdMq564RxQydzLdKAzeGEtfdp/4OTv8
TonYfMVn76vSuTRfazrzZDbOwrDPE2jKyMvrteI9LiHf6izU4Plwlkz/aliYtxfkG1LlfgcAHV/a
5j6VBLdpiDmhQWAlYUuVOWhiHLELBYnANoIUIT+u26H9vG8cYIa2U5RJuStGxU8AK7+hu8s/4MdX
HFfo1mn4wSRSnYhV3cKHLnQj0BT9Kkdau6ad/ZTk0YqlX4ZjdoXLr/9JKPyA7Ux50rvkwO8B7lBB
CDUjcCupFrSMboXpthHPMd1TJhvfLVpKAkD8xMC26TEaCCjlYMMfxJCOEGJgRA3sCr5VGHEspfSy
vBVi/xzjvh3aHlezPH7Ngh2R40vrLFI0sIr9Ek6WsOtwf54592ZCsausUtp2QFd7Kr3obgOyC4CF
iJ0Mx8J3sJqaV/S4+hNcaJM6Z6SX0BuZt4YyS2DYzu/QDH+Vn2+HT4eKjl8IfKpb/Fq+oZGfVX1O
sAtpzLCUqKeH8tNKUNxfcrAWdR7LtBhimrCnOaqbn2bYjaZslhXj5vL48YNibLtV6WGToz31sVeL
TyOwm+WUai/fjN+VUSlgoQsp5FxVWLeo/JnuJU1MDrPTTI+E6CkP/RBUAoXI+eXDi8/nDwIDAQAB
o4GGMIGDMA4GA1UdDwEB/wQEAwIBhjAdBgNVHSEEFjAUMBIGB2CFdAFTAgEGB2CFdAFTAgEwEgYD
VR0TAQH/BAgwBgEB/wIBBzAdBgNVHQ4EFgQUTSYgIolL09WkCqFv3uISgcXxPC4wHwYDVR0jBBgw
FoAUTSYgIolL09WkCqFv3uISgcXxPC4wDQYJKoZIhvcNAQELBQADggIBADIKsqQby32+gleJuWp/
8/TBLhF9uBk+ebeoqHI3Zpsa7awTOw6/YvCc3557oVNIDkF6yiCnFxu2eOxAkfNCrRDDXO//YFl/
zYWjiz1IHCUCPGd99TLpLzDlfaV6ONDzZipmHo0zg4pvfG6oWnWauNfaWEhER6hM+kxJCkrCEjeo
QAzDyOHQVw2XMpXHOp+X01f4C97lcvOj2/+12Fmyc91NKnGyukn1yxzV9XnImbP8wUx047S9KTcV
BCge3kVGcOyvungOiirOAHncwF8ZZyxrS+9oaAtD46zBYgnvpt1lYaCvhFVIkVIcxiWRKtDBIiNh
Wa9FEYUdASQ0j8+z/xdyIBPCgKohLHE5DtCPXMHT0Y4ickZMHZauT3Gx4QUplln0u551Pc8NNw1i
2yaMY6kj32cGPHw62jRC4Wa0RgTexpaYD0tIeiQydZGfrPdo6Sq5VWXOXWHTJ3DYN/6fua+gLla3
o2VR7TurFL9MUQPoX4oFm+6Kbpzvv2j6yNoL40LJ0BcUnLdK4K+TJyFVJrVkL43x/6ZABYUFXMoH
GVwLEyhMWH/Cpe9F2mDTrmVhnVODdMKu8lzCFu2SPoQ+c2CIvHb0LM/QfX3TuF7RkRIQ6c3dyiXj
1e2ZL751gUsk+UVGlMkpIVOcJkWqExfk58144jnBKxKepp4bxeYO2THZAAAAAgAvL2V4cG9ydC9o
ZGEzLzYuMTAuNC9sb2NhbC9jb25mL2NlcnRzLzk3YjQyMTFjLjAAAAEwuyrmvgAFWC41MDkAAAH+
MIIB+jCCAWMCAgGjMA0GCSqGSIb3DQEBBAUAMEUxCzAJBgNVBAYTAlVTMRgwFgYDVQQKEw9HVEUg
Q29ycG9yYXRpb24xHDAaBgNVBAMTE0dURSBDeWJlclRydXN0IFJvb3QwHhcNOTYwMjIzMjMwMTAw
WhcNMDYwMjIzMjM1OTAwWjBFMQswCQYDVQQGEwJVUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9u
MRwwGgYDVQQDExNHVEUgQ3liZXJUcnVzdCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKB
gQC45k+625h8cXyvRLfTD0bZZOWTwUKOx7pJjTUteueLveUFMVnGsS8KDPufpz+iCWaEVh43KRuH
6X4MypqfpX/1FZSj1aJGgthoTNE3FQZor734sLPwKfWVWgkWYXcKIiXUT0Wqx73llt/51KiOQswk
wB6RJ0q1bQaAYznEol44AwIDAQABMA0GCSqGSIb3DQEBBAUAA4GBABKzdcZfHeFhVYAA1IFLezEP
I2PnPfMD+fQ2qLvZ46WXTeorKeDWanOB5sCJo9Px4KWlIjeaY8JIILTbcuPI9tl8vrGvU9oUtCG4
1tWW4/5ODFlitppK+ULdjG+BqXH/9ApybW1EDp3zdHSo1TRJ6V6e6bR64eVaH4QwnNOfpSXYAAAA
AgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvY2NjNTJmNDkuMAAAAVGFtI+r
AAVYLjUwOQAAAgIwggH+MIIBhaADAgECAgh0lyWKxz96VDAKBggqhkjOPQQDAzBFMQswCQYDVQQG
EwJVUzEUMBIGA1UECgwLQWZmaXJtVHJ1c3QxIDAeBgNVBAMMF0FmZmlybVRydXN0IFByZW1pdW0g
RUNDMB4XDTEwMDEyOTE0MjAyNFoXDTQwMTIzMTE0MjAyNFowRTELMAkGA1UEBhMCVVMxFDASBgNV
BAoMC0FmZmlybVRydXN0MSAwHgYDVQQDDBdBZmZpcm1UcnVzdCBQcmVtaXVtIEVDQzB2MBAGByqG
SM49AgEGBSuBBAAiA2IABA0wXhsVnQPQoXk1tzo8knrKFRzNYvOcJlwHPeVU+qPWzBLq9BRf6I4Z
qy8uSOasGEN4rNA3w72yzSzmR+Ia5mO4PS4veMRP2/QPpGhMVXJrlR1OGEKVeMw3PJHim2UrKaNC
MEAwHQYDVR0OBBYEFJqvKXrAETU1JlEwAMNq/kDVrtY8MA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0P
AQH/BAQDAgEGMAoGCCqGSM49BAMDA2cAMGQCMBcJ84eIUFqvyMBCv0df9WxqhuDEJ3TkOFPXBX8b
NOPGL7PKCTw3ndfnuEbx/aHicQIwQlmHQ9RR37rTCTJazoh+Vz2cX0Jr9QcttfCCk/lZb65k+ljl
ix7jY761gc1vAox5AAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvYWEx
NTdkMWUuMAAAAUrnGOF1AAVYLjUwOQAAA/IwggPuMIIDV6ADAgECAgEAMA0GCSqGSIb3DQEBBAUA
MIGxMQswCQYDVQQGEwJVUzEXMBUGA1UECBMOTm9ydGggQ2Fyb2xpbmExEDAOBgNVBAcTB1JhbGVp
Z2gxFjAUBgNVBAoTDVJlZCBIYXQsIEluYy4xGDAWBgNVBAsTD1JlZCBIYXQgTmV0d29yazEiMCAG
A1UEAxMZUkhOIENlcnRpZmljYXRlIEF1dGhvcml0eTEhMB8GCSqGSIb3DQEJARYScmhuLW5vY0By
ZWRoYXQuY29tMB4XDTAyMDkwNTIwNDUxNloXDTA3MDkwOTIwNDUxNlowgbExCzAJBgNVBAYTAlVT
MRcwFQYDVQQIEw5Ob3J0aCBDYXJvbGluYTEQMA4GA1UEBxMHUmFsZWlnaDEWMBQGA1UEChMNUmVk
IEhhdCwgSW5jLjEYMBYGA1UECxMPUmVkIEhhdCBOZXR3b3JrMSIwIAYDVQQDExlSSE4gQ2VydGlm
aWNhdGUgQXV0aG9yaXR5MSEwHwYJKoZIhvcNAQkBFhJyaG4tbm9jQHJlZGhhdC5jb20wgZ8wDQYJ
KoZIhvcNAQEBBQADgY0AMIGJAoGBALMWt8X1uWlRH820PXDPYFeFpCqnXSgiDuwZ4pL3SJemph9R
lYMRj5qYopDgy0okGZSoikuItAZsznfXFTs8zWaDzyMdDbwKDMsfy0D789n+KrSFLHvJof7zj2gd
8hKxpBYZzg+4mpzZvF9JYrKVk85dLt15PPFbpreitTkNjhIxAgMBAAGjggESMIIBDjAdBgNVHQ4E
FgQUfxtkoS4Cxah9uNGxiwado6lQY5Iwgd4GA1UdIwSB1jCB04AUfxtkoS4Cxah9uNGxiwado6lQ
Y5KhgbekgbQwgbExCzAJBgNVBAYTAlVTMRcwFQYDVQQIEw5Ob3J0aCBDYXJvbGluYTEQMA4GA1UE
BxMHUmFsZWlnaDEWMBQGA1UEChMNUmVkIEhhdCwgSW5jLjEYMBYGA1UECxMPUmVkIEhhdCBOZXR3
b3JrMSIwIAYDVQQDExlSSE4gQ2VydGlmaWNhdGUgQXV0aG9yaXR5MSEwHwYJKoZIhvcNAQkBFhJy
aG4tbm9jQHJlZGhhdC5jb22CAQAwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQQFAAOBgQAoTULl
NCLdxoZjBHVSZxdFcvI7IStFWXJz91k2nVdDxtyUDw7/E1xPUDeFsuTCHzWfdPTnU/uhBrg5zuQK
hntfKF3HEZ4Spda5bOkYCdXwQudUtZGeI60SeqpyfDk8g/h1pHsDkv8q1MV2GRL6tDuwiSyVjAGQ
Ddi6BgVhAKyV2gAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzL2ZhY2Fj
YmM2LjAAAAFRhbPd1QAFWC41MDkAAATXMIIE0zCCA7ugAwIBAgIQGNrRniZ96LtKIVjNzGs7SjAN
BgkqhkiG9w0BAQUFADCByjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8w
HQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwNiBWZXJpU2ln
biwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFz
cyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzUwHhcNMDYxMTA4
MDAwMDAwWhcNMzYwNzE2MjM1OTU5WjCByjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWdu
LCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAw
NiBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJp
U2lnbiBDbGFzcyAzIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzUw
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvJAgIKXo1nmAMqudLO07cfLw8RRy7K+D+
KQL5VwijZIUVJ/XxrcgxiV0i6CqqpkKzj/i5Vbext0uz/o9+B1fs70PbZmIVYc9gDaTY3vjgw2II
PVQT60nKWVSFJuUrjxuf6/WhkcIzSdhDY2pSS9KP6HBRTdGJaXvHcPaz3BJ023tdS1bTlr8Vd6Gw
9KIl8q8ckmcY5fQGBO+QueQA5N06tRn/Arr0PO7gi+s3i+z016zy9vA9r911kTMZHRxAy3QkGSGT
2RT+rCpSx4/VBEnkjWNHiDxpg8v+R70rfk/Fla4OndTRQ8Bnc+MUCH7lP59zuDMKz10/NIeWiu5T
6CUVAgMBAAGjgbIwga8wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwbQYIKwYBBQUH
AQwEYTBfoV2gWzBZMFcwVRYJaW1hZ2UvZ2lmMCEwHzAHBgUrDgMCGgQUj+XTGoasjY5rw8+AatRI
GCx7GS4wJRYjaHR0cDovL2xvZ28udmVyaXNpZ24uY29tL3ZzbG9nby5naWYwHQYDVR0OBBYEFH/T
ZafC3ey78DAJ80M5+gKvMzEzMA0GCSqGSIb3DQEBBQUAA4IBAQCTJEowX2LP2BqYLz3q3JktvXf2
pXkiOOzEp6B4Eq1iDkVwZMXnl2YtmAl+X6/WzChl8gGqCBpH3vn5fJJaCGkgDdk+bW48DW7Y5gaR
QBi5+MHt39tBquCWIMnNZBU4gcmU7qKEKQsTb47bDN0lAtukixlE0kF6BWlKWE9gyn6CagsCqiUX
ObXbf+eEZSqVir2G3l6BFoMtEMze/aiCKm0oHw0LxOXnGiYZ4fQRbxC1lfznQgUy286dUV4otp6F
01vvpX1FQHKOtw5rDgb7MzVIcbidJ4vEZV8NhnacRHr2lVz2XTIIM6RUthg/aFzyQkqFOFSDX9Ho
LPKsEdao7WNqAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvMTFhMDli
MzguMAAAAUrnGKyIAAVYLjUwOQAABR0wggUZMIIEAaADAgECAgQ+SL3EMA0GCSqGSIb3DQEBBQUA
MDExCzAJBgNVBAYTAkRLMQwwCgYDVQQKEwNUREMxFDASBgNVBAMTC1REQyBPQ0VTIENBMB4XDTAz
MDIxMTA4MzkzMFoXDTM3MDIxMTA5MDkzMFowMTELMAkGA1UEBhMCREsxDDAKBgNVBAoTA1REQzEU
MBIGA1UEAxMLVERDIE9DRVMgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCsYvZh
ILLPwMaF1+N55szt8jmSpJcuZKOEW4ecTP2k88RfIb1WEOvbLmHsk2njo8y9mcMF/Aa4yjYc/pCO
SUzEVpovVrzPewzxb0emDUNN4ukdOTTNjSzZEpj54+HBSnyGOMSpxGGI0l6vGiZN1eSgIkeE2WS3
GZb87BnkspcmTkpMy48ki1QYHEhhe9WIaNpdterNGjDBgIN2UKpP0dTdOPDvFvThDFAGv+r7ekmh
KCsc9vwVMqN0ao+pw2IpcTHlO6RgF1505toT7ekfHxvRsmhzxhA0dUYQEOOQAHZAy4u3Qwkh/6tO
k8ZY6aWC23fEOpmxcpVJBPC3K/p7WY7dAgMBAAGjggI3MIICMzAPBgNVHRMBAf8EBTADAQH/MA4G
A1UdDwEB/wQEAwIBBjCB7AYDVR0gBIHkMIHhMIHeBggqgVCBKQEBATCB0TAvBggrBgEFBQcCARYj
aHR0cDovL3d3dy5jZXJ0aWZpa2F0LmRrL3JlcG9zaXRvcnkwgZ0GCCsGAQUFBwICMIGQMAoWA1RE
QzADAgEBGoGBQ2VydGlmaWthdGVyIGZyYSBkZW5uZSBDQSB1ZHN0ZWRlcyB1bmRlciBPSUQgMS4y
LjIwOC4xNjkuMS4xLjEuIENlcnRpZmljYXRlcyBmcm9tIHRoaXMgQ0EgYXJlIGlzc3VlZCB1bmRl
ciBPSUQgMS4yLjIwOC4xNjkuMS4xLjEuMBEGCWCGSAGG+EIBAQQEAwIABzCBgQYDVR0fBHoweDBI
oEagRKRCMEAxCzAJBgNVBAYTAkRLMQwwCgYDVQQKEwNUREMxFDASBgNVBAMTC1REQyBPQ0VTIENB
MQ0wCwYDVQQDEwRDUkwxMCygKqAohiZodHRwOi8vY3JsLm9jZXMuY2VydGlmaWthdC5kay9vY2Vz
LmNybDArBgNVHRAEJDAigA8yMDAzMDIxMTA4MzkzMFqBDzIwMzcwMjExMDkwOTMwWjAfBgNVHSME
GDAWgBRgtYXsVmR+EhknZx1QFUtzrjv5EjAdBgNVHQ4EFgQUYLWF7FZkfhIZJ2cdUBVLc647+RIw
HQYJKoZIhvZ9B0EABBAwDhsIVjYuMDo0LjADAgSQMA0GCSqGSIb3DQEBBQUAA4IBAQAKuiYmRtNz
qAnzawswmf2K4Vd6EdO4lNcJEG6jsTgD0bbyQ0EpYqdy2Pt8BeYxcCdUGE6KfE7l0cqMeIjPG9OQ
i+Yj+AsOM0N9nOIKGY/JAT50XXTJixwD5RjIAUw/y5cFXZhxpphvtny9N3++4ZMlbW/wCq0XGOED
vAcpyK0m6Phh8P0hCX6ajqlofUhicr0A6gGZuAaCUYFO8fW0kVS5I3oAmp9djeA8ZLkaEpIqx4JE
cjnc4jzG2FX1FU7IBQ7bxtBipuwVtLUCgtusjKKB8JuZMfUgIKiIYQoHn5T80NcbzC4X8wQndmfr
VIP9pJB+Bj0Eo0Mt2vwLYuovX2JTAAAAAgAvL2V4cG9ydC9oZGEzLzYuMTAuNC9sb2NhbC9jb25m
L2NlcnRzLzU5NGYxNzc1LjAAAAEwuyrxUwAFWC41MDkAAAMkMIIDIDCCAomgAwIBAgIENd70zzAN
BgkqhkiG9w0BAQUFADBOMQswCQYDVQQGEwJVUzEQMA4GA1UEChMHRXF1aWZheDEtMCsGA1UECxMk
RXF1aWZheCBTZWN1cmUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MB4XDTk4MDgyMjE2NDE1MVoXDTE4
MDgyMjE2NDE1MVowTjELMAkGA1UEBhMCVVMxEDAOBgNVBAoTB0VxdWlmYXgxLTArBgNVBAsTJEVx
dWlmYXggU2VjdXJlIENlcnRpZmljYXRlIEF1dGhvcml0eTCBnzANBgkqhkiG9w0BAQEFAAOBjQAw
gYkCgYEAwV2xWGcIYu6gmi0fCG2RFGiYCh7+2gRvE4RiIcPRfM6fBeC4AfBONOziipUEZKzxa1Nf
BbPLZ4C/QgKO/t0BCezhABRP/PvwDN1Dulsr4R+AcJkVV5MW8Q+XarfCaCMczE1ZMKxRHjuvK9bu
Y0V7xdlfUNLjUA86iOe/FP3gx7kCAwEAAaOCAQkwggEFMHAGA1UdHwRpMGcwZaBjoGGkXzBdMQsw
CQYDVQQGEwJVUzEQMA4GA1UEChMHRXF1aWZheDEtMCsGA1UECxMkRXF1aWZheCBTZWN1cmUgQ2Vy
dGlmaWNhdGUgQXV0aG9yaXR5MQ0wCwYDVQQDEwRDUkwxMBoGA1UdEAQTMBGBDzIwMTgwODIyMTY0
MTUxWjALBgNVHQ8EBAMCAQYwHwYDVR0jBBgwFoAUSOZo+SvSspXXR9gjIBBPM5iQn9QwHQYDVR0O
BBYEFEjmaPkr0rKV10fYIyAQTzOYkJ/UMAwGA1UdEwQFMAMBAf8wGgYJKoZIhvZ9B0EABA0wCxsF
VjMuMGMDAgbAMA0GCSqGSIb3DQEBBQUAA4GBAFjOKer89961zgK5F7WF0bnj4JXMJTENAKaSbn+2
kmOeUJXRmm/kEd5jhW6Y7qj/WsjTVbJmcVfewCHrPSqnI0kBBIZCe/zuf6IWUrVnZ9NA2zsmWLIo
dz2uFHdh1voqZiegDfqnc1zqcPGUIWVEX/r87yloqaKHee9570+sB3c4AAAAAgAuL2V4cG9ydC9o
ZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvYWFhNDU0NjQuMAAAAVGFtXmkAAVYLjUwOQAAAqUw
ggKhMIICCqADAgECAgEAMA0GCSqGSIb3DQEBBAUAMIGLMQswCQYDVQQGEwJaQTEVMBMGA1UECBMM
V2VzdGVybiBDYXBlMRQwEgYDVQQHEwtEdXJiYW52aWxsZTEPMA0GA1UEChMGVGhhd3RlMR0wGwYD
VQQLExRUaGF3dGUgQ2VydGlmaWNhdGlvbjEfMB0GA1UEAxMWVGhhd3RlIFRpbWVzdGFtcGluZyBD
QTAeFw05NzAxMDEwMDAwMDBaFw0yMDEyMzEyMzU5NTlaMIGLMQswCQYDVQQGEwJaQTEVMBMGA1UE
CBMMV2VzdGVybiBDYXBlMRQwEgYDVQQHEwtEdXJiYW52aWxsZTEPMA0GA1UEChMGVGhhd3RlMR0w
GwYDVQQLExRUaGF3dGUgQ2VydGlmaWNhdGlvbjEfMB0GA1UEAxMWVGhhd3RlIFRpbWVzdGFtcGlu
ZyBDQTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA1itYeGFFhlPqNHtRnO2w5i4YDv7gX6gn
07TJ4HxZThYOc1RgwX/2ny7pOoUkFTzbRwRjw57ElBpa30x689lDHTwQenkl25D+8FHnMNZBAP2f
KN95vpS7nbYU4yOF16lB4EykebArGovy+DuKPkWscZIAtJBBmPtf7fq3Lor4iDcCAwEAAaMTMBEw
DwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQQFAAOBgQBn2+LC5oc9QIOGNzV9H86awwxmIKi6
qgSJhsL1EAgNv8uiBYrQTTY+9NfvacZe5LCUb0q5595biLZ72+Mn5XbD8DXBy7UnmzN53JCmAJ53
+vzNJ5RCFpzTHGjsv1zd5al7EAoydFQTMYuFA4SRt1gBMBQ4ryjK/LFQGRkJrIlJ0wAAAAIALy9l
eHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy82ZmNjMTI1ZC4wAAABMLsrRwgABVgu
NTA5AAADpjCCA6IwggKKoAMCAQICEBOGNU0dPwbywfllBdWQHGIwDQYJKoZIhvcNAQEFBQAwazEL
MAkGA1UEBhMCVVMxDTALBgNVBAoTBFZJU0ExLzAtBgNVBAsTJlZpc2EgSW50ZXJuYXRpb25hbCBT
ZXJ2aWNlIEFzc29jaWF0aW9uMRwwGgYDVQQDExNWaXNhIGVDb21tZXJjZSBSb290MB4XDTAyMDYy
NjAyMTgzNloXDTIyMDYyNDAwMTYxMlowazELMAkGA1UEBhMCVVMxDTALBgNVBAoTBFZJU0ExLzAt
BgNVBAsTJlZpc2EgSW50ZXJuYXRpb25hbCBTZXJ2aWNlIEFzc29jaWF0aW9uMRwwGgYDVQQDExNW
aXNhIGVDb21tZXJjZSBSb290MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAr1feVh5u
odpgsZQnyxfbBz+AhU/InLbQ9G9Pz5nY4dvCSFw6rDkzxx9qiyY9KzX1SLGRwQJOBJaRe7Az8LEU
ThFvtUCvG0WlSu9+tqzyoB9YPxJGYDyNoeB9z1c+Mx77R/GqFZcHVWaltS0u2IBZsqcNt0bsIWP/
NaulAs8q9Ez+e/WUXYRNqPJgj9sOJTyfc3HPlN9K6tvfcjiM85a98Re80ro7RVrGp/bGF4sBnfwZ
qCqDFrg6SP5OPqCrBhnpU/OAEwftLb8/CjxVIDksLABpdJVKvCCyqXnlGImRqNwcTe+7fjcLXf45
pYhSjABs7Bh8Qb32i3V3umCdhOf+LQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB
/wQEAwIBBjAdBgNVHQ4EFgQUFTiDDz8sP3AzHs1G/geMIODXw7cwDQYJKoZIhvcNAQEFBQADggEB
AF/xQX18XAi5K+DVkkf6Z1ylE8MDIZsrTIlGz1lNyf6lQLZjzd1xKJVnEcwkrNNEbHGuASBrA6KP
GLcpOn3lFmBTeDzArxWD949SMyS9ZJOX7ov32xiobXGz9ywX0HQlaff+azyUvk1LQYxO4nPQ45Ai
c0PN8+/qc85FirCmSf9MfZ1xiMR2HZBbHe79zPfu/WClsXoWcdEW0HwSPGxpl9uuXzmacC8FPBlG
BJkgNtBgbmEGuxZCjHD3MPvg22ajAAG95izakV+gRotNapw9Pd0FRv52v6AKPOQA5ie3/4Qt3roi
J5YQcesi7d/fM5zP462ujtSO5k9RrxaS4Fz2Bw8AAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40L2xv
Y2FsL2NvbmYvY2VydHMvMjU2ZmQ4M2IuMAAAATC7K0jZAAVYLjUwOQAAA2AwggNcMIICxaADAgEC
AgID6jANBgkqhkiG9w0BAQQFADCBvDELMAkGA1UEBhMCREUxEDAOBgNVBAgTB0hhbWJ1cmcxEDAO
BgNVBAcTB0hhbWJ1cmcxOjA4BgNVBAoTMVRDIFRydXN0Q2VudGVyIGZvciBTZWN1cml0eSBpbiBE
YXRhIE5ldHdvcmtzIEdtYkgxIjAgBgNVBAsTGVRDIFRydXN0Q2VudGVyIENsYXNzIDIgQ0ExKTAn
BgkqhkiG9w0BCQEWGmNlcnRpZmljYXRlQHRydXN0Y2VudGVyLmRlMB4XDTk4MDMwOTExNTk1OVoX
DTExMDEwMTExNTk1OVowgbwxCzAJBgNVBAYTAkRFMRAwDgYDVQQIEwdIYW1idXJnMRAwDgYDVQQH
EwdIYW1idXJnMTowOAYDVQQKEzFUQyBUcnVzdENlbnRlciBmb3IgU2VjdXJpdHkgaW4gRGF0YSBO
ZXR3b3JrcyBHbWJIMSIwIAYDVQQLExlUQyBUcnVzdENlbnRlciBDbGFzcyAyIENBMSkwJwYJKoZI
hvcNAQkBFhpjZXJ0aWZpY2F0ZUB0cnVzdGNlbnRlci5kZTCBnzANBgkqhkiG9w0BAQEFAAOBjQAw
gYkCgYEA2jjo7TIAKXGDAQ2/jAHc2satOaSpii/Vi1xoX1DGYvVmvcqRIuyqHVHXPbNRsoNOXctJ
sPBMVeVrLceFCzAckk6C1MoC7fdvvtzg4xS4BVPymvRWi1qehZPRtIJWrk27qEtXFrz++Fie+CmN
sHvNeMlPrItnDPGc+/xXm1dcTw0CAwEAAaNrMGkwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8E
BAMCAYYwMwYJYIZIAYb4QgEIBCYWJGh0dHA6Ly93d3cudHJ1c3RjZW50ZXIuZGUvZ3VpZGVsaW5l
czARBglghkgBhvhCAQEEBAMCAAcwDQYJKoZIhvcNAQEEBQADgYEAhFL7KN//H3UBvAG+BFaXanRC
JDGD+UaxBoqJz5YsM7+MtV96cqGFBs6G+AWO6PklytqDjAas6zZthZE0BDb0QvD4eS4KSFyrzFFP
eHag2awZvSrRaQQokco2ECeAV1vSXPXCW6tkgWN0UfSXv80SKPdNZn+n8BwBJniyZkdwUWQAAAAC
AC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy9kNzhhNzVjNy4wAAABUYW1mTsA
BVguNTA5AAAEHTCCBBkwggMBAhBhcMtJjF+YRSnnsKbZUFt6MA0GCSqGSIb3DQEBBQUAMIHKMQsw
CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRy
dXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhv
cml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWduIENsYXNzIDIgUHVibGljIFByaW1hcnkg
Q2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5
NTlaMIHKMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl
cmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJbmMuIC0g
Rm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWduIENsYXNzIDIgUHVibGlj
IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMzCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAK8KDcLVLNtnuS3llCfdpb7gsE2Ps2FWPNZ8w/TNPobLooji4dikacW14r/B
pkdQXkY5i9WWurVvFL8QzicTngVHmzF6E9gf2dMCN4utLEfwjoEGpw0wDOv3PA8gHdxyRu6lAshb
w8lWaUzFGMGRewvVEwCbvO/DSD5GYCCFKtWQts2LoMwy3bf9QFWyUBxWrsyNd03HIE2nMXbvaJKK
kB4IgVayrWmjUtDLHMQjPR+Z/kzoFmOOxgiO9jH20vrldt21HJKjSc3NAc1ozalpuqPrHQ2cpCCm
waDF0UZMF23SrGY/lozghNQ2/yJZxfkRYKhfBH3yGvYlQmEPxEq4PokCAwEAATANBgkqhkiG9w0B
AQUFAAOCAQEANCYVPMCNTUNJHb3pIZLXZpy33sW40ORdX3YiwCb5hDo6+Yy1++xg8ejOBLDI3acD
jzDzmN+k5qQx39McC0bcciA/ru4FPKQzPws5rHB4c0uZK98wwlSwqDtVof4WKM1CvXRugNsnRKfO
RF3UG5CYDR5ClLEALATQdKMCBSJjY82DtfvBbWJraXX9XXBBufW/fN++wTJzIiGLWIF7FZF6uuNk
SLB/+zYl2pXQ8SQUF90YgGtGIzlU9Y5iCQQdlJCmm+Yl4kJFqriQrb4Ij6kLQhiUz3I54bFD4CjP
t+dabBNrSbP/4xh8iYszXawz16f52jpVyVgQ+arvWrbPS0vfKgAAAAIALy9leHBvcnQvaGRhMy82
LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy9hZGQ2NzM0NS4wAAABMLsrfJAABVguNTA5AAAGgTCCBn0w
ggVloAMCAQICAgEDMA0GCSqGSIb3DQEBBAUAMIGvMQswCQYDVQQGEwJIVTEQMA4GA1UECBMHSHVu
Z2FyeTERMA8GA1UEBxMIQnVkYXBlc3QxJzAlBgNVBAoTHk5ldExvY2sgSGFsb3phdGJpenRvbnNh
Z2kgS2Z0LjEaMBgGA1UECxMRVGFudXNpdHZhbnlraWFkb2sxNjA0BgNVBAMTLU5ldExvY2sgS296
amVneXpvaSAoQ2xhc3MgQSkgVGFudXNpdHZhbnlraWFkbzAeFw05OTAyMjQyMzE0NDdaFw0xOTAy
MTkyMzE0NDdaMIGvMQswCQYDVQQGEwJIVTEQMA4GA1UECBMHSHVuZ2FyeTERMA8GA1UEBxMIQnVk
YXBlc3QxJzAlBgNVBAoTHk5ldExvY2sgSGFsb3phdGJpenRvbnNhZ2kgS2Z0LjEaMBgGA1UECxMR
VGFudXNpdHZhbnlraWFkb2sxNjA0BgNVBAMTLU5ldExvY2sgS296amVneXpvaSAoQ2xhc3MgQSkg
VGFudXNpdHZhbnlraWFkbzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALx0jA+7TPQ3
HqkFgtjm4Wxw6ni1btE4RA2og85d0tbVgcXUS+dblHAm2zudakxi93HzZNZhOz3rc6M32c/qjJI7
zfcH3GZ0l/RFIt30XOC/bfO+ZTPkFTq/25iQVTjE7aZVYwuweAT0427BP478UXgfkp6Dwv7ZsKnJ
vFoA/6momHT79iw+FTkNtgRVqA6YIEKzsSWtfppvXVOxqwz86+DzerOos/9G9mOi2DqYe7ashf+w
JU90Y+cTB6UKjwX3wGRvfqcngJbe1C6GYMdrK15zexfnkT9kDNhLIjQrmzLySB+foQqEeuLCrZc9
jtXB+VajUOnGtPqYou6V5ioDjN8CAwEAAaOCAp8wggKbMA4GA1UdDwEB/wQEAwIABjASBgNVHRMB
Af8ECDAGAQH/AgEEMBEGCWCGSAGG+EIBAQQEAwIABzCCAmAGCWCGSAGG+EIBDQSCAlEWggJNRklH
WUVMRU0hIEV6ZW4gdGFudXNpdHZhbnkgYSBOZXRMb2NrIEtmdC4gQWx0YWxhbm9zIFN6b2xnYWx0
YXRhc2kgRmVsdGV0ZWxlaWJlbiBsZWlydCBlbGphcmFzb2sgYWxhcGphbiBrZXN6dWx0LiBBIGhp
dGVsZXNpdGVzIGZvbHlhbWF0YXQgYSBOZXRMb2NrIEtmdC4gdGVybWVrZmVsZWxvc3NlZy1iaXp0
b3NpdGFzYSB2ZWRpLiBBIGRpZ2l0YWxpcyBhbGFpcmFzIGVsZm9nYWRhc2FuYWsgZmVsdGV0ZWxl
IGF6IGVsb2lydCBlbGxlbm9yemVzaSBlbGphcmFzIG1lZ3RldGVsZS4gQXogZWxqYXJhcyBsZWly
YXNhIG1lZ3RhbGFsaGF0byBhIE5ldExvY2sgS2Z0LiBJbnRlcm5ldCBob25sYXBqYW4gYSBodHRw
czovL3d3dy5uZXRsb2NrLm5ldC9kb2NzIGNpbWVuIHZhZ3kga2VyaGV0byBheiBlbGxlbm9yemVz
QG5ldGxvY2submV0IGUtbWFpbCBjaW1lbi4gSU1QT1JUQU5UISBUaGUgaXNzdWFuY2UgYW5kIHRo
ZSB1c2Ugb2YgdGhpcyBjZXJ0aWZpY2F0ZSBpcyBzdWJqZWN0IHRvIHRoZSBOZXRMb2NrIENQUyBh
dmFpbGFibGUgYXQgaHR0cHM6Ly93d3cubmV0bG9jay5uZXQvZG9jcyBvciBieSBlLW1haWwgYXQg
Y3BzQG5ldGxvY2submV0LjANBgkqhkiG9w0BAQQFAAOCAQEASCRG97pWb/rIKANATuUxOWsma1N/
29/f83E9JsAUDsZneyOoDHPdAbvGym43OVXVx4xWIA4oCg7SKqSwSVLGOAf+vgoJjNGYz8raFDGh
T9I5/A8RLEPD3auTx1U+R3wYGgDc83vY8n9SbCD0C19pUvTu+LIpYOvjSTEhDda1EEHiQQls4hqa
Vkt3Avagm5onh+hVKXHCkJ9FeBrhFWQ90A7YoHafrsXQLurWD1bsZH9amxRYASd+E1DHayrmaDy/
XKAKG+EOeunigMPp6fb9bBGe0OUoJytUMkIUgnXmSvArZnVjjKL7BD6DDps28BjkJiDDjPAoB608
F2aItf22iAAAAAIALy9leHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy81Y2Y5ZDUz
Ni4wAAABMLsrX5kABVguNTA5AAAF1DCCBdAwggS4oAMCAQICBDq2UIswDQYJKoZIhvcNAQEFBQAw
fzELMAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxJTAjBgNVBAsTHFJvb3Qg
Q2VydGlmaWNhdGlvbiBBdXRob3JpdHkxLjAsBgNVBAMTJVF1b1ZhZGlzIFJvb3QgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkwHhcNMDEwMzE5MTgzMzMzWhcNMjEwMzE3MTgzMzMzWjB/MQswCQYDVQQG
EwJCTTEZMBcGA1UEChMQUXVvVmFkaXMgTGltaXRlZDElMCMGA1UECxMcUm9vdCBDZXJ0aWZpY2F0
aW9uIEF1dGhvcml0eTEuMCwGA1UEAxMlUXVvVmFkaXMgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhv
cml0eTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL9htZVTulf8+vJnCzoa3xGAZJW0
0bzNes/2KZYuJFRAJDj3GoXcWEzLpCdCl9Cfg4rD5AYDWwClUR5wBHTiwdQ6q9etOwcYBY79g6zq
ZtkYG2iK9VcamLr17XY9fNnelGo7SxfB1Y+9ZTg6ldA9VTZO33lXMSoe2FllSVggmH6rX36f6dZN
7IN0qcds2O4pSoUqBhT5VObT2mUHi2M3EtfQ7MN7IEFEo+3LoBfhcWXOHWYx93YBGch9A1i2lUkd
phIm6MYMduDjZsvqXaYm7uXMX71npwEnDqLKVMWxepUdcR5KKYoD3GpFwaQZXm82zcOisLf+XDji
Urz4REPmkLsCAwEAAaOCAlIwggJOMD0GCCsGAQUFBwEBBDEwLzAtBggrBgEFBQcwAYYhaHR0cHM6
Ly9vY3NwLnF1b3ZhZGlzb2Zmc2hvcmUuY29tMA8GA1UdEwEB/wQFMAMBAf8wggEaBgNVHSAEggER
MIIBDTCCAQkGCSsGAQQBvlgAATCB+zCB1AYIKwYBBQUHAgIwgccagcRSZWxpYW5jZSBvbiB0aGUg
UXVvVmFkaXMgUm9vdCBDZXJ0aWZpY2F0ZSBieSBhbnkgcGFydHkgYXNzdW1lcyBhY2NlcHRhbmNl
IG9mIHRoZSB0aGVuIGFwcGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2Yg
dXNlLCBjZXJ0aWZpY2F0aW9uIHByYWN0aWNlcywgYW5kIHRoZSBRdW9WYWRpcyBDZXJ0aWZpY2F0
ZSBQb2xpY3kuMCIGCCsGAQUFBwIBFhZodHRwOi8vd3d3LnF1b3ZhZGlzLmJtMB0GA1UdDgQWBBSL
S23t0ym5BhnsOTmp8JeEasvv3zCBrgYDVR0jBIGmMIGjgBSLS23t0ym5BhnsOTmp8JeEasvv36GB
hKSBgTB/MQswCQYDVQQGEwJCTTEZMBcGA1UEChMQUXVvVmFkaXMgTGltaXRlZDElMCMGA1UECxMc
Um9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEuMCwGA1UEAxMlUXVvVmFkaXMgUm9vdCBDZXJ0
aWZpY2F0aW9uIEF1dGhvcml0eYIEOrZQizAOBgNVHQ8BAf8EBAMCAQYwDQYJKoZIhvcNAQEFBQAD
ggEBAIrUFLX+9JqSpxnUpH5yGI/ZaHxSJN1nbzl6xKpePeJYsE1wmIRh6BvjaRgOzvtHUKBO//Ak
H72yzvUn/OwvU6pzewM9dG7mFp7rpS7Ev1YnUCtiur5LHDxVXEEdJL6CIEdd1UR+ehZo331NUXB4
Vx0zHv0CmZwMzQoFT8e7jqR1+kptsYCOCVa5nBpg/l3B13rcEXjQ1l3Bt9WtMpkDOorMVCU5MYF7
EyJRukZsobue+gRsSSZ0j9Jz68wwoubqWSKH+Jf1Dv3qzJKkFsRSGOohzrHx5oSB5bqphijyQ1pd
Ep2sHtmo5Qpqp3+ghynP8olN1OzF4uZ60DYjikp0NvkAAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40
L2xvY2FsL2NvbmYvY2VydHMvYzMzYTgwZDQuMAAAATC7Ku/KAAVYLjUwOQAAAyswggMnMIICkKAD
AgECAgEBMA0GCSqGSIb3DQEBBAUAMIHOMQswCQYDVQQGEwJaQTEVMBMGA1UECBMMV2VzdGVybiBD
YXBlMRIwEAYDVQQHEwlDYXBlIFRvd24xHTAbBgNVBAoTFFRoYXd0ZSBDb25zdWx0aW5nIGNjMSgw
JgYDVQQLEx9DZXJ0aWZpY2F0aW9uIFNlcnZpY2VzIERpdmlzaW9uMSEwHwYDVQQDExhUaGF3dGUg
UHJlbWl1bSBTZXJ2ZXIgQ0ExKDAmBgkqhkiG9w0BCQEWGXByZW1pdW0tc2VydmVyQHRoYXd0ZS5j
b20wHhcNOTYwODAxMDAwMDAwWhcNMjAxMjMxMjM1OTU5WjCBzjELMAkGA1UEBhMCWkExFTATBgNV
BAgTDFdlc3Rlcm4gQ2FwZTESMBAGA1UEBxMJQ2FwZSBUb3duMR0wGwYDVQQKExRUaGF3dGUgQ29u
c3VsdGluZyBjYzEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lvbjEhMB8G
A1UEAxMYVGhhd3RlIFByZW1pdW0gU2VydmVyIENBMSgwJgYJKoZIhvcNAQkBFhlwcmVtaXVtLXNl
cnZlckB0aGF3dGUuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDSNjZqi9fCW57agUFi
jzjuSQRV1tDvHBuVFkfvGEg1OlL0K2oGjzsv6lbjr4aNnhf3nrRldQJN78sJoiFR2JvQZ9C6DZIG
FHPUk8uXKgCcXE4MvPoVUvzyRG7aEUpuCJ8vLeP5qjqGc7ZGU1jIiQW9gxG4cz+qB430Qk3nQJ0c
NwIDAQABoxMwETAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBBAUAA4GBACZILBbCWProFnQM
qqpfVD/y18l4YF5ebjdjInc2frIXxDS59QiF/MkBOP9NvvIWQkPnu1pG+8HGER/xSrAoRsnDxEJ9
vPqrWW7Vt1GIEeOkhRlrgkykDBKt6aSuP/HDSWWajMXIPiW3lJm7kjJxB/CGXu1QJ6YNpiP5u8um
BxRCAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvM2M4NjBkNTEuMAAA
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
se8WfFelDG12ii9Lv2T7TO6K8PMpfPX/7irg6em6W2QimppvLDomaVEFmSbc1RxqccaafR6d3Xxs
xoxnZ0o++HGwGSepCQymlb9LjAz6VZg72OgioUtxOHmsl5Jps4l+6iFoBpgUlofSYTa8bSdWnlfu
wMBW/TLPpNmOwiPXjajz2CWsl+RwOPS2OrSdO5cmQ6OhvElZckwjMIcBWPZOvhxoVmavzUFdyLNN
KlVGqx/aHuJAPdvNfbmSgJw33QyWZJ3cIvdki99h3hWUUhWgfVLJS6ghycax7cvDlWDRD/CrcPjf
y01+7Nb6q9m9f1Typel5+tnWdiQocwIDAQABoz8wPTAdBgNVHQ4EFgQUoHNJmWjchVtl45soL1ef
vTO8B0gwCwYDVR0PBAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBAGhA
qai75E9debMFtRezYBPrxpJd4NHTav77vpttv8cFbVkgxBzwt9qEWAJj+kgW70+lC/dKmPI/nhut
R2tjzghH61I/eJyvTa741U/PmpgqEEE5UsTd2ZsO75MBrrIuymhCJEJssLM6Ps3p2kjEFcvp+QcP
klBJit0xl1/J6TeqO1lll5QyybOfPjpiWMVJrWIOcaUyqi/GiXZDQBMTZz2iVCUQy/E68tn620lW
u6b+p0E1w+CIYcmIx982ECKYWeqwSvtWFnNurE33IqFPrR16LUUn5TDBXvLaE8slQlGVRwOMbCHM
dELtU/8zi48PVwEWL8+m7slwIhS9/b5sCwMAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwv
Y29uZi9jZXJ0cy9hZWI2NzUzNC4wAAABUYW0qMcABVguNTA5AAAFWjCCBVYwggQ+oAMCAQICEO4r
PevUId4UqGKsBPPdxAEwDQYJKoZIhvcNAQEFBQAwgfMxCzAJBgNVBAYTAkVTMTswOQYDVQQKEzJB
Z2VuY2lhIENhdGFsYW5hIGRlIENlcnRpZmljYWNpbyAoTklGIFEtMDgwMTE3Ni1JKTEoMCYGA1UE
CxMfU2VydmVpcyBQdWJsaWNzIGRlIENlcnRpZmljYWNpbzE1MDMGA1UECxMsVmVnZXUgaHR0cHM6
Ly93d3cuY2F0Y2VydC5uZXQvdmVyYXJyZWwgKGMpMDMxNTAzBgNVBAsTLEplcmFycXVpYSBFbnRp
dGF0cyBkZSBDZXJ0aWZpY2FjaW8gQ2F0YWxhbmVzMQ8wDQYDVQQDEwZFQy1BQ0MwHhcNMDMwMTA3
MjMwMDAwWhcNMzEwMTA3MjI1OTU5WjCB8zELMAkGA1UEBhMCRVMxOzA5BgNVBAoTMkFnZW5jaWEg
Q2F0YWxhbmEgZGUgQ2VydGlmaWNhY2lvIChOSUYgUS0wODAxMTc2LUkpMSgwJgYDVQQLEx9TZXJ2
ZWlzIFB1YmxpY3MgZGUgQ2VydGlmaWNhY2lvMTUwMwYDVQQLEyxWZWdldSBodHRwczovL3d3dy5j
YXRjZXJ0Lm5ldC92ZXJhcnJlbCAoYykwMzE1MDMGA1UECxMsSmVyYXJxdWlhIEVudGl0YXRzIGRl
IENlcnRpZmljYWNpbyBDYXRhbGFuZXMxDzANBgNVBAMTBkVDLUFDQzCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBALMix0/il0KViEeDQPYdF/ODcyQeUfOYisOSuP9AkAVwh2DJAKm1lGUZ
IhUXwkNsZkSaDQQ+OW+lS3qqY7eKRJ3ZY5GEZuAoD7pC426O9xQnk2nukQ6jXw6x62aick8SE4Zl
ej7bTwf0pwlg2jpCmceyf7MWlRzH+TS1lIXVmV6gSKB+5xdluKJ1uB7z5UJ9r+3zikhkXYIUk9jA
5P+zUHLydvazXUJQedCUPmsMAL7Yaw5OKuw+0syCohhlMxN3nppdGhPYw9s9yJd67nDtp+Z823HP
LZRi323W9Ti+P6WFChm4qNgJdUJwxOrvyw7INKgSIpgMuBOUtkvs8NCQ5ycCAwEAAaOB4zCB4DAd
BgNVHREEFjAUgRJlY19hY2NAY2F0Y2VydC5uZXQwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8E
BAMCAQYwHQYDVR0OBBYEFKDDi0SqN6VFv5eAWtHxeKKb6V2NMH8GA1UdIAR4MHYwdAYLKwYBBAH1
eAEDAQowZTAsBggrBgEFBQcCARYgaHR0cHM6Ly93d3cuY2F0Y2VydC5uZXQvdmVyYXJyZWwwNQYI
KwYBBQUHAgIwKRonVmVnZXUgaHR0cHM6Ly93d3cuY2F0Y2VydC5uZXQvdmVyYXJyZWwgMA0GCSqG
SIb3DQEBBQUAA4IBAQCgSFuCAfZNSLg5VTWcgHpTmdVa/7FxO8w5CZRe1trvvgFbXdMe2P19T82g
QeA0k7/L4oacN5KQVhzc6ykF5cSexzXfigzNxSFD6aqI5TXAGUJjWgJepEgYOoVv3J28P52cwYe4
emEI6XcLf3Cret3ZlyxkHoW/vHSWocN6EuwMGm6DDDzockaf+0jVXpfmsaH45O9GJZScidtpOL7s
XA5Wx2VR5VCIiL9C1Ss95fm6ni6zyvRzkgILvkxm6yD+ucu1mX/mthP6yktN2e5TRgY7xk6tk1qB
fmwqS2oFRYzyIaQxkIdsZZydpWCVOlJ/9dGrCG7z7lv5iD1+uG9uA+RCAAAAAgAuL2V4cG9ydC9o
ZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvODk1Y2FkMWEuMAAAAVGFtDDXAAVYLjUwOQAAA1kw
ggNVMIICPaADAgECAgRJMwABMA0GCSqGSIb3DQEBBQUAMDIxCzAJBgNVBAYTAkNOMQ4wDAYDVQQK
EwVDTk5JQzETMBEGA1UEAxMKQ05OSUMgUk9PVDAeFw0wNzA0MTYwNzA5MTRaFw0yNzA0MTYwNzA5
MTRaMDIxCzAJBgNVBAYTAkNOMQ4wDAYDVQQKEwVDTk5JQzETMBEGA1UEAxMKQ05OSUMgUk9PVDCC
ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANM19z9zd63oW3MXwtFv7VW8buropHmybMOj
7+GfsTtIhfWaXCEiECzFgs7a45puN+GHLNy5DFq6iFXf/arbHzHqAfHfOQHBE/1IUiHEVd/a2LNU
drp0sbd918Do9lnFTci9rR8U2t9YRCUyGSrHfn6OrjiwMHtHcgkx8DDbwxt2Kbtpdk5X+RtkopNW
t2+ZbtsKBJwR44Afy2OUEAqp4WSCMfmMJ+2mmQD2cJMY+KE0hqPdesIYefZ6ZTXPkOu9M5OfU6tz
O+abNCAvHe+pHWMaoIDbAy/5JhqG0o27qb5SOodnSA2/tKDYJr4jX3M3fybmkgSjf88gp7fzOsrL
mcsCAwEAAaNzMHEwEQYJYIZIAYb4QgEBBAQDAgAHMB8GA1UdIwQYMBaAFGXyMa0q9/fdUpYKxwLB
Du+m1TsRMA8GA1UdEwEB/wQFMAMBAf8wCwYDVR0PBAQDAgH+MB0GA1UdDgQWBBRl8jGtKvf33VKW
CscCwQ7vptU7ETANBgkqhkiG9w0BAQUFAAOCAQEASzXuzOSuv8NurZ+VO0s/Wx7fVymiWco44rka
/57mbjLdHq7qNbf1k5FO2kLhwxdgUPLRXCa5grfqbeSchOcDeRevmD2U28e6AOe4vwFXwXdFMgw7
8bQcCLD9UaCh3ZodEzaabbfHPLnhxdkX+oPVPRWgPLseC+LIkD+ohgz8+YtehctPW0tiEUfFRXwF
L0GxnhBpG5mW4FV5+06GmbiU2oY4apOj58tu5d/qIVWJnH19f5j1AInu44TAXJa1xUbqRuCFVbYb
yRLWwc3NgPMCATzIactFSGPYlNDshQ47ThFl9IKMpj2uLiKUCchc6jyBXRYqA5cWVQnbikGCnmab
EQAAAAIALy9leHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy9hMGJjNmZiYi4wAAAB
MLsrdy4ABVguNTA5AAAEyTCCBMUwggOtoAMCAQICAQAwDQYJKoZIhvcNAQEFBQAwfTELMAkGA1UE
BhMCRVUxJzAlBgNVBAoTHkFDIENhbWVyZmlybWEgU0EgQ0lGIEE4Mjc0MzI4NzEjMCEGA1UECxMa
aHR0cDovL3d3dy5jaGFtYmVyc2lnbi5vcmcxIDAeBgNVBAMTF0dsb2JhbCBDaGFtYmVyc2lnbiBS
b290MB4XDTAzMDkzMDE2MTQxOFoXDTM3MDkzMDE2MTQxOFowfTELMAkGA1UEBhMCRVUxJzAlBgNV
BAoTHkFDIENhbWVyZmlybWEgU0EgQ0lGIEE4Mjc0MzI4NzEjMCEGA1UECxMaaHR0cDovL3d3dy5j
aGFtYmVyc2lnbi5vcmcxIDAeBgNVBAMTF0dsb2JhbCBDaGFtYmVyc2lnbiBSb290MIIBIDANBgkq
hkiG9w0BAQEFAAOCAQ0AMIIBCAKCAQEAonCi0J9CrlsXx9h9zxSD/E/JobcTr4rXnj4ECpKLYFb6
tDIviE2hYAj0twlOoEkvSdbT352XWp+UBHDsP1nZt8xmi5hSKAkC38UvhI16l3e/7ECdJXKrtT8y
mPu3t/xyhOU1h/lV+qMfDm8uKN1poNlCEMb4tUTC0EN/27zkojxqVXgKd6nY6hkyty/+XD8b7rGY
7MqtemlF45YPVfbm7XXqZegyVpNGiaglimUG7mu/eQfQ8bev7SxNkrvAqF+nZ30E8hUIcKyS1n0E
0jP7TLYLC/saycSNA6l+XPJQqxKloc9IUKXv0sgaE/qwf7GCHHdqD1/cC5WP70N+5kUJJQIBA6OC
AVAwggFMMBIGA1UdEwEB/wQIMAYBAf8CAQwwPwYDVR0fBDgwNjA0oDKgMIYuaHR0cDovL2NybC5j
aGFtYmVyc2lnbi5vcmcvY2hhbWJlcnNpZ25yb290LmNybDAdBgNVHQ4EFgQUQ5w2n7CeME3Gzl+t
EKvlA6X6qRQwDgYDVR0PAQH/BAQDAgEGMBEGCWCGSAGG+EIBAQQEAwIABzAqBgNVHREEIzAhgR9j
aGFtYmVyc2lnbnJvb3RAY2hhbWJlcnNpZ24ub3JnMCoGA1UdEgQjMCGBH2NoYW1iZXJzaWducm9v
dEBjaGFtYmVyc2lnbi5vcmcwWwYDVR0gBFQwUjBQBgsrBgEEAYGHLgoBATBBMD8GCCsGAQUFBwIB
FjNodHRwOi8vY3BzLmNoYW1iZXJzaWduLm9yZy9jcHMvY2hhbWJlcnNpZ25yb290Lmh0bWwwDQYJ
KoZIhvcNAQEFBQADggEBADw7cJH5BFQnkeHt7f5of2Fd5UFlTzLxGAWUahzeH3DbPnsyAjS1DGyh
inyl9I//1NitF9UtBNE/WIDigVmIvsDjRpMk/pC9JqIwLeiXJlc1iXSWGPYV4q8kGVYCArK6DxTq
xopmwYZFVYu+kr6cpATHSTye6Cl6idf+r/9o9aUXkL2smcylhlcJZ0bb1hbCRvHkqVD1j9GSFdNf
PsYASTpuWLLR0ScNJcgy+CARzX0yM0iUVEzd3HnEMJ/rjrhVtdeIXMVqJD2y0wUDUcYH78wUcnQ9
bnLOGCiMSqB35QkrRURHrLdnfwGKBVqTvqHB//jnDmekR0l2XXWQGvUmj/AAAAACAC4vZXhwb3J0
L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy8xMjRiYmQ1NC4wAAABUYWzkkAABVguNTA5AAAE
RzCCBEMwggMroAMCAQICAQEwDQYJKoZIhvcNAQEFBQAwfzELMAkGA1UEBhMCR0IxGzAZBgNVBAgM
EkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENB
IExpbWl0ZWQxJTAjBgNVBAMMHFRydXN0ZWQgQ2VydGlmaWNhdGUgU2VydmljZXMwHhcNMDQwMTAx
MDAwMDAwWhcNMjgxMjMxMjM1OTU5WjB/MQswCQYDVQQGEwJHQjEbMBkGA1UECAwSR3JlYXRlciBN
YW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRowGAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEl
MCMGA1UEAwwcVHJ1c3RlZCBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAN9xbzZYU1ryNlRXgMR0CCDtGH8qHeY1mh4lrJzlln5yUqAVQttZ3WR6GtC4
e905FbxVSMTtOgDqMRG68nF0Gme4zzPMqDGvo+PXf78zLUxqPOyLw5LSU3ckdJwHbnD8vQtbdrpf
8v/XN0tKYHj38PrKcLTqWaqjzkgvqcOyC34XchYMpgcMGzjPyWK3P6CTpYdB8rdwQHfYvhR846jA
eo7pY2rRD5rG0vSLOhQEVtTtuMxu9fviLFi9f09rK/dgJFgkzibvNJE61eOB0LLwBALXW7c+kqxr
Eor55AWwO5FJXLLrU+r4n0eG7r+VwMAGn9JbXhEb9McENSnSVVzk7esCAwEAAaOByTCBxjAdBgNV
HQ4EFgQUxXtYve3aJWnS91kWqLMywHsnW/QwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMB
Af8wgYMGA1UdHwR8MHowPKA6oDiGNmh0dHA6Ly9jcmwuY29tb2RvY2EuY29tL1RydXN0ZWRDZXJ0
aWZpY2F0ZVNlcnZpY2VzLmNybDA6oDigNoY0aHR0cDovL2NybC5jb21vZG8ubmV0L1RydXN0ZWRD
ZXJ0aWZpY2F0ZVNlcnZpY2VzLmNybDANBgkqhkiG9w0BAQUFAAOCAQEAyJOBO4m0r7iEEkyN0vDb
cLpXhhU0ELkvfx6wqIlgoYrCdwxQSpsAi9iL9EHi0IOKShwUBrCjaAVwMTCnU5sO6UqgWGlnDq6d
9qUsQb88BmvkWcxtEPGWbx/f9AQCpJ9FPsjY+jZGRFA/gpeRHyjbGBGMKuRlg1cSEowXP5Q2/l2w
wAR3E7j0FdU/OMyUOlXQrJj1ugBf4IYZgXgvKMB+08xCCvWuUKDRPsahcew/oCCMZjqJtI7U2LFN
JUfuL4jIteEFRcC+FHHeev2Oe31NCJalEnPwLco3J3QSJ0zLtpfp2a4IbVo5QN0FR3VqWiGzoxjP
TvcuV7eYcF7IxHiwYgAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzLzA4
YWVmN2JiLjAAAAFRhbPuAQAFWC41MDkAAATBMIIEvTCCA6WgAwIBAgIBATANBgkqhkiG9w0BAQUF
ADCBhTELMAkGA1UEBhMCVVMxIDAeBgNVBAoMF1dlbGxzIEZhcmdvIFdlbGxzU2VjdXJlMRwwGgYD
VQQLDBNXZWxscyBGYXJnbyBCYW5rIE5BMTYwNAYDVQQDDC1XZWxsc1NlY3VyZSBQdWJsaWMgUm9v
dCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDcxMjEzMTcwNzU0WhcNMjIxMjE0MDAwNzU0WjCB
hTELMAkGA1UEBhMCVVMxIDAeBgNVBAoMF1dlbGxzIEZhcmdvIFdlbGxzU2VjdXJlMRwwGgYDVQQL
DBNXZWxscyBGYXJnbyBCYW5rIE5BMTYwNAYDVQQDDC1XZWxsc1NlY3VyZSBQdWJsaWMgUm9vdCBD
ZXJ0aWZpY2F0ZSBBdXRob3JpdHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDub7S9
eeKPCCGeOARBJe+rWxxTkqxtnt3CxC5FlAM1iGd0V+PfjLindo8796jE2yljDpFoNoqXjopxaAkH
5OjUDk/41itMpBb570OYj7OeUt9tkTmPOL13i0Nj67eT/DBMHAGTthP796EfvyXhdDcsHqRePGj4
S78NuR4uNuip5Kf4D8uCdXw1LSLWwr8L87T8bJVhHlfXBIEyg1J55oNjz7fLY4sR4r1e6/aN7ZVy
KLSsEmLpSjPmgzKuBXWVvYSV2ypcm44uDLiBK0HmOFafSZtsdvqKXfcBeYF8wYNABf5x/Qw/zE5g
CQ5lRxAvAcAFP4/4s0HvWkJ+We/SlwxlAgMBAAGjggE0MIIBMDAPBgNVHRMBAf8EBTADAQH/MDkG
A1UdHwQyMDAwLqAsoCqGKGh0dHA6Ly9jcmwucGtpLndlbGxzZmFyZ28uY29tL3dzcHJjYS5jcmww
DgYDVR0PAQH/BAQDAgHGMB0GA1UdDgQWBBQmlRkQ2eihl5H/3BnZtQQ+0nMKajCBsgYDVR0jBIGq
MIGngBQmlRkQ2eihl5H/3BnZtQQ+0nMKaqGBi6SBiDCBhTELMAkGA1UEBhMCVVMxIDAeBgNVBAoM
F1dlbGxzIEZhcmdvIFdlbGxzU2VjdXJlMRwwGgYDVQQLDBNXZWxscyBGYXJnbyBCYW5rIE5BMTYw
NAYDVQQDDC1XZWxsc1NlY3VyZSBQdWJsaWMgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHmCAQEw
DQYJKoZIhvcNAQEFBQADggEBALkVsUSRzCPIK0134/iaeycNzXK7mQDKfGYZUMbVmO2rvwNa5U3l
HshPcZeG1eMd/ZDJPHV3V3p9+N701NX3leZ0bh08rnyd2wIDBSxxSyU+B+NemvVmFymIGjifz6pB
A4SXa5M4esowRBskRDPQ5NHcKDj0E0M1NSljqHyita04pO2t/caaH/+Xc/77szWnk4bGdpEA5qxR
FsQnMlzbc9qlk1eOPm01JghZ1edE13YgY+esE2fDbbFwRnzVlhE9iW9dqKHrjQrawx0zbKPqZxma
mX9LPYNRKh3KL4YMon4QLSvUFpULB6ouFJJJtylv2G0xffX8oRAHh84vWdw+WNsAAAACAC8vZXhw
b3J0L2hkYTMvNi4xMC40L2xvY2FsL2NvbmYvY2VydHMvNDE2NmVjMGMuMAAAATC7Kz5cAAVYLjUw
OQAAAmAwggJcMIIBxaADAgECAhAKAQEBAAACfAAAAAsAAAACMA0GCSqGSIb3DQEBBQUAMDoxGTAX
BgNVBAoTEFJTQSBTZWN1cml0eSBJbmMxHTAbBgNVBAsTFFJTQSBTZWN1cml0eSAxMDI0IFYzMB4X
DTAxMDIyMjIxMDE0OVoXDTI2MDIyMjIwMDE0OVowOjEZMBcGA1UEChMQUlNBIFNlY3VyaXR5IElu
YzEdMBsGA1UECxMUUlNBIFNlY3VyaXR5IDEwMjQgVjMwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJ
AoGBANXd/mYJzyQ8Pq6BTk6KxGmAW1k737lNTMq1LcMnLTyvAEJtvCimls9/11isgwqjVbV7F5AV
hEyK7iaZ3Fjvxzimqq/QjkLIYterrKn7Sn2/6v4STd3/Ji1vNlRoyNKEVu6SU2EJsz85m6jJm73O
n37UGWoWKRi+1zpp3CVbMxpRAgMBAAGjYzBhMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQD
AgEGMB8GA1UdIwQYMBaAFMTAHKQHlP3NTQHUVNqlDF/ergVaMB0GA1UdDgQWBBTEwBykB5T9zU0B
1FTapQxf3q4FWjANBgkqhkiG9w0BAQUFAAOBgQA/LWrjJkOVfYmXZft15HIdRlfEYWtpnxKbLNVa
6MCi8EOV4x/pds3c67yToGUKx01PX6evokYUuQzzzL1qbred3iVC0FT/nmhzY9wk6yK/qHLyXgDh
DU46Q26ZTj+JeAOYyvNVzJ2ujsGqRZj6jxqgjYgj8RVBDaVGPpE/i+v3cQAAAAIALi9leHBvcnQv
aGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzLzY3NDk1NDM2LjAAAAFRhbQ9lwAFWC41MDkAAAQu
MIIEKjCCAxKgAwIBAgIQYAGXt0an6rS0mtZLL/eQ+zANBgkqhkiG9w0BAQsFADCBrjELMAkGA1UE
BhMCVVMxFTATBgNVBAoTDHRoYXd0ZSwgSW5jLjEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2
aWNlcyBEaXZpc2lvbjE4MDYGA1UECxMvKGMpIDIwMDggdGhhd3RlLCBJbmMuIC0gRm9yIGF1dGhv
cml6ZWQgdXNlIG9ubHkxJDAiBgNVBAMTG3RoYXd0ZSBQcmltYXJ5IFJvb3QgQ0EgLSBHMzAeFw0w
ODA0MDIwMDAwMDBaFw0zNzEyMDEyMzU5NTlaMIGuMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMdGhh
d3RlLCBJbmMuMSgwJgYDVQQLEx9DZXJ0aWZpY2F0aW9uIFNlcnZpY2VzIERpdmlzaW9uMTgwNgYD
VQQLEy8oYykgMjAwOCB0aGF3dGUsIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTEkMCIG
A1UEAxMbdGhhd3RlIFByaW1hcnkgUm9vdCBDQSAtIEczMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A
MIIBCgKCAQEAsr8nLPvb2FvdeHsbnndmgcs+vHyu86YnmjSjaDFxODNi5PNxZnmxqWWjpYvVj2At
P0LMqmsywCPLLEHd5N/8YZzic7IilRFDGF/Eth9XbAoFWCLINkw6fKXRz4aviKdEAhN0cXMKQlkC
+BsUa0Lfb1+6a4KinVvnSr0eAXLbS3ToO39/fR8EtCab4LRarEc9VbjXsCZSKAExQGbY2SS99irY
7CFJXJv2eul/VTV+lmuNk5Mny5K76qxAwJ/C+IDPXfRa3M50hqY+bAtTyr2SzhkGcuYMXDhpxwTW
vGzOW/b3aJzcJRVIiKHpqfiYnODz1TEoYRFsZ5aNOZnLwkUkOQIDAQABo0IwQDAPBgNVHRMBAf8E
BTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUrWyqlGCc7eT/+j4KdCtjA/e2Wb8wDQYJ
KoZIhvcNAQELBQADggEBABpA2JVlrAmSicY59BDlqQ5mU1143vokkbvnRFHfxhY0Cu9qRFHqKweK
A3rD6z8KLFIWoCtDuSWQP3CpMyVtRRooOyfPqsMpQhvfO0zAMzRbQYi/aytlryjvsvXDqmbOe1bu
t8jLZ8HJnBoYuMTDSQPxYA5QzUbF83d597YV4Djbxy8ooAw/dyZ02SUS2jHaGh7cKUGRIjxpp7sC
8rZcJwOJ9Abqm+RyguOhCcHpABnTPtRwa7pxpqpYrvS76Wy274fMm7v/OeZWYdMKp8RcTGB7BXcm
er/YB1IsYvdwY9k5vG8cwnncdimvzsUsZAReiDZuMdRAGmI0Nj81Aa6sY6AAAAACAC8vZXhwb3J0
L2hkYTMvNi4xMC40L2xvY2FsL2NvbmYvY2VydHMvOWVjM2E1NjEuMAAAATC7K26UAAVYLjUwOQAA
BKYwggSiMIIDiqADAgECAhBEvgyLUAAktBHTNiUlZ8mJMA0GCSqGSIb3DQEBBQUAMIGuMQswCQYD
VQQGEwJVUzELMAkGA1UECBMCVVQxFzAVBgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYDVQQKExVU
aGUgVVNFUlRSVVNUIE5ldHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cudXNlcnRydXN0LmNvbTE2
MDQGA1UEAxMtVVROLVVTRVJGaXJzdC1DbGllbnQgQXV0aGVudGljYXRpb24gYW5kIEVtYWlsMB4X
DTk5MDcwOTE3Mjg1MFoXDTE5MDcwOTE3MzY1OFowga4xCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJV
VDEXMBUGA1UEBxMOU2FsdCBMYWtlIENpdHkxHjAcBgNVBAoTFVRoZSBVU0VSVFJVU1QgTmV0d29y
azEhMB8GA1UECxMYaHR0cDovL3d3dy51c2VydHJ1c3QuY29tMTYwNAYDVQQDEy1VVE4tVVNFUkZp
cnN0LUNsaWVudCBBdXRoZW50aWNhdGlvbiBhbmQgRW1haWwwggEiMA0GCSqGSIb3DQEBAQUAA4IB
DwAwggEKAoIBAQCyOYWk8n2rQTtiRjeuzcFgdbw5ZflKGkeiucxIzGqY1U01GbmkQuXOSeKKLx58
0jEHx060g2SdLinVomTEhb2FUTV5pE5okHsceqSSqBfymBXyk8zJpDKVuwxPML2YoAuL5W4bokb6
eLyib6tZXqUvz8rabaov66yhs2qqty5nNYt54R5piOLmRs2gpeq+C852OnoOm+r82idbPXMfIuZI
YcZM82mxqC4bttQxICy8goqOpA6l14lD/BZarx1x1xFZ2rqHDa/68+HC8KTFZ4zW1lQ63gqkugN3
s2XI/R7TdGKqGMpokx6hhX71R2XL+E1XKHTSNP8wtu72YjAUjCzrAgMBAAGjgbkwgbYwCwYDVR0P
BAQDAgHGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFImCZ33EnSZwAEu0UEh83j2uBG59MFgG
A1UdHwRRME8wTaBLoEmGR2h0dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9VVE4tVVNFUkZpcnN0LUNs
aWVudEF1dGhlbnRpY2F0aW9uYW5kRW1haWwuY3JsMB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEF
BQcDBDANBgkqhkiG9w0BAQUFAAOCAQEAsW1hXaYaf3yrSuQw/FNvJSTGyu3iMVwrDu7uYVVvBD7P
Od7FG0mU5OsgTLTmnlAuctmN9aqjs0raVhxgl4DcgqKtSr2KK/8LCbTG1yAEReTNgAG6uituzqrX
kv7kr+v0Jh0WKn9sMJU3LzMSrH/dx9ERjFGYstCjkdCt9p+eg5MeHUK4Rq9rZvCbf+rjAwLlAlHB
qtU1nXJAA4m6MR3FEGhSnt+ihcVcCKZ45lNPsei30xSek6bDZOOsfnHNvJ/pAxvM++msMcGvfBV0
ApnDskemwjJh18dvSCRRJ6HVh1Xye4+YPRae7nW2+NCO8vPGrihbp/DzNhf8wwXTygNKVAAAAAIA
Li9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzL2U4NjUxMDgzLjAAAAFRhbRioAAF
WC41MDkAAAQOMIIECjCCAvKgAwIBAgIJAMJ+QwRORz8ZMA0GCSqGSIb3DQEBCwUAMIGCMQswCQYD
VQQGEwJIVTERMA8GA1UEBwwIQnVkYXBlc3QxFjAUBgNVBAoMDU1pY3Jvc2VjIEx0ZC4xJzAlBgNV
BAMMHk1pY3Jvc2VjIGUtU3ppZ25vIFJvb3QgQ0EgMjAwOTEfMB0GCSqGSIb3DQEJARYQaW5mb0Bl
LXN6aWduby5odTAeFw0wOTA2MTYxMTMwMThaFw0yOTEyMzAxMTMwMThaMIGCMQswCQYDVQQGEwJI
VTERMA8GA1UEBwwIQnVkYXBlc3QxFjAUBgNVBAoMDU1pY3Jvc2VjIEx0ZC4xJzAlBgNVBAMMHk1p
Y3Jvc2VjIGUtU3ppZ25vIFJvb3QgQ0EgMjAwOTEfMB0GCSqGSIb3DQEJARYQaW5mb0BlLXN6aWdu
by5odTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOn4j/NjrdqG2KfgQvvPkd6mJviZ
pWNwrZuuyjNAfW2WbqEORO7hE52UQlKavXWFdCyoDh2Tthi3jCyoz/tccbna7P7ofo/kLx2yqHWH
2Leh5TvPmUpG0IMZfcChEhyVbUr02MelTTMuhTlAdX4UfIASmFDHQWe4oIBhVKZsTh/gnQ4H6cm6
M+f+wFUoLAKApxn1ntxVUwOXewdI/5n7N4okxFnMUBBjjqqpGrCEGob5X7uxUG6k0QrM1XF+H6cb
fPVTbiJfyyvm1HxdrtbCxkzlBQHZ7Vf8wSN5/PrIJIOV87VqUQHQd9bpEqH5GoP7ghu5sJf0dgYz
Q0mg/wu1+rUCAwEAAaOBgDB+MA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1Ud
DgQWBBTLD8bfQkPMPcu1SCOhGnqmKrs0aDAfBgNVHSMEGDAWgBTLD8bfQkPMPcu1SCOhGnqmKrs0
aDAbBgNVHREEFDASgRBpbmZvQGUtc3ppZ25vLmh1MA0GCSqGSIb3DQEBCwUAA4IBAQDJ0Q5eLtXM
s3w+y/w9/w0olZMEyL/azXm4Q5DwpL7v8u8hmLzU1F0G9u5C7DBsoKqpyvGvivo/C3NqPuouQH4f
rlRheesuCDfXI/OMn74dseGkddug4lQUsbocKaQY9hK6ohQU4zE1yED/t+AFdlfBHFny+L/k7SVi
XITwfn4fs775tyERzAMBVnCnEJIeGzSBHq2cGsMEPO0CYdYeBvNfOofyK/FFh+U9rNHHV4S9a67c
2Pm2G2JwCz02yULyMtd6YebS2z3PyKnJm9zbWETXbzivf3jTo60adbocwTZ8jx5tHMN1Rq41Bab2
XD0h7lbwyYIiLXpUq3DDfSJlgnCWAAAAAgAvL2V4cG9ydC9oZGEzLzYuMTAuNC9sb2NhbC9jb25m
L2NlcnRzL2VkNTI0Y2Y1LjAAAAEwuysR5gAFWC41MDkAAATcMIIE2DCCBEGgAwIBAgIEN0rSQzAN
BgkqhkiG9w0BAQUFADCBwzELMAkGA1UEBhMCVVMxFDASBgNVBAoTC0VudHJ1c3QubmV0MTswOQYD
VQQLEzJ3d3cuZW50cnVzdC5uZXQvQ1BTIGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTEl
MCMGA1UECxMcKGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDE6MDgGA1UEAxMxRW50cnVzdC5u
ZXQgU2VjdXJlIFNlcnZlciBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw05OTA1MjUxNjA5NDBa
Fw0xOTA1MjUxNjM5NDBaMIHDMQswCQYDVQQGEwJVUzEUMBIGA1UEChMLRW50cnVzdC5uZXQxOzA5
BgNVBAsTMnd3dy5lbnRydXN0Lm5ldC9DUFMgaW5jb3JwLiBieSByZWYuIChsaW1pdHMgbGlhYi4p
MSUwIwYDVQQLExwoYykgMTk5OSBFbnRydXN0Lm5ldCBMaW1pdGVkMTowOAYDVQQDEzFFbnRydXN0
Lm5ldCBTZWN1cmUgU2VydmVyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIGdMA0GCSqGSIb3DQEB
AQUAA4GLADCBhwKBgQDNKIM0VBuJ8w+vN5Ex/68xYMmo6LIQaO2f55M28Qpku0f1BBc/I0dNxScZ
gSYMVHINiC3ZH5oSn7yzcdOAGT9HZnuMNSjSuQrfJNqc1lB5gXpa0zf3wkrYKZImZNHkmGw6AIr1
NJtl+O3jEP/9uElY3KDegjlrgbEWGWG5VLbmQwIBA6OCAdcwggHTMBEGCWCGSAGG+EIBAQQEAwIA
BzCCARkGA1UdHwSCARAwggEMMIHeoIHboIHYpIHVMIHSMQswCQYDVQQGEwJVUzEUMBIGA1UEChML
RW50cnVzdC5uZXQxOzA5BgNVBAsTMnd3dy5lbnRydXN0Lm5ldC9DUFMgaW5jb3JwLiBieSByZWYu
IChsaW1pdHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMTk5OSBFbnRydXN0Lm5ldCBMaW1pdGVkMTow
OAYDVQQDEzFFbnRydXN0Lm5ldCBTZWN1cmUgU2VydmVyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5
MQ0wCwYDVQQDEwRDUkwxMCmgJ6AlhiNodHRwOi8vd3d3LmVudHJ1c3QubmV0L0NSTC9uZXQxLmNy
bDArBgNVHRAEJDAigA8xOTk5MDUyNTE2MDk0MFqBDzIwMTkwNTI1MTYwOTQwWjALBgNVHQ8EBAMC
AQYwHwYDVR0jBBgwFoAU8BdiE1U9s/8KAGv7UISX8+1i0BowHQYDVR0OBBYEFPAXYhNVPbP/CgBr
+1CEl/PtYtAaMAwGA1UdEwQFMAMBAf8wGQYJKoZIhvZ9B0EABAwwChsEVjQuMAMCBJAwDQYJKoZI
hvcNAQEFBQADgYEAkNwwAvpkdMKnCqV8IY00F6j7Rw7/JXyNEwr75Ji174z4xRAN95K+8cPV1ZVq
BLssziY2ZcgxxufuP+NXdYR6Ee9GTxj005i7qIcyunL2POI9n9cd2cNgQ4xYDiKWL2KjLB+6rQXv
qzJ4h6BUcxm1XAX5Uj5tLUUL9wqT6u0G+bIAAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40L2xvY2Fs
L2NvbmYvY2VydHMvMTI4YjljOGQuMAAAATC7Kva1AAVYLjUwOQAAA9wwggPYMIICwAIRANAeQIsA
AAJ8AAAAAgAAAAEwDQYJKoZIhvcNAQEFBQAwgakxCzAJBgNVBAYTAnVzMQ0wCwYDVQQIEwRVdGFo
MRcwFQYDVQQHEw5TYWx0IExha2UgQ2l0eTEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1
c3QgQ28uMREwDwYDVQQLEwhEU1RDQSBYMTEWMBQGA1UEAxMNRFNUIFJvb3RDQSBYMTEhMB8GCSqG
SIb3DQEJARYSY2FAZGlnc2lndHJ1c3QuY29tMB4XDTk4MTIwMTE4MTg1NVoXDTA4MTEyODE4MTg1
NVowgakxCzAJBgNVBAYTAnVzMQ0wCwYDVQQIEwRVdGFoMRcwFQYDVQQHEw5TYWx0IExha2UgQ2l0
eTEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QgQ28uMREwDwYDVQQLEwhEU1RDQSBY
MTEWMBQGA1UEAxMNRFNUIFJvb3RDQSBYMTEhMB8GCSqGSIb3DQEJARYSY2FAZGlnc2lndHJ1c3Qu
Y29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0sYmtuelPcHEaNVQb1PFb0kTCbiv
LEiNFGqjF19a+dMudS/YKGLRky/8TdSrh+UIx5nnkj91vesltBXBmxk90kSN13QgbTcCj2mTW4rE
GZ30sg78Fmy5sQWSg9GFLGCUPkVVoNmrCCHmYOg7dPKZUFFo0AMtsYC+o9hSsETNQ0pwjliFleFO
LNYtQW/WhOfImETKR9ssJKVpJs9ruCdiw/TJepIj7RNngq5FLkXlfnI/hZ2UYhDmPJGhrXcA4BXs
84SAcnqObmCXxyRZEDSDW+GlpGm2VzUceFnG0y86c2fulMoEEwViBnAjs/R87kXZZAtbSaqkQ84m
xEQSbLjdeQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCiN7I/afvXhnlUSTGVMyvz0QkUSWJghqWw
EeJQwh0GVz4t6DNkvpuqrV8bTdSZlaKLmslicrVp6tlYqzXtFaJD1ra8B3llZHN913nKe9VaUcbh
UwSWjTjPoxesOXFrAcOLUzxj6e55wOS+kjJkerMfl5RiveqyIBWV+5fyeC9jNkA440YPHd2slcrn
S5B7sUup1MXrmtqq1aOUFEaNLR/zOtaTOvY+efzo5rB17e49yXDHXaqBS0YlHMdsFeOVTg+qMjeU
ChckkhOEWNJjbyv35ltiCxMXsA1STP7+b1zikW4d/aRi12j6jnpP0gjak9zwkhF60Nxykwxzk2KF
aND0AAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvZjY0ZDk3MTUuMAAA
AUrnGJe4AAVYLjUwOQAAArswggK3MIICIAIBADANBgkqhkiG9w0BAQQFADCBozELMAkGA1UEBhMC
RVMxEjAQBgNVBAgTCUJBUkNFTE9OQTESMBAGA1UEBxMJQkFSQ0VMT05BMRkwFwYDVQQKExBJUFMg
U2VndXJpZGFkIENBMRgwFgYDVQQLEw9DZXJ0aWZpY2FjaW9uZXMxFzAVBgNVBAMTDklQUyBTRVJW
SURPUkVTMR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXMwHhcNOTgwMTAxMjMyMTA3WhcN
MDkxMjI5MjMyMTA3WjCBozELMAkGA1UEBhMCRVMxEjAQBgNVBAgTCUJBUkNFTE9OQTESMBAGA1UE
BxMJQkFSQ0VMT05BMRkwFwYDVQQKExBJUFMgU2VndXJpZGFkIENBMRgwFgYDVQQLEw9DZXJ0aWZp
Y2FjaW9uZXMxFzAVBgNVBAMTDklQUyBTRVJWSURPUkVTMR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFp
bC5pcHMuZXMwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAKxPUnSfOeqO3CXEvJhdmGQkCTwh
s8wZtY6UjofR+Dc+ocgtWKSANVuhdWwdRQwfYWNqXm+bCkzByLhhIzWB//6seHAtaOE6B5iVAlTd
zSO3gFPXyDdFcgYkEroTYSGKbnUo4MUPNP022EV/4bg277PhxiCO6LQ4vOE+9hHejJ0BAgMBAAEw
DQYJKoZIhvcNAQEEBQADgYEALPPDeVgk3sY70eBCabjuZLM9YgG5s4TfI33dmM8Qqf4A2CKWBRMH
VFfFp97L2biIQvaZ2xR3H7b+JT3hoj4DqYHSLWxH9ZZGjCKryMwNDpdei0G0O8QKBkAd3Ub0Ad26
gi48PXhwnnwY0Kv4uHcHRnHxygtjXGr5cpTVAU+g20IAAAACAC4vZXhwb3J0L2hkYTMvNy4yLjAv
bG9jYWwvY29uZi9jZXJ0cy9lMjhmNmJiYy4wAAABSucYTjUABVguNTA5AAADojCCA54wggMHoAMC
AQICECto1KNGnsU7KAmrOF1/JyAwDQYJKoZIhvcNAQEFBQAwXzELMAkGA1UEBhMCVVMxFzAVBgNV
BAoTDlZlcmlTaWduLCBJbmMuMTcwNQYDVQQLEy5DbGFzcyAxIFB1YmxpYyBQcmltYXJ5IENlcnRp
ZmljYXRpb24gQXV0aG9yaXR5MB4XDTAwMDgwNDAwMDAwMFoXDTA0MDgwMzIzNTk1OVowgacxFzAV
BgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTsw
OQYDVQQLEzJUZXJtcyBvZiB1c2UgYXQgaHR0cHM6Ly93d3cudmVyaXNpZ24uY29tL1JQQSAoYykw
MDEuMCwGA1UEAxMlQ2xhc3MgMSBQdWJsaWMgUHJpbWFyeSBPQ1NQIFJlc3BvbmRlcjCBnzANBgkq
hkiG9w0BAQEFAAOBjQAwgYkCgYEAue1eejp3X85fOlL8zWT3cbVvapbGWZJVlF0vWy7BEeomisun
gTz2WkTeehMv/VpR2Xs3JkrAJz8EA2pWwYMs4W9bqVRQJErGLnpMoVs3VCQhMR+heBh2p7Fw2iLQ
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
BgNVBAoTB0VxdWlmYXgxLTArBgNVBAsTJEVxdWlmYXggU2VjdXJlIENlcnRpZmljYXRlIEF1dGhv
cml0eTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAwV2xWGcIYu6gmi0fCG2RFGiYCh7+2gRv
E4RiIcPRfM6fBeC4AfBONOziipUEZKzxa1NfBbPLZ4C/QgKO/t0BCezhABRP/PvwDN1Dulsr4R+A
cJkVV5MW8Q+XarfCaCMczE1ZMKxRHjuvK9buY0V7xdlfUNLjUA86iOe/FP3gx7kCAwEAAaOCAQkw
ggEFMHAGA1UdHwRpMGcwZaBjoGGkXzBdMQswCQYDVQQGEwJVUzEQMA4GA1UEChMHRXF1aWZheDEt
MCsGA1UECxMkRXF1aWZheCBTZWN1cmUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MQ0wCwYDVQQDEwRD
UkwxMBoGA1UdEAQTMBGBDzIwMTgwODIyMTY0MTUxWjALBgNVHQ8EBAMCAQYwHwYDVR0jBBgwFoAU
SOZo+SvSspXXR9gjIBBPM5iQn9QwHQYDVR0OBBYEFEjmaPkr0rKV10fYIyAQTzOYkJ/UMAwGA1Ud
EwQFMAMBAf8wGgYJKoZIhvZ9B0EABA0wCxsFVjMuMGMDAgbAMA0GCSqGSIb3DQEBBQUAA4GBAFjO
Ker89961zgK5F7WF0bnj4JXMJTENAKaSbn+2kmOeUJXRmm/kEd5jhW6Y7qj/WsjTVbJmcVfewCHr
PSqnI0kBBIZCe/zuf6IWUrVnZ9NA2zsmWLIodz2uFHdh1voqZiegDfqnc1zqcPGUIWVEX/r87ylo
qaKHee9570+sB3c4AAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvNmZj
YzEyNWQuMAAAAVGFs4tbAAVYLjUwOQAAA6YwggOiMIICiqADAgECAhAThjVNHT8G8sH5ZQXVkBxi
MA0GCSqGSIb3DQEBBQUAMGsxCzAJBgNVBAYTAlVTMQ0wCwYDVQQKEwRWSVNBMS8wLQYDVQQLEyZW
aXNhIEludGVybmF0aW9uYWwgU2VydmljZSBBc3NvY2lhdGlvbjEcMBoGA1UEAxMTVmlzYSBlQ29t
bWVyY2UgUm9vdDAeFw0wMjA2MjYwMjE4MzZaFw0yMjA2MjQwMDE2MTJaMGsxCzAJBgNVBAYTAlVT
MQ0wCwYDVQQKEwRWSVNBMS8wLQYDVQQLEyZWaXNhIEludGVybmF0aW9uYWwgU2VydmljZSBBc3Nv
Y2lhdGlvbjEcMBoGA1UEAxMTVmlzYSBlQ29tbWVyY2UgUm9vdDCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAK9X3lYebqHaYLGUJ8sX2wc/gIVPyJy20PRvT8+Z2OHbwkhcOqw5M8cfaosm
PSs19UixkcECTgSWkXuwM/CxFE4Rb7VArxtFpUrvfras8qAfWD8SRmA8jaHgfc9XPjMe+0fxqhWX
B1VmpbUtLtiAWbKnDbdG7CFj/zWrpQLPKvRM/nv1lF2ETajyYI/bDiU8n3Nxz5TfSurb33I4jPOW
vfEXvNK6O0Vaxqf2xheLAZ38Gagqgxa4Okj+Tj6gqwYZ6VPzgBMH7S2/Pwo8VSA5LCwAaXSVSrwg
sql55RiJkajcHE3vu343C13+OaWIUowAbOwYfEG99ot1d7pgnYTn/i0CAwEAAaNCMEAwDwYDVR0T
AQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFBU4gw8/LD9wMx7NRv4HjCDg18O3
MA0GCSqGSIb3DQEBBQUAA4IBAQBf8UF9fFwIuSvg1ZJH+mdcpRPDAyGbK0yJRs9ZTcn+pUC2Y83d
cSiVZxHMJKzTRGxxrgEgawOijxi3KTp95RZgU3g8wK8Vg/ePUjMkvWSTl+6L99sYqG1xs/csF9B0
JWn3/ms8lL5NS0GMTuJz0OOQInNDzfPv6nPORYqwpkn/TH2dcYjEdh2QWx3u/cz37v1gpbF6FnHR
FtB8EjxsaZfbrl85mnAvBTwZRgSZIDbQYG5hBrsWQoxw9zD74NtmowABveYs2pFfoEaLTWqcPT3d
BUb+dr+gCjzkAOYnt/+ELd66IieWEHHrIu3f3zOcz+Otro7UjuZPUa8WkuBc9gcPAAAAAgAvL2V4
cG9ydC9oZGEzLzYuMTAuNC9sb2NhbC9jb25mL2NlcnRzLzk1NzUwODE2LjAAAAEwuystYgAFWC41
MDkAAAPRMIIDzTCCAzagAwIBAgIQU2GyYK7bcY6nlLMTM/QHCTANBgkqhkiG9w0BAQUFADCBwTEL
MAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMTwwOgYDVQQLEzNDbGFzcyAzIFB1
YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIxOjA4BgNVBAsTMShjKSAx
OTk4IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxHzAdBgNVBAsTFlZl
cmlTaWduIFRydXN0IE5ldHdvcmswHhcNMDAwOTI2MDAwMDAwWhcNMTAwOTI1MjM1OTU5WjCBpTEX
MBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdvcmsx
OzA5BgNVBAsTMlRlcm1zIG9mIHVzZSBhdCBodHRwczovL3d3dy52ZXJpc2lnbi5jb20vcnBhIChj
KTAwMSwwKgYDVQQDEyNWZXJpU2lnbiBUaW1lIFN0YW1waW5nIEF1dGhvcml0eSBDQTCBnzANBgkq
hkiG9w0BAQEFAAOBjQAwgYkCgYEA0hmdZ8IAIVlizrQJIkRpivglWtvtDbc2fk7gu5Q+kCWHwmFH
Kdm9VLhjzCx9abQzNvQ3B5rB3UBU/OB4naCTuQk9I1F/RMIUdNsKvsvJMDRAmD7Q1yUQgZS9B0+c
1lQn3y6ov8uQjI11S7zi6ESHzeZBCiVu6PQkAsVSD27smHUCAwEAAaOB3zCB3DAPBgNVHRMECDAG
AQH/AgEAMEUGA1UdIAQ+MDwwOgYMYIZIAYb4RQEHFwEDMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8v
d3d3LnZlcmlzaWduLmNvbS9ycGEwMQYDVR0fBCowKDAmoCSgIoYgaHR0cDovL2NybC52ZXJpc2ln
bi5jb20vcGNhMy5jcmwwCwYDVR0PBAQDAgEGMEIGCCsGAQUFBwEBBDYwNDAyBggrBgEFBQcwAaYm
FiRodHRwOi8vb2NzcC52ZXJpc2lnbi5jb20vb2NzcC9zdGF0dXMwDQYJKoZIhvcNAQEFBQADgYEA
gnBold+2DcIBcBlK0lRWHqzyRUyHuPU163hLBanInTsZIS5wNEqi9YngFXVF5yg3ADQnKeg3S/Lv
RJdrF1Eaw1adPBqK9kpGRjeM+sv1ZFo4aC4cw+9wzrhGBha/937ntag+RaypJXUie28/sJyU58dz
q6wf7iWbwBbtt8pb8BQAAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40L2xvY2FsL2NvbmYvY2VydHMv
OGY3Yjk2YzQuMAAAATC7Kxs8AAVYLjUwOQAAAyQwggMgMIICiaADAgECAgQ3cM+1MA0GCSqGSIb3
DQEBBQUAME4xCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5FcXVpZmF4IFNlY3VyZTEmMCQGA1UECxMd
RXF1aWZheCBTZWN1cmUgZUJ1c2luZXNzIENBLTIwHhcNOTkwNjIzMTIxNDQ1WhcNMTkwNjIzMTIx
NDQ1WjBOMQswCQYDVQQGEwJVUzEXMBUGA1UEChMORXF1aWZheCBTZWN1cmUxJjAkBgNVBAsTHUVx
dWlmYXggU2VjdXJlIGVCdXNpbmVzcyBDQS0yMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDk
OTmTHlIGGyg2+LKjKcXtjrIRvf7r57R0wo//BefZnQa/Esg/DvLW0SSyEd7RcwmK1LEsmAkNHlBG
soOmRY1iaLuFGyBwMqpAzaaWX8RxNz8E87dBJDkHGh4uYVigEgvlpd/Fq+o3ccwcyDc6uZdSp6zF
aiSUTpx7z8Bq1t8hvQIDAQABo4IBCTCCAQUwcAYDVR0fBGkwZzBloGOgYaRfMF0xCzAJBgNVBAYT
AlVTMRcwFQYDVQQKEw5FcXVpZmF4IFNlY3VyZTEmMCQGA1UECxMdRXF1aWZheCBTZWN1cmUgZUJ1
c2luZXNzIENBLTIxDTALBgNVBAMTBENSTDEwGgYDVR0QBBMwEYEPMjAxOTA2MjMxMjE0NDVaMAsG
A1UdDwQEAwIBBjAfBgNVHSMEGDAWgBRQngvqr165IEimUGrL/dggeqeCdjAdBgNVHQ4EFgQUUJ4L
6q9euSBIplBqy/3YIHqngnYwDAYDVR0TBAUwAwEB/zAaBgkqhkiG9n0HQQAEDTALGwVWMy4wYwMC
BsAwDQYJKoZIhvcNAQEFBQADgYEADIaCrehOGvWOiSfiNVg9KbQHjzZQlb9uwZ7rxJCyhai7t0Lg
Dwc53/uekLLRwT5TnwNEsH5L9G/kfB/n4rHkuJrvw73O3gsyNNneKO0za8TU1z0SWKt9CS3LcPUT
ipShJ6TWcMVtlLXJfZ2g0sYISdlmm6bT9AvcxSZX4ZEw6s0AAAACAC4vZXhwb3J0L2hkYTMvNy40
LjAvbG9jYWwvY29uZi9jZXJ0cy9hZGQ2NzM0NS4wAAABUYWzsGIABVguNTA5AAAGgTCCBn0wggVl
oAMCAQICAgEDMA0GCSqGSIb3DQEBBAUAMIGvMQswCQYDVQQGEwJIVTEQMA4GA1UECBMHSHVuZ2Fy
eTERMA8GA1UEBxMIQnVkYXBlc3QxJzAlBgNVBAoTHk5ldExvY2sgSGFsb3phdGJpenRvbnNhZ2kg
S2Z0LjEaMBgGA1UECxMRVGFudXNpdHZhbnlraWFkb2sxNjA0BgNVBAMTLU5ldExvY2sgS296amVn
eXpvaSAoQ2xhc3MgQSkgVGFudXNpdHZhbnlraWFkbzAeFw05OTAyMjQyMzE0NDdaFw0xOTAyMTky
MzE0NDdaMIGvMQswCQYDVQQGEwJIVTEQMA4GA1UECBMHSHVuZ2FyeTERMA8GA1UEBxMIQnVkYXBl
c3QxJzAlBgNVBAoTHk5ldExvY2sgSGFsb3phdGJpenRvbnNhZ2kgS2Z0LjEaMBgGA1UECxMRVGFu
dXNpdHZhbnlraWFkb2sxNjA0BgNVBAMTLU5ldExvY2sgS296amVneXpvaSAoQ2xhc3MgQSkgVGFu
dXNpdHZhbnlraWFkbzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALx0jA+7TPQ3HqkF
gtjm4Wxw6ni1btE4RA2og85d0tbVgcXUS+dblHAm2zudakxi93HzZNZhOz3rc6M32c/qjJI7zfcH
3GZ0l/RFIt30XOC/bfO+ZTPkFTq/25iQVTjE7aZVYwuweAT0427BP478UXgfkp6Dwv7ZsKnJvFoA
/6momHT79iw+FTkNtgRVqA6YIEKzsSWtfppvXVOxqwz86+DzerOos/9G9mOi2DqYe7ashf+wJU90
Y+cTB6UKjwX3wGRvfqcngJbe1C6GYMdrK15zexfnkT9kDNhLIjQrmzLySB+foQqEeuLCrZc9jtXB
+VajUOnGtPqYou6V5ioDjN8CAwEAAaOCAp8wggKbMA4GA1UdDwEB/wQEAwIABjASBgNVHRMBAf8E
CDAGAQH/AgEEMBEGCWCGSAGG+EIBAQQEAwIABzCCAmAGCWCGSAGG+EIBDQSCAlEWggJNRklHWUVM
RU0hIEV6ZW4gdGFudXNpdHZhbnkgYSBOZXRMb2NrIEtmdC4gQWx0YWxhbm9zIFN6b2xnYWx0YXRh
c2kgRmVsdGV0ZWxlaWJlbiBsZWlydCBlbGphcmFzb2sgYWxhcGphbiBrZXN6dWx0LiBBIGhpdGVs
ZXNpdGVzIGZvbHlhbWF0YXQgYSBOZXRMb2NrIEtmdC4gdGVybWVrZmVsZWxvc3NlZy1iaXp0b3Np
dGFzYSB2ZWRpLiBBIGRpZ2l0YWxpcyBhbGFpcmFzIGVsZm9nYWRhc2FuYWsgZmVsdGV0ZWxlIGF6
IGVsb2lydCBlbGxlbm9yemVzaSBlbGphcmFzIG1lZ3RldGVsZS4gQXogZWxqYXJhcyBsZWlyYXNh
IG1lZ3RhbGFsaGF0byBhIE5ldExvY2sgS2Z0LiBJbnRlcm5ldCBob25sYXBqYW4gYSBodHRwczov
L3d3dy5uZXRsb2NrLm5ldC9kb2NzIGNpbWVuIHZhZ3kga2VyaGV0byBheiBlbGxlbm9yemVzQG5l
dGxvY2submV0IGUtbWFpbCBjaW1lbi4gSU1QT1JUQU5UISBUaGUgaXNzdWFuY2UgYW5kIHRoZSB1
c2Ugb2YgdGhpcyBjZXJ0aWZpY2F0ZSBpcyBzdWJqZWN0IHRvIHRoZSBOZXRMb2NrIENQUyBhdmFp
bGFibGUgYXQgaHR0cHM6Ly93d3cubmV0bG9jay5uZXQvZG9jcyBvciBieSBlLW1haWwgYXQgY3Bz
QG5ldGxvY2submV0LjANBgkqhkiG9w0BAQQFAAOCAQEASCRG97pWb/rIKANATuUxOWsma1N/29/f
83E9JsAUDsZneyOoDHPdAbvGym43OVXVx4xWIA4oCg7SKqSwSVLGOAf+vgoJjNGYz8raFDGhT9I5
/A8RLEPD3auTx1U+R3wYGgDc83vY8n9SbCD0C19pUvTu+LIpYOvjSTEhDda1EEHiQQls4hqaVkt3
Avagm5onh+hVKXHCkJ9FeBrhFWQ90A7YoHafrsXQLurWD1bsZH9amxRYASd+E1DHayrmaDy/XKAK
G+EOeunigMPp6fb9bBGe0OUoJytUMkIUgnXmSvArZnVjjKL7BD6DDps28BjkJiDDjPAoB608F2aI
tf22iAAAAAIALy9leHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy80MTg0ZGUzOS4w
AAABMLsrXbUABVguNTA5AAAIPDCCCDgwggehoAMCAQICAQAwDQYJKoZIhvcNAQEFBQAwggEeMQsw
CQYDVQQGEwJFUzESMBAGA1UECBMJQmFyY2Vsb25hMRIwEAYDVQQHEwlCYXJjZWxvbmExLjAsBgNV
BAoTJUlQUyBJbnRlcm5ldCBwdWJsaXNoaW5nIFNlcnZpY2VzIHMubC4xKzApBgNVBAoUImlwc0Bt
YWlsLmlwcy5lcyBDLkkuRi4gIEItNjA5Mjk0NTIxNDAyBgNVBAsTK0lQUyBDQSBUaW1lc3RhbXBp
bmcgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxNDAyBgNVBAMTK0lQUyBDQSBUaW1lc3RhbXBpbmcg
Q2VydGlmaWNhdGlvbiBBdXRob3JpdHkxHjAcBgkqhkiG9w0BCQEWD2lwc0BtYWlsLmlwcy5lczAe
Fw0wMTEyMjkwMTEwMThaFw0yNTEyMjcwMTEwMThaMIIBHjELMAkGA1UEBhMCRVMxEjAQBgNVBAgT
CUJhcmNlbG9uYTESMBAGA1UEBxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJUFMgSW50ZXJuZXQgcHVi
bGlzaGluZyBTZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJpcHNAbWFpbC5pcHMuZXMgQy5JLkYuICBC
LTYwOTI5NDUyMTQwMgYDVQQLEytJUFMgQ0EgVGltZXN0YW1waW5nIENlcnRpZmljYXRpb24gQXV0
aG9yaXR5MTQwMgYDVQQDEytJUFMgQ0EgVGltZXN0YW1waW5nIENlcnRpZmljYXRpb24gQXV0aG9y
aXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXMwgZ8wDQYJKoZIhvcNAQEBBQADgY0A
MIGJAoGBALy47lalmozmNsnCYqBmgY0a1XrSc58OhGS6lbSQp3ivyv5UYVvOsiBXAa5EkkMQOBH3
aPwXQKVoJzI7xKfmQnHFme92/yuVJPVJkhhoygC1pFovbsvWGywNVGdreimhWKuiWgDWW7sYwt/2
HhNWdpulaOKYzsYDijTbTINBpqmjAgMBAAGjggSAMIIEfDAdBgNVHQ4EFgQUi9AQUAmB8p0J1Q5g
eAMioj/IymYwggFQBgNVHSMEggFHMIIBQ4AUi9AQUAmB8p0J1Q5geAMioj/IymahggEmpIIBIjCC
AR4xCzAJBgNVBAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJhcmNlbG9uYTEu
MCwGA1UEChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjErMCkGA1UEChQi
aXBzQG1haWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjE0MDIGA1UECxMrSVBTIENBIFRpbWVz
dGFtcGluZyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTE0MDIGA1UEAxMrSVBTIENBIFRpbWVzdGFt
cGluZyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEeMBwGCSqGSIb3DQEJARYPaXBzQG1haWwuaXBz
LmVzggEAMAwGA1UdEwQFMAMBAf8wDAYDVR0PBAUDAwf/gDBrBgNVHSUEZDBiBggrBgEFBQcDAQYI
KwYBBQUHAwIGCCsGAQUFBwMDBggrBgEFBQcDBAYIKwYBBQUHAwgGCisGAQQBgjcCARUGCisGAQQB
gjcCARYGCisGAQQBgjcKAwEGCisGAQQBgjcKAwQwEQYJYIZIAYb4QgEBBAQDAgAHMBoGA1UdEQQT
MBGBD2lwc0BtYWlsLmlwcy5lczAaBgNVHRIEEzARgQ9pcHNAbWFpbC5pcHMuZXMwRwYJYIZIAYb4
QgENBDoWOFRpbWVzdGFtcGluZyBDQSBDZXJ0aWZpY2F0ZSBpc3N1ZWQgYnkgaHR0cDovL3d3dy5p
cHMuZXMvMCkGCWCGSAGG+EIBAgQcFhpodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyLzBABglghkgB
hvhCAQQEMxYxaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9pcHMyMDAyVGltZXN0YW1waW5nLmNy
bDBFBglghkgBhvhCAQMEOBY2aHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9yZXZvY2F0aW9uVGlt
ZXN0YW1waW5nLmh0bWw/MEIGCWCGSAGG+EIBBwQ1FjNodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAy
L3JlbmV3YWxUaW1lc3RhbXBpbmcuaHRtbD8wQAYJYIZIAYb4QgEIBDMWMWh0dHA6Ly93d3cuaXBz
LmVzL2lwczIwMDIvcG9saWN5VGltZXN0YW1waW5nLmh0bWwwfwYDVR0fBHgwdjA3oDWgM4YxaHR0
cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9pcHMyMDAyVGltZXN0YW1waW5nLmNybDA7oDmgN4Y1aHR0
cDovL3d3d2JhY2suaXBzLmVzL2lwczIwMDIvaXBzMjAwMlRpbWVzdGFtcGluZy5jcmwwLwYIKwYB
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
dHkxLjAsBgNVBAMTJVF1b1ZhZGlzIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDEw
MzE5MTgzMzMzWhcNMjEwMzE3MTgzMzMzWjB/MQswCQYDVQQGEwJCTTEZMBcGA1UEChMQUXVvVmFk
aXMgTGltaXRlZDElMCMGA1UECxMcUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEuMCwGA1UE
AxMlUXVvVmFkaXMgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBAL9htZVTulf8+vJnCzoa3xGAZJW00bzNes/2KZYuJFRAJDj3GoXcWEzL
pCdCl9Cfg4rD5AYDWwClUR5wBHTiwdQ6q9etOwcYBY79g6zqZtkYG2iK9VcamLr17XY9fNnelGo7
SxfB1Y+9ZTg6ldA9VTZO33lXMSoe2FllSVggmH6rX36f6dZN7IN0qcds2O4pSoUqBhT5VObT2mUH
i2M3EtfQ7MN7IEFEo+3LoBfhcWXOHWYx93YBGch9A1i2lUkdphIm6MYMduDjZsvqXaYm7uXMX71n
pwEnDqLKVMWxepUdcR5KKYoD3GpFwaQZXm82zcOisLf+XDjiUrz4REPmkLsCAwEAAaOCAlIwggJO
MD0GCCsGAQUFBwEBBDEwLzAtBggrBgEFBQcwAYYhaHR0cHM6Ly9vY3NwLnF1b3ZhZGlzb2Zmc2hv
cmUuY29tMA8GA1UdEwEB/wQFMAMBAf8wggEaBgNVHSAEggERMIIBDTCCAQkGCSsGAQQBvlgAATCB
+zCB1AYIKwYBBQUHAgIwgccagcRSZWxpYW5jZSBvbiB0aGUgUXVvVmFkaXMgUm9vdCBDZXJ0aWZp
Y2F0ZSBieSBhbnkgcGFydHkgYXNzdW1lcyBhY2NlcHRhbmNlIG9mIHRoZSB0aGVuIGFwcGxpY2Fi
bGUgc3RhbmRhcmQgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdXNlLCBjZXJ0aWZpY2F0aW9uIHBy
YWN0aWNlcywgYW5kIHRoZSBRdW9WYWRpcyBDZXJ0aWZpY2F0ZSBQb2xpY3kuMCIGCCsGAQUFBwIB
FhZodHRwOi8vd3d3LnF1b3ZhZGlzLmJtMB0GA1UdDgQWBBSLS23t0ym5BhnsOTmp8JeEasvv3zCB
rgYDVR0jBIGmMIGjgBSLS23t0ym5BhnsOTmp8JeEasvv36GBhKSBgTB/MQswCQYDVQQGEwJCTTEZ
MBcGA1UEChMQUXVvVmFkaXMgTGltaXRlZDElMCMGA1UECxMcUm9vdCBDZXJ0aWZpY2F0aW9uIEF1
dGhvcml0eTEuMCwGA1UEAxMlUXVvVmFkaXMgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eYIE
OrZQizAOBgNVHQ8BAf8EBAMCAQYwDQYJKoZIhvcNAQEFBQADggEBAIrUFLX+9JqSpxnUpH5yGI/Z
aHxSJN1nbzl6xKpePeJYsE1wmIRh6BvjaRgOzvtHUKBO//AkH72yzvUn/OwvU6pzewM9dG7mFp7r
pS7Ev1YnUCtiur5LHDxVXEEdJL6CIEdd1UR+ehZo331NUXB4Vx0zHv0CmZwMzQoFT8e7jqR1+kpt
sYCOCVa5nBpg/l3B13rcEXjQ1l3Bt9WtMpkDOorMVCU5MYF7EyJRukZsobue+gRsSSZ0j9Jz68ww
oubqWSKH+Jf1Dv3qzJKkFsRSGOohzrHx5oSB5bqphijyQ1pdEp2sHtmo5Qpqp3+ghynP8olN1OzF
4uZ60DYjikp0NvkAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy9jMzNh
ODBkNC4wAAABUYWzSu4ABVguNTA5AAADKzCCAycwggKQoAMCAQICAQEwDQYJKoZIhvcNAQEEBQAw
gc4xCzAJBgNVBAYTAlpBMRUwEwYDVQQIEwxXZXN0ZXJuIENhcGUxEjAQBgNVBAcTCUNhcGUgVG93
bjEdMBsGA1UEChMUVGhhd3RlIENvbnN1bHRpbmcgY2MxKDAmBgNVBAsTH0NlcnRpZmljYXRpb24g
U2VydmljZXMgRGl2aXNpb24xITAfBgNVBAMTGFRoYXd0ZSBQcmVtaXVtIFNlcnZlciBDQTEoMCYG
CSqGSIb3DQEJARYZcHJlbWl1bS1zZXJ2ZXJAdGhhd3RlLmNvbTAeFw05NjA4MDEwMDAwMDBaFw0y
MDEyMzEyMzU5NTlaMIHOMQswCQYDVQQGEwJaQTEVMBMGA1UECBMMV2VzdGVybiBDYXBlMRIwEAYD
VQQHEwlDYXBlIFRvd24xHTAbBgNVBAoTFFRoYXd0ZSBDb25zdWx0aW5nIGNjMSgwJgYDVQQLEx9D
ZXJ0aWZpY2F0aW9uIFNlcnZpY2VzIERpdmlzaW9uMSEwHwYDVQQDExhUaGF3dGUgUHJlbWl1bSBT
ZXJ2ZXIgQ0ExKDAmBgkqhkiG9w0BCQEWGXByZW1pdW0tc2VydmVyQHRoYXd0ZS5jb20wgZ8wDQYJ
KoZIhvcNAQEBBQADgY0AMIGJAoGBANI2NmqL18JbntqBQWKPOO5JBFXW0O8cG5UWR+8YSDU6UvQr
agaPOy/qVuOvho2eF/eetGV1Ak3vywmiIVHYm9Bn0LoNkgYUc9STy5cqAJxcTgy8+hVS/PJEbtoR
Sm4Iny8t4/mqOoZztkZTWMiJBb2DEbhzP6oHjfRCTedAnRw3AgMBAAGjEzARMA8GA1UdEwEB/wQF
MAMBAf8wDQYJKoZIhvcNAQEEBQADgYEAJkgsFsJY+ugWdAyqql9UP/LXyXhgXl5uN2MidzZ+shfE
NLn1CIX8yQE4/02+8hZCQ+e7Wkb7wcYRH/FKsChGycPEQn28+qtZbtW3UYgR46SFGWuCTKQMEq3p
pK4/8cNJZZqMxcg+JbeUmbuSMnEH8IZe7VAnpg2mI/m7y6YHFEIAAAACAC4vZXhwb3J0L2hkYTMv
Ny40LjAvbG9jYWwvY29uZi9jZXJ0cy8xZGNkNmY0Yy4wAAABUYWzuicABVguNTA5AAAFdjCCBXIw
ggNaoAMCAQICEB+dWVrXL8IGRKWACGnjXvYwDQYJKoZIhvcNAQEFBQAwPzELMAkGA1UEBhMCVFcx
MDAuBgNVBAoMJ0dvdmVybm1lbnQgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wMjEy
MDUxMzIzMzNaFw0zMjEyMDUxMzIzMzNaMD8xCzAJBgNVBAYTAlRXMTAwLgYDVQQKDCdHb3Zlcm5t
ZW50IFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAw
ggIKAoICAQCaJbjszKJ1qHv3zltZisnRhhIIVOyc8udG9ojzfOml30xHNqQbARx/HleKjcPF0SHj
2iQ/SCv7ny6hlOcsHJPRvxsBh1OZzqf1CiF2d/+pt8ZzlE9G9xBJN/qoWUldaoEHVvKK+QbQ93Ai
TbS3QbkyuLHwscOcP3D9U92BqthjePbYU26hrGqEJHJUhsbSssocDnmB1rVwYggBLk5PDtURr6mv
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
+AJ1uP2lsdeu9tfeE8tTEH6KRtGX+rcuKxGrkLAngPnon1rpN5+r5N9ss4UXnT3ZJE95kTXWXwTr
gIOrmgIttRD02JDHBHNA7XIloKmf7J6raBKZV8aPEjoJpL1E/QYVN8Gb5DKj7Tjo2GTzLH4U/ALq
n83/B2gX2yKQOC16jdFU8WnjXzPKej17CuPKf1855eJ1usV2GDPOLPAvTK33sefOT6jEm0pUBsV/
fdUID+Ic/n4XuKxe9tQWskMJDE32p2u0mYRlynqI4uJEvlz36hz1AAAAAgAuL2V4cG9ydC9oZGEz
LzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvNWU0ZTY5ZTcuMAAAAVGFtEd9AAVYLjUwOQAAA4gwggOE
MIIDCqADAgECAhAvgP4jjA4iD0hnEiiRh6yzMAoGCCqGSM49BAMDMIHKMQswCQYDVQQGEwJVUzEX
MBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdvcmsx
OjA4BgNVBAsTMShjKSAyMDA3IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9u
bHkxRTBDBgNVBAMTPFZlcmlTaWduIENsYXNzIDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlv
biBBdXRob3JpdHkgLSBHNDAeFw0wNzExMDUwMDAwMDBaFw0zODAxMTgyMzU5NTlaMIHKMQswCQYD
VQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0
IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAyMDA3IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhvcml6
ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWduIENsYXNzIDMgUHVibGljIFByaW1hcnkgQ2Vy
dGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHNDB2MBAGByqGSM49AgEGBSuBBAAiA2IABKdWenxS2mSb
Di1c2F6skj3+AeYZSj0UA0v6YCcg2YOJafpUxpoYXlUqZN4G9o1KO60QPGU9kIgEieAwYbOuXQGn
e958sr7KZWEAhq7aj3vQia1NHVmaQbG8R4DcnmLD+aOBsjCBrzAPBgNVHRMBAf8EBTADAQH/MA4G
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
x9h9zxSD/E/JobcTr4rXnj4ECpKLYFb6tDIviE2hYAj0twlOoEkvSdbT352XWp+UBHDsP1nZt8xm
i5hSKAkC38UvhI16l3e/7ECdJXKrtT8ymPu3t/xyhOU1h/lV+qMfDm8uKN1poNlCEMb4tUTC0EN/
27zkojxqVXgKd6nY6hkyty/+XD8b7rGY7MqtemlF45YPVfbm7XXqZegyVpNGiaglimUG7mu/eQfQ
8bev7SxNkrvAqF+nZ30E8hUIcKyS1n0E0jP7TLYLC/saycSNA6l+XPJQqxKloc9IUKXv0sgaE/qw
f7GCHHdqD1/cC5WP70N+5kUJJQIBA6OCAVAwggFMMBIGA1UdEwEB/wQIMAYBAf8CAQwwPwYDVR0f
BDgwNjA0oDKgMIYuaHR0cDovL2NybC5jaGFtYmVyc2lnbi5vcmcvY2hhbWJlcnNpZ25yb290LmNy
bDAdBgNVHQ4EFgQUQ5w2n7CeME3Gzl+tEKvlA6X6qRQwDgYDVR0PAQH/BAQDAgEGMBEGCWCGSAGG
+EIBAQQEAwIABzAqBgNVHREEIzAhgR9jaGFtYmVyc2lnbnJvb3RAY2hhbWJlcnNpZ24ub3JnMCoG
A1UdEgQjMCGBH2NoYW1iZXJzaWducm9vdEBjaGFtYmVyc2lnbi5vcmcwWwYDVR0gBFQwUjBQBgsr
BgEEAYGHLgoBATBBMD8GCCsGAQUFBwIBFjNodHRwOi8vY3BzLmNoYW1iZXJzaWduLm9yZy9jcHMv
Y2hhbWJlcnNpZ25yb290Lmh0bWwwDQYJKoZIhvcNAQEFBQADggEBADw7cJH5BFQnkeHt7f5of2Fd
5UFlTzLxGAWUahzeH3DbPnsyAjS1DGyhinyl9I//1NitF9UtBNE/WIDigVmIvsDjRpMk/pC9JqIw
LeiXJlc1iXSWGPYV4q8kGVYCArK6DxTqxopmwYZFVYu+kr6cpATHSTye6Cl6idf+r/9o9aUXkL2s
mcylhlcJZ0bb1hbCRvHkqVD1j9GSFdNfPsYASTpuWLLR0ScNJcgy+CARzX0yM0iUVEzd3HnEMJ/r
jrhVtdeIXMVqJD2y0wUDUcYH78wUcnQ9bnLOGCiMSqB35QkrRURHrLdnfwGKBVqTvqHB//jnDmek
R0l2XXWQGvUmj/AAAAACAC4vZXhwb3J0L2hkYTMvNy4yLjAvbG9jYWwvY29uZi9jZXJ0cy9jY2I5
MTlmOS4wAAABSucYth8ABVguNTA5AAAEajCCBGYwggNOoAMCAQICEES+DItQACS0EdM2LeCzXxsw
DQYJKoZIhvcNAQEFBQAwgZUxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJVVDEXMBUGA1UEBxMOU2Fs
dCBMYWtlIENpdHkxHjAcBgNVBAoTFVRoZSBVU0VSVFJVU1QgTmV0d29yazEhMB8GA1UECxMYaHR0
cDovL3d3dy51c2VydHJ1c3QuY29tMR0wGwYDVQQDExRVVE4tVVNFUkZpcnN0LU9iamVjdDAeFw05
OTA3MDkxODMxMjBaFw0xOTA3MDkxODQwMzZaMIGVMQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQx
FzAVBgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsx
ITAfBgNVBAsTGGh0dHA6Ly93d3cudXNlcnRydXN0LmNvbTEdMBsGA1UEAxMUVVROLVVTRVJGaXJz
dC1PYmplY3QwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDOqoE/o6NheKoxAFWVEZ4n
Dx8c3zqbgmgwwEphHfEvDvq+efelI+9VUZaEzdvjuW4+MdgKIGfH9Nm/lOtHBD4CziqiXYcECfYw
nRiKl7KqHPxB0qE2y/s9kbrn2XA1+uTnkMObo5vTPPUSmXextwngaOYcuPOUY4hqav4Ldsm+9CLk
Z7mrGl53wYUH3Q1sv+4Gx3dqQZ6nD9f77pQXt/yFvqSrxBwx3de20eTw798Wj7JSk9eh1ImhBy6/
4QESQh4a4diVNNtkeSj/ui4RwuXoW5JI+0cLwmzarTKDQfOl5UFw/WWQbfr6UcT5vZYrGQQs022n
3PB/b4Nl4mqrh4Z1AgMBAAGjga8wgawwCwYDVR0PBAQDAgHGMA8GA1UdEwEB/wQFMAMBAf8wHQYD
VR0OBBYEFNrtZHQUnBQ8q92Zqb1bKE2LPMnYMEIGA1UdHwQ7MDkwN6A1oDOGMWh0dHA6Ly9jcmwu
dXNlcnRydXN0LmNvbS9VVE4tVVNFUkZpcnN0LU9iamVjdC5jcmwwKQYDVR0lBCIwIAYIKwYBBQUH
AwMGCCsGAQUFBwMIBgorBgEEAYI3CgMEMA0GCSqGSIb3DQEBBQUAA4IBAQAIH1KxN0R42/3OudqV
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
BBYEFMTAHKQHlP3NTQHUVNqlDF/ergVaMA0GCSqGSIb3DQEBBQUAA4GBAD8tauMmQ5V9iZdl+3Xk
ch1GV8Rha2mfEpss1VrowKLwQ5XjH+l2zdzrvJOgZQrHTU9fp6+iRhS5DPPMvWput53eJULQVP+e
aHNj3CTrIr+ocvJeAOENTjpDbplOP4l4A5jK81XMna6OwapFmPqPGqCNiCPxFUENpUY+kT+L6/dx
AAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvOWVjM2E1NjEuMAAAAVGF
tW9uAAVYLjUwOQAABKYwggSiMIIDiqADAgECAhBEvgyLUAAktBHTNiUlZ8mJMA0GCSqGSIb3DQEB
BQUAMIGuMQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQxFzAVBgNVBAcTDlNhbHQgTGFrZSBDaXR5
MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cudXNl
cnRydXN0LmNvbTE2MDQGA1UEAxMtVVROLVVTRVJGaXJzdC1DbGllbnQgQXV0aGVudGljYXRpb24g
YW5kIEVtYWlsMB4XDTk5MDcwOTE3Mjg1MFoXDTE5MDcwOTE3MzY1OFowga4xCzAJBgNVBAYTAlVT
MQswCQYDVQQIEwJVVDEXMBUGA1UEBxMOU2FsdCBMYWtlIENpdHkxHjAcBgNVBAoTFVRoZSBVU0VS
VFJVU1QgTmV0d29yazEhMB8GA1UECxMYaHR0cDovL3d3dy51c2VydHJ1c3QuY29tMTYwNAYDVQQD
Ey1VVE4tVVNFUkZpcnN0LUNsaWVudCBBdXRoZW50aWNhdGlvbiBhbmQgRW1haWwwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQCyOYWk8n2rQTtiRjeuzcFgdbw5ZflKGkeiucxIzGqY1U01
GbmkQuXOSeKKLx580jEHx060g2SdLinVomTEhb2FUTV5pE5okHsceqSSqBfymBXyk8zJpDKVuwxP
ML2YoAuL5W4bokb6eLyib6tZXqUvz8rabaov66yhs2qqty5nNYt54R5piOLmRs2gpeq+C852OnoO
m+r82idbPXMfIuZIYcZM82mxqC4bttQxICy8goqOpA6l14lD/BZarx1x1xFZ2rqHDa/68+HC8KTF
Z4zW1lQ63gqkugN3s2XI/R7TdGKqGMpokx6hhX71R2XL+E1XKHTSNP8wtu72YjAUjCzrAgMBAAGj
gbkwgbYwCwYDVR0PBAQDAgHGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFImCZ33EnSZwAEu0
UEh83j2uBG59MFgGA1UdHwRRME8wTaBLoEmGR2h0dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9VVE4t
VVNFUkZpcnN0LUNsaWVudEF1dGhlbnRpY2F0aW9uYW5kRW1haWwuY3JsMB0GA1UdJQQWMBQGCCsG
AQUFBwMCBggrBgEFBQcDBDANBgkqhkiG9w0BAQUFAAOCAQEAsW1hXaYaf3yrSuQw/FNvJSTGyu3i
MVwrDu7uYVVvBD7POd7FG0mU5OsgTLTmnlAuctmN9aqjs0raVhxgl4DcgqKtSr2KK/8LCbTG1yAE
ReTNgAG6uituzqrXkv7kr+v0Jh0WKn9sMJU3LzMSrH/dx9ERjFGYstCjkdCt9p+eg5MeHUK4Rq9r
ZvCbf+rjAwLlAlHBqtU1nXJAA4m6MR3FEGhSnt+ihcVcCKZ45lNPsei30xSek6bDZOOsfnHNvJ/p
AxvM++msMcGvfBV0ApnDskemwjJh18dvSCRRJ6HVh1Xye4+YPRae7nW2+NCO8vPGrihbp/DzNhf8
wwXTygNKVAAAAAIALy9leHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy83NjUxYjMy
Ny4wAAABMLsq/U4ABVguNTA5AAACQDCCAjwwggGlAhBwuuQdENkpNLY4ynsDzLq/MA0GCSqGSIb3
DQEBAgUAMF8xCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE3MDUGA1UECxMu
Q2xhc3MgMyBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw05NjAxMjkw
MDAwMDBaFw0yODA4MDEyMzU5NTlaMF8xCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwg
SW5jLjE3MDUGA1UECxMuQ2xhc3MgMyBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhv
cml0eTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAyVxZnvIbigEUtBDfBEDb41evakVAj4QM
C9Ez2dkRz+4CWB8l9yqoRAWq7AMfeH+ek7maAKojfdashaJjRcdyJ8z0TMZ1cdI5709C8HXfCpDG
jiBvmA/4rCNfcCk2pMmG57GaIMtTpYXnPb59mv4kRTPcdhXtD6JxZExlLoFoRacCAwEAATANBgkq
hkiG9w0BAQIFAAOBgQC7TBIrzywmAE8UE92m+/wKEYSM8ygcZ5IvfLbF+t/w6JW8HY9sLKhRzHPY
pMBT8E7WJsB2AVeBkl4h8dGx/+fQIVjNaRfjRBycGUQ5iVzcnAAPVo0Cme2ikEVM5LsQpD3wMgMO
8c746MlRjOZin+afwH23cpzJNjprn06o/2QNZAAAAAIALy9leHBvcnQvaGRhMy82LjEwLjQvbG9j
YWwvY29uZi9jZXJ0cy82MWY2YzkzNC4wAAABMLsrKJsABVguNTA5AAADojCCA54wggMHoAMCAQIC
EAlGF+Yd2NQcoAygYuh5iqcwDQYJKoZIhvcNAQEFBQAwXzELMAkGA1UEBhMCVVMxFzAVBgNVBAoT
DlZlcmlTaWduLCBJbmMuMTcwNQYDVQQLEy5DbGFzcyAyIFB1YmxpYyBQcmltYXJ5IENlcnRpZmlj
YXRpb24gQXV0aG9yaXR5MB4XDTAwMDgwMTAwMDAwMFoXDTA0MDczMTIzNTk1OVowgacxFzAVBgNV
BAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTswOQYD
VQQLEzJUZXJtcyBvZiB1c2UgYXQgaHR0cHM6Ly93d3cudmVyaXNpZ24uY29tL1JQQSAoYykwMDEu
MCwGA1UEAxMlQ2xhc3MgMiBQdWJsaWMgUHJpbWFyeSBPQ1NQIFJlc3BvbmRlcjCBnzANBgkqhkiG
9w0BAQEFAAOBjQAwgYkCgYEA0MpjMWF/RDR8BX0LPWqQy3lLdwo/S8cj5cBiLX6cfj6Ih5HQrOhN
SYeilpCK3QSlAj+Mm+mJ/mKg4lq9yN20eOalQpMIZwHAIE3XXPRd2rPjN6ZSGixMZU2Kh9moo/FJ
VLs8XIBRaMb7Sf8LVasV3fuawbkddA2yjERdifyf+YMCAwEAAaOCARAwggEMMCAGA1UdEQQZMBek
FTATMREwDwYDVQQDEwhPQ1NQIDEtMjAxBgNVHR8EKjAoMCagJKAihiBodHRwOi8vY3JsLnZlcmlz
aWduLmNvbS9wY2EyLmNybDATBgNVHSUEDDAKBggrBgEFBQcDCTBCBggrBgEFBQcBAQQ2MDQwMgYI
KwYBBQUHMAGmJhYkaHR0cDovL29jc3AudmVyaXNpZ24uY29tL29jc3Avc3RhdHVzMEQGA1UdIAQ9
MDswOQYLYIZIAYb4RQEHAQEwKjAoBggrBgEFBQcCARYcaHR0cHM6Ly93d3cudmVyaXNpZ24uY29t
L1JQQTAJBgNVHRMEAjAAMAsGA1UdDwQEAwIHgDANBgkqhkiG9w0BAQUFAAOBgQAffQluJEZ1BJzz
JpvjOW4X77y9ohvSAoSGq9BAlyzEQ4g3GWsiqANxUJ0g3DZgIJpzLXNVbFibLMK0NCx6M0LKkdnp
Q6/PHuD1xHqrP3JjHqk34Vs7iLMThoKQV8tX//RWviLd45eo4bwiQ8LdTdv2gZ6SFJ45DxNU3oLY
wF40jQAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzLzY3ODlhZjU2LjAA
AAFUf+BtdwAFWC41MDkAAAT4MIIE9DCCA9ygAwIBAgIUZHSqvGZlJHZC8+3ReV0NyT2m5+kwDQYJ
KoZIhvcNAQELBQAwTTELMAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxIzAh
BgNVBAMTGlF1b1ZhZGlzIEdsb2JhbCBTU0wgSUNBIEcyMB4XDTE1MDYwMjIzNDQ1MFoXDTE2MDYw
MjIzNDQzOVowgYExCzAJBgNVBAYTAkFVMQwwCgYDVQQIEwNOU1cxFTATBgNVBAcTDEVhc3QgTGlz
bW9yZTEiMCAGA1UEChMZU291dGhlcm4gQ3Jvc3MgVW5pdmVyc2l0eTENMAsGA1UECxMESVRUUzEa
MBgGA1UEAxMRaWRwZGV2LnNjdS5lZHUuYXUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
AQDRlYgqHmZGDWsu111r6CaubxRYip3p/iXPDk7UCZ7wVCs1V3QJIjEcrO2hubAUE2fG/wWdB/Us
c79/PackVCkQznriRBNY9LvUHLC+9jnyB4vdWdqFBkR58MQn7nxgx/fhLx4KjmSYJsUe4z+rc7Ep
nqbw0nJyyDrtGO8/8vkoKGUwPvkvVOSrvYnGCUGpzKaCDnGSU9n8h813vggil2dxvOUUG1/3OV1u
zyHfpe7sm6kDnqyj9XvxlqM9IF79QAnohg/qwOs5aFjz610luLY+nsk5jIx2X1f778FjmULASA0/
mbOrvVDJtZfjCtIzlh85XN0yLIwxKLXd5NbNTIT7AgMBAAGjggGVMIIBkTBzBggrBgEFBQcBAQRn
MGUwKgYIKwYBBQUHMAGGHmh0dHA6Ly9vY3NwLnF1b3ZhZGlzZ2xvYmFsLmNvbTA3BggrBgEFBQcw
AoYraHR0cDovL3RydXN0LnF1b3ZhZGlzZ2xvYmFsLmNvbS9xdnNzbGcyLmNydDAcBgNVHREEFTAT
ghFpZHBkZXYuc2N1LmVkdS5hdTBRBgNVHSAESjBIMEYGDCsGAQQBvlgAAmQBATA2MDQGCCsGAQUF
BwIBFihodHRwOi8vd3d3LnF1b3ZhZGlzZ2xvYmFsLmNvbS9yZXBvc2l0b3J5MA4GA1UdDwEB/wQE
AwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwHwYDVR0jBBgwFoAUkRlirVsXpzD7
8N45JbG9jLm4UScwOgYDVR0fBDMwMTAvoC2gK4YpaHR0cDovL2NybC5xdW92YWRpc2dsb2JhbC5j
b20vcXZzc2xnMi5jcmwwHQYDVR0OBBYEFGpJCtYXQxPZCmszuaNMkiStJD2wMA0GCSqGSIb3DQEB
CwUAA4IBAQBrw85LcmYC+tsbob448QiJHZ6lxYpWADic5TMPTolWTgMBq7MSyZBpsjW0uYQT31+b
F7Yo43L8zP4xcck0/Fedx+BQBXBG7tJ2LyVn/37ibasOe3HGSGc3cnh7u/KTyf7nU3ar/sbczApG
mgntXAzqSSDqoMbgdJ/0t83cZTB5NKo2bjtn1L7WazPqnW39ZUW1J5dpvvF4n8xNMYsOfYNI9EKN
/Y+wMMojq+yiRDoSQb5RqoHBC+eXF7V4TlXph1hAoL94aFywEllXdORNHKw6ROw5BvhnFKMnrfer
9PSoWPaw93KW7pn/15iDxQpXGWHh7n+PDGIBe/0Isrf16U9iAAAAAgAuL2V4cG9ydC9oZGEzLzcu
NC4wL2xvY2FsL2NvbmYvY2VydHMvNjkxMDVmNGYuMAAAAVGFs8DyAAVYLjUwOQAAA7swggO3MIIC
n6ADAgECAhAM5+DlF9hG/o/lYPwb8DA5MA0GCSqGSIb3DQEBBQUAMGUxCzAJBgNVBAYTAlVTMRUw
EwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5jb20xJDAiBgNVBAMT
G0RpZ2lDZXJ0IEFzc3VyZWQgSUQgUm9vdCBDQTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAwMDAw
MDBaMGUxCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5k
aWdpY2VydC5jb20xJDAiBgNVBAMTG0RpZ2lDZXJ0IEFzc3VyZWQgSUQgUm9vdCBDQTCCASIwDQYJ
KoZIhvcNAQEBBQADggEPADCCAQoCggEBAK0OFc7kQ4BcsYfzt2D5cRKlrtwmlIiq9M71IDkoWGAM
+IDaqRWVMmE8tbEohIqK3J8KDIMXeo+QrIrneVNcMYQq9g+YMjZ2zN7dPKii72r7IfJSYd+fINcf
4rHZ/hhk0hJbX/lYGDW8R82hNvlrf9SwOD7BG8OMM9nYLxj+KA+zp4PWw25EwGE1lhb+WZyLdm3X
8aJLDSv/C3LanmDQjpA1xnhVhyChz+VtCshJfDGYM2wi6YfQMlqiuhOCEe05F52ZOnKh5vqk2dUX
MXWuhX0irj8BRob2KHnIsdrkVxfEfhwOsLSSplazvbKX7aqn8LfFqD+VFtD/oZbrCF8Yd08CAwEA
AaNjMGEwDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFEXroq/0ksuC
MS1Ri6enIZ3zbcgPMB8GA1UdIwQYMBaAFEXroq/0ksuCMS1Ri6enIZ3zbcgPMA0GCSqGSIb3DQEB
BQUAA4IBAQCiDrzf4u3w43JzemSUv/dyZtgy5EJ1Yq6H6/LV2d5Ws5/MzhQouQ2XYFwSTFjk0z2D
SUVYlzVpGqhH6lbGeasS2GeBhN9/CTyU5rgmLCC9PbMoifdf/yLil4Qf6WXvh+DfwWdJs13rsgkq
6ybteL59PyvztyY1bV+JAbZJW58BBZurPSXBzLZ/wvFvhsb6ZGjrgS2U60K3+owe3WLxvlBnt2y9
8/Efaww2BxZ/N3ypW2168RJGYIPXJwS+S86XvsNnKmgR34DnDDNmvxMNFG7zfx9jEB76jRslbWyP
pbdhAbHSoyahEHGdreLD+cOZUbcrBwjOLuZQsqf6CkUvovDyAAAAAgAuL2V4cG9ydC9oZGEzLzcu
NC4wL2xvY2FsL2NvbmYvY2VydHMvZWQ1MjRjZjUuMAAAAVGFtaQVAAVYLjUwOQAABNwwggTYMIIE
QaADAgECAgQ3StJDMA0GCSqGSIb3DQEBBQUAMIHDMQswCQYDVQQGEwJVUzEUMBIGA1UEChMLRW50
cnVzdC5uZXQxOzA5BgNVBAsTMnd3dy5lbnRydXN0Lm5ldC9DUFMgaW5jb3JwLiBieSByZWYuIChs
aW1pdHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMTk5OSBFbnRydXN0Lm5ldCBMaW1pdGVkMTowOAYD
VQQDEzFFbnRydXN0Lm5ldCBTZWN1cmUgU2VydmVyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4X
DTk5MDUyNTE2MDk0MFoXDTE5MDUyNTE2Mzk0MFowgcMxCzAJBgNVBAYTAlVTMRQwEgYDVQQKEwtF
bnRydXN0Lm5ldDE7MDkGA1UECxMyd3d3LmVudHJ1c3QubmV0L0NQUyBpbmNvcnAuIGJ5IHJlZi4g
KGxpbWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAxOTk5IEVudHJ1c3QubmV0IExpbWl0ZWQxOjA4
BgNVBAMTMUVudHJ1c3QubmV0IFNlY3VyZSBTZXJ2ZXIgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkw
gZ0wDQYJKoZIhvcNAQEBBQADgYsAMIGHAoGBAM0ogzRUG4nzD683kTH/rzFgyajoshBo7Z/nkzbx
CmS7R/UEFz8jR03FJxmBJgxUcg2ILdkfmhKfvLNx04AZP0dme4w1KNK5Ct8k2pzWUHmBelrTN/fC
StgpkiZk0eSYbDoAivU0m2X47eMQ//24SVjcoN6COWuBsRYZYblUtuZDAgEDo4IB1zCCAdMwEQYJ
YIZIAYb4QgEBBAQDAgAHMIIBGQYDVR0fBIIBEDCCAQwwgd6ggduggdikgdUwgdIxCzAJBgNVBAYT
AlVTMRQwEgYDVQQKEwtFbnRydXN0Lm5ldDE7MDkGA1UECxMyd3d3LmVudHJ1c3QubmV0L0NQUyBp
bmNvcnAuIGJ5IHJlZi4gKGxpbWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAxOTk5IEVudHJ1c3Qu
bmV0IExpbWl0ZWQxOjA4BgNVBAMTMUVudHJ1c3QubmV0IFNlY3VyZSBTZXJ2ZXIgQ2VydGlmaWNh
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
BgNVBAoMDEQtVHJ1c3QgR21iSDEqMCgGA1UEAwwhRC1UUlVTVCBSb290IENsYXNzIDMgQ0EgMiBF
ViAyMDA5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmfGENHC6L7cwoI69fATPvmK8
mf2Cl9J6CmeWOAn2EE6VInOZjdoVLecF/BlzIreOmAC8PD2soWz71nklS63wzGTaiD4puA8J0zTd
M/Vi0eHNGenuGE9MWK7iHtYMWxVa2Dq4xBhkHuMzsrWJd04Mv9mUaxOXbxKj/pmpBMwV7GBoNu0I
e7f1v5PtZjGDjMZxNIdOF+qvi5GNHFZBriI3XjfyHdnRLQ0vaVGnvmamijoqvccaseEU8L46HbnP
W7Fq/rSxRiCi+x47cO+TmH2Mc5byxe+FcK0pJvweBD4coNgPy1KDYnzui1OVkKlXouphBdj5TcQn
+m6t7fnXUfdrpQIDAQABo4IBJDCCASAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU05SKTGIT
KhkuzK9yin0215oc3GcwDgYDVR0PAQH/BAQDAgEGMIHdBgNVHR8EgdUwgdIwgYeggYSggYGGf2xk
YXA6Ly9kaXJlY3RvcnkuZC10cnVzdC5uZXQvQ049RC1UUlVTVCUyMFJvb3QlMjBDbGFzcyUyMDMl
MjBDQSUyMDIlMjBFViUyMDIwMDksTz1ELVRydXN0JTIwR21iSCxDPURFP2NlcnRpZmljYXRlcmV2
b2NhdGlvbmxpc3QwRqBEoEKGQGh0dHA6Ly93d3cuZC10cnVzdC5uZXQvY3JsL2QtdHJ1c3Rfcm9v
dF9jbGFzc18zX2NhXzJfZXZfMjAwOS5jcmwwDQYJKoZIhvcNAQELBQADggEBADTte1o8pJSI7xoR
dQcvs/48+h5RJuuH9ine4PHUxiQJ6cHPVRu0MNnOGv4GUaYVpC3vsku/ICglSdGmNnc06GTfUrER
x3N6zTmewq2McSHyWmuv3zxOVa+yhGUUibl3yyoxvs+jbc9vSJQyRm/ncYygpoQZNwfyA0UJK4Z1
fN9faVcA227YpnIiS1DUdZhW37cY/0NDUK56RHvweVHXQz2n04HT8MlPudrGl4bQgsPkQm3+sOJk
Tg4m50A0JrUIidcIY2M4J3UeM+puqN2fmU90TYGJgEvdmpcpXC++gUG5jP/qfWAGns3XPdMuoxW8
qOYm5W/D3LgDIeqfFvEsVLUAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0
cy8xMDUzMTM1Mi4wAAABUYW0gfEABVguNTA5AAAD8zCCA+8wggLXoAMCAQICAQAwDQYJKoZIhvcN
AQELBQAwgZgxCzAJBgNVBAYTAlVTMRAwDgYDVQQIEwdBcml6b25hMRMwEQYDVQQHEwpTY290dHNk
YWxlMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTswOQYDVQQDEzJTdGFy
ZmllbGQgU2VydmljZXMgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjAeFw0wOTA5MDEw
MDAwMDBaFw0zNzEyMzEyMzU5NTlaMIGYMQswCQYDVQQGEwJVUzEQMA4GA1UECBMHQXJpem9uYTET
MBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UEChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5j
LjE7MDkGA1UEAxMyU3RhcmZpZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5
IC0gRzIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/
y8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0NTm/2yEnZtvMa
Vq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRoOt+OQFodSk7PQ5E751bWAHDL
Uu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0CzyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPf
R+uxa40l2ZvOgdFFRjKWcIfeAg5JQ4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVA
YBeFAlU5i38FAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1Ud
DgQWBBScXwDfqgHXMCs4iKK4bUqc8hGRgzANBgkqhkiG9w0BAQsFAAOCAQEASzamhHdp3TsZn2cj
CG8OYcn9hNxf2DaBzdgbQS2fYN3HGmjZ0W6G4YgjzxPeQ8/iNLMEnR8p1b/4XsjVwb3ukm8ydPKR
gi+9gkJ6rSq3IH1NvHpVEsIV6r33apUubHSfzxy08sUBo4XQcj6tc6sLm3UMbUW3jpSslje1oNCP
FUcO4+iD3Y/970EBd8wnqWKFM/I3CO9xz3cG3sgZHYhAz31GHf8ex+HO/yPbxvqNVU6pAudHEUY+
9P29eykmu6lhYjcoti0q9hCGZMlwp9Kttylweeo82mMln/1otzDscPt1irdtYGeyHsi56diobwKL
Zw1NJldx2iD8wUpQjbEougAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRz
LzNjOWE0ZDNiLjAAAAFRhbTtTgAFWC41MDkAAAfXMIIH0zCCBbugAwIBAgIIXsO3pkN/pOAwDQYJ
KoZIhvcNAQEFBQAwQjESMBAGA1UEAwwJQUNDVlJBSVoxMRAwDgYDVQQLDAdQS0lBQ0NWMQ0wCwYD
VQQKDARBQ0NWMQswCQYDVQQGEwJFUzAeFw0xMTA1MDUwOTM3MzdaFw0zMDEyMzEwOTM3MzdaMEIx
EjAQBgNVBAMMCUFDQ1ZSQUlaMTEQMA4GA1UECwwHUEtJQUNDVjENMAsGA1UECgwEQUNDVjELMAkG
A1UEBhMCRVMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCbqau/YUqXry+XZpp0X9DZ
lv3P4uRm7x8fRzPCRKPfmt4ftVTdFXxpNRFvu8gMjmoYHtiP2Ra8EEg2XPBjs5BaXCQ316PWywlx
ufEBcoSwfdtNgM3802/J+Nq2DoLSRYWoG2ioPej0RGy9ocLLA76MPhMAhN9KSMDjIgro6TenGEyx
CQ0jVn8ETdkXhBilyNpAlHPrzg5XPAOBOp0KoVdDaaxXbXmQeOW1tDvYvEyNKKGno6e6Ak4l0Squ
7a4DIrhrIA8wKFSVf+DuzgpmndFALW4ir50awQUZ0m/A8p/4e7MCQvtQqR0tkw8jq8bBD5L/0KIV
9VMJcRz/RROE5iZe+OCIHAr8Fraocwa48GOEAqDGWuzndN9wrqODJerWx5eHk6fGioozl2A3ED6X
Pm4pFdahD9GILBKfb6qkxkLrQaLjlUPTAYVtjrs78yM2x/474KElB0iryYl0/wiPgL/AlmXz7uxL
aL2diMMxs0Dx6M/2OLuc5NF/1OVYm3z61PMOm3WR5LpSLhl+0fXNWhn8ugb2+1KoS5kE3fj5tItQ
o05iifCHJPqDQsGH+tUtKSpacXpkatcnYGMN285J9Y0fkIkyF/hzQ7jSWpOGYdbhdQrqeWZ2iE9x
6wQl1gpaepPluUsXQA+xtrn13k/c4LOsOxFwYIRKQ26ZIMApcQrAZQIDAQABo4ICyzCCAscwfQYI
KwYBBQUHAQEEcTBvMEwGCCsGAQUFBzAChkBodHRwOi8vd3d3LmFjY3YuZXMvZmlsZWFkbWluL0Fy
Y2hpdm9zL2NlcnRpZmljYWRvcy9yYWl6YWNjdjEuY3J0MB8GCCsGAQUFBzABhhNodHRwOi8vb2Nz
cC5hY2N2LmVzMB0GA1UdDgQWBBTSh7Tj3zcnk1X2VuqB5TbMjB4/vTAPBgNVHRMBAf8EBTADAQH/
MB8GA1UdIwQYMBaAFNKHtOPfNyeTVfZW6oHlNsyMHj+9MIIBcwYDVR0gBIIBajCCAWYwggFiBgRV
HSAAMIIBWDCCASIGCCsGAQUFBwICMIIBFB6CARAAQQB1AHQAbwByAGkAZABhAGQAIABkAGUAIABD
AGUAcgB0AGkAZgBpAGMAYQBjAGkA8wBuACAAUgBhAO0AegAgAGQAZQAgAGwAYQAgAEEAQwBDAFYA
IAAoAEEAZwBlAG4AYwBpAGEAIABkAGUAIABUAGUAYwBuAG8AbABvAGcA7QBhACAAeQAgAEMAZQBy
AHQAaQBmAGkAYwBhAGMAaQDzAG4AIABFAGwAZQBjAHQAcgDzAG4AaQBjAGEALAAgAEMASQBGACAA
UQA0ADYAMAAxADEANQA2AEUAKQAuACAAQwBQAFMAIABlAG4AIABoAHQAdABwADoALwAvAHcAdwB3
AC4AYQBjAGMAdgAuAGUAczAwBggrBgEFBQcCARYkaHR0cDovL3d3dy5hY2N2LmVzL2xlZ2lzbGFj
aW9uX2MuaHRtMFUGA1UdHwROMEwwSqBIoEaGRGh0dHA6Ly93d3cuYWNjdi5lcy9maWxlYWRtaW4v
QXJjaGl2b3MvY2VydGlmaWNhZG9zL3JhaXphY2N2MV9kZXIuY3JsMA4GA1UdDwEB/wQEAwIBBjAX
BgNVHREEEDAOgQxhY2N2QGFjY3YuZXMwDQYJKoZIhvcNAQEFBQADggIBAJcxAp/n/UNnSEQU5CmH
7UwoZtCPNdpNYbdKl02125DgBS4OxnnQ8pdpD70ER9m+27Up2pvZrqmZ1dM8MJP1jaGo/AaNRPTK
FpV8M9xii6g3+CfYCS0b78gUJyCpZET/LtZ1qmxNYEAZSUNUY9rizLpm5U9EelvZaoErQNV/+QEn
WCzI7UiRfD+mAM/EKXMRNt6GGT6d7hmKG9Ww7Y49nCrADdg9ZuM8Db3VlFzi4qc1GwQA9j9ajepD
vV+JHanBsMyZ4k0ACtrJJ1vnE5Bc5PUzolVt3OAJTS+xJlsndQAJxGJ3KQhfnlmstn6tn1QwIgPB
HnFk/vk4CpYY3QIUrCPLBhwepH2NDd4nQeit2hW3sCPdK6jT2iWH7ehVRE2I9DZ+hJp4rPcOVkkO
1jMl1oRQQmwgEh0q1b688nCBpHBgvgW1m54ERL5hI6zppSSMEYCUWqKiuUnSwdzRp+0xESyeGabu
4VXhwOrPDYTkF7eifKXeVSUG7szAh1xA2syVP1XgNce4hL60Xc16gwFy7ofmXx2utYXGJt/mwZrp
HgJHnyqobalbz+xFd3+YJ5oyXSrjhO7FmGYvliAd3djDJ9ew+f7Zfc3Qn48LFFhRny+Lwzgt3uiP
1o2HpPVWQxaZLPSkVrQ0uGE3ycJYgBugl6H8WY3pEfbRD0tVNEYqi4Y7AAAAAgAuL2V4cG9ydC9o
ZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvYzIxNWJjNjkuMAAAAUrnGALBAAVYLjUwOQAAAy0w
ggMpMIICkqADAgECAgQ2cBWWMA0GCSqGSIb3DQEBBQUAMEYxCzAJBgNVBAYTAlVTMSQwIgYDVQQK
ExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xETAPBgNVBAsTCERTVENBIEUxMB4XDTk4MTIx
MDE4MTAyM1oXDTE4MTIxMDE4NDAyM1owRjELMAkGA1UEBhMCVVMxJDAiBgNVBAoTG0RpZ2l0YWwg
U2lnbmF0dXJlIFRydXN0IENvLjERMA8GA1UECxMIRFNUQ0EgRTEwgZ0wDQYJKoZIhvcNAQEBBQAD
gYsAMIGHAoGBAKBsganPNB4k3f6GKMzegy/5XtRC0uh0YGYTmAYcqVESaW8xVblJcgAIftOlYkQ3
JJmP2YNIj5ltlRO7QzsuSU6IN8G7WH/+4b34u2HN80fAmabx85HoeHwAy2HJRCdxaVVKfklN7aKj
vgJMAMoCqO4BAjFkD1ItE3R2NrV6tC1xAgEDo4IBJDCCASAwEQYJYIZIAYb4QgEBBAQDAgAHMGgG
A1UdHwRhMF8wXaBboFmkVzBVMQswCQYDVQQGEwJVUzEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1
cmUgVHJ1c3QgQ28uMREwDwYDVQQLEwhEU1RDQSBFMTENMAsGA1UEAxMEQ1JMMTArBgNVHRAEJDAi
gA8xOTk4MTIxMDE4MTAyM1qBDzIwMTgxMjEwMTgxMDIzWjALBgNVHQ8EBAMCAQYwHwYDVR0jBBgw
FoAUanl+kWlGGBMKAnelWVtgmCUOovgwHQYDVR0OBBYEFGp5fpFpRhgTCgJ3pVlbYJglDqL4MAwG
A1UdEwQFMAMBAf8wGQYJKoZIhvZ9B0EABAwwChsEVjQuMAMCBJAwDQYJKoZIhvcNAQEFBQADgYEA
IhLYeh3cgQa2CWWyh8gfXrQv6cQe8jzBuwSQEUqDTn6TuU1Cx5ImoFw0mjhy+P1rFj4g7oKLMSqT
NoUjiIo8A2jTyQkPTfxspNoocpMOiYCwff6Ab2VtGDOXi8Jrie5gPcib738rMmJzk8s843vidnhF
vKGTBLuGnzpbQ3rDimUAAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40L2xvY2FsL2NvbmYvY2VydHMv
ODMxN2IxMGMuMAAAATC7K3qMAAVYLjUwOQAABtUwggbRMIIFuaADAgECAgF7MA0GCSqGSIb3DQEB
BQUAMIHJMQswCQYDVQQGEwJIVTERMA8GA1UEBxMIQnVkYXBlc3QxJzAlBgNVBAoTHk5ldExvY2sg
SGFsb3phdGJpenRvbnNhZ2kgS2Z0LjEaMBgGA1UECxMRVGFudXNpdHZhbnlraWFkb2sxQjBABgNV
BAMTOU5ldExvY2sgTWlub3NpdGV0dCBLb3pqZWd5em9pIChDbGFzcyBRQSkgVGFudXNpdHZhbnlr
aWFkbzEeMBwGCSqGSIb3DQEJARYPaW5mb0BuZXRsb2NrLmh1MB4XDTAzMDMzMDAxNDcxMVoXDTIy
MTIxNTAxNDcxMVowgckxCzAJBgNVBAYTAkhVMREwDwYDVQQHEwhCdWRhcGVzdDEnMCUGA1UEChMe
TmV0TG9jayBIYWxvemF0Yml6dG9uc2FnaSBLZnQuMRowGAYDVQQLExFUYW51c2l0dmFueWtpYWRv
azFCMEAGA1UEAxM5TmV0TG9jayBNaW5vc2l0ZXR0IEtvemplZ3l6b2kgKENsYXNzIFFBKSBUYW51
c2l0dmFueWtpYWRvMR4wHAYJKoZIhvcNAQkBFg9pbmZvQG5ldGxvY2suaHUwggEiMA0GCSqGSIb3
DQEBAQUAA4IBDwAwggEKAoIBAQDHUiWy2D3UhFUJpxu9bLkU9IoC23b8aip4q+V38G7gjCNn26Vk
mbndAT5v7y2aPCLwXclXoFVBf/JDXliCUzFlzh7yJroAVB6vsLwc5FKMoDKvtzexU2dodGdQ9i0u
ZN6uJnnf35mGq6t/heyg+4DM9LgMHpNFY7ncuFub7Vs51F9isKeOfGY4LKqxCGMXZ33MvbPxwz/P
UDnt0RmDFduHEieWt9rq5Z28uuo5T4vvdJrnxdDS6oZRHOT+ZAgoBHkF68rFcQ4L76vq7BIRoRgF
MmnRDCwaPSWZP7V8ym2wrpmZ+ghg5xnC8r1R08zTAqzBEQyAzqvclJ1rozlTOtaFAgMAxX2jggLA
MIICvDASBgNVHRMBAf8ECDAGAQH/AgEEMA4GA1UdDwEB/wQEAwIBBjCCAnUGCWCGSAGG+EIBDQSC
AmYWggJiRklHWUVMRU0hIEV6ZW4gdGFudXNpdHZhbnkgYSBOZXRMb2NrIEtmdC4gTWlub3NpdGV0
dCBTem9sZ2FsdGF0YXNpIFN6YWJhbHl6YXRhYmFuIGxlaXJ0IGVsamFyYXNvayBhbGFwamFuIGtl
c3p1bHQuIEEgbWlub3NpdGV0dCBlbGVrdHJvbmlrdXMgYWxhaXJhcyBqb2doYXRhcyBlcnZlbnll
c3VsZXNlbmVrLCB2YWxhbWludCBlbGZvZ2FkYXNhbmFrIGZlbHRldGVsZSBhIE1pbm9zaXRldHQg
U3pvbGdhbHRhdGFzaSBTemFiYWx5emF0YmFuLCBheiBBbHRhbGFub3MgU3plcnpvZGVzaSBGZWx0
ZXRlbGVrYmVuIGVsb2lydCBlbGxlbm9yemVzaSBlbGphcmFzIG1lZ3RldGVsZS4gQSBkb2t1bWVu
dHVtb2sgbWVndGFsYWxoYXRvayBhIGh0dHBzOi8vd3d3Lm5ldGxvY2suaHUvZG9jcy8gY2ltZW4g
dmFneSBrZXJoZXRvayBheiBpbmZvQG5ldGxvY2submV0IGUtbWFpbCBjaW1lbi4gV0FSTklORyEg
VGhlIGlzc3VhbmNlIGFuZCB0aGUgdXNlIG9mIHRoaXMgY2VydGlmaWNhdGUgYXJlIHN1YmplY3Qg
dG8gdGhlIE5ldExvY2sgUXVhbGlmaWVkIENQUyBhdmFpbGFibGUgYXQgaHR0cHM6Ly93d3cubmV0
bG9jay5odS9kb2NzLyBvciBieSBlLW1haWwgYXQgaW5mb0BuZXRsb2NrLm5ldDAdBgNVHQ4EFgQU
CWpiFpKwWrtVDst1Mjoy5bIhySgwDQYJKoZIhvcNAQEFBQADggEBAJFqUJzbeIGbP4tC4zv8psPu
Q+DP8+KANUlFdgLi4y8FxfEq58BBM8a2m9AzOc3A26GtbDcCTFhBO/KXksZIqM3lijmJYflSl+m9
9vmUdOhxDrx3hsMGzFp8Sn40UDAu+38ymo098yBb+GrKhvMxTCxZgAJ9/jjJMHUct1XjvJ+6qG2E
KAV1s4sNwJFUIeemC7SZ9VFB3M2jRyLZxwGBxNxHTybqH+3bzQ2Y9KOctHMySpaZ/rx/yCVY+Fjz
dmaJVKSmPsRQXLqJGIJ1SCHSTxPoYH4HdtsQtVHmqrloqs32nZB1Euo4GspE6LeZpypolWaVq63v
ictgqQYSxpRH6SgAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy83MmYz
NjlhZi4wAAABUYW0I7gABVguNTA5AAADVzCCA1MwggI7oAMCAQICAQEwDQYJKoZIhvcNAQEFBQAw
SzELMAkGA1UEBhMCTk8xHTAbBgNVBAoMFEJ1eXBhc3MgQVMtOTgzMTYzMzI3MR0wGwYDVQQDDBRC
dXlwYXNzIENsYXNzIDIgQ0EgMTAeFw0wNjEwMTMxMDI1MDlaFw0xNjEwMTMxMDI1MDlaMEsxCzAJ
BgNVBAYTAk5PMR0wGwYDVQQKDBRCdXlwYXNzIEFTLTk4MzE2MzMyNzEdMBsGA1UEAwwUQnV5cGFz
cyBDbGFzcyAyIENBIDEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCLPAdF2Pbf5sfK
uo1DxUeNsFrBONuShByvE9QPbzZGIMQuzHFwNKI00zcu2N06dy/A6ynoXNK1qZE0hyJZ/szb55mv
lsGox0DdpRWMbsh8lwPL5iDy15dfMaEvN9K+7r6prahMniFmQzuovPMJozjVWSTBwkd2sYhcgju7
K6YE14wHj83VQR3wrrgpLJRSYDSUO9rgONGdMz4V9JMyxQDatSlmDjp4DyFSXwLlknsl05IeLxWd
geSdjujvic4UTFQdHIESTXCovhAFF34f0bhXVe3Nu1LCsB54wk02aMtWJsFSwb1291jVcn4fRHa7
AIkdFp1RNe9Nwlbva+CMOw3pAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFD+N
mlmL/Ht7nKOvOLA57ZBxgNbIMA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQUFAAOCAQEAFRp+
E4q56AejSycyskCR8iHRZIW+Y2rSz4HCFdV6fgwprDceHHx2UpXatX8joSl3ZckynaguVqtgds4W
tI1/eMDVmVGDf17ZvgyoUO0ix60FTHb77e4eR2T29yd9XCgPRcVcYl6mmpGRt1MXLtytYJ2WZDm9
Z2iyrgXLTedfH1eG1SCcKPtvEzj19hGS9n2ZXh8M6KtEJClyQD02Uq+MWJBzwexhLHmh7Ie1P9pN
2SEAMN6Q2g7TGkipPoULFIuMvEGeavcOcMA19zmiXWbQe1mfqEcSmicjpC2OJ4OSIKHXFX/xLhju
9Eh/L3/xoRi1oQuUoGIgMpwd9tTvv0yIaAAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9j
b25mL2NlcnRzL2E3ZDJjZjY0LjAAAAFRhbQ50gAFWC41MDkAAAKMMIICiDCCAg2gAwIBAgIQNfwm
XNmET8k9Jj1Xm67XVjAKBggqhkjOPQQDAzCBhDELMAkGA1UEBhMCVVMxFTATBgNVBAoTDHRoYXd0
ZSwgSW5jLjE4MDYGA1UECxMvKGMpIDIwMDcgdGhhd3RlLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQg
dXNlIG9ubHkxJDAiBgNVBAMTG3RoYXd0ZSBQcmltYXJ5IFJvb3QgQ0EgLSBHMjAeFw0wNzExMDUw
MDAwMDBaFw0zODAxMTgyMzU5NTlaMIGEMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMdGhhd3RlLCBJ
bmMuMTgwNgYDVQQLEy8oYykgMjAwNyB0aGF3dGUsIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ug
b25seTEkMCIGA1UEAxMbdGhhd3RlIFByaW1hcnkgUm9vdCBDQSAtIEcyMHYwEAYHKoZIzj0CAQYF
K4EEACIDYgAEotWcgnuVnfFSeIf+iha/BebfowJPDQfGAFG6DAJSLSKkQjnE/o/qycG+1E3/n3qe
4rF8mq2nhglzh9HnmuN6papu+7qzcMBniKI11KOasf2twu8x+qi58/sIxpHR+ymVo0IwQDAPBgNV
HRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUmtgAMADna3+FGO6Lts6KDPgR
4bswCgYIKoZIzj0EAwMDaQAwZgIxAN344FdHW6fmCsO99YCKlzUNG4k8VIZ3KMqh9HneteY4sPBl
cIx/AlTCv//YoT7ZzwIxAMSNlPzcU9LcnXgWHxUzI1NS41oxXZ3Krr0TKUQNJ1uo52icEvdYPy5y
Alejj6EULgAAAAIALy9leHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy8wNDgxY2I2
NS4wAAABMLsrNf8ABVguNTA5AAAF6jCCBeYwggPOoAMCAQICAQEwDQYJKoZIhvcNAQEFBQAwgYMx
CzAJBgNVBAYTAlVTMR0wGwYDVQQKExRBT0wgVGltZSBXYXJuZXIgSW5jLjEcMBoGA1UECxMTQW1l
cmljYSBPbmxpbmUgSW5jLjE3MDUGA1UEAxMuQU9MIFRpbWUgV2FybmVyIFJvb3QgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkgMjAeFw0wMjA1MjkwNjAwMDBaFw0zNzA5MjgyMzQzMDBaMIGDMQswCQYD
VQQGEwJVUzEdMBsGA1UEChMUQU9MIFRpbWUgV2FybmVyIEluYy4xHDAaBgNVBAsTE0FtZXJpY2Eg
T25saW5lIEluYy4xNzA1BgNVBAMTLkFPTCBUaW1lIFdhcm5lciBSb290IENlcnRpZmljYXRpb24g
QXV0aG9yaXR5IDIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC0N1oIFpkU6FWxGyRr
/MeL5oepie6Lmc1PQIaktk3J2bHcPE0NhUwVbEaLUnif+CP9Z/UkOmhd0PdkYUFUo4ulCNIpW5tg
TyaD0WMSVkl2pBbCpZ1FrIuElagWseyf6iQa77lXXJokISxNDnEfpqxdRXQDmMRUjBZKQXeGlXUM
RwFmYPwV8Q/q9RR4xw7XboEcXr9e5zoq2JcXMHwArQidM6+4mWGAi6iVfhTcEmyk0NjvQEkCNvlu
qdYdllYEsrMtFlaGj9kgV4DNZxBtsEzw2ka26iUuRq+NsIU4NIsUJoIrrK6ZC44U11K9nmnDhgIL
6nZ1MQnOMxkhhUPmiS2fJTdn8SNq0gBtl/mf5ynK3R/XBuq4ybkJIZ/IPwbF0ukSRgBOewjrQj0r
SG6dZ91LAuRE85MZpSfOaXq+Z9P8UKQsq8NrueOATM8FYUsr3Bu5ptLQqvUrc/vOkDWfDFIcv1wh
YRFbFUupJFH8pFz3F52w0voH6Y9W5BqMaIoE03xa456iocpxW6LUoOcphV0DaCpP0gbXPfnDAy8/
ZflnHkdA02MP49WO+YWrl0yz1ybrlgqU3oU2nMh/gQkCSSoO9WQyDILRumqCG7NLdBHzjHfWn7/c
N6SnVQQv1DHo00a5A3zaEk5ZZLdRMTFQoMocJ9kQLq3WvRBmK8OwIkoSWwIDAQABo2MwYTAPBgNV
HRMBAf8EBTADAQH/MB0GA1UdDgQWBBRPaW0Dfp2fBxhDvLcQTtW/qcQgKDAfBgNVHSMEGDAWgBRP
aW0Dfp2fBxhDvLcQTtW/qcQgKDAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQEFBQADggIBADvz
rsroLoeF+2VZ560RFKVXvFifJBJXu/s/NNrurXoqNHJwMWvHGZiAyYLeN3deVIuO8upnT8l0hJFW
CdXlepqBtoHCrTbk8VQRU/M0RQEmyOUavDREId6tJfx2FnchkICYV51O6uwvqjwUe1fBfhgUZ+4k
xr26FbDSGL23VYGsU8Do3WkSE0K3ArUFQcp5UG6CDnFyk0bonQ1dva7OKa1j1VUWgDAn/3a697jW
SuPZtflS0E5AqcflwjLHqnYk4WsFUOvFvwpU5blCPCT7twecMJ95WubgQFIV9Pyq9Fb5RJeH7Q5l
cl6+JvtNpC0IB97YXKDcgTOZGCURd6fr/VgJLJlrG4rzUj8aTUhg8aD2MwJTi+0lCbgNLe2Xc+zX
lh+OYA7aEJsvGCT2pk0K+TvLdcLML84kackKIo5Zp/eCDNfXazWcQwBqxJVnupxFy7gON/fcTgFP
vgq2A9OtikX32idNKbFI3+QR5JZGvWwCPtZRyJUXARWp8qqq8r8vZRtv0Lkak/WONcSAhz6UL2bk
6aj/QZxwKk8qORiVHn77YQE8UQguKBikFg8x/TpsI5MgduH9B4XRWz/SHHMy3fq5+IzPAod6mpbk
7U+JjVNDqw4TwAEVtHk42/xuPZ5RtrgTi2fP+XzZIh32XcUcAS+Y6HokGLyE1/rcclv3wTpoAAAA
AgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvOGY3Yjk2YzQuMAAAAVGFtWg6
AAVYLjUwOQAAAyQwggMgMIICiaADAgECAgQ3cM+1MA0GCSqGSIb3DQEBBQUAME4xCzAJBgNVBAYT
AlVTMRcwFQYDVQQKEw5FcXVpZmF4IFNlY3VyZTEmMCQGA1UECxMdRXF1aWZheCBTZWN1cmUgZUJ1
c2luZXNzIENBLTIwHhcNOTkwNjIzMTIxNDQ1WhcNMTkwNjIzMTIxNDQ1WjBOMQswCQYDVQQGEwJV
UzEXMBUGA1UEChMORXF1aWZheCBTZWN1cmUxJjAkBgNVBAsTHUVxdWlmYXggU2VjdXJlIGVCdXNp
bmVzcyBDQS0yMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDkOTmTHlIGGyg2+LKjKcXtjrIR
vf7r57R0wo//BefZnQa/Esg/DvLW0SSyEd7RcwmK1LEsmAkNHlBGsoOmRY1iaLuFGyBwMqpAzaaW
X8RxNz8E87dBJDkHGh4uYVigEgvlpd/Fq+o3ccwcyDc6uZdSp6zFaiSUTpx7z8Bq1t8hvQIDAQAB
o4IBCTCCAQUwcAYDVR0fBGkwZzBloGOgYaRfMF0xCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5FcXVp
ZmF4IFNlY3VyZTEmMCQGA1UECxMdRXF1aWZheCBTZWN1cmUgZUJ1c2luZXNzIENBLTIxDTALBgNV
BAMTBENSTDEwGgYDVR0QBBMwEYEPMjAxOTA2MjMxMjE0NDVaMAsGA1UdDwQEAwIBBjAfBgNVHSME
GDAWgBRQngvqr165IEimUGrL/dggeqeCdjAdBgNVHQ4EFgQUUJ4L6q9euSBIplBqy/3YIHqngnYw
DAYDVR0TBAUwAwEB/zAaBgkqhkiG9n0HQQAEDTALGwVWMy4wYwMCBsAwDQYJKoZIhvcNAQEFBQAD
gYEADIaCrehOGvWOiSfiNVg9KbQHjzZQlb9uwZ7rxJCyhai7t0LgDwc53/uekLLRwT5TnwNEsH5L
9G/kfB/n4rHkuJrvw73O3gsyNNneKO0za8TU1z0SWKt9CS3LcPUTipShJ6TWcMVtlLXJfZ2g0sYI
Sdlmm6bT9AvcxSZX4ZEw6s0AAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0
cy85NzcyY2EzMi4wAAABUYWz1scABVguNTA5AAADgDCCA3wwggJkoAMCAQICEBistWr9abYVOmNs
r9r6xKEwDQYJKoZIhvcNAQEFBQAwWDELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IElu
Yy4xMTAvBgNVBAMTKEdlb1RydXN0IFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcN
MDYxMTI3MDAwMDAwWhcNMzYwNzE2MjM1OTU5WjBYMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNR2Vv
VHJ1c3QgSW5jLjExMC8GA1UEAxMoR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhv
cml0eTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL64FXv/1Hx9Z62DZHvIQlMt3/aE
CCBh1gFZapxEEa/vdv2Vfs5hMLt6g18CvQFmyu4VjW+hMJy9oYWelDrzVogAMc/Y7mqWAtntA4z7
dW3n6rhVFgUWmvTgXrGIwGSFXBVNiMe3uuB16a0FPZ3HiUjguyjIA+Ewk2ReUsBZcCI1V4iK8ZUK
g9e8MXMBNO3vRnHgawKoNXJrl5tm4MsceV/YGgRoHkcC5p1g4jaXAd/ONZLfvmfHbXdZO4+d1pAV
lLxCNBDBOfmxJz5+1op1xbKvltOi3pvkmL594emBrbZv/NcO2uA0sA0ad+fjCJjvWPqchLc2r8Lf
rNL0EAZwcTUCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0O
BBYEFCzVUEGXFYvwjzZhW0r7a9mZyTOSMA0GCSqGSIb3DQEBBQUAA4IBAQBacH8s3bc0T/WGUakm
vku4qvFxDdxhx6DqNB56dw8ENegnj2yQv5EWJEY+Sk7OKxbVC1Id/B9nogJFMU/O8/oDp3mdU2rZ
2mM6+IDX05nhpeG+1FVxmDU6vpPqrq1CspBv4PwhTTVjM4lJ1ptOysfnTgkA99rH75limXe2lSJe
iqCr9Lh4mMo4GZnJcp54zUusrxmgcxIt/MJBuoGR2hZaMbf5tHGAEkiZcnNaWVPBY1Iz7afJ0jkC
cPrgsUJmKaqbUe0wVCIUX9mrHcHklPD49Sv36sp4Rta4kf2mDSsaFAE+gPBCoJUHXm3NzEukRY2r
Euiz3lrloHzoDyIdWulZAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMv
ZWU5MGIwMDguMAAAAVGFtLpvAAVYLjUwOQAABWcwggVjMIIDS6ADAgECAgE7MA0GCSqGSIb3DQEB
CwUAMFMxCzAJBgNVBAYTAklMMRYwFAYDVQQKEw1TdGFydENvbSBMdGQuMSwwKgYDVQQDEyNTdGFy
dENvbSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSBHMjAeFw0xMDAxMDEwMTAwMDFaFw0zOTEyMzEy
MzU5MDFaMFMxCzAJBgNVBAYTAklMMRYwFAYDVQQKEw1TdGFydENvbSBMdGQuMSwwKgYDVQQDEyNT
dGFydENvbSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSBHMjCCAiIwDQYJKoZIhvcNAQEBBQADggIP
ADCCAgoCggIBALaJNlsHtyA2vYK74RYgA5V6rw6jVcklmUrF0FZBh5BNIWCkFIc7zf2yPrRnA2rt
4Q9LwJGFcEXgQp7eKSPUAQ2gEHm42wO986kv0cbgD8ueihQKuL32VmLxxXK2MiXZsvO9ZcUNLG7V
km8YiwBBFIJvQCAmeigP9R5/J/eUsTc9t8eR9+IB7P2UieHMbtM21goZea7XNIJl/3xCu7bdC6Y0
r0tg/n9DSQaLjEO4VvLZfyFDF+qnSJUBdXXqK6VDleoVhJ0IjSZuVZur3NI50jEdYOKszFZFJPUc
VKvuht2WMoX4TE/olXa2Bd02I2e8/xXiyjvmpuw77CYRNEiN9oArGiMC64ocOnYqe1YWHHIqs6rj
YKUAnwSb4m8eFFhbpWyLWDzDuk46XPfhlis+7we8pOVdzE2fDeHcqrvhbhrsj+G2TE15cl0XNQsd
18FH2pYk4NByqFpfZi0Q3C8qE64m/gocGczQPgucyAku+VuWekec6XrzBVB0lXOeMAnzl4Je5o85
CB5Z5TUUQhP/AJz3vqpQz+JRSNe4b6/4Tn4zmJIUYjp1Y897+t6CO6m7OeLEvSwADsgXrBPvTSWO
2LOQL6naKX0dr3Q6sifAwR4+daMWqa96Il2fExrPp6Dr44YK0/3mlpXXI8g33cR8qjasmBoSseBO
6LE79dZv8TDXAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1Ud
DgQWBBRLxbRAa60cs6UcZW5GNomHBQwOtjANBgkqhkiG9w0BAQsFAAOCAgEAc1c/LNWVMn4325aS
6xleflPnQewRtkfvtd7tdFzF8Y5J4PxumRPNn4razToK2DpaCT9fNNAvA9JmHRq9nJA3yAyOB1qU
RUYq5r562qGppGkSkrB9NtREh9dR8Slj1nXNFuQniR34wjJI/duZ0I9fVHTMrGc0EWLZDAo3h9Gj
F0iO0hcd9tf922Xr/ajU9dZPpFt16MXSYLLbCX4li3u6UpKePujFd6E84Epza2HPhtxD//8h/iNd
JEr1020PYgQFV4LabqQzJXlLLlQZi8wsPTDp0Qb/6DJGvrUzdneoAV2WwcHVvq4lwMkeCgkgiKEO
yfNvTYJUACCn0o/kOVQXLo0euBu7G72aTjsQNNyciFPvojFbWE+RYsjCmprNFV04qda++BO1nxJp
8lBirPsXN/TuuHVnYBD7g1D5RLV1nEAXsv79eV1uWFhfMPwArq8zwQ5ObLqnpqF/Mts44LFyFwor
kexqYybtidR4zHQeBfhr/oxqdjkprmUjEpUIIhyXzlsG7gziu7wfRJP22DhFBSHt5K2rErYDpEIu
LcQJOgNnaYSa4VmQiiiF1V10sdEOIFibE6WwY6bte0f9RVUwpO6a1Obih++YyTKCESkivAAKMV4t
D8CO6Wuyjy4G2NGRx8YS9Ez9MBfDwdo4W+Op6uahunnvc9i2U1ct9tDh10gAAAACAC4vZXhwb3J0
L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy80MTg0ZGUzOS4wAAABUYW1P2MABVguNTA5AAAI
PDCCCDgwggehoAMCAQICAQAwDQYJKoZIhvcNAQEFBQAwggEeMQswCQYDVQQGEwJFUzESMBAGA1UE
CBMJQmFyY2Vsb25hMRIwEAYDVQQHEwlCYXJjZWxvbmExLjAsBgNVBAoTJUlQUyBJbnRlcm5ldCBw
dWJsaXNoaW5nIFNlcnZpY2VzIHMubC4xKzApBgNVBAoUImlwc0BtYWlsLmlwcy5lcyBDLkkuRi4g
IEItNjA5Mjk0NTIxNDAyBgNVBAsTK0lQUyBDQSBUaW1lc3RhbXBpbmcgQ2VydGlmaWNhdGlvbiBB
dXRob3JpdHkxNDAyBgNVBAMTK0lQUyBDQSBUaW1lc3RhbXBpbmcgQ2VydGlmaWNhdGlvbiBBdXRo
b3JpdHkxHjAcBgkqhkiG9w0BCQEWD2lwc0BtYWlsLmlwcy5lczAeFw0wMTEyMjkwMTEwMThaFw0y
NTEyMjcwMTEwMThaMIIBHjELMAkGA1UEBhMCRVMxEjAQBgNVBAgTCUJhcmNlbG9uYTESMBAGA1UE
BxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJUFMgSW50ZXJuZXQgcHVibGlzaGluZyBTZXJ2aWNlcyBz
LmwuMSswKQYDVQQKFCJpcHNAbWFpbC5pcHMuZXMgQy5JLkYuICBCLTYwOTI5NDUyMTQwMgYDVQQL
EytJUFMgQ0EgVGltZXN0YW1waW5nIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MTQwMgYDVQQDEytJ
UFMgQ0EgVGltZXN0YW1waW5nIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkB
Fg9pcHNAbWFpbC5pcHMuZXMwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBALy47lalmozmNsnC
YqBmgY0a1XrSc58OhGS6lbSQp3ivyv5UYVvOsiBXAa5EkkMQOBH3aPwXQKVoJzI7xKfmQnHFme92
/yuVJPVJkhhoygC1pFovbsvWGywNVGdreimhWKuiWgDWW7sYwt/2HhNWdpulaOKYzsYDijTbTINB
pqmjAgMBAAGjggSAMIIEfDAdBgNVHQ4EFgQUi9AQUAmB8p0J1Q5geAMioj/IymYwggFQBgNVHSME
ggFHMIIBQ4AUi9AQUAmB8p0J1Q5geAMioj/IymahggEmpIIBIjCCAR4xCzAJBgNVBAYTAkVTMRIw
EAYDVQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UEChMlSVBTIEludGVy
bmV0IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjErMCkGA1UEChQiaXBzQG1haWwuaXBzLmVzIEMu
SS5GLiAgQi02MDkyOTQ1MjE0MDIGA1UECxMrSVBTIENBIFRpbWVzdGFtcGluZyBDZXJ0aWZpY2F0
aW9uIEF1dGhvcml0eTE0MDIGA1UEAxMrSVBTIENBIFRpbWVzdGFtcGluZyBDZXJ0aWZpY2F0aW9u
IEF1dGhvcml0eTEeMBwGCSqGSIb3DQEJARYPaXBzQG1haWwuaXBzLmVzggEAMAwGA1UdEwQFMAMB
Af8wDAYDVR0PBAUDAwf/gDBrBgNVHSUEZDBiBggrBgEFBQcDAQYIKwYBBQUHAwIGCCsGAQUFBwMD
BggrBgEFBQcDBAYIKwYBBQUHAwgGCisGAQQBgjcCARUGCisGAQQBgjcCARYGCisGAQQBgjcKAwEG
CisGAQQBgjcKAwQwEQYJYIZIAYb4QgEBBAQDAgAHMBoGA1UdEQQTMBGBD2lwc0BtYWlsLmlwcy5l
czAaBgNVHRIEEzARgQ9pcHNAbWFpbC5pcHMuZXMwRwYJYIZIAYb4QgENBDoWOFRpbWVzdGFtcGlu
ZyBDQSBDZXJ0aWZpY2F0ZSBpc3N1ZWQgYnkgaHR0cDovL3d3dy5pcHMuZXMvMCkGCWCGSAGG+EIB
AgQcFhpodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyLzBABglghkgBhvhCAQQEMxYxaHR0cDovL3d3
dy5pcHMuZXMvaXBzMjAwMi9pcHMyMDAyVGltZXN0YW1waW5nLmNybDBFBglghkgBhvhCAQMEOBY2
aHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9yZXZvY2F0aW9uVGltZXN0YW1waW5nLmh0bWw/MEIG
CWCGSAGG+EIBBwQ1FjNodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL3JlbmV3YWxUaW1lc3RhbXBp
bmcuaHRtbD8wQAYJYIZIAYb4QgEIBDMWMWh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcG9saWN5
VGltZXN0YW1waW5nLmh0bWwwfwYDVR0fBHgwdjA3oDWgM4YxaHR0cDovL3d3dy5pcHMuZXMvaXBz
MjAwMi9pcHMyMDAyVGltZXN0YW1waW5nLmNybDA7oDmgN4Y1aHR0cDovL3d3d2JhY2suaXBzLmVz
L2lwczIwMDIvaXBzMjAwMlRpbWVzdGFtcGluZy5jcmwwLwYIKwYBBQUHAQEEIzAhMB8GCCsGAQUF
BzABhhNodHRwOi8vb2NzcC5pcHMuZXMvMA0GCSqGSIb3DQEBBQUAA4GBAGW6wcwAGpWRyulsOr86
HhQIfPuD7mtiUdMzkbVgeX4E2F15N+jDW7DEZy1oWrJfDgr6zT86RaHqNs8mHqcRKMWUj4RMUwjF
k7P84n/1jfOxqYVfiN6Rlu4XW66l6nBleCwhZAGVzs5MPlD0tlnLY422vRjUh0pf3O/pVvAKDOh1
AAAAAgAvL2V4cG9ydC9oZGEzLzYuMTAuNC9sb2NhbC9jb25mL2NlcnRzLzE5ODk5ZGE1LjAAAAEw
uyswxAAFWC41MDkAAASZMIIElTCCA/6gAwIBAgIEOJsRPDANBgkqhkiG9w0BAQQFADCBujEUMBIG
A1UEChMLRW50cnVzdC5uZXQxPzA9BgNVBAsUNnd3dy5lbnRydXN0Lm5ldC9TU0xfQ1BTIGluY29y
cC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTElMCMGA1UECxMcKGMpIDIwMDAgRW50cnVzdC5uZXQg
TGltaXRlZDE6MDgGA1UEAxMxRW50cnVzdC5uZXQgU2VjdXJlIFNlcnZlciBDZXJ0aWZpY2F0aW9u
IEF1dGhvcml0eTAeFw0wMDAyMDQxNzIwMDBaFw0yMDAyMDQxNzUwMDBaMIG6MRQwEgYDVQQKEwtF
bnRydXN0Lm5ldDE/MD0GA1UECxQ2d3d3LmVudHJ1c3QubmV0L1NTTF9DUFMgaW5jb3JwLiBieSBy
ZWYuIChsaW1pdHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMjAwMCBFbnRydXN0Lm5ldCBMaW1pdGVk
MTowOAYDVQQDEzFFbnRydXN0Lm5ldCBTZWN1cmUgU2VydmVyIENlcnRpZmljYXRpb24gQXV0aG9y
aXR5MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDHwV9OcfHO8GCGD9JYf9Mzly0XonUwtZZk
Ji9ow0SrqHXmAGc0V55lxyKbc+bT3QgON1WqJUaBbL3+qPZ1V1eMkGxKwz6LS0MKyRFWmponIpnP
VZ5h2QLifLZ8OAfc439PmrkDQYC2dWcTC5/oVzbIXQA23mYU2m52H083jIITiQIDAQABo4IBpDCC
AaAwEQYJYIZIAYb4QgEBBAQDAgAHMIHjBgNVHR8EgdswgdgwgdWggdKggc+kgcwwgckxFDASBgNV
BAoTC0VudHJ1c3QubmV0MT8wPQYDVQQLFDZ3d3cuZW50cnVzdC5uZXQvU1NMX0NQUyBpbmNvcnAu
IGJ5IHJlZi4gKGxpbWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAyMDAwIEVudHJ1c3QubmV0IExp
bWl0ZWQxOjA4BgNVBAMTMUVudHJ1c3QubmV0IFNlY3VyZSBTZXJ2ZXIgQ2VydGlmaWNhdGlvbiBB
dXRob3JpdHkxDTALBgNVBAMTBENSTDEwKwYDVR0QBCQwIoAPMjAwMDAyMDQxNzIwMDBagQ8yMDIw
MDIwNDE3NTAwMFowCwYDVR0PBAQDAgEGMB8GA1UdIwQYMBaAFMtswGvjuz7L/CKc/vuLkpyw8m4i
MB0GA1UdDgQWBBTLbMBr47s+y/winP77i5KcsPJuIjAMBgNVHRMEBTADAQH/MB0GCSqGSIb2fQdB
AAQQMA4bCFY1LjA6NC4wAwIEkDANBgkqhkiG9w0BAQQFAAOBgQBi24GRzsiad0Iv7L0no1MPUBvq
TpLwqa+poLpIYcvvyQbvH9X07t9WLebKahlzqlO+krNQAraFJnJj2HVQYnUUt7NQGj/KEQALhUVp
bbalrlHhStyCP2yMNLJ3a9kC9n8O6mUE8c1UyrrJzOCE98g+EZfTYAkYvAX/bIkz8OwVDwAAAAIA
Li9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzL2EyZGY3YWQ3LjAAAAFRhbNzcwAF
WC41MDkAAAQZMIIEFTCCAv2gAwIBAgIBATANBgkqhkiG9w0BAQUFADBkMQswCQYDVQQGEwJTRTEU
MBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRUUCBOZXR3b3JrMSAwHgYD
VQQDExdBZGRUcnVzdCBQdWJsaWMgQ0EgUm9vdDAeFw0wMDA1MzAxMDQxNTBaFw0yMDA1MzAxMDQx
NTBaMGQxCzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRkVHJ1
c3QgVFRQIE5ldHdvcmsxIDAeBgNVBAMTF0FkZFRydXN0IFB1YmxpYyBDQSBSb290MIIBIjANBgkq
hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6Rowj4OIFMEg2Dybjxt+A3S72mnTRqX4jsIMEZBRpS9m
VEBV6tsfSlbunyNu9DnLoblv8n75XYcmYZ4c+OLspoH4IcUkzBEMP9smcnrHAZcHF/nXGCwwfQ56
HmIexkvA/X1id9NEHif2P0tEs7c42TkfYNVRknMDtABp4/MUTu7R3AnPdzRGULD4EfL+OHn3Bzn+
UZKXC1sIXzSGAa2Il+tmzV7R/9x98oTaunet3IAIx6eH1lWfl2royBFkuucZKT8Rs3iQhCBSWxHv
eNCD9tVIkNAwHM+A+WD+eeSI8t0A65RF62WUaUC6wNW0uLp9BBGo6zEFlpROWCGOn9Bg/QIDAQAB
o4HRMIHOMB0GA1UdDgQWBBSBPjfYkrAfd59ctKtzquf2NGAv+jALBgNVHQ8EBAMCAQYwDwYDVR0T
AQH/BAUwAwEB/zCBjgYDVR0jBIGGMIGDgBSBPjfYkrAfd59ctKtzquf2NGAv+qFopGYwZDELMAkG
A1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMR0wGwYDVQQLExRBZGRUcnVzdCBUVFAgTmV0
d29yazEgMB4GA1UEAxMXQWRkVHJ1c3QgUHVibGljIENBIFJvb3SCAQEwDQYJKoZIhvcNAQEFBQAD
ggEBAAP3FUr4JNojVhaTdt02KLmuG7jD8WS6IBh4lSknVwW8fCr0uVFV2ocC3g8WFzH4qnkuCRO7
r7IgGRLlk/lL+YPoRNWyQSW/iHVv/xD8SlTQX/D67zZzfRs2RcYhbbQVuE7PnFylPVoAjgbjPGsy
e/Kf8Lb93/AoGEjwxrzQvzSAlsJKsW2Ox5BF3i9nrEUEo3rcVZLJR2bYGozH7ZxOmuASu7VqTITh
4SINhwBk/ox9Yjllpu9CtoAlEmEBqCQTcAARJl/6NVDFSMwGR+gn2HCNX2TmoUQmXiLsks3/QppE
IW1cxeMiHV9HEufOX1362KqxMy3ZdvJOOjMMK7MtkAYAAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40
L2xvY2FsL2NvbmYvY2VydHMvYjVmMzI5ZmEuMAAAATC7KvusAAVYLjUwOQAAAkAwggI8MIIBpQIQ
LRv8SheNo5Hr5//1i0W+CzANBgkqhkiG9w0BAQIFADBfMQswCQYDVQQGEwJVUzEXMBUGA1UEChMO
VmVyaVNpZ24sIEluYy4xNzA1BgNVBAsTLkNsYXNzIDIgUHVibGljIFByaW1hcnkgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkwHhcNOTYwMTI5MDAwMDAwWhcNMjgwODAxMjM1OTU5WjBfMQswCQYDVQQG
EwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xNzA1BgNVBAsTLkNsYXNzIDIgUHVibGljIFBy
aW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGB
ALZai6MNaiODgGvPOYf0IRMzBkwlou1VEpfFp4C5+oPBIKD6LxUNfKFga355LPoGDzqu9htvsdL/
LyhSX4N9S8R6t/hmH4BU/LfCjllKFFdG0ZqTvkGRA7sVgJNc6+fMCGw/PrNK/P9LbCPVUIImRBmO
I8Nx6hkkRwSedb/IpgAfAgMBAAEwDQYJKoZIhvcNAQECBQADgYEAihsr+jnBdNde2BlkolhKLTfg
M0cPrO33qtse5IsGXGAnykVSzhbvPwZk55RofGAzFRFpr51ijaMDVGumvuXuBRhgBL9CgP3QqKge
ATv3o1yvo9zmJoAjPLhEdPcKrkmLYXjMJL+IiqcO6nMZQf1NA/CI0eV4jaUqT/aXDRd3ytgAAAAC
AC4vZXhwb3J0L2hkYTMvNy4yLjAvbG9jYWwvY29uZi9jZXJ0cy83ODhjOWJmYy4wAAABSucYQj8A
BVguNTA5AAADhDCCA4AwggJooAMCAQICAgMeMA0GCSqGSIb3DQEBBQUAMGExCzAJBgNVBAYTAlVT
MQ0wCwYDVQQKEwRWSVNBMS8wLQYDVQQLEyZWaXNhIEludGVybmF0aW9uYWwgU2VydmljZSBBc3Nv
Y2lhdGlvbjESMBAGA1UEAxMJR1AgUm9vdCAyMB4XDTAwMDgxNjIyNTEwMFoXDTIwMDgxNTIzNTkw
MFowYTELMAkGA1UEBhMCVVMxDTALBgNVBAoTBFZJU0ExLzAtBgNVBAsTJlZpc2EgSW50ZXJuYXRp
b25hbCBTZXJ2aWNlIEFzc29jaWF0aW9uMRIwEAYDVQQDEwlHUCBSb290IDIwggEiMA0GCSqGSIb3
DQEBAQUAA4IBDwAwggEKAoIBAQCpAXC1qsRA8KtqJmF5GQD8v5s3WQyvb2Qb+NqVlCRpMxFwyuNW
dKIXV2RcIAbh1u9xtzv3q8Fp0EmksQTX9FdiiVywdS0XJGnjQmDk7nTWq4BW2Igo4fttIv0jfEZz
T35Ucx6oLFVYdbdM81pFpQIa+tqdw0XDIl7zi/FgKdLHX7QMOlGD7zD41OfH8vqZoyJQvvkFN6Ot
7ZrD5uyIG7YZJxs4i4BN7LnHxYnL/Boy7SPwtQFY+faP4IWpTAlyORLbs/XPTmJk2sYZFTpjHekX
VaFMIjw0Mkb4ZVe6K+82jGr62dlE9KrdhNcNHLJUrDKFtGQN3kG7sTTGAYYyZNWfAgMBAAGjQjBA
MB0GA1UdDgQWBBSefUs0v3GtwgX2A3WAzqlPGsQkTDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB
/wQEAwIBBjANBgkqhkiG9w0BAQUFAAOCAQEAIaV2FFX5rSdwjzz01WzIzAqro5gLigYjxclh25kH
aTUmMf7HLoTCmWHUDel9LhMrfI6FtoXHS881tixHPc4pL9hvn4kcZJO/CL120JCKlLN/KFturE0z
LO1l3BbM4s2upD1ikgaVJr/fueQgpnNqwb73lETWTW8qC2sYTXQQNmhqWsFqp902KYy4MItPIT8A
LlQwBzq6iuTDnsrYtdh7znVFZgf0bS3YesrpiYryI9gvy24ANk/78C8BzA/AImX0q+JOYS0Dgn2R
FrUw1RTeXseQ/KH8qxCvXGtwpwfvKYbosiXHIP8m3XfveUQUxL3dO8UDm3cj7KDsu1o5tcytBgAA
AAIALy9leHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy82MzVjY2ZkNS4wAAABMLsr
gFAABVguNTA5AAAFUzCCBU8wggS4oAMCAQICAWgwDQYJKoZIhvcNAQEEBQAwgZsxCzAJBgNVBAYT
AkhVMREwDwYDVQQHEwhCdWRhcGVzdDEnMCUGA1UEChMeTmV0TG9jayBIYWxvemF0Yml6dG9uc2Fn
aSBLZnQuMRowGAYDVQQLExFUYW51c2l0dmFueWtpYWRvazE0MDIGA1UEAxMrTmV0TG9jayBFeHBy
ZXNzeiAoQ2xhc3MgQykgVGFudXNpdHZhbnlraWFkbzAeFw05OTAyMjUxNDA4MTFaFw0xOTAyMjAx
NDA4MTFaMIGbMQswCQYDVQQGEwJIVTERMA8GA1UEBxMIQnVkYXBlc3QxJzAlBgNVBAoTHk5ldExv
Y2sgSGFsb3phdGJpenRvbnNhZ2kgS2Z0LjEaMBgGA1UECxMRVGFudXNpdHZhbnlraWFkb2sxNDAy
BgNVBAMTK05ldExvY2sgRXhwcmVzc3ogKENsYXNzIEMpIFRhbnVzaXR2YW55a2lhZG8wgZ8wDQYJ
KoZIhvcNAQEBBQADgY0AMIGJAoGBAOvssGxhiiMlr2Ag49mf/JML212NsKGzQDqCzv114HgyA4Za
hpWR7VP6nUD85ujd2Vt6A71d8zsMw1F5m61VoOnQAxCvCroUQtlSJhEix9IgzIKkmqn+uIF2nWq3
0jZ1PrGGCfZubX5Ot3rsrnGE9gQzCCUy63SsFkTG5ECTHX+tAgMBAAGjggKfMIICmzASBgNVHRMB
Af8ECDAGAQH/AgEEMA4GA1UdDwEB/wQEAwIABjARBglghkgBhvhCAQEEBAMCAAcwggJgBglghkgB
hvhCAQ0EggJRFoICTUZJR1lFTEVNISBFemVuIHRhbnVzaXR2YW55IGEgTmV0TG9jayBLZnQuIEFs
dGFsYW5vcyBTem9sZ2FsdGF0YXNpIEZlbHRldGVsZWliZW4gbGVpcnQgZWxqYXJhc29rIGFsYXBq
YW4ga2VzenVsdC4gQSBoaXRlbGVzaXRlcyBmb2x5YW1hdGF0IGEgTmV0TG9jayBLZnQuIHRlcm1l
a2ZlbGVsb3NzZWctYml6dG9zaXRhc2EgdmVkaS4gQSBkaWdpdGFsaXMgYWxhaXJhcyBlbGZvZ2Fk
YXNhbmFrIGZlbHRldGVsZSBheiBlbG9pcnQgZWxsZW5vcnplc2kgZWxqYXJhcyBtZWd0ZXRlbGUu
IEF6IGVsamFyYXMgbGVpcmFzYSBtZWd0YWxhbGhhdG8gYSBOZXRMb2NrIEtmdC4gSW50ZXJuZXQg
aG9ubGFwamFuIGEgaHR0cHM6Ly93d3cubmV0bG9jay5uZXQvZG9jcyBjaW1lbiB2YWd5IGtlcmhl
dG8gYXogZWxsZW5vcnplc0BuZXRsb2NrLm5ldCBlLW1haWwgY2ltZW4uIElNUE9SVEFOVCEgVGhl
IGlzc3VhbmNlIGFuZCB0aGUgdXNlIG9mIHRoaXMgY2VydGlmaWNhdGUgaXMgc3ViamVjdCB0byB0
aGUgTmV0TG9jayBDUFMgYXZhaWxhYmxlIGF0IGh0dHBzOi8vd3d3Lm5ldGxvY2submV0L2RvY3Mg
b3IgYnkgZS1tYWlsIGF0IGNwc0BuZXRsb2NrLm5ldC4wDQYJKoZIhvcNAQEEBQADgYEAEK1/1wwy
gArYhvF5mLWt1M2zNsSWSMFczZrZBS6fvlDr9CYUEC3UZhf4nsEn/fHt5HtLoGy1q5pXcKbtoKTt
LvX9/L3+TTcIDLzjloMi9Ukbf0srtFTBgHyZTh3QjO7QrOWS+nVW/mSgE4+4uBadYQVngMjQ2KUH
AjSYBI0zBNQAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy9kNjRmMDZm
My4wAAABUYW0T2AABVguNTA5AAAEEzCCBA8wggL3oAMCAQICAQEwDQYJKoZIhvcNAQEFBQAwSjEL
MAkGA1UEBhMCU0sxEzARBgNVBAcTCkJyYXRpc2xhdmExEzARBgNVBAoTCkRpc2lnIGEucy4xETAP
BgNVBAMTCENBIERpc2lnMB4XDTA2MDMyMjAxMzkzNFoXDTE2MDMyMjAxMzkzNFowSjELMAkGA1UE
BhMCU0sxEzARBgNVBAcTCkJyYXRpc2xhdmExEzARBgNVBAoTCkRpc2lnIGEucy4xETAPBgNVBAMT
CENBIERpc2lnMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAkvYxwX2I/ZkBqdh78nF1
8THG83Vm+lEoRoSXeDS8bPy8RVmIJhhKxDcfoUpEveNxBPVEF+I//EhYb1yeegm6UTciI2ZDIbA8
ZKL4ahUOP+tR4VSp3QaZ15o8VIs5Az8Pxc7G64NyAqgfcfMt+HUI22JM6PrO+edqH7ZrNYK64o8W
kn0FDGxGA13A7Wm/OsGKoOiO2blFKIcI7LTKFb6C3bVEiy2thgxoYm2FVvKsFGM6xtGZrDR4VkvP
tq0/jIrXBOXjeEz1hqr1j/o9bHGjLcpn62h7bjOpDIIoqExqIUAVIAwmW4PCqRYVwCSCXSsWrcpj
9nQAsN9DxBBgVmdjRQIDAQABo4H/MIH8MA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFI2ySWid
cgglucAn9VCTVkhGcfmPMA4GA1UdDwEB/wQEAwIBBjA2BgNVHREELzAtgRNjYW9wZXJhdG9yQGRp
c2lnLnNrhhZodHRwOi8vd3d3LmRpc2lnLnNrL2NhMGYGA1UdHwRfMF0wLaAroCmGJ2h0dHA6Ly93
d3cuZGlzaWcuc2svY2EvY3JsL2NhX2Rpc2lnLmNybDAsoCqgKIYmaHR0cDovL2NhLmRpc2lnLnNr
L2NhL2NybC9jYV9kaXNpZy5jcmwwGgYDVR0gBBMwETAPBg0rgR6Rk+YKAAAAAQEBMA0GCSqGSIb3
DQEBBQUAA4IBAQBdNHRhTK872P+fbVg2HD0LgQ0SK0YQgP3nPCfQesiptn50MDOjOop7dMB5eUKT
bf+xKRSCqyGMLxf5PyYv9VnG74AGt5pJKezOfnE8ahBBwPbTmrJ8WpGcwKxbyE1e9+FT/0N3/J5L
Z2zX84PRoOB/Jd+4mAuaMjhsMKDz/wgVM/dQSns+oz4gqdwvVoAK7UFQsMn07LLjJkQADm+eBrwi
llNwZcRQCkZrpC8ngRInE18QoXbOins36sM5YQOVmDrnbIglCPx5aA2HfWL4tF/7xdhMvVi8P0Nb
1B4BTTxjviPvjM1aULhoVPkKmTMRAOGewkZ3gvVZBowhTIcJzeWoAAAAAgAuL2V4cG9ydC9oZGEz
LzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvNzRjMjZiZDAuMAAAAUrnGDvaAAVYLjUwOQAAApQwggKQ
MIIB+aADAgECAgEBMA0GCSqGSIb3DQEBBAUAMFoxCzAJBgNVBAYTAlVTMRwwGgYDVQQKExNFcXVp
ZmF4IFNlY3VyZSBJbmMuMS0wKwYDVQQDEyRFcXVpZmF4IFNlY3VyZSBHbG9iYWwgZUJ1c2luZXNz
IENBLTEwHhcNOTkwNjIxMDQwMDAwWhcNMjAwNjIxMDQwMDAwWjBaMQswCQYDVQQGEwJVUzEcMBoG
A1UEChMTRXF1aWZheCBTZWN1cmUgSW5jLjEtMCsGA1UEAxMkRXF1aWZheCBTZWN1cmUgR2xvYmFs
IGVCdXNpbmVzcyBDQS0xMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC65xeQAmWxNFU8ScJR
1d+n0TeP0eeBc0FSYJudoRcmeK3HsegmlDK13jONOi/b8pp6WnOYo1zp+4pzG1znw7+AbM2p9NYr
wPf5mapjorFHAg/U5FE6EjxsilpUhHDbwcWQz3JFy6hZwM0znT+jluuFMyEcPh4+YG52nGeFxcjD
YQIDAQABo2YwZDARBglghkgBhvhCAQEEBAMCAAcwDwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAW
gBS+qKB0clBrRLfJI9j7qP+zV2tobDAdBgNVHQ4EFgQUvqigdHJQa0S3ySPY+6j/s1draGwwDQYJ
KoZIhvcNAQEEBQADgYEAMOIBUarH6l/audBlDzDWPtoNFElukZMnFDHvxPctRfjsx7+iQQ0jtJL5
GQBnvQGvzeBx/FrPZMTglpjQo0DiAYrvJwfxZQGKRC0GZXVSwIYQICFfbGsPbK4JHK/yohg0xHWk
cxzxjdzvrfmzdrSSv9yVEB6+y8g7WoRgGVaUqVUAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9j
YWwvY29uZi9jZXJ0cy82ZThiZjk5Ni4wAAABUYWzjSUABVguNTA5AAADEDCCAwwwggH0oAMCAQIC
AwEAIDANBgkqhkiG9w0BAQUFADA+MQswCQYDVQQGEwJQTDEbMBkGA1UEChMSVW5pemV0byBTcC4g
eiBvLm8uMRIwEAYDVQQDEwlDZXJ0dW0gQ0EwHhcNMDIwNjExMTA0NjM5WhcNMjcwNjExMTA0NjM5
WjA+MQswCQYDVQQGEwJQTDEbMBkGA1UEChMSVW5pemV0byBTcC4geiBvLm8uMRIwEAYDVQQDEwlD
ZXJ0dW0gQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDOscEu0098zSXOGD5PxIxv
gGpzyFtR+JvS3LsAXLGg/HUD7oHwiO4jUunmFTONrC0JxXb5KzmAieSXS5ClqHj4c0N7pGGw2FjM
4WxmfpzzCV5VY4TVqO/zsS4waLPEPNisbo2ZWpBONNw2mo+BiFC3bZZCCfPXlYMNQUuwamv4/A9+
Yp9nxO0mXxAmDwhP8KRXKM6PuO1F9m7uJV2qbjm+5JMv2Uegcuv6pluvylM/4g7GllYRbvfpZqkm
2H+VU+0KhYi6TymlQoxetvyFIACqaAuhGoUBnMRGY4KItiKx7v6qRll+zzUs1bbaXfdIMxRUtuvZ
b87NiNarG9qWOx1ZAgMBAAGjEzARMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEB
ALiNzu/nFLrP7rBEkmy0OT6ihG6tuCF30tR3gofmIEGB7uL4Ebdj0Rc3vhl2JBwEGkzrPapnby3U
zf5lMXDFG6YCCrpge21YwppJ/mMyC2vjOsCsqzuw6NMJUYwQg8Y04MUr4Bq2YBQnbDJ3jLyycpjP
zcw/ucgkQhTWV/zmJkOpHeWAkM4DVCg+9z/T+E3tago6kxObOxQjE2OcP9GHJ3nlTFHjAa2FXRo7
sdVzEKTT8rxuZPVaVpCoxw5MdA8ucTv3yEf0aW8V8hFegx6cfFKu/QLaEqhZZxjbvHDdm7Fp7YDO
iUBIag41yilmFSGULOhgKpuFSkDza4ok7AYWLHMAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9j
YWwvY29uZi9jZXJ0cy83NjUxYjMyNy4wAAABUYW1tUMABVguNTA5AAACQDCCAjwwggGlAhA8kTHL
H/bQGw6auNBEvxK+MA0GCSqGSIb3DQEBBQUAMF8xCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJp
U2lnbiwgSW5jLjE3MDUGA1UECxMuQ2xhc3MgMyBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9u
IEF1dGhvcml0eTAeFw05NjAxMjkwMDAwMDBaFw0yODA4MDIyMzU5NTlaMF8xCzAJBgNVBAYTAlVT
MRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE3MDUGA1UECxMuQ2xhc3MgMyBQdWJsaWMgUHJpbWFy
eSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAyVxZ
nvIbigEUtBDfBEDb41evakVAj4QMC9Ez2dkRz+4CWB8l9yqoRAWq7AMfeH+ek7maAKojfdashaJj
RcdyJ8z0TMZ1cdI5709C8HXfCpDGjiBvmA/4rCNfcCk2pMmG57GaIMtTpYXnPb59mv4kRTPcdhXt
D6JxZExlLoFoRacCAwEAATANBgkqhkiG9w0BAQUFAAOBgQAQclKpBRQZMghB8MVrCsx+DyEZzeRn
3F+pG+bK6HOdItiYbnMDYZHFfLBFQG5EnY2wsZZ0YS0NqUXSpJIq1pp1l24/U/1FmWAdqCtM+V6n
Cdh1MNfSZWA9Z9ZIVXVpP5H1SAtHaSJpgpa+ycg4hkp6LHMZSGlOa3xlvw/8cM6IkAAAAAIALi9l
eHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzLzRkNjU0ZDFkLjAAAAFK5xft1wAFWC41
MDkAAAJeMIICWjCCAcMCAgGlMA0GCSqGSIb3DQEBBAUAMHUxCzAJBgNVBAYTAlVTMRgwFgYDVQQK
Ew9HVEUgQ29ycG9yYXRpb24xJzAlBgNVBAsTHkdURSBDeWJlclRydXN0IFNvbHV0aW9ucywgSW5j
LjEjMCEGA1UEAxMaR1RFIEN5YmVyVHJ1c3QgR2xvYmFsIFJvb3QwHhcNOTgwODEzMDAyOTAwWhcN
MTgwODEzMjM1OTAwWjB1MQswCQYDVQQGEwJVUzEYMBYGA1UEChMPR1RFIENvcnBvcmF0aW9uMScw
JQYDVQQLEx5HVEUgQ3liZXJUcnVzdCBTb2x1dGlvbnMsIEluYy4xIzAhBgNVBAMTGkdURSBDeWJl
clRydXN0IEdsb2JhbCBSb290MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCVD6C28FCc6HrH
iM3dFw4usJTQGz0O9pTAipTHBsiQl8i4ZBp6fmw8U+E3KHNgf7KXUwefU/ltWJTSr41tiGeA5u2y
lc9yMcqlHHK6XALnZELn+aks1joNrI1CqiQBOeacPwGFVw1Yh0X404Wqk2kmhXBIgD8SFcd5tB8F
LztimQIDAQABMA0GCSqGSIb3DQEBBAUAA4GBAG3rGwnpXtlR22ciYaQqPEh346B8pt5zohQDhT37
qw4wxYMWM4ETCJ57NE7fQMh017l93PR2VX2bY1QY6fDq81yx2YtCHrnAlU66+tXifPVoYb+O7AWX
X1uw16OFNMQkpw0PlZPvy5TYnh+dXIVtx6quTx8itc2VrbqnzPmrC3p/AAAAAgAvL2V4cG9ydC9o
ZGEzLzYuMTAuNC9sb2NhbC9jb25mL2NlcnRzLzcyZmE3MzcxLjAAAAEwuysCQwAFWC41MDkAAAMG
MIIDAjCCAmsCEH3Z/gfPqB63EHln+6eJNMYwDQYJKoZIhvcNAQEFBQAwgcExCzAJBgNVBAYTAlVT
MRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgMyBQdWJsaWMgUHJpbWFy
eSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcyMTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2ln
biwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVz
dCBOZXR3b3JrMB4XDTk4MDUxODAwMDAwMFoXDTI4MDgwMTIzNTk1OVowgcExCzAJBgNVBAYTAlVT
MRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgMyBQdWJsaWMgUHJpbWFy
eSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcyMTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2ln
biwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVz
dCBOZXR3b3JrMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMXtERXVxp0KvTuWpMmR9ZmDCO
FoUgRm1HP9SFIIThbbP4pO0M8RcPO/mn+SXXwc+EY/J8Y8+iR/LGWzOOZEAEaMGAuWQcRXfH2G71
lSk8UOg013gfqLptQ5GVj0VXXn7F+8qkBOvqlzdUMG+7AUcyM83cV5tkaWH4mx0ciU9cZwIDAQAB
MA0GCSqGSIb3DQEBBQUAA4GBAFFNzb5cy5gZnBWyATl4Lk0PZ3BwmcYQWpSkU01UbSuvDV1Ai2TT
1+7eVmGSX6bEHRBhNtMsJzzoKQm5EWR0zLVznxxIqbxhAe7iF6YM40AIOw7n60RzKprxaZLvcRTD
Oaxxp5EJb+RxBrO6WVcmeQD2+A2iMzAo1KpYoJ2daZH9AAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4w
L2xvY2FsL2NvbmYvY2VydHMvODMxN2IxMGMuMAAAAVGFtWBrAAVYLjUwOQAABtUwggbRMIIFuaAD
AgECAgF7MA0GCSqGSIb3DQEBBQUAMIHJMQswCQYDVQQGEwJIVTERMA8GA1UEBxMIQnVkYXBlc3Qx
JzAlBgNVBAoTHk5ldExvY2sgSGFsb3phdGJpenRvbnNhZ2kgS2Z0LjEaMBgGA1UECxMRVGFudXNp
dHZhbnlraWFkb2sxQjBABgNVBAMTOU5ldExvY2sgTWlub3NpdGV0dCBLb3pqZWd5em9pIChDbGFz
cyBRQSkgVGFudXNpdHZhbnlraWFkbzEeMBwGCSqGSIb3DQEJARYPaW5mb0BuZXRsb2NrLmh1MB4X
DTAzMDMzMDAxNDcxMVoXDTIyMTIxNTAxNDcxMVowgckxCzAJBgNVBAYTAkhVMREwDwYDVQQHEwhC
dWRhcGVzdDEnMCUGA1UEChMeTmV0TG9jayBIYWxvemF0Yml6dG9uc2FnaSBLZnQuMRowGAYDVQQL
ExFUYW51c2l0dmFueWtpYWRvazFCMEAGA1UEAxM5TmV0TG9jayBNaW5vc2l0ZXR0IEtvemplZ3l6
b2kgKENsYXNzIFFBKSBUYW51c2l0dmFueWtpYWRvMR4wHAYJKoZIhvcNAQkBFg9pbmZvQG5ldGxv
Y2suaHUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDHUiWy2D3UhFUJpxu9bLkU9IoC
23b8aip4q+V38G7gjCNn26VkmbndAT5v7y2aPCLwXclXoFVBf/JDXliCUzFlzh7yJroAVB6vsLwc
5FKMoDKvtzexU2dodGdQ9i0uZN6uJnnf35mGq6t/heyg+4DM9LgMHpNFY7ncuFub7Vs51F9isKeO
fGY4LKqxCGMXZ33MvbPxwz/PUDnt0RmDFduHEieWt9rq5Z28uuo5T4vvdJrnxdDS6oZRHOT+ZAgo
BHkF68rFcQ4L76vq7BIRoRgFMmnRDCwaPSWZP7V8ym2wrpmZ+ghg5xnC8r1R08zTAqzBEQyAzqvc
lJ1rozlTOtaFAgMAxX2jggLAMIICvDASBgNVHRMBAf8ECDAGAQH/AgEEMA4GA1UdDwEB/wQEAwIB
BjCCAnUGCWCGSAGG+EIBDQSCAmYWggJiRklHWUVMRU0hIEV6ZW4gdGFudXNpdHZhbnkgYSBOZXRM
b2NrIEtmdC4gTWlub3NpdGV0dCBTem9sZ2FsdGF0YXNpIFN6YWJhbHl6YXRhYmFuIGxlaXJ0IGVs
amFyYXNvayBhbGFwamFuIGtlc3p1bHQuIEEgbWlub3NpdGV0dCBlbGVrdHJvbmlrdXMgYWxhaXJh
cyBqb2doYXRhcyBlcnZlbnllc3VsZXNlbmVrLCB2YWxhbWludCBlbGZvZ2FkYXNhbmFrIGZlbHRl
dGVsZSBhIE1pbm9zaXRldHQgU3pvbGdhbHRhdGFzaSBTemFiYWx5emF0YmFuLCBheiBBbHRhbGFu
b3MgU3plcnpvZGVzaSBGZWx0ZXRlbGVrYmVuIGVsb2lydCBlbGxlbm9yemVzaSBlbGphcmFzIG1l
Z3RldGVsZS4gQSBkb2t1bWVudHVtb2sgbWVndGFsYWxoYXRvayBhIGh0dHBzOi8vd3d3Lm5ldGxv
Y2suaHUvZG9jcy8gY2ltZW4gdmFneSBrZXJoZXRvayBheiBpbmZvQG5ldGxvY2submV0IGUtbWFp
bCBjaW1lbi4gV0FSTklORyEgVGhlIGlzc3VhbmNlIGFuZCB0aGUgdXNlIG9mIHRoaXMgY2VydGlm
aWNhdGUgYXJlIHN1YmplY3QgdG8gdGhlIE5ldExvY2sgUXVhbGlmaWVkIENQUyBhdmFpbGFibGUg
YXQgaHR0cHM6Ly93d3cubmV0bG9jay5odS9kb2NzLyBvciBieSBlLW1haWwgYXQgaW5mb0BuZXRs
b2NrLm5ldDAdBgNVHQ4EFgQUCWpiFpKwWrtVDst1Mjoy5bIhySgwDQYJKoZIhvcNAQEFBQADggEB
AJFqUJzbeIGbP4tC4zv8psPuQ+DP8+KANUlFdgLi4y8FxfEq58BBM8a2m9AzOc3A26GtbDcCTFhB
O/KXksZIqM3lijmJYflSl+m99vmUdOhxDrx3hsMGzFp8Sn40UDAu+38ymo098yBb+GrKhvMxTCxZ
gAJ9/jjJMHUct1XjvJ+6qG2EKAV1s4sNwJFUIeemC7SZ9VFB3M2jRyLZxwGBxNxHTybqH+3bzQ2Y
9KOctHMySpaZ/rx/yCVY+FjzdmaJVKSmPsRQXLqJGIJ1SCHSTxPoYH4HdtsQtVHmqrloqs32nZB1
Euo4GspE6LeZpypolWaVq63victgqQYSxpRH6SgAAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40L2xv
Y2FsL2NvbmYvY2VydHMvNzA5YWZkMmIuMAAAATC7KuzZAAVYLjUwOQAAAzEwggMtMIIClqADAgEC
AgEAMA0GCSqGSIb3DQEBBAUAMIHRMQswCQYDVQQGEwJaQTEVMBMGA1UECBMMV2VzdGVybiBDYXBl
MRIwEAYDVQQHEwlDYXBlIFRvd24xGjAYBgNVBAoTEVRoYXd0ZSBDb25zdWx0aW5nMSgwJgYDVQQL
Ex9DZXJ0aWZpY2F0aW9uIFNlcnZpY2VzIERpdmlzaW9uMSQwIgYDVQQDExtUaGF3dGUgUGVyc29u
YWwgRnJlZW1haWwgQ0ExKzApBgkqhkiG9w0BCQEWHHBlcnNvbmFsLWZyZWVtYWlsQHRoYXd0ZS5j
b20wHhcNOTYwMTAxMDAwMDAwWhcNMjAxMjMxMjM1OTU5WjCB0TELMAkGA1UEBhMCWkExFTATBgNV
BAgTDFdlc3Rlcm4gQ2FwZTESMBAGA1UEBxMJQ2FwZSBUb3duMRowGAYDVQQKExFUaGF3dGUgQ29u
c3VsdGluZzEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lvbjEkMCIGA1UE
AxMbVGhhd3RlIFBlcnNvbmFsIEZyZWVtYWlsIENBMSswKQYJKoZIhvcNAQkBFhxwZXJzb25hbC1m
cmVlbWFpbEB0aGF3dGUuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDUadfUsJRkW3Hp
R9gMUbbqcpGwhF59LQ2PexLfhSV1KHQ6QixjJ5+Ve0vvfhmHHYbqo925zpZkGsIUbkSsfOaP6E0P
cR9AOKYAo4d49vmUhl6t6sBeduvZFKNdbnp8DKVLVX8GGSl/npom1Wq7OCQIapjHsdqjmJH9edvl
WsQcuQIDAQABoxMwETAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBBAUAA4GBAMfskn5O+PWW
pWdiKqTwTRFg0G+NYFhhrCa7UjVcCM8w+6hKloofYkIjjBcP9LpknBesRynfnZhe0mxgcVyirNx5
4+duAEcftQ0o6AKd5Jr9E/Sm2Xyx+NxfIyYJkYBz0BQb3kOpgyXy5pwvFcr+pquKB3WLDN1RhGvk
+NHOd6KBAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvN2QzY2Q4MjYu
MAAAAUrnGCcjAAVYLjUwOQAAAuswggLnMIICUAIBATANBgkqhkiG9w0BAQUFADCBuzEkMCIGA1UE
BxMbVmFsaUNlcnQgVmFsaWRhdGlvbiBOZXR3b3JrMRcwFQYDVQQKEw5WYWxpQ2VydCwgSW5jLjE1
MDMGA1UECxMsVmFsaUNlcnQgQ2xhc3MgMyBQb2xpY3kgVmFsaWRhdGlvbiBBdXRob3JpdHkxITAf
BgNVBAMTGGh0dHA6Ly93d3cudmFsaWNlcnQuY29tLzEgMB4GCSqGSIb3DQEJARYRaW5mb0B2YWxp
Y2VydC5jb20wHhcNOTkwNjI2MDAyMjMzWhcNMTkwNjI2MDAyMjMzWjCBuzEkMCIGA1UEBxMbVmFs
aUNlcnQgVmFsaWRhdGlvbiBOZXR3b3JrMRcwFQYDVQQKEw5WYWxpQ2VydCwgSW5jLjE1MDMGA1UE
CxMsVmFsaUNlcnQgQ2xhc3MgMyBQb2xpY3kgVmFsaWRhdGlvbiBBdXRob3JpdHkxITAfBgNVBAMT
GGh0dHA6Ly93d3cudmFsaWNlcnQuY29tLzEgMB4GCSqGSIb3DQEJARYRaW5mb0B2YWxpY2VydC5j
b20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAOOYUZYc6NWxBoFqV8NydZOrz56m/PMWUtYt
TZ81RKguBE0HSYo4KfV3N+e3q13fNnEUmY/cwpLx52CSl+zYSNy/wQIgxiSkKEwwWnZtsVzz3d6e
EHGhiMdbm0FtyrC4jhXurTMrz0cEXHVxCpgkmCmnSVml3fi3Q2Jh89Pi0FU/AgMBAAEwDQYJKoZI
hvcNAQEFBQADgYEAVrsCWIRnCCzfH9t7STP102ed9LQKELPJxSzikmpxeCfycINC0z7PqVT08diS
FozRBMtLq8mfRa48iqmwcTNdyMVX36+oNbN/iYfp6CWSuH+Feq7WvB43WCpnyZHPKoE+7cY538A+
GZwZzBNNgkG1jN7gPWAIIA9Ffmuif6OMFe4AAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwv
Y29uZi9jZXJ0cy83YTQ4MWU2Ni4wAAABUYW0CpEABVguNTA5AAAErjCCBKowggOSoAMCAQICDkpH
AAEAAuWgXdY/AFG/MA0GCSqGSIb3DQEBBQUAMHYxCzAJBgNVBAYTAkRFMRwwGgYDVQQKExNUQyBU
cnVzdENlbnRlciBHbWJIMSIwIAYDVQQLExlUQyBUcnVzdENlbnRlciBDbGFzcyAzIENBMSUwIwYD
VQQDExxUQyBUcnVzdENlbnRlciBDbGFzcyAzIENBIElJMB4XDTA2MDExMjE0NDE1N1oXDTI1MTIz
MTIyNTk1OVowdjELMAkGA1UEBhMCREUxHDAaBgNVBAoTE1RDIFRydXN0Q2VudGVyIEdtYkgxIjAg
BgNVBAsTGVRDIFRydXN0Q2VudGVyIENsYXNzIDMgQ0ExJTAjBgNVBAMTHFRDIFRydXN0Q2VudGVy
IENsYXNzIDMgQ0EgSUkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC04LtRuzlciwTF
THkcI4YxEGNDVSc/xkXHpD3sCQ0aHiDCVh7eGzcHMCIvb/EG8aut1sirYaMvQ8Swsi38w5Zpe36K
5MzAORKQQmDJzDVo7tpfkFZfzRxNW1hJ6w4BT2T6LDyJWNgvLuKwaOkiO3WJ1kQaZfIblyYdKG2s
6L1ZHSsk9taEA2aIJAB4YPH4q/4Csmv7Ivs15hbRrfYuEuT6NWrlGbld2zseGvvT/xUUCNgJarpF
nRR5YH2vQIoHc7OTltN0NI06NyneXOz17i4xwiDcvvFPfyNS2VviZNmcqgcItUW90dAxwatUn6nS
w2JgA/G7OUqSSj0KuZ3FoP43AgMBAAGjggE0MIIBMDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB
/wQEAwIBBjAdBgNVHQ4EFgQU1KL8n7PD2APTV1wHpNAkp8DyANQwge0GA1UdHwSB5TCB4jCB36CB
3KCB2YY1aHR0cDovL3d3dy50cnVzdGNlbnRlci5kZS9jcmwvdjIvdGNfY2xhc3NfM19jYV9JSS5j
cmyGgZ9sZGFwOi8vd3d3LnRydXN0Y2VudGVyLmRlL0NOPVRDJTIwVHJ1c3RDZW50ZXIlMjBDbGFz
cyUyMDMlMjBDQSUyMElJLE89VEMlMjBUcnVzdENlbnRlciUyMEdtYkgsT1U9cm9vdGNlcnRzLERD
PXRydXN0Y2VudGVyLERDPWRlP2NlcnRpZmljYXRlUmV2b2NhdGlvbkxpc3Q/YmFzZT8wDQYJKoZI
hvcNAQEFBQADggEBADZg5HD3BiBD2SMaQvL4o7K5TYq088KaVTF8xDtnmrTfTQ6Kk0oXixuNyonh
zzoerB3xnDK0jll2okGFJTegE9D1fE7V6pbibnLBuyr+bG74kZhG/MkbV1vqyBo7P7BRmDwH2ixZ
AdqLROjhdP2naN1UuoNG7MhGtfivl8A7CRyPznKWPTNWcLyWy9jVfSCag58a3DnxxXKjEQP9O0JS
KdvoAfebXozWjYZOGfq8HL7FIaWHnnguNtsJcaNyNPhs4wYJ8l5WpdPdmPrU5gb08LYgY0vqKb2q
gmYe+4GqpzetExjmksOBwTO7iB6h5+K0vTFsDlE9b/uWVoDiNhfR3OQAAAACAC4vZXhwb3J0L2hk
YTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy8wNDgxY2I2NS4wAAABUYW1IjMABVguNTA5AAAF6jCC
BeYwggPOoAMCAQICAQEwDQYJKoZIhvcNAQEFBQAwgYMxCzAJBgNVBAYTAlVTMR0wGwYDVQQKExRB
T0wgVGltZSBXYXJuZXIgSW5jLjEcMBoGA1UECxMTQW1lcmljYSBPbmxpbmUgSW5jLjE3MDUGA1UE
AxMuQU9MIFRpbWUgV2FybmVyIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgMjAeFw0wMjA1
MjkwNjAwMDBaFw0zNzA5MjgyMzQzMDBaMIGDMQswCQYDVQQGEwJVUzEdMBsGA1UEChMUQU9MIFRp
bWUgV2FybmVyIEluYy4xHDAaBgNVBAsTE0FtZXJpY2EgT25saW5lIEluYy4xNzA1BgNVBAMTLkFP
TCBUaW1lIFdhcm5lciBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IDIwggIiMA0GCSqGSIb3
DQEBAQUAA4ICDwAwggIKAoICAQC0N1oIFpkU6FWxGyRr/MeL5oepie6Lmc1PQIaktk3J2bHcPE0N
hUwVbEaLUnif+CP9Z/UkOmhd0PdkYUFUo4ulCNIpW5tgTyaD0WMSVkl2pBbCpZ1FrIuElagWseyf
6iQa77lXXJokISxNDnEfpqxdRXQDmMRUjBZKQXeGlXUMRwFmYPwV8Q/q9RR4xw7XboEcXr9e5zoq
2JcXMHwArQidM6+4mWGAi6iVfhTcEmyk0NjvQEkCNvluqdYdllYEsrMtFlaGj9kgV4DNZxBtsEzw
2ka26iUuRq+NsIU4NIsUJoIrrK6ZC44U11K9nmnDhgIL6nZ1MQnOMxkhhUPmiS2fJTdn8SNq0gBt
l/mf5ynK3R/XBuq4ybkJIZ/IPwbF0ukSRgBOewjrQj0rSG6dZ91LAuRE85MZpSfOaXq+Z9P8UKQs
q8NrueOATM8FYUsr3Bu5ptLQqvUrc/vOkDWfDFIcv1whYRFbFUupJFH8pFz3F52w0voH6Y9W5BqM
aIoE03xa456iocpxW6LUoOcphV0DaCpP0gbXPfnDAy8/ZflnHkdA02MP49WO+YWrl0yz1ybrlgqU
3oU2nMh/gQkCSSoO9WQyDILRumqCG7NLdBHzjHfWn7/cN6SnVQQv1DHo00a5A3zaEk5ZZLdRMTFQ
oMocJ9kQLq3WvRBmK8OwIkoSWwIDAQABo2MwYTAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRP
aW0Dfp2fBxhDvLcQTtW/qcQgKDAfBgNVHSMEGDAWgBRPaW0Dfp2fBxhDvLcQTtW/qcQgKDAOBgNV
HQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQEFBQADggIBADvzrsroLoeF+2VZ560RFKVXvFifJBJXu/s/
NNrurXoqNHJwMWvHGZiAyYLeN3deVIuO8upnT8l0hJFWCdXlepqBtoHCrTbk8VQRU/M0RQEmyOUa
vDREId6tJfx2FnchkICYV51O6uwvqjwUe1fBfhgUZ+4kxr26FbDSGL23VYGsU8Do3WkSE0K3ArUF
Qcp5UG6CDnFyk0bonQ1dva7OKa1j1VUWgDAn/3a697jWSuPZtflS0E5AqcflwjLHqnYk4WsFUOvF
vwpU5blCPCT7twecMJ95WubgQFIV9Pyq9Fb5RJeH7Q5lcl6+JvtNpC0IB97YXKDcgTOZGCURd6fr
/VgJLJlrG4rzUj8aTUhg8aD2MwJTi+0lCbgNLe2Xc+zXlh+OYA7aEJsvGCT2pk0K+TvLdcLML84k
ackKIo5Zp/eCDNfXazWcQwBqxJVnupxFy7gON/fcTgFPvgq2A9OtikX32idNKbFI3+QR5JZGvWwC
PtZRyJUXARWp8qqq8r8vZRtv0Lkak/WONcSAhz6UL2bk6aj/QZxwKk8qORiVHn77YQE8UQguKBik
Fg8x/TpsI5MgduH9B4XRWz/SHHMy3fq5+IzPAod6mpbk7U+JjVNDqw4TwAEVtHk42/xuPZ5RtrgT
i2fP+XzZIh32XcUcAS+Y6HokGLyE1/rcclv3wTpoAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xv
Y2FsL2NvbmYvY2VydHMvYzUxYzIyNGMuMAAAAVGFtLN5AAVYLjUwOQAAA2swggNnMIICT6ADAgEC
AhAbH622IPkk0zZr98fxjKBZMA0GCSqGSIb3DQEBBQUAMEUxCzAJBgNVBAYTAkdCMRgwFgYDVQQK
Ew9UcnVzdGlzIExpbWl0ZWQxHDAaBgNVBAsTE1RydXN0aXMgRlBTIFJvb3QgQ0EwHhcNMDMxMjIz
MTIxNDA2WhcNMjQwMTIxMTEzNjU0WjBFMQswCQYDVQQGEwJHQjEYMBYGA1UEChMPVHJ1c3RpcyBM
aW1pdGVkMRwwGgYDVQQLExNUcnVzdGlzIEZQUyBSb290IENBMIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEAxVB7njs10N/EjM2Om+2jwDaZ9ELqpz6Agw+mp1mHyZBFQ34A6oZ5KgO9PTeZ
iWa35YpWhpOcaEtoBIyTkwI+MNI3OiJhiRyFTn2P1a97NfZ+KEeJMdwOeWQfmdJbuv5/YL+t6+c8
OClqL+WRC1X/7G9Y1S3J3kxmcY8M1wTaB+YeGOO9KQKo+hzhW7mDqEFIvBpxjedi5S2y6998z9ur
Wsox8Uwi8wUT94L5c3kMvtdLHMDRFTyTQWTR5r4jFyIAiV4fa6WsbqdLjO2jcuavY00vhdIUNZou
TozqMpgohqGRCUE6tOHj8vrwyQqiQd2p4wPHiBU7HNQalNefZFkSbQIDAQABo1MwUTAPBgNVHRMB
Af8EBTADAQH/MB8GA1UdIwQYMBaAFLr6cSV5i1dBJSGGC3HrsmQOiyFnMB0GA1UdDgQWBBS6+nEl
eYtXQSUhhgtx67JkDoshZzANBgkqhkiG9w0BAQUFAAOCAQEAflj//TUZfZwYT56wK7yOjBT/LKDa
R1vD74EtrwXqdEhb8z5OB8dtxbOTzyI1XLY/dSdfCZbNoP6+QAxcElX4k4LKKeleP1ZXizg290Ua
TCjNnkG47VZMhKRAyLiwpStpcARqw/jUEjL5DsOx3DKERCxvy0YP6mZBD0/xWKWmDQ0PYd6lnl19
ZaE8F+eoVU7voMftxkR/VPWj4I/wfFUijym2gaPhbU4sG4Bn7K0gnwxiYdWX/0PtLcHaXSkqhT+s
Ze6GDwWNkF/f7p/0v+4d+5jkf5ArhHgQDmxJU+8VW2VGSl2vuvs6ch3N9iWIHpfMIZwpAQ1l61fZ
81eWu0jNgQAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzLzE5ODk5ZGE1
LjAAAAFRhbUz1gAFWC41MDkAAASZMIIElTCCA/6gAwIBAgIEOJsRPDANBgkqhkiG9w0BAQQFADCB
ujEUMBIGA1UEChMLRW50cnVzdC5uZXQxPzA9BgNVBAsUNnd3dy5lbnRydXN0Lm5ldC9TU0xfQ1BT
IGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTElMCMGA1UECxMcKGMpIDIwMDAgRW50cnVz
dC5uZXQgTGltaXRlZDE6MDgGA1UEAxMxRW50cnVzdC5uZXQgU2VjdXJlIFNlcnZlciBDZXJ0aWZp
Y2F0aW9uIEF1dGhvcml0eTAeFw0wMDAyMDQxNzIwMDBaFw0yMDAyMDQxNzUwMDBaMIG6MRQwEgYD
VQQKEwtFbnRydXN0Lm5ldDE/MD0GA1UECxQ2d3d3LmVudHJ1c3QubmV0L1NTTF9DUFMgaW5jb3Jw
LiBieSByZWYuIChsaW1pdHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMjAwMCBFbnRydXN0Lm5ldCBM
aW1pdGVkMTowOAYDVQQDEzFFbnRydXN0Lm5ldCBTZWN1cmUgU2VydmVyIENlcnRpZmljYXRpb24g
QXV0aG9yaXR5MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDHwV9OcfHO8GCGD9JYf9Mzly0X
onUwtZZkJi9ow0SrqHXmAGc0V55lxyKbc+bT3QgON1WqJUaBbL3+qPZ1V1eMkGxKwz6LS0MKyRFW
mponIpnPVZ5h2QLifLZ8OAfc439PmrkDQYC2dWcTC5/oVzbIXQA23mYU2m52H083jIITiQIDAQAB
o4IBpDCCAaAwEQYJYIZIAYb4QgEBBAQDAgAHMIHjBgNVHR8EgdswgdgwgdWggdKggc+kgcwwgckx
FDASBgNVBAoTC0VudHJ1c3QubmV0MT8wPQYDVQQLFDZ3d3cuZW50cnVzdC5uZXQvU1NMX0NQUyBp
bmNvcnAuIGJ5IHJlZi4gKGxpbWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAyMDAwIEVudHJ1c3Qu
bmV0IExpbWl0ZWQxOjA4BgNVBAMTMUVudHJ1c3QubmV0IFNlY3VyZSBTZXJ2ZXIgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkxDTALBgNVBAMTBENSTDEwKwYDVR0QBCQwIoAPMjAwMDAyMDQxNzIwMDBa
gQ8yMDIwMDIwNDE3NTAwMFowCwYDVR0PBAQDAgEGMB8GA1UdIwQYMBaAFMtswGvjuz7L/CKc/vuL
kpyw8m4iMB0GA1UdDgQWBBTLbMBr47s+y/winP77i5KcsPJuIjAMBgNVHRMEBTADAQH/MB0GCSqG
SIb2fQdBAAQQMA4bCFY1LjA6NC4wAwIEkDANBgkqhkiG9w0BAQQFAAOBgQBi24GRzsiad0Iv7L0n
o1MPUBvqTpLwqa+poLpIYcvvyQbvH9X07t9WLebKahlzqlO+krNQAraFJnJj2HVQYnUUt7NQGj/K
EQALhUVpbbalrlHhStyCP2yMNLJ3a9kC9n8O6mUE8c1UyrrJzOCE98g+EZfTYAkYvAX/bIkz8OwV
DwAAAAIALy9leHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy9lZDA0OTgzNS4wAAAB
MLsrA74ABVguNTA5AAADBjCCAwIwggJrAhAyiI6a0vXrE0f4f8QgNyX4MA0GCSqGSIb3DQEBBQUA
MIHBMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0NsYXNz
IDQgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMjE6MDgGA1UECxMx
KGMpIDE5OTggVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTEfMB0GA1UE
CxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazAeFw05ODA1MTgwMDAwMDBaFw0yODA4MDEyMzU5NTla
MIHBMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0NsYXNz
IDQgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMjE6MDgGA1UECxMx
KGMpIDE5OTggVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTEfMB0GA1UE
CxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAuvDk
z/nEroVUuQdX+Y/Ff2gR+MQXsETc4zBz1SpiKrjQzBztKFt+vWrcs5EkykFiPPwCAb8cFjGUBZd2
bqKtvWEXbE4whvBRNypQx6higdxbSqrBoLRu6y/lV8WxK0Bw21pNoY4fvQMf2APUj0yZcbzigsxY
6Jg6htOGOPMAKR8CAwEAATANBgkqhkiG9w0BAQUFAAOBgQCFjBLBp7lQFXrLPqy4Q4rcqt0UuomB
fgE8I3EhiC+C3GP6AkWsRVnXKlhEW7efgTuSaD3iNyT1e2yPdjWWCahZnbnOI6t01oP9MnMn2Gk+
Q3T2rsWJmudTfOl79kvzwWWD3o2KnDyIjTlZ/Ko/Io2hwWZQgXJM7SJkT0/KgJG2KQAAAAIALy9l
eHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy9jYjc5NmJjMS4wAAABMLsrh+oABVgu
NTA5AAAFGjCCBRYwggR/oAMCAQICAQAwDQYJKoZIhvcNAQEEBQAwgbAxCzAJBgNVBAYTAklMMQ8w
DQYDVQQIEwZJc3JhZWwxDjAMBgNVBAcTBUVpbGF0MRYwFAYDVQQKEw1TdGFydENvbSBMdGQuMRow
GAYDVQQLExFDQSBBdXRob3JpdHkgRGVwLjEpMCcGA1UEAxMgRnJlZSBTU0wgQ2VydGlmaWNhdGlv
biBBdXRob3JpdHkxITAfBgkqhkiG9w0BCQEWEmFkbWluQHN0YXJ0Y29tLm9yZzAeFw0wNTAzMTcx
NzM3NDhaFw0zNTAzMTAxNzM3NDhaMIGwMQswCQYDVQQGEwJJTDEPMA0GA1UECBMGSXNyYWVsMQ4w
DAYDVQQHEwVFaWxhdDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjEaMBgGA1UECxMRQ0EgQXV0aG9y
aXR5IERlcC4xKTAnBgNVBAMTIEZyZWUgU1NMIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MSEwHwYJ
KoZIhvcNAQkBFhJhZG1pbkBzdGFydGNvbS5vcmcwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGB
AO2EYAAjnshKUSkn3jqhObVpqwmyLzT9Ydw907DPsdfCxMKx5JZWxL6qFA7nzDpQyDpincOjrFl7
ju5VGhxHvqOXObO17yMsCOjYr3MvucmD6O0AD8h1pS80TBjodogjSYrbtu1o2sO1YilMpUu3mLQJ
FBCg+P5idiIVC6TWCC81AgMBAAGjggI8MIICODAPBgNVHRMBAf8EBTADAQH/MAsGA1UdDwQEAwIB
5jAdBgNVHQ4EFgQUHInDlsy9/jLVDYyBMbaYnY0oZI0wgd0GA1UdIwSB1TCB0oAUHInDlsy9/jLV
DYyBMbaYnY0oZI2hgbakgbMwgbAxCzAJBgNVBAYTAklMMQ8wDQYDVQQIEwZJc3JhZWwxDjAMBgNV
BAcTBUVpbGF0MRYwFAYDVQQKEw1TdGFydENvbSBMdGQuMRowGAYDVQQLExFDQSBBdXRob3JpdHkg
RGVwLjEpMCcGA1UEAxMgRnJlZSBTU0wgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxITAfBgkqhkiG
9w0BCQEWEmFkbWluQHN0YXJ0Y29tLm9yZ4IBADAdBgNVHREEFjAUgRJhZG1pbkBzdGFydGNvbS5v
cmcwHQYDVR0SBBYwFIESYWRtaW5Ac3RhcnRjb20ub3JnMBEGCWCGSAGG+EIBAQQEAwIABzAvBglg
hkgBhvhCAQ0EIhYgRnJlZSBTU0wgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwMgYJYIZIAYb4QgEE
BCUWI2h0dHA6Ly9jZXJ0LnN0YXJ0Y29tLm9yZy9jYS1jcmwuY3JsMCgGCWCGSAGG+EIBAgQbFhlo
dHRwOi8vY2VydC5zdGFydGNvbS5vcmcvMDkGCWCGSAGG+EIBCAQsFipodHRwOi8vY2VydC5zdGFy
dGNvbS5vcmcvaW5kZXgucGhwP2FwcD0xMTEwDQYJKoZIhvcNAQEEBQADgYEAbHEl4Z40kSHv22y9
AQhWj4jYQTpT9XLfJ1dLdoT3aKT+6z8Jfii4V+ofwari/5afSZnmspVzlsZIx16NB3JW+IOPn3ev
KdNFDqTusDZ0LfDNmCN7N0va/lGYxB40PIj9mTtQp8GLM8fCUhYSlVNlIu+6i85i23AjsYDfGiA4
534AAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40L2xvY2FsL2NvbmYvY2VydHMvODZmMzI0NzQuMAAA
ATC7K1aDAAVYLjUwOQAAB+4wggfqMIIHU6ADAgECAgEAMA0GCSqGSIb3DQEBBQUAMIIBEjELMAkG
A1UEBhMCRVMxEjAQBgNVBAgTCUJhcmNlbG9uYTESMBAGA1UEBxMJQmFyY2Vsb25hMS4wLAYDVQQK
EyVJUFMgSW50ZXJuZXQgcHVibGlzaGluZyBTZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJpcHNAbWFp
bC5pcHMuZXMgQy5JLkYuICBCLTYwOTI5NDUyMS4wLAYDVQQLEyVJUFMgQ0EgQ0xBU0UzIENlcnRp
ZmljYXRpb24gQXV0aG9yaXR5MS4wLAYDVQQDEyVJUFMgQ0EgQ0xBU0UzIENlcnRpZmljYXRpb24g
QXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXMwHhcNMDExMjI5MDEwMTQ0
WhcNMjUxMjI3MDEwMTQ0WjCCARIxCzAJBgNVBAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQ
BgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UEChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2Vydmlj
ZXMgcy5sLjErMCkGA1UEChQiaXBzQG1haWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEuMCwG
A1UECxMlSVBTIENBIENMQVNFMyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEuMCwGA1UEAxMlSVBT
IENBIENMQVNFMyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEeMBwGCSqGSIb3DQEJARYPaXBzQG1h
aWwuaXBzLmVzMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCrF/4OsMZoG1PwUr6f+tr6ixME
uwGPMtkfj03ONpja5ABEjCjYE0QqpGtOFyRCnNOIpEGC1iP7i8mG5bmpggXc8d4f4AyZVZjyOOxs
nSADwO+qo8ZkBFEteA2j0qg61iRM6ZZ6GKwTIyIbfOgxEbNfCaowcHFGJWtJcYArlQGyHwIDAQAB
o4IESjCCBEYwHQYDVR0OBBYEFLiT/y7L3CyOoud6/jZRIaOYWww0MIIBRAYDVR0jBIIBOzCCATeA
FLiT/y7L3CyOoud6/jZRIaOYWww0oYIBGqSCARYwggESMQswCQYDVQQGEwJFUzESMBAGA1UECBMJ
QmFyY2Vsb25hMRIwEAYDVQQHEwlCYXJjZWxvbmExLjAsBgNVBAoTJUlQUyBJbnRlcm5ldCBwdWJs
aXNoaW5nIFNlcnZpY2VzIHMubC4xKzApBgNVBAoUImlwc0BtYWlsLmlwcy5lcyBDLkkuRi4gIEIt
NjA5Mjk0NTIxLjAsBgNVBAsTJUlQUyBDQSBDTEFTRTMgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkx
LjAsBgNVBAMTJUlQUyBDQSBDTEFTRTMgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxHjAcBgkqhkiG
9w0BCQEWD2lwc0BtYWlsLmlwcy5lc4IBADAMBgNVHRMEBTADAQH/MAwGA1UdDwQFAwMH/4AwawYD
VR0lBGQwYgYIKwYBBQUHAwEGCCsGAQUFBwMCBggrBgEFBQcDAwYIKwYBBQUHAwQGCCsGAQUFBwMI
BgorBgEEAYI3AgEVBgorBgEEAYI3AgEWBgorBgEEAYI3CgMBBgorBgEEAYI3CgMEMBEGCWCGSAGG
+EIBAQQEAwIABzAaBgNVHREEEzARgQ9pcHNAbWFpbC5pcHMuZXMwGgYDVR0SBBMwEYEPaXBzQG1h
aWwuaXBzLmVzMEEGCWCGSAGG+EIBDQQ0FjJDTEFTRTMgQ0EgQ2VydGlmaWNhdGUgaXNzdWVkIGJ5
IGh0dHA6Ly93d3cuaXBzLmVzLzApBglghkgBhvhCAQIEHBYaaHR0cDovL3d3dy5pcHMuZXMvaXBz
MjAwMi8wOgYJYIZIAYb4QgEEBC0WK2h0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvaXBzMjAwMkNM
QVNFMy5jcmwwPwYJYIZIAYb4QgEDBDIWMGh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcmV2b2Nh
dGlvbkNMQVNFMy5odG1sPzA8BglghkgBhvhCAQcELxYtaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAw
Mi9yZW5ld2FsQ0xBU0UzLmh0bWw/MDoGCWCGSAGG+EIBCAQtFitodHRwOi8vd3d3Lmlwcy5lcy9p
cHMyMDAyL3BvbGljeUNMQVNFMy5odG1sMHMGA1UdHwRsMGowMaAvoC2GK2h0dHA6Ly93d3cuaXBz
LmVzL2lwczIwMDIvaXBzMjAwMkNMQVNFMy5jcmwwNaAzoDGGL2h0dHA6Ly93d3diYWNrLmlwcy5l
cy9pcHMyMDAyL2lwczIwMDJDTEFTRTMuY3JsMC8GCCsGAQUFBwEBBCMwITAfBggrBgEFBQcwAYYT
aHR0cDovL29jc3AuaXBzLmVzLzANBgkqhkiG9w0BAQUFAAOBgQAXZVyZlUMDJ68m5evQsxcj90Oq
x/B97A/Gqa6ulg92KRziBi1+JsU8+qHBgc5TsELRl1caF36kUWHG7ule7wW6670Pp5Jv2KMGaCmO
efX/v/mnr+SxzsLRgEInBQQ0+MN/FngjDAck8kZHrTtU0K/VMbKvfcjq6dRW2Q4TssVFUAAAAAIA
Ly9leHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy9kZGMzMjhmZi4wAAABMLsq7lMA
BVguNTA5AAADFzCCAxMwggJ8oAMCAQICAQEwDQYJKoZIhvcNAQEEBQAwgcQxCzAJBgNVBAYTAlpB
MRUwEwYDVQQIEwxXZXN0ZXJuIENhcGUxEjAQBgNVBAcTCUNhcGUgVG93bjEdMBsGA1UEChMUVGhh
d3RlIENvbnN1bHRpbmcgY2MxKDAmBgNVBAsTH0NlcnRpZmljYXRpb24gU2VydmljZXMgRGl2aXNp
b24xGTAXBgNVBAMTEFRoYXd0ZSBTZXJ2ZXIgQ0ExJjAkBgkqhkiG9w0BCQEWF3NlcnZlci1jZXJ0
c0B0aGF3dGUuY29tMB4XDTk2MDgwMTAwMDAwMFoXDTIwMTIzMTIzNTk1OVowgcQxCzAJBgNVBAYT
AlpBMRUwEwYDVQQIEwxXZXN0ZXJuIENhcGUxEjAQBgNVBAcTCUNhcGUgVG93bjEdMBsGA1UEChMU
VGhhd3RlIENvbnN1bHRpbmcgY2MxKDAmBgNVBAsTH0NlcnRpZmljYXRpb24gU2VydmljZXMgRGl2
aXNpb24xGTAXBgNVBAMTEFRoYXd0ZSBTZXJ2ZXIgQ0ExJjAkBgkqhkiG9w0BCQEWF3NlcnZlci1j
ZXJ0c0B0aGF3dGUuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDTpFBuyP9Wa+bPXbbq
DGh1R6KqwtqEJfyo9EdR2oW1IHSUhh4PdcnpCGH1Bm0wbhUZAulSwGLbTZme4moMRDjN/r7jZAlw
xf6xaym2L0nIO9QnBCUQly/nkG3AKEKZ10xD3sP1IW1Un13DWOHA5NlbsLjctHvfNjrCtWYiEtaH
DQIDAQABoxMwETAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBBAUAA4GBAAf6TGlc+5XMRu6F
g00hMI7K2ahvSRrm2lHjYHBshGERoRrISD5ZQ31PlT2hi7cLYph6dYrdiE5OnkDbqMwydLlvDcbj
s0QL2YpvmimbmRgoO9HjQCiaWjzVtecgG4vKpKuN6VHZ4kwsWanaubJ1G/ZC8u/H8hj5ibyj/4oj
LnBHAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvNDEyYmVhNzMuMAAA
AUrnF/ODAAVYLjUwOQAAAy0wggMpMIICkqADAgECAgEAMA0GCSqGSIb3DQEBBAUAMIHPMQswCQYD
VQQGEwJaQTEVMBMGA1UECBMMV2VzdGVybiBDYXBlMRIwEAYDVQQHEwlDYXBlIFRvd24xGjAYBgNV
BAoTEVRoYXd0ZSBDb25zdWx0aW5nMSgwJgYDVQQLEx9DZXJ0aWZpY2F0aW9uIFNlcnZpY2VzIERp
dmlzaW9uMSMwIQYDVQQDExpUaGF3dGUgUGVyc29uYWwgUHJlbWl1bSBDQTEqMCgGCSqGSIb3DQEJ
ARYbcGVyc29uYWwtcHJlbWl1bUB0aGF3dGUuY29tMB4XDTk2MDEwMTAwMDAwMFoXDTIwMTIzMTIz
NTk1OVowgc8xCzAJBgNVBAYTAlpBMRUwEwYDVQQIEwxXZXN0ZXJuIENhcGUxEjAQBgNVBAcTCUNh
cGUgVG93bjEaMBgGA1UEChMRVGhhd3RlIENvbnN1bHRpbmcxKDAmBgNVBAsTH0NlcnRpZmljYXRp
b24gU2VydmljZXMgRGl2aXNpb24xIzAhBgNVBAMTGlRoYXd0ZSBQZXJzb25hbCBQcmVtaXVtIENB
MSowKAYJKoZIhvcNAQkBFhtwZXJzb25hbC1wcmVtaXVtQHRoYXd0ZS5jb20wgZ8wDQYJKoZIhvcN
AQEBBQADgY0AMIGJAoGBAMlm2fgHRM+5jC7woe8TRWwF394nFlE2QRFsbDvt/hB9Ep7lm0Ka/mAx
w2a3czpIrk7QMjeUiLUNttnz8kTZ1YgS3XZN8hr8byMeevHYmEVOBxDvFkLQQ3VtSt7iqskx/x8A
cHxmzxAlCLr67gDpRgNmJxEVO6pb8pjdNkKy2oh1AgMBAAGjEzARMA8GA1UdEwEB/wQFMAMBAf8w
DQYJKoZIhvcNAQEEBQADgYEAaTaJ9zQqM3IvbTvUIrK4b5rFNmYOGzyhsXVa5v010/io8gdvhWeO
3iu54hewOqDwDqIAmt/zFBVuu8iFWpiA+f++dB098/4wJdE3NGf6pXF5MGEpcsDgLEz7VuQ6qG/l
MllS23UoUFkM+AsZ5KzZr5aNL1DbB8PqH6sz4PUrMYkAAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40
L2xvY2FsL2NvbmYvY2VydHMvMDJiNzM1NjEuMAAAATC7K095AAVYLjUwOQAABEMwggQ/MIIDJ6AD
AgECAgEBMA0GCSqGSIb3DQEBBQUAMH4xCzAJBgNVBAYTAkdCMRswGQYDVQQIDBJHcmVhdGVyIE1h
bmNoZXN0ZXIxEDAOBgNVBAcMB1NhbGZvcmQxGjAYBgNVBAoMEUNvbW9kbyBDQSBMaW1pdGVkMSQw
IgYDVQQDDBtTZWN1cmUgQ2VydGlmaWNhdGUgU2VydmljZXMwHhcNMDQwMTAxMDAwMDAwWhcNMjgx
MjMxMjM1OTU5WjB+MQswCQYDVQQGEwJHQjEbMBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAw
DgYDVQQHDAdTYWxmb3JkMRowGAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEkMCIGA1UEAwwbU2Vj
dXJlIENlcnRpZmljYXRlIFNlcnZpY2VzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
wHEzgorQcOtzh4JA1R3ky8kOQpD53jS5oboR9CWF88xybfJ7l2uzB/F3JJFfJY/2dD3kgML4PA3z
v0Dq98hS0XJv78irQbhuLhcqlWkMzdIelHstlB2qddezmMusvGRTQLyPrKw2y1ytu93glBfs0VzQ
v++llcmQxbCs+xtD33oIXbe48kAbKyeeUM5eZYKIjF7TTgx66giRtjaqK0L76sKjOeXbJjitiwru
GWPHHCTfA3ja5urBRxoLC0YJ3QL83suHX9cwY2ihrtwyobq+/kSraLalFxX9vdWnp5rkRDPpiI78
7VHrk3FOrQHnRI6rLcuo/gFJSPDA3cdo2JL+PQIDAQABo4HHMIHEMB0GA1UdDgQWBBQ82JOIwsCC
CcwBmQaTIOmecAljTzAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zCBgQYDVR0fBHow
eDA7oDmgN4Y1aHR0cDovL2NybC5jb21vZG9jYS5jb20vU2VjdXJlQ2VydGlmaWNhdGVTZXJ2aWNl
cy5jcmwwOaA3oDWGM2h0dHA6Ly9jcmwuY29tb2RvLm5ldC9TZWN1cmVDZXJ0aWZpY2F0ZVNlcnZp
Y2VzLmNybDANBgkqhkiG9w0BAQUFAAOCAQEAhwFtIx1+Wxd9wWEyz4/n84qUWWbgniioXtO39DTm
qjmylxbFgm8ypOmM56/978LouUuqo/Tm2o1lIfu6gOsmKIUa/jmM3lsEBLRU+aNnnkH6CVLMBUio
yT8hBB7OSGv8hejCe69/t8z4Xzr9NcYN75fcTKsR4WvLMdFs+0iAq9ycN7ghFEsNcT3sgzNu0W4y
FuyYxxaLWaY0qwVXLZP3qhPL0hPity47zWtQFwloPrUmV+624LbduSmAeX2Po/CkKKQVxIX0J9Rr
v+Vc5GUCdlS04zdmJNMZYchSEOWLN5q5qfkdv+qZkmGW/wHNoV8NvHG8DqwLHUdFHcHsfOz9KQAA
AAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzLzQ4YTE5NWQ4LjAAAAFRhbRv
5QAFWC41MDkAAAX1MIIF8TCCA9mgAwIBAgIQALC3WhZIX7/hy/WL1xnmfTANBgkqhkiG9w0BAQsF
ADA4MQswCQYDVQQGEwJFUzEUMBIGA1UECgwLSVpFTlBFIFMuQS4xEzARBgNVBAMMCkl6ZW5wZS5j
b20wHhcNMDcxMjEzMTMwODI4WhcNMzcxMjEzMDgyNzI1WjA4MQswCQYDVQQGEwJFUzEUMBIGA1UE
CgwLSVpFTlBFIFMuQS4xEzARBgNVBAMMCkl6ZW5wZS5jb20wggIiMA0GCSqGSIb3DQEBAQUAA4IC
DwAwggIKAoICAQDJ03rKDx6sp4boFmVqscIbRTJxldn+EFvMr+eleQGPicPK8lVx93e+d5TzcqQs
RNiekpsUOqHnJJAKClaOxdgmlOHZSOEtPtoKct2jmRXagaKH9HtuJneJWK3W6wyyQXpzbm3benhB
6QiIEn6HLmYRY2xU+zydcsC8Lv/Ct90NduM61/e0aL6i9eOBbsFGb12N4E3GVFWJGjMxCrFXuaOK
mMPsOzTFlUFpfnXCPCDFYbpRR6AgkJOhkEvzTnyFRVSa0QUmQbC1TR0zvsQDyCV8wXDbO/QJLVQn
SKwv4cSsPsjLkkxTOTcj7NMB+eAJRE1NZMDhDVqHIrytG6P+JrUV86f8hBnp7KGItERphIPzidF0
BqnMC9bC3ieFUCbKF7jJeodWLBoBHmy+E60QrLUk9TiRodZL2vG70t5HtfG8gfZZa88ZU+mNFctK
y6lvROUbQc/hhqfK0GqfvEyNBjNaooXlkDWgYlwWTvDjovoDGrQscbNYLN57C9saD+veIR8GdwYD
sMnvmfzAuU8Lhij+0rnq49qlw0dpEuDb8PYZi+17cNcC1u2HGCgsBCRMd+RIihrGO5rUD8r6ddIB
QFqNeb+Lz0vPqhbBleStTIo+F5HUsWLlguWABKQDfo2/2n+iD5dPDNMN+9fR5XJ+HMh3/1uaD7eu
BUbl8agW7EekFwIDAQABo4H2MIHzMIGwBgNVHREEgagwgaWBD2luZm9AaXplbnBlLmNvbaSBkTCB
jjFHMEUGA1UECgw+SVpFTlBFIFMuQS4gLSBDSUYgQTAxMzM3MjYwLVJNZXJjLlZpdG9yaWEtR2Fz
dGVpeiBUMTA1NSBGNjIgUzgxQzBBBgNVBAkMOkF2ZGEgZGVsIE1lZGl0ZXJyYW5lbyBFdG9yYmlk
ZWEgMTQgLSAwMTAxMCBWaXRvcmlhLUdhc3RlaXowDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8E
BAMCAQYwHQYDVR0OBBYEFB0cZQ6o8iV7tJHP5LGx5r1VdGwFMA0GCSqGSIb3DQEBCwUAA4ICAQB4
pgwWSp9MiDrAyw6lFn2fuUhfGI8NYjb2zRlrrKvV9pF9rnHzP7MOeIWblaQnIUdCSnxIOvVFfLMM
jlF4rJUT3sb9fbgakEyrkgPH7UIBzg/YsfqikuFgba56awmqxinuaElnMIAkejEWOVt+8Rwu3WwJ
rfIxwYJOubv5vr8qhT/AQKM6WfxZSzwoJNu0FXWuDYi6LnPAvViH5ULy617uHjAimcs30cQhbIHs
vm0m5hzkQiCeR7Csg1lwLDXWrzY0tM07+DKo7+N4ifuNRSzanLh+QBxh5z6ikixL8s36mLYp//Py
e6kfLqCTVyvehQP5aTfLnnhqBbTFMXiJ7HqnheG5ezzevh55hM6fcA5ZwjUukCox2eRFekGkLhOb
NA5me0mrZJfQRsN5nXJQY6aYWwa9SG3YOYNw6DXwBdGqvOPbyALqfP2C2sJbUjWumDqtujWTI6cf
SN01RpiyEGjkpTHCClguGYEQyVB1/OpaFs4R1+7vUIgtYf8/QnMFlEPVjjxOAToZpR9GTnfQXeWB
IiGH/pR9hNiTrdZoQ0iy2+tzJOeRf1SktoA+naM8THLCV8Sg1Mw4J87VBp6iSNnpn86CcDaTmjvf
liHjWbcM2pE38P1ZWrOZyGlsQyYBNWNgVYkDOnXYukrZVP/u3oDYLdE41V4tC5h9Pmzb/CaIxwAA
AAIALy9leHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy9lZDYyZjRlMy4wAAABMLsr
AL4ABVguNTA5AAADBzCCAwMwggJsAhEAuS9gzIifoXpGCbhbcGyKrzANBgkqhkiG9w0BAQUFADCB
wTELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMTwwOgYDVQQLEzNDbGFzcyAy
IFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIxOjA4BgNVBAsTMShj
KSAxOTk4IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxHzAdBgNVBAsT
FlZlcmlTaWduIFRydXN0IE5ldHdvcmswHhcNOTgwNTE4MDAwMDAwWhcNMjgwODAxMjM1OTU5WjCB
wTELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMTwwOgYDVQQLEzNDbGFzcyAy
IFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIxOjA4BgNVBAsTMShj
KSAxOTk4IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxHzAdBgNVBAsT
FlZlcmlTaWduIFRydXN0IE5ldHdvcmswgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAKeIASF0
LOcaA/CY4Zc8DyEI8Zzbl+ma/MIEBhO+X1LIzB4sElYsuAFpLMyZH62wlq55BPITOcF7mLoILOjC
hBMsqmnpCfTHqQKkQsIjT0rY8A6i+zFsyeZvmScH9eb0THiebetGhvq5hslU8rLEr9RGHFrJFTD/
DWz1LQ5tzn93AgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAci75f9HxcfvEnvbFXlGKQJi4aPibHIPY
4p29/+2h5mbqLwn0ytfqpSuV9iRghk1ELoOlxC2g0654aW9y2myuCPBjkjfmu8QwF613zEk1qs/Y
j9G+txiWR3NqVCI0ZC22FptZW7RRWTqzCxT0Et9noPStMmResUZyJ4wSe8VEtK4AAAACAC4vZXhw
b3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy83MmZhNzM3MS4wAAABUYWzUhsABVguNTA5
AAADBjCCAwIwggJrAhB92f4Hz6getxB5Z/uniTTGMA0GCSqGSIb3DQEBBQUAMIHBMQswCQYDVQQG
EwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0NsYXNzIDMgUHVibGljIFBy
aW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMjE6MDgGA1UECxMxKGMpIDE5OTggVmVy
aVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTEfMB0GA1UECxMWVmVyaVNpZ24g
VHJ1c3QgTmV0d29yazAeFw05ODA1MTgwMDAwMDBaFw0yODA4MDEyMzU5NTlaMIHBMQswCQYDVQQG
EwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0NsYXNzIDMgUHVibGljIFBy
aW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMjE6MDgGA1UECxMxKGMpIDE5OTggVmVy
aVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTEfMB0GA1UECxMWVmVyaVNpZ24g
VHJ1c3QgTmV0d29yazCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAzF7REV1cadCr07lqTJkf
WZgwjhaFIEZtRz/UhSCE4W2z+KTtDPEXDzv5p/kl18HPhGPyfGPPokfyxlszjmRABGjBgLlkHEV3
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
sHil9g5CeuN/G8zQ8Lco/SrqnrOwuQSq/fbHtLG4KqD7WPEZoG9wJX4+aUp/DyLY760IEZopmeGq
REWaEl4+nW1S/OegPWgv8EtwfBM4rbwVJfHWzquiwDHWL5/g/xRZ/IST2Yd8TFQT65/RLRH4GDo6
3iXZ99NA7aQGEsQ74ZHBVjXwFNxlNgluq6QHxzXRwgMzNlt1Jm1C8RJrQ29LcZT6NB3tE27KgH+Y
L2y5ZdjpAgMBAAGjgdQwgdEwHQYDVR0OBBYEFDmVi2KLXMnUgLpYD5c/FQhDzJinMAsGA1UdDwQE
AwIBBjAPBgNVHRMBAf8EBTADAQH/MIGRBgNVHSMEgYkwgYaAFDmVi2KLXMnUgLpYD5c/FQhDzJin
oWukaTBnMQswCQYDVQQGEwJTRTEUMBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRy
dXN0IFRUUCBOZXR3b3JrMSMwIQYDVQQDExpBZGRUcnVzdCBRdWFsaWZpZWQgQ0EgUm9vdIIBATAN
BgkqhkiG9w0BAQUFAAOCAQEAGat16viLZWGVE7ppBO+GyhOgx6pPZBs/GPaoLSxVjwW3MOpCah3A
JVEtp78Ms+3vCH9sPEYa6hhD33bM+WaGnCxo9ekX+DGzGMTWSH0jTGjBfrsBFG/F2W7euwRCavj2
XH3l2vqH6w01UmfQnpd2BZM/lccB5mlVOH8QYZnJ41+myj6CY0iq4ghIPqrysoViprSn2b03nGi1
LVZ9sLc/oLEH1ulP3N5FcTAyfxsuCfm/UqHuwoA+BlwuVUDBG/VwRbDcXfr2clp30mPNz1iJAEJj
P3k50ESwgm5BGejd4MGIWtEecZMfJDB05R6o3jwnN3+Drp53z/Awsf9LmejGoQAAAAIALi9leHBv
cnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzLzNlNzI3MWU4LjAAAAFRhbNitgAFWC41MDkA
AAQuMIIEKjCCAxKgAwIBAgIEOGPe+DANBgkqhkiG9w0BAQUFADCBtDEUMBIGA1UEChMLRW50cnVz
dC5uZXQxQDA+BgNVBAsUN3d3dy5lbnRydXN0Lm5ldC9DUFNfMjA0OCBpbmNvcnAuIGJ5IHJlZi4g
KGxpbWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAxOTk5IEVudHJ1c3QubmV0IExpbWl0ZWQxMzAx
BgNVBAMTKkVudHJ1c3QubmV0IENlcnRpZmljYXRpb24gQXV0aG9yaXR5ICgyMDQ4KTAeFw05OTEy
MjQxNzUwNTFaFw0yOTA3MjQxNDE1MTJaMIG0MRQwEgYDVQQKEwtFbnRydXN0Lm5ldDFAMD4GA1UE
CxQ3d3d3LmVudHJ1c3QubmV0L0NQU18yMDQ4IGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIu
KTElMCMGA1UECxMcKGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDEzMDEGA1UEAxMqRW50cnVz
dC5uZXQgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgKDIwNDgpMIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEArU1LqRKGsuqjIAcVFmQqK0vRvwtKTY7tgHalZ7d4QMBzQshowNtTK91euHaY
NZOLGp18EzoOH1u3Hs/lJBQesYGpjX24zGtLA/ECDNyrpUAkAH90lKGdCCmziAv1h3edVc3kw37X
amSrhRSGlVuXMlBvPci6Zgzj/L24ScF2iUkZ/cCovYmjZy/Gn7xxGWC4LeksyZB2ZnuU4q941mVT
XTzWnLLPKQP5L6RQstRIzgUyVYr9smRMDuSYB3Xbf9+5CFVghTAp+XtIpGmG4zU/HoZdenoVve8A
jhUiVBcAkCaTvA5JaJG/+EfTnZVCwQ5N328mz8MYIWJmQ3DW1cAH4QIDAQABo0IwQDAOBgNVHQ8B
Af8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUVeSB0RGAvtiJuQijMfmhJAkWuXAw
DQYJKoZIhvcNAQEFBQADggEBADubj1abMOdTmXx6eadNl9cZlZD7Bh/KM3xGY4+WZiT6QBshJ8rm
cnPyT/4xmf3IDExoU8aAghOY+rat2l098c5u9hURlIIM7j+VrxGrD9cv3h8Dj1csHsm7mhpElesY
T6YfzX1XEC+bBAlahLVu2B064dae0Wx5XnkcFMXj0EyTO2U87d89vqbllRrDtRnDvV5bu/8j72gZ
yxKTJ1wDLW8w0B62GqzeWvfRqqgnpv55gcR5mTNXuhKwqeBCbJPKVt7+bYQLCIt+jerXmCHG8+c8
eS9enNFMFY3h7CI3zJpDC5fcgJCNs2ebb0gIFVbPv/ErfF6adulZkMV8gzURZVEAAAACAC4vZXhw
b3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy8wMDY3M2I1Yi4wAAABUYWz2ksABVguNTA5
AAAEJDCCBCAwggMIoAMCAQICEDRO1Vcg1e3sSfQvzjfbK20wDQYJKoZIhvcNAQEFBQAwgakxCzAJ
BgNVBAYTAlVTMRUwEwYDVQQKEwx0aGF3dGUsIEluYy4xKDAmBgNVBAsTH0NlcnRpZmljYXRpb24g
U2VydmljZXMgRGl2aXNpb24xODA2BgNVBAsTLyhjKSAyMDA2IHRoYXd0ZSwgSW5jLiAtIEZvciBh
dXRob3JpemVkIHVzZSBvbmx5MR8wHQYDVQQDExZ0aGF3dGUgUHJpbWFyeSBSb290IENBMB4XDTA2
MTExNzAwMDAwMFoXDTM2MDcxNjIzNTk1OVowgakxCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwx0aGF3
dGUsIEluYy4xKDAmBgNVBAsTH0NlcnRpZmljYXRpb24gU2VydmljZXMgRGl2aXNpb24xODA2BgNV
BAsTLyhjKSAyMDA2IHRoYXd0ZSwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MR8wHQYD
VQQDExZ0aGF3dGUgUHJpbWFyeSBSb290IENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC
AQEArKDw+4BZ1JzHpM+doVlzCRBFDA0sbmjxbFtIaElZN/wLMxnCd3/MEC2VNBzm600JpxzSuMmX
NgK3idQkXwbAzESUlI0CYm/rWt0RjSiaXISQEHoNvXRmL2o4oOLVVETrHQefB7pv7un9Tgsp9T6E
oAHxnKv4HH6JpOih2HFlDaNRe+680iJgDblbnd+6/FFbC6+Ysuku6QToYofeK8jXTsFMZB7dz4dY
ukpPymgHHRydSsbVL5HMfHFyHMXAZ+sy/cmSXJTahcCbv1N9Kwn0jJ2RH5dqUsveCTakd9h7h1BE
1T5uKWn7OUkmHgmlgHtALevoJ4XJ/mH9fuZ8lx3VnQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/
MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUe1tFz6/Oy3r9MZIaarbzRutXSFAwDQYJKoZIhvcN
AQEFBQADggEBAHkRwEuzkbb88Oln1A1uRb5V6JPSzgM/7dolsB1Xyx46dqBM7FB26GRyDKSp8biL
1taHhLsy5UERwHfZs2Cd6xvV0W5ERKmmAexVYh13uFyOSEl8nDtXEaytczeOL3hckGhH2WBg5vwH
PSIgF8T3FunE2HL5yHN83xYvFak+/WontqHrWrqYH9XjTWQKnRPIYbr1ORyHuri9eyJ/9v6sQHnl
rBBvPY8beXaLxDezIRiE5TYA62Mgmbnp/jMEu0HIwQL5RGMgnoHOQtPWPyx202OcWd2PpuEOoC5B
9y6VR8+8/TPz9gthfn6RK4FHwicw7qcQXTePXDkr5ATwe41WjGgAAAACAC8vZXhwb3J0L2hkYTMv
Ni4xMC40L2xvY2FsL2NvbmYvY2VydHMvM2M1OGY5MDYuMAAAATC7KyHpAAVYLjUwOQAABDowggQ2
MIIDHqADAgECAgEBMA0GCSqGSIb3DQEBBQUAMG8xCzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRU
cnVzdCBBQjEmMCQGA1UECxMdQWRkVHJ1c3QgRXh0ZXJuYWwgVFRQIE5ldHdvcmsxIjAgBgNVBAMT
GUFkZFRydXN0IEV4dGVybmFsIENBIFJvb3QwHhcNMDAwNTMwMTA0ODM4WhcNMjAwNTMwMTA0ODM4
WjBvMQswCQYDVQQGEwJTRTEUMBIGA1UEChMLQWRkVHJ1c3QgQUIxJjAkBgNVBAsTHUFkZFRydXN0
IEV4dGVybmFsIFRUUCBOZXR3b3JrMSIwIAYDVQQDExlBZGRUcnVzdCBFeHRlcm5hbCBDQSBSb290
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt/caM+byAAQtOeBOW+0fvGwPzbX6I7bO
3psRM5ekKUx9k5+9SryT7QMa44/P5W1QWtaXKZRagLBJetsulf24yr83OC0ePpFBrXBWx/BPP+gy
nnTKyJBU6cZfD3idmkA8Dqxhql4Uj56HoWpQ3NeaTq8Fs6ZxlJxxs1BgCscTnTgHhgKo6ahpJhiQ
q0ywTyOrOk+E2N/On+Fpb7vXQtdrROTHre5tQV9yWnEIN7N5ZaRZoJQ39wAvDcKSctrQOHLbFKhF
xF0qfbe01sTurM0TRLfJK91DACX6YblpalgjEbenM49WdVn1zSnXRrcKK2W200JvFbK4e/vv6V1T
1TRaJwIDAQABo4HcMIHZMB0GA1UdDgQWBBStvZh6NLQm9/rEJlTvA73gJMtUGjALBgNVHQ8EBAMC
AQYwDwYDVR0TAQH/BAUwAwEB/zCBmQYDVR0jBIGRMIGOgBStvZh6NLQm9/rEJlTvA73gJMtUGqFz
pHEwbzELMAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMSYwJAYDVQQLEx1BZGRUcnVz
dCBFeHRlcm5hbCBUVFAgTmV0d29yazEiMCAGA1UEAxMZQWRkVHJ1c3QgRXh0ZXJuYWwgQ0EgUm9v
dIIBATANBgkqhkiG9w0BAQUFAAOCAQEAsJvghSXC1iPiD5YGkp1BmJzZhHmB2R5bFAcjNmWPsNh3
u6xBbEdgg1Gw+TI95/z2JhPHgBalv1r8h894eYkhmuJMBwqGNbzy3lHE0pa33H5O7nD9HDnrDAJR
FC2OvRbgwd9Gdeckrez0QrSFk3AQZ7qdBjVKGNMresxRQqF6Y9Hmu6HFK8I2vhMN5r1jfnl7pwkN
QKtq3Y+Kw/b2jBpCBVHURfWfp2IhaBUgQzyZ53y9JNipkRdziD9WGzE4GLRxD5rNyA6eji4b4YyY
g8sfMfFETMYEc0l2YA/H+L0XgGsu6cxMDlqaeQ8gCi7VnmMmHlWSlNiCF1p70LzHj06GBAAAAAIA
Li9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzL2NiMTU2MTI0LjAAAAFRhbT3UAAF
WC41MDkAAAZPMIIGSzCCBDOgAwIBAgIIamg+nFGby1MwDQYJKoZIhvcNAQELBQAwgbIxCzAJBgNV
BAYTAlRSMQ8wDQYDVQQHDAZBbmthcmExQDA+BgNVBAoMN0UtVHXEn3JhIEVCRyBCaWxpxZ9pbSBU
ZWtub2xvamlsZXJpIHZlIEhpem1ldGxlcmkgQS7Fni4xJjAkBgNVBAsMHUUtVHVncmEgU2VydGlm
aWthc3lvbiBNZXJrZXppMSgwJgYDVQQDDB9FLVR1Z3JhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5
MB4XDTEzMDMwNTEyMDk0OFoXDTIzMDMwMzEyMDk0OFowgbIxCzAJBgNVBAYTAlRSMQ8wDQYDVQQH
DAZBbmthcmExQDA+BgNVBAoMN0UtVHXEn3JhIEVCRyBCaWxpxZ9pbSBUZWtub2xvamlsZXJpIHZl
IEhpem1ldGxlcmkgQS7Fni4xJjAkBgNVBAsMHUUtVHVncmEgU2VydGlmaWthc3lvbiBNZXJrZXpp
MSgwJgYDVQQDDB9FLVR1Z3JhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIICIjANBgkqhkiG9w0B
AQEFAAOCAg8AMIICCgKCAgEA4vU/kwVRHoViVF56C/UYB4Oufq9899SKa6VjQzm5S/fDxmSJPZQu
VIBSOTkHS0vdhQd2h8y/L5VMzH2nPbxHD5hw+IyFHnSOkm0bQNGZDbt1bsipa5rAhDGvykPL6ys0
6I+XawGb1Q5KCKpbknSFQ9OArqGIW66z6l7LFpp3RMih9lRozt6Plyu6W0ACDGQXwLWTzeHxE2bO
DHnv0ZEoq1+gElIwcxmOj+GMB6LDu0rw6h8VqO4lzKRG+Bsi77MOQ7osJLjFLFzUHPhdZL3Dk14o
pz8n8Y4e0ypQBaNV2cvnOVPAmJ6MVGKLJrD3fY185MaeZkJVgkfnsliNZvcHfC425lAcP9tDJMW/
hkd5s3kc91r0E+xs+D/iWR+V7kI+ua2oMoVJl0b+SzGPWsutdEcf6ZG33ygEIqDUD13ieU/qbIWG
vaimzuT6w+Gzrt48Ue7LE3wBf4QOXVGUnhMMti6lTPk5cDZvlsouDERVxcr6XQKj39ZkjFqzAQqp
tQpHF//vkUAqjqFGOjGY5RH8zLtJVor8udBhmm9lbObDyz51Sf6Pp+KJxWfXnUYTTjF2OySznhFl
hqt/7x3U+LznrFpct1pHXFXOVbQicVtbC/DP3KBhZOqp12gKY6fgDT+gr9Oq0n7vUaDmUStVkhUX
U8u3Zg5mTPj5dUyQ5xJwx0UCAwEAAaNjMGEwHQYDVR0OBBYEFC7j27JJ0JxUeVz6Jyr+zE7S6E5U
MA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAULuPbsknQnFR5XPonKv7MTtLoTlQwDgYDVR0P
AQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQAFNzr0TbdF4kV1JI+2d1LoHNgQk2Xz8lkGpD4e
Kexd0dCrfOAKkEh47U6YA5n+KGCRHTAduGN8qOY1tfrTYXbm1gdLymmasoR6d5NFFxWfJNCYExL/
u6Au/U5Mh/jOXKqYGwXgAEZKgoClM4so3O0409/lPun++1ndYYRP0lSWE2ETPo+Aab6TR7U1Q9Ja
uz1c77NCR807VRMGsAnb/WP2OogKmW9+4c4bU2pEZiNRCHu8W1Ki/QY3OEBhj0qWuJA3+GbHeJAA
FS6LrVE1Uweoa2iu+U48BybNCAVwzDk/dr2l02cmAYamU9JgO3xDf1WKvJUawSg5TB9D0pH0clmK
uVb8P7Sd2nCcdlqMQ1DujjByTd//SffGqWfZbawCEeI6FiWnWAjLb1NBnEg4R2gz0dfHj9R0IdTD
BZB6/86WiLEVKV0jq9BgoRJP3vQXzTLlyb/IQ639Lo7xr+L0mPoSHyDYwKcMhcWQ9DstliaxLL5M
q+ux0orJ23gTDx4JnW2PAJ8C2sH6H3p6CcRK5ogql5+Ji/03X186zjhZhkuvcQu02PJwT58yE+Ow
p1fl2tpDy4Q08ijE6m30Ku/Ba3ba+367hTzSU8JNvnHhRdH9I2cNE3X7z2VnIp2usAnRCf8dNL/+
I5c30jn6PQ0GC7TbO6Orb1wdtn7os4I07QZcJAAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2Nh
bC9jb25mL2NlcnRzLzcwOWFmZDJiLjAAAAFRhbVNNQAFWC41MDkAAAMxMIIDLTCCApagAwIBAgIB
ADANBgkqhkiG9w0BAQQFADCB0TELMAkGA1UEBhMCWkExFTATBgNVBAgTDFdlc3Rlcm4gQ2FwZTES
MBAGA1UEBxMJQ2FwZSBUb3duMRowGAYDVQQKExFUaGF3dGUgQ29uc3VsdGluZzEoMCYGA1UECxMf
Q2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lvbjEkMCIGA1UEAxMbVGhhd3RlIFBlcnNvbmFs
IEZyZWVtYWlsIENBMSswKQYJKoZIhvcNAQkBFhxwZXJzb25hbC1mcmVlbWFpbEB0aGF3dGUuY29t
MB4XDTk2MDEwMTAwMDAwMFoXDTIwMTIzMTIzNTk1OVowgdExCzAJBgNVBAYTAlpBMRUwEwYDVQQI
EwxXZXN0ZXJuIENhcGUxEjAQBgNVBAcTCUNhcGUgVG93bjEaMBgGA1UEChMRVGhhd3RlIENvbnN1
bHRpbmcxKDAmBgNVBAsTH0NlcnRpZmljYXRpb24gU2VydmljZXMgRGl2aXNpb24xJDAiBgNVBAMT
G1RoYXd0ZSBQZXJzb25hbCBGcmVlbWFpbCBDQTErMCkGCSqGSIb3DQEJARYccGVyc29uYWwtZnJl
ZW1haWxAdGhhd3RlLmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA1GnX1LCUZFtx6UfY
DFG26nKRsIRefS0Nj3sS34UldSh0OkIsYyeflXtL734Zhx2G6qPduc6WZBrCFG5ErHzmj+hND3Ef
QDimAKOHePb5lIZererAXnbr2RSjXW56fAylS1V/Bhkpf56aJtVquzgkCGqYx7Hao5iR/Xnb5VrE
HLkCAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQQFAAOBgQDH7JJ+Tvj1lqVn
Yiqk8E0RYNBvjWBYYawmu1I1XAjPMPuoSpaKH2JCI4wXD/S6ZJwXrEcp352YXtJsYHFcoqzceePn
bgBHH7UNKOgCneSa/RP0ptl8sfjcXyMmCZGAc9AUG95DqYMl8uacLxXK/qarigd1iwzdUYRr5PjR
zneigQAAAAIALi9leHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzLzM5OWU3NzU5LjAA
AAFK5xjatgAFWC41MDkAAAOzMIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG
9w0BAQUFADBhMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBDQTAeFw0wNjEx
MTAwMDAwMDBaFw0zMTExMTAwMDAwMDBaMGExCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2Vy
dCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5jb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2Jh
bCBSb290IENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKP
C3eQyaKl7hLOllsBCSDMAZOnTjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3Yn
Fo97nh6Vfe63SKMI2tavegw5BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt43C/dxC/
/AH2hdmoRBBYMql1GNXRor5H4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7PT19sdl6gSzeRntwi5m3O
FBqOasv+zbMUZBfHWymeMr/y7vrTC0LUq7dBMtoM1O/4gdW7jVg/tRvoSSiicNoxBN33shbyTApO
B6jtSj1etX+jkMOvJwIDAQABo2MwYTAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAd
BgNVHQ4EFgQUA95QNVbRTLtm8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvD
l7I90VUwDQYJKoZIhvcNAQEFBQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/EsrhMAt
udXH/vTBH1jLuG2cenTnmCmrEbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg06O/nVsJ8dWO41P0
jmP6P6fbtGbfYmbW0W5BjfIttep3Sp+dWOIrWcBAI+0tKIJFPnlUkiaY4IBIqDfv8NZ5YBberOgO
zW6sRBc4L0na4UU+Krk2U886UAb3LujEV0lsYSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9k
uXclVzDAGySj4dzp30d8tbQkCAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4AAAAC
AC8vZXhwb3J0L2hkYTMvNi4xMC40L2xvY2FsL2NvbmYvY2VydHMvMjQzZWVkM2QuMAAAATC7K4m8
AAVYLjUwOQAABDQwggQwMIIDmaADAgECAgEAMA0GCSqGSIb3DQEBBAUAMIHHMQswCQYDVQQGEwJV
UzEXMBUGA1UECBMOTm9ydGggQ2Fyb2xpbmExHzAdBgNVBAcTFlJlc2VhcmNoIFRyaWFuZ2xlIFBh
cmsxFjAUBgNVBAoTDVJlZCBIYXQsIEluYy4xITAfBgNVBAsTGFJlZCBIYXQgTmV0d29yayBTZXJ2
aWNlczEjMCEGA1UEAxMaUkhOUyBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxHjAcBgkqhkiG9w0BCQEW
D3JobnNAcmVkaGF0LmNvbTAeFw0wMDA4MjMyMjQ1NTVaFw0wMzA4MjgyMjQ1NTVaMIHHMQswCQYD
VQQGEwJVUzEXMBUGA1UECBMOTm9ydGggQ2Fyb2xpbmExHzAdBgNVBAcTFlJlc2VhcmNoIFRyaWFu
Z2xlIFBhcmsxFjAUBgNVBAoTDVJlZCBIYXQsIEluYy4xITAfBgNVBAsTGFJlZCBIYXQgTmV0d29y
ayBTZXJ2aWNlczEjMCEGA1UEAxMaUkhOUyBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxHjAcBgkqhkiG
9w0BCQEWD3JobnNAcmVkaGF0LmNvbTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAwGgrEjDi
IS0ixnJxW78XoJMQ6ZvjyY07LazEu5U74MpVMtyVwhCzBLJR++iFYRY0pbQdZ1ynd/Twktq0i6+V
k2LzZimuwIi3ZIQOSJBg+GA+AH9U3RemrBjgQt58vpCB9/QFhQoIzNXyn/wki3elPelIqe8PO2Oj
/qaDTOjcC3cCAwEAAaOCASgwggEkMB0GA1UdDgQWBBRUFc2fLPfsDR/SqL5MB6yIPvubCjCB9AYD
VR0jBIHsMIHpgBRUFc2fLPfsDR/SqL5MB6yIPvubCqGBzaSByjCBxzELMAkGA1UEBhMCVVMxFzAV
BgNVBAgTDk5vcnRoIENhcm9saW5hMR8wHQYDVQQHExZSZXNlYXJjaCBUcmlhbmdsZSBQYXJrMRYw
FAYDVQQKEw1SZWQgSGF0LCBJbmMuMSEwHwYDVQQLExhSZWQgSGF0IE5ldHdvcmsgU2VydmljZXMx
IzAhBgNVBAMTGlJITlMgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9yaG5z
QHJlZGhhdC5jb22CAQAwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQQFAAOBgQCTAYiIZ2eRjJ7Q
EhSQcRKHVQryUhut8tMHHa9wmbuwzYAjye0rc+ljsdCzjGDFQmSmwZVWkMU1BgNY9Y4r2fmpoBCp
mfcVQpKlUNcRB/EC1eBw5FVuKs4l+F3NCy8QYfj2IELMw4n4ik+CJBLPOX8hqCyNUpdSxfdfQqWH
CWawzAAAAAIALi9leHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzL2QyYWRjNzdkLjAA
AAFK5xheMQAFWC41MDkAAASHMIIEgzCCA+ygAwIBAgIEOJ725DANBgkqhkiG9w0BAQQFADCBtDEU
MBIGA1UEChMLRW50cnVzdC5uZXQxQDA+BgNVBAsUN3d3dy5lbnRydXN0Lm5ldC9HQ0NBX0NQUyBp
bmNvcnAuIGJ5IHJlZi4gKGxpbWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAyMDAwIEVudHJ1c3Qu
bmV0IExpbWl0ZWQxMzAxBgNVBAMTKkVudHJ1c3QubmV0IENsaWVudCBDZXJ0aWZpY2F0aW9uIEF1
dGhvcml0eTAeFw0wMDAyMDcxNjE2NDBaFw0yMDAyMDcxNjQ2NDBaMIG0MRQwEgYDVQQKEwtFbnRy
dXN0Lm5ldDFAMD4GA1UECxQ3d3d3LmVudHJ1c3QubmV0L0dDQ0FfQ1BTIGluY29ycC4gYnkgcmVm
LiAobGltaXRzIGxpYWIuKTElMCMGA1UECxMcKGMpIDIwMDAgRW50cnVzdC5uZXQgTGltaXRlZDEz
MDEGA1UEAxMqRW50cnVzdC5uZXQgQ2xpZW50IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIGfMA0G
CSqGSIb3DQEBAQUAA4GNADCBiQKBgQCTdLS25MVL1qFof2LV7PdRV7NySpj10InJrWPNTTVRaoTU
rcloeW+46xHbh65cJFET8VQlhK8pK5/jgOLZy93GRUk0iJBeAZfv6lOm3fzB3ksqJeTpNfpVBQbl
iXrqpBFXO/x8PTbNZzVtpKklWb1m9fkn5JVn1j+SgF7yNH0rhQIDAQABo4IBnjCCAZowEQYJYIZI
AYb4QgEBBAQDAgAHMIHdBgNVHR8EgdUwgdIwgc+ggcyggcmkgcYwgcMxFDASBgNVBAoTC0VudHJ1
c3QubmV0MUAwPgYDVQQLFDd3d3cuZW50cnVzdC5uZXQvR0NDQV9DUFMgaW5jb3JwLiBieSByZWYu
IChsaW1pdHMgbGlhYi4pMSUwIwYDVQQLExwoYykgMjAwMCBFbnRydXN0Lm5ldCBMaW1pdGVkMTMw
MQYDVQQDEypFbnRydXN0Lm5ldCBDbGllbnQgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxDTALBgNV
BAMTBENSTDEwKwYDVR0QBCQwIoAPMjAwMDAyMDcxNjE2NDBagQ8yMDIwMDIwNzE2NDY0MFowCwYD
VR0PBAQDAgEGMB8GA1UdIwQYMBaAFISLdP3FjcD/J20gN0V8/i3OutN9MB0GA1UdDgQWBBSEi3T9
xY3A/ydtIDdFfP4tzrrTfTAMBgNVHRMEBTADAQH/MB0GCSqGSIb2fQdBAAQQMA4bCFY1LjA6NC4w
AwIEkDANBgkqhkiG9w0BAQQFAAOBgQBObzWAO9GK9Q6nIMstZVXQkvTnhLUGJoMShAusO7JE7r3P
QNsgDrpuFOow4DtifH+La3xKp9U1PL6oXOpLu5OOgGarDyn9TS2/GpsKkMWr2tGzhtQvJFJcem3G
8v7lTRowjJDyutdKPkN+1MhQGof4T4HHdguEOnKdzmVml64mXgAAAAIALi9leHBvcnQvaGRhMy83
LjQuMC9sb2NhbC9jb25mL2NlcnRzLzlmNTMzNTE4LjAAAAFRhbR3ZwAFWC41MDkAAAdNMIIHSTCC
BTGgAwIBAgIJAMnN0+nVfSPOMA0GCSqGSIb3DQEBBQUAMIGsMQswCQYDVQQGEwJFVTFDMEEGA1UE
BxM6TWFkcmlkIChzZWUgY3VycmVudCBhZGRyZXNzIGF0IHd3dy5jYW1lcmZpcm1hLmNvbS9hZGRy
ZXNzKTESMBAGA1UEBRMJQTgyNzQzMjg3MRswGQYDVQQKExJBQyBDYW1lcmZpcm1hIFMuQS4xJzAl
BgNVBAMTHkdsb2JhbCBDaGFtYmVyc2lnbiBSb290IC0gMjAwODAeFw0wODA4MDExMjMxNDBaFw0z
ODA3MzExMjMxNDBaMIGsMQswCQYDVQQGEwJFVTFDMEEGA1UEBxM6TWFkcmlkIChzZWUgY3VycmVu
dCBhZGRyZXNzIGF0IHd3dy5jYW1lcmZpcm1hLmNvbS9hZGRyZXNzKTESMBAGA1UEBRMJQTgyNzQz
Mjg3MRswGQYDVQQKExJBQyBDYW1lcmZpcm1hIFMuQS4xJzAlBgNVBAMTHkdsb2JhbCBDaGFtYmVy
c2lnbiBSb290IC0gMjAwODCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMDfVtPkOpt2
RbQT2//BthmLN0EYlVJH6xedKYiONWwGMi5HYvNJBL99RDaxccy9Wglz1dmFRP+RVyXfXjaOcNFc
cUMd2drvXNL7G706tcuto8xEpw2uIRU/uXpbknXYpBI4iRmKt4DS4jJvVpyR1ogQC7N0ZJJ0YPP2
zxhPYLIj0Mc7zmFLmY/CDNBAspjcDahOo7kKrmCgrUVSY7pmvWjg+b4aqIG7HkF4ddPB/gBVsIdU
6CeQNR1MM62X/JcumIS/LMmjv9GYERTtY/jKmIhYF5ntRQOXfjyGHoiMvvKRhI9lNNgATH23MRda
KXoKGCQwoze1eqkBfSbW+Q6OWfH9GzO1KTsXO0G2Id3UwD2ln58fQ1DJu7xsepeY7s2MH/ucUa6L
cL0nn3HAa6x9kGbo1106DbDVwo3VyJ2dwW3Q0L9R5OP4wzg2rtandeavhENdk5IMagfeOx2YItas
wTXbo6Al/3K1dh3ebeksZixShNBFks4c5eUzHdwHU1SjqoI7mjcv3N2gZOnm3b2u/GSFHTynyQbe
hP9r6GsaPMWis0L7iwk+XwhSx2LE1AVxv8Rk5Pihg+g+EpuoHtQ2TS9x9o0o9oOpE9JhwZG7SMA0
j0GMS0zbaRL/UJScIINZc+18ofLx/d33SdNDWKBWY8o9PeU1VlnpDsogzCtLkykPAgMBAAGjggFq
MIIBZjASBgNVHRMBAf8ECDAGAQH/AgEMMB0GA1UdDgQWBBS5CcqcHtvTbDprru1U8VuTBjUuXjCB
4QYDVR0jBIHZMIHWgBS5CcqcHtvTbDprru1U8VuTBjUuXqGBsqSBrzCBrDELMAkGA1UEBhMCRVUx
QzBBBgNVBAcTOk1hZHJpZCAoc2VlIGN1cnJlbnQgYWRkcmVzcyBhdCB3d3cuY2FtZXJmaXJtYS5j
b20vYWRkcmVzcykxEjAQBgNVBAUTCUE4Mjc0MzI4NzEbMBkGA1UEChMSQUMgQ2FtZXJmaXJtYSBT
LkEuMScwJQYDVQQDEx5HbG9iYWwgQ2hhbWJlcnNpZ24gUm9vdCAtIDIwMDiCCQDJzdPp1X0jzjAO
BgNVHQ8BAf8EBAMCAQYwPQYDVR0gBDYwNDAyBgRVHSAAMCowKAYIKwYBBQUHAgEWHGh0dHA6Ly9w
b2xpY3kuY2FtZXJmaXJtYS5jb20wDQYJKoZIhvcNAQEFBQADggIBAICIf3DekijZBZRG/5BXqfEv
3xoNa/p8DhxJJHkn2EaqbylZUohwEurdPfWbU1Rv4WCiqAm57OtZfMY18dwY6fFn5a+6ReAJ3spE
D8IXDneRRXozX1+WLGiLwUePmJs9wOzL9dWCkoQ10b42OFZyMVtHLaoXpGNR6woBrX/sdZ7LoR/x
fxKxueRkf2fWIyr0uDldmOghp+G9PUIadJpwr2hsUF1Jz//7Dl3mLEfXgTpZALVza2Mg9jFFCDkO
9HB+QHBaP9BrQql0PSgvAm11cpUJjUhjxsYjV5KTXjXBjfkK9yydYhz2rXzdpjEetrHHfoUm+qRq
tdpjMNHvkzeyZi99Bffnt0uYlDXA2TopwZ2yUDMdSqlapskD7+3056huirRXhOukP9DuqqqHW2Po
k+JrqNS4cnhrG+055F3Lm6qH1U9OAP7Zap88MQ8oAgF9mOinsKJknnn4SPIVqczmyETrP3iZ8ntx
PjzxmKfFGBI/5rsoM0LpRQp8bfKGeS/Fghl9CYl8slR2iK7ewfPM4W7bMdaTrpmg7yVqc5iJWzou
E4gev8CSlDQb4ye3ix5vQv/n6TebUB0tovkC7stYWDpxvGjjqsGvHCgfotwjZT+B6q6Z09gwzxMN
TxXJhLynSC34MCN32EZLeW32jO06f2ARePTpm67VVMB0gNELQp/BAAAAAgAuL2V4cG9ydC9oZGEz
LzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvZWQwNDk4MzUuMAAAAVGFtaBSAAVYLjUwOQAAAwYwggMC
MIICawIQMoiOmtL16xNH+H/EIDcl+DANBgkqhkiG9w0BAQUFADCBwTELMAkGA1UEBhMCVVMxFzAV
BgNVBAoTDlZlcmlTaWduLCBJbmMuMTwwOgYDVQQLEzNDbGFzcyA0IFB1YmxpYyBQcmltYXJ5IENl
cnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIxOjA4BgNVBAsTMShjKSAxOTk4IFZlcmlTaWduLCBJ
bmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5l
dHdvcmswHhcNOTgwNTE4MDAwMDAwWhcNMjgwODAxMjM1OTU5WjCBwTELMAkGA1UEBhMCVVMxFzAV
BgNVBAoTDlZlcmlTaWduLCBJbmMuMTwwOgYDVQQLEzNDbGFzcyA0IFB1YmxpYyBQcmltYXJ5IENl
cnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIxOjA4BgNVBAsTMShjKSAxOTk4IFZlcmlTaWduLCBJ
bmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5l
dHdvcmswgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBALrw5M/5xK6FVLkHV/mPxX9oEfjEF7BE
3OMwc9UqYiq40Mwc7Shbfr1q3LORJMpBYjz8AgG/HBYxlAWXdm6irb1hF2xOMIbwUTcqUMeoYoHc
W0qqwaC0busv5VfFsStAcNtaTaGOH70DH9gD1I9MmXG84oLMWOiYOobThjjzACkfAgMBAAEwDQYJ
KoZIhvcNAQEFBQADgYEAhYwSwae5UBV6yz6suEOK3KrdFLqJgX4BPCNxIYgvgtxj+gJFrEVZ1ypY
RFu3n4E7kmg94jck9Xtsj3Y1lgmoWZ25ziOrdNaD/TJzJ9hpPkN09q7FiZrnU3zpe/ZL88Flg96N
ipw8iI05WfyqPyKNocFmUIFyTO0iZE9PyoCRtikAAAACAC8vZXhwb3J0L2hkYTMvNi4xMC40L2xv
Y2FsL2NvbmYvY2VydHMvY2RhZWJiNzIuMAAAATC7K2cLAAVYLjUwOQAAA74wggO6MIICoqADAgEC
AgQAmJaKMA0GCSqGSIb3DQEBBQUAMFUxCzAJBgNVBAYTAk5MMR4wHAYDVQQKExVTdGFhdCBkZXIg
TmVkZXJsYW5kZW4xJjAkBgNVBAMTHVN0YWF0IGRlciBOZWRlcmxhbmRlbiBSb290IENBMB4XDTAy
MTIxNzA5MjM0OVoXDTE1MTIxNjA5MTUzOFowVTELMAkGA1UEBhMCTkwxHjAcBgNVBAoTFVN0YWF0
IGRlciBOZWRlcmxhbmRlbjEmMCQGA1UEAxMdU3RhYXQgZGVyIE5lZGVybGFuZGVuIFJvb3QgQ0Ew
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCY0rVREXqBphSYcW2+zOcTG9YnDnqzahgc
tmFa1WEJv96QE8dn7t3z2sUMEp41VT4sJ4hAa/fc3SJh9cLHDvX21XZTTY+MvBh2N4Wd6MpJx9JP
mBMJoj4iiJx/1vIQZbTuXxjVF+P4xf3inaLvUw6Fd6IP4TBH7gDnM31EZxoLUeiLoJ5QmGg0Uh8u
bQHyYEXyMeupMWgpu3pBnsYZf5S0UTkDf7LepzKbtEeOb7RKruWvsdywG2G8mXLe5Im3eiZd2jNJ
W1KcDvWKrcO4PegGasLVKgtse4S9VgXLhmWS7EQrsI653HALRtqtvGOIOfrbav4j+rzkSPRnK2oR
ECFJAgMBAAGjgZEwgY4wDAYDVR0TBAUwAwEB/zBPBgNVHSAESDBGMEQGBFUdIAAwPDA6BggrBgEF
BQcCARYuaHR0cDovL3d3dy5wa2lvdmVyaGVpZC5ubC9wb2xpY2llcy9yb290LXBvbGljeTAOBgNV
HQ8BAf8EBAMCAQYwHQYDVR0OBBYEFKh967xjpHQTdADsluDTNMEsv2z4MA0GCSqGSIb3DQEBBQUA
A4IBAQAFhIdVdDZhwbvR1MYVqBO0n6T+u+4VtC8GDCnyqJKkYQ38q1wIW1ETK03CKmHI+AlY/C0C
sjl9mWaBv25clUUgbOZ5p9HYHCn8wiAnUcjxfF00Z2mFETDGANLX89N8tvAxVygSgnPpMy+mVbQL
kZRHnPq7ekIy6K5+Lci8rBS/2Q/ZW/zB+XqV4X1+lvxxsMJMyN9FNMnODfKcZAjQO8MpxbLtkATB
sSmRxTBvwalyM8z+XRYXLBFp537+xYMI37zcIjouIGkjOVZgZ5CLLnY5+xGIl/Z8vUu4IBZnBY3i
O8FyP5SVN8dduZ7Yk6EXj/8MZhXBJHwyfAMdO6FYRTKTAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4w
L2xvY2FsL2NvbmYvY2VydHMvYmRhNGNjODQuMAAAAUrnGHNnAAVYLjUwOQAAA6gwggOkMIICjKAD
AgECAgEBMA0GCSqGSIb3DQEBBQUAMGMxCzAJBgNVBAYTAlVTMRwwGgYDVQQKExNBbWVyaWNhIE9u
bGluZSBJbmMuMTYwNAYDVQQDEy1BbWVyaWNhIE9ubGluZSBSb290IENlcnRpZmljYXRpb24gQXV0
aG9yaXR5IDEwHhcNMDIwNTI4MDYwMDAwWhcNMzcxMTE5MjA0MzAwWjBjMQswCQYDVQQGEwJVUzEc
MBoGA1UEChMTQW1lcmljYSBPbmxpbmUgSW5jLjE2MDQGA1UEAxMtQW1lcmljYSBPbmxpbmUgUm9v
dCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC
AQEAqC/opGkGA0fD6SqY/xmicJrGULJ+pd9oTRt8D7aXaH0tpouX6WSGyaPvoIa/YGWcS1SIwkjF
Sjm/FONZVeUZtHTItAU5XBal4pUF4BKuWYuiM2hYHKbUFbfYn9fccat+mr+bjjMPIv0fLucHNu9i
OcXdy7olFCPeDMY9PM6CCOZmPtpROxY6owV/oNyH1Zz8cqmgfXjktzFVHmW71GGwIWDtEDJyxZIl
HviQShh4R99+MDc+UBvbHNNrmoZTB7DvrAZ4+ISZ/iGNTIC2DIL2ZnB5GtNPo8/xz0awSw8+3Yhi
uIypCSg7eseX4R7l9J/AwK4koMih2Q/WeyaCaTI9pwIDAQABo2MwYTAPBgNVHRMBAf8EBTADAQH/
MB0GA1UdDgQWBBQArdmj9nn2bnSpfzM9gRfXTM8z3jAfBgNVHSMEGDAWgBQArdmj9nn2bnSpfzM9
gRfXTM8z3jAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQEFBQADggEBAHyK0R8YN4LguLCj7VaV
yGJhnAWizcJiJmHNEBbXzLRlNNARiq2oqQVm73TzbV+dma/2i/vrUrIFmKJvKsVUvSW9X67IhupG
LMGzvcHpSXAYFpcIE4wg4BsuOkfLHuQAMJVb9EWjwBqwAU6rvcAjbmM/gErFB+3c4m/HwWLx43LW
BMh0Zwv6iKuhAchv8BSv0pnNUZN+7S44x73ORlA9cuN5JZ2biCsQIN2luDKfjeAp3yF0hoLbL4Iw
xsc1hrP5ll9G2wxF/fNQw2/Gw0itRqbhJ0cKHQ6btsJ3f2Py4H0avvzg39fHp2yw+a66PP10tBHo
WA2AvNOogDqZ7XXMRnsAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy81
MjRkOWI0My4wAAABUYW0RFcABVguNTA5AAAEvTCCBLkwggOhoAMCAQICEEAaxGQhsxMhAw675BIa
xR0wDQYJKoZIhvcNAQELBQAwgb0xCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5j
LjEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDIwMDggVmVy
aVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTE4MDYGA1UEAxMvVmVyaVNpZ24g
VW5pdmVyc2FsIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDgwNDAyMDAwMDAwWhcN
MzcxMjAxMjM1OTU5WjCBvTELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8w
HQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMjAwOCBWZXJpU2ln
biwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MTgwNgYDVQQDEy9WZXJpU2lnbiBVbml2
ZXJzYWwgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASIwDQYJKoZIhvcNAQEBBQADggEP
ADCCAQoCggEBAMdhN16xATTbYtcVm/9YWowjI9ZgjpHXkJiDeuZYGTiMxfblZIW0onH77b252s1N
ALTILXOlx2lxlR85PLJEB5zoDvpNSsQh3ylhjzIiYYLFhx9ujHxfFiBRRNFwT1fq4xzjzHnuWNgO
wrNFk8As55oXK3sAN3pBM3jhM+LzEBp/hyy+9vX3QuLlv4diiV8AS9/F3eR1RDJBOh5xbmnLC3VG
CNHK0iuV0M/7uUBrZIxXTfwTEXmE7V5U9jSfCAHzECUGF0ra8R16ZmuYYGak2e/SLoLx8O8J6kTJ
FWriA24z06yfVQDH9ghqlLlf3OAz8YRg+VsnEbT8FvK7VmqAJY0CAwEAAaOBsjCBrzAPBgNVHRMB
Af8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjBtBggrBgEFBQcBDARhMF+hXaBbMFkwVzBVFglpbWFn
ZS9naWYwITAfMAcGBSsOAwIaBBSP5dMahqyNjmvDz4Bq1EgYLHsZLjAlFiNodHRwOi8vbG9nby52
ZXJpc2lnbi5jb20vdnNsb2dvLmdpZjAdBgNVHQ4EFgQUtnf6aUhHn1MS1cLqBzJ2B9GXBxkwDQYJ
KoZIhvcNAQELBQADggEBAEr4+LAD5ixne+SUd2PMbkz5fQ4N3Mi5NblwT2P6JPpsg4xHnTtj85r5
djKVkbF3vKyavrHkMSHGgZVWWg6xwtSxplms8WPLuEwdWZBK75AWKB9arhD7gVA4DGzM8T3D9WPj
s+MhySQ56f0VZkb0GxHQTXOjfUb5Pe2oX2LU8T/44HRXKxidgbTEKNqUl6Vw66wdvgcR8NXb3eWM
8NUysIPmV+KPv76hqr89HbXUOOrXsFw6T2o/j8BmbGOq6dmkFvSB0ZUUDn3NlTTZ0o9wc4F7nH69
mGHYRYeYkMXrhjDGNb/w/8NViINL7wWSBnHyuJiTt+zNgmHxOOZPl5gqWo0AAAACAC4vZXhwb3J0
L2hkYTMvNy4yLjAvbG9jYWwvY29uZi9jZXJ0cy8zMzgxNWUxNS4wAAABSucY0eUABVguNTA5AAAH
zTCCB8kwggWxoAMCAQICAQEwDQYJKoZIhvcNAQEFBQAwfTELMAkGA1UEBhMCSUwxFjAUBgNVBAoT
DVN0YXJ0Q29tIEx0ZC4xKzApBgNVBAsTIlNlY3VyZSBEaWdpdGFsIENlcnRpZmljYXRlIFNpZ25p
bmcxKTAnBgNVBAMTIFN0YXJ0Q29tIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTA2MDkxNzE5
NDYzNloXDTM2MDkxNzE5NDYzNlowfTELMAkGA1UEBhMCSUwxFjAUBgNVBAoTDVN0YXJ0Q29tIEx0
ZC4xKzApBgNVBAsTIlNlY3VyZSBEaWdpdGFsIENlcnRpZmljYXRlIFNpZ25pbmcxKTAnBgNVBAMT
IFN0YXJ0Q29tIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIICIjANBgkqhkiG9w0BAQEFAAOCAg8A
MIICCgKCAgEAwYjbCbxsRnx4n5V7tTOQ8nJi1sE2ICIkXs7pd/JDCqIGZKTMjjb4OOYj8G5tsTzd
cqOFHKHTPbQzK9Mvr/7qsEFZZ7bEBn0KnnSF1nlMgDd63zkFUln39BtGQ6TShYXSw3HzdWI0uiyK
fx6P7u000BHHls1SPboz1t1N3gs7SkufwiYv+rUWHHI1d8o8XebK4SaLGjZ2XAHbdBQl/u21oIgP
3XjKLR8HlzABLXJ5+kbWEyqouaarg0kd5fLv3eQBjhgKj2NTFoViqQ4ZOsy1ZqbCa3QH5Cvhdj60
bdj2ROFzYh87xL6gU1YlbFEJ96qryr92/W2b853bvz1mvAxWqq+YSJU6S9+nWFDZOHWpW+pDDAL/
mevobE1wWyllnN2qXcyvATHsDOvSjejqnHvmbvcnZgwaSNduQuM/3iE+e+ENcPtjqqhsGlS0XCV6
yaLJixamuyx+F14FTVhuEh0B7hIQDcYyfxj//PT6zW6R6DZJvhpIaYvClk0aErJpF8EKkNb6eSJI
v7p7afhwx/p6N9jYDdJ2T1f/kLfjkdLd78Jgt2c63f6qnPDUi39yIs7Gn5e2+K+KoBCo2fsYxra1
XFI8ibYZKnMBCg8DsxJg8novgdujbv8mMJf1i92JV7atPbOvK8W3dgLwpdYrmoYUKnL24zOMXQlL
E9+7jHQTUksCAwEAAaOCAlIwggJOMAwGA1UdEwQFMAMBAf8wCwYDVR0PBAQDAgGuMB0GA1UdDgQW
BBROC+8apEBbpRdphzDKNGhD0EGu8jBkBgNVHR8EXTBbMCygKqAohiZodHRwOi8vY2VydC5zdGFy
dGNvbS5vcmcvc2ZzY2EtY3JsLmNybDAroCmgJ4YlaHR0cDovL2NybC5zdGFydGNvbS5vcmcvc2Zz
Y2EtY3JsLmNybDCCAV0GA1UdIASCAVQwggFQMIIBTAYLKwYBBAGBtTcBAQEwggE7MC8GCCsGAQUF
BwIBFiNodHRwOi8vY2VydC5zdGFydGNvbS5vcmcvcG9saWN5LnBkZjA1BggrBgEFBQcCARYpaHR0
cDovL2NlcnQuc3RhcnRjb20ub3JnL2ludGVybWVkaWF0ZS5wZGYwgdAGCCsGAQUFBwICMIHDMCcW
IFN0YXJ0IENvbW1lcmNpYWwgKFN0YXJ0Q29tKSBMdGQuMAMCAQEagZdMaW1pdGVkIExpYWJpbGl0
eSwgcmVhZCB0aGUgc2VjdGlvbiAqTGVnYWwgTGltaXRhdGlvbnMqIG9mIHRoZSBTdGFydENvbSBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSBQb2xpY3kgYXZhaWxhYmxlIGF0IGh0dHA6Ly9jZXJ0LnN0
YXJ0Y29tLm9yZy9wb2xpY3kucGRmMBEGCWCGSAGG+EIBAQQEAwIABzA4BglghkgBhvhCAQ0EKxYp
U3RhcnRDb20gRnJlZSBTU0wgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwDQYJKoZIhvcNAQEFBQAD
ggIBABZsmfRmDDT10IVefQrs2hBOOBxe36YlBUuRMsHoO/E93UQJWwdJiinLZgK3sZr3JZgJPI4b
4d02hytLu2jTOWY9oCbH8jmRHVGrgnt+1c5a5OIDV3Bplwj5XlimCt+MBppFFhY4Cl5X9mLHegIF
5rwetfKe9Kkpg/iyFONuKIdEw5Aa3jipPKxDTWRFzt0oqVzyc3sE+Bfoq7HzLlxkbnMxOhK4vLMR
5H2PgVGaO42J9E2TZns8A+3Tmh2a82VQ9aDQdZ8vr/DqgkOY+GmciXnEQ45GcuNkNhKv9yUeOImQ
d37Da2q5w8tES6x4kIvnxyweSxFEyDRSJ80KXZ+FwYnVGnjylRBTMt2AhGZ12bVoKPthLr6EqDjA
mRKGpR5nZK0GLi+pcIXHlg98iWX1jkNUDqvdpYA5lGDANMmWcCyjEvUfSHu9HH5rt52Q9CI7rvj8
Ksr6glKg769LVZPrwbXwIousNE4mIgShhyx1SrflfRPXuAxkwDbSyS+GEowjCcEbgjtzSaNqV4eU
5dZ4xZlDY+NN4Hct4WWZcmkEGkcJ5g8BViT7H78OealYLrnECQF+lbptAAY+supKEDnY0Cv1v+x1
v5cCxQkbCNxVN+KB+zeEQ2IgyudWS2Xq/mzBJJMkoTTrBf+aIq6bfT/xZVEKpjBqs/SIHIAN/HKK
6INeAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvOTY4NWE0OTMuMAAA
AVGFtFcJAAVYLjUwOQAAAzQwggMwMIICGKADAgECAgID6DANBgkqhkiG9w0BAQUFADBHMQswCQYD
VQQGEwJISzEWMBQGA1UEChMNSG9uZ2tvbmcgUG9zdDEgMB4GA1UEAxMXSG9uZ2tvbmcgUG9zdCBS
b290IENBIDEwHhcNMDMwNTE1MDUxMzE0WhcNMjMwNTE1MDQ1MjI5WjBHMQswCQYDVQQGEwJISzEW
MBQGA1UEChMNSG9uZ2tvbmcgUG9zdDEgMB4GA1UEAxMXSG9uZ2tvbmcgUG9zdCBSb290IENBIDEw
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCs/zi26WYCSeOitOGQ+UCPefnivXn+Ar3u
JJIdIvbahXJp/tc/CdTdkbUCnNCNWuFVw1CGuSkmwuPZoPFpAygggEUiLVanO1SVViJZHyjfHyA9
baI2viOgsW61sSc/OVMJ6qtq6HSywmVcjr98w3iEzZ4W/PUuTyAqCJ9388UexJpSZh5IXuMQBo8i
mOFljhtdI2Y7uKUyUciGqqGpnn92lMKmbLdB8NXIBjjm1Azi8ztMbVCMxIMnwROEWT2edXS22AJe
OpB6wEI2cuxqTdzvxADfExhXXyZ4yNYKeXe/96+3drmlC4QXXRDqb+GrlRFfbTyjXE2DW/KzGYqA
iwuHAgMBAAGjJjAkMBIGA1UdEwEB/wQIMAYBAf8CAQMwDgYDVR0PAQH/BAQDAgHGMA0GCSqGSIb3
DQEBBQUAA4IBAQAORtU8ruKH2V6BiwKYQQiMTLza2+4nG4LnakXsFotPhaDzsnC9Wpa6ym5t7kaL
bucqLpazGTPrtJ+osjfumKiXti62ZyfUpkn9HJNldp5CL9wibJpP8loVObFx1ytR6G0cmMDZKvSh
gnvVyUGiIwF0OFWLD7kuZ6IgBDfanAvTFyHgj5d5NG+ESAIgMxvmNESfkXD0gF6EQ8Ip0mwSFORh
jawQkJ6EULvwlm9Fn4rzymxP+hE6FRVGw80fg1stQRLtUGdBEz0hq5SKqk58wbH7p9a1Jy+Xq27g
HeLRHCwfROL8vpGhnPvWKVNzhp9T2EMOXdZjgnEdgHTK9uICa9laAAAAAgAuL2V4cG9ydC9oZGEz
LzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvODZmMzI0NzQuMAAAAVGFtWQzAAVYLjUwOQAAB+4wggfq
MIIHU6ADAgECAgEAMA0GCSqGSIb3DQEBBQUAMIIBEjELMAkGA1UEBhMCRVMxEjAQBgNVBAgTCUJh
cmNlbG9uYTESMBAGA1UEBxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJUFMgSW50ZXJuZXQgcHVibGlz
aGluZyBTZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJpcHNAbWFpbC5pcHMuZXMgQy5JLkYuICBCLTYw
OTI5NDUyMS4wLAYDVQQLEyVJUFMgQ0EgQ0xBU0UzIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MS4w
LAYDVQQDEyVJUFMgQ0EgQ0xBU0UzIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MR4wHAYJKoZIhvcN
AQkBFg9pcHNAbWFpbC5pcHMuZXMwHhcNMDExMjI5MDEwMTQ0WhcNMjUxMjI3MDEwMTQ0WjCCARIx
CzAJBgNVBAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJhcmNlbG9uYTEuMCwG
A1UEChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjErMCkGA1UEChQiaXBz
QG1haWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEuMCwGA1UECxMlSVBTIENBIENMQVNFMyBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEuMCwGA1UEAxMlSVBTIENBIENMQVNFMyBDZXJ0aWZpY2F0
aW9uIEF1dGhvcml0eTEeMBwGCSqGSIb3DQEJARYPaXBzQG1haWwuaXBzLmVzMIGfMA0GCSqGSIb3
DQEBAQUAA4GNADCBiQKBgQCrF/4OsMZoG1PwUr6f+tr6ixMEuwGPMtkfj03ONpja5ABEjCjYE0Qq
pGtOFyRCnNOIpEGC1iP7i8mG5bmpggXc8d4f4AyZVZjyOOxsnSADwO+qo8ZkBFEteA2j0qg61iRM
6ZZ6GKwTIyIbfOgxEbNfCaowcHFGJWtJcYArlQGyHwIDAQABo4IESjCCBEYwHQYDVR0OBBYEFLiT
/y7L3CyOoud6/jZRIaOYWww0MIIBRAYDVR0jBIIBOzCCATeAFLiT/y7L3CyOoud6/jZRIaOYWww0
oYIBGqSCARYwggESMQswCQYDVQQGEwJFUzESMBAGA1UECBMJQmFyY2Vsb25hMRIwEAYDVQQHEwlC
YXJjZWxvbmExLjAsBgNVBAoTJUlQUyBJbnRlcm5ldCBwdWJsaXNoaW5nIFNlcnZpY2VzIHMubC4x
KzApBgNVBAoUImlwc0BtYWlsLmlwcy5lcyBDLkkuRi4gIEItNjA5Mjk0NTIxLjAsBgNVBAsTJUlQ
UyBDQSBDTEFTRTMgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxLjAsBgNVBAMTJUlQUyBDQSBDTEFT
RTMgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxHjAcBgkqhkiG9w0BCQEWD2lwc0BtYWlsLmlwcy5l
c4IBADAMBgNVHRMEBTADAQH/MAwGA1UdDwQFAwMH/4AwawYDVR0lBGQwYgYIKwYBBQUHAwEGCCsG
AQUFBwMCBggrBgEFBQcDAwYIKwYBBQUHAwQGCCsGAQUFBwMIBgorBgEEAYI3AgEVBgorBgEEAYI3
AgEWBgorBgEEAYI3CgMBBgorBgEEAYI3CgMEMBEGCWCGSAGG+EIBAQQEAwIABzAaBgNVHREEEzAR
gQ9pcHNAbWFpbC5pcHMuZXMwGgYDVR0SBBMwEYEPaXBzQG1haWwuaXBzLmVzMEEGCWCGSAGG+EIB
DQQ0FjJDTEFTRTMgQ0EgQ2VydGlmaWNhdGUgaXNzdWVkIGJ5IGh0dHA6Ly93d3cuaXBzLmVzLzAp
BglghkgBhvhCAQIEHBYaaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi8wOgYJYIZIAYb4QgEEBC0W
K2h0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvaXBzMjAwMkNMQVNFMy5jcmwwPwYJYIZIAYb4QgED
BDIWMGh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcmV2b2NhdGlvbkNMQVNFMy5odG1sPzA8Bglg
hkgBhvhCAQcELxYtaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9yZW5ld2FsQ0xBU0UzLmh0bWw/
MDoGCWCGSAGG+EIBCAQtFitodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL3BvbGljeUNMQVNFMy5o
dG1sMHMGA1UdHwRsMGowMaAvoC2GK2h0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvaXBzMjAwMkNM
QVNFMy5jcmwwNaAzoDGGL2h0dHA6Ly93d3diYWNrLmlwcy5lcy9pcHMyMDAyL2lwczIwMDJDTEFT
RTMuY3JsMC8GCCsGAQUFBwEBBCMwITAfBggrBgEFBQcwAYYTaHR0cDovL29jc3AuaXBzLmVzLzAN
BgkqhkiG9w0BAQUFAAOBgQAXZVyZlUMDJ68m5evQsxcj90Oqx/B97A/Gqa6ulg92KRziBi1+JsU8
+qHBgc5TsELRl1caF36kUWHG7ule7wW6670Pp5Jv2KMGaCmOefX/v/mnr+SxzsLRgEInBQQ0+MN/
FngjDAck8kZHrTtU0K/VMbKvfcjq6dRW2Q4TssVFUAAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9s
b2NhbC9jb25mL2NlcnRzL2RkYzMyOGZmLjAAAAFRhbNHQgAFWC41MDkAAAMXMIIDEzCCAnygAwIB
AgIBATANBgkqhkiG9w0BAQQFADCBxDELMAkGA1UEBhMCWkExFTATBgNVBAgTDFdlc3Rlcm4gQ2Fw
ZTESMBAGA1UEBxMJQ2FwZSBUb3duMR0wGwYDVQQKExRUaGF3dGUgQ29uc3VsdGluZyBjYzEoMCYG
A1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lvbjEZMBcGA1UEAxMQVGhhd3RlIFNl
cnZlciBDQTEmMCQGCSqGSIb3DQEJARYXc2VydmVyLWNlcnRzQHRoYXd0ZS5jb20wHhcNOTYwODAx
MDAwMDAwWhcNMjAxMjMxMjM1OTU5WjCBxDELMAkGA1UEBhMCWkExFTATBgNVBAgTDFdlc3Rlcm4g
Q2FwZTESMBAGA1UEBxMJQ2FwZSBUb3duMR0wGwYDVQQKExRUaGF3dGUgQ29uc3VsdGluZyBjYzEo
MCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBEaXZpc2lvbjEZMBcGA1UEAxMQVGhhd3Rl
IFNlcnZlciBDQTEmMCQGCSqGSIb3DQEJARYXc2VydmVyLWNlcnRzQHRoYXd0ZS5jb20wgZ8wDQYJ
KoZIhvcNAQEBBQADgY0AMIGJAoGBANOkUG7I/1Zr5s9dtuoMaHVHoqrC2oQl/Kj0R1HahbUgdJSG
Hg91yekIYfUGbTBuFRkC6VLAYttNmZ7iagxEOM3+vuNkCXDF/rFrKbYvScg71CcEJRCXL+eQbcAo
QpnXTEPew/UhbVSfXcNY4cDk2VuwuNy0e982OsK1ZiIS1ocNAgMBAAGjEzARMA8GA1UdEwEB/wQF
MAMBAf8wDQYJKoZIhvcNAQEEBQADgYEAB/pMaVz7lcxG7oWDTSEwjsrZqG9JGubaUeNgcGyEYRGh
GshIPllDfU+VPaGLtwtimHp1it2ITk6eQNuozDJ0uW8NxuOzRAvZim+aKZuZGCg70eNAKJpaPNW1
5yAbi8qkq43pUdniTCxZqdq5snUb9kLy78fyGPmJvKP/iiMucEcAAAACAC4vZXhwb3J0L2hkYTMv
Ny40LjAvbG9jYWwvY29uZi9jZXJ0cy8wMmI3MzU2MS4wAAABUYWzkJMABVguNTA5AAAEQzCCBD8w
ggMnoAMCAQICAQEwDQYJKoZIhvcNAQEFBQAwfjELMAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0
ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0
ZWQxJDAiBgNVBAMMG1NlY3VyZSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczAeFw0wNDAxMDEwMDAwMDBa
Fw0yODEyMzEyMzU5NTlaMH4xCzAJBgNVBAYTAkdCMRswGQYDVQQIDBJHcmVhdGVyIE1hbmNoZXN0
ZXIxEDAOBgNVBAcMB1NhbGZvcmQxGjAYBgNVBAoMEUNvbW9kbyBDQSBMaW1pdGVkMSQwIgYDVQQD
DBtTZWN1cmUgQ2VydGlmaWNhdGUgU2VydmljZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
AoIBAQDAcTOCitBw63OHgkDVHeTLyQ5CkPneNLmhuhH0JYXzzHJt8nuXa7MH8XckkV8lj/Z0PeSA
wvg8DfO/QOr3yFLRcm/vyKtBuG4uFyqVaQzN0h6Uey2UHap117OYy6y8ZFNAvI+srDbLXK273eCU
F+zRXNC/76WVyZDFsKz7G0Pfeghdt7jyQBsrJ55Qzl5lgoiMXtNODHrqCJG2NqorQvvqwqM55dsm
OK2LCu4ZY8ccJN8DeNrm6sFHGgsLRgndAvzey4df1zBjaKGu3DKhur7+RKtotqUXFf291aenmuRE
M+mIjvztUeuTcU6tAedEjqsty6j+AUlI8MDdx2jYkv49AgMBAAGjgccwgcQwHQYDVR0OBBYEFDzY
k4jCwIIJzAGZBpMg6Z5wCWNPMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MIGBBgNV
HR8EejB4MDugOaA3hjVodHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9TZWN1cmVDZXJ0aWZpY2F0ZVNl
cnZpY2VzLmNybDA5oDegNYYzaHR0cDovL2NybC5jb21vZG8ubmV0L1NlY3VyZUNlcnRpZmljYXRl
U2VydmljZXMuY3JsMA0GCSqGSIb3DQEBBQUAA4IBAQCHAW0jHX5bF33BYTLPj+fzipRZZuCeKKhe
07f0NOaqObKXFsWCbzKk6Yznr/3vwui5S6qj9ObajWUh+7qA6yYohRr+OYzeWwQEtFT5o2eeQfoJ
UswFSKjJPyEEHs5Ia/yF6MJ7r3+3zPhfOv01xg3vl9xMqxHha8sx0Wz7SICr3Jw3uCEUSw1xPeyD
M27RbjIW7JjHFotZpjSrBVctk/eqE8vSE+K3LjvNa1AXCWg+tSZX7rbgtt25KYB5fY+j8KQopBXE
hfQn1Gu/5VzkZQJ2VLTjN2Yk0xlhyFIQ5Ys3mrmp+R2/6pmSYZb/Ac2hXw28cbwOrAsdR0Udwex8
7P0pAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvYmY4NzU5MGYuMAAA
AUrnGGnvAAVYLjUwOQAABWwwggVoMIIEUKADAgECAhA7Wcd7zVtXnr03Uqx2tKoaMA0GCSqGSIb3
DQEBBQUAMGIxEjAQBgNVBAoTCWJlVFJVU1RlZDEbMBkGA1UECxMSYmVUUlVTVGVkIFJvb3QgQ0Fz
MS8wLQYDVQQDEyZiZVRSVVNUZWQgUm9vdCBDQSAtIFJTQSBJbXBsZW1lbnRhdGlvbjAeFw0wMjA0
MTExMTE4MTNaFw0yMjA0MTIxMTA3MjVaMGIxEjAQBgNVBAoTCWJlVFJVU1RlZDEbMBkGA1UECxMS
YmVUUlVTVGVkIFJvb3QgQ0FzMS8wLQYDVQQDEyZiZVRSVVNUZWQgUm9vdCBDQSAtIFJTQSBJbXBs
ZW1lbnRhdGlvbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOS6NDAJjlfQuQYsb24k
gCK/XUOm+k+sguccaHCFG6Nutap42W4HSz/p3/Xq6FShYYoOL2l1GLcM5RSNcW6YuFX8DJXQm27h
LYjUOkBrkvGZlmTe2/949O6WHUeJfNS+uYh3IzoJ5gSebape0si9mk4Z34nqWw5+w+S08OBpO4gP
QZD41HFDJMGPJks7Vun/jGw36UWthYxTw2CGkEqWybNUsLsX8BxF2dQbGWRWChn3zOH/hq9+WF6s
epAfySg5RXuitsecH9qF1CGGWTCTvlMzN/bvQc8zx6tyayX181MbDEwu8XVL76CH9/6KFdBs1cv5
aFO5cBUTwvUu+0M1dS0CAwEAAaOCAhgwggIUMAwGA1UdEwQFMAMBAf8wggG1BgNVHSAEggGsMIIB
qDCCAaQGDysGAQQBsT4AAAMJKIORMTCCAY8wQQYIKwYBBQUHAgEWNWh0dHA6Ly93d3cuYmV0cnVz
dGVkLmNvbS9wcm9kdWN0c19zZXJ2aWNlcy9pbmRleC5odG1sMIIBSAYIKwYBBQUHAgIwggE6GoIB
NlJlbGlhbmNlIG9uIG9yIHVzZSBvZiB0aGlzIENlcnRpZmljYXRlIGNyZWF0ZXMgYW4gYWNrbm93
bGVkZ21lbnQgYW5kIGFjY2VwdGFuY2Ugb2YgdGhlIHRoZW4gYXBwbGljYWJsZSBzdGFuZGFyZCB0
ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB1c2UsIHRoZSBDZXJ0aWZpY2F0aW9uIFByYWN0aWNlIFN0
YXRlbWVudCBhbmQgdGhlIFJlbHlpbmcgUGFydHkgQWdyZWVtZW50LCB3aGljaCBjYW4gYmUgZm91
bmQgYXQgdGhlIGJlVFJVU1RlZCB3ZWIgc2l0ZSwgaHR0cDovL3d3dy5iZXRydXN0ZWQuY29tL3By
b2R1Y3RzX3NlcnZpY2VzL2luZGV4Lmh0bWwwCwYDVR0PBAQDAgEGMB8GA1UdIwQYMBaAFKnsFH75
2UPMUysUrc/38FmJQc0ZMB0GA1UdDgQWBBSp7BR++dlDzFMrFK3P9/BZiUHNGTANBgkqhkiG9w0B
AQUFAAOCAQEA25ewdeoMxMGYylYFwKitJkivLSDogce230PBLB11S9RCjed6qHTcZkJZh7P1aW3Z
qZ6zfRwxwfVU4lkkSeXuvTmma4qYRPub1yqDlzQtx301TC00uD4NxOyIJ6+ekv1QYYKoYAcUU8xl
E8H2R0Rp0jHIpt0uswveSo1bPasNwjVSolY3zDKLKIVCnJFAenArODbV4XMaH+X6fl/c1pw7MOrb
wFsnXNNzB8HC80ybb58byh6qqDgzCViyrvwH6DbcVbovT0D+er0GpoHBkyJ8hhEKBndIrjW3LzKa
YV6LvimfKSSIVjksqNKrlgNa1EifuUCEC5ho+wFD1hviCbGXHAAAAAIALi9leHBvcnQvaGRhMy83
LjQuMC9sb2NhbC9jb25mL2NlcnRzL2MzYTZhOWFkLjAAAAFRhbSddAAFWC41MDkAAAPTMIIDzzCC
AregAwIBAgIDAWweMA0GCSqGSIb3DQEBBQUAMIGNMQswCQYDVQQGEwJBVDFIMEYGA1UECgw/QS1U
cnVzdCBHZXMuIGYuIFNpY2hlcmhlaXRzc3lzdGVtZSBpbSBlbGVrdHIuIERhdGVudmVya2VociBH
bWJIMRkwFwYDVQQLDBBBLVRydXN0LW5RdWFsLTAzMRkwFwYDVQQDDBBBLVRydXN0LW5RdWFsLTAz
MB4XDTA1MDgxNzIyMDAwMFoXDTE1MDgxNzIyMDAwMFowgY0xCzAJBgNVBAYTAkFUMUgwRgYDVQQK
DD9BLVRydXN0IEdlcy4gZi4gU2ljaGVyaGVpdHNzeXN0ZW1lIGltIGVsZWt0ci4gRGF0ZW52ZXJr
ZWhyIEdtYkgxGTAXBgNVBAsMEEEtVHJ1c3QtblF1YWwtMDMxGTAXBgNVBAMMEEEtVHJ1c3QtblF1
YWwtMDMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCtPWFuA/OQO8BBC4SAzewqo51r
u27CQoT3URThoKgtUaNR8t4j8DRE/5TrzAUjlUC5B3ilJfYKvUWG6Nm9wASOhURh73+nyfrBJcyF
LGM/BWBzSQXgYHiVEEvc+RFZznF/QJuKqiTfC0Li21a8StKlDJu3Qz7dg9MmEALP6iPESU7l0+m0
iKsMrmKS1GWH2WrX9IWf5DMiJaXlyDO6w8dB3F/GaswADm0yqLaHNgBid5seHzTLkDx4iHQF63n1
k3Flyp3HaxgtPVxO59X4PzF9j4fsCiIvI+n+u33J4PTs63zEsMMtYrWacdaxaujs2e3Vcuy+VwHO
BVWf3tFgiBCzAgMBAAGjNjA0MA8GA1UdEwEB/wQFMAMBAf8wEQYDVR0OBAoECERqlWdVeRFPMA4G
A1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQUFAAOCAQEAVdRU0VlIXLOThaq/Yy/kgM40ozRiPvbY
7meIMQQDbwvUB/tOdQ/TLtPAF8fGKOwGDREkDg6lXb+MshOWcdzUzg4NCmgybLlBMRmrsQd7TZjT
XLDR8KdCoLXEjq/+8T/0709GAHbrAvv5ndJAlseIOrifEXnzgGWovR/TeIGgUUw3tKZdJXDRZslo
+S4RFGjxVJgIrCaSD96JntT6s3kr0qN51OyLrIdTaEJMUVF0HhsnLuP1Hyl0Te2v9+GSmYHovjrH
F1D2t8b8m7CKa9aIA5GPBnc6hQLdmNVDeD/GMBWsm2vLV7eJUYs66MmEDNuxUCAKGkq6ahq97BvI
xYSazQAAAAIALi9leHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzLzBlODJmODNhLjAA
AAFK5xfwrgAFWC41MDkAAAMlMIIDITCCAoqgAwIBAgIBADANBgkqhkiG9w0BAQQFADCByzELMAkG
A1UEBhMCWkExFTATBgNVBAgTDFdlc3Rlcm4gQ2FwZTESMBAGA1UEBxMJQ2FwZSBUb3duMRowGAYD
VQQKExFUaGF3dGUgQ29uc3VsdGluZzEoMCYGA1UECxMfQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcyBE
aXZpc2lvbjEhMB8GA1UEAxMYVGhhd3RlIFBlcnNvbmFsIEJhc2ljIENBMSgwJgYJKoZIhvcNAQkB
FhlwZXJzb25hbC1iYXNpY0B0aGF3dGUuY29tMB4XDTk2MDEwMTAwMDAwMFoXDTIwMTIzMTIzNTk1
OVowgcsxCzAJBgNVBAYTAlpBMRUwEwYDVQQIEwxXZXN0ZXJuIENhcGUxEjAQBgNVBAcTCUNhcGUg
VG93bjEaMBgGA1UEChMRVGhhd3RlIENvbnN1bHRpbmcxKDAmBgNVBAsTH0NlcnRpZmljYXRpb24g
U2VydmljZXMgRGl2aXNpb24xITAfBgNVBAMTGFRoYXd0ZSBQZXJzb25hbCBCYXNpYyBDQTEoMCYG
CSqGSIb3DQEJARYZcGVyc29uYWwtYmFzaWNAdGhhd3RlLmNvbTCBnzANBgkqhkiG9w0BAQEFAAOB
jQAwgYkCgYEAvLyTU23AUE+CFeZIlDWmWr5vQvoPR+53dXLdjUmbllegeNTKP1GzaQuRdhciB5dq
xFGTS+CN7zeVoQxN2jSQHReJl+A1OFdKwPQIcOk8RHtQfmGakOMj04gRRif1CwcOu93RfyAKiLlW
Cy4cgNrx454p7xS9CkT7G1sY0b8jkyECAwEAAaMTMBEwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG
9w0BAQQFAAOBgQAt4plrsD16iddZopQBHyvdEktTwq1/qqcAXJFAVyVKOKqEcLnZgA+le1z7c8a9
14phXAPjLSeoF+CEhULcXpvGt7Jtu3Sv5D/Lp7ew4F2+eIMllNLbgQ95B21P9DkVWlIBe94y1k04
9hJcBlDfBVu9FEuh3ym6O0GN92NWod8isQAAAAIALy9leHBvcnQvaGRhMy82LjEwLjQvbG9jYWwv
Y29uZi9jZXJ0cy8wYzM2NGIyZC4wAAABMLsrE3QABVguNTA5AAAE8TCCBO0wggRWoAMCAQICBDgD
ke4wDQYJKoZIhvcNAQEEBQAwgckxCzAJBgNVBAYTAlVTMRQwEgYDVQQKEwtFbnRydXN0Lm5ldDFI
MEYGA1UECxQ/d3d3LmVudHJ1c3QubmV0L0NsaWVudF9DQV9JbmZvL0NQUyBpbmNvcnAuIGJ5IHJl
Zi4gbGltaXRzIGxpYWIuMSUwIwYDVQQLExwoYykgMTk5OSBFbnRydXN0Lm5ldCBMaW1pdGVkMTMw
MQYDVQQDEypFbnRydXN0Lm5ldCBDbGllbnQgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNOTkx
MDEyMTkyNDMwWhcNMTkxMDEyMTk1NDMwWjCByTELMAkGA1UEBhMCVVMxFDASBgNVBAoTC0VudHJ1
c3QubmV0MUgwRgYDVQQLFD93d3cuZW50cnVzdC5uZXQvQ2xpZW50X0NBX0luZm8vQ1BTIGluY29y
cC4gYnkgcmVmLiBsaW1pdHMgbGlhYi4xJTAjBgNVBAsTHChjKSAxOTk5IEVudHJ1c3QubmV0IExp
bWl0ZWQxMzAxBgNVBAMTKkVudHJ1c3QubmV0IENsaWVudCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0
eTCBnTANBgkqhkiG9w0BAQEFAAOBiwAwgYcCgYEAyDqZXjEX36wnb5B75Bn/RaM0wtvBqE/waOqE
/Z91ec/BilGUr8dXA0dknq2CG1rafzd4R7s3mBKWzsYTfe/SDDBRqTmeVfj7secw3oOyuj7x1Yk7
O4W6qnQs/j8xbq+RlW4G1AdNSyxWRxgEUtoOEJO/Y5Cb4d+M5gKk5k9e94sCAQOjggHgMIIB3DAR
BglghkgBhvhCAQEEBAMCAAcwggEiBgNVHR8EggEZMIIBFTCB5KCB4aCB3qSB2zCB2DELMAkGA1UE
BhMCVVMxFDASBgNVBAoTC0VudHJ1c3QubmV0MUgwRgYDVQQLFD93d3cuZW50cnVzdC5uZXQvQ2xp
ZW50X0NBX0luZm8vQ1BTIGluY29ycC4gYnkgcmVmLiBsaW1pdHMgbGlhYi4xJTAjBgNVBAsTHChj
KSAxOTk5IEVudHJ1c3QubmV0IExpbWl0ZWQxMzAxBgNVBAMTKkVudHJ1c3QubmV0IENsaWVudCBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTENMAsGA1UEAxMEQ1JMMTAsoCqgKIYmaHR0cDovL3d3dy5l
bnRydXN0Lm5ldC9DUkwvQ2xpZW50MS5jcmwwKwYDVR0QBCQwIoAPMTk5OTEwMTIxOTI0MzBagQ8y
MDE5MTAxMjE5MjQzMFowCwYDVR0PBAQDAgEGMB8GA1UdIwQYMBaAFMT7nCl7l81MlvzuW7PKmXSL
lepMMB0GA1UdDgQWBBTE+5wpe5fNTJb87luzypl0i5XqTDAMBgNVHRMEBTADAQH/MBkGCSqGSIb2
fQdBAAQMMAobBFY0LjADAgSQMA0GCSqGSIb3DQEBBAUAA4GBAD+uivHXZgMFnj766hxGu6Rbj3ia
EkiZ+fQ13gw2BwJrEDqJFIGcMaZ8skGyaucHAaFL+Z8lO5bKmcM+oVEc88MuRPewZ0aqkuU72hwZ
FDgw1eKiMSUu8exFOO34BlgDc2KwEDGPQL9k4Fw+xU8f2hJD/0zmBiaomxmqRDx2slzsAAAAAgAu
L2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvMDUyZTM5NmIuMAAAAVGFs3VEAAVY
LjUwOQAABCIwggQeMIIDBqADAgECAgEBMA0GCSqGSIb3DQEBBQUAMGcxCzAJBgNVBAYTAlNFMRQw
EgYDVQQKEwtBZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRkVHJ1c3QgVFRQIE5ldHdvcmsxIzAhBgNV
BAMTGkFkZFRydXN0IFF1YWxpZmllZCBDQSBSb290MB4XDTAwMDUzMDEwNDQ1MFoXDTIwMDUzMDEw
NDQ1MFowZzELMAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRydXN0IEFCMR0wGwYDVQQLExRBZGRU
cnVzdCBUVFAgTmV0d29yazEjMCEGA1UEAxMaQWRkVHJ1c3QgUXVhbGlmaWVkIENBIFJvb3QwggEi
MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDkHpr+3Alah6SfR74RX6+ENNtiPHl4t+kwtewM
HCrEFv/g7HHrivURbu1PDZHSEhgtSRUBwqQiE8cRZP8iEpq5jlwvCM9xarNnAVnxXUbzsHil9g5C
euN/G8zQ8Lco/SrqnrOwuQSq/fbHtLG4KqD7WPEZoG9wJX4+aUp/DyLY760IEZopmeGqREWaEl4+
nW1S/OegPWgv8EtwfBM4rbwVJfHWzquiwDHWL5/g/xRZ/IST2Yd8TFQT65/RLRH4GDo63iXZ99NA
7aQGEsQ74ZHBVjXwFNxlNgluq6QHxzXRwgMzNlt1Jm1C8RJrQ29LcZT6NB3tE27KgH+YL2y5Zdjp
AgMBAAGjgdQwgdEwHQYDVR0OBBYEFDmVi2KLXMnUgLpYD5c/FQhDzJinMAsGA1UdDwQEAwIBBjAP
BgNVHRMBAf8EBTADAQH/MIGRBgNVHSMEgYkwgYaAFDmVi2KLXMnUgLpYD5c/FQhDzJinoWukaTBn
MQswCQYDVQQGEwJTRTEUMBIGA1UEChMLQWRkVHJ1c3QgQUIxHTAbBgNVBAsTFEFkZFRydXN0IFRU
UCBOZXR3b3JrMSMwIQYDVQQDExpBZGRUcnVzdCBRdWFsaWZpZWQgQ0EgUm9vdIIBATANBgkqhkiG
9w0BAQUFAAOCAQEAGat16viLZWGVE7ppBO+GyhOgx6pPZBs/GPaoLSxVjwW3MOpCah3AJVEtp78M
s+3vCH9sPEYa6hhD33bM+WaGnCxo9ekX+DGzGMTWSH0jTGjBfrsBFG/F2W7euwRCavj2XH3l2vqH
6w01UmfQnpd2BZM/lccB5mlVOH8QYZnJ41+myj6CY0iq4ghIPqrysoViprSn2b03nGi1LVZ9sLc/
oLEH1ulP3N5FcTAyfxsuCfm/UqHuwoA+BlwuVUDBG/VwRbDcXfr2clp30mPNz1iJAEJjP3k50ESw
gm5BGejd4MGIWtEecZMfJDB05R6o3jwnN3+Drp53z/Awsf9LmejGoQAAAAIALi9leHBvcnQvaGRh
My83LjIuMC9sb2NhbC9jb25mL2NlcnRzL2MxOWQ0MmM3LjAAAAFK5xgUoQAFWC41MDkAAAMGMIID
AjCCAmsCEEzH6qqYPnHTkxD4PTqJkZIwDQYJKoZIhvcNAQEFBQAwgcExCzAJBgNVBAYTAlVTMRcw
FQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgMSBQdWJsaWMgUHJpbWFyeSBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcyMTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2lnbiwg
SW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBO
ZXR3b3JrMB4XDTk4MDUxODAwMDAwMFoXDTI4MDgwMTIzNTk1OVowgcExCzAJBgNVBAYTAlVTMRcw
FQYDVQQKEw5WZXJpU2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgMSBQdWJsaWMgUHJpbWFyeSBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEcyMTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2lnbiwg
SW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBO
ZXR3b3JrMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCq0Lq+Fi24g9TK0g+8djHKlNgdk4xW
ArzZbxpvUjZudVYKVdPfQ4chEWWKfo+9Id5rMj8bhDSVBZ1BNeuS65bdqlk/AVNtmU/t5eIqWpDB
ucSmFc/IReumXY6cPvBkJHalzasab7bYe1FhbqZ/h8jit+U03EGI6glAvnOSPWvndQIDAQABMA0G
CSqGSIb3DQEBBQUAA4GBAKlPww3HZ74sy9mozS11534Vnjty637rXC0Jh9ZrbWB85a7FkCMMXErQ
r7Fd88e2CtvgFZMN3QO8x3aKtd1Pw5sTdbgBwObJW2uluIncrKTdcu1OofdPvAbT6shkdHvClUGc
ZXNY8ZCaPGqxmMnEh7zPRW1F4m4iP/68DzFc6PLZAAAAAgAvL2V4cG9ydC9oZGEzLzYuMTAuNC9s
b2NhbC9jb25mL2NlcnRzL2FhYTQ1NDY0LjAAAAEwuysvIQAFWC41MDkAAAKlMIICoTCCAgqgAwIB
AgIBADANBgkqhkiG9w0BAQQFADCBizELMAkGA1UEBhMCWkExFTATBgNVBAgTDFdlc3Rlcm4gQ2Fw
ZTEUMBIGA1UEBxMLRHVyYmFudmlsbGUxDzANBgNVBAoTBlRoYXd0ZTEdMBsGA1UECxMUVGhhd3Rl
IENlcnRpZmljYXRpb24xHzAdBgNVBAMTFlRoYXd0ZSBUaW1lc3RhbXBpbmcgQ0EwHhcNOTcwMTAx
MDAwMDAwWhcNMjAxMjMxMjM1OTU5WjCBizELMAkGA1UEBhMCWkExFTATBgNVBAgTDFdlc3Rlcm4g
Q2FwZTEUMBIGA1UEBxMLRHVyYmFudmlsbGUxDzANBgNVBAoTBlRoYXd0ZTEdMBsGA1UECxMUVGhh
d3RlIENlcnRpZmljYXRpb24xHzAdBgNVBAMTFlRoYXd0ZSBUaW1lc3RhbXBpbmcgQ0EwgZ8wDQYJ
KoZIhvcNAQEBBQADgY0AMIGJAoGBANYrWHhhRYZT6jR7UZztsOYuGA7+4F+oJ9O0yeB8WU4WDnNU
YMF/9p8u6TqFJBU820cEY8OexJQaWt9MevPZQx08EHp5JduQ/vBR5zDWQQD9nyjfeb6Uu522FOMj
hdepQeBMpHmwKxqL8vg7ij5FrHGSALSQQZj7X+36ty6K+Ig3AgMBAAGjEzARMA8GA1UdEwEB/wQF
MAMBAf8wDQYJKoZIhvcNAQEEBQADgYEAZ9viwuaHPUCDhjc1fR/OmsMMZiCouqoEiYbC9RAIDb/L
ogWK0E02PvTX72nGXuSwlG9KuefeW4i2e9vjJ+V2w/A1wcu1J5szedyQpgCed/r8zSeUQhac0xxo
7L9c3eWpexAKMnRUEzGLhQOEkbdYATAUOK8oyvyxUBkZCayJSdMAAAACAC4vZXhwb3J0L2hkYTMv
Ny40LjAvbG9jYWwvY29uZi9jZXJ0cy8zYzU4ZjkwNi4wAAABUYWzcYMABVguNTA5AAAEOjCCBDYw
ggMeoAMCAQICAQEwDQYJKoZIhvcNAQEFBQAwbzELMAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRy
dXN0IEFCMSYwJAYDVQQLEx1BZGRUcnVzdCBFeHRlcm5hbCBUVFAgTmV0d29yazEiMCAGA1UEAxMZ
QWRkVHJ1c3QgRXh0ZXJuYWwgQ0EgUm9vdDAeFw0wMDA1MzAxMDQ4MzhaFw0yMDA1MzAxMDQ4Mzha
MG8xCzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRUcnVzdCBBQjEmMCQGA1UECxMdQWRkVHJ1c3Qg
RXh0ZXJuYWwgVFRQIE5ldHdvcmsxIjAgBgNVBAMTGUFkZFRydXN0IEV4dGVybmFsIENBIFJvb3Qw
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC39xoz5vIABC054E5b7R+8bA/Ntfojts7e
mxEzl6QpTH2Tn71KvJPtAxrjj8/lbVBa1pcplFqAsEl62y6V/bjKvzc4LR4+kUGtcFbH8E8/6DKe
dMrIkFTpxl8PeJ2aQDwOrGGqXhSPnoehalDc15pOrwWzpnGUnHGzUGAKxxOdOAeGAqjpqGkmGJCr
TLBPI6s6T4TY386f4Wlvu9dC12tE5Met7m1BX3JacQg3s3llpFmglDf3AC8NwpJy2tA4ctsUqEXE
XSp9t7TWxO6szRNEt8kr3UMAJfphuWlqWCMRt6czj1Z1WfXNKddGtworZbbTQm8Vsrh7++/pXVPV
NFonAgMBAAGjgdwwgdkwHQYDVR0OBBYEFK29mHo0tCb3+sQmVO8DveAky1QaMAsGA1UdDwQEAwIB
BjAPBgNVHRMBAf8EBTADAQH/MIGZBgNVHSMEgZEwgY6AFK29mHo0tCb3+sQmVO8DveAky1QaoXOk
cTBvMQswCQYDVQQGEwJTRTEUMBIGA1UEChMLQWRkVHJ1c3QgQUIxJjAkBgNVBAsTHUFkZFRydXN0
IEV4dGVybmFsIFRUUCBOZXR3b3JrMSIwIAYDVQQDExlBZGRUcnVzdCBFeHRlcm5hbCBDQSBSb290
ggEBMA0GCSqGSIb3DQEBBQUAA4IBAQCwm+CFJcLWI+IPlgaSnUGYnNmEeYHZHlsUByM2ZY+w2He7
rEFsR2CDUbD5Mj3n/PYmE8eAFqW/WvyHz3h5iSGa4kwHCoY1vPLeUcTSlrfcfk7ucP0cOesMAlEU
LY69FuDB30Z15ySt7PRCtIWTcBBnup0GNUoY0yt6zFFCoXpj0ea7ocUrwja+Ew3mvWN+eXunCQ1A
q2rdj4rD9vaMGkIFUdRF9Z+nYiFoFSBDPJnnfL0k2KmRF3OIP1YbMTgYtHEPms3IDp6OLhvhjJiD
yx8x8URMxgRzSXZgD8f4vReAay7pzEwOWpp5DyAKLtWeYyYeVZKU2IIXWnvQvMePToYEAAAAAgAv
L2V4cG9ydC9oZGEzLzYuMTAuNC9sb2NhbC9jb25mL2NlcnRzL2IwZjNlNzZlLjAAAAEwuysFUwAF
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
JDAiBgNVBAoTG0RpZ2l0YWwgU2lnbmF0dXJlIFRydXN0IENvLjERMA8GA1UECxMIRFNUQ0EgWDIx
FjAUBgNVBAMTDURTVCBSb290Q0EgWDIxITAfBgkqhkiG9w0BCQEWEmNhQGRpZ3NpZ3RydXN0LmNv
bTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANx18IzAdZaawGIfJvfE4Zrq4FZzW5nN
AUSoCLbVp9oaBBg5kkp4o4HC9Xd6ULRw/5qrxsfKboNPQpj7Jgva3G3WqZlVUmfpKAOS3OWwBZoP
FflrWXJW8vo5/Kpo7g8fEIMv/J36F5bdguPmRX3AS4BEH+0s4IT9kVySVGkl5WJp3OXuAFK9Mwut
dQKFp2RQLcUZGTDAJtvJ0/0uma1ZtQtN1EGuhUhDWdy3qOKi3sOP17ihYqZoUFLkzzGnlIXan0Yy
F1bl8utmPRL/Q9uY73fPy4GNNLHGUEom0eQ+QVCvbK4iNC7Va26Dunm4dmVI2gkpZGMiuftHdoWM
hkTLCdsCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAtTYOXeFhKFoRZcA/gwN5Tb4opgsHAlKFzfiR
0BBstWogWxyQ2TA8xkieil5k+aFxd+8EJx8H6+Qm93N0yUQYGmbT4EOvkTvRyyzYdFQ6HE3K1GjN
I3wdEJ5F6fYAbqbNGf9PLCmPV03Ed5K+4EwJ+11EhmYhqLkyolbV6YyDfFk/xPEL553snr2cGA4+
wjl5KLcDDQjLxufZATdQEOzMYRZA1K8xdHv8PzGn0EdzMzkbzE5q10mDEQb+64JYMzJM8FasHpwv
Vpp7wUocpf1VNs78lk30sPDst2yC7S8xmUJMqbINuBVd8d+6ybVK1GSYsyapMMj9puyrliGtf8J4
tgAAAAIALy9leHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy9iY2RkNTk1OS4wAAAB
MLsrCIIABVguNTA5AAAC6zCCAucwggJQAgEBMA0GCSqGSIb3DQEBBQUAMIG7MSQwIgYDVQQHExtW
YWxpQ2VydCBWYWxpZGF0aW9uIE5ldHdvcmsxFzAVBgNVBAoTDlZhbGlDZXJ0LCBJbmMuMTUwMwYD
VQQLEyxWYWxpQ2VydCBDbGFzcyAyIFBvbGljeSBWYWxpZGF0aW9uIEF1dGhvcml0eTEhMB8GA1UE
AxMYaHR0cDovL3d3dy52YWxpY2VydC5jb20vMSAwHgYJKoZIhvcNAQkBFhFpbmZvQHZhbGljZXJ0
LmNvbTAeFw05OTA2MjYwMDE5NTRaFw0xOTA2MjYwMDE5NTRaMIG7MSQwIgYDVQQHExtWYWxpQ2Vy
dCBWYWxpZGF0aW9uIE5ldHdvcmsxFzAVBgNVBAoTDlZhbGlDZXJ0LCBJbmMuMTUwMwYDVQQLEyxW
YWxpQ2VydCBDbGFzcyAyIFBvbGljeSBWYWxpZGF0aW9uIEF1dGhvcml0eTEhMB8GA1UEAxMYaHR0
cDovL3d3dy52YWxpY2VydC5jb20vMSAwHgYJKoZIhvcNAQkBFhFpbmZvQHZhbGljZXJ0LmNvbTCB
nzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAzjpxyuWryFmSVder2HQO+e7Z9lVHWWVHDgVV3OuY
NjxcU13TMM847L1Bie0lQgkkawpes3zdUi1M5tTWfVpZqWXUSRMtJE0cUG+1wYVUO/5x5NNcQvmA
4JEaCls5NmfzP1V8Gz+0X2RzNOO0Er+HZPjaEv83J8GzQ7vve24uafcCAwEAATANBgkqhkiG9w0B
AQUFAAOBgQA7f1Bvb1CUmUliODgfS/ilyD6ngoH2K8foxc7oOhCCyxgAjk29qFh/oXkAtbvpja9B
2Q807iGBGaAySSj0xI5W1VIz/VDVfplsA+TJTPzLbKtms0ohjOW1DDI+ELLMbKHcmphMAlvzzrme
pXIOSrc/POYWaPi+7XRMvFvVYh9D3QAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25m
L2NlcnRzLzVhM2YwZmY4LjAAAAFRhbPnzwAFWC41MDkAAAQhMIIEHTCCAwWgAwIBAgIQToEtioJl
4AsC7j41AkblPTANBgkqhkiG9w0BAQUFADCBgTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0
ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0
ZWQxJzAlBgNVBAMTHkNPTU9ETyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNjEyMDEwMDAw
MDBaFw0yOTEyMzEyMzU5NTlaMIGBMQswCQYDVQQGEwJHQjEbMBkGA1UECBMSR3JlYXRlciBNYW5j
aGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFDT01PRE8gQ0EgTGltaXRlZDEnMCUG
A1UEAxMeQ09NT0RPIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEA0ECLi3LjkRv3UcEbVASY06m/weaKXTuH+7uIzg3jLz8GlvCiKVCZrts7oVew
dFFxze1CkU1B/qnI2GqGd0S7WWaXUF601CxwRM/aN5VCaTwwxHGzUvAhTaHYujl8HJ6jJJ3ygxaY
qhZ8Q5sVW7euNJH+1GImGEaaP+vB+fGQV+useg2L23IwambV4EajcNxo2f8ESIl33rXp+2dtQem8
Ob0y2WIC8bGoPW43nOIv4tOiJovGuFVDiOEjPqXSJDlqR6sA1KGzqSX+DT+nHbrTUcELpNqsOO9V
UCQFZUaTNE8tja3G1CEZ0o7KBWFxB3NH5YoZEr0ETc5OnKVIrLsm9wIDAQABo4GOMIGLMB0GA1Ud
DgQWBBQLWOWLxkwVN6RAqTCpIb5HNlpW/zAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB
/zBJBgNVHR8EQjBAMD6gPKA6hjhodHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9DT01PRE9DZXJ0aWZp
Y2F0aW9uQXV0aG9yaXR5LmNybDANBgkqhkiG9w0BAQUFAAOCAQEAPpiem/Yb6dc5t3iuHXIYSdOH
5EOC6z/JqvWote9VfCFSZfnVDeFs9D6Mk3ORLgLETgdxb8CPOGEIqB6BCsAvIC9Bi5HcSEW88cbe
unZrM8gALTFGTO3nnc+IlP8zwFboJIYmuNg4ON8qa90SzMc/RxdMosIGlgnW2/4/PEZB31jiVg88
O8EckzXZOFKs7sjsLjBOlDW0JB9LeGna8gI4zJVSk/BwJVmcIGfE7vmLV2H0knZ9P4SNVbfo5azV
8fUZVqZa+5Acr5Pr5RzUZ5ddBA6+C4OmF4O5MBKgxTMVBbkN+8cFduPYSo38NBejxiEovjBFMR7H
eL5YYTisO+IBZQAAAAIALi9leHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzL2E2Nzc2
YzY5LjAAAAFK5xiJigAFWC41MDkAAAf7MIIH9zCCB2CgAwIBAgIBADANBgkqhkiG9w0BAQUFADCC
ARwxCzAJBgNVBAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJhcmNlbG9uYTEu
MCwGA1UEChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjErMCkGA1UEChQi
aXBzQG1haWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEzMDEGA1UECxMqSVBTIENBIENoYWlu
ZWQgQ0FzIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MTMwMQYDVQQDEypJUFMgQ0EgQ2hhaW5lZCBD
QXMgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxHjAcBgkqhkiG9w0BCQEWD2lwc0BtYWlsLmlwcy5l
czAeFw0wMTEyMjkwMDUzNThaFw0yNTEyMjcwMDUzNThaMIIBHDELMAkGA1UEBhMCRVMxEjAQBgNV
BAgTCUJhcmNlbG9uYTESMBAGA1UEBxMJQmFyY2Vsb25hMS4wLAYDVQQKEyVJUFMgSW50ZXJuZXQg
cHVibGlzaGluZyBTZXJ2aWNlcyBzLmwuMSswKQYDVQQKFCJpcHNAbWFpbC5pcHMuZXMgQy5JLkYu
ICBCLTYwOTI5NDUyMTMwMQYDVQQLEypJUFMgQ0EgQ2hhaW5lZCBDQXMgQ2VydGlmaWNhdGlvbiBB
dXRob3JpdHkxMzAxBgNVBAMTKklQUyBDQSBDaGFpbmVkIENBcyBDZXJ0aWZpY2F0aW9uIEF1dGhv
cml0eTEeMBwGCSqGSIb3DQEJARYPaXBzQG1haWwuaXBzLmVzMIGfMA0GCSqGSIb3DQEBAQUAA4GN
ADCBiQKBgQDcVpJJspQgvJhPUOtopKdJC7/SMejHT8KGC/po/UNaivNgkjWZOLtNA1IhW/A3mTXh
QSCBhYEFcYGdtJUZqV92NC5jNzVXjrQfQj8VXOF6wV8TGDIxya2+o8eDZh65nAQTy2nBBt4wBrsz
o7Uf8I9vzv+W6FS+ZoCua9tBhDaiPQIDAQABo4IEQzCCBD8wHQYDVR0OBBYEFKGtMbH5PuEXpsir
NPxShwkeYlJBMIIBTgYDVR0jBIIBRTCCAUGAFKGtMbH5PuEXpsirNPxShwkeYlJBoYIBJKSCASAw
ggEcMQswCQYDVQQGEwJFUzESMBAGA1UECBMJQmFyY2Vsb25hMRIwEAYDVQQHEwlCYXJjZWxvbmEx
LjAsBgNVBAoTJUlQUyBJbnRlcm5ldCBwdWJsaXNoaW5nIFNlcnZpY2VzIHMubC4xKzApBgNVBAoU
Imlwc0BtYWlsLmlwcy5lcyBDLkkuRi4gIEItNjA5Mjk0NTIxMzAxBgNVBAsTKklQUyBDQSBDaGFp
bmVkIENBcyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEzMDEGA1UEAxMqSVBTIENBIENoYWluZWQg
Q0FzIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMu
ZXOCAQAwDAYDVR0TBAUwAwEB/zAMBgNVHQ8EBQMDB/+AMGsGA1UdJQRkMGIGCCsGAQUFBwMBBggr
BgEFBQcDAgYIKwYBBQUHAwMGCCsGAQUFBwMEBggrBgEFBQcDCAYKKwYBBAGCNwIBFQYKKwYBBAGC
NwIBFgYKKwYBBAGCNwoDAQYKKwYBBAGCNwoDBDARBglghkgBhvhCAQEEBAMCAAcwGgYDVR0RBBMw
EYEPaXBzQG1haWwuaXBzLmVzMBoGA1UdEgQTMBGBD2lwc0BtYWlsLmlwcy5lczBCBglghkgBhvhC
AQ0ENRYzQ2hhaW5lZCBDQSBDZXJ0aWZpY2F0ZSBpc3N1ZWQgYnkgaHR0cDovL3d3dy5pcHMuZXMv
MCkGCWCGSAGG+EIBAgQcFhpodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyLzA3BglghkgBhvhCAQQE
KhYoaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9pcHMyMDAyQ0FDLmNybDA8BglghkgBhvhCAQME
LxYtaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9yZXZvY2F0aW9uQ0FDLmh0bWw/MDkGCWCGSAGG
+EIBBwQsFipodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL3JlbmV3YWxDQUMuaHRtbD8wNwYJYIZI
AYb4QgEIBCoWKGh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcG9saWN5Q0FDLmh0bWwwbQYDVR0f
BGYwZDAuoCygKoYoaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9pcHMyMDAyQ0FDLmNybDAyoDCg
LoYsaHR0cDovL3d3d2JhY2suaXBzLmVzL2lwczIwMDIvaXBzMjAwMkNBQy5jcmwwLwYIKwYBBQUH
AQEEIzAhMB8GCCsGAQUFBzABhhNodHRwOi8vb2NzcC5pcHMuZXMvMA0GCSqGSIb3DQEBBQUAA4GB
AERyMJ1WWKJBGyi3leGmGpVfp3hAK+/blkr8THFj2XOVvQLiogbHvpcqk4A0hgP63Ng9HgfNHnND
JGD1HWHc3JagvPsd4+cSACczAsDAK1M92GsDgaPb1pOVIO/Tln4mkImcJpvNb2ar7QMiRDjMWb2f
2/YHogF/JsRj9SVCXmK9AAAAAgAvL2V4cG9ydC9oZGEzLzYuMTAuNC9sb2NhbC9jb25mL2NlcnRz
LzQ3OTk2YjVjLjAAAAEwuys5YAAFWC41MDkAAAZVMIIGUTCCBTmgAwIBAgIEPLVPQDANBgkqhkiG
9w0BAQUFADBmMRIwEAYDVQQKEwliZVRSVVNUZWQxGzAZBgNVBAsTEmJlVFJVU1RlZCBSb290IENB
czEzMDEGA1UEAxMqYmVUUlVTVGVkIFJvb3QgQ0EgLSBFbnRydXN0IEltcGxlbWVudGF0aW9uMB4X
DTAyMDQxMTA4MjQyN1oXDTIyMDQxMTA4NTQyN1owZjESMBAGA1UEChMJYmVUUlVTVGVkMRswGQYD
VQQLExJiZVRSVVNUZWQgUm9vdCBDQXMxMzAxBgNVBAMTKmJlVFJVU1RlZCBSb290IENBIC0gRW50
cnVzdCBJbXBsZW1lbnRhdGlvbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALr0RAOq
Emq1Q+xVkrYwfTVXDNvzDSduTPdQqJtOK2/b9a0cS12zqcH+e0TrW6MFDR/FNCswACnxeECypP86
9AGIF37m1CbTukzqMvtDd5eHI8XbQ6P1KqNRXuE70mVpflUVm3rnafdE4Fe1FehmYA8NA/uCjqPo
EXtsvsdjDheT389Lrm5zdeDzqrmkwAkbhepxKYhBMvnwKg5sCfJ0a2ZsUhMfGLzUPvfYbiCeyv78
IZTuEyhL11xeDGbu6bsPwTSxfwh28z0mcMmLJR1iJAzqHHVOwBLkuhMdMCktVjMFu5dZfsZJT4nX
LySotohAtWSSU1Yk5KKghbNekLQSM80CAwEAAaOCAwUwggMBMIIBtwYDVR0gBIIBrjCCAaowggGm
Bg8rBgEEAbE+AAACCSiDkTEwggGRMIIBSQYIKwYBBQUHAgIwggE7GoIBN1JlbGlhbmNlIG9uIG9y
IHVzZSBvZiB0aGlzIENlcnRpZmljYXRlIGNyZWF0ZXMgYW4gYWNrbm93bGVkZ21lbnQgYW5kIGFj
Y2VwdGFuY2Ugb2YgdGhlIHRoZW4gYXBwbGljYWJsZSBzdGFuZGFyZCB0ZXJtcyBhbmQgY29uZGl0
aW9ucyBvZiB1c2UsIHRoZSBDZXJ0aWZpY2F0aW9uIFByYWN0aWNlIFN0YXRlbWVudCBhbmQgdGhl
IFJlbHlpbmcgUGFydHkgQWdyZWVtZW50LCB3aGljaCBjYW4gYmUgZm91bmQgYXQgdGhlIGJlVFJV
U1RlZCB3ZWIgc2l0ZSwgaHR0cHM6Ly93d3cuYmV0cnVzdGVkLmNvbS9wcm9kdWN0c19zZXJ2aWNl
cy9pbmRleC5odG1sMEIGCCsGAQUFBwIBFjZodHRwczovL3d3dy5iZXRydXN0ZWQuY29tL3Byb2R1
Y3RzX3NlcnZpY2VzL2luZGV4Lmh0bWwwEQYJYIZIAYb4QgEBBAQDAgAHMIGJBgNVHR8EgYEwfzB9
oHugeaR3MHUxEjAQBgNVBAoTCWJlVFJVU1RlZDEbMBkGA1UECxMSYmVUUlVTVGVkIFJvb3QgQ0Fz
MTMwMQYDVQQDEypiZVRSVVNUZWQgUm9vdCBDQSAtIEVudHJ1c3QgSW1wbGVtZW50YXRpb24xDTAL
BgNVBAMTBENSTDEwKwYDVR0QBCQwIoAPMjAwMjA0MTEwODI0MjdagQ8yMDIyMDQxMTA4NTQyN1ow
CwYDVR0PBAQDAgEGMB8GA1UdIwQYMBaAFH1w5a44iwY/qhwaj/nPJDCqhIQWMB0GA1UdDgQWBBR9
cOWuOIsGP6ocGo/5zyQwqoSEFjAMBgNVHRMEBTADAQH/MB0GCSqGSIb2fQdBAAQQMA4bCFY2LjA6
NC4wAwIEkDANBgkqhkiG9w0BAQUFAAOCAQEAKrgXzh8QlOu4mre5X+za95IkrNySO8cgjfKZ5V04
ocI07cUTWVwFtStPYZuR+0H8/NU8TZh2BvWBfevdkObRVlTa4y0MnxEylCIBevZsLHRnBMylj44s
s0O1lKLQfelifwa+JwGDnjr9iu6YQ0pr17WXOzq/T220Y/ozADQuLW2WyXvKmWO6vvT2MKAtmJbp
VkQFqUSjYRDrgqFnXbxdJ3Wqiig2KjiS2d2kXgClzMx8KSreKJCrt+G2/30lC0DYqjSjLd4H61/O
Ct3Kfjp9JsFiaDrmLzfzgYYhxKlkqu9FNtEaZnz46TfW1mG+oq1I59/mdP7TbX3SJdysYlep9wAA
AAIALi9leHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzL2ExNWIzYjZiLjAAAAFK5xgF
rAAFWC41MDkAAAMtMIIDKTCCApKgAwIBAgIENm7TzjANBgkqhkiG9w0BAQUFADBGMQswCQYDVQQG
EwJVUzEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QgQ28uMREwDwYDVQQLEwhEU1RD
QSBFMjAeFw05ODEyMDkxOTE3MjZaFw0xODEyMDkxOTQ3MjZaMEYxCzAJBgNVBAYTAlVTMSQwIgYD
VQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xETAPBgNVBAsTCERTVENBIEUyMIGdMA0G
CSqGSIb3DQEBAQUAA4GLADCBhwKBgQC/k48Xku8zExjrEH9OFr//Bo8qhbxe+SSmJIi2A7fBw18D
W9Fvrn5C6mYjuGODVvsoLeE4i7TuqAHhzhy2iCoiRoX7n6dwqUcUP87eZfCocfdPJmyMvMa1795J
J/9IKn3oTQPMx7JSxhcxEzu1TdvIxPbDDyQq2gyd55FbgM2UnQIBA6OCASQwggEgMBEGCWCGSAGG
+EIBAQQEAwIABzBoBgNVHR8EYTBfMF2gW6BZpFcwVTELMAkGA1UEBhMCVVMxJDAiBgNVBAoTG0Rp
Z2l0YWwgU2lnbmF0dXJlIFRydXN0IENvLjERMA8GA1UECxMIRFNUQ0EgRTIxDTALBgNVBAMTBENS
TDEwKwYDVR0QBCQwIoAPMTk5ODEyMDkxOTE3MjZagQ8yMDE4MTIwOTE5MTcyNlowCwYDVR0PBAQD
AgEGMB8GA1UdIwQYMBaAFB6CTShlgDzJQW6sNS5ay97u+DlbMB0GA1UdDgQWBBQegk0oZYA8yUFu
rDUuWsve7vg5WzAMBgNVHRMEBTADAQH/MBkGCSqGSIb2fQdBAAQMMAobBFY0LjADAgSQMA0GCSqG
SIb3DQEBBQUAA4GBAEeNg61i8tuwnkUiBbmi1gMOOHLnnvx75pO2mqWilMg0HZHRxdf0CiUPPXiB
ng+xZ8SQTGPdXqfiup/1902lMXucKS1M/mQ+7LZT/uqb7YLbdHVLB3luHtgZg3Pe9T7Qtd7nS2h9
Qy4qIOF+oHhEngj1mPnHfxsb1gYgAlihw6IDAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2Fs
L2NvbmYvY2VydHMvMTI0YmJkNTQuMAAAAUrnGIeNAAVYLjUwOQAABEcwggRDMIIDK6ADAgECAgEB
MA0GCSqGSIb3DQEBBQUAMH8xCzAJBgNVBAYTAkdCMRswGQYDVQQIDBJHcmVhdGVyIE1hbmNoZXN0
ZXIxEDAOBgNVBAcMB1NhbGZvcmQxGjAYBgNVBAoMEUNvbW9kbyBDQSBMaW1pdGVkMSUwIwYDVQQD
DBxUcnVzdGVkIENlcnRpZmljYXRlIFNlcnZpY2VzMB4XDTA0MDEwMTAwMDAwMFoXDTI4MTIzMTIz
NTk1OVowfzELMAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UE
BwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxJTAjBgNVBAMMHFRydXN0ZWQg
Q2VydGlmaWNhdGUgU2VydmljZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDfcW82
WFNa8jZUV4DEdAgg7Rh/Kh3mNZoeJayc5ZZ+clKgFULbWd1kehrQuHvdORW8VUjE7ToA6jERuvJx
dBpnuM8zzKgxr6Pj13+/My1Majzsi8OS0lN3JHScB25w/L0LW3a6X/L/1zdLSmB49/D6ynC06lmq
o85IL6nDsgt+F3IWDKYHDBs4z8litz+gk6WHQfK3cEB32L4UfOOowHqO6WNq0Q+axtL0izoUBFbU
7bjMbvX74ixYvX9Payv3YCRYJM4m7zSROtXjgdCy8AQC11u3PpKsaxKK+eQFsDuRSVyy61Pq+J9H
hu6/lcDABp/SW14RG/THBDUp0lVc5O3rAgMBAAGjgckwgcYwHQYDVR0OBBYEFMV7WL3t2iVp0vdZ
FqizMsB7J1v0MA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MIGDBgNVHR8EfDB6MDyg
OqA4hjZodHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9UcnVzdGVkQ2VydGlmaWNhdGVTZXJ2aWNlcy5j
cmwwOqA4oDaGNGh0dHA6Ly9jcmwuY29tb2RvLm5ldC9UcnVzdGVkQ2VydGlmaWNhdGVTZXJ2aWNl
cy5jcmwwDQYJKoZIhvcNAQEFBQADggEBAMiTgTuJtK+4hBJMjdLw23C6V4YVNBC5L38esKiJYKGK
wncMUEqbAIvYi/RB4tCDikocFAawo2gFcDEwp1ObDulKoFhpZw6unfalLEG/PAZr5FnMbRDxlm8f
3/QEAqSfRT7I2Po2RkRQP4KXkR8o2xgRjCrkZYNXEhKMFz+UNv5dsMAEdxO49BXVPzjMlDpV0KyY
9boAX+CGGYF4LyjAftPMQgr1rlCg0T7GoXHsP6AgjGY6ibSO1NixTSVH7i+IyLXhBUXAvhRx3nr9
jnt9TQiWpRJz8C3KNyd0EidMy7aX6dmuCG1aOUDdBUd1alohs6MYz073Lle3mHBeyMR4sGIAAAAC
AC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy9jZGFlYmI3Mi4wAAABUYWzo18A
BVguNTA5AAADvjCCA7owggKioAMCAQICBACYloowDQYJKoZIhvcNAQEFBQAwVTELMAkGA1UEBhMC
TkwxHjAcBgNVBAoTFVN0YWF0IGRlciBOZWRlcmxhbmRlbjEmMCQGA1UEAxMdU3RhYXQgZGVyIE5l
ZGVybGFuZGVuIFJvb3QgQ0EwHhcNMDIxMjE3MDkyMzQ5WhcNMTUxMjE2MDkxNTM4WjBVMQswCQYD
VQQGEwJOTDEeMBwGA1UEChMVU3RhYXQgZGVyIE5lZGVybGFuZGVuMSYwJAYDVQQDEx1TdGFhdCBk
ZXIgTmVkZXJsYW5kZW4gUm9vdCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJjS
tVEReoGmFJhxbb7M5xMb1icOerNqGBy2YVrVYQm/3pATx2fu3fPaxQwSnjVVPiwniEBr99zdImH1
wscO9fbVdlNNj4y8GHY3hZ3oyknH0k+YEwmiPiKInH/W8hBltO5fGNUX4/jF/eKdou9TDoV3og/h
MEfuAOczfURnGgtR6IugnlCYaDRSHy5tAfJgRfIx66kxaCm7ekGexhl/lLRROQN/st6nMpu0R45v
tEqu5a+x3LAbYbyZct7kibd6Jl3aM0lbUpwO9Yqtw7g96AZqwtUqC2x7hL1WBcuGZZLsRCuwjrnc
cAtG2q28Y4g5+ttq/iP6vORI9GcrahEQIUkCAwEAAaOBkTCBjjAMBgNVHRMEBTADAQH/ME8GA1Ud
IARIMEYwRAYEVR0gADA8MDoGCCsGAQUFBwIBFi5odHRwOi8vd3d3LnBraW92ZXJoZWlkLm5sL3Bv
bGljaWVzL3Jvb3QtcG9saWN5MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUqH3rvGOkdBN0AOyW
4NM0wSy/bPgwDQYJKoZIhvcNAQEFBQADggEBAAWEh1V0NmHBu9HUxhWoE7SfpP677hW0LwYMKfKo
kqRhDfyrXAhbURMrTcIqYcj4CVj8LQKyOX2ZZoG/blyVRSBs5nmn0dgcKfzCICdRyPF8XTRnaYUR
MMYA0tfz03y28DFXKBKCc+kzL6ZVtAuRlEec+rt6QjLorn4tyLysFL/ZD9lb/MH5epXhfX6W/HGw
wkzI30U0yc4N8pxkCNA7wynFsu2QBMGxKZHFMG/BqXIzzP5dFhcsEWnnfv7FgwjfvNwiOi4gaSM5
VmBnkIsudjn7EYiX9ny9S7ggFmcFjeI7wXI/lJU3x125ntiToReP/wxmFcEkfDJ8Ax07oVhFMpMA
AAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy8wYzM2NGIyZC4wAAABUYW1
JMAABVguNTA5AAAE8TCCBO0wggRWoAMCAQICBDgDke4wDQYJKoZIhvcNAQEEBQAwgckxCzAJBgNV
BAYTAlVTMRQwEgYDVQQKEwtFbnRydXN0Lm5ldDFIMEYGA1UECxQ/d3d3LmVudHJ1c3QubmV0L0Ns
aWVudF9DQV9JbmZvL0NQUyBpbmNvcnAuIGJ5IHJlZi4gbGltaXRzIGxpYWIuMSUwIwYDVQQLExwo
YykgMTk5OSBFbnRydXN0Lm5ldCBMaW1pdGVkMTMwMQYDVQQDEypFbnRydXN0Lm5ldCBDbGllbnQg
Q2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNOTkxMDEyMTkyNDMwWhcNMTkxMDEyMTk1NDMwWjCB
yTELMAkGA1UEBhMCVVMxFDASBgNVBAoTC0VudHJ1c3QubmV0MUgwRgYDVQQLFD93d3cuZW50cnVz
dC5uZXQvQ2xpZW50X0NBX0luZm8vQ1BTIGluY29ycC4gYnkgcmVmLiBsaW1pdHMgbGlhYi4xJTAj
BgNVBAsTHChjKSAxOTk5IEVudHJ1c3QubmV0IExpbWl0ZWQxMzAxBgNVBAMTKkVudHJ1c3QubmV0
IENsaWVudCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCBnTANBgkqhkiG9w0BAQEFAAOBiwAwgYcC
gYEAyDqZXjEX36wnb5B75Bn/RaM0wtvBqE/waOqE/Z91ec/BilGUr8dXA0dknq2CG1rafzd4R7s3
mBKWzsYTfe/SDDBRqTmeVfj7secw3oOyuj7x1Yk7O4W6qnQs/j8xbq+RlW4G1AdNSyxWRxgEUtoO
EJO/Y5Cb4d+M5gKk5k9e94sCAQOjggHgMIIB3DARBglghkgBhvhCAQEEBAMCAAcwggEiBgNVHR8E
ggEZMIIBFTCB5KCB4aCB3qSB2zCB2DELMAkGA1UEBhMCVVMxFDASBgNVBAoTC0VudHJ1c3QubmV0
MUgwRgYDVQQLFD93d3cuZW50cnVzdC5uZXQvQ2xpZW50X0NBX0luZm8vQ1BTIGluY29ycC4gYnkg
cmVmLiBsaW1pdHMgbGlhYi4xJTAjBgNVBAsTHChjKSAxOTk5IEVudHJ1c3QubmV0IExpbWl0ZWQx
MzAxBgNVBAMTKkVudHJ1c3QubmV0IENsaWVudCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTENMAsG
A1UEAxMEQ1JMMTAsoCqgKIYmaHR0cDovL3d3dy5lbnRydXN0Lm5ldC9DUkwvQ2xpZW50MS5jcmww
KwYDVR0QBCQwIoAPMTk5OTEwMTIxOTI0MzBagQ8yMDE5MTAxMjE5MjQzMFowCwYDVR0PBAQDAgEG
MB8GA1UdIwQYMBaAFMT7nCl7l81MlvzuW7PKmXSLlepMMB0GA1UdDgQWBBTE+5wpe5fNTJb87luz
ypl0i5XqTDAMBgNVHRMEBTADAQH/MBkGCSqGSIb2fQdBAAQMMAobBFY0LjADAgSQMA0GCSqGSIb3
DQEBBAUAA4GBAD+uivHXZgMFnj766hxGu6Rbj3iaEkiZ+fQ13gw2BwJrEDqJFIGcMaZ8skGyaucH
AaFL+Z8lO5bKmcM+oVEc88MuRPewZ0aqkuU72hwZFDgw1eKiMSUu8exFOO34BlgDc2KwEDGPQL9k
4Fw+xU8f2hJD/0zmBiaomxmqRDx2slzsAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2Nv
bmYvY2VydHMvNWY0N2I0OTUuMAAAAVGFtLAeAAVYLjUwOQAABb8wggW7MIIDo6ADAgECAghXChGX
QsTjzDANBgkqhkiG9w0BAQsFADBrMQswCQYDVQQGEwJJVDEOMAwGA1UEBwwFTWlsYW4xIzAhBgNV
BAoMGkFjdGFsaXMgUy5wLkEuLzAzMzU4NTIwOTY3MScwJQYDVQQDDB5BY3RhbGlzIEF1dGhlbnRp
Y2F0aW9uIFJvb3QgQ0EwHhcNMTEwOTIyMTEyMjAyWhcNMzAwOTIyMTEyMjAyWjBrMQswCQYDVQQG
EwJJVDEOMAwGA1UEBwwFTWlsYW4xIzAhBgNVBAoMGkFjdGFsaXMgUy5wLkEuLzAzMzU4NTIwOTY3
MScwJQYDVQQDDB5BY3RhbGlzIEF1dGhlbnRpY2F0aW9uIFJvb3QgQ0EwggIiMA0GCSqGSIb3DQEB
AQUAA4ICDwAwggIKAoICAQCnxsSlKaQs7+UYxbBQo29RO58KWsnCSDgKwhygGH+RtYe5QD/dHWgf
CIPVLR6IoPiPVo9tmQKSkBbVXwhsidfhrLwgwrHgg1GKaU0AllpvL8BEfqMO5JHNWO7c+8ceRUfd
J7kIAZ+mIR31QS0vTP0oreCKrSK0VmWOhlSPk0Mp3jlGeKMwI7rN8H0TV8Bd0oNrSEzEq5+AWls6
vcmnIj+AJzNbDreKDF0HNwjLbNJ6RyJENcXMzC6O3Srtt31mDV9hUSJVG+NG4+M90DVimtuvFMhb
ocyJG+EwJvygmx+Bp0cfBOujOZIGn5nTv9PqT1CcGf6Whx48ZfajGCSDhhDnVD6oOnYkT4EhxeMP
AviTlEcgu/7UDtNoud3EeoSC41NUed3bnNLyB5sutrw+7YVt7yUR8pcaQmH3Spfoi7EQB/plgbKi
Oc/3PP8Y+8bxWotZ4gKse5LQThRPWUX2DF4oX7DoP0XPz6+bb/uE03dalW+slISe7rzASo9Kk/hE
IeIxRWFQThDY4zV8TBm03gW/owafyLXN5B/XFwYNepV0VQ1oGvwQG2JknW3glaDDlAdXDRTmvQX7
uJ/m34vixud+lvZTxYA0UChY8BJQcRcwuuZ4Y7z0sq2bK7L+4TmMXroLIJTee4O4/+NWjbcR6TuM
8rHBXZ2kC0wr2bIY9bWfSwIDAQABo2MwYTAdBgNVHQ4EFgQUUtiIOsifeGbtifN7OHCUyQICNtAw
DwYDVR0TAQH/BAUwAwEB/zAfBgNVHSMEGDAWgBRS2Ig6yJ94Zu2J83s4cJTJAgI20DAOBgNVHQ8B
Af8EBAMCAQYwDQYJKoZIhvcNAQELBQADggIBAAt7cofAYKZJTIhY5h2I9xRkSKbYWAoOTxM13zUd
1O0GMciBPmrV3TsaMu6QPRHSLvSOw2MuI2awZ75vtsATOWCqojQlk3VS3qedrQ6HiVJxahY8GR2D
+JopZb70P5rZ8PNahyFxgE3L4DibP7v64DBNz4bTZRAZGNGXArErckJorKC9TlraGL9rmIHQ/Zq+
XhVIzREVucApXLToiPc+Nq63Yv0eYt5weBAcSFvavKQ4umftVT5eV9/UA0BMgaTST2OnCUIJFPwA
qcKAc08uwEDZEXtI6noCwNPrKAEmWHTBwHMibZOV/Tl9uyrj9oLjLJdfTh+RlPr+LKPYdhq4TbI4
T5v6HUhgeSbi8/2p0JrocI9JetblvQoO2y3zjb/r46R9y8eVcejao3zFwvh0kgQbhqykIlNAtqz+
THbP+5QywDWfdj9u5ZBuoKYmorgsvtErhf2naMi6ASuxbHQduHOV5+63xyXwAEwAsn62C4sc88BQ
niW54AjeNmb/N6XRu1RkLMkntUuSfmX/0y3huU68f6RBIZBBd6Y5H+qe45/QZm8F7Kp2fr9rFqDr
tcf8klQvKxEnJTd4TFFqsPPMWF0U8WpIFf/CB7axjQ+OXFBGsz2/AZhPsllURz40e3htVpMuc+pm
KHjNHRS/oI8vLrgujvIUiszptXz7bJ0MpeGWAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2Fs
L2NvbmYvY2VydHMvNWE1MzcyZmMuMAAAAUrnGMNIAAVYLjUwOQAABU8wggVLMIIEtKADAgECAgFp
MA0GCSqGSIb3DQEBBAUAMIGZMQswCQYDVQQGEwJIVTERMA8GA1UEBxMIQnVkYXBlc3QxJzAlBgNV
BAoTHk5ldExvY2sgSGFsb3phdGJpenRvbnNhZ2kgS2Z0LjEaMBgGA1UECxMRVGFudXNpdHZhbnlr
aWFkb2sxMjAwBgNVBAMTKU5ldExvY2sgVXpsZXRpIChDbGFzcyBCKSBUYW51c2l0dmFueWtpYWRv
MB4XDTk5MDIyNTE0MTAyMloXDTE5MDIyMDE0MTAyMlowgZkxCzAJBgNVBAYTAkhVMREwDwYDVQQH
EwhCdWRhcGVzdDEnMCUGA1UEChMeTmV0TG9jayBIYWxvemF0Yml6dG9uc2FnaSBLZnQuMRowGAYD
VQQLExFUYW51c2l0dmFueWtpYWRvazEyMDAGA1UEAxMpTmV0TG9jayBVemxldGkgKENsYXNzIEIp
IFRhbnVzaXR2YW55a2lhZG8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBALHqBOwgoCPCjzhg
z8dGs9Ub/vu5mZ4E3Bx/jEqBmO6k1MqKF7kif4MKdUybwGnYZDmj7ZKj/VtcdBrAR8o6aXaauuJE
F/xMo9X+uJeIr4gDiR+k8gQ+yAcL5vmzL3piFAlGFMpk9YuAtWKo2GvWcZMts78JVFjtBuuoe9xD
saFpAgMBAAGjggKfMIICmzASBgNVHRMBAf8ECDAGAQH/AgEEMA4GA1UdDwEB/wQEAwIABjARBglg
hkgBhvhCAQEEBAMCAAcwggJgBglghkgBhvhCAQ0EggJRFoICTUZJR1lFTEVNISBFemVuIHRhbnVz
aXR2YW55IGEgTmV0TG9jayBLZnQuIEFsdGFsYW5vcyBTem9sZ2FsdGF0YXNpIEZlbHRldGVsZWli
ZW4gbGVpcnQgZWxqYXJhc29rIGFsYXBqYW4ga2VzenVsdC4gQSBoaXRlbGVzaXRlcyBmb2x5YW1h
dGF0IGEgTmV0TG9jayBLZnQuIHRlcm1la2ZlbGVsb3NzZWctYml6dG9zaXRhc2EgdmVkaS4gQSBk
aWdpdGFsaXMgYWxhaXJhcyBlbGZvZ2FkYXNhbmFrIGZlbHRldGVsZSBheiBlbG9pcnQgZWxsZW5v
cnplc2kgZWxqYXJhcyBtZWd0ZXRlbGUuIEF6IGVsamFyYXMgbGVpcmFzYSBtZWd0YWxhbGhhdG8g
YSBOZXRMb2NrIEtmdC4gSW50ZXJuZXQgaG9ubGFwamFuIGEgaHR0cHM6Ly93d3cubmV0bG9jay5u
ZXQvZG9jcyBjaW1lbiB2YWd5IGtlcmhldG8gYXogZWxsZW5vcnplc0BuZXRsb2NrLm5ldCBlLW1h
aWwgY2ltZW4uIElNUE9SVEFOVCEgVGhlIGlzc3VhbmNlIGFuZCB0aGUgdXNlIG9mIHRoaXMgY2Vy
dGlmaWNhdGUgaXMgc3ViamVjdCB0byB0aGUgTmV0TG9jayBDUFMgYXZhaWxhYmxlIGF0IGh0dHBz
Oi8vd3d3Lm5ldGxvY2submV0L2RvY3Mgb3IgYnkgZS1tYWlsIGF0IGNwc0BuZXRsb2NrLm5ldC4w
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
eSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wMDA4MDQwMDAwMDBaFw0wNDA4MDMyMzU5NTla
MIGnMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0
d29yazE7MDkGA1UECxMyVGVybXMgb2YgdXNlIGF0IGh0dHBzOi8vd3d3LnZlcmlzaWduLmNvbS9S
UEEgKGMpMDAxLjAsBgNVBAMTJUNsYXNzIDMgUHVibGljIFByaW1hcnkgT0NTUCBSZXNwb25kZXIw
gZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAPHkCA6Du3XjSOW426bwuavpPGLHXjVb0AJUEdjJ
0Va5dku5q3rmzbr2DATWftawCmWsTjnj8fctoyU577CLz77bDF1ucPQHzXD3OsA+NRbteIxDz8Im
LkfWhn2c8b7WZwwiJaTKZeYfengoLz8F2wQhv+FFZv48t4LtWrgWFblVAgMBAAGjggEUMIIBEDAg
BgNVHREEGTAXpBUwEzERMA8GA1UEAxMIT0NTUCAxLTMwNQYDVR0fBC4wLDAqoCigJoYkaHR0cDov
L2NybC52ZXJpc2lnbi5jb20vcGNhMy4xLjEuY3JsMBMGA1UdJQQMMAoGCCsGAQUFBwMJMEIGCCsG
AQUFBwEBBDYwNDAyBggrBgEFBQcwAaYmFiRodHRwOi8vb2NzcC52ZXJpc2lnbi5jb20vb2NzcC9z
dGF0dXMwRAYDVR0gBD0wOzA5BgtghkgBhvhFAQcBATAqMCgGCCsGAQUFBwIBFhxodHRwczovL3d3
dy52ZXJpc2lnbi5jb20vUlBBMAkGA1UdEwQCMAAwCwYDVR0PBAQDAgeAMA0GCSqGSIb3DQEBBQUA
A4GBAAL2U2PAqR7y0IszMI9Im0ywVrSDcUq+3FDY9bbgC9u9eE/pzwk02ilJnQFzWpGRglQsEwrT
dyPPN/xj3qfj9re1aUUoScOR3KpHHKmImSwFKo2Nivpi4lq3ACBdOcQowsv8nqiJrls9jhLqMrL8
6xTXCRUawM0b1bUVTkHVluNOAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2Vy
dHMvMmFmYzU3YWEuMAAAAVGFtAa1AAVYLjUwOQAABK4wggSqMIIDkqADAgECAg4uagABAAIf11Ih
LBFcOzANBgkqhkiG9w0BAQUFADB2MQswCQYDVQQGEwJERTEcMBoGA1UEChMTVEMgVHJ1c3RDZW50
ZXIgR21iSDEiMCAGA1UECxMZVEMgVHJ1c3RDZW50ZXIgQ2xhc3MgMiBDQTElMCMGA1UEAxMcVEMg
VHJ1c3RDZW50ZXIgQ2xhc3MgMiBDQSBJSTAeFw0wNjAxMTIxNDM4NDNaFw0yNTEyMzEyMjU5NTla
MHYxCzAJBgNVBAYTAkRFMRwwGgYDVQQKExNUQyBUcnVzdENlbnRlciBHbWJIMSIwIAYDVQQLExlU
QyBUcnVzdENlbnRlciBDbGFzcyAyIENBMSUwIwYDVQQDExxUQyBUcnVzdENlbnRlciBDbGFzcyAy
IENBIElJMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAq4CHm47ww3yH1+gkghGzPN1D
Yu74w0Xa6OGgX9EqsuqTaN+0yNZD6cR1WX/84R34MXAjG4ieJ7l7/TrSyanpFC+QvgNSwUnN9v3k
CGYLV4qiQqC41X9pXJAyspcNykrcRj4CVYlT4xpayzbGB1b3jM8R9Ey7MHAElaX2OYz9c4EIfYle
Mh4iqSJFS7BmLjDMn2X9/MuBqfHgO6+jhtGJ6sRFeVBdrukhdJJNi1mCj5Tj6Urx50mwFOP1YsvV
cr0fudKfoM2o+gHI2Q3f2vxHnbPIVN9JSvEhqf4YTu5I1Bm7733k4p3LW7Zu/+PNWud0ggW6gCU4
y+Rpnq9BqhqE9QIDAQABo4IBNDCCATAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYw
HQYDVR0OBBYEFOOrVEyAodtWQ7eRSsvzgnoTXAirMIHtBgNVHR8EgeUwgeIwgd+ggdyggdmGNWh0
dHA6Ly93d3cudHJ1c3RjZW50ZXIuZGUvY3JsL3YyL3RjX2NsYXNzXzJfY2FfSUkuY3JshoGfbGRh
cDovL3d3dy50cnVzdGNlbnRlci5kZS9DTj1UQyUyMFRydXN0Q2VudGVyJTIwQ2xhc3MlMjAyJTIw
Q0ElMjBJSSxPPVRDJTIwVHJ1c3RDZW50ZXIlMjBHbWJILE9VPXJvb3RjZXJ0cyxEQz10cnVzdGNl
bnRlcixEQz1kZT9jZXJ0aWZpY2F0ZVJldm9jYXRpb25MaXN0P2Jhc2U/MA0GCSqGSIb3DQEBBQUA
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
BgNVHSMEGDAWgBQHw1EwpKrpRa41JPr/JCwz0LGdjDAdBgNVHQ4EFgQUB8NRMKSq6UWuNST6/yQs
M9CxnYwwDQYJKoZIhvcNAQEFBQADggEBAF8+hnZuuDU8TjYcHnmYv/3VEhF5Ug7uMYm83X/50cYV
IeiKAVQNOvtUudZj1LGqlk2iQk3UUx+LEN5/Zb5gEydxiKRz44Rj0aRV4VCT5hsOedBnvEbIvz8X
DZXmxpBp3ue0L96VfdASPz0+f00/FGj1EVDVwfSQpQgdMWD/YIwjVAqv/qFuxdF6Kmh4zx6CCiC0
H63lhbJqaHVOrSU3lIW+vaHU6rcMSzyd6BIA8F+sDeGscGNz9395nzIlQnQFgCi/vcEkllgVsRch
6YlL2weIZ/QVrXA+L02FO8K32/6YaCOJ4XQP3vTFhGMpG8zLB8kApKnXwiJPZ9d37CAFYd4AAAAC
AC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy9iY2RkNTk1OS4wAAABUYW1fLYA
BVguNTA5AAAC6zCCAucwggJQAgEBMA0GCSqGSIb3DQEBBQUAMIG7MSQwIgYDVQQHExtWYWxpQ2Vy
dCBWYWxpZGF0aW9uIE5ldHdvcmsxFzAVBgNVBAoTDlZhbGlDZXJ0LCBJbmMuMTUwMwYDVQQLEyxW
YWxpQ2VydCBDbGFzcyAyIFBvbGljeSBWYWxpZGF0aW9uIEF1dGhvcml0eTEhMB8GA1UEAxMYaHR0
cDovL3d3dy52YWxpY2VydC5jb20vMSAwHgYJKoZIhvcNAQkBFhFpbmZvQHZhbGljZXJ0LmNvbTAe
Fw05OTA2MjYwMDE5NTRaFw0xOTA2MjYwMDE5NTRaMIG7MSQwIgYDVQQHExtWYWxpQ2VydCBWYWxp
ZGF0aW9uIE5ldHdvcmsxFzAVBgNVBAoTDlZhbGlDZXJ0LCBJbmMuMTUwMwYDVQQLEyxWYWxpQ2Vy
dCBDbGFzcyAyIFBvbGljeSBWYWxpZGF0aW9uIEF1dGhvcml0eTEhMB8GA1UEAxMYaHR0cDovL3d3
dy52YWxpY2VydC5jb20vMSAwHgYJKoZIhvcNAQkBFhFpbmZvQHZhbGljZXJ0LmNvbTCBnzANBgkq
hkiG9w0BAQEFAAOBjQAwgYkCgYEAzjpxyuWryFmSVder2HQO+e7Z9lVHWWVHDgVV3OuYNjxcU13T
MM847L1Bie0lQgkkawpes3zdUi1M5tTWfVpZqWXUSRMtJE0cUG+1wYVUO/5x5NNcQvmA4JEaCls5
NmfzP1V8Gz+0X2RzNOO0Er+HZPjaEv83J8GzQ7vve24uafcCAwEAATANBgkqhkiG9w0BAQUFAAOB
gQA7f1Bvb1CUmUliODgfS/ilyD6ngoH2K8foxc7oOhCCyxgAjk29qFh/oXkAtbvpja9B2Q807iGB
GaAySSj0xI5W1VIz/VDVfplsA+TJTPzLbKtms0ohjOW1DDI+ELLMbKHcmphMAlvzzrmepXIOSrc/
POYWaPi+7XRMvFvVYh9D3QAAAAIALi9leHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRz
LzVjZjlkNTM2LjAAAAFK5xidbgAFWC41MDkAAAXUMIIF0DCCBLigAwIBAgIEOrZQizANBgkqhkiG
9w0BAQUFADB/MQswCQYDVQQGEwJCTTEZMBcGA1UEChMQUXVvVmFkaXMgTGltaXRlZDElMCMGA1UE
CxMcUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEuMCwGA1UEAxMlUXVvVmFkaXMgUm9vdCBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wMTAzMTkxODMzMzNaFw0yMTAzMTcxODMzMzNaMH8x
CzAJBgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMSUwIwYDVQQLExxSb290IENl
cnRpZmljYXRpb24gQXV0aG9yaXR5MS4wLAYDVQQDEyVRdW9WYWRpcyBSb290IENlcnRpZmljYXRp
b24gQXV0aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv2G1lVO6V/z68mcL
OhrfEYBklbTRvM16z/Ypli4kVEAkOPcahdxYTMukJ0KX0J+DisPkBgNbAKVRHnAEdOLB1Dqr1607
BxgFjv2DrOpm2RgbaIr1VxqYuvXtdj182d6UajtLF8HVj71lODqV0D1VNk7feVcxKh7YWWVJWCCY
fqtffp/p1k3sg3Spx2zY7ilKhSoGFPlU5tPaZQeLYzcS19Dsw3sgQUSj7cugF+FxZc4dZjH3dgEZ
yH0DWLaVSR2mEiboxgx24ONmy+pdpibu5cxfvWenAScOospUxbF6lR1xHkopigPcakXBpBlebzbN
w6Kwt/5cOOJSvPhEQ+aQuwIDAQABo4ICUjCCAk4wPQYIKwYBBQUHAQEEMTAvMC0GCCsGAQUFBzAB
hiFodHRwczovL29jc3AucXVvdmFkaXNvZmZzaG9yZS5jb20wDwYDVR0TAQH/BAUwAwEB/zCCARoG
A1UdIASCAREwggENMIIBCQYJKwYBBAG+WAABMIH7MIHUBggrBgEFBQcCAjCBxxqBxFJlbGlhbmNl
IG9uIHRoZSBRdW9WYWRpcyBSb290IENlcnRpZmljYXRlIGJ5IGFueSBwYXJ0eSBhc3N1bWVzIGFj
Y2VwdGFuY2Ugb2YgdGhlIHRoZW4gYXBwbGljYWJsZSBzdGFuZGFyZCB0ZXJtcyBhbmQgY29uZGl0
aW9ucyBvZiB1c2UsIGNlcnRpZmljYXRpb24gcHJhY3RpY2VzLCBhbmQgdGhlIFF1b1ZhZGlzIENl
cnRpZmljYXRlIFBvbGljeS4wIgYIKwYBBQUHAgEWFmh0dHA6Ly93d3cucXVvdmFkaXMuYm0wHQYD
VR0OBBYEFItLbe3TKbkGGew5Oanwl4Rqy+/fMIGuBgNVHSMEgaYwgaOAFItLbe3TKbkGGew5Oanw
l4Rqy+/foYGEpIGBMH8xCzAJBgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMSUw
IwYDVQQLExxSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MS4wLAYDVQQDEyVRdW9WYWRpcyBS
b290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5ggQ6tlCLMA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG
9w0BAQUFAAOCAQEAitQUtf70mpKnGdSkfnIYj9lofFIk3WdvOXrEql494liwTXCYhGHoG+NpGA7O
+0dQoE7/8CQfvbLO9Sf87C9TqnN7Az10buYWnuulLsS/VidQK2K6vkscPFVcQR0kvoIgR13VRH56
FmjffU1RcHhXHTMe/QKZnAzNCgVPx7uOpHX6Sm2xgI4JVrmcGmD+XcHXetwReNDWXcG31a0ymQM6
isxUJTkxgXsTIlG6Rmyhu576BGxJJnSP0nPrzDCi5upZIof4l/UO/erMkqQWxFIY6iHOsfHmhIHl
uqmGKPJDWl0Snawe2ajlCmqnf6CHKc/yiU3U7MXi5nrQNiOKSnQ2+QAAAAIALi9leHBvcnQvaGRh
My83LjIuMC9sb2NhbC9jb25mL2NlcnRzL2ZmNzgzNjkwLjAAAAFK5xizqwAFWC41MDkAAAR4MIIE
dDCCA1ygAwIBAgIQRL4Mi1AAJLQR0zYq/mUK/TANBgkqhkiG9w0BAQUFADCBlzELMAkGA1UEBhMC
VVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2UgQ2l0eTEeMBwGA1UEChMVVGhlIFVT
RVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExhodHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xHzAdBgNV
BAMTFlVUTi1VU0VSRmlyc3QtSGFyZHdhcmUwHhcNOTkwNzA5MTgxMDQyWhcNMTkwNzA5MTgxOTIy
WjCBlzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0IExha2UgQ2l0eTEe
MBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExhodHRwOi8vd3d3LnVzZXJ0
cnVzdC5jb20xHzAdBgNVBAMTFlVUTi1VU0VSRmlyc3QtSGFyZHdhcmUwggEiMA0GCSqGSIb3DQEB
AQUAA4IBDwAwggEKAoIBAQCx98M4P7Sof885glFn0G2f0v9Y8+efK+wNiVSZuTiZFvfgIXlIwrth
dBKWHTxqctU8EGc6Oe0rE81m65UJM6Rsl7HoxuzBdXmcRl6Nq9Bq/bkqVRcQVLMZ8Jr28bFdtqdt
++BxF2uiiPsA3/4aMXcMmgF6sTLjKwEHOG7DpV4jvEWbe1DByTCP2+UretNb+zNAHqDVmBe8i4fD
idNdoI6yqqr2jmmIBsX6iSHzCJ1pLgkzmykNRg+MzEk0sGlRvfkGzWitZky8PqxhvQqIDsjfPe58
BEydCl5rkdbux+0ojatNh4lz0G6k0B4WixThdkQDf2Os5M1JnMWS9KsyoUhbAgMBAAGjgbkwgbYw
CwYDVR0PBAQDAgHGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFKFyXyYbKJhDlV0HN9WFlp1L
0sNFMEQGA1UdHwQ9MDswOaA3oDWGM2h0dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9VVE4tVVNFUkZp
cnN0LUhhcmR3YXJlLmNybDAxBgNVHSUEKjAoBggrBgEFBQcDAQYIKwYBBQUHAwUGCCsGAQUFBwMG
BggrBgEFBQcDBzANBgkqhkiG9w0BAQUFAAOCAQEARxkP3nTGmZev/K0oXnWO6y1n7k57K9cM//be
y1WiCuFMVGWTYGufEpytXoMs61quwOQt9ABjHbjAbPLPSbtNk28GpgoiskliCE7/yMgUsogWXecB
5BKV5UU0s4tpvc+0hY91UZ59Ojg6FEgSxvunOxqNDYJAB+gECJChicsZUN/KHAG8HQQZexB2lzvu
kJDKxA4fFm517zP4029bHpbj4HR3dHuKom4t3XbWOTCC8KucUvIqx69JXn7HaOWCgchqJ/kniCrV
WFCVH/A7HFe7fRQ5YiuayZSSKqMiDP+JJn1fIytH1xUdqWqeUQ0qUZ6B+dQ7XnASfxAynB67nfhm
qAAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzLzQ3OTk2YjVjLjAAAAFR
hbVDQwAFWC41MDkAAAZVMIIGUTCCBTmgAwIBAgIEPLVPQDANBgkqhkiG9w0BAQUFADBmMRIwEAYD
VQQKEwliZVRSVVNUZWQxGzAZBgNVBAsTEmJlVFJVU1RlZCBSb290IENBczEzMDEGA1UEAxMqYmVU
UlVTVGVkIFJvb3QgQ0EgLSBFbnRydXN0IEltcGxlbWVudGF0aW9uMB4XDTAyMDQxMTA4MjQyN1oX
DTIyMDQxMTA4NTQyN1owZjESMBAGA1UEChMJYmVUUlVTVGVkMRswGQYDVQQLExJiZVRSVVNUZWQg
Um9vdCBDQXMxMzAxBgNVBAMTKmJlVFJVU1RlZCBSb290IENBIC0gRW50cnVzdCBJbXBsZW1lbnRh
dGlvbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALr0RAOqEmq1Q+xVkrYwfTVXDNvz
DSduTPdQqJtOK2/b9a0cS12zqcH+e0TrW6MFDR/FNCswACnxeECypP869AGIF37m1CbTukzqMvtD
d5eHI8XbQ6P1KqNRXuE70mVpflUVm3rnafdE4Fe1FehmYA8NA/uCjqPoEXtsvsdjDheT389Lrm5z
deDzqrmkwAkbhepxKYhBMvnwKg5sCfJ0a2ZsUhMfGLzUPvfYbiCeyv78IZTuEyhL11xeDGbu6bsP
wTSxfwh28z0mcMmLJR1iJAzqHHVOwBLkuhMdMCktVjMFu5dZfsZJT4nXLySotohAtWSSU1Yk5KKg
hbNekLQSM80CAwEAAaOCAwUwggMBMIIBtwYDVR0gBIIBrjCCAaowggGmBg8rBgEEAbE+AAACCSiD
kTEwggGRMIIBSQYIKwYBBQUHAgIwggE7GoIBN1JlbGlhbmNlIG9uIG9yIHVzZSBvZiB0aGlzIENl
cnRpZmljYXRlIGNyZWF0ZXMgYW4gYWNrbm93bGVkZ21lbnQgYW5kIGFjY2VwdGFuY2Ugb2YgdGhl
IHRoZW4gYXBwbGljYWJsZSBzdGFuZGFyZCB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB1c2UsIHRo
ZSBDZXJ0aWZpY2F0aW9uIFByYWN0aWNlIFN0YXRlbWVudCBhbmQgdGhlIFJlbHlpbmcgUGFydHkg
QWdyZWVtZW50LCB3aGljaCBjYW4gYmUgZm91bmQgYXQgdGhlIGJlVFJVU1RlZCB3ZWIgc2l0ZSwg
aHR0cHM6Ly93d3cuYmV0cnVzdGVkLmNvbS9wcm9kdWN0c19zZXJ2aWNlcy9pbmRleC5odG1sMEIG
CCsGAQUFBwIBFjZodHRwczovL3d3dy5iZXRydXN0ZWQuY29tL3Byb2R1Y3RzX3NlcnZpY2VzL2lu
ZGV4Lmh0bWwwEQYJYIZIAYb4QgEBBAQDAgAHMIGJBgNVHR8EgYEwfzB9oHugeaR3MHUxEjAQBgNV
BAoTCWJlVFJVU1RlZDEbMBkGA1UECxMSYmVUUlVTVGVkIFJvb3QgQ0FzMTMwMQYDVQQDEypiZVRS
VVNUZWQgUm9vdCBDQSAtIEVudHJ1c3QgSW1wbGVtZW50YXRpb24xDTALBgNVBAMTBENSTDEwKwYD
VR0QBCQwIoAPMjAwMjA0MTEwODI0MjdagQ8yMDIyMDQxMTA4NTQyN1owCwYDVR0PBAQDAgEGMB8G
A1UdIwQYMBaAFH1w5a44iwY/qhwaj/nPJDCqhIQWMB0GA1UdDgQWBBR9cOWuOIsGP6ocGo/5zyQw
qoSEFjAMBgNVHRMEBTADAQH/MB0GCSqGSIb2fQdBAAQQMA4bCFY2LjA6NC4wAwIEkDANBgkqhkiG
9w0BAQUFAAOCAQEAKrgXzh8QlOu4mre5X+za95IkrNySO8cgjfKZ5V04ocI07cUTWVwFtStPYZuR
+0H8/NU8TZh2BvWBfevdkObRVlTa4y0MnxEylCIBevZsLHRnBMylj44ss0O1lKLQfelifwa+JwGD
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
dHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cudXNlcnRydXN0LmNvbTE2MDQGA1UEAxMtVVROLVVT
RVJGaXJzdC1DbGllbnQgQXV0aGVudGljYXRpb24gYW5kIEVtYWlsMB4XDTk5MDcwOTE3Mjg1MFoX
DTE5MDcwOTE3MzY1OFowga4xCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJVVDEXMBUGA1UEBxMOU2Fs
dCBMYWtlIENpdHkxHjAcBgNVBAoTFVRoZSBVU0VSVFJVU1QgTmV0d29yazEhMB8GA1UECxMYaHR0
cDovL3d3dy51c2VydHJ1c3QuY29tMTYwNAYDVQQDEy1VVE4tVVNFUkZpcnN0LUNsaWVudCBBdXRo
ZW50aWNhdGlvbiBhbmQgRW1haWwwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCyOYWk
8n2rQTtiRjeuzcFgdbw5ZflKGkeiucxIzGqY1U01GbmkQuXOSeKKLx580jEHx060g2SdLinVomTE
hb2FUTV5pE5okHsceqSSqBfymBXyk8zJpDKVuwxPML2YoAuL5W4bokb6eLyib6tZXqUvz8rabaov
66yhs2qqty5nNYt54R5piOLmRs2gpeq+C852OnoOm+r82idbPXMfIuZIYcZM82mxqC4bttQxICy8
goqOpA6l14lD/BZarx1x1xFZ2rqHDa/68+HC8KTFZ4zW1lQ63gqkugN3s2XI/R7TdGKqGMpokx6h
hX71R2XL+E1XKHTSNP8wtu72YjAUjCzrAgMBAAGjgbkwgbYwCwYDVR0PBAQDAgHGMA8GA1UdEwEB
/wQFMAMBAf8wHQYDVR0OBBYEFImCZ33EnSZwAEu0UEh83j2uBG59MFgGA1UdHwRRME8wTaBLoEmG
R2h0dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9VVE4tVVNFUkZpcnN0LUNsaWVudEF1dGhlbnRpY2F0
aW9uYW5kRW1haWwuY3JsMB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDBDANBgkqhkiG9w0B
AQUFAAOCAQEAsW1hXaYaf3yrSuQw/FNvJSTGyu3iMVwrDu7uYVVvBD7POd7FG0mU5OsgTLTmnlAu
ctmN9aqjs0raVhxgl4DcgqKtSr2KK/8LCbTG1yAEReTNgAG6uituzqrXkv7kr+v0Jh0WKn9sMJU3
LzMSrH/dx9ERjFGYstCjkdCt9p+eg5MeHUK4Rq9rZvCbf+rjAwLlAlHBqtU1nXJAA4m6MR3FEGhS
nt+ihcVcCKZ45lNPsei30xSek6bDZOOsfnHNvJ/pAxvM++msMcGvfBV0ApnDskemwjJh18dvSCRR
J6HVh1Xye4+YPRae7nW2+NCO8vPGrihbp/DzNhf8wwXTygNKVAAAAAIALi9leHBvcnQvaGRhMy83
LjQuMC9sb2NhbC9jb25mL2NlcnRzLzIxODU1ZjQ5LjAAAAFRhbTmxwAFWC41MDkAAAVtMIIFaTCC
A1GgAwIBAgIJAMMDmu5QkG4oMA0GCSqGSIb3DQEBBQUAMFIxCzAJBgNVBAYTAlNLMRMwEQYDVQQH
EwpCcmF0aXNsYXZhMRMwEQYDVQQKEwpEaXNpZyBhLnMuMRkwFwYDVQQDExBDQSBEaXNpZyBSb290
IFIxMB4XDTEyMDcxOTA5MDY1NloXDTQyMDcxOTA5MDY1NlowUjELMAkGA1UEBhMCU0sxEzARBgNV
BAcTCkJyYXRpc2xhdmExEzARBgNVBAoTCkRpc2lnIGEucy4xGTAXBgNVBAMTEENBIERpc2lnIFJv
b3QgUjEwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCqw3j33Jijp1pedxiy3QRkD2P9
m5YJgNXoqqXinCaUOuiZc4yd39ffg/N4T0Dhf9Kn0uXKE5Pn7cZ3Xza1lK/oOI7bm+V8u8yN63Vz
4STN5qctGS7Y1oprFOsIYgrY3LMATcMjfF9DCCMyEtztDK3AfQ+lekLZWnDZv6fXARz2m6uOt0qG
eKAeVjGu74IKgEH3G8muqzIm1Cxr7X1r5OJeIgpFy4QxTaz+29FHuvlglzmxZcfe+5nkCiKxLU3l
SCZpq+Kq8/v8kiky6bM+TR8noc2OuRf7JT7JbvN32g0S9l3HuzYQ1VTW8+DiR0jm3hTaYVKvJrT1
cU/J19IG32PK/yHoWQbgCNWEFVP3Q+V8xaCJmGtzxmjOZd69fwX3se72V6FglcXM6pM6vpmumwKj
rckWtc7dXpl4fho5frLABaTAgqWjR56M6ly2vGfb5ipN0gTco65F97yLnByn1tUD3AjLLhbKXEAz
6GfDLuemROoRRRw1ZS0eRWEkG4IupZ0zXWX4Qfkuy5Q/H6MMMSRE7cderVC6xkGbrPAXZcD4XW9b
oAo0PO7X6oifmPmvTiT6l7Jkdtqr9O3jw2Dv1fkCyC2fg69naQanMVXVz0tv/wQFx1isXxYb5dKj
6zHbHzMVTdDypVP1y+E9Tmgt2BLdqvLmTZtJ5cUoobqwWsagtQIDAQABo0IwQDAPBgNVHRMBAf8E
BTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUiQq0OJMa5qvum5EY+fU8PjXQ04IwDQYJ
KoZIhvcNAQEFBQADggIBADKL9p1Kyb4U5YysOMo6CdQbzoaz3evUuii+Eq5FLAR0rBNRxVgYZk2C
2tXck8An4b58n1KeElb21Zyp9HWc+jcSjxyT7Ff+Bw+r1RL3D65hXlaASfX8MPWbTx9BLxyE04nH
4toCdu0Jz2zBuByDHBb6lM19oMgY0sidbvW9adRtPTXoHqJPYNcHKfyyo6SdbhWSVhlMCrDpfNIZ
TUJG7L399ldb3Zh+pE3McgODWF3vkzpBemOqfDqo9ayk0d2iLbYq/J8BjuIQscTK5GfbVSUZP/3o
Nn6z4eGBrxEWi1CXYBmCAMBrTXO40RMHPuq2MU/wQppt4hF05ZSsjYSVPCGvxdpHyN85YmLLW1AL
14FABZyb7bq2ix4Eb5YgOe2kfSnbSM6C3NQCjR0EMVrHS/BsYVLXtFHCgWzN4funodKSds+xDzdY
pPJScWc/DIh4gInByLUfkmO+p3qKViwaqKactV2zY9ATIKHrkWzQjX2v3wvkF7mGnjixlAxYjOBV
qjtjbZqJYLhkKpLGN/R+Q0O3c+gB53+XD9fyexn9GtePyfqFa3qdnom2piiZk4hA9z7NUaPK6u95
RyG1/jLix8NRb76AdPCkwzryT+lf3xkK8jsTQ6wxpLPn6/wY1gGp8yqPNg7rtLG8t0zJa7+h89n0
7eLw4+1knj0vllJPgFOLAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMv
ZjYxYmZmNDUuMAAAAVGFs/9WAAVYLjUwOQAAB6wwggeoMIIGkKADAgECAhEAzLjnv04pGv2i3Gal
HCwPETANBgkqhkiG9w0BAQUFADByMQswCQYDVQQGEwJIVTERMA8GA1UEBxMIQnVkYXBlc3QxFjAU
BgNVBAoTDU1pY3Jvc2VjIEx0ZC4xFDASBgNVBAsTC2UtU3ppZ25vIENBMSIwIAYDVQQDExlNaWNy
b3NlYyBlLVN6aWdubyBSb290IENBMB4XDTA1MDQwNjEyMjg0NFoXDTE3MDQwNjEyMjg0NFowcjEL
MAkGA1UEBhMCSFUxETAPBgNVBAcTCEJ1ZGFwZXN0MRYwFAYDVQQKEw1NaWNyb3NlYyBMdGQuMRQw
EgYDVQQLEwtlLVN6aWdubyBDQTEiMCAGA1UEAxMZTWljcm9zZWMgZS1Temlnbm8gUm9vdCBDQTCC
ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAO3IANWBe804AEfM24TBIWksdJAMIdlTh+0+
Q0RTr6v4gJs8eI3Uja6479MR3IHmzzuWjNZvFcZ3fqEv4F+StifXdpodQzzq2ewv7jnzamdLi4LP
IvhlVf4syy99SHo9dfmqoCe7eMIGylHCfmZLr82ip00Cgj+CrIXG4Q+QR5mUCnFykyrJpsC+PFZM
c5In8Wu19f38MAVgksbrln4BkcJpsR4de1NFuNxBH8mLcdZUFOOLVHg/vvRiO1v1o+zVknTidDDv
Advh1KuZmypr+L2mHIYjQl/sSd6ai1v0cjpAxUk+pb6OqnHrbPr1GuRq/Xt9VUDvWG7m2dW8JKvB
77cCAwEAAaOCBDcwggQzMGcGCCsGAQUFBwEBBFswWTAoBggrBgEFBQcwAYYcaHR0cHM6Ly9yY2Eu
ZS1zemlnbm8uaHUvb2NzcDAtBggrBgEFBQcwAoYhaHR0cDovL3d3dy5lLXN6aWduby5odS9Sb290
Q0EuY3J0MA8GA1UdEwEB/wQFMAMBAf8wggFzBgNVHSAEggFqMIIBZjCCAWIGDCsGAQQBgagYAgEB
ATCCAVAwKAYIKwYBBQUHAgEWHGh0dHA6Ly93d3cuZS1zemlnbm8uaHUvU1pTWi8wggEiBggrBgEF
BQcCAjCCARQeggEQAEEAIAB0AGEAbgD6AHMA7QB0AHYA4QBuAHkAIADpAHIAdABlAGwAbQBlAHoA
6QBzAOkAaABlAHoAIADpAHMAIABlAGwAZgBvAGcAYQBkAOEAcwDhAGgAbwB6ACAAYQAgAFMAegBv
AGwAZwDhAGwAdABhAHQA8wAgAFMAegBvAGwAZwDhAGwAdABhAHQA4QBzAGkAIABTAHoAYQBiAOEA
bAB5AHoAYQB0AGEAIABzAHoAZQByAGkAbgB0ACAAawBlAGwAbAAgAGUAbABqAOEAcgBuAGkAOgAg
AGgAdAB0AHAAOgAvAC8AdwB3AHcALgBlAC0AcwB6AGkAZwBuAG8ALgBoAHUALwBTAFoAUwBaAC8w
gcgGA1UdHwSBwDCBvTCBuqCBt6CBtIYhaHR0cDovL3d3dy5lLXN6aWduby5odS9Sb290Q0EuY3Js
hoGObGRhcDovL2xkYXAuZS1zemlnbm8uaHUvQ049TWljcm9zZWMlMjBlLVN6aWdubyUyMFJvb3Ql
MjBDQSxPVT1lLVN6aWdubyUyMENBLE89TWljcm9zZWMlMjBMdGQuLEw9QnVkYXBlc3QsQz1IVT9j
ZXJ0aWZpY2F0ZVJldm9jYXRpb25MaXN0O2JpbmFyeTAOBgNVHQ8BAf8EBAMCAQYwgZYGA1UdEQSB
jjCBi4EQaW5mb0BlLXN6aWduby5odaR3MHUxIzAhBgNVBAMMGk1pY3Jvc2VjIGUtU3ppZ27DsyBS
b290IENBMRYwFAYDVQQLDA1lLVN6aWduw7MgSFNaMRYwFAYDVQQKEw1NaWNyb3NlYyBLZnQuMREw
DwYDVQQHEwhCdWRhcGVzdDELMAkGA1UEBhMCSFUwgawGA1UdIwSBpDCBoYAUx6BJdRZhhNsxS4TS
8TdAkO9O3PehdqR0MHIxCzAJBgNVBAYTAkhVMREwDwYDVQQHEwhCdWRhcGVzdDEWMBQGA1UEChMN
TWljcm9zZWMgTHRkLjEUMBIGA1UECxMLZS1Temlnbm8gQ0ExIjAgBgNVBAMTGU1pY3Jvc2VjIGUt
U3ppZ25vIFJvb3QgQ0GCEQDMuOe/Tika/aLcZqUcLA8RMB0GA1UdDgQWBBTHoEl1FmGE2zFLhNLx
N0CQ707c9zANBgkqhkiG9w0BAQUFAAOCAQEA0xOcZmNZLspccAz8g7xVsfSOB2xmJ87BOyCpHLtG
VHDuWsygd+poRCfr8indd6nV++PUpwTElbgL4URoYAdDMDFCYeXu2eUk1Rvf4Uobqp/HX/h6EeoT
kwDKilix7u0OTbTXqDYmfOA6wdVXgvF1tv2JX9rzqDifNQYIziKVvs3V/L5b3nlr3HqpZWa+sSVa
X+1+06xGbUz0Moe0IATgbHiwd9GFRkumErd16ErJVmzXkqud9Uk40k9T41WQEduYlsZJ8j70nxvg
94jcJWKZRNhzvz8w8ww3PtTCKIBzsQG3nVqWFAFLqRGdKWou0F2BwM+yIEPHA+A3Tl0K3FkgJQAA
AAIALy9leHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy8yZWRmNzAxNi4wAAABMLsq
+iIABVguNTA5AAACQTCCAj0wggGmAhEAzbp/VvDf5LxU/iKss3KqVTANBgkqhkiG9w0BAQIFADBf
MQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xNzA1BgNVBAsTLkNsYXNzIDEg
UHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNOTYwMTI5MDAwMDAwWhcN
MjgwODAxMjM1OTU5WjBfMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xNzA1
BgNVBAsTLkNsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwgZ8w
DQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAOUZv22jVmEtmUhx9mfeuY3rt56GgAqRDvo4Ja9GiILl
c6igmyRdDR/MZW4MsNBWhBiHmgabEKFz37RYOWtuwfYV1aioP6oSBo0xrH+wNNePNGeICc0UEeJO
RVZpH3gCgNrcR5EpuzbJY1zF4Ncth3uhtzKwezC6Ki8xqu6jZ9rbAgMBAAEwDQYJKoZIhvcNAQEC
BQADgYEATD+4i8Zo3+5DMw5d6abLB4RNejP/khv0Nq3YlSI2aBFsfELM85wuxAc/FLAPT/+Qknb5
4rxK6Y/NoIAK98Up8YIiXbix3YEjo3slFUYweRb46gVLlH8dwhzI47f0EEA8E8NfH1PoSOSGtHuh
NbB7Jbq4046rPzidADQAmPPRcZQAAAACAC4vZXhwb3J0L2hkYTMvNy4yLjAvbG9jYWwvY29uZi9j
ZXJ0cy9jOWJjNzViYS4wAAABSucYATwABVguNTA5AAADuTCCA7UwggKdoAMCAQICEQDQHkCQAABG
UgAAAAEAAAAEMA0GCSqGSIb3DQEBBQUAMIGJMQswCQYDVQQGEwJVUzELMAkGA1UECBMCREMxEzAR
BgNVBAcTCldhc2hpbmd0b24xFzAVBgNVBAoTDkFCQS5FQ09NLCBJTkMuMRkwFwYDVQQDExBBQkEu
RUNPTSBSb290IENBMSQwIgYJKoZIhvcNAQkBFhVhZG1pbkBkaWdzaWd0cnVzdC5jb20wHhcNOTkw
NzEyMTczMzUzWhcNMDkwNzA5MTczMzUzWjCBiTELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkRDMRMw
EQYDVQQHEwpXYXNoaW5ndG9uMRcwFQYDVQQKEw5BQkEuRUNPTSwgSU5DLjEZMBcGA1UEAxMQQUJB
LkVDT00gUm9vdCBDQTEkMCIGCSqGSIb3DQEJARYVYWRtaW5AZGlnc2lndHJ1c3QuY29tMIIBIjAN
BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsdMR4HlVQwcITMsFQgDiDYNGPeSTurYG0w1ZvT7B
zkNnAYohqO+8zNCizLBVllOEZgUA2kRJgNhUCqUlhpTtY1b/cGyjoRnSeL5oKkReL8/MGF5HvDqx
Rj0e8LksNF+MfEwIKZ1AVes8fYPetfD3ioMOoUy0OqWzX1oil+wZm8EFaP3mt6mRlCzkeEgkGiUZ
OuuVnDkKis9CsvAc1V/7a+1oVns5LHI4sO6TqdN7dzzrcQOpOEoWbIkqytozE3nCVYztnLvyy1sQ
+C5hNcYpTCrQKmPRZVm0+M359ACEtldChZ0yqPkqVPv/eEG8vXEo9LuQvP+WNATjRZ6hRihAgQID
AQABoxYwFDASBgNVHRMBAf8ECDAGAQH/AgEIMA0GCSqGSIb3DQEBBQUAA4IBAQAEbyWG5OaWJ7TZ
QsDQyQCxf1Q+h7JtJKkvCn79pESw+FQHvRudncp7UCR7EVtJo6a/EnTVibe3L5hkJRS3Yel/YIBr
02Toq70a1lH6wLRddxp/ZAheecYFTPF63U19zuZIe1TSYZKB1hvWAPAOnih3oE2IxyJ2GcPHnhum
d3j4X5tW0fDyF6yOnVnmH/5Xttle4V2fRexhaBlB4bIgJv5aMHYk/0ByPHmffCJIq0bN27OGLI+/
BUHTweMU40EXJtB8p3FMGehKD3JYMX3sYHqjIii9GSRgPzuHc8Br5Muut6slQ7JVLXurBg51XTTl
XXNtnrJ1QKVZyU8xcYjZiH9UAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2Vy
dHMvNzk5OWJlMGQuMAAAAVGFs37TAAVYLjUwOQAAA1gwggNUMIICPKADAgECAgMCNFYwDQYJKoZI
hvcNAQEFBQAwQjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUdlb1RydXN0IEluYy4xGzAZBgNVBAMT
Ekdlb1RydXN0IEdsb2JhbCBDQTAeFw0wMjA1MjEwNDAwMDBaFw0yMjA1MjEwNDAwMDBaMEIxCzAJ
BgNVBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMRswGQYDVQQDExJHZW9UcnVzdCBHbG9i
YWwgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDazBhjMP30FyMaVn5b3zxsOORx
t3iR1Lyh2Ez4qEO2A+lNIQcIiNpYL2Y5Kb0FeIudOOgFt2p+caTmxGCmsO+A5IkoD54l1u2D862m
kceYyUIYNRSdrZhGki5PyvGHQ8EWlVctUO+JLYB6V63y7l9r0gCNuRT4FBU12cBGo3tyyJG/yVUr
zdCXPpwmZMzfzoMZccpO5tTVe6kZzVXeyOzSXjhT5VxPjC3+UCM2/Gbmy46kORkAt5UCOZELDv44
LtEdBZr2TT5vDwcdrywej2A54vo2UxM51F4mK9s9qBS9MusYAyhSBHHlqzM94Ti7BzaEYpx56hYw
9F/AK+hxa+T5AgMBAAGjUzBRMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFMB6mGiNifurBWQM
EX2qfWW4ysxOMB8GA1UdIwQYMBaAFMB6mGiNifurBWQMEX2qfWW4ysxOMA0GCSqGSIb3DQEBBQUA
A4IBAQA14ylq5S9dVI4pUJSfmRoU5I94KmKUoidnntDPGl5H6cGypM/dQRoFTptL7kpvVVKzJKE3
CutkdiouLPP9O3WQv/px2Mc9N9K1BZViuabeiT02ezh3SJespiCPLqbJDMKymUUAx84RUSIi4KXq
thVICWTqXk909wU+x4pSDNsVtL1tm+XGsVRoqeNpkLaapQ+4uT8gfa5Ktbic5B22q+aUpcHHg63b
9SeHDgRs1f/doF3th1K3KxUCrjmmanTp2sTnvE00HqlcTTNfkgkviGZdd5fHHXYTqdXl8RYJETXV
rNskcXAsmFYL2Re00eNRK1516NXQ3E807cIFZoChy+YzAAAAAgAvL2V4cG9ydC9oZGEzLzYuMTAu
NC9sb2NhbC9jb25mL2NlcnRzLzJmYjE4NTBhLjAAAAEwuytFTwAFWC41MDkAAAWoMIIFpDCCA4yg
AwIBAgIBATANBgkqhkiG9w0BAQUFADBjMQswCQYDVQQGEwJVUzEcMBoGA1UEChMTQW1lcmljYSBP
bmxpbmUgSW5jLjE2MDQGA1UEAxMtQW1lcmljYSBPbmxpbmUgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1
dGhvcml0eSAyMB4XDTAyMDUyODA2MDAwMFoXDTM3MDkyOTE0MDgwMFowYzELMAkGA1UEBhMCVVMx
HDAaBgNVBAoTE0FtZXJpY2EgT25saW5lIEluYy4xNjA0BgNVBAMTLUFtZXJpY2EgT25saW5lIFJv
b3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgMjCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC
ggIBAMxBRR3pPU0Q9oyxQcngXssNt79Hc9PwVU3dxgz6sWYFas14tNwC206B89enfHG8dWOgXeMH
DEjsJcQDIPT/DjsS/5uN4cbVG7RtIuOx238hZK+GvFciKtZHgVdEglZTvYYUAQv8f3SkWq7xuhG1
m1hagLQ3eAkzfDJHA1zEpYNI9FdWboE2JxhP7JsowtS013wMPgwr38oE18aO6lhOqKSlGBxsRZij
QdEt0sdtjRnxrXm3gT+9BoInLRBYBbV4Bbkv2wxrkJB+FFk4u5QkE+XRnRTf04JNRvCAOVIyD+OE
snpD8l7eXz8d3eOyG6ChKiMDbi4BFYdcpnV1x5dhvt6G3NRI270qv0pV2uh9UPu0gBe4lL8BPera
unzgWGcXuVjgiIZGZ2ydEEdYMtA1fHkqkKJaEBEjNa0vzORKW6fIJ/KD3l67Xnfn6KVuY8INXWHQ
jNJsWiEOyiijzirplcdIz5ZvHZIlyMbGwcEMBawmxNJ10uEqZ8A9W6Wa6897GqidFEXlD6CaZd4v
KL3Ob5Rmg0gp2OpljK+T2WSfVVcmv2/LNzGZo2C7HK2JNDJiuEMhBnIMoVxtRsX6Kc8w3onccVvd
tjc+31D1uAclJuW8tf48ArO3+L5DwYcRlJ4jbBeKuIonDFRH8KmzwICMoCfrHRnjB453cMor9H12
4HhnAgMBAAGjYzBhMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFE1FwWg4u3OpaaEg5+31IqEj
FNeeMB8GA1UdIwQYMBaAFE1FwWg4u3OpaaEg5+31IqEjFNeeMA4GA1UdDwEB/wQEAwIBhjANBgkq
hkiG9w0BAQUFAAOCAgEAZ2sGuV9FOypLM7PmG2tZTiLMubekJcmnxPBUlgtk87FYT15R/LKXeydl
wuXK5w0MJXti4/qftIe3RUavg6WXSIylvfEWK5t2LHo1YGwRgJfMqZJS5ivmae2p+DYtLHe/YUjR
Ywu5W1LtGLBDQiKmsXeu3mnFzcccobGlHBD7GL4acN3Bkku+KVqdPzW+5X1R+FXgJXUjhx5c3Lqd
sKyzadsXg8n33gy8CNyRnqjQ1xU3c6U1uPx+xURABsPr+CKAXEfOAuMRn0T//ZoyzH1kUQ7rVyZ2
OuMeIjzCpjbdGe+n/BLzJsBZMYVMnNjP36TMzCmT/5RtdlwTCJfy7aULTd3oyWgOZtMADjMSW7yV
5TKQqLPGbIOtd+6Lfn6xqavT4fG2wLHqiMDn05DpKJKUe2h7lyoKZy2FAjgQ5ANh1NolNscIWC2h
p1GvMApJ9aZphwctREZ2jirlmjvXGKL8nDgQzMY70rUXOm/9riW99XJZZLF0KjhfGEzfz3EEWjbU
vy+ZnOjZurGV5gJLIaFb1cFPj65pbVPbAZO1XB4Y3WRayhgoPmMEEf0cjQAPuDffZ4qdZqkCapH/
E8ovXYO8h5Ns3CRRFgQlZvqz2cK6Kb6aSDiCmfS/O0oxGfm/jiEzFMpPVF/7zvuPcX/9XhmgD0uR
uMRUvAawRY8mkaKO/qkAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy9l
ZDM5YWJkMC4wAAABUYW1FD4ABVguNTA5AAACQzCCAj8wggHFoAMCAQICEAVVVrzyXqQ1NcOkD9Wr
RXIwCgYIKoZIzj0EAwMwYTELMAkGA1UEBhMCVVMxFTATBgNVBAoTDERpZ2lDZXJ0IEluYzEZMBcG
A1UECxMQd3d3LmRpZ2ljZXJ0LmNvbTEgMB4GA1UEAxMXRGlnaUNlcnQgR2xvYmFsIFJvb3QgRzMw
HhcNMTMwODAxMTIwMDAwWhcNMzgwMTE1MTIwMDAwWjBhMQswCQYDVQQGEwJVUzEVMBMGA1UEChMM
RGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2Vy
dCBHbG9iYWwgUm9vdCBHMzB2MBAGByqGSM49AgEGBSuBBAAiA2IABN2n2buKuAv7C38h0vC+vnPz
M10avDTq3sabvNCV9vDM0Au6YVtRRn6eLZ/ujmMMF+wHcPXPhC5Ag5zoP0FtO63TpBRZNnidA0Pu
EBNsct6uiKeha7VDzmfcI/8DHKPiPqNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC
AYYwHQYDVR0OBBYEFLPbSKT5ocXYrjZBzBFjaWIpvEvGMAoGCCqGSM49BAMDA2gAMGUCMQCtvPJs
PxJK0S05wwoJl3P0iDaMiCe75oiNUIWnY/meMt5mkw/xzLEJj91sq/prf6ACMDlmW8JkjbieUNyo
1Umi7cfc0Ul/FwG4yIaPToyIK6iaqYrF0QC9+FTimuVbfLMnFwAAAAIALy9leHBvcnQvaGRhMy82
LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy83MmJmNmEwNC4wAAABMLsrWjoABVguNTA5AAAH+zCCB/cw
ggdgoAMCAQICAQAwDQYJKoZIhvcNAQEFBQAwggEUMQswCQYDVQQGEwJFUzESMBAGA1UECBMJQmFy
Y2Vsb25hMRIwEAYDVQQHEwlCYXJjZWxvbmExLjAsBgNVBAoTJUlQUyBJbnRlcm5ldCBwdWJsaXNo
aW5nIFNlcnZpY2VzIHMubC4xKzApBgNVBAoUImlwc0BtYWlsLmlwcy5lcyBDLkkuRi4gIEItNjA5
Mjk0NTIxLzAtBgNVBAsTJklQUyBDQSBDTEFTRUEzIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MS8w
LQYDVQQDEyZJUFMgQ0EgQ0xBU0VBMyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEeMBwGCSqGSIb3
DQEJARYPaXBzQG1haWwuaXBzLmVzMB4XDTAxMTIyOTAxMDc1MFoXDTI1MTIyNzAxMDc1MFowggEU
MQswCQYDVQQGEwJFUzESMBAGA1UECBMJQmFyY2Vsb25hMRIwEAYDVQQHEwlCYXJjZWxvbmExLjAs
BgNVBAoTJUlQUyBJbnRlcm5ldCBwdWJsaXNoaW5nIFNlcnZpY2VzIHMubC4xKzApBgNVBAoUImlw
c0BtYWlsLmlwcy5lcyBDLkkuRi4gIEItNjA5Mjk0NTIxLzAtBgNVBAsTJklQUyBDQSBDTEFTRUEz
IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MS8wLQYDVQQDEyZJUFMgQ0EgQ0xBU0VBMyBDZXJ0aWZp
Y2F0aW9uIEF1dGhvcml0eTEeMBwGCSqGSIb3DQEJARYPaXBzQG1haWwuaXBzLmVzMIGfMA0GCSqG
SIb3DQEBAQUAA4GNADCBiQKBgQDugAD2GmQurWrIg7GLp+6P2bbbzRu7hgYidjMMEm1IVmHS3IIl
Yi+f0mkwZQNCI1i8R9xr1nVdFzzh//JYZ3mgwYGx1Fai8o0Rmf32ffHHxF4CKpriSrUTigD9jHeG
5teU9SB1Lg5Mv3TEP4E+g7SjODYp5+gq9YyIQaqApuNs7wIDAQABo4IEUzCCBE8wHQYDVR0OBBYE
FB6fV1BHtmGTOdMs/NpdPQV1t5kCMIIBRgYDVR0jBIIBPTCCATmAFB6fV1BHtmGTOdMs/NpdPQV1
t5kCoYIBHKSCARgwggEUMQswCQYDVQQGEwJFUzESMBAGA1UECBMJQmFyY2Vsb25hMRIwEAYDVQQH
EwlCYXJjZWxvbmExLjAsBgNVBAoTJUlQUyBJbnRlcm5ldCBwdWJsaXNoaW5nIFNlcnZpY2VzIHMu
bC4xKzApBgNVBAoUImlwc0BtYWlsLmlwcy5lcyBDLkkuRi4gIEItNjA5Mjk0NTIxLzAtBgNVBAsT
JklQUyBDQSBDTEFTRUEzIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MS8wLQYDVQQDEyZJUFMgQ0Eg
Q0xBU0VBMyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEeMBwGCSqGSIb3DQEJARYPaXBzQG1haWwu
aXBzLmVzggEAMAwGA1UdEwQFMAMBAf8wDAYDVR0PBAUDAwf/gDBrBgNVHSUEZDBiBggrBgEFBQcD
AQYIKwYBBQUHAwIGCCsGAQUFBwMDBggrBgEFBQcDBAYIKwYBBQUHAwgGCisGAQQBgjcCARUGCisG
AQQBgjcCARYGCisGAQQBgjcKAwEGCisGAQQBgjcKAwQwEQYJYIZIAYb4QgEBBAQDAgAHMBoGA1Ud
EQQTMBGBD2lwc0BtYWlsLmlwcy5lczAaBgNVHRIEEzARgQ9pcHNAbWFpbC5pcHMuZXMwQgYJYIZI
AYb4QgENBDUWM0NMQVNFQTMgQ0EgQ2VydGlmaWNhdGUgaXNzdWVkIGJ5IGh0dHA6Ly93d3cuaXBz
LmVzLzApBglghkgBhvhCAQIEHBYaaHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi8wOwYJYIZIAYb4
QgEEBC4WLGh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvaXBzMjAwMkNMQVNFQTMuY3JsMEAGCWCG
SAGG+EIBAwQzFjFodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL3Jldm9jYXRpb25DTEFTRUEzLmh0
bWw/MD0GCWCGSAGG+EIBBwQwFi5odHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL3JlbmV3YWxDTEFT
RUEzLmh0bWw/MDsGCWCGSAGG+EIBCAQuFixodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL3BvbGlj
eUNMQVNFQTMuaHRtbDB1BgNVHR8EbjBsMDKgMKAuhixodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAy
L2lwczIwMDJDTEFTRUEzLmNybDA2oDSgMoYwaHR0cDovL3d3d2JhY2suaXBzLmVzL2lwczIwMDIv
aXBzMjAwMkNMQVNFQTMuY3JsMC8GCCsGAQUFBwEBBCMwITAfBggrBgEFBQcwAYYTaHR0cDovL29j
c3AuaXBzLmVzLzANBgkqhkiG9w0BAQUFAAOBgQBKPSBHGtqJ9HorMXnsAcDMAfXWwfzIw/NQAlGQ
WCqf5zUJWzAKgQAlR6/UDw6eYCaolaeDCN8trOkO95zIn8uTRfG6asZnUUppT2v+fQsvUinCUK0k
RO0js0jLREDBA5UMCngGEgH1kTEtSY27P0VOLODozbXJFBUM4weDmyZ17wAAAAIALi9leHBvcnQv
aGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzLzg0NzA3MTlkLjAAAAFRhbN7zwAFWC41MDkAAANl
MIIDYTCCAkmgAwIBAgIQCgEBAQAAAnwAAAAKAAAAAjANBgkqhkiG9w0BAQUFADA6MRkwFwYDVQQK
ExBSU0EgU2VjdXJpdHkgSW5jMR0wGwYDVQQLExRSU0EgU2VjdXJpdHkgMjA0OCBWMzAeFw0wMTAy
MjIyMDM5MjNaFw0yNjAyMjIyMDM5MjNaMDoxGTAXBgNVBAoTEFJTQSBTZWN1cml0eSBJbmMxHTAb
BgNVBAsTFFJTQSBTZWN1cml0eSAyMDQ4IFYzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC
AQEAt49VcdKA3XtpeafwGFAyPGJn9gqVB93mG/Oe2dJBVGutn3y+Gc37RqtBaB4Y6lXIL5F4iSj7
Jylg/9+PjDvJSZu1pJTOAeo+tWN7fyb9Gd3AIb2E0S1PRsNO3Ng3OTsor8udGuorryGlwSMiuLgb
WhOHV4PR8CDn6E8jQrAApX2J6elhc5SYcSa8LWrg903w8bYqODGBDSnhAMFRD0xS+ARaqn1y07iH
KrtjEAMqs6FPDVpeRrc9DvV07Jmf+T0kgYim3WBU6JU2PcYJk5qjEoAAVZkZR73QpXzDuvsf9/UP
+Ky5tfQ3mBMY3oVbtwyCO4dvlTlYMNpuAWgXIszACwIDAQABo2MwYTAPBgNVHRMBAf8EBTADAQH/
MA4GA1UdDwEB/wQEAwIBBjAfBgNVHSMEGDAWgBQHw1EwpKrpRa41JPr/JCwz0LGdjDAdBgNVHQ4E
FgQUB8NRMKSq6UWuNST6/yQsM9CxnYwwDQYJKoZIhvcNAQEFBQADggEBAF8+hnZuuDU8TjYcHnmY
v/3VEhF5Ug7uMYm83X/50cYVIeiKAVQNOvtUudZj1LGqlk2iQk3UUx+LEN5/Zb5gEydxiKRz44Rj
0aRV4VCT5hsOedBnvEbIvz8XDZXmxpBp3ue0L96VfdASPz0+f00/FGj1EVDVwfSQpQgdMWD/YIwj
VAqv/qFuxdF6Kmh4zx6CCiC0H63lhbJqaHVOrSU3lIW+vaHU6rcMSzyd6BIA8F+sDeGscGNz9395
nzIlQnQFgCi/vcEkllgVsRch6YlL2weIZ/QVrXA+L02FO8K32/6YaCOJ4XQP3vTFhGMpG8zLB8kA
pKnXwiJPZ9d37CAFYd4AAAACAC4vZXhwb3J0L2hkYTMvNy4yLjAvbG9jYWwvY29uZi9jZXJ0cy85
NTc1MDgxNi4wAAABSucYV7cABVguNTA5AAAD0TCCA80wggM2oAMCAQICEFNhsmCu23GOp5SzEzP0
BwkwDQYJKoZIhvcNAQEFBQAwgcExCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5j
LjE8MDoGA1UECxMzQ2xhc3MgMyBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0
eSAtIEcyMTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVk
IHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMB4XDTAwMDkyNjAwMDAw
MFoXDTEwMDkyNTIzNTk1OVowgaUxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZW
ZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTswOQYDVQQLEzJUZXJtcyBvZiB1c2UgYXQgaHR0cHM6Ly93
d3cudmVyaXNpZ24uY29tL3JwYSAoYykwMDEsMCoGA1UEAxMjVmVyaVNpZ24gVGltZSBTdGFtcGlu
ZyBBdXRob3JpdHkgQ0EwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBANIZnWfCACFZYs60CSJE
aYr4JVrb7Q23Nn5O4LuUPpAlh8JhRynZvVS4Y8wsfWm0Mzb0Nweawd1AVPzgeJ2gk7kJPSNRf0TC
FHTbCr7LyTA0QJg+0NclEIGUvQdPnNZUJ98uqL/LkIyNdUu84uhEh83mQQolbuj0JALFUg9u7Jh1
AgMBAAGjgd8wgdwwDwYDVR0TBAgwBgEB/wIBADBFBgNVHSAEPjA8MDoGDGCGSAGG+EUBBxcBAzAq
MCgGCCsGAQUFBwIBFhxodHRwczovL3d3dy52ZXJpc2lnbi5jb20vcnBhMDEGA1UdHwQqMCgwJqAk
oCKGIGh0dHA6Ly9jcmwudmVyaXNpZ24uY29tL3BjYTMuY3JsMAsGA1UdDwQEAwIBBjBCBggrBgEF
BQcBAQQ2MDQwMgYIKwYBBQUHMAGmJhYkaHR0cDovL29jc3AudmVyaXNpZ24uY29tL29jc3Avc3Rh
dHVzMA0GCSqGSIb3DQEBBQUAA4GBAIJwaJXftg3CAXAZStJUVh6s8kVMh7j1Net4SwWpyJ07GSEu
cDRKovWJ4BV1RecoNwA0JynoN0vy70SXaxdRGsNWnTwaivZKRkY3jPrL9WRaOGguHMPvcM64RgYW
v/d+57WoPkWsqSV1IntvP7CclOfHc6usH+4lm8AW7bfKW/AUAAAAAgAuL2V4cG9ydC9oZGEzLzcu
NC4wL2xvY2FsL2NvbmYvY2VydHMvODgyZGUwNjEuMAAAAVGFtC3MAAVYLjUwOQAAAzwwggM4MIIC
IKADAgECAgYgBgUWcAIwDQYJKoZIhvcNAQEFBQAwOzELMAkGA1UEBhMCUk8xETAPBgNVBAoTCGNl
cnRTSUdOMRkwFwYDVQQLExBjZXJ0U0lHTiBST09UIENBMB4XDTA2MDcwNDE3MjAwNFoXDTMxMDcw
NDE3MjAwNFowOzELMAkGA1UEBhMCUk8xETAPBgNVBAoTCGNlcnRTSUdOMRkwFwYDVQQLExBjZXJ0
U0lHTiBST09UIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtzO5fsglSo6127Qo
G6pXkOjRItNkutOT6NSshmFAamBXaFSETbxqVAIF/9+bmiquXQePSsMof+/7K/p58cet8BBTJJCL
ZsmoiKuvWqMA6b66Ru5bc3ssF4KBXmIsoQJls73FKwB+xPwDM1cN7eL6zl1F1jjNNbaywdCcgUqq
5LIBXB2PX5nEsa3biCHrkAiCgPMwo0PmkIKuVShJ7VvXqRA4Dv6PTFubRupB9bAIdMPQiDO2fNd0
39yE0UMOdTmhJUAo6njLDiwuOZ2Mi24WHC8mghDi42WUCgTAXvddW/gQ4tC6ekv73jcAABpbKOPS
nHM+MoeYoclRL9ferDOzTwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIB
xjAdBgNVHQ4EFgQU4Iyb2yVJs/F8htayQocL0Gug2eQwDQYJKoZIhvcNAQEFBQADggEBAD7SHIku
Nfz4dd3mf2WI9HJMySzXMk7z3Rl5R72OO1uTD1BJJBNrFAZy7wnToaHjQITJ5xgydDxIbg+fS9T3
HtOThmRUl2NyUNVVz/ogkwKim8Mjk04WVXagcHltzSEfzy8tvBnjiDH4WRqBCciXpnTHYMRbzFeO
snX9GwIJ21lvcpNp9zFB1og4v4eyvRZ5+arkvogl3WEnIxy1MQcENrQakL2gdHFQiW28FOMPhq7x
qz7HoAnMo0jR4Ntk55K1z69yQ3CL+cOEPBOqfpKbV1OT+nDCkQ4x+ZtnXemWOF5fs3NOiBVn3p52
EGIgvlVplUMAOU327rBaTklEVFhfQoMAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29u
Zi9jZXJ0cy84YzI0YjEzNy4wAAABUYW017EABVguNTA5AAAJijCCCYYwggduoAMCAQICAQswDQYJ
KoZIhvcNAQELBQAwggEeMT4wPAYDVQQDEzVBdXRvcmlkYWQgZGUgQ2VydGlmaWNhY2lvbiBSYWl6
IGRlbCBFc3RhZG8gVmVuZXpvbGFubzELMAkGA1UEBhMCVkUxEDAOBgNVBAcTB0NhcmFjYXMxGTAX
BgNVBAgTEERpc3RyaXRvIENhcGl0YWwxNjA0BgNVBAoTLVNpc3RlbWEgTmFjaW9uYWwgZGUgQ2Vy
dGlmaWNhY2lvbiBFbGVjdHJvbmljYTFDMEEGA1UECxM6U3VwZXJpbnRlbmRlbmNpYSBkZSBTZXJ2
aWNpb3MgZGUgQ2VydGlmaWNhY2lvbiBFbGVjdHJvbmljYTElMCMGCSqGSIb3DQEJARYWYWNyYWl6
QHN1c2NlcnRlLmdvYi52ZTAeFw0xMDEyMjgxNjUxMDBaFw0yMDEyMjUyMzU5NTlaMIHRMSYwJAYJ
KoZIhvcNAQkBFhdjb250YWN0b0Bwcm9jZXJ0Lm5ldC52ZTEPMA0GA1UEBxMGQ2hhY2FvMRAwDgYD
VQQIEwdNaXJhbmRhMSowKAYDVQQLEyFQcm92ZWVkb3IgZGUgQ2VydGlmaWNhZG9zIFBST0NFUlQx
NjA0BgNVBAoTLVNpc3RlbWEgTmFjaW9uYWwgZGUgQ2VydGlmaWNhY2lvbiBFbGVjdHJvbmljYTEL
MAkGA1UEBhMCVkUxEzARBgNVBAMTClBTQ1Byb2NlcnQwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAw
ggIKAoICAQDVt/SjlDOhRqlVYUkNqIdzXpEtcMEGGpTaPewVQsH1jK5qF/GKrfyAleqDRKJbelXO
T6el1bq4H6AnwFBTPo25wA64FdzWbPie+AQl34CPEIXdfS97gN1XAGQj+G7JvpVP4XXs4H5elc2x
7756QtjJLNPrGhoii7d/BonlPPUSwLvTC5lfkHyOLS93M5JKIUaoqQis8fYRAtmVFp6NL5bmAt11
whQqWtbJfSXCwfyqZ4Xi7L7RfDz6r9Vu/1NB1PUyOLHiX8T5jhDvBqkCif/jDG6X4N+d2yHQ9D4I
aWzY1OQ2+IO2sjaPnO86NxZ9v6Jp1ztbctCvqj9cZpOsCiJhttKgmchUk12ottG9XQped5SiLcCC
jrzKAyo0rnPx1LUMvb5nm1Tr4fqgWuw4fj7BzKLHRDF16j/lB9KroSWW9ubkoF03GDlhADNdRtQA
xLTKPPGioz7zOv9pMC5A3fafnCbJljet5zmiv+pp21UilVMqlLXfrRY4gXVm48csG5Ocqoyjytls
PBdtnNx8U+AgJ0M2+RLhPFy9Zr+iaSM4uJlgmQ5WUzqcfhSMsAZv8YZ2kK/9r/6Qxo+ff4uSI5zn
FXaP1YuUE3Jp+ythY4jv5qRe5qMXalhHy3FPFAteyAIIJqLL6a9rihnHyxRW9eHatdn8v3M42vnn
r26kN+IHJwIDAQABo4IDFzCCAxMwEgYDVR0TAQH/BAgwBgEB/wIBATA3BgNVHRIEMDAugg9zdXNj
ZXJ0ZS5nb2IudmWgGwYFYIZeAgKgEgwQUklGLUctMjAwMDQwMzYtMDAdBgNVHQ4EFgQUQQ8ZOKqZ
f0ILpNcnmFSiF0wtUVQwggFQBgNVHSMEggFHMIIBQ4AUrbsiHcbg0gGo/XZQUpPtmMFNrtOhggEm
pIIBIjCCAR4xPjA8BgNVBAMTNUF1dG9yaWRhZCBkZSBDZXJ0aWZpY2FjaW9uIFJhaXogZGVsIEVz
dGFkbyBWZW5lem9sYW5vMQswCQYDVQQGEwJWRTEQMA4GA1UEBxMHQ2FyYWNhczEZMBcGA1UECBMQ
RGlzdHJpdG8gQ2FwaXRhbDE2MDQGA1UEChMtU2lzdGVtYSBOYWNpb25hbCBkZSBDZXJ0aWZpY2Fj
aW9uIEVsZWN0cm9uaWNhMUMwQQYDVQQLEzpTdXBlcmludGVuZGVuY2lhIGRlIFNlcnZpY2lvcyBk
ZSBDZXJ0aWZpY2FjaW9uIEVsZWN0cm9uaWNhMSUwIwYJKoZIhvcNAQkBFhZhY3JhaXpAc3VzY2Vy
dGUuZ29iLnZlggEKMA4GA1UdDwEB/wQEAwIBBjBNBgNVHREERjBEgg5wcm9jZXJ0Lm5ldC52ZaAV
BgVghl4CAaAMDApQU0MtMDAwMDAyoBsGBWCGXgICoBIMEFJJRi1KLTMxNjM1MzczLTcwdgYDVR0f
BG8wbTBGoESgQoZAaHR0cDovL3d3dy5zdXNjZXJ0ZS5nb2IudmUvbGNyL0NFUlRJRklDQURPLVJB
SVotU0hBMzg0Q1JMREVSLmNybDAjoCGgH4YdbGRhcDovL2FjcmFpei5zdXNjZXJ0ZS5nb2IudmUw
NwYIKwYBBQUHAQEEKzApMCcGCCsGAQUFBzABhhtodHRwOi8vb2NzcC5zdXNjZXJ0ZS5nb2IudmUw
QQYDVR0gBDowODA2BgZghl4DAQIwLDAqBggrBgEFBQcCARYeaHR0cDovL3d3dy5zdXNjZXJ0ZS5n
b2IudmUvZHBjMA0GCSqGSIb3DQEBCwUAA4ICAQArWesimbuEqk/ekMbRhnEjnksDkUdwu8CSYOzg
1OdtxtPtZ4N3UtXy5XenNrLjVL7ZuwqbEe9h9MaZM5n1rwA5jYO/pr01fixcMTRvbNvzZAGYqpQs
Qd0VhsprKU4WwEn814NIEwdRhDFSiLuGF8drL4ogrcULj3A+KrsbcY+5pKD92JXZr1m/JSuY6WOT
L2AexKr4d/WLbC/tfi61T0AN7rxXd+fZttQ/lSc6INXlrqtsNZ/BoR1Z3ISB7k0H4ki2nkuVLUGx
4ejefi8FHmjuv7uQZTrI7uqxGDccYpOkoDHscWyR5qR5iVoUpxRQBUykAFcwLMG1YZbcPh6ErzlC
z+XQLLEkvN9Aw+1/Y0q94U8SZIaV87DnyLfhU72S5vMMlrnr6OaS7aeBCRQL/JV6z4/WNE82Etxe
0TR1xkaAL5UEjMeGxKgmiag/GZuBu1GkSoarCxEPsa5jU20o6t0zVjgcsq2A09dyvZpsmWPoALtB
dgW3W5kYisO4ElxWz1YMfejiz+28dEf77tMXTiJPVv9Q8y7mOaaC1nHK3rfVumgI7ZnM/aKSy2m4
nfkKpKY+T5MoKmFsByYA/5ZfaIa4uM7KVeCrsT1/mNczDlo92HjCxGAvx2LwYZHSOLD2nlXbQIAF
EjPOHZKb0Wmz/7/xkgphNT/d/ob0vOAacbNipgAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2Nh
bC9jb25mL2NlcnRzLzFlOGU3MjAxLjAAAAFRhbRqEwAFWC41MDkAAANjMIIDXzCCAkegAwIBAgIL
BAAAAAABIVhTCKIwDQYJKoZIhvcNAQELBQAwTDEgMB4GA1UECxMXR2xvYmFsU2lnbiBSb290IENB
IC0gUjMxEzARBgNVBAoTCkdsb2JhbFNpZ24xEzARBgNVBAMTCkdsb2JhbFNpZ24wHhcNMDkwMzE4
MTAwMDAwWhcNMjkwMzE4MTAwMDAwWjBMMSAwHgYDVQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBS
MzETMBEGA1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjCCASIwDQYJKoZIhvcN
AQEBBQADggEPADCCAQoCggEBAMwldpB5BngiFvXAg7aEyiie/QV2EcWtiHL8RgJDx7KKnQRfJMsu
S+FggkbhUqsMgUdwbN1k0ev1LKMPgj0MK66X17YUhhB5uzsTgHeMCOFJ0mpiLx9e+pZo34knlTif
Btc+ycsmWQ1z3rDI6SYOgxXG71uL0gRgykmmKPZpO/bLyCiR5Z2KYVc3rHQU3HTgOu5yLy6c+9C7
v/U9AOEGM+iCK65TpjoWc4zdQQ4gOsC0p6Hpsk+QLjJg6VfLuQSSaGjlOCZgdbKfd/+RFO+uIEn8
rUAVSNECMWEZXriX7613t2Saer9fwRPvm2L7DWzgVGkWqQPabumDk3F2xmmFghcCAwEAAaNCMEAw
DgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFI/wS3+oLkUkrk1Q+mOa
i97i3Ru8MA0GCSqGSIb3DQEBCwUAA4IBAQBLQNvAUKr+yAzv95ZURUm7lgAJQayzE4aGKAczymvm
dLm6AC2upArT9fHxD4q/c2dKg8dEe3jgr25sbwMpjjM5RcOO5LlXbKr8EpbsU8Yt5CRsuZRj+9xT
aGdWPoO4zzUhw8lo/s7awlOqzJCK6fBdRoyV3XpYKBovHd7NADdBj+1EbddTKJd+82cEHhXXipa0
095MJ6RMG3NzdvQXmcIfeg7jLQitChws/zyrVQ4PkX4268NXSb7hLi18YIvDQVETI53O9zJrlAGo
mecsMx86OyXShkDOOyyGeMlhLxS67ttVb9+E7gUJTb0o2HLO02JQZR7rkpeDMdmztcpHWD9fAAAA
AgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvOTVhZmY5ZTMuMAAAAVGFtJNc
AAVYLjUwOQAAA78wggO7MIICo6ADAgECAgMERMAwDQYJKoZIhvcNAQEFBQAwfjELMAkGA1UEBhMC
UEwxIjAgBgNVBAoTGVVuaXpldG8gVGVjaG5vbG9naWVzIFMuQS4xJzAlBgNVBAsTHkNlcnR1bSBD
ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEiMCAGA1UEAxMZQ2VydHVtIFRydXN0ZWQgTmV0d29yayBD
QTAeFw0wODEwMjIxMjA3MzdaFw0yOTEyMzExMjA3MzdaMH4xCzAJBgNVBAYTAlBMMSIwIAYDVQQK
ExlVbml6ZXRvIFRlY2hub2xvZ2llcyBTLkEuMScwJQYDVQQLEx5DZXJ0dW0gQ2VydGlmaWNhdGlv
biBBdXRob3JpdHkxIjAgBgNVBAMTGUNlcnR1bSBUcnVzdGVkIE5ldHdvcmsgQ0EwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQDj+32jcrrC8MkUh/VrAU7hbkAHum0nXX/3Wy2zWsdRX6uk
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
UlVTVGVkIFJvb3QgQ0FzMRowGAYDVQQDExFiZVRSVVNUZWQgUm9vdCBDQTAeFw0wMDA2MjAxNDIx
MDRaFw0xMDA2MjAxMzIxMDRaMFoxCzAJBgNVBAYTAldXMRIwEAYDVQQKEwliZVRSVVNUZWQxGzAZ
BgNVBAMTEmJlVFJVU1RlZCBSb290IENBczEaMBgGA1UEAxMRYmVUUlVTVGVkIFJvb3QgQ0EwggEi
MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDUtHN6Ewo4VQG+iVbhlJ7UvlrrSjR1G2EpxOGt
CGAheEj/tND6XkGNYUSH6O3JWPr8k5rfT+o+NX34M3rm8dfNb0lLPU8tbg6DOhh4d6PP5/RNc9ia
OxodvpVTzyCXws8+JFJsDI5lWcVx/2IJj6rFj8xgoHNK1zg/FXK/ope3cOiv4n4WBkz1qmQmcgcl
rTX8GLEm19j/GQ6DG4zceEVnND30rxyN5G1r7SCzZ5q0YcsXb4k1/+dOwDIS5+7s3/+XMHTtjUeO
67TDROanTH9WQ+i4vLa++oOX5rv7xLaTvhkYPoyBuXOIFvSWQ5xncxeQ2AluY6xKtiPEAaGtpOTF
AgMBAAGjggH4MIIB9DAPBgNVHRMBAf8EBTADAQH/MIIBWQYDVR0gBIIBUDCCAUwwggFIBgorBgEE
AbE+AQAAMIIBODCCAQEGCCsGAQUFBwICMIH0GoHxUmVsaWFuY2Ugb24gdGhpcyBjZXJ0aWZpY2F0
ZSBieSBhbnkgcGFydHkgYXNzdW1lcyBhY2NlcHRhbmNlIG9mIHRoZSB0aGVuIGFwcGxpY2FibGUg
c3RhbmRhcmQgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdXNlLCBhbmQgY2VydGlmaWNhdGlvbiBw
cmFjdGljZSBzdGF0ZW1lbnQsIHdoaWNoIGNhbiBiZSBmb3VuZCBhdCBiZVRSVVNUZWQncyB3ZWIg
c2l0ZSwgaHR0cHM6Ly93d3cuYmVUUlVTVGVkLmNvbS92YXVsdC90ZXJtczAxBggrBgEFBQcCARYl
aHR0cHM6Ly93d3cuYmVUUlVTVGVkLmNvbS92YXVsdC90ZXJtczA0BgNVHR8ELTArMCmgJ6AlpCMw
ITESMBAGA1UEChMJYmVUUlVTVGVkMQswCQYDVQQGEwJXVzAdBgNVHQ4EFgQUKrmbaS47m9jN3iox
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
zl0u3Xk88Vumt6K1OQ2OEjECAwEAAaOCARIwggEOMB0GA1UdDgQWBBR/G2ShLgLFqH240bGLBp2j
qVBjkjCB3gYDVR0jBIHWMIHTgBR/G2ShLgLFqH240bGLBp2jqVBjkqGBt6SBtDCBsTELMAkGA1UE
BhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9saW5hMRAwDgYDVQQHEwdSYWxlaWdoMRYwFAYDVQQK
Ew1SZWQgSGF0LCBJbmMuMRgwFgYDVQQLEw9SZWQgSGF0IE5ldHdvcmsxIjAgBgNVBAMTGVJITiBD
ZXJ0aWZpY2F0ZSBBdXRob3JpdHkxITAfBgkqhkiG9w0BCQEWEnJobi1ub2NAcmVkaGF0LmNvbYIB
ADAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBAUAA4GBAChNQuU0It3GhmMEdVJnF0Vy8jshK0VZ
cnP3WTadV0PG3JQPDv8TXE9QN4Wy5MIfNZ909OdT+6EGuDnO5AqGe18oXccRnhKl1rls6RgJ1fBC
51S1kZ4jrRJ6qnJ8OTyD+HWkewOS/yrUxXYZEvq0O7CJLJWMAZAN2LoGBWEArJXaAAAAAgAuL2V4
cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvNzY1NzkxNzQuMAAAAUrnGMf4AAVYLjUw
OQAABDQwggQwMIIDGKADAgECAhBQlGzsGOrVnE3Vl+91j6CtMA0GCSqGSIb3DQEBBQUAMIGCMQsw
CQYDVQQGEwJVUzEeMBwGA1UECxMVd3d3LnhyYW1wc2VjdXJpdHkuY29tMSQwIgYDVQQKExtYUmFt
cCBTZWN1cml0eSBTZXJ2aWNlcyBJbmMxLTArBgNVBAMTJFhSYW1wIEdsb2JhbCBDZXJ0aWZpY2F0
aW9uIEF1dGhvcml0eTAeFw0wNDExMDExNzE0MDRaFw0zNTAxMDEwNTM3MTlaMIGCMQswCQYDVQQG
EwJVUzEeMBwGA1UECxMVd3d3LnhyYW1wc2VjdXJpdHkuY29tMSQwIgYDVQQKExtYUmFtcCBTZWN1
cml0eSBTZXJ2aWNlcyBJbmMxLTArBgNVBAMTJFhSYW1wIEdsb2JhbCBDZXJ0aWZpY2F0aW9uIEF1
dGhvcml0eTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJgkHr0VtLrfx4ylJ7Y4C2nz
tk6oLC4hHVxE3yFdfiN0/l5+tEq3pq0fruAGFuKbW9lndGtdgI8pnYYb2ZwNmG12EChY5GWwf0qY
eZ/gwzF+gCu1jMBAOxGG0MuihjZgpNUwgm3ZbtAPEgQzl19PYVrw5PmRq+cdO7zoz/RrLTR84khh
HI7zYUTMb6BKqZSwTdrnqTR6cjioQcw8lBF968imjLeGy8ozO9k9N4v7ej6GLOdz1wpXrGSbGev0
DwQIiqwDFxlk9FolIo00LLL2aB0SbdOKHhTaxI+m4iOF1XoNvWrg6ezsF7tCG2eqJe1FgyH8wcl8
1WI++vLFLdP91GUCAwEAAaOBnzCBnDATBgkrBgEEAYI3FAIEBh4EAEMAQTALBgNVHQ8EBAMCAYYw
DwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxk+iPQZjhAmczmLkBKyNXLXpthswNgYDVR0fBC8w
LTAroCmgJ4YlaHR0cDovL2NybC54cmFtcHNlY3VyaXR5LmNvbS9YR0NBLmNybDAQBgkrBgEEAYI3
FQEEAwIBATANBgkqhkiG9w0BAQUFAAOCAQEAkRU5AwEbZ/tKHPkKYFuh2k2XYvkkUyfXgmROkC7D
SRsrmtz8qHhnNfEd8BG9t0jjEPYN3z/SybaqVaRIugLb3lkuFVs7nRZ9R9c36l9NdhI2ux/XoYEE
RiCjLG2pngF+PynOAJPf/cmSc4mJZJ7nK+QckSzSuc59zm8xmdPmvtIekPAJFHlcI6tN0tohH02Z
eZ3hzyefEJsciA2wimRBMbgObJAkpJtccY+6u34cG9tqgA8hvOnbprdA9LKLqbHk75oa0D1pme6o
KKPhPLPwshGcz3xA5t3nQ32i2Dq1qY3yNJnE1BDhBv0JhBA77sRM9OwnfELCdHyCignJtAMlvAAA
AAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzL2M5MGJjMzdkLjAAAAFRhbUQ
cwAFWC41MDkAAAOSMIIDjjCCAnagAwIBAgIQAzrx5qcRqaC7KGSxHQn65TANBgkqhkiG9w0BAQsF
ADBhMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGln
aWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBHMjAeFw0xMzA4MDExMjAw
MDBaFw0zODAxMTUxMjAwMDBaMGExCzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMx
GTAXBgNVBAsTEHd3dy5kaWdpY2VydC5jb20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290
IEcyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuzfNNNx7a8myaJCtSnX/RrohCgiN
9RlUyfuI2/Ou8jqJkTx65qsGGmvPrC3oXgkkRLpimn7Wo6h+4FR1IAWsULecYxpsMNzaHxmx1x7e
/dfgy5SDN67sH0NO3Xss0r0upS/kqbitOtSZpLYl6ZtrAGCSYP9PIUkY92eQq2EGnI/yuum06ZIy
a7XzV+hdG82MHauVBJVJ8zUtluNJbd134/tJS7SsVQepj5WztCO7TG1F8PapspUwtP1MVYwnSlcU
fIKdzXOS0xZKBgyMUNGPHgm+F6HmIcr9g+UQvIOlCsRnKPZzFBQ9RnbDhxSJITRNrw9FDKZJobq7
nMWxM4MphQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4E
FgQUTiJUIBiV5uNu5g/6+rkS7QYXjzkwDQYJKoZIhvcNAQELBQADggEBAGBnKJRvDkhj6zHd6mcY
1Yl9PMWLSn/pvtsrF9+wX3N3KjITOYFnQoQj8kVnNeyIv/iPsGEMNKSuIEyExtv4NeF22d+mQrvH
RAiGfzZ0JFrabA0UWTW98kndth/Jsw1HKj2ZL7tcu7XUIOGZX1NGFdtom/DzMNU+MeKNhJ7jitra
lj41E6Vf8PlwUHBHQRFXGU7Aj64GxJUTFy8bJZ918rGOmaFvE7FBcf6IKshPECBV1/MUReXgRPTq
h5Uykw7+U0b6LJ3/iyK5S9kJRaTepLiaWN0bfVKfjllDiIGknibVb63dDcY3fe0Dkhvld1927jyN
xF1WW6LZZm6zNTflMrYAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy83
NTVmNzQyMC4wAAABUYW1VNcABVguNTA5AAADJDCCAyAwggIIoAMCAQICASQwDQYJKoZIhvcNAQEF
BQAwOTELMAkGA1UEBhMCRkkxDzANBgNVBAoTBlNvbmVyYTEZMBcGA1UEAxMQU29uZXJhIENsYXNz
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
RWo9F7/snXUMrqNvWtMvmDb08PUZqxFdyKbjKlhqQgnDvZImZjINXQhVdP+MmNAKpoRq0Tl9AAAA
AgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvZTI2OGE0YzUuMAAAAUrnGEZy
AAVYLjUwOQAABBwwggQYMIIDAKADAgECAgEBMA0GCSqGSIb3DQEBBQUAMGUxCzAJBgNVBAYTAlNF
MRQwEgYDVQQKEwtBZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRkVHJ1c3QgVFRQIE5ldHdvcmsxITAf
BgNVBAMTGEFkZFRydXN0IENsYXNzIDEgQ0EgUm9vdDAeFw0wMDA1MzAxMDM4MzFaFw0yMDA1MzAx
MDM4MzFaMGUxCzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRk
VHJ1c3QgVFRQIE5ldHdvcmsxITAfBgNVBAMTGEFkZFRydXN0IENsYXNzIDEgQ0EgUm9vdDCCASIw
DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJaW1CFJYOJr6EEHDN7E4NwTI83BNcf71k4RCmde
9QZba6UIO1spFjrnh7I0BsW8BaUDfILLKRCu4YiBvdae0/4tVsEVzuMmnRUuEPsGjzAE3qe0Y7T/
sZyuPK93tlbFtaui6Wk6PQ4zeTI/cIKSmWFtjTAIj3E/pkhXGfgl3EtmXKV0j5iuyPnABiLnrHPf
pS77UtyxFWUg+jVmad7fLPFuvDDbLCQS2+s1NWiQywCwlyE9dCEjZTQru3hZo9bhdjmapEmOjHSv
bqSao9mb0jhcm6IYzHUjhL7r4k0zcY4a8ML4xx2irQOXLPjPJcb2uCQxsWNdkn9j8CXJUy4fv00C
AwEAAaOB0jCBzzAdBgNVHQ4EFgQUlbG08JS2vcfa0REJIb7Br0n9EHswCwYDVR0PBAQDAgEGMA8G
A1UdEwEB/wQFMAMBAf8wgY8GA1UdIwSBhzCBhIAUlbG08JS2vcfa0REJIb7Br0n9EHuhaaRnMGUx
CzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRUcnVzdCBBQjEdMBsGA1UECxMUQWRkVHJ1c3QgVFRQ
IE5ldHdvcmsxITAfBgNVBAMTGEFkZFRydXN0IENsYXNzIDEgQ0EgUm9vdIIBATANBgkqhkiG9w0B
AQUFAAOCAQEALG1kGx/NDd25AfqWYzQySEeZrpft/XIWpnNHWvTr3en11vtFzCmJRF2/Rjk96O68
TVSGHh1s4xcnQ+GJViupb3JOSTPjcnwqI5q8Pv8oKu2j/xwjukNXCWdNS2IGLfj/bJ1gHtgcS321
MS/Z0Hxd+N5rgxh4N1cv6DMHZ98ex2sqlXauj1ej8PRStKlTCM/gT9N6U4v9uxxWNvL+srbldrvV
ImWnP/7RZq0LvGuZhu8/ffMYMsp7xuOrZEaV+CZp2VWDeyyWB/9ZLESjxuXpqdyhY4BaIV4hz1NU
8LpviduoqpXPi+NxzB4bIEQIwHq2QP3E5DXhHRYc0LwrjtZx2QAAAAIALi9leHBvcnQvaGRhMy83
LjIuMC9sb2NhbC9jb25mL2NlcnRzLzIzZjRjNDkwLjAAAAFK5xjNpgAFWC41MDkAAAQTMIIEDzCC
AvegAwIBAgIBADANBgkqhkiG9w0BAQUFADBoMQswCQYDVQQGEwJVUzElMCMGA1UEChMcU3RhcmZp
ZWxkIFRlY2hub2xvZ2llcywgSW5jLjEyMDAGA1UECxMpU3RhcmZpZWxkIENsYXNzIDIgQ2VydGlm
aWNhdGlvbiBBdXRob3JpdHkwHhcNMDQwNjI5MTczOTE2WhcNMzQwNjI5MTczOTE2WjBoMQswCQYD
VQQGEwJVUzElMCMGA1UEChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjEyMDAGA1UECxMp
U3RhcmZpZWxkIENsYXNzIDIgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggEgMA0GCSqGSIb3DQEB
AQUAA4IBDQAwggEIAoIBAQC3Msj+6XGmBIWtDBFk385N78gDGIc/oav7PKaf8MOh2tTYbitTkPsk
pD6E8J7oX+zlJ0T1KKY/e97gKvDIr1MvnsoFAZMej2YcOadN+lq2cwQlZut3f+dZxkqZJRRU6ybH
838Z1TBwj6+wRir/resp7defqgSHo9T5iaU0X9tDkYI22WY8sbi5gv2cOj4QyDvvBmVmepsZGD3/
cVE8MC5fvj13c7JdBmzDI1aaK4UmkhynArPkPw2vCHmCuDY96pzTNbO8acr1zJ3o/WSNF4Azbl5K
XZnJHoe0nRrA1W4TNSNe35tfPe/W93bC6j67eA0cQmdrBNj41tpvi/JEoAGrAgEDo4HFMIHCMB0G
A1UdDgQWBBS/X7fRzt0fhvRbVazc1xDCDqmI5zCBkgYDVR0jBIGKMIGHgBS/X7fRzt0fhvRbVazc
1xDCDqmI56FspGowaDELMAkGA1UEBhMCVVMxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dp
ZXMsIEluYy4xMjAwBgNVBAsTKVN0YXJmaWVsZCBDbGFzcyAyIENlcnRpZmljYXRpb24gQXV0aG9y
aXR5ggEAMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBAAWdP4id0ckaVaGsafPzWdqb
AYcaT1epoXkJKtv3L7IezMdeatiDh6GX70k1PncGQVhiv45YuApnP+yz3SFmH8lU+nLMPUxA2IGv
d56Deruix/U0F47ZEUD0/CwqTRV/p2JdLiXTAAsgGh1o+Re49L2L7ShZ3U0WixeDyLJlxy16paq8
U4Zt3VekyvggQQto8PT7dL5WXXp59fkdheMtlb71cZBDzI0fmgAKhynpVSJYACPq4xJDKVtHCN2M
QWplBqjlIapBtJUhlbl90TSrE9atvNziPTnNvT51cKEYWQPJIrSPnNVeKtelttQKbfi3QBFGmh95
DmK/D5fs4C8fF5QAAAACAC4vZXhwb3J0L2hkYTMvNy4yLjAvbG9jYWwvY29uZi9jZXJ0cy81ZjVl
NWNhYS4wAAABSucYVmsABVguNTA5AAADozCCA58wggMMoAMCAQICEQD/RdUnXST7s8I5JFNX4U/e
MA0GCSqGSIb3DQEBBQUAMF8xCzAJBgNVBAYTAlVTMSAwHgYDVQQKExdSU0EgRGF0YSBTZWN1cml0
eSwgSW5jLjEuMCwGA1UECxMlU2VjdXJlIFNlcnZlciBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAe
Fw0wMDA4MDQwMDAwMDBaFw0wNDA4MDMyMzU5NTlaMIGeMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5j
LjEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazE7MDkGA1UECxMyVGVybXMgb2YgdXNl
IGF0IGh0dHBzOi8vd3d3LnZlcmlzaWduLmNvbS9SUEEgKGMpMDAxJTAjBgNVBAMTHFNlY3VyZSBT
ZXJ2ZXIgT0NTUCBSZXNwb25kZXIwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBALhRmWSFDu6z
Cmjwv2N2HVP1/KF4jDPun/S+OdqbD01HqY8g6EtEvc7Ne5DRMOiQxCV7iSjevfaTHf+5/5K1qY3k
rsziwweDaqNyEAEnYiKmNSY5LZ7PYAz8R6TX0EJ4px1s0MtPFacpCrSVRcSx51oJ1zmV2B01nsK9
s13BDEsfAgMBAAGjggEdMIIBGTAgBgNVHREEGTAXpBUwEzERMA8GA1UEAxMIT0NTUCAxLTQwPgYD
VR0fBDcwNTAzoDGgL4YtaHR0cDovL2NybC52ZXJpc2lnbi5jb20vUlNBU2VjdXJlU2VydmVyLXAu
Y3JsMBMGA1UdJQQMMAoGCCsGAQUFBwMJMEIGCCsGAQUFBwEBBDYwNDAyBggrBgEFBQcwAaYmFiRo
dHRwOi8vb2NzcC52ZXJpc2lnbi5jb20vb2NzcC9zdGF0dXMwRAYDVR0gBD0wOzA5BgtghkgBhvhF
AQcBATAqMCgGCCsGAQUFBwIBFhxodHRwczovL3d3dy52ZXJpc2lnbi5jb20vUlBBMAkGA1UdEwQC
MAAwCwYDVR0PBAQDAgeAMA0GCSqGSIb3DQEBBQUAA34AALMQU2acSZMuMaACQtJYV35mof4bimEY
UEAsHitBpdbb/6wIHFoFbQJcKraWT0fbvk7bzsy6hrgYzrESkV9j9/NIPszxTRPkbQmUeACSy6Mg
nQYLaqBDB87RGWyPGHWanxcz/akmuOPi3sKoxFqKf5jWBwZrzFaehnDO1O8AAAACAC4vZXhwb3J0
L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy8yZDlkYWZlNC4wAAABUYW0wkkABVguNTA5AAAF
XTCCBVkwggNBoAMCAQICAQIwDQYJKoZIhvcNAQELBQAwTjELMAkGA1UEBhMCTk8xHTAbBgNVBAoM
FEJ1eXBhc3MgQVMtOTgzMTYzMzI3MSAwHgYDVQQDDBdCdXlwYXNzIENsYXNzIDMgUm9vdCBDQTAe
Fw0xMDEwMjYwODI4NThaFw00MDEwMjYwODI4NThaME4xCzAJBgNVBAYTAk5PMR0wGwYDVQQKDBRC
dXlwYXNzIEFTLTk4MzE2MzMyNzEgMB4GA1UEAwwXQnV5cGFzcyBDbGFzcyAzIFJvb3QgQ0EwggIi
MA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCl2gqVFlDjlfJenXYxBjJ6m/EQdrgAmrVSNs0k
R7CfGGS8mvb61XnYkGJMIi/eOD3W4KjpHCzbeBHpjmhRFXLH8zOH5KBdC1zgVwcqMPXNxDd3KE0Y
kea/1VL9cS1wPufGxIrj8CgL9HaYoYuHVbI6E/y3Pic3jiLjqE8q72C7Pbc5ww4BR5ldEk/bQ/pX
oe35nb4RRyZbE5irXRaKsDccV51F/4iWNr+7ygd7b4dj19AyatZdbAzxs2454msxLjkAJxTeOMDs
GWaGEuidchYTZFLHqTcc/YIw7YQYHfSuXP9wEwDrsfUzekvWVfgFjUtpsPWzKDZcFMRRc01rC/E0
B9sXOdfcKHtr9Z/zLsFPFyoQ88zK6Ov9a6sump8tgm4E1FIBky09hvx+/N/vQh2ma++5IMb3vaCn
lf2n5okk2MyMNGziIy/ZEhohuVWRbwuReRkMrUCIC3DietIO2GhIu4ITORBY6dgqB8YS21jb0jtV
EEcFFWdifhhjpkY/CQ5UMl6/DWJ6J++A6NvZSwZaN1ol0AgSd9RvCVCXPcgdw9+MRTBWxtNkq2bz
wF6WnMPE78N8a4s6eX+zSc894omfoDBLhbmclCR5j31rqUVoDyvQ8docy2m4yklibcjQY2LdYA9Y
qo+hvAWlZqLPG3ayhGSxTDlSwDC68IxLArC2twIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0G
A1UdDgQWBBRHuM3/5W/u+LLsL04O+SWwjjxrwzAOBgNVHQ8BAf8EBAMCAQYwDQYJKoZIhvcNAQEL
BQADggIBAAAgI0E1BJDCQGJg7+I1TNc/rOI0kLihb3b6FhakSDcs6ZDC8jz4Cp/YgeW7W9olLKSn
VXEkMvbIC/K8aviTrLIHwl+f28zIiqq+am/hSRDMMdeAu7vI2KIOZFfqovXCqTEV0iBq7PwiASjP
hriAHqnMEaU88hazR5380oAhxMvQR3BBocqDGQgsbfJdd5yKFBPUNhyS8OUGN9ym5pCbOI9caxtG
hkNCXz4BB1NUXWV994pzoZpUWh8pQxQnwoUPtYh7GjuUtx1gp7Wc5ylpV1qbk3pDMBsD12LIQKaq
/GTkSteRUwGoIIhunF9EuctggTTsb9N92khf67SQvC2pHAusHNWiaCCABNb8sY8vu0oxDUqGHOvi
Nikm9drYxPJ1Yc9+rnZjSnpAZZOH+B6AjIblhtaPDvxTLGDoFmEaoj5De805YFRq9fKJJgFog0ii
M+jJBJGyETQRPurQQxkfA5OQDP9RPVf0QW7hy6C+68ljzW3M5Pg2qmid7b1dl3BEDbYONdzhDF27
oFGUy34W6xEvo5JFyExx2bzJmVJXRi9Qz701afQ9Fc4GpSwPPvaBupS7w7u/ZXjShnn/STsagwzw
3njsyPJNTBregin4wVra7e7mJ17oRdCdHFGoaKtE49CLauP4O7vcTddk8lG+5qqrWukx7ga8c78T
Ygqfx7mXAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvMWRhYzMwMDMu
MAAAAVGFs8spAAVYLjUwOQAABA0wggQJMIIC8aADAgECAhANXpkK1p23eOzYB1Y7hhXZMA0GCSqG
SIb3DQEBBQUAMFsxCzAJBgNVBAYTAlVTMSAwHgYDVQQKExdEaWdpdGFsIFNpZ25hdHVyZSBUcnVz
dDERMA8GA1UECxMIRFNUIEFDRVMxFzAVBgNVBAMTDkRTVCBBQ0VTIENBIFg2MB4XDTAzMTEyMDIx
MTk1OFoXDTE3MTEyMDIxMTk1OFowWzELMAkGA1UEBhMCVVMxIDAeBgNVBAoTF0RpZ2l0YWwgU2ln
bmF0dXJlIFRydXN0MREwDwYDVQQLEwhEU1QgQUNFUzEXMBUGA1UEAxMORFNUIEFDRVMgQ0EgWDYw
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC5PfUsyZTcdYqVXWPohHd2ZrlZkVxG3ZI+
n/kOA7Q9YZK9Iya1Y+6S0p7WPMgNkF9kgbGoCA1M2PnTBShStAElxZUcDH4+EIR1z8EZkWPP6KiR
iLlDUruAsVWJizH60Ld2vkE9MJqkIiUXc+ge4tOsKr1bOCHVKkvXVX3jOlW9121rAldr5kd8CMiC
ut6nhz2hbbgwVsKzAoFfLfXimjAYKLhm08sBlm/qikVV1uCd/2crFwKmThpqEQt+t3vnmNaMdm/B
O9tQk37l0I4fN7i9usafbOl8M/IyPCZH+ickAsl+HVuIQhNqNXx9NekuZpFyk9UyJsR09VOjs12a
9gnLAgMBAAGjgcgwgcUwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAcYwHwYDVR0RBBgw
FoEUcGtpLW9wc0B0cnVzdGRzdC5jb20wYgYDVR0gBFswWTBXBgpghkgBZQMCAQEBMEkwRwYIKwYB
BQUHAgEWO2h0dHA6Ly93d3cudHJ1c3Rkc3QuY29tL2NlcnRpZmljYXRlcy9wb2xpY3kvQUNFUy1p
bmRleC5odG1sMB0GA1UdDgQWBBQJcgZOGEMP5dbMw2qLMXt4j6iDuDANBgkqhkiG9w0BAQUFAAOC
AQEAo9iO1rLbzgXnMs0B0wQD5XbkViucmZDoCDBs33097uW/tSRAhEnh0SiuxMI6UzCI8fV3blHK
+v+ZryRfG6D98qyEyt+p8F8ELq0WvyGXEIE94/+HjTLclOVHil5qE8mUlT3S7sg0ldCA1K0yCIBU
POC9UlPXUnyyaT9/es9qdMr6BCqcTFoGpekgrUVmD2nx3b/p4zKL+uDBhk1yPC7Yk3gKKvjY0ic9
GYlfWnuKO8wM2lGuxwv3K7A3Bey8VyPiONKbaPNWEohPQny4McS12+TIITTpSBE17vrHklfFnzTk
x/b3DgtMnGh4e3Exx+se4GdB87egp83lejM2avqaKwAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9s
b2NhbC9jb25mL2NlcnRzLzI3YWY3OTBkLjAAAAFRhbRA0QAFWC41MDkAAAKyMIICrjCCAjWgAwIB
AgIQPLL0SAoA4v7rJDteYD7DazAKBggqhkjOPQQDAzCBmDELMAkGA1UEBhMCVVMxFjAUBgNVBAoT
DUdlb1RydXN0IEluYy4xOTA3BgNVBAsTMChjKSAyMDA3IEdlb1RydXN0IEluYy4gLSBGb3IgYXV0
aG9yaXplZCB1c2Ugb25seTE2MDQGA1UEAxMtR2VvVHJ1c3QgUHJpbWFyeSBDZXJ0aWZpY2F0aW9u
IEF1dGhvcml0eSAtIEcyMB4XDTA3MTEwNTAwMDAwMFoXDTM4MDExODIzNTk1OVowgZgxCzAJBgNV
BAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJbmMuMTkwNwYDVQQLEzAoYykgMjAwNyBHZW9UcnVz
dCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxNjA0BgNVBAMTLUdlb1RydXN0IFByaW1h
cnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMjB2MBAGByqGSM49AgEGBSuBBAAiA2IABBWx
6P0DFUPlrOuHNxFi79KDNlJ9RVcLSo17VDs6bl8VAsBQps8lL33KSLjHUGMcKiEIfJo22Av+0SbF
WDEwKCXzXV2juLaltJLtbCyf691DiaI8S0iRHVDsJt/WYC69IaNCMEAwDwYDVR0TAQH/BAUwAwEB
/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFBVfNVdRVfslsq0DafwBo/q+EVXVMAoGCCqGSM49
BAMDA2cAMGQCMGSWWaboCd6LuvpaiIjwH5HTRqjySkwCY/tsXzjbLkGTqQ7mndwxHLKgpxgceeHH
NgIwOlavmnRs9vuD4DPTCF+hnMJbn0bWtsuRBmOiBuczrD6ogRLQy7rQkgu2npaqBA+KAAAAAgAu
L2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvMmZiMTg1MGEuMAAAAVGFs4ljAAVY
LjUwOQAABagwggWkMIIDjKADAgECAgEBMA0GCSqGSIb3DQEBBQUAMGMxCzAJBgNVBAYTAlVTMRww
GgYDVQQKExNBbWVyaWNhIE9ubGluZSBJbmMuMTYwNAYDVQQDEy1BbWVyaWNhIE9ubGluZSBSb290
IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IDIwHhcNMDIwNTI4MDYwMDAwWhcNMzcwOTI5MTQwODAw
WjBjMQswCQYDVQQGEwJVUzEcMBoGA1UEChMTQW1lcmljYSBPbmxpbmUgSW5jLjE2MDQGA1UEAxMt
QW1lcmljYSBPbmxpbmUgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAyMIICIjANBgkqhkiG
9w0BAQEFAAOCAg8AMIICCgKCAgEAzEFFHek9TRD2jLFByeBeyw23v0dz0/BVTd3GDPqxZgVqzXi0
3ALbToHz16d8cbx1Y6Bd4wcMSOwlxAMg9P8OOxL/m43hxtUbtG0i47HbfyFkr4a8VyIq1keBV0SC
VlO9hhQBC/x/dKRarvG6EbWbWFqAtDd4CTN8MkcDXMSlg0j0V1ZugTYnGE/smyjC1LTXfAw+DCvf
ygTXxo7qWE6opKUYHGxFmKNB0S3Sx22NGfGtebeBP70GgictEFgFtXgFuS/bDGuQkH4UWTi7lCQT
5dGdFN/Tgk1G8IA5UjIP44SyekPyXt5fPx3d47IboKEqIwNuLgEVh1ymdXXHl2G+3obc1EjbvSq/
SlXa6H1Q+7SAF7iUvwE96tq6fOBYZxe5WOCIhkZnbJ0QR1gy0DV8eSqQoloQESM1rS/M5Epbp8gn
8oPeXrted+fopW5jwg1dYdCM0mxaIQ7KKKPOKumVx0jPlm8dkiXIxsbBwQwFrCbE0nXS4SpnwD1b
pZrrz3saqJ0UReUPoJpl3i8ovc5vlGaDSCnY6mWMr5PZZJ9VVya/b8s3MZmjYLscrYk0MmK4QyEG
cgyhXG1GxfopzzDeidxxW922Nz7fUPW4ByUm5by1/jwCs7f4vkPBhxGUniNsF4q4iicMVEfwqbPA
gIygJ+sdGeMHjndwyiv0fXbgeGcCAwEAAaNjMGEwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU
TUXBaDi7c6lpoSDn7fUioSMU154wHwYDVR0jBBgwFoAUTUXBaDi7c6lpoSDn7fUioSMU154wDgYD
VR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBBQUAA4ICAQBnawa5X0U7Kkszs+Yba1lOIsy5t6QlyafE
8FSWC2TzsVhPXlH8spd7J2XC5crnDQwle2Lj+p+0h7dFRq+DpZdIjKW98RYrm3YsejVgbBGAl8yp
klLmK+Zp7an4Ni0sd79hSNFjC7lbUu0YsENCIqaxd67eacXNxxyhsaUcEPsYvhpw3cGSS74pWp0/
Nb7lfVH4VeAldSOHHlzcup2wrLNp2xeDyffeDLwI3JGeqNDXFTdzpTW4/H7FREAGw+v4IoBcR84C
4xGfRP/9mjLMfWRRDutXJnY64x4iPMKmNt0Z76f8EvMmwFkxhUyc2M/fpMzMKZP/lG12XBMIl/Lt
pQtN3ejJaA5m0wAOMxJbvJXlMpCos8Zsg6137ot+frGpq9Ph8bbAseqIwOfTkOkokpR7aHuXKgpn
LYUCOBDkA2HU2iU2xwhYLaGnUa8wCkn1pmmHBy1ERnaOKuWaO9cYovycOBDMxjvStRc6b/2uJb31
cllksXQqOF8YTN/PcQRaNtS/L5mc6Nm6sZXmAkshoVvVwU+PrmltU9sBk7VcHhjdZFrKGCg+YwQR
/RyNAA+4N99nip1mqQJqkf8Tyi9dg7yHk2zcJFEWBCVm+rPZwropvppIOIKZ9L87SjEZ+b+OITMU
yk9UX/vO+49xf/1eGaAPS5G4xFS8BrBFjyaRoo7+qQAAAAIALi9leHBvcnQvaGRhMy83LjIuMC9s
b2NhbC9jb25mL2NlcnRzL2Y5NTBjY2MyLjAAAAFK5xiMRwAFWC41MDkAAAfuMIIH6jCCB1OgAwIB
AgIBADANBgkqhkiG9w0BAQUFADCCARIxCzAJBgNVBAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmEx
EjAQBgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UEChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2Vy
dmljZXMgcy5sLjErMCkGA1UEChQiaXBzQG1haWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEu
MCwGA1UECxMlSVBTIENBIENMQVNFMSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEuMCwGA1UEAxMl
SVBTIENBIENMQVNFMSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEeMBwGCSqGSIb3DQEJARYPaXBz
QG1haWwuaXBzLmVzMB4XDTAxMTIyOTAwNTkzOFoXDTI1MTIyNzAwNTkzOFowggESMQswCQYDVQQG
EwJFUzESMBAGA1UECBMJQmFyY2Vsb25hMRIwEAYDVQQHEwlCYXJjZWxvbmExLjAsBgNVBAoTJUlQ
UyBJbnRlcm5ldCBwdWJsaXNoaW5nIFNlcnZpY2VzIHMubC4xKzApBgNVBAoUImlwc0BtYWlsLmlw
cy5lcyBDLkkuRi4gIEItNjA5Mjk0NTIxLjAsBgNVBAsTJUlQUyBDQSBDTEFTRTEgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkxLjAsBgNVBAMTJUlQUyBDQSBDTEFTRTEgQ2VydGlmaWNhdGlvbiBBdXRo
b3JpdHkxHjAcBgkqhkiG9w0BCQEWD2lwc0BtYWlsLmlwcy5lczCBnzANBgkqhkiG9w0BAQEFAAOB
jQAwgYkCgYEA4FEnpwvdr9G5Q1uCN0VWcu+atsIS7ywSzHb5BlmvXSHU0lq4oNTzav3KaY1mSPd0
5u42veiWkXWmcSjK5yISMmmwPh5r9FBSYmL9Yzt9fuzuOOpi9GyocY3h6YvJP8a1zZRCb92CRTzo
3wno7wpVqVZHYUxJZHMQKD/Kvwn/xi8CAwEAAaOCBEowggRGMB0GA1UdDgQWBBTrsxl588GlHKzc
uh9morKbadB4CDCCAUQGA1UdIwSCATswggE3gBTrsxl588GlHKzcuh9morKbadB4CKGCARqkggEW
MIIBEjELMAkGA1UEBhMCRVMxEjAQBgNVBAgTCUJhcmNlbG9uYTESMBAGA1UEBxMJQmFyY2Vsb25h
MS4wLAYDVQQKEyVJUFMgSW50ZXJuZXQgcHVibGlzaGluZyBTZXJ2aWNlcyBzLmwuMSswKQYDVQQK
FCJpcHNAbWFpbC5pcHMuZXMgQy5JLkYuICBCLTYwOTI5NDUyMS4wLAYDVQQLEyVJUFMgQ0EgQ0xB
U0UxIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MS4wLAYDVQQDEyVJUFMgQ0EgQ0xBU0UxIENlcnRp
ZmljYXRpb24gQXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXOCAQAwDAYD
VR0TBAUwAwEB/zAMBgNVHQ8EBQMDB/+AMGsGA1UdJQRkMGIGCCsGAQUFBwMBBggrBgEFBQcDAgYI
KwYBBQUHAwMGCCsGAQUFBwMEBggrBgEFBQcDCAYKKwYBBAGCNwIBFQYKKwYBBAGCNwIBFgYKKwYB
BAGCNwoDAQYKKwYBBAGCNwoDBDARBglghkgBhvhCAQEEBAMCAAcwGgYDVR0RBBMwEYEPaXBzQG1h
aWwuaXBzLmVzMBoGA1UdEgQTMBGBD2lwc0BtYWlsLmlwcy5lczBBBglghkgBhvhCAQ0ENBYyQ0xB
U0UxIENBIENlcnRpZmljYXRlIGlzc3VlZCBieSBodHRwOi8vd3d3Lmlwcy5lcy8wKQYJYIZIAYb4
QgECBBwWGmh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvMDoGCWCGSAGG+EIBBAQtFitodHRwOi8v
d3d3Lmlwcy5lcy9pcHMyMDAyL2lwczIwMDJDTEFTRTEuY3JsMD8GCWCGSAGG+EIBAwQyFjBodHRw
Oi8vd3d3Lmlwcy5lcy9pcHMyMDAyL3Jldm9jYXRpb25DTEFTRTEuaHRtbD8wPAYJYIZIAYb4QgEH
BC8WLWh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcmVuZXdhbENMQVNFMS5odG1sPzA6BglghkgB
hvhCAQgELRYraHR0cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9wb2xpY3lDTEFTRTEuaHRtbDBzBgNV
HR8EbDBqMDGgL6AthitodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyL2lwczIwMDJDTEFTRTEuY3Js
MDWgM6Axhi9odHRwOi8vd3d3YmFjay5pcHMuZXMvaXBzMjAwMi9pcHMyMDAyQ0xBU0UxLmNybDAv
BggrBgEFBQcBAQQjMCEwHwYIKwYBBQUHMAGGE2h0dHA6Ly9vY3NwLmlwcy5lcy8wDQYJKoZIhvcN
AQEFBQADgYEAK9Dr/drIyllq2tPMMi7JVBuKYn4VLenZMdMu9Ccj/1urxUq2ckCuU3T0vAW0xtnI
yXf7t/k0f3gA+Nak5FI/LEpjV4F1Wo7ojPsCwJTGKbqz3Bzosq/SLmJbGqmODszFV0VRFOlOHIil
kfSj945RyKm+hjM+5i9Ibq9UkE6tsSUAAAACAC4vZXhwb3J0L2hkYTMvNy4yLjAvbG9jYWwvY29u
Zi9jZXJ0cy84MzE3YjEwYy4wAAABSucYvVgABVguNTA5AAAG1TCCBtEwggW5oAMCAQICAXswDQYJ
KoZIhvcNAQEFBQAwgckxCzAJBgNVBAYTAkhVMREwDwYDVQQHEwhCdWRhcGVzdDEnMCUGA1UEChMe
TmV0TG9jayBIYWxvemF0Yml6dG9uc2FnaSBLZnQuMRowGAYDVQQLExFUYW51c2l0dmFueWtpYWRv
azFCMEAGA1UEAxM5TmV0TG9jayBNaW5vc2l0ZXR0IEtvemplZ3l6b2kgKENsYXNzIFFBKSBUYW51
c2l0dmFueWtpYWRvMR4wHAYJKoZIhvcNAQkBFg9pbmZvQG5ldGxvY2suaHUwHhcNMDMwMzMwMDE0
NzExWhcNMjIxMjE1MDE0NzExWjCByTELMAkGA1UEBhMCSFUxETAPBgNVBAcTCEJ1ZGFwZXN0MScw
JQYDVQQKEx5OZXRMb2NrIEhhbG96YXRiaXp0b25zYWdpIEtmdC4xGjAYBgNVBAsTEVRhbnVzaXR2
YW55a2lhZG9rMUIwQAYDVQQDEzlOZXRMb2NrIE1pbm9zaXRldHQgS296amVneXpvaSAoQ2xhc3Mg
UUEpIFRhbnVzaXR2YW55a2lhZG8xHjAcBgkqhkiG9w0BCQEWD2luZm9AbmV0bG9jay5odTCCASIw
DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMdSJbLYPdSEVQmnG71suRT0igLbdvxqKnir5Xfw
buCMI2fbpWSZud0BPm/vLZo8IvBdyVegVUF/8kNeWIJTMWXOHvImugBUHq+wvBzkUoygMq+3N7FT
Z2h0Z1D2LS5k3q4med/fmYarq3+F7KD7gMz0uAwek0Vjudy4W5vtWznUX2Kwp458ZjgsqrEIYxdn
fcy9s/HDP89QOe3RGYMV24cSJ5a32urlnby66jlPi+90mufF0NLqhlEc5P5kCCgEeQXrysVxDgvv
q+rsEhGhGAUyadEMLBo9JZk/tXzKbbCumZn6CGDnGcLyvVHTzNMCrMERDIDOq9yUnWujOVM61oUC
AwDFfaOCAsAwggK8MBIGA1UdEwEB/wQIMAYBAf8CAQQwDgYDVR0PAQH/BAQDAgEGMIICdQYJYIZI
AYb4QgENBIICZhaCAmJGSUdZRUxFTSEgRXplbiB0YW51c2l0dmFueSBhIE5ldExvY2sgS2Z0LiBN
aW5vc2l0ZXR0IFN6b2xnYWx0YXRhc2kgU3phYmFseXphdGFiYW4gbGVpcnQgZWxqYXJhc29rIGFs
YXBqYW4ga2VzenVsdC4gQSBtaW5vc2l0ZXR0IGVsZWt0cm9uaWt1cyBhbGFpcmFzIGpvZ2hhdGFz
IGVydmVueWVzdWxlc2VuZWssIHZhbGFtaW50IGVsZm9nYWRhc2FuYWsgZmVsdGV0ZWxlIGEgTWlu
b3NpdGV0dCBTem9sZ2FsdGF0YXNpIFN6YWJhbHl6YXRiYW4sIGF6IEFsdGFsYW5vcyBTemVyem9k
ZXNpIEZlbHRldGVsZWtiZW4gZWxvaXJ0IGVsbGVub3J6ZXNpIGVsamFyYXMgbWVndGV0ZWxlLiBB
IGRva3VtZW50dW1vayBtZWd0YWxhbGhhdG9rIGEgaHR0cHM6Ly93d3cubmV0bG9jay5odS9kb2Nz
LyBjaW1lbiB2YWd5IGtlcmhldG9rIGF6IGluZm9AbmV0bG9jay5uZXQgZS1tYWlsIGNpbWVuLiBX
QVJOSU5HISBUaGUgaXNzdWFuY2UgYW5kIHRoZSB1c2Ugb2YgdGhpcyBjZXJ0aWZpY2F0ZSBhcmUg
c3ViamVjdCB0byB0aGUgTmV0TG9jayBRdWFsaWZpZWQgQ1BTIGF2YWlsYWJsZSBhdCBodHRwczov
L3d3dy5uZXRsb2NrLmh1L2RvY3MvIG9yIGJ5IGUtbWFpbCBhdCBpbmZvQG5ldGxvY2submV0MB0G
A1UdDgQWBBQJamIWkrBau1UOy3UyOjLlsiHJKDANBgkqhkiG9w0BAQUFAAOCAQEAkWpQnNt4gZs/
i0LjO/ymw+5D4M/z4oA1SUV2AuLjLwXF8SrnwEEzxrab0DM5zcDboa1sNwJMWEE78peSxkiozeWK
OYlh+VKX6b32+ZR06HEOvHeGwwbMWnxKfjRQMC77fzKajT3zIFv4asqG8zFMLFmAAn3+OMkwdRy3
VeO8n7qobYQoBXWziw3AkVQh56YLtJn1UUHczaNHItnHAYHE3EdPJuof7dvNDZj0o5y0czJKlpn+
vH/IJVj4WPN2ZolUpKY+xFBcuokYgnVIIdJPE+hgfgd22xC1UeaquWiqzfadkHUS6jgaykTot5mn
KmiVZpWrre+Jy2CpBhLGlEfpKAAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2Nl
cnRzLzcyYmY2YTA0LjAAAAFRhbVQ8QAFWC41MDkAAAf7MIIH9zCCB2CgAwIBAgIBADANBgkqhkiG
9w0BAQUFADCCARQxCzAJBgNVBAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJh
cmNlbG9uYTEuMCwGA1UEChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjEr
MCkGA1UEChQiaXBzQG1haWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEvMC0GA1UECxMmSVBT
IENBIENMQVNFQTMgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxLzAtBgNVBAMTJklQUyBDQSBDTEFT
RUEzIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMu
ZXMwHhcNMDExMjI5MDEwNzUwWhcNMjUxMjI3MDEwNzUwWjCCARQxCzAJBgNVBAYTAkVTMRIwEAYD
VQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UEChMlSVBTIEludGVybmV0
IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjErMCkGA1UEChQiaXBzQG1haWwuaXBzLmVzIEMuSS5G
LiAgQi02MDkyOTQ1MjEvMC0GA1UECxMmSVBTIENBIENMQVNFQTMgQ2VydGlmaWNhdGlvbiBBdXRo
b3JpdHkxLzAtBgNVBAMTJklQUyBDQSBDTEFTRUEzIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MR4w
HAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXMwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGB
AO6AAPYaZC6tasiDsYun7o/ZttvNG7uGBiJ2MwwSbUhWYdLcgiViL5/SaTBlA0IjWLxH3GvWdV0X
POH/8lhneaDBgbHUVqLyjRGZ/fZ98cfEXgIqmuJKtROKAP2Md4bm15T1IHUuDky/dMQ/gT6DtKM4
Ninn6Cr1jIhBqoCm42zvAgMBAAGjggRTMIIETzAdBgNVHQ4EFgQUHp9XUEe2YZM50yz82l09BXW3
mQIwggFGBgNVHSMEggE9MIIBOYAUHp9XUEe2YZM50yz82l09BXW3mQKhggEcpIIBGDCCARQxCzAJ
BgNVBAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UE
ChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjErMCkGA1UEChQiaXBzQG1h
aWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEvMC0GA1UECxMmSVBTIENBIENMQVNFQTMgQ2Vy
dGlmaWNhdGlvbiBBdXRob3JpdHkxLzAtBgNVBAMTJklQUyBDQSBDTEFTRUEzIENlcnRpZmljYXRp
b24gQXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXOCAQAwDAYDVR0TBAUw
AwEB/zAMBgNVHQ8EBQMDB/+AMGsGA1UdJQRkMGIGCCsGAQUFBwMBBggrBgEFBQcDAgYIKwYBBQUH
AwMGCCsGAQUFBwMEBggrBgEFBQcDCAYKKwYBBAGCNwIBFQYKKwYBBAGCNwIBFgYKKwYBBAGCNwoD
AQYKKwYBBAGCNwoDBDARBglghkgBhvhCAQEEBAMCAAcwGgYDVR0RBBMwEYEPaXBzQG1haWwuaXBz
LmVzMBoGA1UdEgQTMBGBD2lwc0BtYWlsLmlwcy5lczBCBglghkgBhvhCAQ0ENRYzQ0xBU0VBMyBD
QSBDZXJ0aWZpY2F0ZSBpc3N1ZWQgYnkgaHR0cDovL3d3dy5pcHMuZXMvMCkGCWCGSAGG+EIBAgQc
FhpodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyLzA7BglghkgBhvhCAQQELhYsaHR0cDovL3d3dy5p
cHMuZXMvaXBzMjAwMi9pcHMyMDAyQ0xBU0VBMy5jcmwwQAYJYIZIAYb4QgEDBDMWMWh0dHA6Ly93
d3cuaXBzLmVzL2lwczIwMDIvcmV2b2NhdGlvbkNMQVNFQTMuaHRtbD8wPQYJYIZIAYb4QgEHBDAW
Lmh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcmVuZXdhbENMQVNFQTMuaHRtbD8wOwYJYIZIAYb4
QgEIBC4WLGh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcG9saWN5Q0xBU0VBMy5odG1sMHUGA1Ud
HwRuMGwwMqAwoC6GLGh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvaXBzMjAwMkNMQVNFQTMuY3Js
MDagNKAyhjBodHRwOi8vd3d3YmFjay5pcHMuZXMvaXBzMjAwMi9pcHMyMDAyQ0xBU0VBMy5jcmww
LwYIKwYBBQUHAQEEIzAhMB8GCCsGAQUFBzABhhNodHRwOi8vb2NzcC5pcHMuZXMvMA0GCSqGSIb3
DQEBBQUAA4GBAEo9IEca2on0eisxeewBwMwB9dbB/MjD81ACUZBYKp/nNQlbMAqBACVHr9QPDp5g
JqiVp4MI3y2s6Q73nMify5NF8bpqxmdRSmlPa/59Cy9SKcJQrSRE7SOzSMtEQMEDlQwKeAYSAfWR
MS1Jjbs/RU4s4OjNtckUFQzjB4ObJnXvAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2Nv
bmYvY2VydHMvNTRlZGZhNWQuMAAAAUrnGH58AAVYLjUwOQAAA2AwggNcMIICxaADAgECAgID6zAN
BgkqhkiG9w0BAQQFADCBvDELMAkGA1UEBhMCREUxEDAOBgNVBAgTB0hhbWJ1cmcxEDAOBgNVBAcT
B0hhbWJ1cmcxOjA4BgNVBAoTMVRDIFRydXN0Q2VudGVyIGZvciBTZWN1cml0eSBpbiBEYXRhIE5l
dHdvcmtzIEdtYkgxIjAgBgNVBAsTGVRDIFRydXN0Q2VudGVyIENsYXNzIDMgQ0ExKTAnBgkqhkiG
9w0BCQEWGmNlcnRpZmljYXRlQHRydXN0Y2VudGVyLmRlMB4XDTk4MDMwOTExNTk1OVoXDTExMDEw
MTExNTk1OVowgbwxCzAJBgNVBAYTAkRFMRAwDgYDVQQIEwdIYW1idXJnMRAwDgYDVQQHEwdIYW1i
dXJnMTowOAYDVQQKEzFUQyBUcnVzdENlbnRlciBmb3IgU2VjdXJpdHkgaW4gRGF0YSBOZXR3b3Jr
cyBHbWJIMSIwIAYDVQQLExlUQyBUcnVzdENlbnRlciBDbGFzcyAzIENBMSkwJwYJKoZIhvcNAQkB
FhpjZXJ0aWZpY2F0ZUB0cnVzdGNlbnRlci5kZTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
trTBNQUuDY3soEBqHA4nplCSa1AbB94u53bM4Nr8hKhejGNqK03ZTgJ2EcEL8o15ygC28bAO1/uk
Fz2vq2l6lie/rzOhmipZqsS1NwjyEqUxtkP1MpZxKCirjSiG37vu4wx9MNbDUquPXSeca8Cj5wVr
V0lEs27qZM/SjnpQd3cCAwEAAaNrMGkwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYw
MwYJYIZIAYb4QgEIBCYWJGh0dHA6Ly93d3cudHJ1c3RjZW50ZXIuZGUvZ3VpZGVsaW5lczARBglg
hkgBhvhCAQEEBAMCAAcwDQYJKoZIhvcNAQEEBQADgYEAFj3GzcG7hXGFRp8+II9RKJnsLUUhYyNb
BLtMkLiIkgRNvX0Boz/27M7x3v595eE+u8arXgvdPZbEy6nU+SbmBk6eDKV6um7DfIIZ0cexscPb
DY6bQHw3C/Fd6P0fkIilDk43ZCGoTo20n/HeSK3VVhhSKYtHNBIJ1LuSNe8P2zQAAAACAC4vZXhw
b3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy81ZWZkN2M2ZS4wAAABVH+wU1sABVguNTA5
AAAFUDCCBUwwggM0oAMCAQICFEiYLeKpLLM54cj5MzWCddPk+IJVMA0GCSqGSIb3DQEBCwUAMEUx
CzAJBgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMRswGQYDVQQDExJRdW9WYWRp
cyBSb290IENBIDIwHhcNMTMwNjAxMTMzNTA1WhcNMjMwNjAxMTMzNTA1WjBNMQswCQYDVQQGEwJC
TTEZMBcGA1UEChMQUXVvVmFkaXMgTGltaXRlZDEjMCEGA1UEAxMaUXVvVmFkaXMgR2xvYmFsIFNT
TCBJQ0EgRzIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDh4YVplMCPV/o0/sG4aOSZ
kKmIes5Xt9DktVTCGH3QwxnoqWOA97fc0hmjWrBg2Xa0HTJWNfFso5xCoYuKIzWXQXsFaYQojs4e
TYtgJPG0iP7AUPbCj66XdPlAqm72hrOk6cdfdGUU9D3cvk6jmGRf4wZswY+2H1yZlsZXwsutlIkO
rb7/uAultjj7tUeB1A/KCfEKOxINHA/hhbATNsPLKH38pfg3OqSrQEZjgpVAuxKslj9Fffed5QN+
JLiWZWMcXYIIQU5/a1qGkMPy6+RZ9F4He32Et/8xoZl2L1bLgMSJ/BpPmGnqC2fB/bVL5ww95RB8
7yLDD8arXeyIHFWjAgMBAAGjggEqMIIBJjASBgNVHRMBAf8ECDAGAQH/AgEAMBEGA1UdIAQKMAgw
BgYEVR0gADByBggrBgEFBQcBAQRmMGQwKgYIKwYBBQUHMAGGHmh0dHA6Ly9vY3NwLnF1b3ZhZGlz
Z2xvYmFsLmNvbTA2BggrBgEFBQcwAoYqaHR0cDovL3RydXN0LnF1b3ZhZGlzZ2xvYmFsLmNvbS9x
dnJjYTIuY3J0MA4GA1UdDwEB/wQEAwIBBjAfBgNVHSMEGDAWgBQahGK8SEwzJQTU7tD2A8QZRtGU
azA5BgNVHR8EMjAwMC6gLKAqhihodHRwOi8vY3JsLnF1b3ZhZGlzZ2xvYmFsLmNvbS9xdnJjYTIu
Y3JsMB0GA1UdDgQWBBSRGWKtWxenMPvw3jklsb2MubhRJzANBgkqhkiG9w0BAQsFAAOCAgEAfApg
ggBBtS3MOeX022vOAIqcDInmcnRTuW3CIeVMl1oFmejj+I2/+i2onxDC40QgtJlNeBuj6z1PomUI
iGnu1+RGr4ZhExAPCWyyAo4g+HPWOvm4DLeLMxD4mdkgCzkI9dAa+BykH8vzr23nUWy2safapQxu
KiYErd7opAyCUmq8epqYBEF7tNFGTZIhGFH3jvIVxl62W7Q55LmolQ7TOrPcmKXKMhcRTqzkaxIF
YmiOz9xCWg2JiOiA1CD2kgTOhq1TImiDWBDAS9b9o2YvK1w2NMlbGf9AwCEIggTTb09TY0OUp9RP
jvmQYqgw/qwbwaD7COsnX3SrSbq+WC/jqJCStni63HvNvO2sCHHfBTEQ3GcPzV9W3PLisnuTgrcK
UNHeIy+Hprl8Bb/E6lG2YdsSUocsue3KsN6lqATrP1ls2tvfx7p/D15EKGXqcGP8XPvZyNTWijPD
aoUqiTUyZb14+8295naW3t2EfQZElz66JTe5eSjseeICe5Ce6+qiWCbsdNx8jzNdSqeMH3Z9UbAt
lEOWsAun4P91xNh2VZMqiYysKoeJxWoiuRDFewx0OKCcfXJJg8OqQbw2qD6JF8s3Xye9p/tSXxxj
/sKK5HIijZXYKmF+ieIz6wiBCAa7Q7WuEMT9dE8nfURbtd15hPEmIv1V7639564kHwGf50gAAAAC
AC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy9iZjY0ZjM1Yi4wAAABUYWzeB4A
BVguNTA5AAAElTCCBJEwggN5oAMCAQICBEVrUFQwDQYJKoZIhvcNAQEFBQAwgbAxCzAJBgNVBAYT
AlVTMRYwFAYDVQQKEw1FbnRydXN0LCBJbmMuMTkwNwYDVQQLEzB3d3cuZW50cnVzdC5uZXQvQ1BT
IGlzIGluY29ycG9yYXRlZCBieSByZWZlcmVuY2UxHzAdBgNVBAsTFihjKSAyMDA2IEVudHJ1c3Qs
IEluYy4xLTArBgNVBAMTJEVudHJ1c3QgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0w
NjExMjcyMDIzNDJaFw0yNjExMjcyMDUzNDJaMIGwMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNRW50
cnVzdCwgSW5jLjE5MDcGA1UECxMwd3d3LmVudHJ1c3QubmV0L0NQUyBpcyBpbmNvcnBvcmF0ZWQg
YnkgcmVmZXJlbmNlMR8wHQYDVQQLExYoYykgMjAwNiBFbnRydXN0LCBJbmMuMS0wKwYDVQQDEyRF
bnRydXN0IFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggEiMA0GCSqGSIb3DQEBAQUAA4IB
DwAwggEKAoIBAQC2lbZDQvrGbSpvSN+UTDlXBe7DeRFBaDbt7P6aAY+hOCj89xBGZi5NHhqxGk7G
0cCViLDJ/zGLMwPbt4N7PiCEXu2yViin+OC5QHE3xctHDpcqaMAilWIV20fZ9dAr/4JLya0+3kzb
kIBQPwmKhADsMAo9GM37/SpZmiOVFyxFnh9uQ3ltDFyY/kinxSNHXF79bucetPZoRdGGg1uiio2x
4ymA/iVxiK2+vI+sUpZLqlGN5BMxGehOTZ/brLNq1bw5VHHKenp/kN19HYDZgbtZJsIR/uaT4veA
5GX7NDcOKYBwTa84hi6ef1evnheu6xzLKCFfthzY56IEIvnT2tjLAgMBAAGjgbAwga0wDgYDVR0P
AQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wKwYDVR0QBCQwIoAPMjAwNjExMjcyMDIzNDJagQ8y
MDI2MTEyNzIwNTM0MlowHwYDVR0jBBgwFoAUaJDkZ6SmU4DHhmak8fdLQ/uEvW0wHQYDVR0OBBYE
FGiQ5GekplOAx4ZmpPH3S0P7hL1tMB0GCSqGSIb2fQdBAAQQMA4bCFY3LjE6NC4wAwIEkDANBgkq
hkiG9w0BAQUFAAOCAQEAk9QwsNcDICrQ+WPokQwFIKlfGcp7ck7UsdvQlvtUWhksDAj3sryFqJ1/
bTtSsyrb59SEjGP2D8smAZFQbPRfFOKTdMATnjA6UOO0YMUc8CJEjXFHrMgayembmgBgE/9wfl8R
TUkbsxVSe8lU2r+dla9rmtie6fHkQ43iEUQ6v6+9g0JzUouqu6cpz/VkHApN0byqrJ8q0P9/f9p9
6rHtMCXBhNo00lt4g1bsnDbDJuIR9mdJHZKrjPvr/3ruhUqnUIDwp1xKlC5fBZk8UkHgzbRjzwFD
upyD3I9gO/NatLR7rtoLkDh174EdZtL3V3A2s7/8KK9xJYVbE/4ef1q0PAAAAAIALi9leHBvcnQv
aGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzLzYzNWNjZmQ1LjAAAAFK5xjGUgAFWC41MDkAAAVT
MIIFTzCCBLigAwIBAgIBaDANBgkqhkiG9w0BAQQFADCBmzELMAkGA1UEBhMCSFUxETAPBgNVBAcT
CEJ1ZGFwZXN0MScwJQYDVQQKEx5OZXRMb2NrIEhhbG96YXRiaXp0b25zYWdpIEtmdC4xGjAYBgNV
BAsTEVRhbnVzaXR2YW55a2lhZG9rMTQwMgYDVQQDEytOZXRMb2NrIEV4cHJlc3N6IChDbGFzcyBD
KSBUYW51c2l0dmFueWtpYWRvMB4XDTk5MDIyNTE0MDgxMVoXDTE5MDIyMDE0MDgxMVowgZsxCzAJ
BgNVBAYTAkhVMREwDwYDVQQHEwhCdWRhcGVzdDEnMCUGA1UEChMeTmV0TG9jayBIYWxvemF0Yml6
dG9uc2FnaSBLZnQuMRowGAYDVQQLExFUYW51c2l0dmFueWtpYWRvazE0MDIGA1UEAxMrTmV0TG9j
ayBFeHByZXNzeiAoQ2xhc3MgQykgVGFudXNpdHZhbnlraWFkbzCBnzANBgkqhkiG9w0BAQEFAAOB
jQAwgYkCgYEA6+ywbGGKIyWvYCDj2Z/8kwvbXY2wobNAOoLO/XXgeDIDhlqGlZHtU/qdQPzm6N3Z
W3oDvV3zOwzDUXmbrVWg6dADEK8KuhRC2VImESLH0iDMgqSaqf64gXadarfSNnU+sYYJ9m5tfk63
euyucYT2BDMIJTLrdKwWRMbkQJMdf60CAwEAAaOCAp8wggKbMBIGA1UdEwEB/wQIMAYBAf8CAQQw
DgYDVR0PAQH/BAQDAgAGMBEGCWCGSAGG+EIBAQQEAwIABzCCAmAGCWCGSAGG+EIBDQSCAlEWggJN
RklHWUVMRU0hIEV6ZW4gdGFudXNpdHZhbnkgYSBOZXRMb2NrIEtmdC4gQWx0YWxhbm9zIFN6b2xn
YWx0YXRhc2kgRmVsdGV0ZWxlaWJlbiBsZWlydCBlbGphcmFzb2sgYWxhcGphbiBrZXN6dWx0LiBB
IGhpdGVsZXNpdGVzIGZvbHlhbWF0YXQgYSBOZXRMb2NrIEtmdC4gdGVybWVrZmVsZWxvc3NlZy1i
aXp0b3NpdGFzYSB2ZWRpLiBBIGRpZ2l0YWxpcyBhbGFpcmFzIGVsZm9nYWRhc2FuYWsgZmVsdGV0
ZWxlIGF6IGVsb2lydCBlbGxlbm9yemVzaSBlbGphcmFzIG1lZ3RldGVsZS4gQXogZWxqYXJhcyBs
ZWlyYXNhIG1lZ3RhbGFsaGF0byBhIE5ldExvY2sgS2Z0LiBJbnRlcm5ldCBob25sYXBqYW4gYSBo
dHRwczovL3d3dy5uZXRsb2NrLm5ldC9kb2NzIGNpbWVuIHZhZ3kga2VyaGV0byBheiBlbGxlbm9y
emVzQG5ldGxvY2submV0IGUtbWFpbCBjaW1lbi4gSU1QT1JUQU5UISBUaGUgaXNzdWFuY2UgYW5k
IHRoZSB1c2Ugb2YgdGhpcyBjZXJ0aWZpY2F0ZSBpcyBzdWJqZWN0IHRvIHRoZSBOZXRMb2NrIENQ
UyBhdmFpbGFibGUgYXQgaHR0cHM6Ly93d3cubmV0bG9jay5uZXQvZG9jcyBvciBieSBlLW1haWwg
YXQgY3BzQG5ldGxvY2submV0LjANBgkqhkiG9w0BAQQFAAOBgQAQrX/XDDKACtiG8XmYta3UzbM2
xJZIwVzNmtkFLp++UOv0JhQQLdRmF/iewSf98e3ke0ugbLWrmldwpu2gpO0u9f38vf5NNwgMvOOW
gyL1SRt/Syu0VMGAfJlOHdCM7tCs5ZL6dVb+ZKATj7i4Fp1hBWeAyNDYpQcCNJgEjTME1AAAAAIA
Ly9leHBvcnQvaGRhMy82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy9lMjhmNmJiYy4wAAABMLsrJvMA
BVguNTA5AAADojCCA54wggMHoAMCAQICECto1KNGnsU7KAmrOF1/JyAwDQYJKoZIhvcNAQEFBQAw
XzELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMTcwNQYDVQQLEy5DbGFzcyAx
IFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTAwMDgwNDAwMDAwMFoX
DTA0MDgwMzIzNTk1OVowgacxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJp
U2lnbiBUcnVzdCBOZXR3b3JrMTswOQYDVQQLEzJUZXJtcyBvZiB1c2UgYXQgaHR0cHM6Ly93d3cu
dmVyaXNpZ24uY29tL1JQQSAoYykwMDEuMCwGA1UEAxMlQ2xhc3MgMSBQdWJsaWMgUHJpbWFyeSBP
Q1NQIFJlc3BvbmRlcjCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAue1eejp3X85fOlL8zWT3
cbVvapbGWZJVlF0vWy7BEeomisungTz2WkTeehMv/VpR2Xs3JkrAJz8EA2pWwYMs4W9bqVRQJErG
LnpMoVs3VCQhMR+heBh2p7Fw2iLQav4HYkDG9/abfQwGuEvHKORmI4RR70a3k9iBM8vlNqzG6AUC
AwEAAaOCARAwggEMMCAGA1UdEQQZMBekFTATMREwDwYDVQQDEwhPQ1NQIDEtMTAxBgNVHR8EKjAo
MCagJKAihiBodHRwOi8vY3JsLnZlcmlzaWduLmNvbS9wY2ExLmNybDATBgNVHSUEDDAKBggrBgEF
BQcDCTBCBggrBgEFBQcBAQQ2MDQwMgYIKwYBBQUHMAGmJhYkaHR0cDovL29jc3AudmVyaXNpZ24u
Y29tL29jc3Avc3RhdHVzMEQGA1UdIAQ9MDswOQYLYIZIAYb4RQEHAQEwKjAoBggrBgEFBQcCARYc
aHR0cHM6Ly93d3cudmVyaXNpZ24uY29tL1JQQTAJBgNVHRMEAjAAMAsGA1UdDwQEAwIHgDANBgkq
hkiG9w0BAQUFAAOBgQBwkN245L5TF3x/AunV94uZkzFgjX7mYGsk72Cs0s6R3oBtCaTTuDjlRMpy
Xg0twXecvSwDeCmNpKV3h/XxKyatzAdsOlRaKOAJ800KBMrUWGkLp7P13QGl59zwH7rBXZCNs+pP
wRFZl2qyKxOx2q2XobOxoCBbyjKrjc8T8B8pwwAAAAIALi9leHBvcnQvaGRhMy83LjIuMC9sb2Nh
bC9jb25mL2NlcnRzLzhmZTY0M2RmLjAAAAFK5xiRwgAFWC41MDkAAAf7MIIH9zCCB2CgAwIBAgIB
ADANBgkqhkiG9w0BAQUFADCCARQxCzAJBgNVBAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQ
BgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UEChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2Vydmlj
ZXMgcy5sLjErMCkGA1UEChQiaXBzQG1haWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEvMC0G
A1UECxMmSVBTIENBIENMQVNFQTEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxLzAtBgNVBAMTJklQ
UyBDQSBDTEFTRUExIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNA
bWFpbC5pcHMuZXMwHhcNMDExMjI5MDEwNTMyWhcNMjUxMjI3MDEwNTMyWjCCARQxCzAJBgNVBAYT
AkVTMRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJhcmNlbG9uYTEuMCwGA1UEChMlSVBT
IEludGVybmV0IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjErMCkGA1UEChQiaXBzQG1haWwuaXBz
LmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEvMC0GA1UECxMmSVBTIENBIENMQVNFQTEgQ2VydGlmaWNh
dGlvbiBBdXRob3JpdHkxLzAtBgNVBAMTJklQUyBDQSBDTEFTRUExIENlcnRpZmljYXRpb24gQXV0
aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXMwgZ8wDQYJKoZIhvcNAQEBBQAD
gY0AMIGJAoGBALsw19zQVL01Tp/FTILq0VA8R5j8m2mdd81u4D/u6zJfX5/S0HnllXNEITLgCtud
186Nq1KLK3jgm1t99P1tCeWu4WwdByOgF9H5fahGRpEiqLJpxq339fWUoTCUvQDMRH/uxJ7JweaP
CjbB/SQ9AaD1e+J8eGZDi09Z8pvZ+kmzAgMBAAGjggRTMIIETzAdBgNVHQ4EFgQUZyaW56G/2LUD
nf473P7yiuYV3TAwggFGBgNVHSMEggE9MIIBOYAUZyaW56G/2LUDnf473P7yiuYV3TChggEcpIIB
GDCCARQxCzAJBgNVBAYTAkVTMRIwEAYDVQQIEwlCYXJjZWxvbmExEjAQBgNVBAcTCUJhcmNlbG9u
YTEuMCwGA1UEChMlSVBTIEludGVybmV0IHB1Ymxpc2hpbmcgU2VydmljZXMgcy5sLjErMCkGA1UE
ChQiaXBzQG1haWwuaXBzLmVzIEMuSS5GLiAgQi02MDkyOTQ1MjEvMC0GA1UECxMmSVBTIENBIENM
QVNFQTEgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxLzAtBgNVBAMTJklQUyBDQSBDTEFTRUExIENl
cnRpZmljYXRpb24gQXV0aG9yaXR5MR4wHAYJKoZIhvcNAQkBFg9pcHNAbWFpbC5pcHMuZXOCAQAw
DAYDVR0TBAUwAwEB/zAMBgNVHQ8EBQMDB/+AMGsGA1UdJQRkMGIGCCsGAQUFBwMBBggrBgEFBQcD
AgYIKwYBBQUHAwMGCCsGAQUFBwMEBggrBgEFBQcDCAYKKwYBBAGCNwIBFQYKKwYBBAGCNwIBFgYK
KwYBBAGCNwoDAQYKKwYBBAGCNwoDBDARBglghkgBhvhCAQEEBAMCAAcwGgYDVR0RBBMwEYEPaXBz
QG1haWwuaXBzLmVzMBoGA1UdEgQTMBGBD2lwc0BtYWlsLmlwcy5lczBCBglghkgBhvhCAQ0ENRYz
Q0xBU0VBMSBDQSBDZXJ0aWZpY2F0ZSBpc3N1ZWQgYnkgaHR0cDovL3d3dy5pcHMuZXMvMCkGCWCG
SAGG+EIBAgQcFhpodHRwOi8vd3d3Lmlwcy5lcy9pcHMyMDAyLzA7BglghkgBhvhCAQQELhYsaHR0
cDovL3d3dy5pcHMuZXMvaXBzMjAwMi9pcHMyMDAyQ0xBU0VBMS5jcmwwQAYJYIZIAYb4QgEDBDMW
MWh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcmV2b2NhdGlvbkNMQVNFQTEuaHRtbD8wPQYJYIZI
AYb4QgEHBDAWLmh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcmVuZXdhbENMQVNFQTEuaHRtbD8w
OwYJYIZIAYb4QgEIBC4WLGh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvcG9saWN5Q0xBU0VBMS5o
dG1sMHUGA1UdHwRuMGwwMqAwoC6GLGh0dHA6Ly93d3cuaXBzLmVzL2lwczIwMDIvaXBzMjAwMkNM
QVNFQTEuY3JsMDagNKAyhjBodHRwOi8vd3d3YmFjay5pcHMuZXMvaXBzMjAwMi9pcHMyMDAyQ0xB
U0VBMS5jcmwwLwYIKwYBBQUHAQEEIzAhMB8GCCsGAQUFBzABhhNodHRwOi8vb2NzcC5pcHMuZXMv
MA0GCSqGSIb3DQEBBQUAA4GBAH66iqyAAIQVCtWYUQxkxZwCWINmyq0eB81+atqAB98DNEock8RL
WCA1NnHtogo1EqWmZaeFaQoO42Hu6r4okzPV7Oi+xNtff6j5YzHIa5biKcJboOeXNp13XjFr/tOn
2yrb25aLH2betgPAK7N41lUH5Y85UN4HI3LmvSAUS7SGAAAAAgAvL2V4cG9ydC9oZGEzLzYuMTAu
NC9sb2NhbC9jb25mL2NlcnRzLzNlNzI3MWU4LjAAAAEwuysU0gAFWC41MDkAAARgMIIEXDCCA0Sg
AwIBAgIEOGO5ZjANBgkqhkiG9w0BAQUFADCBtDEUMBIGA1UEChMLRW50cnVzdC5uZXQxQDA+BgNV
BAsUN3d3dy5lbnRydXN0Lm5ldC9DUFNfMjA0OCBpbmNvcnAuIGJ5IHJlZi4gKGxpbWl0cyBsaWFi
LikxJTAjBgNVBAsTHChjKSAxOTk5IEVudHJ1c3QubmV0IExpbWl0ZWQxMzAxBgNVBAMTKkVudHJ1
c3QubmV0IENlcnRpZmljYXRpb24gQXV0aG9yaXR5ICgyMDQ4KTAeFw05OTEyMjQxNzUwNTFaFw0x
OTEyMjQxODIwNTFaMIG0MRQwEgYDVQQKEwtFbnRydXN0Lm5ldDFAMD4GA1UECxQ3d3d3LmVudHJ1
c3QubmV0L0NQU18yMDQ4IGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxpYWIuKTElMCMGA1UECxMc
KGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDEzMDEGA1UEAxMqRW50cnVzdC5uZXQgQ2VydGlm
aWNhdGlvbiBBdXRob3JpdHkgKDIwNDgpMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
rU1LqRKGsuqjIAcVFmQqK0vRvwtKTY7tgHalZ7d4QMBzQshowNtTK91euHaYNZOLGp18EzoOH1u3
Hs/lJBQesYGpjX24zGtLA/ECDNyrpUAkAH90lKGdCCmziAv1h3edVc3kw37XamSrhRSGlVuXMlBv
Pci6Zgzj/L24ScF2iUkZ/cCovYmjZy/Gn7xxGWC4LeksyZB2ZnuU4q941mVTXTzWnLLPKQP5L6RQ
stRIzgUyVYr9smRMDuSYB3Xbf9+5CFVghTAp+XtIpGmG4zU/HoZdenoVve8AjhUiVBcAkCaTvA5J
aJG/+EfTnZVCwQ5N328mz8MYIWJmQ3DW1cAH4QIDAQABo3QwcjARBglghkgBhvhCAQEEBAMCAAcw
HwYDVR0jBBgwFoAUVeSB0RGAvtiJuQijMfmhJAkWuXAwHQYDVR0OBBYEFFXkgdERgL7YibkIozH5
oSQJFrlwMB0GCSqGSIb2fQdBAAQQMA4bCFY1LjA6NC4wAwIEkDANBgkqhkiG9w0BAQUFAAOCAQEA
WUesIYSKF8mciVMeuoCFGsY8Tj6xnLZ8xpJdGGQC49MGCBFhfGPjK50xA3B20qMooPS7mmNz7W3l
KtvtFKkrxjYR0CvrB4ul2p5cGZ1WEvVUKcgF7bISKo30Axv/55IQh7A6tcOdBTcSo8f0FbnVpDkW
m1M6I5HxqIKiaohowXkCIryqptau37AUX7iH0N18f3v/rxzP5tsHrV7bhZ3QKw0z2wTR5klAEyt2
+z7pnIkPFc4YsIV4IU9rTw76NmfNB/L/CNDi3tm/Kq+4h4YhPATKt5Rof8886ZjXOP/swNlQ8C5L
WK5Gb9Auw2DaclVyvUxFnmG6v4SBkgPR0ml8xQAAAAIALi9leHBvcnQvaGRhMy83LjIuMC9sb2Nh
bC9jb25mL2NlcnRzLzcyZmE3MzcxLjAAAAFK5xgZ+gAFWC41MDkAAAMGMIIDAjCCAmsCEH3Z/gfP
qB63EHln+6eJNMYwDQYJKoZIhvcNAQEFBQAwgcExCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJp
U2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgMyBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9u
IEF1dGhvcml0eSAtIEcyMTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBh
dXRob3JpemVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMB4XDTk4
MDUxODAwMDAwMFoXDTI4MDgwMTIzNTk1OVowgcExCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJp
U2lnbiwgSW5jLjE8MDoGA1UECxMzQ2xhc3MgMyBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9u
IEF1dGhvcml0eSAtIEcyMTowOAYDVQQLEzEoYykgMTk5OCBWZXJpU2lnbiwgSW5jLiAtIEZvciBh
dXRob3JpemVkIHVzZSBvbmx5MR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMIGfMA0G
CSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMXtERXVxp0KvTuWpMmR9ZmDCOFoUgRm1HP9SFIIThbbP4
pO0M8RcPO/mn+SXXwc+EY/J8Y8+iR/LGWzOOZEAEaMGAuWQcRXfH2G71lSk8UOg013gfqLptQ5GV
j0VXXn7F+8qkBOvqlzdUMG+7AUcyM83cV5tkaWH4mx0ciU9cZwIDAQABMA0GCSqGSIb3DQEBBQUA
A4GBAFFNzb5cy5gZnBWyATl4Lk0PZ3BwmcYQWpSkU01UbSuvDV1Ai2TT1+7eVmGSX6bEHRBhNtMs
JzzoKQm5EWR0zLVznxxIqbxhAe7iF6YM40AIOw7n60RzKprxaZLvcRTDOaxxp5EJb+RxBrO6WVcm
eQD2+A2iMzAo1KpYoJ2daZH9AAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2Vy
dHMvMTFmMTU0ZDYuMAAAAUrnGCnDAAVYLjUwOQAABB4wggQaMIIDAgIRAItbdVaEVIULAM+vOEjO
saQwDQYJKoZIhvcNAQEFBQAwgcoxCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5j
LjEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVy
aVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNpZ24g
Q2xhc3MgMSBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEczMB4XDTk5
MTAwMTAwMDAwMFoXDTM2MDcxNjIzNTk1OVowgcoxCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJp
U2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMp
IDE5OTkgVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8
VmVyaVNpZ24gQ2xhc3MgMSBQdWJsaWMgUHJpbWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAt
IEczMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3YTUubT5p9jzBHic3j3cbBMW2Xrd
JFFmwMcmWQ2sBgjClNEzH/CDNR9uG8jeqm4VTlQn78RtGuwL4w7wRKVXx0BYHqNHH3HsYPZtlMgY
Oe3+QhhW3+RMSRB4TgF2NWMSNt1mvAEENqNVaNWiNgmsqyEmVAatP8oU4KzKrQYdleL4nfHgYP/C
f3UrTMza/oeZIeq6/j5U19JZeNs8bs+gEwAauCeh5L5nlsqgxbOc3cl1nuswml+jzdmueBk/I+lc
2ym9rVXIG1SMY/bopurHNxJcoykeAtnbHzu01w9WR4EVBEqvgyfRxViIwd32qqejGNpoqm0RUeG/
ZWuflnbRPQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCrZo3Xs7rHmrbmVdAF8Z8xjVqq2apGJg9x
7aWtU1ZiAUcqROn+P3QLE5u59E0bstFfsrbSiFyzn83L1KfZYJWEOvjBNx1hyuewxeWR2lSmrDGB
rpfezQisuMCXgH9ucqTnaROVZR/Ekzz9eY8E1D5P6veezs1nfE9lAv+RhVRzx/8294Yt7NBeT/8R
n3IG1rga8UwNJmXiRIAex5/j3egK2uylIIBpaKFPfuFrzwdB+oOOvDjdsC4RsWuyQsyavPlIInlK
GQ+yHD4gdNlqw77yKHgTVnlPbVDqG7C1V7E3Zlgj89wP3wqHxO+GBdU4FGCZo0veBpZxLPLbth+k
7z/uAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvMGRiZDAwOTYuMAAA
AUrnGGD2AAVYLjUwOQAAA+owggPmMIICzqADAgECAgEBMA0GCSqGSIb3DQEBBQUAMIGDMQswCQYD
VQQGEwJVUzEdMBsGA1UEChMUQU9MIFRpbWUgV2FybmVyIEluYy4xHDAaBgNVBAsTE0FtZXJpY2Eg
T25saW5lIEluYy4xNzA1BgNVBAMTLkFPTCBUaW1lIFdhcm5lciBSb290IENlcnRpZmljYXRpb24g
QXV0aG9yaXR5IDEwHhcNMDIwNTI5MDYwMDAwWhcNMzcxMTIwMTUwMzAwWjCBgzELMAkGA1UEBhMC
VVMxHTAbBgNVBAoTFEFPTCBUaW1lIFdhcm5lciBJbmMuMRwwGgYDVQQLExNBbWVyaWNhIE9ubGlu
ZSBJbmMuMTcwNQYDVQQDEy5BT0wgVGltZSBXYXJuZXIgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhv
cml0eSAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmd6PwyWjaTToBfd0ub9alxm5
L5TSk+UticqEfD8QQxuMi3yEWPgkfEjPKv3AFdkYfoQaF9PbntfK5NnXqlhRh/Dwi0hO4sLEWWkw
YrYwoowLEZlhNW1+78WxGQYgEo5C4d8PlhBSqM+cX5UU2K87dQsxIB9EL6JiQbO7GCHbynE8jOy2
uQ2f71HvTXsS8gsM4axAj3d/sMp4cQxdFnFwotfCOoXNDprE4ACw1SXq3CvklC04nIlBV2QoZRkc
tkS0yDFrjgF7dlklfxUchAh8c2UgCqEELhoyqJogsZwsIVnn+8/ucC0IymM+LJuTGWqkwpf/t4ZX
iIVsnhUWK00sswIDAQABo2MwYTAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBShNjAWy4aQAEWA
U7GPyNg9fL5fEjAfBgNVHSMEGDAWgBShNjAWy4aQAEWAU7GPyNg9fL5fEjAOBgNVHQ8BAf8EBAMC
AYYwDQYJKoZIhvcNAQEFBQADggEBAIogGKW+sy+0poQAQDAp+rQUc0x5Raf2cODofmQeCpV8amHC
704fvv/JmR8HYUrhXUzNre7QUjLZWTK82nly1nsJ6AKBNdMK3xEdyXmggE3+WtdW1u0PKq+nGHUz
DOrBYQVPapqJ8o25ny7vsF9aAOu+raD4RAVnvMsE755kxenIPwW/xi8HHMM2cYbKOGZKzda4S8Zs
p5c7+hMtbiNhh6FjQqzCy5efYWjPLUwEndclTwoOTZCLGFaok0hX3G+uvZ5nV3eJULO+EZtFZ4OG
GYfTmL0IGhYfWIIL4ZZpBUuO7INRMQfV1J//WXuoboXP00upSbBfsDkoaA5z3SWa3hIAAAACAC8v
ZXhwb3J0L2hkYTMvNi4xMC40L2xvY2FsL2NvbmYvY2VydHMvZDgyNzRlMjQuMAAAATC7K0HXAAVY
LjUwOQAABGgwggRkMIIDTKADAgECAhBEvgyLUAAktBHTNjBLwDN3MA0GCSqGSIb3DQEBBQUAMIGj
MQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQxFzAVBgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYD
VQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cudXNlcnRydXN0
LmNvbTErMCkGA1UEAxMiVVROLVVTRVJGaXJzdC1OZXR3b3JrIEFwcGxpY2F0aW9uczAeFw05OTA3
MDkxODQ4MzlaFw0xOTA3MDkxODU3NDlaMIGjMQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQxFzAV
BgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxITAf
BgNVBAsTGGh0dHA6Ly93d3cudXNlcnRydXN0LmNvbTErMCkGA1UEAxMiVVROLVVTRVJGaXJzdC1O
ZXR3b3JrIEFwcGxpY2F0aW9uczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALP7kaHk
NlWFrAY0W6CaWLL4tQ8Fd4OuMrF2kmjsI0rJdj/jnLY3eQO5q2mNByW2GWfksBsYc2FK6H7N0y9k
46Z8DPoXgKMNR4lPUXEv7vw/+bgWgIeJkyUgmkOCaSR2KFk1oR3Af4MGZBYgLNNJpIW0wGF/UQj4
aBWRgMul1e47OvSEBF5gWaeMNHLuuHjF0TsSSm9+ZSe5pFXFuW9DpMUdLJnAUqR4TBWzQJgIa0PG
AbB6e/VrHCI/y+//qNA6S3YVntLRxi7j21cbMqK4b+iGpj9wq+VwkqtEHkBQ+5yjYuRsbqDI3uKA
QvrpL+jOMgSPfI23HKM1PBXdnsOul6UCAwEAAaOBkTCBjjALBgNVHQ8EBAMCAcYwDwYDVR0TAQH/
BAUwAwEB/zAdBgNVHQ4EFgQU+obJ2+C66Xj1S6jWFd/w0+FqFDwwTwYDVR0fBEgwRjBEoEKgQIY+
aHR0cDovL2NybC51c2VydHJ1c3QuY29tL1VUTi1VU0VSRmlyc3QtTmV0d29ya0FwcGxpY2F0aW9u
cy5jcmwwDQYJKoZIhvcNAQEFBQADggEBAKTzJczR1JGDItDMMqublk40kVQgJTRhXyoCFeGLqv99
ZFHPCv+8fdghanjLL1Fv+EIdM73rtXuUw8OpoC3f0SkfHf6PP7uoRSp/0W5VJOK7AvsxP77ovOxA
K/gB1FY45MpEgrVhICFnZfbwC+c0+KXCnKNcQB+Fk5UG3k/UJ6m2pfwWzXMxP7hlJ8/UUxrwrG6f
TwUMA4GnhCnEWr1kV3KtO883GKaYxq0GtNwIowTVKaSWmhJnSoxgRZ3xI5qwAJxotZhQ0++OLpJl
sUg+Ib4VMCoNtQyjaz+uf1f1H5Z832/dgjAsZRtASs1ouXLscXbsVI4fhQwBavqmOKwfxIQAAAAC
AC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy85YWI2MjM1NS4wAAABUYW04xUA
BVguNTA5AAAF5DCCBeAwggPIoAMCAQICEQDy+mTidGPTjf0QHQQfdspYMA0GCSqGSIb3DQEBCwUA
MGcxCzAJBgNVBAYTAmNoMREwDwYDVQQKEwhTd2lzc2NvbTElMCMGA1UECxMcRGlnaXRhbCBDZXJ0
aWZpY2F0ZSBTZXJ2aWNlczEeMBwGA1UEAxMVU3dpc3Njb20gUm9vdCBFViBDQSAyMB4XDTExMDYy
NDA5NDUwOFoXDTMxMDYyNTA4NDUwOFowZzELMAkGA1UEBhMCY2gxETAPBgNVBAoTCFN3aXNzY29t
MSUwIwYDVQQLExxEaWdpdGFsIENlcnRpZmljYXRlIFNlcnZpY2VzMR4wHAYDVQQDExVTd2lzc2Nv
bSBSb290IEVWIENBIDIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDE9x0vV+pXbPdw
XWOwcVIJYEQoM6N6Tgr62Opsi1EWGlWuVCbEzEUHQU8QeX9x0npOPzhOswDGlcpbzcEqg9cnHzEO
Ixa3JcsctLmAMl4anZPx6DxgLKdeVxlYUV68LFYLuNjvi4K0PLjCJKgTx6AhNht6Vykopy6/cSWQ
80SDaVCk5OEbYhmUCaPzw7zv9L3s2xOdz51ICVJnwDcpER770hGnhRh0eeRPhRTrUjfisUXYzA1D
f64T0msrP6fC4qhtdltDn760nbMmhjsff+Xy6GYoFiXQS5c4p+TPCdE2wwu+2jtEWI2+8Z4Jaz7z
Mscrh8bsXpz2h2WtMynEL4nZucvJA537bJRRlxAbhgsaGz/2An571MVRZCid9dOsg4GI03S0WZ3B
62EzWkXRyznQBmpTYB2v9vtpvGrcAc+9+Y/ZvVvBOl+O2g9LqZudKihrGgp8PKsiC+V3LXH2gjWB
rvh7gebq/qz0Gpt0XOiPJPZdnUbELNIeKyFqgydnVUqk48gyl2aQctrj1GQuX+OhavZg1Oc1zcrE
aI3XccjTJDNzsWz5auEo21/GPei+VeY3G+0k2Q8Zj19jGFhQgVFlb/KffmoE5zQkcbp2S1geGb0V
YEWqDBJAAZ0Q4sc4B3IKZcC2uyUp2haeizWLYe3lcVeDtTxxn+NPv34egZ9BlwIDAQABo4GGMIGD
MA4GA1UdDwEB/wQEAwIBhjAdBgNVHSEEFjAUMBIGB2CFdAFTAgIGB2CFdAFTAgIwEgYDVR0TAQH/
BAgwBgEB/wIBAzAdBgNVHQ4EFgQURdmlgW49iE2NcdJGwW5FHvPEgJ0wHwYDVR0jBBgwFoAURdml
gW49iE2NcdJGwW5FHvPEgJ0wDQYJKoZIhvcNAQELBQADggIBAJQ6cwafUkswXNT+sVwl+deOb/WH
ZJ/tFI64BI4oS4+qe445tNlY9nuhNQqhnYr3Y+XrvTmC1ON6LW/fEzy6/n5WmAvzVJ/NRE5uPOE+
Fb8GJp3k8JC21MKeMC4f78d6xFDH6nvaUMt6JssAtFqrtZMfgImEBJWNjX8Jk7/UqKjkY23ZZOS4
KVoIv1DhhA9Ve18IIhv1vZkeFPbO9FgQgrMKPRnBv1urqpnY8jG95Thm3FgFx+1jGi4Kl3yHkyuy
iuPx7BjldbYph+fcixp+tNjJ04oXbH0pRL6KqvV+Oi5oMZO5atqa4NvpLqWEzRwKuEoI+ZzxYSaY
k7d7ZuyRXt1RP9tzD60EWAndBAKVCj7Tdt+mEB6APejNpGTRM8eSx+JOROMJyU7CXYcOEp6/D8kF
EN56o7E88j+lqid5rTF9H/38GWnF3bk/fM3GtMIwHn5uktd/YXZaj+uVTbwRbiF8WTeZ0Aa8+QZt
Mhal2Wmo4dw8gB5gUdzXVCEeymJ3T/rYj7MrOg14csloQVpHSsKj6xrXCqs8MlXIChGc33TW8EAV
Hci5j7U2xa/4IrjKHfPWthkPn2Flaup0yHyPw09dZYIf2Q2J2nVy++/xR2cTs8jRGYgnJpqZeX8e
5Cw/e+7x3k2LlpfD1T98GyPtpLMdFnJDSyDhWX7C6K0mv6L3AAAAAgAuL2V4cG9ydC9oZGEzLzcu
Mi4wL2xvY2FsL2NvbmYvY2VydHMvM2FkNDhhOTEuMAAAAUrnGDqDAAVYLjUwOQAAA3swggN3MIIC
X6ADAgECAgQCAAC5MA0GCSqGSIb3DQEBBQUAMFoxCzAJBgNVBAYTAklFMRIwEAYDVQQKEwlCYWx0
aW1vcmUxEzARBgNVBAsTCkN5YmVyVHJ1c3QxIjAgBgNVBAMTGUJhbHRpbW9yZSBDeWJlclRydXN0
IFJvb3QwHhcNMDAwNTEyMTg0NjAwWhcNMjUwNTEyMjM1OTAwWjBaMQswCQYDVQQGEwJJRTESMBAG
A1UEChMJQmFsdGltb3JlMRMwEQYDVQQLEwpDeWJlclRydXN0MSIwIAYDVQQDExlCYWx0aW1vcmUg
Q3liZXJUcnVzdCBSb290MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAowS7IquYPVfo
JnKatXnUKeLh6JWAsbDjW44rKZpk36Fd7bAJBW3bKC7OYqJi/rSI2hLrOOshncBBKwFSe4h30xyP
x7q5iLVqCedz6BFAp9HMymKNLeWPC6ZQ0qhQwyjq9aslh4qalhypZ7g/DNX3+VITL8Ib1XBw8I/A
EsoGy5rh2cozenfW+Oy58WhEQkgT0sDCpK5eYP62pgX8tN0HWQLUWRiYY/WlY+CQDH1dsgZ684Xq
69QDrl6EPl//Fe1pvPk5NnJ1z3dSTfPJkCy5PeXJI1M/HySYIVwHmSm9xjrs526GOmuXdGMzvWgY
MfB4jXa//J6OXSqGp02Q3CcaOQIDAQABo0UwQzAdBgNVHQ4EFgQU5Z1ZMIJHWMys+ghUNoZ7OrUE
TfAwEgYDVR0TAQH/BAgwBgEB/wIBAzAOBgNVHQ8BAf8EBAMCAQYwDQYJKoZIhvcNAQEFBQADggEB
AIUMXY7kb1FoQgWg3btPJyWEA733ZP0t1zDjpBAX69opKbZ5P3b2GRMjuBAK+Vik1GFwvQRhahKK
F9UKvcW8MHzW6QwljYZAT+zMo344xjcRT+3daDGOTNKzAXTuvnVeB0gaf3D/FlyEwHmFuAX9f75l
EaMPwAK0+FI3OQTVqTF6GL+gKvQSmfejRYLjPF71nZ61yJ58Lsiknk4IFEtt/XBtaxpjvWTmH7fO
8PKfLrsbt/JQiHOSwuLjFo2aMgKrjhjd6RAR7n41q5CvPjCUetAzPadlD/X8jp5iz0dELAFdux21
MtJH0jgu0P6B3DJqHrXuPNX854EdGcMkQupjOakAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9j
YWwvY29uZi9jZXJ0cy81MDIxYTBhMi4wAAABUYW0DeUABVguNTA5AAAD4TCCA90wggLFoAMCAQIC
Dh2iAAEAAuy3YIB4jbYGMA0GCSqGSIb3DQEBBQUAMHkxCzAJBgNVBAYTAkRFMRwwGgYDVQQKExNU
QyBUcnVzdENlbnRlciBHbWJIMSQwIgYDVQQLExtUQyBUcnVzdENlbnRlciBVbml2ZXJzYWwgQ0Ex
JjAkBgNVBAMTHVRDIFRydXN0Q2VudGVyIFVuaXZlcnNhbCBDQSBJMB4XDTA2MDMyMjE1NTQyOFoX
DTI1MTIzMTIyNTk1OVoweTELMAkGA1UEBhMCREUxHDAaBgNVBAoTE1RDIFRydXN0Q2VudGVyIEdt
YkgxJDAiBgNVBAsTG1RDIFRydXN0Q2VudGVyIFVuaXZlcnNhbCBDQTEmMCQGA1UEAxMdVEMgVHJ1
c3RDZW50ZXIgVW5pdmVyc2FsIENBIEkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCk
dyOWRK+Q9DGnEPQmh5zzONkPXt7PQegxrcZ0kSSWeB4JoJualUpK9WJ8AqjKrPtaBHY53l/x+bO/
8wNYVdKqt+MEItH4lNoiCACN03wmXcx3eecseDmoJnMOol0laYVPVQ6a78a5ROFXPd8fVCLlb2Wq
M4Q68856vlWXro0SDxQz4lBww0mHE7xR3teYElrvOoMzkgZ1i5J8Emh7cGoPtZu2d1tIWZ3k71qt
88Ge1NdFTspWNCG8Phdbb3cMSAFDKbDdP5Zu5pWqDMAgtv0+Niec41zPToHcGbuRkH3s5pcEHpPM
IknXl4a2Ewo8QyN3fvDc5s0kHzuDmzQ6gzTjAgMBAAGjYzBhMB8GA1UdIwQYMBaAFJKkdSyknr6B
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
NlGs6Z70eDqNzw/ZQuKYDKsvnw4B3u+fmUnxLd+sdE0bmLVHxeUp0fmQGMdinL6DxyZ7Poolx8Dd
neY1aBAgnY/Y3tLDhJwNXugvyQIDAQABo4HAMIG9MB0GA1UdDgQWBBSgEQojPpbxB+zirynvgqV/
0DCktDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zB7BgNVHR8EdDByMDigNqA0hjJo
dHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9BQUFDZXJ0aWZpY2F0ZVNlcnZpY2VzLmNybDA2oDSgMoYw
aHR0cDovL2NybC5jb21vZG8ubmV0L0FBQUNlcnRpZmljYXRlU2VydmljZXMuY3JsMA0GCSqGSIb3
DQEBBQUAA4IBAQAIVvwC8Jvo/6T61nvGRIDOT8TF9gBYzKa2vBRJaAR26ObuXewCD2DWjVAYTyZO
AePmsKXuv7x0VEG//fwSuMdPWvSJYAV/YLcFSvP28cK/xLl0hrYtfWvM0vNG3S/G4GrDwzQDLH2W
3VrCDqcKmcEFi6sML/NcOs9sN1UJh95TQGxY7/y2q2VuBPYb3DzgWhXGntnxWUgwIWUDbOzpIXPs
mwOh4DetoBUYj/q6As6nLKkQEyzU5QgmqyKXYPiQXnTUoppTvfKpaOCibsLXbLGjD56/62jnVvKu
8uMrODoJgbVrhde+Le0/GreyY+L1YiyC1GoAQVDxOYOflek2lphuAAAAAgAuL2V4cG9ydC9oZGEz
LzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvY2I3OTZiYzEuMAAAAUrnGM8FAAVYLjUwOQAABRowggUW
MIIEf6ADAgECAgEAMA0GCSqGSIb3DQEBBAUAMIGwMQswCQYDVQQGEwJJTDEPMA0GA1UECBMGSXNy
YWVsMQ4wDAYDVQQHEwVFaWxhdDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjEaMBgGA1UECxMRQ0Eg
QXV0aG9yaXR5IERlcC4xKTAnBgNVBAMTIEZyZWUgU1NMIENlcnRpZmljYXRpb24gQXV0aG9yaXR5
MSEwHwYJKoZIhvcNAQkBFhJhZG1pbkBzdGFydGNvbS5vcmcwHhcNMDUwMzE3MTczNzQ4WhcNMzUw
MzEwMTczNzQ4WjCBsDELMAkGA1UEBhMCSUwxDzANBgNVBAgTBklzcmFlbDEOMAwGA1UEBxMFRWls
YXQxFjAUBgNVBAoTDVN0YXJ0Q29tIEx0ZC4xGjAYBgNVBAsTEUNBIEF1dGhvcml0eSBEZXAuMSkw
JwYDVQQDEyBGcmVlIFNTTCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEhMB8GCSqGSIb3DQEJARYS
YWRtaW5Ac3RhcnRjb20ub3JnMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDthGAAI57ISlEp
J946oTm1aasJsi80/WHcPdOwz7HXwsTCseSWVsS+qhQO58w6UMg6Yp3Do6xZe47uVRocR76jlzmz
te8jLAjo2K9zL7nJg+jtAA/IdaUvNEwY6HaII0mK27btaNrDtWIpTKVLt5i0CRQQoPj+YnYiFQuk
1ggvNQIDAQABo4ICPDCCAjgwDwYDVR0TAQH/BAUwAwEB/zALBgNVHQ8EBAMCAeYwHQYDVR0OBBYE
FByJw5bMvf4y1Q2MgTG2mJ2NKGSNMIHdBgNVHSMEgdUwgdKAFByJw5bMvf4y1Q2MgTG2mJ2NKGSN
oYG2pIGzMIGwMQswCQYDVQQGEwJJTDEPMA0GA1UECBMGSXNyYWVsMQ4wDAYDVQQHEwVFaWxhdDEW
MBQGA1UEChMNU3RhcnRDb20gTHRkLjEaMBgGA1UECxMRQ0EgQXV0aG9yaXR5IERlcC4xKTAnBgNV
BAMTIEZyZWUgU1NMIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MSEwHwYJKoZIhvcNAQkBFhJhZG1p
bkBzdGFydGNvbS5vcmeCAQAwHQYDVR0RBBYwFIESYWRtaW5Ac3RhcnRjb20ub3JnMB0GA1UdEgQW
MBSBEmFkbWluQHN0YXJ0Y29tLm9yZzARBglghkgBhvhCAQEEBAMCAAcwLwYJYIZIAYb4QgENBCIW
IEZyZWUgU1NMIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MDIGCWCGSAGG+EIBBAQlFiNodHRwOi8v
Y2VydC5zdGFydGNvbS5vcmcvY2EtY3JsLmNybDAoBglghkgBhvhCAQIEGxYZaHR0cDovL2NlcnQu
c3RhcnRjb20ub3JnLzA5BglghkgBhvhCAQgELBYqaHR0cDovL2NlcnQuc3RhcnRjb20ub3JnL2lu
ZGV4LnBocD9hcHA9MTExMA0GCSqGSIb3DQEBBAUAA4GBAGxxJeGeNJEh79tsvQEIVo+I2EE6U/Vy
3ydXS3aE92ik/us/CX4ouFfqH8Gq4v+Wn0mZ5rKVc5bGSMdejQdyVviDj593rynTRQ6k7rA2dC3w
zZgjezdL2v5RmMQeNDyI/Zk7UKfBizPHwlIWEpVTZSLvuovOYttwI7GA3xogOOd+AAAAAgAvL2V4
cG9ydC9oZGEzLzYuMTAuNC9sb2NhbC9jb25mL2NlcnRzL2MyMTViYzY5LjAAAAEwuyr0dwAFWC41
MDkAAAMtMIIDKTCCApKgAwIBAgIENnAVljANBgkqhkiG9w0BAQUFADBGMQswCQYDVQQGEwJVUzEk
MCIGA1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QgQ28uMREwDwYDVQQLEwhEU1RDQSBFMTAe
Fw05ODEyMTAxODEwMjNaFw0xODEyMTAxODQwMjNaMEYxCzAJBgNVBAYTAlVTMSQwIgYDVQQKExtE
aWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xETAPBgNVBAsTCERTVENBIEUxMIGdMA0GCSqGSIb3
DQEBAQUAA4GLADCBhwKBgQCgbIGpzzQeJN3+hijM3oMv+V7UQtLodGBmE5gGHKlREmlvMVW5SXIA
CH7TpWJENySZj9mDSI+ZbZUTu0M7LklOiDfBu1h//uG9+LthzfNHwJmm8fOR6Hh8AMthyUQncWlV
Sn5JTe2io74CTADKAqjuAQIxZA9SLRN0dja1erQtcQIBA6OCASQwggEgMBEGCWCGSAGG+EIBAQQE
AwIABzBoBgNVHR8EYTBfMF2gW6BZpFcwVTELMAkGA1UEBhMCVVMxJDAiBgNVBAoTG0RpZ2l0YWwg
U2lnbmF0dXJlIFRydXN0IENvLjERMA8GA1UECxMIRFNUQ0EgRTExDTALBgNVBAMTBENSTDEwKwYD
VR0QBCQwIoAPMTk5ODEyMTAxODEwMjNagQ8yMDE4MTIxMDE4MTAyM1owCwYDVR0PBAQDAgEGMB8G
A1UdIwQYMBaAFGp5fpFpRhgTCgJ3pVlbYJglDqL4MB0GA1UdDgQWBBRqeX6RaUYYEwoCd6VZW2CY
JQ6i+DAMBgNVHRMEBTADAQH/MBkGCSqGSIb2fQdBAAQMMAobBFY0LjADAgSQMA0GCSqGSIb3DQEB
BQUAA4GBACIS2Hod3IEGtgllsofIH160L+nEHvI8wbsEkBFKg05+k7lNQseSJqBcNJo4cvj9axY+
IO6CizEqkzaFI4iKPANo08kJD038bKTaKHKTDomAsH3+gG9lbRgzl4vCa4nuYD3Im+9/KzJic5PL
PON74nZ4RbyhkwS7hp86W0N6w4plAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYv
Y2VydHMvMDJiNzM1NjEuMAAAAUrnGIUfAAVYLjUwOQAABEMwggQ/MIIDJ6ADAgECAgEBMA0GCSqG
SIb3DQEBBQUAMH4xCzAJBgNVBAYTAkdCMRswGQYDVQQIDBJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAO
BgNVBAcMB1NhbGZvcmQxGjAYBgNVBAoMEUNvbW9kbyBDQSBMaW1pdGVkMSQwIgYDVQQDDBtTZWN1
cmUgQ2VydGlmaWNhdGUgU2VydmljZXMwHhcNMDQwMTAxMDAwMDAwWhcNMjgxMjMxMjM1OTU5WjB+
MQswCQYDVQQGEwJHQjEbMBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxm
b3JkMRowGAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEkMCIGA1UEAwwbU2VjdXJlIENlcnRpZmlj
YXRlIFNlcnZpY2VzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwHEzgorQcOtzh4JA
1R3ky8kOQpD53jS5oboR9CWF88xybfJ7l2uzB/F3JJFfJY/2dD3kgML4PA3zv0Dq98hS0XJv78ir
QbhuLhcqlWkMzdIelHstlB2qddezmMusvGRTQLyPrKw2y1ytu93glBfs0VzQv++llcmQxbCs+xtD
33oIXbe48kAbKyeeUM5eZYKIjF7TTgx66giRtjaqK0L76sKjOeXbJjitiwruGWPHHCTfA3ja5urB
RxoLC0YJ3QL83suHX9cwY2ihrtwyobq+/kSraLalFxX9vdWnp5rkRDPpiI787VHrk3FOrQHnRI6r
Lcuo/gFJSPDA3cdo2JL+PQIDAQABo4HHMIHEMB0GA1UdDgQWBBQ82JOIwsCCCcwBmQaTIOmecAlj
TzAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zCBgQYDVR0fBHoweDA7oDmgN4Y1aHR0
cDovL2NybC5jb21vZG9jYS5jb20vU2VjdXJlQ2VydGlmaWNhdGVTZXJ2aWNlcy5jcmwwOaA3oDWG
M2h0dHA6Ly9jcmwuY29tb2RvLm5ldC9TZWN1cmVDZXJ0aWZpY2F0ZVNlcnZpY2VzLmNybDANBgkq
hkiG9w0BAQUFAAOCAQEAhwFtIx1+Wxd9wWEyz4/n84qUWWbgniioXtO39DTmqjmylxbFgm8ypOmM
56/978LouUuqo/Tm2o1lIfu6gOsmKIUa/jmM3lsEBLRU+aNnnkH6CVLMBUioyT8hBB7OSGv8hejC
e69/t8z4Xzr9NcYN75fcTKsR4WvLMdFs+0iAq9ycN7ghFEsNcT3sgzNu0W4yFuyYxxaLWaY0qwVX
LZP3qhPL0hPity47zWtQFwloPrUmV+624LbduSmAeX2Po/CkKKQVxIX0J9Rrv+Vc5GUCdlS04zdm
JNMZYchSEOWLN5q5qfkdv+qZkmGW/wHNoV8NvHG8DqwLHUdFHcHsfOz9KQAAAAIALi9leHBvcnQv
aGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzL2VkNjJmNGUzLjAAAAFK5xgXSgAFWC41MDkAAAMH
MIIDAzCCAmwCEQC5L2DMiJ+hekYJuFtwbIqvMA0GCSqGSIb3DQEBBQUAMIHBMQswCQYDVQQGEwJV
UzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0NsYXNzIDIgUHVibGljIFByaW1h
cnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMjE6MDgGA1UECxMxKGMpIDE5OTggVmVyaVNp
Z24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1
c3QgTmV0d29yazAeFw05ODA1MTgwMDAwMDBaFw0yODA4MDEyMzU5NTlaMIHBMQswCQYDVQQGEwJV
UzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xPDA6BgNVBAsTM0NsYXNzIDIgUHVibGljIFByaW1h
cnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHMjE6MDgGA1UECxMxKGMpIDE5OTggVmVyaVNp
Z24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25seTEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1
c3QgTmV0d29yazCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAp4gBIXQs5xoD8JjhlzwPIQjx
nNuX6Zr8wgQGE75fUsjMHiwSViy4AWkszJkfrbCWrnkE8hM5wXuYuggs6MKEEyyqaekJ9MepAqRC
wiNPStjwDqL7MWzJ5m+ZJwf15vRMeJ5t60aG+rmGyVTyssSv1EYcWskVMP8NbPUtDm3Of3cCAwEA
ATANBgkqhkiG9w0BAQUFAAOBgQByLvl/0fFx+8Se9sVeUYpAmLho+Jscg9jinb3/7aHmZuovCfTK
1+qlK5X2JGCGTUQug6XELaDTrnhpb3LabK4I8GOSN+a7xDAXrXfMSTWqz9iP0b63GJZHc2pUIjRk
LbYWm1lbtFFZOrMLFPQS32eg9K0yZF6xRnInjBJ7xUS0rgAAAAIALy9leHBvcnQvaGRhMy82LjEw
LjQvbG9jYWwvY29uZi9jZXJ0cy83ODhjOWJmYy4wAAABMLsrHMsABVguNTA5AAADhDCCA4AwggJo
oAMCAQICAgMeMA0GCSqGSIb3DQEBBQUAMGExCzAJBgNVBAYTAlVTMQ0wCwYDVQQKEwRWSVNBMS8w
LQYDVQQLEyZWaXNhIEludGVybmF0aW9uYWwgU2VydmljZSBBc3NvY2lhdGlvbjESMBAGA1UEAxMJ
R1AgUm9vdCAyMB4XDTAwMDgxNjIyNTEwMFoXDTIwMDgxNTIzNTkwMFowYTELMAkGA1UEBhMCVVMx
DTALBgNVBAoTBFZJU0ExLzAtBgNVBAsTJlZpc2EgSW50ZXJuYXRpb25hbCBTZXJ2aWNlIEFzc29j
aWF0aW9uMRIwEAYDVQQDEwlHUCBSb290IDIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
AQCpAXC1qsRA8KtqJmF5GQD8v5s3WQyvb2Qb+NqVlCRpMxFwyuNWdKIXV2RcIAbh1u9xtzv3q8Fp
0EmksQTX9FdiiVywdS0XJGnjQmDk7nTWq4BW2Igo4fttIv0jfEZzT35Ucx6oLFVYdbdM81pFpQIa
+tqdw0XDIl7zi/FgKdLHX7QMOlGD7zD41OfH8vqZoyJQvvkFN6Ot7ZrD5uyIG7YZJxs4i4BN7LnH
xYnL/Boy7SPwtQFY+faP4IWpTAlyORLbs/XPTmJk2sYZFTpjHekXVaFMIjw0Mkb4ZVe6K+82jGr6
2dlE9KrdhNcNHLJUrDKFtGQN3kG7sTTGAYYyZNWfAgMBAAGjQjBAMB0GA1UdDgQWBBSefUs0v3Gt
wgX2A3WAzqlPGsQkTDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0B
AQUFAAOCAQEAIaV2FFX5rSdwjzz01WzIzAqro5gLigYjxclh25kHaTUmMf7HLoTCmWHUDel9LhMr
fI6FtoXHS881tixHPc4pL9hvn4kcZJO/CL120JCKlLN/KFturE0zLO1l3BbM4s2upD1ikgaVJr/f
ueQgpnNqwb73lETWTW8qC2sYTXQQNmhqWsFqp902KYy4MItPIT8ALlQwBzq6iuTDnsrYtdh7znVF
Zgf0bS3YesrpiYryI9gvy24ANk/78C8BzA/AImX0q+JOYS0Dgn2RFrUw1RTeXseQ/KH8qxCvXGtw
pwfvKYbosiXHIP8m3XfveUQUxL3dO8UDm3cj7KDsu1o5tcytBgAAAAIALi9leHBvcnQvaGRhMy83
LjIuMC9sb2NhbC9jb25mL2NlcnRzL2M1MjdlNGFiLjAAAAFK5xgwvQAFWC41MDkAAAQeMIIEGjCC
AwICEQDsoKeLbnVqAc/EfMwvlF7XMA0GCSqGSIb3DQEBBQUAMIHKMQswCQYDVQQGEwJVUzEXMBUG
A1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdvcmsxOjA4
BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkx
RTBDBgNVBAMTPFZlcmlTaWduIENsYXNzIDQgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBB
dXRob3JpdHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQswCQYDVQQG
EwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5l
dHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQg
dXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWduIENsYXNzIDQgUHVibGljIFByaW1hcnkgQ2VydGlm
aWNhdGlvbiBBdXRob3JpdHkgLSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK3L
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
hkiG9w0BAQUFADCBuzEkMCIGA1UEBxMbVmFsaUNlcnQgVmFsaWRhdGlvbiBOZXR3b3JrMRcwFQYD
VQQKEw5WYWxpQ2VydCwgSW5jLjE1MDMGA1UECxMsVmFsaUNlcnQgQ2xhc3MgMSBQb2xpY3kgVmFs
aWRhdGlvbiBBdXRob3JpdHkxITAfBgNVBAMTGGh0dHA6Ly93d3cudmFsaWNlcnQuY29tLzEgMB4G
CSqGSIb3DQEJARYRaW5mb0B2YWxpY2VydC5jb20wHhcNOTkwNjI1MjIyMzQ4WhcNMTkwNjI1MjIy
MzQ4WjCBuzEkMCIGA1UEBxMbVmFsaUNlcnQgVmFsaWRhdGlvbiBOZXR3b3JrMRcwFQYDVQQKEw5W
YWxpQ2VydCwgSW5jLjE1MDMGA1UECxMsVmFsaUNlcnQgQ2xhc3MgMSBQb2xpY3kgVmFsaWRhdGlv
biBBdXRob3JpdHkxITAfBgNVBAMTGGh0dHA6Ly93d3cudmFsaWNlcnQuY29tLzEgMB4GCSqGSIb3
DQEJARYRaW5mb0B2YWxpY2VydC5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBANhZgnqJ
uJa6pi9ob1gup1QcBm706o1IvDGUF/DzTryyuDWSdrDQpaUB1wADEiIZCPj/ESObzgf1v2kaJv5O
6dF/nSxAHVlobqb4WLCdGo/TP/HcGQaBqA7gOt3IU0UJBuYPcMP6QKYO4lYFDxhN/CCC0XNVdI12
cqAdnR3A3T9xAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAUGg9SfQsHAaU35Vgf5Z7F/5Pca1kyN13
0u9ZVeg/6I4FKiHyB9K1p1L+nLG24lt3F0DqctYjyyiBMsMAeRjsWReJycZqHnHJ/bd0pSVFacVI
qxnhRYolaxnu5bsS9X/3po1Rw/CddLepPqCl/7ZJAxPaIsztcYIrmc86t/UtcsgAAAACAC8vZXhw
b3J0L2hkYTMvNi4xMC40L2xvY2FsL2NvbmYvY2VydHMvNzRjMjZiZDAuMAAAATC7KxgvAAVYLjUw
OQAAApQwggKQMIIB+aADAgECAgEBMA0GCSqGSIb3DQEBBAUAMFoxCzAJBgNVBAYTAlVTMRwwGgYD
VQQKExNFcXVpZmF4IFNlY3VyZSBJbmMuMS0wKwYDVQQDEyRFcXVpZmF4IFNlY3VyZSBHbG9iYWwg
ZUJ1c2luZXNzIENBLTEwHhcNOTkwNjIxMDQwMDAwWhcNMjAwNjIxMDQwMDAwWjBaMQswCQYDVQQG
EwJVUzEcMBoGA1UEChMTRXF1aWZheCBTZWN1cmUgSW5jLjEtMCsGA1UEAxMkRXF1aWZheCBTZWN1
cmUgR2xvYmFsIGVCdXNpbmVzcyBDQS0xMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC65xeQ
AmWxNFU8ScJR1d+n0TeP0eeBc0FSYJudoRcmeK3HsegmlDK13jONOi/b8pp6WnOYo1zp+4pzG1zn
w7+AbM2p9NYrwPf5mapjorFHAg/U5FE6EjxsilpUhHDbwcWQz3JFy6hZwM0znT+jluuFMyEcPh4+
YG52nGeFxcjDYQIDAQABo2YwZDARBglghkgBhvhCAQEEBAMCAAcwDwYDVR0TAQH/BAUwAwEB/zAf
BgNVHSMEGDAWgBS+qKB0clBrRLfJI9j7qP+zV2tobDAdBgNVHQ4EFgQUvqigdHJQa0S3ySPY+6j/
s1draGwwDQYJKoZIhvcNAQEEBQADgYEAMOIBUarH6l/audBlDzDWPtoNFElukZMnFDHvxPctRfjs
x7+iQQ0jtJL5GQBnvQGvzeBx/FrPZMTglpjQo0DiAYrvJwfxZQGKRC0GZXVSwIYQICFfbGsPbK4J
HK/yohg0xHWkcxzxjdzvrfmzdrSSv9yVEB6+y8g7WoRgGVaUqVUAAAACAC4vZXhwb3J0L2hkYTMv
Ny4yLjAvbG9jYWwvY29uZi9jZXJ0cy8zYzU4ZjkwNi4wAAABSucYR+YABVguNTA5AAAEOjCCBDYw
ggMeoAMCAQICAQEwDQYJKoZIhvcNAQEFBQAwbzELMAkGA1UEBhMCU0UxFDASBgNVBAoTC0FkZFRy
dXN0IEFCMSYwJAYDVQQLEx1BZGRUcnVzdCBFeHRlcm5hbCBUVFAgTmV0d29yazEiMCAGA1UEAxMZ
QWRkVHJ1c3QgRXh0ZXJuYWwgQ0EgUm9vdDAeFw0wMDA1MzAxMDQ4MzhaFw0yMDA1MzAxMDQ4Mzha
MG8xCzAJBgNVBAYTAlNFMRQwEgYDVQQKEwtBZGRUcnVzdCBBQjEmMCQGA1UECxMdQWRkVHJ1c3Qg
RXh0ZXJuYWwgVFRQIE5ldHdvcmsxIjAgBgNVBAMTGUFkZFRydXN0IEV4dGVybmFsIENBIFJvb3Qw
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC39xoz5vIABC054E5b7R+8bA/Ntfojts7e
mxEzl6QpTH2Tn71KvJPtAxrjj8/lbVBa1pcplFqAsEl62y6V/bjKvzc4LR4+kUGtcFbH8E8/6DKe
dMrIkFTpxl8PeJ2aQDwOrGGqXhSPnoehalDc15pOrwWzpnGUnHGzUGAKxxOdOAeGAqjpqGkmGJCr
TLBPI6s6T4TY386f4Wlvu9dC12tE5Met7m1BX3JacQg3s3llpFmglDf3AC8NwpJy2tA4ctsUqEXE
XSp9t7TWxO6szRNEt8kr3UMAJfphuWlqWCMRt6czj1Z1WfXNKddGtworZbbTQm8Vsrh7++/pXVPV
NFonAgMBAAGjgdwwgdkwHQYDVR0OBBYEFK29mHo0tCb3+sQmVO8DveAky1QaMAsGA1UdDwQEAwIB
BjAPBgNVHRMBAf8EBTADAQH/MIGZBgNVHSMEgZEwgY6AFK29mHo0tCb3+sQmVO8DveAky1QaoXOk
cTBvMQswCQYDVQQGEwJTRTEUMBIGA1UEChMLQWRkVHJ1c3QgQUIxJjAkBgNVBAsTHUFkZFRydXN0
IEV4dGVybmFsIFRUUCBOZXR3b3JrMSIwIAYDVQQDExlBZGRUcnVzdCBFeHRlcm5hbCBDQSBSb290
ggEBMA0GCSqGSIb3DQEBBQUAA4IBAQCwm+CFJcLWI+IPlgaSnUGYnNmEeYHZHlsUByM2ZY+w2He7
rEFsR2CDUbD5Mj3n/PYmE8eAFqW/WvyHz3h5iSGa4kwHCoY1vPLeUcTSlrfcfk7ucP0cOesMAlEU
LY69FuDB30Z15ySt7PRCtIWTcBBnup0GNUoY0yt6zFFCoXpj0ea7ocUrwja+Ew3mvWN+eXunCQ1A
q2rdj4rD9vaMGkIFUdRF9Z+nYiFoFSBDPJnnfL0k2KmRF3OIP1YbMTgYtHEPms3IDp6OLhvhjJiD
yx8x8URMxgRzSXZgD8f4vReAay7pzEwOWpp5DyAKLtWeYyYeVZKU2IIXWnvQvMePToYEAAAAAgAu
L2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvZDgyNzRlMjQuMAAAAVGFtZx8AAVY
LjUwOQAABGgwggRkMIIDTKADAgECAhBEvgyLUAAktBHTNjBLwDN3MA0GCSqGSIb3DQEBBQUAMIGj
MQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQxFzAVBgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYD
VQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxITAfBgNVBAsTGGh0dHA6Ly93d3cudXNlcnRydXN0
LmNvbTErMCkGA1UEAxMiVVROLVVTRVJGaXJzdC1OZXR3b3JrIEFwcGxpY2F0aW9uczAeFw05OTA3
MDkxODQ4MzlaFw0xOTA3MDkxODU3NDlaMIGjMQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQxFzAV
BgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxITAf
BgNVBAsTGGh0dHA6Ly93d3cudXNlcnRydXN0LmNvbTErMCkGA1UEAxMiVVROLVVTRVJGaXJzdC1O
ZXR3b3JrIEFwcGxpY2F0aW9uczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALP7kaHk
NlWFrAY0W6CaWLL4tQ8Fd4OuMrF2kmjsI0rJdj/jnLY3eQO5q2mNByW2GWfksBsYc2FK6H7N0y9k
46Z8DPoXgKMNR4lPUXEv7vw/+bgWgIeJkyUgmkOCaSR2KFk1oR3Af4MGZBYgLNNJpIW0wGF/UQj4
aBWRgMul1e47OvSEBF5gWaeMNHLuuHjF0TsSSm9+ZSe5pFXFuW9DpMUdLJnAUqR4TBWzQJgIa0PG
AbB6e/VrHCI/y+//qNA6S3YVntLRxi7j21cbMqK4b+iGpj9wq+VwkqtEHkBQ+5yjYuRsbqDI3uKA
QvrpL+jOMgSPfI23HKM1PBXdnsOul6UCAwEAAaOBkTCBjjALBgNVHQ8EBAMCAcYwDwYDVR0TAQH/
BAUwAwEB/zAdBgNVHQ4EFgQU+obJ2+C66Xj1S6jWFd/w0+FqFDwwTwYDVR0fBEgwRjBEoEKgQIY+
aHR0cDovL2NybC51c2VydHJ1c3QuY29tL1VUTi1VU0VSRmlyc3QtTmV0d29ya0FwcGxpY2F0aW9u
cy5jcmwwDQYJKoZIhvcNAQEFBQADggEBAKTzJczR1JGDItDMMqublk40kVQgJTRhXyoCFeGLqv99
ZFHPCv+8fdghanjLL1Fv+EIdM73rtXuUw8OpoC3f0SkfHf6PP7uoRSp/0W5VJOK7AvsxP77ovOxA
K/gB1FY45MpEgrVhICFnZfbwC+c0+KXCnKNcQB+Fk5UG3k/UJ6m2pfwWzXMxP7hlJ8/UUxrwrG6f
TwUMA4GnhCnEWr1kV3KtO883GKaYxq0GtNwIowTVKaSWmhJnSoxgRZ3xI5qwAJxotZhQ0++OLpJl
sUg+Ib4VMCoNtQyjaz+uf1f1H5Z832/dgjAsZRtASs1ouXLscXbsVI4fhQwBavqmOKwfxIQAAAAC
AC4vZXhwb3J0L2hkYTMvNy4yLjAvbG9jYWwvY29uZi9jZXJ0cy9mM2NmMWU4ZS4wAAABSucYZjoA
BVguNTA5AAAFbjCCBWowggRSoAMCAQICBDy1PUYwDQYJKoZIhvcNAQEFBQAwZjESMBAGA1UEChMJ
YmVUUlVTVGVkMRswGQYDVQQLExJiZVRSVVNUZWQgUm9vdCBDQXMxMzAxBgNVBAMTKmJlVFJVU1Rl
ZCBSb290IENBLUJhbHRpbW9yZSBJbXBsZW1lbnRhdGlvbjAeFw0wMjA0MTEwNzM4NTFaFw0yMjA0
MTEwNzM4NTFaMGYxEjAQBgNVBAoTCWJlVFJVU1RlZDEbMBkGA1UECxMSYmVUUlVTVGVkIFJvb3Qg
Q0FzMTMwMQYDVQQDEypiZVRSVVNUZWQgUm9vdCBDQS1CYWx0aW1vcmUgSW1wbGVtZW50YXRpb24w
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC8fsQ5nIzj1hyG/8pireB/MEV6jhqzuMf5
0Tb/IvNOal+EEPtmgcOUeTHSkeF3jhgqwxTeUfVPoyu8GBbitd153iL4gn7LgR/9JyyP+pdkIo74
/2GjnBseko/AqAnfCRHst30xmhrqgyEGPJ+6XP+U6mq4w2tVNE89Mh/dgRTgxDzNnTD4MKmX0+7M
o9AfXxwTgdQYq5TRY8OefzWSnl9E6uz0Ily36D19pPmJqZGyKtnrM4fupf3j2syI5okmbscrgtBe
nVnbFOyRgwXDXg7GKtAE3XE9IE5YJ/xT+3h4GRSy/JBSiThiYAe0oOysa1DW/bkoa+9SLTqy//EB
QKw3AgMBAAGjggIeMIICGjAPBgNVHRMBAf8EBTADAQH/MIIBtQYDVR0gBIIBrDCCAagwggGkBg8r
BgEEAbE+AAABCSiDkTEwggGPMIIBSAYIKwYBBQUHAgIwggE6GoIBNlJlbGlhbmNlIG9uIG9yIHVz
ZSBvZiB0aGlzIENlcnRpZmljYXRlIGNyZWF0ZXMgYW4gYWNrbm93bGVkZ21lbnQgYW5kIGFjY2Vw
dGFuY2Ugb2YgdGhlIHRoZW4gYXBwbGljYWJsZSBzdGFuZGFyZCB0ZXJtcyBhbmQgY29uZGl0aW9u
cyBvZiB1c2UsIHRoZSBDZXJ0aWZpY2F0aW9uIFByYWN0aWNlIFN0YXRlbWVudCBhbmQgdGhlIFJl
bHlpbmcgUGFydHkgQWdyZWVtZW50LCB3aGljaCBjYW4gYmUgZm91bmQgYXQgdGhlIGJlVFJVU1Rl
ZCB3ZWIgc2l0ZSwgaHR0cDovL3d3dy5iZXRydXN0ZWQuY29tL3Byb2R1Y3RzX3NlcnZpY2VzL2lu
ZGV4Lmh0bWwwQQYIKwYBBQUHAgEWNWh0dHA6Ly93d3cuYmV0cnVzdGVkLmNvbS9wcm9kdWN0c19z
ZXJ2aWNlcy9pbmRleC5odG1sMB0GA1UdDgQWBBRFPcOp0dw/JFaYHHMYiGr/g0fttjAfBgNVHSME
GDAWgBRFPcOp0dw/JFaYHHMYiGr/g0fttjAOBgNVHQ8BAf8EBAMCAQYwDQYJKoZIhvcNAQEFBQAD
ggEBAEmSvKPurL36DcmLeYYcI3awgFl3/Np/tEvfw2RLak4OrfJ9WXcFrQqJc7D6vMvcjQCIj6ag
suqsUie/oUh8lxB7uu0THZoHbssxYhLoYwOqfW3j+Bt2IXgbn0tDjNNJhvYbXPYuYBXT6eN7dT/Q
AoPQGIJBzWU36o4yfr1rmV0wEcjbSFQcO+GnE9NqSJP3PYx/BejO84gqYwS46n5YfAF7W+HFfe8h
4I0OXVF9sWf9o704NsbyOIaHGpZoYEb7KBRHVeGngAxr4urfTXyQSKA2vQkXiX/D8tOcnOPdxBvd
9bdxs1MFiQbQy0qAwchTkLU8MYgXUJ/JxA6L2KgCYw0AAAACAC4vZXhwb3J0L2hkYTMvNy40LjAv
bG9jYWwvY29uZi9jZXJ0cy84NjIxMmIxOS4wAAABUYW0iNMABVguNTA5AAADUDCCA0wwggI0oAMC
AQICCHxPBDkc1JktMA0GCSqGSIb3DQEBBQUAMEQxCzAJBgNVBAYTAlVTMRQwEgYDVQQKDAtBZmZp
cm1UcnVzdDEfMB0GA1UEAwwWQWZmaXJtVHJ1c3QgTmV0d29ya2luZzAeFw0xMDAxMjkxNDA4MjRa
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
LCeIQGv33N0iYfXCxw719tV2U02PjLwYdjeFnejKScfST5gTCaI+Ioicf9byEGW07l8Y1Rfj+MX9
4p2i71MOhXeiD+EwR+4A5zN9RGcaC1Hoi6CeUJhoNFIfLm0B8mBF8jHrqTFoKbt6QZ7GGX+UtFE5
A3+y3qcym7RHjm+0Sq7lr7HcsBthvJly3uSJt3omXdozSVtSnA71iq3DuD3oBmrC1SoLbHuEvVYF
y4ZlkuxEK7COudxwC0barbxjiDn622r+I/q85Ej0ZytqERAhSQIDAQABo4GRMIGOMAwGA1UdEwQF
MAMBAf8wTwYDVR0gBEgwRjBEBgRVHSAAMDwwOgYIKwYBBQUHAgEWLmh0dHA6Ly93d3cucGtpb3Zl
cmhlaWQubmwvcG9saWNpZXMvcm9vdC1wb2xpY3kwDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBSo
feu8Y6R0E3QA7Jbg0zTBLL9s+DANBgkqhkiG9w0BAQUFAAOCAQEABYSHVXQ2YcG70dTGFagTtJ+k
/rvuFbQvBgwp8qiSpGEN/KtcCFtREytNwiphyPgJWPwtArI5fZlmgb9uXJVFIGzmeafR2Bwp/MIg
J1HI8XxdNGdphREwxgDS1/PTfLbwMVcoEoJz6TMvplW0C5GUR5z6u3pCMuiufi3IvKwUv9kP2Vv8
wfl6leF9fpb8cbDCTMjfRTTJzg3ynGQI0DvDKcWy7ZAEwbEpkcUwb8GpcjPM/l0WFywRaed+/sWD
CN+83CI6LiBpIzlWYGeQiy52OfsRiJf2fL1LuCAWZwWN4jvBcj+UlTfHXbme2JOhF4//DGYVwSR8
MnwDHTuhWEUykwAAAAIALi9leHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzLzRmYmQ2
YmZhLjAAAAFK5xivjgAFWC41MDkAAARiMIIEXjCCA0agAwIBAgIQRL4Mi1AAIbQR0ypoBqmtaTAN
BgkqhkiG9w0BAQUFADCBkzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYDVQQHEw5TYWx0
IExha2UgQ2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExhodHRw
Oi8vd3d3LnVzZXJ0cnVzdC5jb20xGzAZBgNVBAMTElVUTiAtIERBVEFDb3JwIFNHQzAeFw05OTA2
MjQxODU3MjFaFw0xOTA2MjQxOTA2MzBaMIGTMQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQxFzAV
BgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxITAf
BgNVBAsTGGh0dHA6Ly93d3cudXNlcnRydXN0LmNvbTEbMBkGA1UEAxMSVVROIC0gREFUQUNvcnAg
U0dDMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3+5YEKIrblXEjr8uRgnn4AgPLit6
E5Qbvfa2gI5lBZMAHryv4g+OGQ0SR+ysraP6LnD43m77VkIVni5c7yPeIbkFdicZD0/Ww5y0vpQZ
Y/KmEQrrU0icvvIpOxboGqBMpsn0GFlowHDyUwDAXlCCpVZvNvlK4ESGoE1O1kduSUrLZ9emxAW5
jh70/P/N5zbgnAVssjMiFdC04MwXwLLA9P4yPykqlXvY8qdOD1R8oQ2AswkDwf9c3V6aPryuvEeK
aq5xyh+xKrhfQgUL7EYw0XILyulWbfXv33i+Ybqypa4ETLyorGkVl73v67SMvzX41MPRKA5cOp9w
GDMgd8SirwIDAQABo4GrMIGoMAsGA1UdDwQEAwIBxjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
BBRTMtGzz3/64PGgXYVOktKeRR20TzA9BgNVHR8ENjA0MDKgMKAuhixodHRwOi8vY3JsLnVzZXJ0
cnVzdC5jb20vVVROLURBVEFDb3JwU0dDLmNybDAqBgNVHSUEIzAhBggrBgEFBQcDAQYKKwYBBAGC
NwoDAwYJYIZIAYb4QgQBMA0GCSqGSIb3DQEBBQUAA4IBAQAnNZcAiosovcYzMB4p/OL31ZjUQLtg
yr+rFywJNn9Q+kHcrpY6CiM+iVnJowftGzet/Hy+UUla3joKVAgWRcKZsYfNjGjgaQPpxE6YsjuM
FrMOoAyYUJuTqXAJyCyjj98C5OBxOvG0I3KgqgHf35g+FFCgMSa9KOlaMCZ1+XtgHI3zzVAmbQQn
mt/VDUVHKWss5nbZqSl9Mt3JNjy9rjXxEZ4du5A/EkdOjtd+D2JzHVImOBwYSf0wdJrE5SIv2MCN
7ZF6TACPcn9d2t0bi0Vr591pl6jFVkwPDPafepE39peC4N1xaf92P2BNPM/3mfnGV/TJVTl4uix5
yaaIK/QIAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2VydHMvYzIxNWJjNjku
MAAAAVGFtYWtAAVYLjUwOQAAAy0wggMpMIICkqADAgECAgQ2cBWWMA0GCSqGSIb3DQEBBQUAMEYx
CzAJBgNVBAYTAlVTMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xETAPBgNV
BAsTCERTVENBIEUxMB4XDTk4MTIxMDE4MTAyM1oXDTE4MTIxMDE4NDAyM1owRjELMAkGA1UEBhMC
VVMxJDAiBgNVBAoTG0RpZ2l0YWwgU2lnbmF0dXJlIFRydXN0IENvLjERMA8GA1UECxMIRFNUQ0Eg
RTEwgZ0wDQYJKoZIhvcNAQEBBQADgYsAMIGHAoGBAKBsganPNB4k3f6GKMzegy/5XtRC0uh0YGYT
mAYcqVESaW8xVblJcgAIftOlYkQ3JJmP2YNIj5ltlRO7QzsuSU6IN8G7WH/+4b34u2HN80fAmabx
85HoeHwAy2HJRCdxaVVKfklN7aKjvgJMAMoCqO4BAjFkD1ItE3R2NrV6tC1xAgEDo4IBJDCCASAw
EQYJYIZIAYb4QgEBBAQDAgAHMGgGA1UdHwRhMF8wXaBboFmkVzBVMQswCQYDVQQGEwJVUzEkMCIG
A1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QgQ28uMREwDwYDVQQLEwhEU1RDQSBFMTENMAsG
A1UEAxMEQ1JMMTArBgNVHRAEJDAigA8xOTk4MTIxMDE4MTAyM1qBDzIwMTgxMjEwMTgxMDIzWjAL
BgNVHQ8EBAMCAQYwHwYDVR0jBBgwFoAUanl+kWlGGBMKAnelWVtgmCUOovgwHQYDVR0OBBYEFGp5
fpFpRhgTCgJ3pVlbYJglDqL4MAwGA1UdEwQFMAMBAf8wGQYJKoZIhvZ9B0EABAwwChsEVjQuMAMC
BJAwDQYJKoZIhvcNAQEFBQADgYEAIhLYeh3cgQa2CWWyh8gfXrQv6cQe8jzBuwSQEUqDTn6TuU1C
x5ImoFw0mjhy+P1rFj4g7oKLMSqTNoUjiIo8A2jTyQkPTfxspNoocpMOiYCwff6Ab2VtGDOXi8Jr
ie5gPcib738rMmJzk8s843vidnhFvKGTBLuGnzpbQ3rDimUAAAACAC4vZXhwb3J0L2hkYTMvNy40
LjAvbG9jYWwvY29uZi9jZXJ0cy9kYmM1NGNhYi4wAAABUYW0jFkABVguNTA5AAAFSjCCBUYwggMu
oAMCAQICCG2MFEaxpgruMA0GCSqGSIb3DQEBDAUAMEExCzAJBgNVBAYTAlVTMRQwEgYDVQQKDAtB
ZmZpcm1UcnVzdDEcMBoGA1UEAwwTQWZmaXJtVHJ1c3QgUHJlbWl1bTAeFw0xMDAxMjkxNDEwMzZa
Fw00MDEyMzExNDEwMzZaMEExCzAJBgNVBAYTAlVTMRQwEgYDVQQKDAtBZmZpcm1UcnVzdDEcMBoG
A1UEAwwTQWZmaXJtVHJ1c3QgUHJlbWl1bTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIB
AMQS36lf/kHd3fWfiuP2rOE8eJq82PB/eqAzKtyNIFuuLW/nk9k2cGpoz45Ro4VbZwSgECRvXSiC
wZdX2EgpE7bhvpFN34UMUxiaHiSiT4/wooULy/Qpf9KkWO4mTcmqqHua2fo43kRXFeX4jMjZSOIN
FicdHsiDhSW3uqpVQcwDIkstkY2L5omvZsfp/yvpPKza0rPD4Wicifh6AFbe9FWVbPu6ZN1ii98L
dzLrYswmmpu7qmKDTLQGejDIKb/tBk2XuRzEMSvVX7xTEhecmVcpZndhITEHLiVJnRjy7vMrcYy1
ujkHSXf87y6SkAWNLS93e+9DvzW7mtj5c6cs8tBX7ihOJl+PkGgJL7j43AbpLpo+UafRIsQKpzhI
bLP5/32rhlfjutaFeHe6Q+pIf/bYviNtHr/RNmxYXPHupBlUGvUD0nbm4Yy9PLPTSEviyPh/kqh2
RpxCZT6kHsEHA1pGLbiX87fVslUh77rcTACX+xSVJzO/6ENHRtIImRZgO5p+0ubtOOrsAR48SFZJ
CcdMNwCeiA7Ac+FvZulyRzA+EOULA8maQgBsxZR+YcSK33+CGgtZxFkyd7O8YGlWOf20Bnss1mQ2
2b1I7YQffqUijyq4QvSCt9RTkHhOLRr9gW9E1zsBdJZC4ADiLmvqxe5yrLu//uqqqPjc9rJ5irZn
AgMBAAGjQjBAMB0GA1UdDgQWBBSdwGemDCLZJvVFq6ZlUhEn2EWsYzAPBgNVHRMBAf8EBTADAQH/
MA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQwFAAOCAgEAs1dNEGJOOuSs6rgcrzIjyLNJWlGc
diiNeapXRhfV9VL2t0ToCES/GITSC4DNxRL9AFUFYYdB3LUknjzE2Mj7cJ4veJaDIDbefA9pE4il
dTaYCKbG36zO41jWtz7euvPrNEDYooH1eD8v1aX82aLUXgQOF63+QfDlsnL6RIIzQugtWPdWjGI/
ukKwnAxcfi5lJlxTTwCyeH6hDZktjbgdjqLEsP1g0DCkjsgEYqnE7TXeepftDjheki+TcKWpnG+n
fRMdfsYISLFeZ+tRCCXp5iVrUimRnNI5cwhX3pkGtFudEAbhwgCouBxKAgoU0MFByvuMNSF9gjjy
qVSRGTWTlG1qOsWy0LuJhpPom8kPOqd6uKHweEb6/Dcv5YqE89/+BNmhaKAvJOIJlQbVlcrhJJbr
fPaTBbvtc+kt0XU51+ck29hOX0OPntAUOb9VcEiZVzG0nO5KmAOWMB9gBu4bI/6BYCMaR2KFpcwZ
NIBvs6wa45/we0it1QHZZ7apcpPqLWa1srjkPTyy70yM6usHv6s1mlWGvBimtahetINsa2lA05/c
8cNpa7nhbQn08apQdgp6fXoXoVWWQpkxCd1gEY0FMH7mjkbRnRTaxxfkBZaMxCS1G88UB7JA+KOe
QYa8BNBrlsgqgDT9v+8Go91YxYU9Po/+ningtrgJaBkcGEMAAAACAC4vZXhwb3J0L2hkYTMvNy4y
LjAvbG9jYWwvY29uZi9jZXJ0cy9mNzNlODlmZC4wAAABSucX6GoABVguNTA5AAACODCCAjQwggGh
AhACrWZ+TkX+XldvPJgZXt3AMA0GCSqGSIb3DQEBAgUAMF8xCzAJBgNVBAYTAlVTMSAwHgYDVQQK
ExdSU0EgRGF0YSBTZWN1cml0eSwgSW5jLjEuMCwGA1UECxMlU2VjdXJlIFNlcnZlciBDZXJ0aWZp
Y2F0aW9uIEF1dGhvcml0eTAeFw05NDExMDkwMDAwMDBaFw0xMDAxMDcyMzU5NTlaMF8xCzAJBgNV
BAYTAlVTMSAwHgYDVQQKExdSU0EgRGF0YSBTZWN1cml0eSwgSW5jLjEuMCwGA1UECxMlU2VjdXJl
IFNlcnZlciBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCBmzANBgkqhkiG9w0BAQEFAAOBiQAwgYUC
fgCSznrBroM+WqqJg1esJQF2DK2ujiw3zus1eGRUA+WEQFHJv48I4oqCCNIWhjdV6bEhAq12aIGa
BaJLyUslZiJWbIgHj/eBWW2EB2VwE3F2Ppt3TONQiVaYSLkdpykaEy5KEVmcHhXVSVQsczppgrGX
OZxtcGdI5d0t1sgeewIDAQABMA0GCSqGSIb3DQEBAgUAA34AZd1+4bLssOI64OxxRpoZEbjTx6C0
A0AmAj4JnOESs9Fa9jelt2EDtlsWaTvGRAgMiFMMa5dJxz413Gy5u6rfXLs6L5NgtqlLTfIg981f
f2R7jtwAXNf6d8o5FllvDurTtYN/TU1CVna0yV8E+Dj469JfdV/Ne/zljoB8/FAAAAACAC8vZXhw
b3J0L2hkYTMvNi4xMC40L2xvY2FsL2NvbmYvY2VydHMvN2Q0NTNkOGYuMAAAATC7Kw6sAAVYLjUw
OQAABB4wggQaMIIDAgIRAJt+BkmjPmK51e6QSHEp71cwDQYJKoZIhvcNAQEFBQAwgcoxCzAJBgNV
BAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3Qg
TmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXpl
ZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNpZ24gQ2xhc3MgMyBQdWJsaWMgUHJpbWFyeSBDZXJ0
aWZpY2F0aW9uIEF1dGhvcml0eSAtIEczMB4XDTk5MTAwMTAwMDAwMFoXDTM2MDcxNjIzNTk1OVow
gcoxCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNp
Z24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMxKGMpIDE5OTkgVmVyaVNpZ24sIEluYy4gLSBGb3Ig
YXV0aG9yaXplZCB1c2Ugb25seTFFMEMGA1UEAxM8VmVyaVNpZ24gQ2xhc3MgMyBQdWJsaWMgUHJp
bWFyeSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEczMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A
MIIBCgKCAQEAy7qcUvx4Hxoebxs3c734yWuUEjBP8DZH9dCRCvUXyKVhwRZATfuKYZDldiDBEQZ9
qyxupvURQY76La0qYVmkZyZM0Oi8UltwIARY0XrJpGm8gxdkrQWLvNBYzo2M9evwQkkLnZcnZzJu
4a6TFRxwvCBNLxjekojobIVXERrpfuMmEVSiRZZVg8owiejc2KPtKoA/f3llVz4VIGYIL5WTv6pH
L6hGl/AS4v7CCitR5nbmt0a34g2mzKjDTFlVieboU1wc6p3wYhYLp8lfDPDewnbOr/dq8vpBpqIz
FMnlemPTnmI31YVlng7mUyR0G14dElNbxyzng0k7Fa6KaLlXlwIDAQABMA0GCSqGSIb3DQEBBQUA
A4IBAQARFJbBq5II9z8vybL+5FqfZN7bIU+GmTR2Nlfd0BUvxa1/FR83YnM+1OdfzhcD2zX6K9uu
YAlfHl+PbrsLPepaEx4MYG+1wLUjIi4HC8updMtHux3B16VrzC/SQv1J3aeJz1O62gBaKL+C3/i6
Ex1QhoL9jjCPKUawHj012jhiFhhKrea2UWzer2LrAdAeJP56jxIaEmi4+2aZFBRFXK7nrmkXgSta
N8leKvTG4qFcVJumVADP8PHBx5gwGjs2Ftujbur9rbLC2u8CRxOKwPGzMa1PHOFPnK8PDJ33eA3Y
9DVWgNq3bRePnR6BZOH+xUW6rWu5CnpOT0uE7kvxfd0RAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4w
L2xvY2FsL2NvbmYvY2VydHMvMGMzNjRiMmQuMAAAAUrnGDahAAVYLjUwOQAABPEwggTtMIIEVqAD
AgECAgQ4A5HuMA0GCSqGSIb3DQEBBAUAMIHJMQswCQYDVQQGEwJVUzEUMBIGA1UEChMLRW50cnVz
dC5uZXQxSDBGBgNVBAsUP3d3dy5lbnRydXN0Lm5ldC9DbGllbnRfQ0FfSW5mby9DUFMgaW5jb3Jw
LiBieSByZWYuIGxpbWl0cyBsaWFiLjElMCMGA1UECxMcKGMpIDE5OTkgRW50cnVzdC5uZXQgTGlt
aXRlZDEzMDEGA1UEAxMqRW50cnVzdC5uZXQgQ2xpZW50IENlcnRpZmljYXRpb24gQXV0aG9yaXR5
MB4XDTk5MTAxMjE5MjQzMFoXDTE5MTAxMjE5NTQzMFowgckxCzAJBgNVBAYTAlVTMRQwEgYDVQQK
EwtFbnRydXN0Lm5ldDFIMEYGA1UECxQ/d3d3LmVudHJ1c3QubmV0L0NsaWVudF9DQV9JbmZvL0NQ
UyBpbmNvcnAuIGJ5IHJlZi4gbGltaXRzIGxpYWIuMSUwIwYDVQQLExwoYykgMTk5OSBFbnRydXN0
Lm5ldCBMaW1pdGVkMTMwMQYDVQQDEypFbnRydXN0Lm5ldCBDbGllbnQgQ2VydGlmaWNhdGlvbiBB
dXRob3JpdHkwgZ0wDQYJKoZIhvcNAQEBBQADgYsAMIGHAoGBAMg6mV4xF9+sJ2+Qe+QZ/0WjNMLb
wahP8GjqhP2fdXnPwYpRlK/HVwNHZJ6tghta2n83eEe7N5gSls7GE33v0gwwUak5nlX4+7HnMN6D
sro+8dWJOzuFuqp0LP4/MW6vkZVuBtQHTUssVkcYBFLaDhCTv2OQm+HfjOYCpOZPXveLAgEDo4IB
4DCCAdwwEQYJYIZIAYb4QgEBBAQDAgAHMIIBIgYDVR0fBIIBGTCCARUwgeSggeGggd6kgdswgdgx
CzAJBgNVBAYTAlVTMRQwEgYDVQQKEwtFbnRydXN0Lm5ldDFIMEYGA1UECxQ/d3d3LmVudHJ1c3Qu
bmV0L0NsaWVudF9DQV9JbmZvL0NQUyBpbmNvcnAuIGJ5IHJlZi4gbGltaXRzIGxpYWIuMSUwIwYD
VQQLExwoYykgMTk5OSBFbnRydXN0Lm5ldCBMaW1pdGVkMTMwMQYDVQQDEypFbnRydXN0Lm5ldCBD
bGllbnQgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxDTALBgNVBAMTBENSTDEwLKAqoCiGJmh0dHA6
Ly93d3cuZW50cnVzdC5uZXQvQ1JML0NsaWVudDEuY3JsMCsGA1UdEAQkMCKADzE5OTkxMDEyMTky
NDMwWoEPMjAxOTEwMTIxOTI0MzBaMAsGA1UdDwQEAwIBBjAfBgNVHSMEGDAWgBTE+5wpe5fNTJb8
7luzypl0i5XqTDAdBgNVHQ4EFgQUxPucKXuXzUyW/O5bs8qZdIuV6kwwDAYDVR0TBAUwAwEB/zAZ
BgkqhkiG9n0HQQAEDDAKGwRWNC4wAwIEkDANBgkqhkiG9w0BAQQFAAOBgQA/rorx12YDBZ4++uoc
RrukW494mhJImfn0Nd4MNgcCaxA6iRSBnDGmfLJBsmrnBwGhS/mfJTuWypnDPqFRHPPDLkT3sGdG
qpLlO9ocGRQ4MNXiojElLvHsRTjt+AZYA3NisBAxj0C/ZOBcPsVPH9oSQ/9M5gYmqJsZqkQ8drJc
7AAAAAIALi9leHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzLzc4OGM5YmZjLjAAAAFR
hbVYuwAFWC41MDkAAAOEMIIDgDCCAmigAwIBAgICAx4wDQYJKoZIhvcNAQEFBQAwYTELMAkGA1UE
BhMCVVMxDTALBgNVBAoTBFZJU0ExLzAtBgNVBAsTJlZpc2EgSW50ZXJuYXRpb25hbCBTZXJ2aWNl
IEFzc29jaWF0aW9uMRIwEAYDVQQDEwlHUCBSb290IDIwHhcNMDAwODE2MjI1MTAwWhcNMjAwODE1
MjM1OTAwWjBhMQswCQYDVQQGEwJVUzENMAsGA1UEChMEVklTQTEvMC0GA1UECxMmVmlzYSBJbnRl
cm5hdGlvbmFsIFNlcnZpY2UgQXNzb2NpYXRpb24xEjAQBgNVBAMTCUdQIFJvb3QgMjCCASIwDQYJ
KoZIhvcNAQEBBQADggEPADCCAQoCggEBAKkBcLWqxEDwq2omYXkZAPy/mzdZDK9vZBv42pWUJGkz
EXDK41Z0ohdXZFwgBuHW73G3O/erwWnQSaSxBNf0V2KJXLB1LRckaeNCYOTudNargFbYiCjh+20i
/SN8RnNPflRzHqgsVVh1t0zzWkWlAhr62p3DRcMiXvOL8WAp0sdftAw6UYPvMPjU58fy+pmjIlC+
+QU3o63tmsPm7IgbthknGziLgE3sucfFicv8GjLtI/C1AVj59o/ghalMCXI5Etuz9c9OYmTaxhkV
OmMd6RdVoUwiPDQyRvhlV7or7zaMavrZ2UT0qt2E1w0cslSsMoW0ZA3eQbuxNMYBhjJk1Z8CAwEA
AaNCMEAwHQYDVR0OBBYEFJ59SzS/ca3CBfYDdYDOqU8axCRMMA8GA1UdEwEB/wQFMAMBAf8wDgYD
VR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBBQUAA4IBAQAhpXYUVfmtJ3CPPPTVbMjMCqujmAuKBiPF
yWHbmQdpNSYx/scuhMKZYdQN6X0uEyt8joW2hcdLzzW2LEc9zikv2G+fiRxkk78IvXbQkIqUs38o
W26sTTMs7WXcFsziza6kPWKSBpUmv9+55CCmc2rBvveURNZNbyoLaxhNdBA2aGpawWqn3TYpjLgw
i08hPwAuVDAHOrqK5MOeyti12HvOdUVmB/RtLdh6yumJivIj2C/LbgA2T/vwLwHMD8AiZfSr4k5h
LQOCfZEWtTDVFN5ex5D8ofyrEK9ca3CnB+8phuiyJccg/ybdd+95RBTEvd07xQObdyPsoOy7Wjm1
zK0GAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvZmFjYWNiYzYuMAAA
AUrnGNSxAAVYLjUwOQAABNcwggTTMIIDu6ADAgECAhAY2tGeJn3ou0ohWM3MaztKMA0GCSqGSIb3
DQEBBQUAMIHKMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsT
FlZlcmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAyMDA2IFZlcmlTaWduLCBJbmMu
IC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWduIENsYXNzIDMgUHVi
bGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHNTAeFw0wNjExMDgwMDAwMDBa
Fw0zNjA3MTYyMzU5NTlaMIHKMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4x
HzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAyMDA2IFZlcmlT
aWduLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWduIENs
YXNzIDMgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHNTCCASIwDQYJ
KoZIhvcNAQEBBQADggEPADCCAQoCggEBAK8kCAgpejWeYAyq50s7Ttx8vDxFHLsr4P4pAvlXCKNk
hRUn9fGtyDGJXSLoKqqmQrOP+LlVt7G3S7P+j34HV+zvQ9tmYhVhz2ANpNje+ODDYgg9VBPrScpZ
VIUm5SuPG5/r9aGRwjNJ2ENjalJL0o/ocFFN0Ylpe8dw9rPcEnTbe11LVtOWvxV3obD0oiXyrxyS
Zxjl9AYE75C55ADk3Tq1Gf8CuvQ87uCL6zeL7PTXrPL28D2v3XWRMxkdHEDLdCQZIZPZFP6sKlLH
j9UESeSNY0eIPGmDy/5HvSt+T8WVrg6d1NFDwGdz4xQIfuU/n3O4MwrPXT80h5aK7lPoJRUCAwEA
AaOBsjCBrzAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjBtBggrBgEFBQcBDARhMF+h
XaBbMFkwVzBVFglpbWFnZS9naWYwITAfMAcGBSsOAwIaBBSP5dMahqyNjmvDz4Bq1EgYLHsZLjAl
FiNodHRwOi8vbG9nby52ZXJpc2lnbi5jb20vdnNsb2dvLmdpZjAdBgNVHQ4EFgQUf9Nlp8Ld7Lvw
MAnzQzn6Aq8zMTMwDQYJKoZIhvcNAQEFBQADggEBAJMkSjBfYs/YGpgvPercmS29d/aleSI47MSn
oHgSrWIORXBkxeeXZi2YCX5fr9bMKGXyAaoIGkfe+fl8kloIaSAN2T5tbjwNbtjmBpFAGLn4we3f
20Gq4JYgyc1kFTiByZTuooQpCxNvjtsM3SUC26SLGUTSQXoFaUpYT2DKfoJqCwKqJRc5tdt/54Rl
KpWKvYbeXoEWgy0QzN79qIIqbSgfDQvE5ecaJhnh9BFvELWV/OdCBTLbzp1RXii2noXTW++lfUVA
co63DmsOBvszNUhxuJ0ni8RlXw2GdpxEevaVXPZdMggzpFS2GD9oXPJCSoU4VINf0egs8qwR1qjt
Y2oAAAACAC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy9mYjEyNmM2ZC4wAAAB
UYW0mmsABVguNTA5AAAGjzCCBoswggVzoAMCAQICBDtF5WgwDQYJKoZIhvcNAQEFBQAwaDELMAkG
A1UEBhMCRVMxHzAdBgNVBAoTFkdlbmVyYWxpdGF0IFZhbGVuY2lhbmExDzANBgNVBAsTBlBLSUdW
QTEnMCUGA1UEAxMeUm9vdCBDQSBHZW5lcmFsaXRhdCBWYWxlbmNpYW5hMB4XDTAxMDcwNjE2MjI0
N1oXDTIxMDcwMTE1MjI0N1owaDELMAkGA1UEBhMCRVMxHzAdBgNVBAoTFkdlbmVyYWxpdGF0IFZh
bGVuY2lhbmExDzANBgNVBAsTBlBLSUdWQTEnMCUGA1UEAxMeUm9vdCBDQSBHZW5lcmFsaXRhdCBW
YWxlbmNpYW5hMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxiqrVxE3LyKKygN0Hcrt
LaILvDNSQCZHvlpppjtyNhdM6N+4uy924UBGdGUCkFIItP+ojMHgx4lWEDkz72i0X1/abSOhiV4i
o0oG8CfwV7n46U4ydwo/QWTz62Xudv5Uqn0dIK7z13TCCl/1CChSCMxVXdIP25qBpbuhs8GUzVTg
MnUxkRpist514s9PidmRkA9BG7RaSne9Z4Pgk+depwzngdP0UqxTsgPHRCb7eeXLNGBQEHsb22vX
R6tffGjKbp1BAxDua5l7XiWowqvkwPNcnOO+zjFMZB5egKL1g34M1sqMVY6+4L5JBw+jJEF6WB2E
6lgSyOG37e+T3pQIMQIDAQABo4IDOzCCAzcwMgYIKwYBBQUHAQEEJjAkMCIGCCsGAQUFBzABhhZo
dHRwOi8vb2NzcC5wa2kuZ3ZhLmVzMBIGA1UdEwEB/wQIMAYBAf8CAQIwggI0BgNVHSAEggIrMIIC
JzCCAiMGCisGAQQBv1UCAQAwggITMIIB6AYIKwYBBQUHAgIwggHaHoIB1gBBAHUAdABvAHIAaQBk
AGEAZAAgAGQAZQAgAEMAZQByAHQAaQBmAGkAYwBhAGMAaQDzAG4AIABSAGEA7QB6ACAAZABlACAA
bABhACAARwBlAG4AZQByAGEAbABpAHQAYQB0ACAAVgBhAGwAZQBuAGMAaQBhAG4AYQAuAA0ACgBM
AGEAIABEAGUAYwBsAGEAcgBhAGMAaQDzAG4AIABkAGUAIABQAHIA4QBjAHQAaQBjAGEAcwAgAGQA
ZQAgAEMAZQByAHQAaQBmAGkAYwBhAGMAaQDzAG4AIABxAHUAZQAgAHIAaQBnAGUAIABlAGwAIABm
AHUAbgBjAGkAbwBuAGEAbQBpAGUAbgB0AG8AIABkAGUAIABsAGEAIABwAHIAZQBzAGUAbgB0AGUA
IABBAHUAdABvAHIAaQBkAGEAZAAgAGQAZQAgAEMAZQByAHQAaQBmAGkAYwBhAGMAaQDzAG4AIABz
AGUAIABlAG4AYwB1AGUAbgB0AHIAYQAgAGUAbgAgAGwAYQAgAGQAaQByAGUAYwBjAGkA8wBuACAA
dwBlAGIAIABoAHQAdABwADoALwAvAHcAdwB3AC4AcABrAGkALgBnAHYAYQAuAGUAcwAvAGMAcABz
MCUGCCsGAQUFBwIBFhlodHRwOi8vd3d3LnBraS5ndmEuZXMvY3BzMB0GA1UdDgQWBBR7NdNA0hx4
GWbvdBAo3D5PsngE/DCBlQYDVR0jBIGNMIGKgBR7NdNA0hx4GWbvdBAo3D5PsngE/KFspGowaDEL
MAkGA1UEBhMCRVMxHzAdBgNVBAoTFkdlbmVyYWxpdGF0IFZhbGVuY2lhbmExDzANBgNVBAsTBlBL
SUdWQTEnMCUGA1UEAxMeUm9vdCBDQSBHZW5lcmFsaXRhdCBWYWxlbmNpYW5hggQ7ReVoMA0GCSqG
SIb3DQEBBQUAA4IBAQAkYU71tchCAiqzXHWtxW3K55Q/pWiViMFUwBBpohIvGD8lUKh8SurGCdn0
dcZA2q9QnT2lFrttMcbHcwpI/iBy7W/M6INhFkaQAZVLfY6aUgkv9m8c5KFxz4wqWhdzg0dNDzb7
BE1JUeIUyWRh+9QU4PSetzSPCia9l1z0eTpKMBnMrU+gmIq0MZcq4nNtfni4+IiJT7EikWRL9VDe
A9vlxXbnE2Z1fmX7AZ+Th4id+UZXfE1gr5hzEyOkIJGB+tBhZrh90a/Wbx5sPekR/an5giKGmTNx
WuoZVz2RzanAo24HE6bJ7fhoo57DWnIJhyjRxHPEcxhfUHUWMZ+36HzDAAAAAgAuL2V4cG9ydC9o
ZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvYWFhNDU0NjQuMAAAAUrnGFp2AAVYLjUwOQAAAqUw
ggKhMIICCqADAgECAgEAMA0GCSqGSIb3DQEBBAUAMIGLMQswCQYDVQQGEwJaQTEVMBMGA1UECBMM
V2VzdGVybiBDYXBlMRQwEgYDVQQHEwtEdXJiYW52aWxsZTEPMA0GA1UEChMGVGhhd3RlMR0wGwYD
VQQLExRUaGF3dGUgQ2VydGlmaWNhdGlvbjEfMB0GA1UEAxMWVGhhd3RlIFRpbWVzdGFtcGluZyBD
QTAeFw05NzAxMDEwMDAwMDBaFw0yMDEyMzEyMzU5NTlaMIGLMQswCQYDVQQGEwJaQTEVMBMGA1UE
CBMMV2VzdGVybiBDYXBlMRQwEgYDVQQHEwtEdXJiYW52aWxsZTEPMA0GA1UEChMGVGhhd3RlMR0w
GwYDVQQLExRUaGF3dGUgQ2VydGlmaWNhdGlvbjEfMB0GA1UEAxMWVGhhd3RlIFRpbWVzdGFtcGlu
ZyBDQTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA1itYeGFFhlPqNHtRnO2w5i4YDv7gX6gn
07TJ4HxZThYOc1RgwX/2ny7pOoUkFTzbRwRjw57ElBpa30x689lDHTwQenkl25D+8FHnMNZBAP2f
KN95vpS7nbYU4yOF16lB4EykebArGovy+DuKPkWscZIAtJBBmPtf7fq3Lor4iDcCAwEAAaMTMBEw
DwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQQFAAOBgQBn2+LC5oc9QIOGNzV9H86awwxmIKi6
qgSJhsL1EAgNv8uiBYrQTTY+9NfvacZe5LCUb0q5595biLZ72+Mn5XbD8DXBy7UnmzN53JCmAJ53
+vzNJ5RCFpzTHGjsv1zd5al7EAoydFQTMYuFA4SRt1gBMBQ4ryjK/LFQGRkJrIlJ0wAAAAIALi9l
eHBvcnQvaGRhMy83LjQuMC9sb2NhbC9jb25mL2NlcnRzL2Y0OTk2ZTgyLjAAAAFRhbWutgAFWC41
MDkAAALrMIIC5zCCAlACAQEwDQYJKoZIhvcNAQEFBQAwgbsxJDAiBgNVBAcTG1ZhbGlDZXJ0IFZh
bGlkYXRpb24gTmV0d29yazEXMBUGA1UEChMOVmFsaUNlcnQsIEluYy4xNTAzBgNVBAsTLFZhbGlD
ZXJ0IENsYXNzIDEgUG9saWN5IFZhbGlkYXRpb24gQXV0aG9yaXR5MSEwHwYDVQQDExhodHRwOi8v
d3d3LnZhbGljZXJ0LmNvbS8xIDAeBgkqhkiG9w0BCQEWEWluZm9AdmFsaWNlcnQuY29tMB4XDTk5
MDYyNTIyMjM0OFoXDTE5MDYyNTIyMjM0OFowgbsxJDAiBgNVBAcTG1ZhbGlDZXJ0IFZhbGlkYXRp
b24gTmV0d29yazEXMBUGA1UEChMOVmFsaUNlcnQsIEluYy4xNTAzBgNVBAsTLFZhbGlDZXJ0IENs
YXNzIDEgUG9saWN5IFZhbGlkYXRpb24gQXV0aG9yaXR5MSEwHwYDVQQDExhodHRwOi8vd3d3LnZh
bGljZXJ0LmNvbS8xIDAeBgkqhkiG9w0BCQEWEWluZm9AdmFsaWNlcnQuY29tMIGfMA0GCSqGSIb3
DQEBAQUAA4GNADCBiQKBgQDYWYJ6ibiWuqYvaG9YLqdUHAZu9OqNSLwxlBfw8068srg1knaw0KWl
AdcAAxIiGQj4/xEjm84H9b9pGib+TunRf50sQB1ZaG6m+FiwnRqP0z/x3BkGgagO4DrdyFNFCQbm
D3DD+kCmDuJWBQ8YTfwggtFzVXSNdnKgHZ0dwN0/cQIDAQABMA0GCSqGSIb3DQEBBQUAA4GBAFBo
PUn0LBwGlN+VYH+Wexf+T3GtZMjdd9LvWVXoP+iOBSoh8gfStadS/pyxtuJbdxdA6nLWI8sogTLD
AHkY7FkXicnGah5xyf23dKUlRWnFSKsZ4UWKJWsZ7uW7EvV/96aNUcPwnXS3qT6gpf+2SQMT2iLM
7XGCK5nPOrf1LXLIAAAAAgAuL2V4cG9ydC9oZGEzLzcuMi4wL2xvY2FsL2NvbmYvY2VydHMvZDc4
YTc1YzcuMAAAAUrnGCsSAAVYLjUwOQAABB0wggQZMIIDAQIQYXDLSYxfmEUp57Cm2VBbejANBgkq
hkiG9w0BAQUFADCByjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYD
VQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMTk5OSBWZXJpU2lnbiwg
SW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAy
IFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzMwHhcNOTkxMDAxMDAw
MDAwWhcNMzYwNzE2MjM1OTU5WjCByjELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJ
bmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTowOAYDVQQLEzEoYykgMTk5OSBW
ZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVzZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2ln
biBDbGFzcyAyIFB1YmxpYyBQcmltYXJ5IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzMwggEi
MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvCg3C1SzbZ7kt5ZQn3aW+4LBNj7NhVjzWfMP0
zT6Gy6KI4uHYpGnFteK/waZHUF5GOYvVlrq1bxS/EM4nE54FR5sxehPYH9nTAjeLrSxH8I6BBqcN
MAzr9zwPIB3cckbupQLIW8PJVmlMxRjBkXsL1RMAm7zvw0g+RmAghSrVkLbNi6DMMt23/UBVslAc
Vq7MjXdNxyBNpzF272iSipAeCIFWsq1po1LQyxzEIz0fmf5M6BZjjsYIjvYx9tL65XbdtRySo0nN
zQHNaM2pabqj6x0NnKQgpsGgxdFGTBdt0qxmP5aM4ITUNv8iWcX5EWCoXwR98hr2JUJhD8RKuD6J
AgMBAAEwDQYJKoZIhvcNAQEFBQADggEBADQmFTzAjU1DSR296SGS12act97FuNDkXV92IsAm+YQ6
OvmMtfvsYPHozgSwyN2nA48w85jfpOakMd/THAtG3HIgP67uBTykMz8LOaxweHNLmSvfMMJUsKg7
VaH+FijNQr10boDbJ0SnzkRd1BuQmA0eQpSxACwE0HSjAgUiY2PNg7X7wW1ia2l1/V1wQbn1v3zf
vsEycyIhi1iBexWRerrjZEiwf/s2JdqV0PEkFBfdGIBrRiM5VPWOYgkEHZSQppvmJeJCRaq4kK2+
CI+pC0IYlM9yOeGxQ+Aoz7fnWmwTa0mz/+MYfImLM12sM9en+do6VclYEPmq71q2z0tL3yoAAAAC
AC4vZXhwb3J0L2hkYTMvNy40LjAvbG9jYWwvY29uZi9jZXJ0cy83NGMyNmJkMC4wAAABUYWzaF0A
BVguNTA5AAAClDCCApAwggH5oAMCAQICAQEwDQYJKoZIhvcNAQEEBQAwWjELMAkGA1UEBhMCVVMx
HDAaBgNVBAoTE0VxdWlmYXggU2VjdXJlIEluYy4xLTArBgNVBAMTJEVxdWlmYXggU2VjdXJlIEds
b2JhbCBlQnVzaW5lc3MgQ0EtMTAeFw05OTA2MjEwNDAwMDBaFw0yMDA2MjEwNDAwMDBaMFoxCzAJ
BgNVBAYTAlVTMRwwGgYDVQQKExNFcXVpZmF4IFNlY3VyZSBJbmMuMS0wKwYDVQQDEyRFcXVpZmF4
IFNlY3VyZSBHbG9iYWwgZUJ1c2luZXNzIENBLTEwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGB
ALrnF5ACZbE0VTxJwlHV36fRN4/R54FzQVJgm52hFyZ4rcex6CaUMrXeM406L9vymnpac5ijXOn7
inMbXOfDv4Bszan01ivA9/mZqmOisUcCD9TkUToSPGyKWlSEcNvBxZDPckXLqFnAzTOdP6OW64Uz
IRw+Hj5gbnacZ4XFyMNhAgMBAAGjZjBkMBEGCWCGSAGG+EIBAQQEAwIABzAPBgNVHRMBAf8EBTAD
AQH/MB8GA1UdIwQYMBaAFL6ooHRyUGtEt8kj2Puo/7NXa2hsMB0GA1UdDgQWBBS+qKB0clBrRLfJ
I9j7qP+zV2tobDANBgkqhkiG9w0BAQQFAAOBgQAw4gFRqsfqX9q50GUPMNY+2g0USW6RkycUMe/E
9y1F+OzHv6JBDSO0kvkZAGe9Aa/N4HH8Ws9kxOCWmNCjQOIBiu8nB/FlAYpELQZldVLAhhAgIV9s
aw9srgkcr/KiGDTEdaRzHPGN3O+t+bN2tJK/3JUQHr7LyDtahGAZVpSpVQAAAAIALi9leHBvcnQv
aGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzL2EzODk2YjQ0LjAAAAFK5xif0wAFWC41MDkAAANe
MIIDWjCCAkKgAwIBAgIBADANBgkqhkiG9w0BAQUFADBQMQswCQYDVQQGEwJKUDEYMBYGA1UEChMP
U0VDT00gVHJ1c3QubmV0MScwJQYDVQQLEx5TZWN1cml0eSBDb21tdW5pY2F0aW9uIFJvb3RDQTEw
HhcNMDMwOTMwMDQyMDQ5WhcNMjMwOTMwMDQyMDQ5WjBQMQswCQYDVQQGEwJKUDEYMBYGA1UEChMP
U0VDT00gVHJ1c3QubmV0MScwJQYDVQQLEx5TZWN1cml0eSBDb21tdW5pY2F0aW9uIFJvb3RDQTEw
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCzs/5/022x7xZ8V6UMbXaKL0u/ZPtM7orw
8yl89f/uKuDp6bpbZCKamm8sOiZpUQWZJtzVHGpxxpp9Hp3dfGzGjGdnSj74cbAZJ6kJDKaVv0uM
DPpVmDvY6CKhS3E4eayXkmmziX7qIWgGmBSWh9JhNrxtJ1aeV+7AwFb9Ms+k2Y7CI9eNqPPYJayX
5HA49LY6tJ07lyZDo6G8SVlyTCMwhwFY9k6+HGhWZq/NQV3Is00qVUarH9oe4kA92819uZKAnDfd
DJZkndwi92SL32HeFZRSFaB9UslLqCHJxrHty8OVYNEP8Ktw+N/LTX7s1vqr2b1/VPKl6Xn62dZ2
JChzAgMBAAGjPzA9MB0GA1UdDgQWBBSgc0mZaNyFW2XjmygvV5+9M7wHSDALBgNVHQ8EBAMCAQYw
DwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQUFAAOCAQEAaECpqLvkT115swW1F7NgE+vGkl3g
0dNq/vu+m22/xwVtWSDEHPC32oRYAmP6SBbvT6UL90qY8j+eG61Ha2POCEfrUj94nK9NrvjVT8+a
mCoQQTlSxN3Zmw7vkwGusi7KaEIkQmywszo+zenaSMQVy+n5Bw+SUEmK3TGXX8npN6o7WWWXlDLJ
s58+OmJYxUmtYg5xpTKqL8aJdkNAExNnPaJUJRDL8Try2frbSVa7pv6nQTXD4IhhyYjH3zYQIphZ
6rBK+1YWc26sTfcioU+tHXotRSflMMFe8toTyyVCUZVHA4xsIcx0Qu1T/zOLjw9XARYvz6buyXAi
FL39vmwLAwAAAAIALi9leHBvcnQvaGRhMy83LjIuMC9sb2NhbC9jb25mL2NlcnRzLzQ2NDMyMTBm
LjAAAAFK5xgJtQAFWC41MDkAAAPcMIID2DCCAsACEQDQHkCLAAB3bQAAAAEAAAAEMA0GCSqGSIb3
DQEBBQUAMIGpMQswCQYDVQQGEwJ1czENMAsGA1UECBMEVXRhaDEXMBUGA1UEBxMOU2FsdCBMYWtl
IENpdHkxJDAiBgNVBAoTG0RpZ2l0YWwgU2lnbmF0dXJlIFRydXN0IENvLjERMA8GA1UECxMIRFNU
Q0EgWDIxFjAUBgNVBAMTDURTVCBSb290Q0EgWDIxITAfBgkqhkiG9w0BCQEWEmNhQGRpZ3NpZ3Ry
dXN0LmNvbTAeFw05ODExMzAyMjQ2MTZaFw0wODExMjcyMjQ2MTZaMIGpMQswCQYDVQQGEwJ1czEN
MAsGA1UECBMEVXRhaDEXMBUGA1UEBxMOU2FsdCBMYWtlIENpdHkxJDAiBgNVBAoTG0RpZ2l0YWwg
U2lnbmF0dXJlIFRydXN0IENvLjERMA8GA1UECxMIRFNUQ0EgWDIxFjAUBgNVBAMTDURTVCBSb290
Q0EgWDIxITAfBgkqhkiG9w0BCQEWEmNhQGRpZ3NpZ3RydXN0LmNvbTCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBANx18IzAdZaawGIfJvfE4Zrq4FZzW5nNAUSoCLbVp9oaBBg5kkp4o4HC
9Xd6ULRw/5qrxsfKboNPQpj7Jgva3G3WqZlVUmfpKAOS3OWwBZoPFflrWXJW8vo5/Kpo7g8fEIMv
/J36F5bdguPmRX3AS4BEH+0s4IT9kVySVGkl5WJp3OXuAFK9MwutdQKFp2RQLcUZGTDAJtvJ0/0u
ma1ZtQtN1EGuhUhDWdy3qOKi3sOP17ihYqZoUFLkzzGnlIXan0YyF1bl8utmPRL/Q9uY73fPy4GN
NLHGUEom0eQ+QVCvbK4iNC7Va26Dunm4dmVI2gkpZGMiuftHdoWMhkTLCdsCAwEAATANBgkqhkiG
9w0BAQUFAAOCAQEAtTYOXeFhKFoRZcA/gwN5Tb4opgsHAlKFzfiR0BBstWogWxyQ2TA8xkieil5k
+aFxd+8EJx8H6+Qm93N0yUQYGmbT4EOvkTvRyyzYdFQ6HE3K1GjNI3wdEJ5F6fYAbqbNGf9PLCmP
V03Ed5K+4EwJ+11EhmYhqLkyolbV6YyDfFk/xPEL553snr2cGA4+wjl5KLcDDQjLxufZATdQEOzM
YRZA1K8xdHv8PzGn0EdzMzkbzE5q10mDEQb+64JYMzJM8FasHpwvVpp7wUocpf1VNs78lk30sPDs
t2yC7S8xmUJMqbINuBVd8d+6ybVK1GSYsyapMMj9puyrliGtf8J4tgAAAAIALy9leHBvcnQvaGRh
My82LjEwLjQvbG9jYWwvY29uZi9jZXJ0cy9lZTdjZDZmYi4wAAABMLsrdSsABVguNTA5AAAEwTCC
BL0wggOloAMCAQICAQAwDQYJKoZIhvcNAQEFBQAwfzELMAkGA1UEBhMCRVUxJzAlBgNVBAoTHkFD
IENhbWVyZmlybWEgU0EgQ0lGIEE4Mjc0MzI4NzEjMCEGA1UECxMaaHR0cDovL3d3dy5jaGFtYmVy
c2lnbi5vcmcxIjAgBgNVBAMTGUNoYW1iZXJzIG9mIENvbW1lcmNlIFJvb3QwHhcNMDMwOTMwMTYx
MzQzWhcNMzcwOTMwMTYxMzQ0WjB/MQswCQYDVQQGEwJFVTEnMCUGA1UEChMeQUMgQ2FtZXJmaXJt
YSBTQSBDSUYgQTgyNzQzMjg3MSMwIQYDVQQLExpodHRwOi8vd3d3LmNoYW1iZXJzaWduLm9yZzEi
MCAGA1UEAxMZQ2hhbWJlcnMgb2YgQ29tbWVyY2UgUm9vdDCCASAwDQYJKoZIhvcNAQEBBQADggEN
ADCCAQgCggEBALc2VeWlXRgw4NqJVJH8yMdS+C9Q2e+xdXNlR30bW7p1xfyhiCT6L+3KCEo5VMRR
erXaYOo4PIGyy/G72ZEjP0gBcHWpBSqtH3HzyVQ9HQZqQD6zDIXuXBt5wmLEuDaONV0BDCMERzWq
m2BOoGY9yyYKnECh9F2Yv3GrpQBoKu2Deg+iFLXUIrOAsDwMWlFpLVgYj+2ZnvGu4pXm9keo1gwP
sFhY28NmN56bkVQzN9KUHGpIycnypdqlDCP3Iw6cMlVecZyEBVGaLf3mTio0Wt7KQDdnDFQhVXfa
CgzMl66A3JQ2SvQ+zjYTHlPkrE46BezbrnKcOIvQOTuJCj53/nUCAQOjggFEMIIBQDASBgNVHRMB
Af8ECDAGAQH/AgEMMDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly9jcmwuY2hhbWJlcnNpZ24ub3Jn
L2NoYW1iZXJzcm9vdC5jcmwwHQYDVR0OBBYEFOOU9bFN6duhKVtXi012Bnbh0aKKMA4GA1UdDwEB
/wQEAwIBBjARBglghkgBhvhCAQEEBAMCAAcwJwYDVR0RBCAwHoEcY2hhbWJlcnNyb290QGNoYW1i
ZXJzaWduLm9yZzAnBgNVHRIEIDAegRxjaGFtYmVyc3Jvb3RAY2hhbWJlcnNpZ24ub3JnMFgGA1Ud
IARRME8wTQYLKwYBBAGBhy4KAwEwPjA8BggrBgEFBQcCARYwaHR0cDovL2Nwcy5jaGFtYmVyc2ln
bi5vcmcvY3BzL2NoYW1iZXJzcm9vdC5odG1sMA0GCSqGSIb3DQEBBQUAA4IBAQAMQZfCGobAInyf
+5DzGtEDse8T+SFfBJzayaWNJ2yWh5G+QZABcpPnHn1f9onGXadACT2sSUVF3C6NMGiyCbr7wy/M
ugvfP3d7Rn06EiSOlo88BQpv0pQoHW0MwC6IItXYzx0Tx/BI19cFp8/HR547PDTIgE/UFLv8DVD3
+rPsQl+p3W3I9HXPe8FyJrEBHFws/XpOtAHFBVe55zyqBdmI6QdGQc7vQYGuWN+Doq7K13cf5wA8
nW+O5DIJHU14NHg0PJSbJu1PccYZer0gIkha/kt9A7fnWL7GMk50HmjdqGhbsz7uYn3ZgOgKdXq3
7rRlmiGQ4KrQmLw4tXM8i/jcAAAAAgAuL2V4cG9ydC9oZGEzLzcuNC4wL2xvY2FsL2NvbmYvY2Vy
dHMvMzQzZWI2Y2IuMAAAAVGFtBhRAAVYLjUwOQAAA6UwggOhMIICiaADAgECAgsEAAAAAAEPhaot
SDANBgkqhkiG9w0BAQUFADA7MRgwFgYDVQQKEw9DeWJlcnRydXN0LCBJbmMxHzAdBgNVBAMTFkN5
YmVydHJ1c3QgR2xvYmFsIFJvb3QwHhcNMDYxMjE1MDgwMDAwWhcNMjExMjE1MDgwMDAwWjA7MRgw
FgYDVQQKEw9DeWJlcnRydXN0LCBJbmMxHzAdBgNVBAMTFkN5YmVydHJ1c3QgR2xvYmFsIFJvb3Qw
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQD4yLy9FFBmE//w03nsI/K3GseOhfESc6YZ
qhDbnKJldFp3PlF9VvbcI7bU7V9YsTdN1UkObvVqh9bSjNInxuL/Np+YZaATTsYqZJvVkBLPFAb0
O+PUKL7oDvirTkiUbY6VMRBc7aItvdU6bbIcu2DARksB9UmufkaK0HSNoQwCzu7854+4a2bzf0QA
v2YlFCvdEDAdB5Y/TfZruI+3ewylOOveR9vVXTn8iKfz1yp08ehaojufULqmjEU1wlBlldxjgu/d
v3dNnGLJY3MW0CkPSalI8LOqt2zFpzA5QF2uxOJdJlPwzhwjCGGolBm6BGJA7B84cHcSBnGnMBhd
JSelAgMBAAGjgaUwgaIwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE
FLYIew16zKwgTIZWMl7Pq26FLXBXMD8GA1UdHwQ4MDYwNKAyoDCGLmh0dHA6Ly93d3cyLnB1Ymxp
Yy10cnVzdC5jb20vY3JsL2N0L2N0cm9vdC5jcmwwHwYDVR0jBBgwFoAUtgh7DXrMrCBMhlYyXs+r
boUtcFcwDQYJKoZIhvcNAQEFBQADggEBAFbvCiOgVE6Vl8n4idpFwdSjACX0HxOrt6OFWGnCMK3Y
FYot48nNgVr4cyNap3wF8/0iOw7RBsTbNkxzBI7lsCLkxfMupdkj47hOSiCnbgIknyJgZ3uLHXIJ
xTFc6XmfgEc9raELBxQ9R/8DaRoMC0TnYyWnf7LJuHaE7SP2fQerRX7T37O/6Yq2zaiiZytS1bdl
8DlMY6CReZNSD1Tdg7uf0Y+nU3PDy/8w7HwEuNhEH5NfcQkit24+6hwDTp0aIGH7gTfsXvwKRavX
5xdV0KDqYJum9uOMWynCBmAUnS2XTKmTFZ1hxAFfSNZYvVYxEk4RyCHgsxGRZdu0pog4zlUAAAAC
AC4vZXhwb3J0L2hkYTMvNy4yLjAvbG9jYWwvY29uZi9jZXJ0cy80Nzk5NmI1Yy4wAAABSucYZ4YA
BVguNTA5AAAGVTCCBlEwggU5oAMCAQICBDy1T0AwDQYJKoZIhvcNAQEFBQAwZjESMBAGA1UEChMJ
YmVUUlVTVGVkMRswGQYDVQQLExJiZVRSVVNUZWQgUm9vdCBDQXMxMzAxBgNVBAMTKmJlVFJVU1Rl
ZCBSb290IENBIC0gRW50cnVzdCBJbXBsZW1lbnRhdGlvbjAeFw0wMjA0MTEwODI0MjdaFw0yMjA0
MTEwODU0MjdaMGYxEjAQBgNVBAoTCWJlVFJVU1RlZDEbMBkGA1UECxMSYmVUUlVTVGVkIFJvb3Qg
Q0FzMTMwMQYDVQQDEypiZVRSVVNUZWQgUm9vdCBDQSAtIEVudHJ1c3QgSW1wbGVtZW50YXRpb24w
ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC69EQDqhJqtUPsVZK2MH01Vwzb8w0nbkz3
UKibTitv2/WtHEtds6nB/ntE61ujBQ0fxTQrMAAp8XhAsqT/OvQBiBd+5tQm07pM6jL7Q3eXhyPF
20Oj9SqjUV7hO9JlaX5VFZt652n3ROBXtRXoZmAPDQP7go6j6BF7bL7HYw4Xk9/PS65uc3Xg86q5
pMAJG4XqcSmIQTL58CoObAnydGtmbFITHxi81D732G4gnsr+/CGU7hMoS9dcXgxm7um7D8E0sX8I
dvM9JnDJiyUdYiQM6hx1TsAS5LoTHTApLVYzBbuXWX7GSU+J1y8kqLaIQLVkklNWJOSioIWzXpC0
EjPNAgMBAAGjggMFMIIDATCCAbcGA1UdIASCAa4wggGqMIIBpgYPKwYBBAGxPgAAAgkog5ExMIIB
kTCCAUkGCCsGAQUFBwICMIIBOxqCATdSZWxpYW5jZSBvbiBvciB1c2Ugb2YgdGhpcyBDZXJ0aWZp
Y2F0ZSBjcmVhdGVzIGFuIGFja25vd2xlZGdtZW50IGFuZCBhY2NlcHRhbmNlIG9mIHRoZSB0aGVu
IGFwcGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdXNlLCB0aGUgQ2Vy
dGlmaWNhdGlvbiBQcmFjdGljZSBTdGF0ZW1lbnQgYW5kIHRoZSBSZWx5aW5nIFBhcnR5IEFncmVl
bWVudCwgd2hpY2ggY2FuIGJlIGZvdW5kIGF0IHRoZSBiZVRSVVNUZWQgd2ViIHNpdGUsIGh0dHBz
Oi8vd3d3LmJldHJ1c3RlZC5jb20vcHJvZHVjdHNfc2VydmljZXMvaW5kZXguaHRtbDBCBggrBgEF
BQcCARY2aHR0cHM6Ly93d3cuYmV0cnVzdGVkLmNvbS9wcm9kdWN0c19zZXJ2aWNlcy9pbmRleC5o
dG1sMBEGCWCGSAGG+EIBAQQEAwIABzCBiQYDVR0fBIGBMH8wfaB7oHmkdzB1MRIwEAYDVQQKEwli
ZVRSVVNUZWQxGzAZBgNVBAsTEmJlVFJVU1RlZCBSb290IENBczEzMDEGA1UEAxMqYmVUUlVTVGVk
IFJvb3QgQ0EgLSBFbnRydXN0IEltcGxlbWVudGF0aW9uMQ0wCwYDVQQDEwRDUkwxMCsGA1UdEAQk
MCKADzIwMDIwNDExMDgyNDI3WoEPMjAyMjA0MTEwODU0MjdaMAsGA1UdDwQEAwIBBjAfBgNVHSME
GDAWgBR9cOWuOIsGP6ocGo/5zyQwqoSEFjAdBgNVHQ4EFgQUfXDlrjiLBj+qHBqP+c8kMKqEhBYw
DAYDVR0TBAUwAwEB/zAdBgkqhkiG9n0HQQAEEDAOGwhWNi4wOjQuMAMCBJAwDQYJKoZIhvcNAQEF
BQADggEBACq4F84fEJTruJq3uV/s2veSJKzckjvHII3ymeVdOKHCNO3FE1lcBbUrT2GbkftB/PzV
PE2Ydgb1gX3r3ZDm0VZU2uMtDJ8RMpQiAXr2bCx0ZwTMpY+OLLNDtZSi0H3pYn8GvicBg546/Yru
mENKa9e1lzs6v09ttGP6MwA0Li1tlsl7ypljur709jCgLZiW6VZEBalEo2EQ64KhZ128XSd1qooo
Nio4ktndpF4ApczMfCkq3iiQq7fhtv99JQtA2Ko0oy3eB+tfzgrdyn46fSbBYmg65i8384GGIcSp
ZKrvRTbRGmZ8+Ok31tZhvqKtSOff5nT+02190iXcrGJXqfcAAAACAC8vZXhwb3J0L2hkYTMvNi4x
MC40L2xvY2FsL2NvbmYvY2VydHMvZTdiOGQ2NTYuMAAAATC7Kxm0AAVYLjUwOQAAAoYwggKCMIIB
66ADAgECAgEEMA0GCSqGSIb3DQEBBAUAMFMxCzAJBgNVBAYTAlVTMRwwGgYDVQQKExNFcXVpZmF4
IFNlY3VyZSBJbmMuMSYwJAYDVQQDEx1FcXVpZmF4IFNlY3VyZSBlQnVzaW5lc3MgQ0EtMTAeFw05
OTA2MjEwNDAwMDBaFw0yMDA2MjEwNDAwMDBaMFMxCzAJBgNVBAYTAlVTMRwwGgYDVQQKExNFcXVp
ZmF4IFNlY3VyZSBJbmMuMSYwJAYDVQQDEx1FcXVpZmF4IFNlY3VyZSBlQnVzaW5lc3MgQ0EtMTCB
nzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAzi8ZvBe3d96TqV9aDRdPNBoMmPQi2VnUxGhG8LQ1
xYUDIMavRaUhUUVB6xZYNjJv4lBiZPn9UZyqJNn0nYMqhwoh0xI4NGyNAG5aoNlC7hohlflSTFVa
xQ84T0b6bfguNdYdfOvi8LB1gMipE6y+iO86bqtfKjhiArASe/6PpgMCAwEAAaNmMGQwEQYJYIZI
AYb4QgEBBAQDAgAHMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAUSngyUhHbWRY2Xt/BFDZA
akd8TKEwHQYDVR0OBBYEFEp4MlIR21kWNl7fwRQ2QGpHfEyhMA0GCSqGSIb3DQEBBAUAA4GBAHVb
qJsDEebpVkzN+alMwA2a88xlaeYldsxZt9ZUwx3NmawZ3bSF1eA9/GIgp4RLWGXx4vmVIT/11H5Y
HkeHVD5YobW1+Crvcee8w/axSUbi16Br5VZ6mieYfEZiFOfJ/G4DEnmAOB1Igo38F/4qliu1Yqam
Pb1/klnNWiqCsjd5OrqgEWFHtjVvGPh/5ZzcBDNmSkg=

          ]]></tomcat_ca_cert>
          <tomcat_crl><![CDATA[

          ]]></tomcat_crl>
          <total_recall><![CDATA[
0
          ]]></total_recall>
          <translation_integration><![CDATA[
1
          ]]></translation_integration>
          <trust_config><![CDATA[
jA0EBwMChVJwEqrD3CbB0jUBmCh1LMg/VjMEEfGe45W36ifqyAX2KW2MGLF7vW9V
r1LMLVo1ZwW3WC1JPuVroMzXLl3CRA==
=yJwD

          ]]></trust_config>
          <uam_dir><![CDATA[
QlpoOTFBWSZTWeWgjqYAAFp7gcCAIABAAf+AAAFvJ54AAAIACCAAdQ1T1P0UaADQBtIGRTEGTQAD
R6mcJMCQNXkEERdNFscLkJIEkXxWm81aIFKZLRpbqysioixIxpCX1EwIrUwEZyHPpZJP2/RCTfmP
17QUNMkgfi7kinChIctBHUw=
          ]]></uam_dir>
          <uar_data><![CDATA[
QlpoOTFBWSZTWYvFyB8AAHH/3P3QMRFQEf/4YAQQAf/l3iAAAIEAAQAAAgQIMAD6yYaiMmpjSaYj
TTajIBpoZMgNGag1U/JTzSanpGgDQ0AADQHqGgEkqMmg0AaGhoAAyNAAaeTZcwXZnRhASvCBUWAR
joREQUixidSeCEZEIBfvgzSI0lXMmu3RPY+P1MIuBgY+C2fZeVW1hzplBKCggDwJ+hgYgzJmJFmC
MgNis8q1NbPCBNAWDLmmum45XBKQqqRLES3PjOo9jBwBPUUgKzG6SArij9F2+npKgguLJbgYSxzQ
3SliOVYBYzpoPCIJjtJeCAEokDbqNSsaSsqd+OXeGNYraUPolAgeAPehTZG7KcC9Qd0IqfNOwsMA
TPyse2SA/i7kinChIReLkD4=
          ]]></uar_data>
          <uar_enable_authn><![CDATA[
0
          ]]></uar_enable_authn>
          <uni_login_customization><![CDATA[
#Universal Login Form Customization Options
#Mon Aug 31 09:49:48 EST 2015
FormGlobalOption\:LOGO_WIDTH=200
FormGlobalOption\:HEADER_HTML=<meta content\="text/html; charset\=ISO-8859-1" http-equiv\="content-type"/>\n
FormGlobalOption\:OVERRIDE_FORM_HTML=
FormGlobalOption\:DEFAULT_USERNAME_ENTRY_WIDTH=100px
FormGlobalOption\:DEFAULT_USERNAME_FIELD_TITLE=Username\:
FormGlobalOption\:SUBMIT_BUTTON_TEXT=Login
FormGlobalOption\:DEFAULT_INTRO_TEXT=
FormGlobalOption\:ONSUBMIT_FUNCTION_NAME=
FormGlobalOption\:PRE_CREDENTIAL_HTML=<center>\n<table border\="0" cellpadding\="0" cellspacing\="0">\n<tbody>\n<tr>\n<td>\n
FormGlobalOption\:SUBMIT_BUTTON_IMAGE=
FormGlobalOption\:SUBMIT_BUTTON_JAVASCRIPT=
FormGlobalOption\:FOOTER_HTML=</body>\n</html>\n
FormGlobalOption\:DEFAULT_PASSWORD_ENTRY_WIDTH=100px
FormGlobalOption\:CREDENTIAL_SEPARATOR_HTML=</td>\n</tr>\n<tr>\n<td>\n
FormGlobalOption\:DEFAULT_PASSWORD_FIELD_TITLE=Password\:
FormGlobalOption\:LOGO_URL=http\://localhost/images/Title_Left.png
FormGlobalOption\:LOGO_HEIGHT=78
FormGlobalOption\:PAGE_TITLE=Google Search Appliance Universal Login Form
FormGlobalOption\:FONT_SPECIFICATION=medium arial,sans-serif
FormGlobalOption\:POST_CREDENTIAL_HTML=</td>\n</tr>\n</tbody>\n</table>\n</center>

          ]]></uni_login_customization>
          <use_default_backoffs_removals><![CDATA[
1
          ]]></use_default_backoffs_removals>
          <use_lowest_hostload_limit_for_all_hosts_with_same_ip><![CDATA[
1
          ]]></use_lowest_hostload_limit_for_all_hosts_with_same_ip>
          <user_accounts><![CDATA[
jA0EBwMCAQERgOcRSW3B0uoB0Ja8FeLN/8/7ezAPlpIsgYSxucUbpboYem+E8b3q
kH7xEQ3L9te/BmOP64U2bti1uZdwLj/spUlGyS7KOLTwjjm3fTuqdkjepPt7Rflu
eD+THpbOzYH5mPMvyGTYdtwuv20lrfLHvd/9bIYwhJA0SH5gZLYyuOVN9kT2Odxx
SSnij6RWpkwiqFhiIBlP0v//oos+8KZsv3LoWFtlOO9Bpyn5aAuCySA3wWT90cal
lcHwxgNcjnkOBOgBRVWYzClVOVzc3G8D1s5Hu5kJgbkvemgZfa/GbWafNZpnmlgm
o8RQVqNixN356+IXhmH+cQ7+6ExugZ2yJwQbp0QlC8i7qHxjihEF8HTx4uwinlGR
5JBIgzhF2mVTjg6Tmhbusg6+T3Ds8R0H/JTIgRchGrFg9bbIWbOQMDn9nLOGxolq
lyqU59EatfgzM9ZoA0OoKvF0b9DNHwu4VKTPBP4axF9KFNEgMz1S2eqp83DTDgDS
591lTq4xRtfWuRMXFJlx2LAhNT80NKPvqkuLWkbnkFMG2VRo2oJ1wTMfSaf3JMUd
a/XlL42pvht3HG1d5FHMjUTScFR79ct5hZaAkIsj4Br6jBzc7C8fIAHl87j/gwLP
oWzflX7HG3dh54sWVqJ8Q5XzEb4avIkDDmsmrzTjhwL8ji7e7wvP+jto/ZFdfi3/
M4KiHeC+ePsnfcchihNg+hYUObTkR9mlo4IONKLRF+8/O2REj1HJVBQmlAZ5GKbJ
mQEXyC7stdq2rYZuLxbIEElI0rt3qnTgzbab2DX/wKpWGeKua8lwVwTc5jPyr/d3
zwdIwxBLgssc4vvJasLp+q4IH1ubuxP56bPV4Ni5mhioYhEGE9NDjBc8Yc7ajCip
rkmR439etUsx2q7BWR0BfETL3j4ve/0Frozkhs5eF3rps7aNiwSyhz6oWrNN0XXR
Nio43BujXJNhpnmtL12R5QbzBhpWxIczldt3zmdnFzQwZbQDoAWsx5PUsNOieO2R
2R7vdj2oDL9DDCXaIRv4geVjNWEbp7SiTKRkMhtvpLcxBOIJ6ympq1kFpu8oAmdI
3y8vpO5xwXHKW3zDNAjIMmT6qs3Gybo3uBLZLnb5rH/zy+E3iLSO9vjdFXHBDpir
PliRLw/fpm1A6RwdF6FIPqTbiDqpvwicAawyyG8J3iIW2NdR94fS3uIG7TW7pVeQ
aMjqG3pXin7YZzvXUqscbHrJrJBg+EVX3oHcs6rpIyiJNh8UBk8MMy8smUUwwZ5s
E0vpc0564NKs6NHH+Jqi/K2i2OE20YA8wc3lreqIYHuXAdvQlEgQNcy2S1xE1Vr3
di23dolKGdJ3I2bfhZHjdwph+SoXqh80K6oVS1KHx80kXqphTk5MORV+VMgEsWix
Z83OdNiKRVx3G03qIvVi2e7O2HIT0AUOjLTbeTNrwgBCF6M3nL+3Vfl5PDpDjlYH
e2spcNRVudkpaRJA3366gB0D2eJ19C2wLjQO7WymJHM=
=Gvtv

          ]]></user_accounts>
          <user_agent><![CDATA[
'gsa-crawler'
          ]]></user_agent>
          <wildcards_complete_indexing><![CDATA[
0
          ]]></wildcards_complete_indexing>
          <wildcards_enable><![CDATA[
0
          ]]></wildcards_enable>
      </globalparams>
      <queryexpansion Count="52">
          <queryExpEntry Name="Google_Arabic_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
2
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
27758
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Arabic_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
32
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Arabic_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
18
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Arabic_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Chinese_TW_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
21
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Chinese_TW_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Chinese_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
21
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Chinese_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Czech_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
2
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
24019
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Czech_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
69
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Czech_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
25
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Czech_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Danish_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
2
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
47008
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Danish_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
28
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Danish_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
25
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Danish_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Default_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
1
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
37
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Default_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Dutch_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
47835
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Dutch_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
20
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Dutch_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
23
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Dutch_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_English_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
1
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
16891
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_English_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
8
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_English_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
1
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
3
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_English_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Finnish_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
2
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
18974
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Finnish_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
32
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Finnish_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
12
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Finnish_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_French_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
30167
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_French_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
8
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_French_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
22
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_French_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_German_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
31597
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_German_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
31
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_German_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
56
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_German_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Greek_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
2
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
24280
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Greek_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
32
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Greek_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
94
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Greek_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Hebrew_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
2
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
39536
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Hebrew_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
32
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Hebrew_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
9
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Hebrew_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Hungarian_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
2
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
16394
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Hungarian_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
32
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Hungarian_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
48
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Hungarian_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Italian_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
24388
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Italian_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
8
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Italian_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
6
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Italian_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Japanese_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
9
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Japanese_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Latvian_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
66
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Latvian_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Lithuanian_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
180
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Lithuanian_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Norwegian_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
2
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
29066
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Norwegian_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
32
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Norwegian_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
27
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Norwegian_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Polish_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
2
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
29494
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Polish_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
32
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Polish_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
45
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Polish_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Portuguese_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
15694
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Portuguese_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
7
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Portuguese_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
44
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Portuguese_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Romanian_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
2
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
21339
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Romanian_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
57
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Romanian_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
39
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Romanian_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Russian_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
2
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
26979
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Russian_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
32
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Russian_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
48
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Russian_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Slovak_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
2
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
22797
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Slovak_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
32
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Spanish_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
30020
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Spanish_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
5
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Spanish_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
35
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Spanish_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Swedish_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
2
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
30000
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Swedish_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
32
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Swedish_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
29
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Swedish_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Turkish_stems">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
2
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
25267
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Turkish_stems'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
32
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="Google_Turkish_stopwords">
              <creationDate><![CDATA[
0L
              ]]></creationDate>
              <deletable><![CDATA[
0
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
0
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
26
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'Google_Turkish_stopwords'
              ]]></entryName>
              <entryType><![CDATA[
2
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'-- Google data --'
              ]]></originalFile>
          </queryExpEntry>
          <queryExpEntry Name="SCU_syn">
              <creationDate><![CDATA[
1458278819061L
              ]]></creationDate>
              <deletable><![CDATA[
1
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
1
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
15
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'SCU_syn'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
3
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'SCU_synonyms.txt'
              ]]></originalFile>
              <content><![CDATA[
{scu, Southern Cross University}
{eCAF, CAF, Commonwealth Assistance Form}
{UIG, Unit Information Guide}
{SSAF, Student Services and Amenities Fee}
{AHEGS, Australian Higher Education Graduate Statement}
{CoE, Confirmation of Enrolment}
{ESOS, Education Services for Overseas Students}
{ELICOS, English Language Intensive Courses for Overseas Students}
{CRICOS, Commonwealth Register of Institutions and Courses for Overseas Students}
{GPA, Grade Point Average}
{ITAS, Indigenous Tutorial Assistance Scheme}
{IASS, Indigenous Australian Student Services}
{UniMentor, mentor}
{o week, orientation}
helpdesk > servicedesk
              ]]></content>
          </queryExpEntry>
          <queryExpEntry Name="course_query_exp">
              <creationDate><![CDATA[
1463441418109L
              ]]></creationDate>
              <deletable><![CDATA[
1
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
1
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
2
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'course_query_exp'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'course-query-expansion.txt'
              ]]></originalFile>
              <content><![CDATA[
DBA > Doctor of Business Administration
MBA > Master of Business Administration

              ]]></content>
          </queryExpEntry>
          <queryExpEntry Name="service_desk_syn">
              <creationDate><![CDATA[
1445470898066L
              ]]></creationDate>
              <deletable><![CDATA[
1
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
1
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
5
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'service_desk_syn'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
2
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'service_desk_synonyms.txt'
              ]]></originalFile>
              <content><![CDATA[
{vpn, virtual private network}
{wifi, wireless}
{scu, southern cross university}
{blackboard, MySCU}
blackboard>collaborate
              ]]></content>
          </queryExpEntry>
          <queryExpEntry Name="unit_query_exp">
              <creationDate><![CDATA[
1463443281396L
              ]]></creationDate>
              <deletable><![CDATA[
1
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
1
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
1415
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'unit_query_exp'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'unit-query-expansion.txt'
              ]]></originalFile>
              <content><![CDATA[
ACC > ACC00106
ACC > ACC00130
ACC > ACC00131
ACC > ACC00132
ACC > ACC00134
ACC > ACC00145
ACC > ACC00146
ACC > ACC00148
ACC > ACC00151
ACC > ACC00152
ACC > ACC00153
ACC > ACC00207
ACC > ACC00208
ACC > ACC00222
ACC > ACC00712
ACC > ACC00713
ACC > ACC00714
ACC > ACC00715
ACC > ACC00716
ACC > ACC00717
ACC > ACC00718
ACC > ACC00724
ACC > ACC03032
ACC > ACC03043
ACC > ACC10179
ACC > ACC10707
ACC > ACC71210
ACC > ACC81210
ACC > ACC91210
ACC > ACC92110
ACC > ACC92210
ACC > ACC92211
ACC > ACC92212
ACC > ACC93110
ACC > ACC93111
ACC > ACC93112
ACC > ACC93210
ACC > ACC93211
AGR > AGR00214
AGR > AGR00215
AGR > AGR03072
AGR > AGR03089
AGT > AGT00217
AGT > AGT03090
ART > ART00406
ART > ART00407
ART > ART00408
ART > ART00456
ART > ART00498
ART > ART00600
ART > ART00601
ART > ART00602
ART > ART00621
ART > ART00622
ART > ART00623
ART > ART00624
ART > ART00625
ART > ART00626
ART > ART00630
ART > ART00641
ART > ART10002
ART > ART10003
ART > ART10004
ART > ART10005
ART > ART10094
ART > ART10095
ART > ART10096
ART > ART10275
ART > ART30003
ART > ART30004
ART > ART30005
ART > ART30006
ART > ART30007
ART > ART30008
ART > ART30009
ART > ART30010
ART > ART30011
ART > ART30012
ART > ART30013
ART > ART73000
BHS > BHS00130
BHS > BHS00156
BHS > BHS00360
BHS > BHS00361
BHS > BHS00362
BHS > BHS00363
BHS > BHS00364
BHS > BHS00365
BHS > BHS00366
BHS > BHS00367
BHS > BHS10495
BHS > BHS10581
BHS > BHS11001
BHS > BHS11002
BHS > BHS11003
BHS > BHS11004
BHS > BHS20001
BHS > BHS20006
BHS > BHS20007
BHS > BHS20008
BHS > BHS30001
BHS > BHS30002
BHS > BHS30003
BHS > BHS30004
BHS > BHS30005
BHS > BHS30006
BHS > BHS30007
BHS > BHS30008
BHS > BHS30009
BHS > BHS40001
BHS > BHS40002
BHS > BHS40003
BHS > BHS40004
BHS > BHS40005
BHS > BHS40006
BHS > BHS40007
BHS > BHS40008
BHS > BHS40009
BHS > BHS40010
BHS > BHS40011
BHS > BHS40012
BHS > BHS83001
BHS > BHS83002
BHS > BHS83003
BHS > BHS83004
BIO > BIO00101
BIO > BIO00102
BIO > BIO00105
BIO > BIO00201
BIO > BIO00202
BIO > BIO00203
BIO > BIO00204
BIO > BIO00207
BIO > BIO00209
BIO > BIO00212
BIO > BIO00213
BIO > BIO00232
BIO > BIO00233
BIO > BIO00244
BIO > BIO00307
BIO > BIO00324
BIO > BIO00326
BIO > BIO01204
BIO > BIO01209
BIO > BIO01230
BIO > BIO01302
BIO > BIO03073
BIO > BIO03075
BIO > BIO03076
BIO > BIO03095
BIO > BIO03096
BIO > BIO03097
BIO > BIO03098
BIO > BIO03099
BIO > BIO03101
BIO > BIO03102
BIO > BIO03103
BIO > BIO03202
BIO > BIO10001
BIO > BIO10120
BIO > BIO10121
BIO > BIO10123
BIO > BIO10124
BIO > BIO10125
BIO > BIO10126
BIO > BIO10127
BIO > BIO10185
BIO > BIO10187
BIO > BIO10454
BIO > BIO10467
BIO > BIO10493
BIO > BIO10494
BIO > BIO10496
BIO > BIO10497
BIO > BIO10587
BIO > BIO10662
BIO > BIO10701
BIO > BIO20001
BIO > BIO20002
BIO > BIO20003
BIO > BIO30001
BIO > BIO72020
BIO > BIO72025
BIO > BIO72050
BIO > BIO72100
BIO > BIO72130
BIO > BIO73020
BIO > BIO73050
BIO > BIO73060
BIO > BIO81001
BIO > BIO92005
BIO > BIO93010
BIO > BIO93015
BUS > BUS00211
BUS > BUS00212
BUS > BUS00213
BUS > BUS00214
BUS > BUS00758
BUS > BUS00913
BUS > BUS00914
BUS > BUS10699
BUS > BUS40001
BUS > BUS40002
BUS > BUS40003
BUS > BUS40004
BUS > BUS40005
BUS > BUS40006
BUS > BUS93001
BUS > BUS93210
CAR > CAR10001
CAR > CAR10002
CAR > CAR10003
CAR > CAR10503
CAR > CAR40003
CAR > CAR40004
CAR > CAR40005
CEP > CEP03361
CEP > CEP03362
CEP > CEP03363
CEP > CEP03364
CEP > CEP03365
CEP > CEP03366
CEP > CEP03367
CEP > CEP03368
CEP > CEP03369
CHE > CHE00002
CHE > CHE00073
CHE > CHE00201
CHE > CHE10700
CHE > CHE71010
CHE > CHE73005
CMM > CMM00001
CMM > CMM00002
CMM > CMM00003
CMM > CMM00004
CMM > CMM00705
CMM > CMM03140
CMM > CMM03189
CMM > CMM03211
CMM > CMM03214
CMM > CMM03250
CMM > CMM03251
CMM > CMM03253
CMM > CMM03254
CMM > CMM03255
CMM > CMM03256
CMM > CMM03257
CMM > CMM03260
CMM > CMM03262
CMM > CMM03371
CMM > CMM03373
CMM > CMM03374
CMM > CMM03375
CMM > CMM03379
CMM > CMM03381
CMM > CMM03382
CMM > CMM03415
CMM > CMM10469
CMM > CMM10471
CMM > CMM10580
CMM > CMM71001
CMM > CMM72015
CMM > CMM73010
CMM > CMM81001
CMM > CMM81002
CMM > CMM81003
CMM > CMM91010
CMM > CMM91025
CMM > CMM93001
CMM > CMM93002
CMM > CMM93010
CMP > CMP03305
CMP > CMP73010
CMP > CMP91020
COM > COM00207
COM > COM00439
COM > COM00446
COM > COM00447
COM > COM00455
COM > COM00456
COM > COM00461
COM > COM00471
COM > COM00481
COM > COM00482
COM > COM01402
COM > COM03420
COM > COM03422
COM > COM10001
COM > COM10081
COM > COM10082
COM > COM10110
COM > COM10111
COM > COM10112
COM > COM10113
COM > COM10295
COM > COM10499
COM > COM10627
COM > COM10628
COM > COM20001
COM > COM30001
COM > COM30002
COM > COM40006
COM > COM40007
COM > COM40008
COM > COM40015
COM > COM61001
CSC > CSC00228
CSC > CSC00235
CSC > CSC00240
CSC > CSC10210
CSC > CSC10214
CSC > CSC10215
CSC > CSC10216
CSC > CSC10217
CSC > CSC40002
CSC > CSC40003
CSC > CSC40004
CSC > CSC40005
CSC > CSC73010
CSL > CSL00113
CSL > CSL00114
CSL > CSL00120
CSL > CSL00164
CSL > CSL00231
CSL > CSL00416
CSL > CSL10242
CSL > CSL10243
CSL > CSL10297
CSL > CSL10553
CSL > CSL10554
CSL > CSL10555
CSL > CSL10556
CSL > CSL10557
CSL > CSL10558
CSL > CSL10559
CUL > CUL00210
CUL > CUL00211
CUL > CUL00401
CUL > CUL00402
CUL > CUL00408
CUL > CUL00409
CUL > CUL00410
CUL > CUL00411
CUL > CUL00412
CUL > CUL00413
CUL > CUL00414
CUL > CUL00415
CUL > CUL00420
CUR > CUR30001
CYS > CYS03340
CYS > CYS03341
CYS > CYS03342
CYS > CYS03343
CYS > CYS03344
CYS > CYS03345
CYS > CYS03346
CYS > CYS03347
CYS > CYS03350
CYS > CYS03351
CYS > CYS20001
CYS > CYS20002
CYS > CYS20003
CYS > CYS20004
CYS > CYS20005
DES > DES10634
DES > DES10635
DES > DES10636
DES > DES10637
DES > DES10638
DES > DES10639
DES > DES10641
DES > DES10642
DES > DES10643
DES > DES10648
DES > DES10649
DES > DES10650
DES > DES10651
DES > DES10652
DES > DES10653
DES > DES10654
ECO > ECO00202
ECO > ECO00424
ECO > ECO10250
ECO > ECO82001
ECO > ECO82210
EDU > EDU00017
EDU > EDU00018
EDU > EDU00298
EDU > EDU00352
EDU > EDU00353
EDU > EDU00401
EDU > EDU00402
EDU > EDU00404
EDU > EDU00405
EDU > EDU00412
EDU > EDU00413
EDU > EDU00414
EDU > EDU00415
EDU > EDU00416
EDU > EDU00417
EDU > EDU00418
EDU > EDU00550
EDU > EDU00554
EDU > EDU00558
EDU > EDU00733
EDU > EDU00751
EDU > EDU00754
EDU > EDU01021
EDU > EDU01022
EDU > EDU01029
EDU > EDU01104
EDU > EDU01105
EDU > EDU01143
EDU > EDU01144
EDU > EDU01145
EDU > EDU01146
EDU > EDU01153
EDU > EDU01154
EDU > EDU01246
EDU > EDU01247
EDU > EDU01264
EDU > EDU01286
EDU > EDU01290
EDU > EDU01304
EDU > EDU01308
EDU > EDU01550
EDU > EDU01551
EDU > EDU03133
EDU > EDU03134
EDU > EDU03138
EDU > EDU03235
EDU > EDU03264
EDU > EDU03335
EDU > EDU10001
EDU > EDU10002
EDU > EDU10003
EDU > EDU10005
EDU > EDU10010
EDU > EDU10011
EDU > EDU10128
EDU > EDU10129
EDU > EDU10130
EDU > EDU10131
EDU > EDU10132
EDU > EDU10172
EDU > EDU10294
EDU > EDU10445
EDU > EDU10446
EDU > EDU10447
EDU > EDU10448
EDU > EDU10449
EDU > EDU10513
EDU > EDU10514
EDU > EDU10629
EDU > EDU10631
EDU > EDU10632
EDU > EDU10633
EDU > EDU10690
EDU > EDU10691
EDU > EDU10692
EDU > EDU10693
EDU > EDU10694
EDU > EDU10710
EDU > EDU10711
EDU > EDU10712
EDU > EDU10713
EDU > EDU10714
EDU > EDU10715
EDU > EDU10716
EDU > EDU20001
EDU > EDU20002
EDU > EDU20003
EDU > EDU20004
EDU > EDU20005
EDU > EDU20006
EDU > EDU20007
EDU > EDU20008
EDU > EDU20009
EDU > EDU20010
EDU > EDU30002
EDU > EDU30003
EDU > EDU30004
EDU > EDU30005
EDU > EDU30006
EDU > EDU30007
EDU > EDU30008
EDU > EDU40003
EDU > EDU40004
EDU > EDU40005
EDU > EDU40006
EDU > EDU72001
EDU > EDU72002
EDU > EDU81001
EDU > EDU81002
EDU > EDU81003
EDU > EDU83001
EDU > EDU83002
EDU > EDU83003
EDU > EDU91001
EDU > EDU91002
EDU > EDU91003
EDU > EDU92001
EDU > EDU92002
EDU > EDU92003
EDU > EDU92004
EDU > EDU93001
EDU > EDU93002
ENG > ENG00351
ENG > ENG00355
ENG > ENG00400
ENG > ENG00401
ENG > ENG00406
ENG > ENG00407
ENG > ENG00408
ENG > ENG00411
ENG > ENG10001
ENG > ENG10002
ENG > ENG10004
ENG > ENG10010
ENG > ENG10022
ENG > ENG10757
ENG > ENG10758
ENG > ENG10759
ENG > ENG20001
ENG > ENG20002
ENG > ENG20003
ENG > ENG20005
ENG > ENG20006
ENG > ENG20007
ENG > ENG30002
ENG > ENG30004
ENG > ENG30005
ENG > ENG30007
ENG > ENG30009
ENG > ENG30010
ENG > ENG30011
ENG > ENG30012
ENG > ENG40001
ENG > ENG40004
ENG > ENG40005
ENG > ENG40006
ENG > ENG40007
ENG > ENG92050
ENI > ENI72001
ENI > ENI72005
ENI > ENI73001
ENI > ENI73005
ENI > ENI73009
ENI > ENI73015
ENI > ENI73020
ENI > ENI73025
ENI > ENI81005
ENI > ENI82005
ENI > ENI83005
ENI > ENI83015
ENI > ENI83040
ENM > ENM10197
ENM > ENM10640
ENO > ENO03200
ENO > ENO10183
ENO > ENO72001
ENO > ENO73001
ENO > ENO73005
ENP > ENP10645
ENP > ENP10646
ENS > ENS00203
ENS > ENS00218
ENV > ENV00207
ENV > ENV00224
ENV > ENV03117
ENV > ENV03398
ENV > ENV03399
ENV > ENV10655
ENV > ENV10656
ENV > ENV10702
ENV > ENV10705
ENV > ENV40006
ENV > ENV40007
ENV > ENV40008
ENV > ENV40009
FIN > FIN00126
FIN > FIN10252
FIN > FIN10254
FIN > FIN10708
FIN > FIN10709
FIN > FIN10710
FIN > FIN10711
FIN > FIN10712
FIN > FIN91110
FIN > FIN93001
FIN > FIN93210
FOR > FOR00100
FOR > FOR00101
FOR > FOR00102
FOR > FOR00103
FOR > FOR00104
FOR > FOR00105
FOR > FOR00106
FOR > FOR00107
FOR > FOR00108
FOR > FOR00109
FOR > FOR00110
FOR > FOR00112
FOR > FOR03019
FOR > FOR03081
FOR > FOR03082
FOR > FOR03083
FOR > FOR03084
FOR > FOR03085
FOR > FOR03105
FOR > FOR03106
FOR > FOR03107
FOR > FOR03108
FOR > FOR03110
FOR > FOR03111
FOR > FOR03169
FOR > FOR03170
FOR > FOR03198
FOR > FOR40006
FOR > FOR40007
FOR > FOR40008
FOR > FOR40009
FOR > FOR73010
GLY > GLY00201
GLY > GLY00223
GLY > GLY00232
GLY > GLY03113
GLY > GLY20001
GLY > GLY20002
GLY > GLY30001
GLY > GLY30002
GLY > GLY93010
HEA > HEA00331
HEA > HEA00332
HEA > HEA00501
HEA > HEA00502
HEA > HEA03414
HEA > HEA03416
HEA > HEA10001
HEA > HEA10002
HEA > HEA10003
HEA > HEA10200
HEA > HEA10201
HEA > HEA10202
HEA > HEA10203
HEA > HEA10204
HEA > HEA10704
HEA > HEA40001
HEA > HEA40002
HEA > HEA40003
HEA > HEA40004
HEA > HEA93001
HEA > HEA93020
HIS > HIS00235
HIS > HIS10016
HIS > HIS10018
HIS > HIS10725
HIS > HIS10726
HLT > HLT00255
HLT > HLT00257
HLT > HLT00259
HLT > HLT00260
HLT > HLT00266
HLT > HLT00267
HLT > HLT00274
HLT > HLT00275
HLT > HLT00278
HLT > HLT00279
HLT > HLT00302
HLT > HLT00303
HLT > HLT10115
HLT > HLT10118
HLT > HLT10119
HLT > HLT10481
HLT > HLT10482
HLT > HLT10483
HLT > HLT10484
HLT > HLT10485
HLT > HLT10486
HLT > HLT10511
HLT > HLT10512
HLT > HLT10582
HLT > HLT10583
HLT > HLT10584
HLT > HLT10585
HLT > HLT10586
HLT > HLT10588
HLT > HLT10589
HLT > HLT10590
HLT > HLT10591
HLT > HLT10592
HLT > HLT10593
HLT > HLT10594
HLT > HLT10595
HLT > HLT10596
HLT > HLT10597
HLT > HLT10598
HLT > HLT10599
HLT > HLT10600
HLT > HLT10601
HLT > HLT30001
HLT > HLT30002
HLT > HLT40005
HLT > HLT40006
HLT > HLT83001
HLT > HLT83002
HLT > HLT83003
HLT > HLT83004
HLT > HLT83005
HLT > HLT83006
HLT > HLT83007
HLT > HLT91001
HLT > HLT91002
HLT > HLT91061
HLT > HLT91099
HMS > HMS00202
HMS > HMS00203
HMS > HMS00220
HMS > HMS00223
HMS > HMS00224
HMS > HMS00225
HMS > HMS00226
HMS > HMS00328
HMS > HMS00423
HMS > HMS01202
HOS > HOS03417
HOS > HOS03421
HOS > HOS03423
HOS > HOS10199
HOS > HOS10644
HUM > HUM00270
HUM > HUM00271
HUM > HUM00272
HUM > HUM00273
HUM > HUM00274
HUM > HUM00275
HUM > HUM10001
HUM > HUM10315
IHE > IHE03386
IST > IST00151
IST > IST00152
IST > IST00211
IST > IST00212
IST > IST00365
IST > IST00451
IST > IST00453
IST > IST00454
IST > IST00551
IST > IST03301
IST > IST03302
IST > IST03303
IST > IST03304
ISY > ISY00241
ISY > ISY00243
ISY > ISY00244
ISY > ISY00245
ISY > ISY00246
ISY > ISY00324
ISY > ISY00325
ISY > ISY00550
ISY > ISY00551
ISY > ISY00552
ISY > ISY00740
ISY > ISY01224
ISY > ISY03087
ISY > ISY10056
ISY > ISY10058
ISY > ISY10209
ISY > ISY10212
ISY > ISY10221
ISY > ISY10222
ISY > ISY10621
ISY > ISY10622
ISY > ISY10623
ISY > ISY10624
ISY > ISY73010
ISY > ISY91015
ISY > ISY92115
ISY > ISY93205
ISY > ISY93210
LAN > LAN10001
LAN > LAN10002
LAN > LAN20001
LAN > LAN20002
LAW > LAW00004
LAW > LAW00050
LAW > LAW00051
LAW > LAW00052
LAW > LAW00053
LAW > LAW00054
LAW > LAW00055
LAW > LAW00056
LAW > LAW00057
LAW > LAW00058
LAW > LAW00059
LAW > LAW00061
LAW > LAW00062
LAW > LAW00104
LAW > LAW00106
LAW > LAW00107
LAW > LAW00108
LAW > LAW00111
LAW > LAW00112
LAW > LAW00114
LAW > LAW00115
LAW > LAW00116
LAW > LAW00117
LAW > LAW00118
LAW > LAW00119
LAW > LAW00120
LAW > LAW00121
LAW > LAW00122
LAW > LAW00123
LAW > LAW00124
LAW > LAW00125
LAW > LAW00126
LAW > LAW00128
LAW > LAW00150
LAW > LAW00203
LAW > LAW00214
LAW > LAW00215
LAW > LAW00216
LAW > LAW00514
LAW > LAW00516
LAW > LAW00519
LAW > LAW00520
LAW > LAW00521
LAW > LAW00522
LAW > LAW00523
LAW > LAW00524
LAW > LAW00525
LAW > LAW00526
LAW > LAW00527
LAW > LAW00528
LAW > LAW00529
LAW > LAW00701
LAW > LAW00720
LAW > LAW01125
LAW > LAW10001
LAW > LAW10002
LAW > LAW10003
LAW > LAW10004
LAW > LAW10068
LAW > LAW10069
LAW > LAW10070
LAW > LAW10157
LAW > LAW10158
LAW > LAW10159
LAW > LAW10160
LAW > LAW10166
LAW > LAW10167
LAW > LAW10168
LAW > LAW10169
LAW > LAW10170
LAW > LAW10171
LAW > LAW10177
LAW > LAW10178
LAW > LAW10180
LAW > LAW10181
LAW > LAW10206
LAW > LAW10207
LAW > LAW10288
LAW > LAW10292
LAW > LAW10472
LAW > LAW10487
LAW > LAW10488
LAW > LAW10489
LAW > LAW10490
LAW > LAW10491
LAW > LAW10527
LAW > LAW10698
LAW > LAW10727
LAW > LAW20001
LAW > LAW30001
LAW > LAW30002
LAW > LAW30003
LAW > LAW30004
LAW > LAW30005
LAW > LAW71005
LAW > LAW72001
LAW > LAW72002
LAW > LAW72005
LAW > LAW72009
LAW > LAW72010
LAW > LAW72012
LAW > LAW73003
LAW > LAW81110
LAW > LAW81210
MAT > MAT00211
MAT > MAT00330
MAT > MAT00722
MAT > MAT00792
MAT > MAT03088
MAT > MAT03372
MAT > MAT10001
MAT > MAT10002
MAT > MAT10251
MAT > MAT10706
MAT > MAT10718
MAT > MAT10719
MAT > MAT10720
MAT > MAT10721
MAT > MAT10722
MAT > MAT30001
MAT > MAT30002
MAT > MAT71215
MAT > MAT83001
MAT > MAT83002
MAT > MAT93010
MDC > MDC72010
MKT > MKT00075
MKT > MKT00102
MKT > MKT00106
MKT > MKT00127
MKT > MKT00128
MKT > MKT00150
MKT > MKT00204
MKT > MKT00205
MKT > MKT00320
MKT > MKT00720
MKT > MKT00724
MKT > MKT00905
MKT > MKT01221
MKT > MKT01222
MKT > MKT01223
MKT > MKT01224
MKT > MKT01420
MKT > MKT01425
MKT > MKT01759
MKT > MKT01760
MKT > MKT01762
MKT > MKT01906
MKT > MKT01907
MKT > MKT01909
MKT > MKT10722
MKT > MKT10723
MKT > MKT10724
MKT > MKT10725
MKT > MKT10726
MKT > MKT10727
MKT > MKT20001
MKT > MKT82210
MNG > MNG00085
MNG > MNG00114
MNG > MNG00135
MNG > MNG00167
MNG > MNG00272
MNG > MNG00273
MNG > MNG00301
MNG > MNG00303
MNG > MNG00305
MNG > MNG00306
MNG > MNG00307
MNG > MNG00311
MNG > MNG00313
MNG > MNG00314
MNG > MNG00316
MNG > MNG00415
MNG > MNG00417
MNG > MNG00418
MNG > MNG00421
MNG > MNG00427
MNG > MNG00431
MNG > MNG00440
MNG > MNG00441
MNG > MNG00501
MNG > MNG00503
MNG > MNG00510
MNG > MNG00703
MNG > MNG00704
MNG > MNG00716
MNG > MNG00723
MNG > MNG00724
MNG > MNG00725
MNG > MNG00737
MNG > MNG00755
MNG > MNG00756
MNG > MNG00757
MNG > MNG00784
MNG > MNG00785
MNG > MNG00786
MNG > MNG00789
MNG > MNG00791
MNG > MNG00912
MNG > MNG01222
MNG > MNG01301
MNG > MNG01302
MNG > MNG01413
MNG > MNG03011
MNG > MNG03012
MNG > MNG03047
MNG > MNG03048
MNG > MNG03067
MNG > MNG03121
MNG > MNG03208
MNG > MNG03217
MNG > MNG03218
MNG > MNG03219
MNG > MNG03236
MNG > MNG03237
MNG > MNG03258
MNG > MNG03264
MNG > MNG03281
MNG > MNG03358
MNG > MNG03359
MNG > MNG03390
MNG > MNG03391
MNG > MNG03392
MNG > MNG03393
MNG > MNG03395
MNG > MNG03400
MNG > MNG03401
MNG > MNG03419
MNG > MNG03424
MNG > MNG10001
MNG > MNG10002
MNG > MNG10193
MNG > MNG10226
MNG > MNG10228
MNG > MNG10247
MNG > MNG10253
MNG > MNG10291
MNG > MNG10476
MNG > MNG10526
MNG > MNG10695
MNG > MNG10696
MNG > MNG10697
MNG > MNG10713
MNG > MNG10714
MNG > MNG10715
MNG > MNG10716
MNG > MNG10717
MNG > MNG10718
MNG > MNG10719
MNG > MNG10720
MNG > MNG10721
MNG > MNG10723
MNG > MNG10724
MNG > MNG10728
MNG > MNG10729
MNG > MNG10730
MNG > MNG20001
MNG > MNG20002
MNG > MNG20003
MNG > MNG20004
MNG > MNG20006
MNG > MNG20007
MNG > MNG40005
MNG > MNG40006
MNG > MNG40007
MNG > MNG40033
MNG > MNG72005
MNG > MNG73005
MNG > MNG73006
MNG > MNG82001
MNG > MNG82210
MNG > MNG89022
MNG > MNG91002
MNG > MNG91210
MNG > MNG91211
MNG > MNG91212
MNG > MNG91214
MNG > MNG91215
MNG > MNG91217
MNG > MNG91218
MNG > MNG91220
MNG > MNG91225
MNG > MNG92210
MNG > MNG92211
MNG > MNG92220
MNG > MNG92230
MNG > MNG92305
MNG > MNG93001
MNG > MNG93002
MNG > MNG93003
MNG > MNG93210
MNG > MNG93211
MNG > MNG93213
MNG > MNG93214
MNG > MNG93215
MNG > MNG93217
MNG > MNG93218
MNG > MNG93220
MNG > MNG93255
MUS > MUS00497
MUS > MUS00620
MUS > MUS00621
MUS > MUS00630
MUS > MUS10501
MUS > MUS10502
MUS > MUS10503
MUS > MUS10504
MUS > MUS10505
MUS > MUS10506
MUS > MUS10507
MUS > MUS10508
MUS > MUS10509
MUS > MUS10524
MUS > MUS10525
MUS > MUS10531
MUS > MUS10532
MUS > MUS10533
MUS > MUS10534
MUS > MUS10541
MUS > MUS10542
MUS > MUS10543
MUS > MUS10544
MUS > MUS10545
MUS > MUS10546
MUS > MUS10547
MUS > MUS10548
MUS > MUS10550
MUS > MUS10551
MUS > MUS10552
MUS > MUS71001
MUS > MUS71002
MUS > MUS71003
MUS > MUS71005
MUS > MUS71006
MUS > MUS71007
MUS > MUS71008
MUS > MUS71010
MUS > MUS71011
MUS > MUS72003
MUS > MUS72004
MUS > MUS72005
MUS > MUS72006
MUS > MUS72007
MUS > MUS72010
MUS > MUS72011
MUS > MUS73001
MUS > MUS73005
MUS > MUS73006
MUS > MUS73009
MUS > MUS73010
MUS > MUS73015
MUS > MUS73016
MWF > MWF10661
MWF > MWF10663
MWF > MWF10681
MWF > MWF10745
MWF > MWF10746
MWF > MWF10747
MWF > MWF20001
MWF > MWF20002
MWF > MWF20003
MWF > MWF20004
MWF > MWF20005
MWF > MWF30001
MWF > MWF30002
MWF > MWF30003
MWF > MWF30004
MWF > MWF30005
MWF > MWF93001
MWF > MWF93002
MWF > MWF93003
MWF > MWF93004
NRS > NRS00610
NRS > NRS00611
NRS > NRS00612
NRS > NRS00613
NRS > NRS10455
NRS > NRS10456
NRS > NRS10457
NRS > NRS10458
NRS > NRS10459
NRS > NRS10460
NRS > NRS10461
NRS > NRS10465
NRS > NRS10466
NRS > NRS10468
NRS > NRS10470
NRS > NRS10731
NRS > NRS10732
NRS > NRS10733
NRS > NRS10734
NRS > NRS20001
NRS > NRS20002
NRS > NRS20003
NRS > NRS20004
NRS > NRS20005
NRS > NRS20006
NRS > NRS30001
NRS > NRS30002
NRS > NRS30003
NRS > NRS30004
NRS > NRS30005
NRS > NRS30006
NRS > NRS71001
NRS > NRS71003
NRS > NRS71005
NRS > NRS72001
NRS > NRS72003
NRS > NRS72005
NRS > NRS72007
NRS > NRS72009
NRS > NRS73001
NRS > NRS73005
NRS > NRS73007
NRS > NRS73009
NRS > NRS81001
NRS > NRS81002
NRS > NRS82005
NUT > NUT00214
NUT > NUT00215
NUT > NUT00216
NUT > NUT00217
NUT > NUT00330
OST > OST03321
OST > OST03322
OST > OST03323
OST > OST03324
OST > OST03325
OST > OST03326
OST > OST03327
OST > OST03328
OST > OST03329
OST > OST03330
OST > OST03331
OST > OST03332
OST > OST71005
OST > OST71006
OST > OST72001
OST > OST73002
OST > OST81001
OST > OST82001
OST > OST82002
OST > OST82005
PDT > PDT10001
PDT > PDT20001
PDT > PDT20002
PDT > PDT20004
PDT > PDT20005
PDT > PDT20006
PDT > PDT30001
PDT > PDT30002
PDT > PDT30003
PDT > PDT30004
PDT > PDT30005
PDT > PDT30006
PDT > PDT40001
PDT > PDT73005
PDT > PDT73006
PDT > PDT73007
PHA > PHA00315
PHA > PHA30001
PHY > PHY10760
PHY > PHY71030
PLN > PLN10001
PLN > PLN10002
PLN > PLN20001
PLN > PLN20002
PLN > PLN20003
PLN > PLN20004
PLN > PLN20005
PLN > PLN83001
PLN > PLN83002
PLN > PLN83003
POL > POL00005
POL > POL00010
POL > POL00013
POL > POL00131
POL > POL10023
POL > POL10024
POL > POL10244
POL > POL20001
POL > POL30001
SCI > SCI00211
SCI > SCI00419
SCI > SCI00428
SCI > SCI03071
SCI > SCI03072
SCI > SCI10001
SCI > SCI10002
SCI > SCI10003
SCI > SCI10473
SCI > SCI10474
SCI > SCI10475
SCI > SCI10703
SCI > SCI11005
SCI > SCI11006
SCI > SCI20001
SCI > SCI73020
SCI > SCI83011
SCI > SCI83012
SCI > SCI83013
SCI > SCI83014
SCI > SCI91001
SCI > SCI93003
SCI > SCI93004
SEC > SEC10647
SOC > SOC00107
SOC > SOC00112
SOC > SOC00115
SOC > SOC00118
SOC > SOC00368
SOC > SOC00417
SOC > SOC01123
SOC > SOC03402
SOC > SOC03418
SOC > SOC10027
SOC > SOC10205
SOC > SOC10236
SOC > SOC10245
SOC > SOC10246
SOC > SOC10274
SOC > SOC10296
SOC > SOC10399
SOC > SOC10400
SOC > SOC10430
SOC > SOC20001
SOC > SOC20002
SOC > SOC20003
SOC > SOC30001
SOC > SOC40009
SOC > SOC40010
SOC > SOC40011
SOC > SOC40021
SOC > SOC40022
SOC > SOC40023
SOC > SOC89022
SOY > SOY00011
SOY > SOY00012
SOY > SOY00159
SOY > SOY00204
SOY > SOY00247
SOY > SOY00411
SOY > SOY00412
SOY > SOY00419
SOY > SOY10097
SOY > SOY10098
SOY > SOY10105
SOY > SOY10107
SOY > SOY10108
SOY > SOY10114
SOY > SOY10196
SPT > SPT10001
SPT > SPT10002
SPT > SPT20002
SPT > SPT20003
SPT > SPT20004
SPT > SPT20005
SPT > SPT20006
SPT > SPT20007
SPT > SPT30001
SPT > SPT30002
SPT > SPT30003
SPT > SPT30004
SPT > SPT40001
SPT > SPT40002
SUR > SUR00201
TCH > TCH03193
TCH > TCH03194
TCH > TCH03195
TCH > TCH03196
TCH > TCH03409
TCH > TCH03410
TCH > TCH03411
TCH > TCH03412
TCH > TCH03413
TCH > TCH10005
TCH > TCH10007
TCH > TCH10008
TCH > TCH10014
TCH > TCH10134
TCH > TCH10135
TCH > TCH10136
TCH > TCH10138
TCH > TCH10174
TCH > TCH10175
TCH > TCH10303
TCH > TCH10304
TCH > TCH10515
TCH > TCH10516
TCH > TCH10517
TCH > TCH10518
TCH > TCH10519
TCH > TCH10521
TCH > TCH10522
TCH > TCH10630
TCH > TCH10709
TCH > TCH20001
TCH > TCH20002
TCH > TCH20003
TCH > TCH30001
TCH > TCH30002
TCH > TCH81001
TCH > TCH81002
TCH > TCH81003
TCH > TCH82001
TCH > TCH82002
TCH > TCH83001
TCH > TCH93001
TRM > TRM20001
WEL > WEL30001
WEL > WEL30002
WEL > WEL91002
WEL > WEL91003
WEL > WEL91004
WEL > WEL91005
WEL > WEL91006
WEL > WEL91007
WEL > WEL92001
WEL > WEL92002
WEL > WEL92003
WEL > WEL92004
WEL > WEL92005
WEL > WEL92006
WRI > WRI10001
WRI > WRI10002
WRI > WRI10003
WRI > WRI20001
WRI > WRI20002
WRI > WRI20003
WRI > WRI20004
              ]]></content>
          </queryExpEntry>
          <queryExpEntry Name="unit_query_expansion">
              <creationDate><![CDATA[
1468560974158L
              ]]></creationDate>
              <deletable><![CDATA[
1
              ]]></deletable>
              <downloadable><![CDATA[
1
              ]]></downloadable>
              <enabled><![CDATA[
1
              ]]></enabled>
              <enabledMetaNames><![CDATA[
0
              ]]></enabledMetaNames>
              <enabledMetaValues><![CDATA[
0
              ]]></enabledMetaValues>
              <entryCount><![CDATA[
1420
              ]]></entryCount>
              <entryLanguage><![CDATA[
'all'
              ]]></entryLanguage>
              <entryName><![CDATA[
'unit_query_expansion'
              ]]></entryName>
              <entryType><![CDATA[
0
              ]]></entryType>
              <largestEntrySize><![CDATA[
0
              ]]></largestEntrySize>
              <originalFile><![CDATA[
'unit-query-expansion.txt'
              ]]></originalFile>
              <content><![CDATA[
#{accounting, ACC}
ACC > ACC00106
ACC > ACC00130
ACC > ACC00131
ACC > ACC00132
ACC > ACC00134
ACC > ACC00145
ACC > ACC00146
ACC > ACC00148
ACC > ACC00151
ACC > ACC00152
ACC > ACC00153
ACC > ACC00207
ACC > ACC00208
ACC > ACC00222
ACC > ACC00712
ACC > ACC00713
ACC > ACC00714
ACC > ACC00715
ACC > ACC00716
ACC > ACC00717
ACC > ACC00718
ACC > ACC00724
ACC > ACC03032
ACC > ACC03043
ACC > ACC10179
ACC > ACC10707
ACC > ACC71210
ACC > ACC81210
ACC > ACC91210
ACC > ACC92110
ACC > ACC92210
ACC > ACC92211
ACC > ACC92212
ACC > ACC93110
ACC > ACC93111
ACC > ACC93112
ACC > ACC93210
ACC > ACC93211
AGR > AGR00214
AGR > AGR00215
AGR > AGR03072
AGR > AGR03089
AGT > AGT00217
AGT > AGT03090
ART > ART00406
ART > ART00407
ART > ART00408
ART > ART00456
ART > ART00498
ART > ART00600
ART > ART00601
ART > ART00602
ART > ART00621
ART > ART00622
ART > ART00623
ART > ART00624
ART > ART00625
ART > ART00626
ART > ART00630
ART > ART00641
ART > ART10002
ART > ART10003
ART > ART10004
ART > ART10005
ART > ART10094
ART > ART10095
ART > ART10096
ART > ART10275
ART > ART30003
ART > ART30004
ART > ART30005
ART > ART30006
ART > ART30007
ART > ART30008
ART > ART30009
ART > ART30010
ART > ART30011
ART > ART30012
ART > ART30013
ART > ART73000
BHS > BHS00130
BHS > BHS00156
BHS > BHS00360
BHS > BHS00361
BHS > BHS00362
BHS > BHS00363
BHS > BHS00364
BHS > BHS00365
BHS > BHS00366
BHS > BHS00367
BHS > BHS10495
BHS > BHS10581
BHS > BHS11001
BHS > BHS11002
BHS > BHS11003
BHS > BHS11004
BHS > BHS20001
BHS > BHS20006
BHS > BHS20007
BHS > BHS20008
BHS > BHS30001
BHS > BHS30002
BHS > BHS30003
BHS > BHS30004
BHS > BHS30005
BHS > BHS30006
BHS > BHS30007
BHS > BHS30008
BHS > BHS30009
BHS > BHS40001
BHS > BHS40002
BHS > BHS40003
BHS > BHS40004
BHS > BHS40005
BHS > BHS40006
BHS > BHS40007
BHS > BHS40008
BHS > BHS40009
BHS > BHS40010
BHS > BHS40011
BHS > BHS40012
BHS > BHS83001
BHS > BHS83002
BHS > BHS83003
BHS > BHS83004
BIO > BIO00101
BIO > BIO00102
BIO > BIO00105
BIO > BIO00201
BIO > BIO00202
BIO > BIO00203
BIO > BIO00204
BIO > BIO00207
BIO > BIO00209
BIO > BIO00212
BIO > BIO00213
BIO > BIO00232
BIO > BIO00233
BIO > BIO00244
BIO > BIO00307
BIO > BIO00324
BIO > BIO00326
BIO > BIO01204
BIO > BIO01209
BIO > BIO01230
BIO > BIO01302
BIO > BIO03073
BIO > BIO03075
BIO > BIO03076
BIO > BIO03095
BIO > BIO03096
BIO > BIO03097
BIO > BIO03098
BIO > BIO03099
BIO > BIO03101
BIO > BIO03102
BIO > BIO03103
BIO > BIO03202
BIO > BIO10001
BIO > BIO10120
BIO > BIO10121
BIO > BIO10123
BIO > BIO10124
BIO > BIO10125
BIO > BIO10126
BIO > BIO10127
BIO > BIO10185
BIO > BIO10187
BIO > BIO10454
BIO > BIO10467
BIO > BIO10493
BIO > BIO10494
BIO > BIO10496
BIO > BIO10497
BIO > BIO10587
BIO > BIO10662
BIO > BIO10701
BIO > BIO20001
BIO > BIO20002
BIO > BIO20003
BIO > BIO30001
BIO > BIO72020
BIO > BIO72025
BIO > BIO72050
BIO > BIO72100
BIO > BIO72130
BIO > BIO73020
BIO > BIO73050
BIO > BIO73060
BIO > BIO81001
BIO > BIO92005
BIO > BIO93010
BIO > BIO93015
BUS > BUS00211
BUS > BUS00212
BUS > BUS00213
BUS > BUS00214
BUS > BUS00758
BUS > BUS00913
BUS > BUS00914
BUS > BUS10699
BUS > BUS40001
BUS > BUS40002
BUS > BUS40003
BUS > BUS40004
BUS > BUS40005
BUS > BUS40006
BUS > BUS93001
BUS > BUS93210
CAR > CAR10001
CAR > CAR10002
CAR > CAR10003
CAR > CAR10503
CAR > CAR40003
CAR > CAR40004
CAR > CAR40005
CEP > CEP03361
CEP > CEP03362
CEP > CEP03363
CEP > CEP03364
CEP > CEP03365
CEP > CEP03366
CEP > CEP03367
CEP > CEP03368
CEP > CEP03369
CHE > CHE00002
CHE > CHE00073
CHE > CHE00201
CHE > CHE10700
CHE > CHE71010
CHE > CHE73005
CMM > CMM00001
CMM > CMM00002
CMM > CMM00003
CMM > CMM00004
CMM > CMM00705
CMM > CMM03140
CMM > CMM03189
CMM > CMM03211
CMM > CMM03214
CMM > CMM03250
CMM > CMM03251
CMM > CMM03253
CMM > CMM03254
CMM > CMM03255
CMM > CMM03256
CMM > CMM03257
CMM > CMM03260
CMM > CMM03262
CMM > CMM03371
CMM > CMM03373
CMM > CMM03374
CMM > CMM03375
CMM > CMM03379
CMM > CMM03381
CMM > CMM03382
CMM > CMM03415
CMM > CMM10469
CMM > CMM10471
CMM > CMM10580
CMM > CMM71001
CMM > CMM72015
CMM > CMM73010
CMM > CMM81001
CMM > CMM81002
CMM > CMM81003
CMM > CMM91010
CMM > CMM91025
CMM > CMM93001
CMM > CMM93002
CMM > CMM93010
CMP > CMP03305
CMP > CMP73010
CMP > CMP91020
COM > COM00207
COM > COM00439
COM > COM00446
COM > COM00447
COM > COM00455
COM > COM00456
COM > COM00461
COM > COM00471
COM > COM00481
COM > COM00482
COM > COM01402
COM > COM03420
COM > COM03422
COM > COM10001
COM > COM10081
COM > COM10082
COM > COM10110
COM > COM10111
COM > COM10112
COM > COM10113
COM > COM10295
COM > COM10499
COM > COM10627
COM > COM10628
COM > COM20001
COM > COM30001
COM > COM30002
COM > COM40006
COM > COM40007
COM > COM40008
COM > COM40015
COM > COM61001
CSC > CSC00228
CSC > CSC00235
CSC > CSC00240
CSC > CSC10210
CSC > CSC10214
CSC > CSC10215
CSC > CSC10216
CSC > CSC10217
CSC > CSC40002
CSC > CSC40003
CSC > CSC40004
CSC > CSC40005
CSC > CSC73010
CSL > CSL00113
CSL > CSL00114
CSL > CSL00120
CSL > CSL00164
CSL > CSL00231
CSL > CSL00416
CSL > CSL10242
CSL > CSL10243
CSL > CSL10297
CSL > CSL10553
CSL > CSL10554
CSL > CSL10555
CSL > CSL10556
CSL > CSL10557
CSL > CSL10558
CSL > CSL10559
CUL > CUL00210
CUL > CUL00211
CUL > CUL00401
CUL > CUL00402
CUL > CUL00408
CUL > CUL00409
CUL > CUL00410
CUL > CUL00411
CUL > CUL00412
CUL > CUL00413
CUL > CUL00414
CUL > CUL00415
CUL > CUL00420
CUR > CUR30001
CYS > CYS03340
CYS > CYS03341
CYS > CYS03342
CYS > CYS03343
CYS > CYS03344
CYS > CYS03345
CYS > CYS03346
CYS > CYS03347
CYS > CYS03350
CYS > CYS03351
CYS > CYS20001
CYS > CYS20002
CYS > CYS20003
CYS > CYS20004
CYS > CYS20005
DES > DES10634
DES > DES10635
DES > DES10636
DES > DES10637
DES > DES10638
DES > DES10639
DES > DES10641
DES > DES10642
DES > DES10643
DES > DES10648
DES > DES10649
DES > DES10650
DES > DES10651
DES > DES10652
DES > DES10653
DES > DES10654
ECO > ECO00202
ECO > ECO00424
ECO > ECO10250
ECO > ECO82001
ECO > ECO82210
EDU > EDU00017
EDU > EDU00018
EDU > EDU00298
EDU > EDU00352
EDU > EDU00353
EDU > EDU00401
EDU > EDU00402
EDU > EDU00404
EDU > EDU00405
EDU > EDU00412
EDU > EDU00413
EDU > EDU00414
EDU > EDU00415
EDU > EDU00416
EDU > EDU00417
EDU > EDU00418
EDU > EDU00550
EDU > EDU00554
EDU > EDU00558
EDU > EDU00733
EDU > EDU00751
EDU > EDU00754
EDU > EDU01021
EDU > EDU01022
EDU > EDU01029
EDU > EDU01104
EDU > EDU01105
EDU > EDU01143
EDU > EDU01144
EDU > EDU01145
EDU > EDU01146
EDU > EDU01153
EDU > EDU01154
EDU > EDU01246
EDU > EDU01247
EDU > EDU01264
EDU > EDU01286
EDU > EDU01290
EDU > EDU01304
EDU > EDU01308
EDU > EDU01550
EDU > EDU01551
EDU > EDU03133
EDU > EDU03134
EDU > EDU03138
EDU > EDU03235
EDU > EDU03264
EDU > EDU03335
EDU > EDU10001
EDU > EDU10002
EDU > EDU10003
EDU > EDU10005
EDU > EDU10010
EDU > EDU10011
EDU > EDU10128
EDU > EDU10129
EDU > EDU10130
EDU > EDU10131
EDU > EDU10132
EDU > EDU10172
EDU > EDU10294
EDU > EDU10445
EDU > EDU10446
EDU > EDU10447
EDU > EDU10448
EDU > EDU10449
EDU > EDU10513
EDU > EDU10514
EDU > EDU10629
EDU > EDU10631
EDU > EDU10632
EDU > EDU10633
EDU > EDU10690
EDU > EDU10691
EDU > EDU10692
EDU > EDU10693
EDU > EDU10694
EDU > EDU10710
EDU > EDU10711
EDU > EDU10712
EDU > EDU10713
EDU > EDU10714
EDU > EDU10715
EDU > EDU10716
EDU > EDU20001
EDU > EDU20002
EDU > EDU20003
EDU > EDU20004
EDU > EDU20005
EDU > EDU20006
EDU > EDU20007
EDU > EDU20008
EDU > EDU20009
EDU > EDU20010
EDU > EDU30002
EDU > EDU30003
EDU > EDU30004
EDU > EDU30005
EDU > EDU30006
EDU > EDU30007
EDU > EDU30008
EDU > EDU40003
EDU > EDU40004
EDU > EDU40005
EDU > EDU40006
EDU > EDU72001
EDU > EDU72002
EDU > EDU81001
EDU > EDU81002
EDU > EDU81003
EDU > EDU83001
EDU > EDU83002
EDU > EDU83003
EDU > EDU91001
EDU > EDU91002
EDU > EDU91003
EDU > EDU92001
EDU > EDU92002
EDU > EDU92003
EDU > EDU92004
EDU > EDU93001
EDU > EDU93002
ENG > ENG00351
ENG > ENG00355
ENG > ENG00400
ENG > ENG00401
ENG > ENG00406
ENG > ENG00407
ENG > ENG00408
ENG > ENG00411
ENG > ENG10001
ENG > ENG10002
ENG > ENG10004
ENG > ENG10010
ENG > ENG10022
ENG > ENG10757
ENG > ENG10758
ENG > ENG10759
ENG > ENG20001
ENG > ENG20002
ENG > ENG20003
ENG > ENG20005
ENG > ENG20006
ENG > ENG20007
ENG > ENG30002
ENG > ENG30004
ENG > ENG30005
ENG > ENG30007
ENG > ENG30009
ENG > ENG30010
ENG > ENG30011
ENG > ENG30012
ENG > ENG40001
ENG > ENG40004
ENG > ENG40005
ENG > ENG40006
ENG > ENG40007
ENG > ENG92050
ENI > ENI72001
ENI > ENI72005
ENI > ENI73001
ENI > ENI73005
ENI > ENI73009
ENI > ENI73015
ENI > ENI73020
ENI > ENI73025
ENI > ENI81005
ENI > ENI82005
ENI > ENI83005
ENI > ENI83015
ENI > ENI83040
ENM > ENM10197
ENM > ENM10640
ENO > ENO03200
ENO > ENO10183
ENO > ENO72001
ENO > ENO73001
ENO > ENO73005
ENP > ENP10645
ENP > ENP10646
ENS > ENS00203
ENS > ENS00218
ENV > ENV00207
ENV > ENV00224
ENV > ENV03117
ENV > ENV03398
ENV > ENV03399
ENV > ENV10655
ENV > ENV10656
ENV > ENV10702
ENV > ENV10705
ENV > ENV40006
ENV > ENV40007
ENV > ENV40008
ENV > ENV40009
FIN > FIN00126
FIN > FIN10252
FIN > FIN10254
FIN > FIN10708
FIN > FIN10709
FIN > FIN10710
FIN > FIN10711
FIN > FIN10712
FIN > FIN91110
FIN > FIN93001
FIN > FIN93210
FOR > FOR00100
FOR > FOR00101
FOR > FOR00102
FOR > FOR00103
FOR > FOR00104
FOR > FOR00105
FOR > FOR00106
FOR > FOR00107
FOR > FOR00108
FOR > FOR00109
FOR > FOR00110
FOR > FOR00112
FOR > FOR03019
FOR > FOR03081
FOR > FOR03082
FOR > FOR03083
FOR > FOR03084
FOR > FOR03085
FOR > FOR03105
FOR > FOR03106
FOR > FOR03107
FOR > FOR03108
FOR > FOR03110
FOR > FOR03111
FOR > FOR03169
FOR > FOR03170
FOR > FOR03198
FOR > FOR40006
FOR > FOR40007
FOR > FOR40008
FOR > FOR40009
FOR > FOR73010
GLY > GLY00201
GLY > GLY00223
GLY > GLY00232
GLY > GLY03113
GLY > GLY20001
GLY > GLY20002
GLY > GLY30001
GLY > GLY30002
GLY > GLY93010
HEA > HEA00331
HEA > HEA00332
HEA > HEA00501
HEA > HEA00502
HEA > HEA03414
HEA > HEA03416
HEA > HEA10001
HEA > HEA10002
HEA > HEA10003
HEA > HEA10200
HEA > HEA10201
HEA > HEA10202
HEA > HEA10203
HEA > HEA10204
HEA > HEA10704
HEA > HEA40001
HEA > HEA40002
HEA > HEA40003
HEA > HEA40004
HEA > HEA93001
HEA > HEA93020
HIS > HIS00235
HIS > HIS10016
HIS > HIS10018
HIS > HIS10725
HIS > HIS10726
HLT > HLT00255
HLT > HLT00257
HLT > HLT00259
HLT > HLT00260
HLT > HLT00266
HLT > HLT00267
HLT > HLT00274
HLT > HLT00275
HLT > HLT00278
HLT > HLT00279
HLT > HLT00302
HLT > HLT00303
HLT > HLT10115
HLT > HLT10118
HLT > HLT10119
HLT > HLT10481
HLT > HLT10482
HLT > HLT10483
HLT > HLT10484
HLT > HLT10485
HLT > HLT10486
HLT > HLT10511
HLT > HLT10512
HLT > HLT10582
HLT > HLT10583
HLT > HLT10584
HLT > HLT10585
HLT > HLT10586
HLT > HLT10588
HLT > HLT10589
HLT > HLT10590
HLT > HLT10591
HLT > HLT10592
HLT > HLT10593
HLT > HLT10594
HLT > HLT10595
HLT > HLT10596
HLT > HLT10597
HLT > HLT10598
HLT > HLT10599
HLT > HLT10600
HLT > HLT10601
HLT > HLT30001
HLT > HLT30002
HLT > HLT40005
HLT > HLT40006
HLT > HLT83001
HLT > HLT83002
HLT > HLT83003
HLT > HLT83004
HLT > HLT83005
HLT > HLT83006
HLT > HLT83007
HLT > HLT91001
HLT > HLT91002
HLT > HLT91061
HLT > HLT91099
HMS > HMS00202
HMS > HMS00203
HMS > HMS00220
HMS > HMS00223
HMS > HMS00224
HMS > HMS00225
HMS > HMS00226
HMS > HMS00328
HMS > HMS00423
HMS > HMS01202
HOS > HOS03417
HOS > HOS03421
HOS > HOS03423
HOS > HOS10199
HOS > HOS10644
HUM > HUM00270
HUM > HUM00271
HUM > HUM00272
HUM > HUM00273
HUM > HUM00274
HUM > HUM00275
HUM > HUM10001
HUM > HUM10310
HUM > HUM10315
IHE > IHE03386
IST > IST00151
IST > IST00152
IST > IST00211
IST > IST00212
IST > IST00365
IST > IST00451
IST > IST00453
IST > IST00454
IST > IST00551
IST > IST03301
IST > IST03302
IST > IST03303
IST > IST03304
ISY > ISY00241
ISY > ISY00243
ISY > ISY00244
ISY > ISY00245
ISY > ISY00246
ISY > ISY00324
ISY > ISY00325
ISY > ISY00550
ISY > ISY00551
ISY > ISY00552
ISY > ISY00740
ISY > ISY01224
ISY > ISY03087
ISY > ISY10056
ISY > ISY10058
ISY > ISY10209
ISY > ISY10212
ISY > ISY10221
ISY > ISY10222
ISY > ISY10621
ISY > ISY10622
ISY > ISY10623
ISY > ISY10624
ISY > ISY73010
ISY > ISY91015
ISY > ISY92115
ISY > ISY93205
ISY > ISY93210
LAN > LAN10001
LAN > LAN10002
LAN > LAN20001
LAN > LAN20002
LAW > LAW00004
LAW > LAW00050
LAW > LAW00051
LAW > LAW00052
LAW > LAW00053
LAW > LAW00054
LAW > LAW00055
LAW > LAW00056
LAW > LAW00057
LAW > LAW00058
LAW > LAW00059
LAW > LAW00061
LAW > LAW00062
LAW > LAW00104
LAW > LAW00106
LAW > LAW00107
LAW > LAW00108
LAW > LAW00111
LAW > LAW00112
LAW > LAW00114
LAW > LAW00115
LAW > LAW00116
LAW > LAW00117
LAW > LAW00118
LAW > LAW00119
LAW > LAW00120
LAW > LAW00121
LAW > LAW00122
LAW > LAW00123
LAW > LAW00124
LAW > LAW00125
LAW > LAW00126
LAW > LAW00128
LAW > LAW00150
LAW > LAW00203
LAW > LAW00214
LAW > LAW00215
LAW > LAW00216
LAW > LAW00514
LAW > LAW00516
LAW > LAW00519
LAW > LAW00520
LAW > LAW00521
LAW > LAW00522
LAW > LAW00523
LAW > LAW00524
LAW > LAW00525
LAW > LAW00526
LAW > LAW00527
LAW > LAW00528
LAW > LAW00529
LAW > LAW00701
LAW > LAW00720
LAW > LAW01125
LAW > LAW10001
LAW > LAW10002
LAW > LAW10003
LAW > LAW10004
LAW > LAW10068
LAW > LAW10069
LAW > LAW10070
LAW > LAW10157
LAW > LAW10158
LAW > LAW10159
LAW > LAW10160
LAW > LAW10166
LAW > LAW10167
LAW > LAW10168
LAW > LAW10169
LAW > LAW10170
LAW > LAW10171
LAW > LAW10177
LAW > LAW10178
LAW > LAW10180
LAW > LAW10181
LAW > LAW10206
LAW > LAW10207
LAW > LAW10288
LAW > LAW10292
LAW > LAW10472
LAW > LAW10487
LAW > LAW10488
LAW > LAW10489
LAW > LAW10490
LAW > LAW10491
LAW > LAW10527
LAW > LAW10698
LAW > LAW10727
LAW > LAW20001
LAW > LAW30001
LAW > LAW30002
LAW > LAW30003
LAW > LAW30004
LAW > LAW30005
LAW > LAW71005
LAW > LAW72001
LAW > LAW72002
LAW > LAW72005
LAW > LAW72006
LAW > LAW72009
LAW > LAW72010
LAW > LAW72012
LAW > LAW73003
LAW > LAW81110
LAW > LAW81210
MAT > MAT00211
MAT > MAT00330
MAT > MAT00722
MAT > MAT00792
MAT > MAT03088
MAT > MAT03372
MAT > MAT10001
MAT > MAT10002
MAT > MAT10251
MAT > MAT10706
MAT > MAT10718
MAT > MAT10719
MAT > MAT10720
MAT > MAT10721
MAT > MAT10722
MAT > MAT30001
MAT > MAT30002
MAT > MAT71215
MAT > MAT83001
MAT > MAT83002
MAT > MAT93010
MDC > MDC72010
MKT > MKT00075
MKT > MKT00102
MKT > MKT00106
MKT > MKT00127
MKT > MKT00128
MKT > MKT00150
MKT > MKT00204
MKT > MKT00205
MKT > MKT00320
MKT > MKT00720
MKT > MKT00724
MKT > MKT00905
MKT > MKT01221
MKT > MKT01222
MKT > MKT01223
MKT > MKT01224
MKT > MKT01420
MKT > MKT01425
MKT > MKT01759
MKT > MKT01760
MKT > MKT01762
MKT > MKT01906
MKT > MKT01907
MKT > MKT01909
MKT > MKT10722
MKT > MKT10723
MKT > MKT10724
MKT > MKT10725
MKT > MKT10726
MKT > MKT10727
MKT > MKT20001
MKT > MKT82210
MNG > MNG00085
MNG > MNG00114
MNG > MNG00135
MNG > MNG00167
MNG > MNG00272
MNG > MNG00273
MNG > MNG00301
MNG > MNG00303
MNG > MNG00305
MNG > MNG00306
MNG > MNG00307
MNG > MNG00311
MNG > MNG00313
MNG > MNG00314
MNG > MNG00316
MNG > MNG00415
MNG > MNG00417
MNG > MNG00418
MNG > MNG00421
MNG > MNG00427
MNG > MNG00431
MNG > MNG00440
MNG > MNG00441
MNG > MNG00501
MNG > MNG00503
MNG > MNG00510
MNG > MNG00703
MNG > MNG00704
MNG > MNG00716
MNG > MNG00723
MNG > MNG00724
MNG > MNG00725
MNG > MNG00737
MNG > MNG00755
MNG > MNG00756
MNG > MNG00757
MNG > MNG00784
MNG > MNG00785
MNG > MNG00786
MNG > MNG00789
MNG > MNG00791
MNG > MNG00912
MNG > MNG01222
MNG > MNG01301
MNG > MNG01302
MNG > MNG01413
MNG > MNG03011
MNG > MNG03012
MNG > MNG03047
MNG > MNG03048
MNG > MNG03067
MNG > MNG03121
MNG > MNG03208
MNG > MNG03217
MNG > MNG03218
MNG > MNG03219
MNG > MNG03236
MNG > MNG03237
MNG > MNG03258
MNG > MNG03264
MNG > MNG03281
MNG > MNG03358
MNG > MNG03359
MNG > MNG03390
MNG > MNG03391
MNG > MNG03392
MNG > MNG03393
MNG > MNG03395
MNG > MNG03400
MNG > MNG03401
MNG > MNG03419
MNG > MNG03424
MNG > MNG10001
MNG > MNG10002
MNG > MNG10193
MNG > MNG10226
MNG > MNG10228
MNG > MNG10247
MNG > MNG10253
MNG > MNG10291
MNG > MNG10476
MNG > MNG10526
MNG > MNG10695
MNG > MNG10696
MNG > MNG10697
MNG > MNG10713
MNG > MNG10714
MNG > MNG10715
MNG > MNG10716
MNG > MNG10717
MNG > MNG10718
MNG > MNG10719
MNG > MNG10720
MNG > MNG10721
MNG > MNG10723
MNG > MNG10724
MNG > MNG10728
MNG > MNG10729
MNG > MNG10730
MNG > MNG10800
MNG > MNG10801
MNG > MNG10802
MNG > MNG20001
MNG > MNG20002
MNG > MNG20003
MNG > MNG20004
MNG > MNG20006
MNG > MNG20007
MNG > MNG40005
MNG > MNG40006
MNG > MNG40007
MNG > MNG40033
MNG > MNG72005
MNG > MNG73005
MNG > MNG73006
MNG > MNG82001
MNG > MNG82210
MNG > MNG89022
MNG > MNG91002
MNG > MNG91210
MNG > MNG91211
MNG > MNG91212
MNG > MNG91214
MNG > MNG91215
MNG > MNG91217
MNG > MNG91218
MNG > MNG91220
MNG > MNG91225
MNG > MNG92210
MNG > MNG92211
MNG > MNG92220
MNG > MNG92230
MNG > MNG92305
MNG > MNG93001
MNG > MNG93002
MNG > MNG93003
MNG > MNG93210
MNG > MNG93211
MNG > MNG93213
MNG > MNG93214
MNG > MNG93215
MNG > MNG93217
MNG > MNG93218
MNG > MNG93220
MNG > MNG93255
MUS > MUS00497
MUS > MUS00620
MUS > MUS00621
MUS > MUS00630
MUS > MUS10501
MUS > MUS10502
MUS > MUS10503
MUS > MUS10504
MUS > MUS10505
MUS > MUS10506
MUS > MUS10507
MUS > MUS10508
MUS > MUS10509
MUS > MUS10524
MUS > MUS10525
MUS > MUS10531
MUS > MUS10532
MUS > MUS10533
MUS > MUS10534
MUS > MUS10541
MUS > MUS10542
MUS > MUS10543
MUS > MUS10544
MUS > MUS10545
MUS > MUS10546
MUS > MUS10547
MUS > MUS10548
MUS > MUS10550
MUS > MUS10551
MUS > MUS10552
MUS > MUS71001
MUS > MUS71002
MUS > MUS71003
MUS > MUS71005
MUS > MUS71006
MUS > MUS71007
MUS > MUS71008
MUS > MUS71010
MUS > MUS71011
MUS > MUS72003
MUS > MUS72004
MUS > MUS72005
MUS > MUS72006
MUS > MUS72007
MUS > MUS72010
MUS > MUS72011
MUS > MUS73001
MUS > MUS73005
MUS > MUS73006
MUS > MUS73009
MUS > MUS73010
MUS > MUS73015
MUS > MUS73016
MWF > MWF10661
MWF > MWF10663
MWF > MWF10681
MWF > MWF10745
MWF > MWF10746
MWF > MWF10747
MWF > MWF20001
MWF > MWF20002
MWF > MWF20003
MWF > MWF20004
MWF > MWF20005
MWF > MWF30001
MWF > MWF30002
MWF > MWF30003
MWF > MWF30004
MWF > MWF30005
MWF > MWF93001
MWF > MWF93002
MWF > MWF93003
MWF > MWF93004
NRS > NRS00610
NRS > NRS00611
NRS > NRS00612
NRS > NRS00613
NRS > NRS10455
NRS > NRS10456
NRS > NRS10457
NRS > NRS10458
NRS > NRS10459
NRS > NRS10460
NRS > NRS10461
NRS > NRS10465
NRS > NRS10466
NRS > NRS10468
NRS > NRS10470
NRS > NRS10731
NRS > NRS10732
NRS > NRS10733
NRS > NRS10734
NRS > NRS20001
NRS > NRS20002
NRS > NRS20003
NRS > NRS20004
NRS > NRS20005
NRS > NRS20006
NRS > NRS30001
NRS > NRS30002
NRS > NRS30003
NRS > NRS30004
NRS > NRS30005
NRS > NRS30006
NRS > NRS71001
NRS > NRS71003
NRS > NRS71005
NRS > NRS72001
NRS > NRS72003
NRS > NRS72005
NRS > NRS72007
NRS > NRS72009
NRS > NRS73001
NRS > NRS73005
NRS > NRS73007
NRS > NRS73009
NRS > NRS81001
NRS > NRS81002
NRS > NRS82005
NUT > NUT00214
NUT > NUT00215
NUT > NUT00216
NUT > NUT00217
NUT > NUT00330
OST > OST03321
OST > OST03322
OST > OST03323
OST > OST03324
OST > OST03325
OST > OST03326
OST > OST03327
OST > OST03328
OST > OST03329
OST > OST03330
OST > OST03331
OST > OST03332
OST > OST71005
OST > OST71006
OST > OST72001
OST > OST73002
OST > OST81001
OST > OST82001
OST > OST82002
OST > OST82005
PDT > PDT10001
PDT > PDT20001
PDT > PDT20002
PDT > PDT20004
PDT > PDT20005
PDT > PDT20006
PDT > PDT30001
PDT > PDT30002
PDT > PDT30003
PDT > PDT30004
PDT > PDT30005
PDT > PDT30006
PDT > PDT40001
PDT > PDT73005
PDT > PDT73006
PDT > PDT73007
PHA > PHA00315
PHA > PHA30001
PHY > PHY10760
PHY > PHY71030
PLN > PLN10001
PLN > PLN10002
PLN > PLN20001
PLN > PLN20002
PLN > PLN20003
PLN > PLN20004
PLN > PLN20005
PLN > PLN83001
PLN > PLN83002
PLN > PLN83003
POL > POL00005
POL > POL00010
POL > POL00013
POL > POL00131
POL > POL10023
POL > POL10024
POL > POL10244
POL > POL20001
POL > POL30001
SCI > SCI00211
SCI > SCI00419
SCI > SCI00428
SCI > SCI03071
SCI > SCI03072
SCI > SCI10001
SCI > SCI10002
SCI > SCI10003
SCI > SCI10473
SCI > SCI10474
SCI > SCI10475
SCI > SCI10703
SCI > SCI11005
SCI > SCI11006
SCI > SCI20001
SCI > SCI73020
SCI > SCI83011
SCI > SCI83012
SCI > SCI83013
SCI > SCI83014
SCI > SCI91001
SCI > SCI93003
SCI > SCI93004
SEC > SEC10647
SOC > SOC00107
SOC > SOC00112
SOC > SOC00115
SOC > SOC00118
SOC > SOC00368
SOC > SOC00417
SOC > SOC01123
SOC > SOC03402
SOC > SOC03418
SOC > SOC10027
SOC > SOC10205
SOC > SOC10236
SOC > SOC10245
SOC > SOC10246
SOC > SOC10274
SOC > SOC10296
SOC > SOC10399
SOC > SOC10400
SOC > SOC10430
SOC > SOC20001
SOC > SOC20002
SOC > SOC20003
SOC > SOC30001
SOC > SOC40009
SOC > SOC40010
SOC > SOC40011
SOC > SOC40021
SOC > SOC40022
SOC > SOC40023
SOC > SOC89022
SOY > SOY00011
SOY > SOY00012
SOY > SOY00159
SOY > SOY00204
SOY > SOY00247
SOY > SOY00411
SOY > SOY00412
SOY > SOY00419
SOY > SOY10097
SOY > SOY10098
SOY > SOY10105
SOY > SOY10107
SOY > SOY10108
SOY > SOY10114
SOY > SOY10196
SPT > SPT10001
SPT > SPT10002
SPT > SPT20002
SPT > SPT20003
SPT > SPT20004
SPT > SPT20005
SPT > SPT20006
SPT > SPT20007
SPT > SPT30001
SPT > SPT30002
SPT > SPT30003
SPT > SPT30004
SPT > SPT40001
SPT > SPT40002
SUR > SUR00201
TCH > TCH03193
TCH > TCH03194
TCH > TCH03195
TCH > TCH03196
TCH > TCH03409
TCH > TCH03410
TCH > TCH03411
TCH > TCH03412
TCH > TCH03413
TCH > TCH10005
TCH > TCH10007
TCH > TCH10008
TCH > TCH10014
TCH > TCH10134
TCH > TCH10135
TCH > TCH10136
TCH > TCH10138
TCH > TCH10174
TCH > TCH10175
TCH > TCH10303
TCH > TCH10304
TCH > TCH10515
TCH > TCH10516
TCH > TCH10517
TCH > TCH10518
TCH > TCH10519
TCH > TCH10521
TCH > TCH10522
TCH > TCH10630
TCH > TCH10709
TCH > TCH20001
TCH > TCH20002
TCH > TCH20003
TCH > TCH30001
TCH > TCH30002
TCH > TCH81001
TCH > TCH81002
TCH > TCH81003
TCH > TCH82001
TCH > TCH82002
TCH > TCH83001
TCH > TCH93001
TRM > TRM20001
WEL > WEL30001
WEL > WEL30002
WEL > WEL91002
WEL > WEL91003
WEL > WEL91004
WEL > WEL91005
WEL > WEL91006
WEL > WEL91007
WEL > WEL92001
WEL > WEL92002
WEL > WEL92003
WEL > WEL92004
WEL > WEL92005
WEL > WEL92006
WRI > WRI10001
WRI > WRI10002
WRI > WRI10003
WRI > WRI20001
WRI > WRI20002
WRI > WRI20003
WRI > WRI20004
              ]]></content>
          </queryExpEntry>
      </queryexpansion>
  </config>
  <signature><![CDATA[
a327e49934f69037f8adf7d4e5e6dc02dccf38a4
  ]]></signature>
</eef>
